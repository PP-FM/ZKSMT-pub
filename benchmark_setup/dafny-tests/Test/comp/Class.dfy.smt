(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 100))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@181  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (=> (and (= $generated@@177 ($generated@@157 0)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@157 0) $generated@@177) (< $generated@@177 100))))))
(let (($generated@@182  (=> (and (and ($generated@@178 $generated@@175) ($generated@@179 $generated@@175)) (and (= 1 $generated@@180) (= (ControlFlow 0 3) 2))) $generated@@181)))
$generated@@182)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@181  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (=> (and (= $generated@@177 ($generated@@157 1)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@157 0) $generated@@177) (< $generated@@177 100))))))
(let (($generated@@182  (=> (and (and ($generated@@178 $generated@@175) ($generated@@179 $generated@@175)) (and (= 1 $generated@@180) (= (ControlFlow 0 3) 2))) $generated@@181)))
$generated@@182)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@181  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (=> (and (= $generated@@177 ($generated@@157 2)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@157 0) $generated@@177) (< $generated@@177 100))))))
(let (($generated@@182  (=> (and (and ($generated@@178 $generated@@175) ($generated@@179 $generated@@175)) (and (= 1 $generated@@180) (= (ControlFlow 0 3) 2))) $generated@@181)))
$generated@@182)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@181  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (=> (and (= $generated@@177 ($generated@@157 3)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@157 0) $generated@@177) (< $generated@@177 100))))))
(let (($generated@@182  (=> (and (and ($generated@@178 $generated@@175) ($generated@@179 $generated@@175)) (and (= 1 $generated@@180) (= (ControlFlow 0 3) 2))) $generated@@181)))
$generated@@182)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 (T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@T T@T) T@U)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@T) T@U)
(declare-fun $generated@@232 (Int) T@U)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 (T@T T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@238 (T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@241 () T@T)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (Int) Int)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@288 (T@U T@U T@U) Bool)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@309 () Int)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@347 (T@T T@U) T@U)
(declare-fun $generated@@351 (T@U Int) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@616 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (= ($generated@@1 ($generated@@236 $generated@@242 $generated@@243)) 17)) (forall (($generated@@244 T@T) ($generated@@245 T@T) ) (! (= ($generated@@237 ($generated@@236 $generated@@244 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@236 $generated@@244 $generated@@245))
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= ($generated@@238 ($generated@@236 $generated@@246 $generated@@247)) $generated@@247)
 :pattern ( ($generated@@236 $generated@@246 $generated@@247))
))) (= (type $generated@@224) ($generated@@236 $generated@@150 $generated@@150))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(let (($generated@@252 (type $generated@@249)))
(= (type ($generated@@225 $generated@@248 $generated@@249 $generated@@250)) ($generated@@236 $generated@@252 $generated@@251))))
 :pattern ( ($generated@@225 $generated@@248 $generated@@249 $generated@@250))
))) (forall (($generated@@253 T@T) ($generated@@254 T@T) ) (! (= (type ($generated@@226 $generated@@253 $generated@@254)) ($generated@@236 $generated@@253 $generated@@254))
 :pattern ( ($generated@@226 $generated@@253 $generated@@254))
))) (forall (($generated@@255 T@U) ) (! (= (type ($generated@@227 $generated@@255)) $generated@@150)
 :pattern ( ($generated@@227 $generated@@255))
))) (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@229 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@229 $generated@@256))
))) (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@239 $generated@@258)) 18))) (forall (($generated@@259 T@T) ) (! (= ($generated@@240 ($generated@@239 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@239 $generated@@259))
))) (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@230 $generated@@260 $generated@@261)) ($generated@@239 $generated@@262)))
 :pattern ( ($generated@@230 $generated@@260 $generated@@261))
))) (forall (($generated@@263 T@T) ) (! (= (type ($generated@@231 $generated@@263)) ($generated@@239 $generated@@263))
 :pattern ( ($generated@@231 $generated@@263))
))) (= ($generated@@1 $generated@@241) 19)) (forall (($generated@@264 Int) ) (! (= (type ($generated@@232 $generated@@264)) $generated@@241)
 :pattern ( ($generated@@232 $generated@@264))
))))
(assert (= $generated@@224 ($generated@@225 ($generated@@225 ($generated@@225 ($generated@@225 ($generated@@226 $generated@@150 $generated@@150) ($generated@@227 ($generated@@8 $generated@@228)) ($generated@@227 ($generated@@229 ($generated@@230 ($generated@@230 ($generated@@230 ($generated@@230 ($generated@@230 ($generated@@231 $generated@@150) ($generated@@227 ($generated@@232 104))) ($generated@@227 ($generated@@232 101))) ($generated@@227 ($generated@@232 108))) ($generated@@227 ($generated@@232 108))) ($generated@@227 ($generated@@232 111)))))) ($generated@@227 ($generated@@8 $generated@@233)) ($generated@@227 ($generated@@229 ($generated@@230 ($generated@@230 ($generated@@231 $generated@@150) ($generated@@227 ($generated@@232 104))) ($generated@@227 ($generated@@232 105)))))) ($generated@@227 ($generated@@8 $generated@@234)) ($generated@@227 ($generated@@229 ($generated@@230 ($generated@@230 ($generated@@230 ($generated@@231 $generated@@150) ($generated@@227 ($generated@@232 98))) ($generated@@227 ($generated@@232 121))) ($generated@@227 ($generated@@232 101)))))) ($generated@@227 ($generated@@8 $generated@@235)) ($generated@@227 ($generated@@229 ($generated@@230 ($generated@@230 ($generated@@230 ($generated@@230 ($generated@@230 ($generated@@231 $generated@@150) ($generated@@227 ($generated@@232 108))) ($generated@@227 ($generated@@232 97))) ($generated@@227 ($generated@@232 116))) ($generated@@227 ($generated@@232 101))) ($generated@@227 ($generated@@232 114))))))))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@141) (= (type $generated@@266) $generated@@141)) (= ($generated@@147 $generated@@265 $generated@@266) (= $generated@@265 $generated@@266)))
 :pattern ( ($generated@@147 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@66)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@270) $generated@@66)) (= ($generated@@137 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@150) ($generated@@0 ($generated@@83 $generated@@269 $generated@@271))) ($generated@@217 $generated@@271 $generated@@270))
 :pattern ( ($generated@@83 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@137 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@66)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@275) $generated@@66)) (= ($generated@@137 $generated@@274 ($generated@@272 $generated@@275)) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@150) ($generated@@0 ($generated@@83 $generated@@274 $generated@@276))) ($generated@@217 $generated@@276 $generated@@275))
 :pattern ( ($generated@@83 $generated@@274 $generated@@276))
))))
 :pattern ( ($generated@@137 $generated@@274 ($generated@@272 $generated@@275)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@277 $generated@@278) $generated@@278)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (= ($generated@@229 $generated@@279) $generated@@279)
 :pattern ( ($generated@@229 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@66)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (= (type $generated@@282) ($generated@@239 $generated@@150)) (= (type $generated@@283) $generated@@150)) (= (type $generated@@284) $generated@@66)) (and ($generated@@137 $generated@@282 ($generated@@280 $generated@@284)) ($generated@@217 $generated@@283 $generated@@284))) ($generated@@137 ($generated@@230 $generated@@282 $generated@@283) ($generated@@280 $generated@@284)))
 :pattern ( ($generated@@137 ($generated@@230 $generated@@282 $generated@@283) ($generated@@280 $generated@@284)))
)))
(assert (forall (($generated@@286 Int) ) (!  (=> (and (<= 0 $generated@@286) (< $generated@@286 65536)) (= ($generated@@285 ($generated@@232 $generated@@286)) $generated@@286))
 :pattern ( ($generated@@232 $generated@@286))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) $generated@@66) (= (type $generated@@290) $generated@@66)) (= (type $generated@@291) $generated@@150)) (= (type $generated@@292) $generated@@150)) (= (type $generated@@293) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@287 $generated@@293)) (= ($generated@@76 ($generated@@216 $generated@@291 $generated@@292) ($generated@@140 $generated@@289 $generated@@290) $generated@@293)  (and ($generated@@288 $generated@@291 $generated@@289 $generated@@293) ($generated@@288 $generated@@292 $generated@@290 $generated@@293))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@291 $generated@@292) ($generated@@140 $generated@@289 $generated@@290) $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@70)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@141) (= ($generated@@139 $generated@@296) (= ($generated@@294 $generated@@296) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@141) ($generated@@139 $generated@@297)) (exists (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (and (and (= (type $generated@@298) $generated@@150) (= (type $generated@@299) $generated@@150)) (= $generated@@297 ($generated@@216 $generated@@298 $generated@@299)))
 :no-pattern (type $generated@@298)
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
)))
 :pattern ( ($generated@@139 $generated@@297))
)))
(assert (forall (($generated@@301 T@T) ) (! (= ($generated@@300 ($generated@@231 $generated@@301)) 0)
 :pattern ( ($generated@@231 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (! (let (($generated@@304 (type $generated@@303)))
 (=> (= (type $generated@@302) ($generated@@239 $generated@@304)) (= ($generated@@300 ($generated@@230 $generated@@302 $generated@@303)) (+ 1 ($generated@@300 $generated@@302)))))
 :pattern ( ($generated@@230 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@241) (and (and (= ($generated@@232 ($generated@@285 $generated@@305)) $generated@@305) (<= 0 ($generated@@285 $generated@@305))) (< ($generated@@285 $generated@@305) 65536)))
 :pattern ( ($generated@@285 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@66) (= (type $generated@@308) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@288 ($generated@@227 $generated@@306) $generated@@307 $generated@@308) ($generated@@76 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@288 ($generated@@227 $generated@@306) $generated@@307 $generated@@308))
)))
(assert  (=> (< 1 $generated@@309) ($generated@@137 ($generated@@8 $generated@@228) $generated@@134)))
(assert  (=> (< 1 $generated@@309) ($generated@@137 ($generated@@8 $generated@@233) $generated@@134)))
(assert  (=> (< 1 $generated@@309) ($generated@@137 ($generated@@8 $generated@@234) $generated@@134)))
(assert  (=> (< 1 $generated@@309) ($generated@@137 ($generated@@8 $generated@@235) $generated@@134)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@78 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@81 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@78 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@83 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@237 (type $generated@@317))))
(= (type ($generated@@316 $generated@@317)) ($generated@@78 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@83 ($generated@@316 ($generated@@226 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@83 ($generated@@316 ($generated@@226 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 20)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@78 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@83 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@83 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (=> (< 1 $generated@@309) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) ($generated@@78 $generated@@79 $generated@@80)) ($generated@@287 $generated@@340)) ($generated@@76 ($generated@@8 $generated@@228) $generated@@134 $generated@@340))
 :pattern ( ($generated@@76 ($generated@@8 $generated@@228) $generated@@134 $generated@@340))
))))
(assert  (=> (< 1 $generated@@309) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) ($generated@@78 $generated@@79 $generated@@80)) ($generated@@287 $generated@@341)) ($generated@@76 ($generated@@8 $generated@@233) $generated@@134 $generated@@341))
 :pattern ( ($generated@@76 ($generated@@8 $generated@@233) $generated@@134 $generated@@341))
))))
(assert  (=> (< 1 $generated@@309) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@78 $generated@@79 $generated@@80)) ($generated@@287 $generated@@342)) ($generated@@76 ($generated@@8 $generated@@234) $generated@@134 $generated@@342))
 :pattern ( ($generated@@76 ($generated@@8 $generated@@234) $generated@@134 $generated@@342))
))))
(assert  (=> (< 1 $generated@@309) (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) ($generated@@78 $generated@@79 $generated@@80)) ($generated@@287 $generated@@343)) ($generated@@76 ($generated@@8 $generated@@235) $generated@@134 $generated@@343))
 :pattern ( ($generated@@76 ($generated@@8 $generated@@235) $generated@@134 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@81 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@78 $generated@@345 $generated@@2)) (= ($generated@@156 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (and (<= 0 ($generated ($generated@@83 $generated@@344 $generated@@346))) (<= ($generated ($generated@@83 $generated@@344 $generated@@346)) ($generated@@310 $generated@@344))))
 :pattern ( ($generated@@83 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@156 $generated@@344))
)))
(assert (forall (($generated@@348 T@T) ($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@150) ($generated@@217 $generated@@350 $generated@@134)) (and (= ($generated@@227 ($generated@@347 $generated@@2 $generated@@350)) $generated@@350) ($generated@@137 ($generated@@347 $generated@@2 $generated@@350) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@350 $generated@@134))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 Int) ) (! (let (($generated@@354 ($generated@@240 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352 $generated@@353)) $generated@@354))
 :pattern ( ($generated@@351 $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 Int) ($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
 (=> (= (type $generated@@355) ($generated@@239 $generated@@358)) (and (=> (= $generated@@356 ($generated@@300 $generated@@355)) (= ($generated@@351 ($generated@@230 $generated@@355 $generated@@357) $generated@@356) $generated@@357)) (=> (not (= $generated@@356 ($generated@@300 $generated@@355))) (= ($generated@@351 ($generated@@230 $generated@@355 $generated@@357) $generated@@356) ($generated@@351 $generated@@355 $generated@@356))))))
 :pattern ( ($generated@@351 ($generated@@230 $generated@@355 $generated@@357) $generated@@356))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@238 (type $generated@@359))))
(let (($generated@@361 ($generated@@237 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@236 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@226 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@83 ($generated@@316 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@316 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@238 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@78 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@238 (type $generated@@366))))
(let (($generated@@368 ($generated@@237 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@236 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@226 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@83 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@326 (type $generated@@370))))
(let (($generated@@372 ($generated@@325 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@324 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@323 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@322 $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@326 (type $generated@@375))))
(= (type ($generated@@374 $generated@@375)) ($generated@@78 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@326 (type $generated@@377))))
(let (($generated@@379 ($generated@@325 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@324 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@323 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@378) ($generated@@0 ($generated@@83 ($generated@@374 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@382) $generated@@66)) (= ($generated@@137 $generated@@381 ($generated@@155 $generated@@382)) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@381 $generated@@383)))) ($generated@@217 $generated@@383 $generated@@382))
 :pattern ( ($generated@@83 $generated@@381 $generated@@383))
))))
 :pattern ( ($generated@@137 $generated@@381 ($generated@@155 $generated@@382)))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@66)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert  (=> (< 2 $generated@@309) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@78 $generated@@79 $generated@@80)) ($generated@@287 $generated@@387)) ($generated@@76 $generated@@224 ($generated@@384 $generated@@134 ($generated@@280 $generated@@45)) $generated@@387))
 :pattern ( ($generated@@76 $generated@@224 ($generated@@384 $generated@@134 ($generated@@280 $generated@@45)) $generated@@387))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@389) $generated@@66)) (= (type $generated@@390) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@388 ($generated@@267 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@150) ($generated@@0 ($generated@@83 $generated@@388 $generated@@391))) ($generated@@288 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@83 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@76 $generated@@388 ($generated@@267 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@393) $generated@@66)) (= (type $generated@@394) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@392 ($generated@@272 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@150) ($generated@@0 ($generated@@83 $generated@@392 $generated@@395))) ($generated@@288 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@83 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@76 $generated@@392 ($generated@@272 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(= ($generated ($generated@@83 ($generated@@311 $generated@@397) $generated@@396)) 0))
 :pattern ( (let (($generated@@397 (type $generated@@396)))
($generated@@83 ($generated@@311 $generated@@397) $generated@@396)))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@238 (type $generated@@401))))
(let (($generated@@403 ($generated@@237 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@78 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@236 $generated@@150 $generated@@150)) (= (type $generated@@405) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@83 ($generated@@316 $generated@@404) ($generated@@148 ($generated@@347 $generated@@141 $generated@@405)))) (= ($generated@@83 ($generated@@399 $generated@@404) ($generated@@148 ($generated@@347 $generated@@141 $generated@@405))) ($generated@@149 ($generated@@347 $generated@@141 $generated@@405))))))
 :pattern ( ($generated@@83 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@326 (type $generated@@409))))
(let (($generated@@411 ($generated@@325 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@78 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@324 $generated@@150 $generated@@150)) (= (type $generated@@413) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@83 ($generated@@322 $generated@@412) ($generated@@148 ($generated@@347 $generated@@141 $generated@@413)))) (= ($generated@@83 ($generated@@407 $generated@@412) ($generated@@148 ($generated@@347 $generated@@141 $generated@@413))) ($generated@@149 ($generated@@347 $generated@@141 $generated@@413))))))
 :pattern ( ($generated@@83 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@237 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@236 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@83 ($generated@@363 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@83 ($generated@@316 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@83 ($generated@@399 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@83 ($generated@@316 $generated@@414) $generated@@418))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@83 ($generated@@363 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@325 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@324 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@83 ($generated@@374 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@83 ($generated@@322 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@83 ($generated@@407 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@419) $generated@@423))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@236 $generated@@150 $generated@@150)) (= (type $generated@@425) $generated@@66)) (= (type $generated@@426) $generated@@66)) (= (type $generated@@427) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@424 ($generated@@384 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@316 $generated@@424) $generated@@428))) (and ($generated@@288 ($generated@@83 ($generated@@399 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@288 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@424) $generated@@428))
 :pattern ( ($generated@@83 ($generated@@316 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@76 $generated@@424 ($generated@@384 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@66)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@324 $generated@@150 $generated@@150)) (= (type $generated@@433) $generated@@66)) (= (type $generated@@434) $generated@@66)) (= (type $generated@@435) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@432) $generated@@436))) (and ($generated@@288 ($generated@@83 ($generated@@407 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@288 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@432) $generated@@436))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@76 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@78 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@326 (type $generated@@439))))
(let (($generated@@441 ($generated@@325 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@324 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@323 $generated@@441 $generated@@440)) (= ($generated@@322 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@322 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@326 (type $generated@@442))))
(let (($generated@@444 ($generated@@325 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@324 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@323 $generated@@444 $generated@@443)) (= ($generated@@374 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@374 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@326 (type $generated@@445))))
(let (($generated@@447 ($generated@@325 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@324 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@323 $generated@@447 $generated@@446)) (= ($generated@@406 $generated@@445) ($generated@@437 $generated@@150))))))
 :pattern ( ($generated@@406 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@238 (type $generated@@448))))
(let (($generated@@450 ($generated@@237 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@236 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@226 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@150) (= (type $generated@@452) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@398 $generated@@448) ($generated@@227 ($generated@@216 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@398 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@326 (type $generated@@453))))
(let (($generated@@455 ($generated@@325 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@324 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@323 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@150) (= (type $generated@@457) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@406 $generated@@453) ($generated@@227 ($generated@@216 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@406 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@150) ($generated@@217 $generated@@458 $generated@@46)) (and (= ($generated@@227 ($generated@@347 $generated@@2 $generated@@458)) $generated@@458) ($generated@@137 ($generated@@347 $generated@@2 $generated@@458) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@458 $generated@@46))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@150) ($generated@@217 $generated@@459 $generated@@47)) (and (= ($generated@@227 ($generated@@347 $generated@@3 $generated@@459)) $generated@@459) ($generated@@137 ($generated@@347 $generated@@3 $generated@@459) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@459 $generated@@47))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@150) ($generated@@217 $generated@@460 $generated@@44)) (and (= ($generated@@227 ($generated@@347 $generated@@4 $generated@@460)) $generated@@460) ($generated@@137 ($generated@@347 $generated@@4 $generated@@460) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@460 $generated@@44))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@150) ($generated@@217 $generated@@461 $generated@@45)) (and (= ($generated@@227 ($generated@@347 $generated@@241 $generated@@461)) $generated@@461) ($generated@@137 ($generated@@347 $generated@@241 $generated@@461) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@461 $generated@@45))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@66) (= ($generated@@217 ($generated@@227 $generated@@462) $generated@@463) ($generated@@137 $generated@@462 $generated@@463)))
 :pattern ( ($generated@@217 ($generated@@227 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@81 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@78 $generated@@465 $generated@@2)) (<= 0 ($generated@@310 $generated@@464))))
 :pattern ( ($generated@@310 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@240 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@239 $generated@@467)) (<= 0 ($generated@@300 $generated@@466))))
 :pattern ( ($generated@@300 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@384 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@384 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@66) (= (type $generated@@475) $generated@@66)) (= ($generated@@472 ($generated@@384 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@384 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@66) (= (type $generated@@477) $generated@@66)) (= ($generated@@74 ($generated@@384 $generated@@476 $generated@@477)) $generated@@58))
 :pattern ( ($generated@@384 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@66)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@66) (= (type $generated@@481) $generated@@66)) (= ($generated@@478 ($generated@@429 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@429 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@66)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@66) (= (type $generated@@485) $generated@@66)) (= ($generated@@482 ($generated@@429 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@429 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@66) (= (type $generated@@487) $generated@@66)) (= ($generated@@74 ($generated@@429 $generated@@486 $generated@@487)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@150) (= (type $generated@@489) $generated@@150)) (= ($generated@@294 ($generated@@216 $generated@@488 $generated@@489)) $generated@@61))
 :pattern ( ($generated@@216 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@66) (= (type $generated@@493) $generated@@66)) (= ($generated@@490 ($generated@@140 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@140 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@66) (= (type $generated@@497) $generated@@66)) (= ($generated@@494 ($generated@@140 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@140 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@150) (= (type $generated@@499) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@216 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@150) (= (type $generated@@501) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@216 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@239 $generated@@150)) (= (type $generated@@503) $generated@@66)) (= (type $generated@@504) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@502 ($generated@@280 $generated@@503) $generated@@504) (forall (($generated@@505 Int) ) (!  (=> (and (<= 0 $generated@@505) (< $generated@@505 ($generated@@300 $generated@@502))) ($generated@@288 ($generated@@351 $generated@@502 $generated@@505) $generated@@503 $generated@@504))
 :pattern ( ($generated@@351 $generated@@502 $generated@@505))
))))
 :pattern ( ($generated@@76 $generated@@502 ($generated@@280 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@506 ($generated@@77 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@77 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@508 ($generated@@267 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@267 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@74 ($generated@@267 $generated@@511)) $generated@@54))
 :pattern ( ($generated@@267 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@512 ($generated@@272 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@272 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@74 ($generated@@272 $generated@@515)) $generated@@55))
 :pattern ( ($generated@@272 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@66)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@516 ($generated@@155 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@155 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@519)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@66)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@66) (= ($generated@@520 ($generated@@280 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@280 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@66) (= ($generated@@74 ($generated@@280 $generated@@523)) $generated@@57))
 :pattern ( ($generated@@280 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(= ($generated@@347 $generated@@525 ($generated@@227 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@227 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@236 $generated@@150 $generated@@150)) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@66)) (= ($generated@@137 $generated@@526 ($generated@@384 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@316 $generated@@526) $generated@@529))) (and ($generated@@217 ($generated@@83 ($generated@@399 $generated@@526) $generated@@529) $generated@@528) ($generated@@217 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@526) $generated@@529))
 :pattern ( ($generated@@83 ($generated@@316 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@137 $generated@@526 ($generated@@384 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@324 $generated@@150 $generated@@150)) (= (type $generated@@531) $generated@@66)) (= (type $generated@@532) $generated@@66)) (= ($generated@@137 $generated@@530 ($generated@@429 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@530) $generated@@533))) (and ($generated@@217 ($generated@@83 ($generated@@407 $generated@@530) $generated@@533) $generated@@532) ($generated@@217 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@530) $generated@@533))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@137 $generated@@530 ($generated@@429 $generated@@531 $generated@@532)))
)))
(assert (= $generated@@228 ($generated@@277 0)))
(assert (= $generated@@233 ($generated@@277 1)))
(assert (= $generated@@234 ($generated@@277 2)))
(assert (= $generated@@235 ($generated@@277 3)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@150) (= (type $generated@@537) $generated@@150)) (< ($generated@@534 $generated@@536) ($generated@@535 ($generated@@216 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@216 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@150) (= (type $generated@@539) $generated@@150)) (< ($generated@@534 $generated@@539) ($generated@@535 ($generated@@216 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@216 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
(let (($generated@@545 (type $generated@@541)))
 (=> (and (= (type $generated@@540) ($generated@@236 $generated@@545 $generated@@544)) (= (type $generated@@542) $generated@@545)) (and (=> (= $generated@@542 $generated@@541) (and ($generated@@0 ($generated@@83 ($generated@@316 ($generated@@225 $generated@@540 $generated@@541 $generated@@543)) $generated@@542)) (= ($generated@@83 ($generated@@399 ($generated@@225 $generated@@540 $generated@@541 $generated@@543)) $generated@@542) $generated@@543))) (=> (not (= $generated@@542 $generated@@541)) (and (= ($generated@@0 ($generated@@83 ($generated@@316 ($generated@@225 $generated@@540 $generated@@541 $generated@@543)) $generated@@542)) ($generated@@0 ($generated@@83 ($generated@@316 $generated@@540) $generated@@542))) (= ($generated@@83 ($generated@@399 ($generated@@225 $generated@@540 $generated@@541 $generated@@543)) $generated@@542) ($generated@@83 ($generated@@399 $generated@@540) $generated@@542))))))))
 :pattern ( ($generated@@83 ($generated@@316 ($generated@@225 $generated@@540 $generated@@541 $generated@@543)) $generated@@542))
 :pattern ( ($generated@@83 ($generated@@399 ($generated@@225 $generated@@540 $generated@@541 $generated@@543)) $generated@@542))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@150) (= (type $generated@@547) $generated@@66)) (= (type $generated@@548) $generated@@66)) ($generated@@217 $generated@@546 ($generated@@384 $generated@@547 $generated@@548))) (and (= ($generated@@227 ($generated@@347 ($generated@@236 $generated@@150 $generated@@150) $generated@@546)) $generated@@546) ($generated@@137 ($generated@@347 ($generated@@236 $generated@@150 $generated@@150) $generated@@546) ($generated@@384 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@217 $generated@@546 ($generated@@384 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@150) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) $generated@@66)) ($generated@@217 $generated@@549 ($generated@@429 $generated@@550 $generated@@551))) (and (= ($generated@@227 ($generated@@347 ($generated@@324 $generated@@150 $generated@@150) $generated@@549)) $generated@@549) ($generated@@137 ($generated@@347 ($generated@@324 $generated@@150 $generated@@150) $generated@@549) ($generated@@429 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@217 $generated@@549 ($generated@@429 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@66) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) $generated@@150)) ($generated@@217 $generated@@554 ($generated@@140 $generated@@552 $generated@@553))) (and (= ($generated@@227 ($generated@@347 $generated@@141 $generated@@554)) $generated@@554) ($generated@@137 ($generated@@347 $generated@@141 $generated@@554) ($generated@@140 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@217 $generated@@554 ($generated@@140 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (not ($generated@@0 ($generated@@83 ($generated@@437 $generated@@556) $generated@@555))))
 :pattern ( (let (($generated@@556 (type $generated@@555)))
($generated@@83 ($generated@@437 $generated@@556) $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@71)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@66) (= (type $generated@@560) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@559 $generated@@560)) $generated@@62) (= ($generated@@557 ($generated@@140 $generated@@559 $generated@@560)) $generated@@64)))
 :pattern ( ($generated@@140 $generated@@559 $generated@@560))
)))
(assert  (and (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@240 (type $generated@@563))))
(= (type ($generated@@561 $generated@@563)) ($generated@@239 $generated@@564)))
 :pattern ( ($generated@@561 $generated@@563))
)) (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@240 (type $generated@@565))))
(= (type ($generated@@562 $generated@@565)) $generated@@566))
 :pattern ( ($generated@@562 $generated@@565))
))))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@568)))
 (=> (= (type $generated@@567) ($generated@@239 $generated@@569)) (and (= ($generated@@561 ($generated@@230 $generated@@567 $generated@@568)) $generated@@567) (= ($generated@@562 ($generated@@230 $generated@@567 $generated@@568)) $generated@@568))))
 :pattern ( ($generated@@230 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@141) (= ($generated@@534 ($generated@@227 $generated@@570)) ($generated@@535 $generated@@570)))
 :pattern ( ($generated@@534 ($generated@@227 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@150) ($generated@@217 $generated@@571 ($generated@@77 0))) (and (= ($generated@@227 ($generated@@347 $generated@@2 $generated@@571)) $generated@@571) ($generated@@137 ($generated@@347 ($generated@@78 $generated@@150 $generated@@4) $generated@@571) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@571 ($generated@@77 0)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@150) (= (type $generated@@573) $generated@@66)) ($generated@@217 $generated@@572 ($generated@@267 $generated@@573))) (and (= ($generated@@227 ($generated@@347 ($generated@@78 $generated@@150 $generated@@4) $generated@@572)) $generated@@572) ($generated@@137 ($generated@@347 ($generated@@78 $generated@@150 $generated@@4) $generated@@572) ($generated@@267 $generated@@573))))
 :pattern ( ($generated@@217 $generated@@572 ($generated@@267 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@150) (= (type $generated@@575) $generated@@66)) ($generated@@217 $generated@@574 ($generated@@272 $generated@@575))) (and (= ($generated@@227 ($generated@@347 ($generated@@78 $generated@@150 $generated@@4) $generated@@574)) $generated@@574) ($generated@@137 ($generated@@347 ($generated@@78 $generated@@150 $generated@@4) $generated@@574) ($generated@@272 $generated@@575))))
 :pattern ( ($generated@@217 $generated@@574 ($generated@@272 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@150) (= (type $generated@@577) $generated@@66)) ($generated@@217 $generated@@576 ($generated@@155 $generated@@577))) (and (= ($generated@@227 ($generated@@347 ($generated@@78 $generated@@150 $generated@@2) $generated@@576)) $generated@@576) ($generated@@137 ($generated@@347 ($generated@@78 $generated@@150 $generated@@2) $generated@@576) ($generated@@155 $generated@@577))))
 :pattern ( ($generated@@217 $generated@@576 ($generated@@155 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@150) (= (type $generated@@579) $generated@@66)) ($generated@@217 $generated@@578 ($generated@@280 $generated@@579))) (and (= ($generated@@227 ($generated@@347 ($generated@@239 $generated@@150) $generated@@578)) $generated@@578) ($generated@@137 ($generated@@347 ($generated@@239 $generated@@150) $generated@@578) ($generated@@280 $generated@@579))))
 :pattern ( ($generated@@217 $generated@@578 ($generated@@280 $generated@@579)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@557 $generated@@134) $generated@@65))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@581) $generated@@66)) (= (type $generated@@582) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@580 ($generated@@155 $generated@@581) $generated@@582) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@580 $generated@@583)))) ($generated@@288 $generated@@583 $generated@@581 $generated@@582))
 :pattern ( ($generated@@83 $generated@@580 $generated@@583))
))))
 :pattern ( ($generated@@76 $generated@@580 ($generated@@155 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@141) (= (type $generated@@585) $generated@@66)) (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@287 $generated@@586) (and ($generated@@139 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@66) ($generated@@76 $generated@@584 ($generated@@140 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@76 $generated@@584 ($generated@@140 $generated@@585 $generated@@587) $generated@@586))
))))) ($generated@@288 ($generated@@148 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@288 ($generated@@148 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@141) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@287 $generated@@590) (and ($generated@@139 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@66) ($generated@@76 $generated@@588 ($generated@@140 $generated@@591 $generated@@589) $generated@@590))
 :pattern ( ($generated@@76 $generated@@588 ($generated@@140 $generated@@591 $generated@@589) $generated@@590))
))))) ($generated@@288 ($generated@@149 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@288 ($generated@@149 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@2) (= ($generated@@137 $generated@@592 $generated@@134)  (and (<= ($generated@@277 0) ($generated $generated@@592)) (< ($generated $generated@@592) 100))))
 :pattern ( ($generated@@137 $generated@@592 $generated@@134))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@150) (= (type $generated@@594) $generated@@150)) (= ($generated@@216 ($generated@@229 $generated@@593) ($generated@@229 $generated@@594)) ($generated@@229 ($generated@@216 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@216 ($generated@@229 $generated@@593) ($generated@@229 $generated@@594)))
)))
(assert (forall (($generated@@595 Int) ) (! (= ($generated@@227 ($generated@@8 ($generated@@277 $generated@@595))) ($generated@@229 ($generated@@227 ($generated@@8 $generated@@595))))
 :pattern ( ($generated@@227 ($generated@@8 ($generated@@277 $generated@@595))))
)))
(assert (forall (($generated@@596 T@U) ) (! (= ($generated@@227 ($generated@@229 $generated@@596)) ($generated@@229 ($generated@@227 $generated@@596)))
 :pattern ( ($generated@@227 ($generated@@229 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 ($generated@@240 (type $generated@@597))))
 (=> (and (= (type $generated@@597) ($generated@@239 $generated@@598)) (= ($generated@@300 $generated@@597) 0)) (= $generated@@597 ($generated@@231 $generated@@598))))
 :pattern ( ($generated@@300 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (! (let (($generated@@602 (type $generated@@600)))
 (=> (and (and (= (type $generated@@599) ($generated@@78 $generated@@602 $generated@@2)) (= (type $generated@@601) $generated@@2)) (<= 0 ($generated $generated@@601))) (= ($generated@@310 ($generated@@84 $generated@@599 $generated@@600 $generated@@601)) (+ (- ($generated@@310 $generated@@599) ($generated ($generated@@83 $generated@@599 $generated@@600))) ($generated $generated@@601)))))
 :pattern ( ($generated@@310 ($generated@@84 $generated@@599 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@604) $generated@@2)) ($generated@@76 $generated@@604 $generated@@46 $generated@@603))
 :pattern ( ($generated@@76 $generated@@604 $generated@@46 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@606) $generated@@3)) ($generated@@76 $generated@@606 $generated@@47 $generated@@605))
 :pattern ( ($generated@@76 $generated@@606 $generated@@47 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@608) $generated@@4)) ($generated@@76 $generated@@608 $generated@@44 $generated@@607))
 :pattern ( ($generated@@76 $generated@@608 $generated@@44 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@610) $generated@@241)) ($generated@@76 $generated@@610 $generated@@45 $generated@@609))
 :pattern ( ($generated@@76 $generated@@610 $generated@@45 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@612) $generated@@150)) ($generated@@76 $generated@@612 $generated@@48 $generated@@611))
 :pattern ( ($generated@@76 $generated@@612 $generated@@48 $generated@@611))
)))
(assert  (=> (< 2 $generated@@309) ($generated@@137 $generated@@224 ($generated@@384 $generated@@134 ($generated@@280 $generated@@45)))))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@239 $generated@@150)) (= (type $generated@@614) $generated@@66)) (= ($generated@@137 $generated@@613 ($generated@@280 $generated@@614)) (forall (($generated@@615 Int) ) (!  (=> (and (<= 0 $generated@@615) (< $generated@@615 ($generated@@300 $generated@@613))) ($generated@@217 ($generated@@351 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@351 $generated@@613 $generated@@615))
))))
 :pattern ( ($generated@@137 $generated@@613 ($generated@@280 $generated@@614)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 Int) ) (!  (=> (= (type $generated@@617) ($generated@@239 $generated@@150)) (=> (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@300 $generated@@617))) (< ($generated@@535 ($generated@@347 $generated@@141 ($generated@@351 $generated@@617 $generated@@618))) ($generated@@616 $generated@@617))))
 :pattern ( ($generated@@535 ($generated@@347 $generated@@141 ($generated@@351 $generated@@617 $generated@@618))))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) ($generated@@236 $generated@@150 $generated@@150)) (= (type $generated@@620) $generated@@66)) (= (type $generated@@621) $generated@@66)) ($generated@@137 $generated@@619 ($generated@@384 $generated@@620 $generated@@621))) (and (and ($generated@@137 ($generated@@316 $generated@@619) ($generated@@267 $generated@@620)) ($generated@@137 ($generated@@363 $generated@@619) ($generated@@267 $generated@@621))) ($generated@@137 ($generated@@398 $generated@@619) ($generated@@267 ($generated@@140 $generated@@620 $generated@@621)))))
 :pattern ( ($generated@@137 $generated@@619 ($generated@@384 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) ($generated@@324 $generated@@150 $generated@@150)) (= (type $generated@@623) $generated@@66)) (= (type $generated@@624) $generated@@66)) ($generated@@137 $generated@@622 ($generated@@429 $generated@@623 $generated@@624))) (and (and ($generated@@137 ($generated@@322 $generated@@622) ($generated@@272 $generated@@623)) ($generated@@137 ($generated@@374 $generated@@622) ($generated@@272 $generated@@624))) ($generated@@137 ($generated@@406 $generated@@622) ($generated@@272 ($generated@@140 $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@137 $generated@@622 ($generated@@429 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@2) ($generated@@137 $generated@@625 $generated@@46))
 :pattern ( ($generated@@137 $generated@@625 $generated@@46))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@3) ($generated@@137 $generated@@626 $generated@@47))
 :pattern ( ($generated@@137 $generated@@626 $generated@@47))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@4) ($generated@@137 $generated@@627 $generated@@44))
 :pattern ( ($generated@@137 $generated@@627 $generated@@44))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@241) ($generated@@137 $generated@@628 $generated@@45))
 :pattern ( ($generated@@137 $generated@@628 $generated@@45))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@150) ($generated@@137 $generated@@629 $generated@@48))
 :pattern ( ($generated@@137 $generated@@629 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 (T@U) Bool)
(assert  (and (and (= (type $generated@@630) ($generated@@162 $generated@@79 $generated@@4)) (= (type $generated@@631) $generated@@79)) (= (type $generated@@632) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@634  (=> (= $generated@@630 ($generated@@161 $generated@@631 $generated@@632 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@83 ($generated@@316 $generated@@224) ($generated@@227 ($generated@@8 $generated@@233))))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@83 ($generated@@316 $generated@@224) ($generated@@227 ($generated@@8 $generated@@235)))))))))
(let (($generated@@635  (=> (and (and ($generated@@287 $generated@@632) ($generated@@633 $generated@@632)) (and (= 3 $generated@@309) (= (ControlFlow 0 4) 2))) $generated@@634)))
$generated@@635)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@177 (T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U) Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@T T@U T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@207 (T@U) Bool)
(declare-fun $generated@@208 (T@U T@U T@U) Bool)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@220 (T@T) T@U)
(declare-fun $generated@@221 (T@U) Int)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Int)
(declare-fun $generated@@242 (T@T) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@T T@T) T@U)
(declare-fun $generated@@249 (T@T T@T) T@T)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@266 (T@T T@T) T@U)
(declare-fun $generated@@267 (T@T T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@283 (T@U T@U) Bool)
(declare-fun $generated@@292 (T@T T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@361 (T@U T@U) T@U)
(declare-fun $generated@@369 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@T) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@409 () T@T)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@U Int) T@U)
(declare-fun $generated@@461 (T@U) Int)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@508 (T@U T@U T@U) T@U)
(declare-fun $generated@@509 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@510 (T@T T@T) T@T)
(declare-fun $generated@@511 (T@T) T@T)
(declare-fun $generated@@512 (T@T) T@T)
(declare-fun $generated@@513 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Bool)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@151 $generated@@152 ($generated@@86 0)))
 :pattern ( ($generated@@151 $generated@@152 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@155) 16) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@156 $generated@@157)) $generated@@70)
 :pattern ( ($generated@@154 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@70) (= (type $generated@@159) $generated@@70)) (= (type $generated@@160) $generated@@155)) ($generated@@151 $generated@@160 ($generated@@154 $generated@@158 $generated@@159))) ($generated@@153 $generated@@160))
 :pattern ( ($generated@@153 $generated@@160) ($generated@@151 $generated@@160 ($generated@@154 $generated@@158 $generated@@159)))
)))
(assert  (and (and (= ($generated@@1 $generated@@164) 17) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@162 $generated@@165))
))) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@164)
 :pattern ( ($generated@@163 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@155) (= (type $generated@@168) $generated@@155)) true) (= ($generated@@161 $generated@@167 $generated@@168)  (and (= ($generated@@162 $generated@@167) ($generated@@162 $generated@@168)) (= ($generated@@163 $generated@@167) ($generated@@163 $generated@@168)))))
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@70)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@173) $generated@@70)) ($generated@@151 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@151 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert (= (type $generated@@174) $generated@@70))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (= (type $generated@@175) $generated@@88) (= (type $generated@@176) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@175 $generated@@174 $generated@@176) ($generated@@85 $generated@@175 $generated@@147 $generated@@176)))
 :pattern ( ($generated@@85 $generated@@175 $generated@@174 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@179 $generated@@180)) $generated@@155)
 :pattern ( ($generated@@177 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (and (= (type $generated@@181) $generated@@70) (= (type $generated@@182) $generated@@70)) (= (type $generated@@183) $generated@@164)) (= (type $generated@@184) $generated@@164)) (= ($generated@@151 ($generated@@177 $generated@@183 $generated@@184) ($generated@@154 $generated@@181 $generated@@182))  (and ($generated@@178 $generated@@183 $generated@@181) ($generated@@178 $generated@@184 $generated@@182))))
 :pattern ( ($generated@@151 ($generated@@177 $generated@@183 $generated@@184) ($generated@@154 $generated@@181 $generated@@182)))
)))
(assert (= (type $generated@@185) ($generated@@72 $generated@@2)))
(assert (= ($generated@@80 $generated@@185) 0))
(assert (forall (($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= (type ($generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@72 $generated@@187))
 :pattern ( ($generated@@186 $generated@@187 $generated@@188 $generated@@189))
)))
(assert (= ($generated@@186 $generated@@2 $generated@@64 $generated@@69) $generated@@185))
(assert  (not ($generated@@190 $generated@@185)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@155) (= (type $generated@@192) $generated@@155)) (= ($generated@@161 $generated@@191 $generated@@192) (= $generated@@191 $generated@@192)))
 :pattern ( ($generated@@161 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (= (type ($generated@@193 $generated@@194)) $generated@@70)
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@195) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@196) $generated@@70)) (= ($generated@@151 $generated@@195 ($generated@@193 $generated@@196)) (forall (($generated@@197 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@164) ($generated@@0 ($generated@@92 $generated@@195 $generated@@197))) ($generated@@178 $generated@@197 $generated@@196))
 :pattern ( ($generated@@92 $generated@@195 $generated@@197))
))))
 :pattern ( ($generated@@151 $generated@@195 ($generated@@193 $generated@@196)))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@70)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@201) $generated@@70)) (= ($generated@@151 $generated@@200 ($generated@@198 $generated@@201)) (forall (($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@164) ($generated@@0 ($generated@@92 $generated@@200 $generated@@202))) ($generated@@178 $generated@@202 $generated@@201))
 :pattern ( ($generated@@92 $generated@@200 $generated@@202))
))))
 :pattern ( ($generated@@151 $generated@@200 ($generated@@198 $generated@@201)))
)))
(assert (forall (($generated@@204 T@U) ) (! (let (($generated@@205 (type $generated@@204)))
(= (type ($generated@@203 $generated@@204)) $generated@@205))
 :pattern ( ($generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@203 $generated@@206) $generated@@206)
 :pattern ( ($generated@@203 $generated@@206))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@209) $generated@@70) (= (type $generated@@210) $generated@@70)) (= (type $generated@@211) $generated@@164)) (= (type $generated@@212) $generated@@164)) (= (type $generated@@213) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@207 $generated@@213)) (= ($generated@@85 ($generated@@177 $generated@@211 $generated@@212) ($generated@@154 $generated@@209 $generated@@210) $generated@@213)  (and ($generated@@208 $generated@@211 $generated@@209 $generated@@213) ($generated@@208 $generated@@212 $generated@@210 $generated@@213))))
 :pattern ( ($generated@@85 ($generated@@177 $generated@@211 $generated@@212) ($generated@@154 $generated@@209 $generated@@210) $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ) (! (= (type ($generated@@214 $generated@@215)) $generated@@75)
 :pattern ( ($generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@155) (= ($generated@@153 $generated@@216) (= ($generated@@214 $generated@@216) $generated@@62)))
 :pattern ( ($generated@@153 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ) (!  (=> (and (= (type $generated@@217) $generated@@155) ($generated@@153 $generated@@217)) (exists (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (and (and (= (type $generated@@218) $generated@@164) (= (type $generated@@219) $generated@@164)) (= $generated@@217 ($generated@@177 $generated@@218 $generated@@219)))
 :no-pattern (type $generated@@218)
 :no-pattern (type $generated@@219)
 :no-pattern ($generated $generated@@218)
 :no-pattern ($generated@@0 $generated@@218)
 :no-pattern ($generated $generated@@219)
 :no-pattern ($generated@@0 $generated@@219)
)))
 :pattern ( ($generated@@153 $generated@@217))
)))
(assert  (and (and (forall (($generated@@224 T@T) ) (= ($generated@@1 ($generated@@222 $generated@@224)) 18)) (forall (($generated@@225 T@T) ) (! (= ($generated@@223 ($generated@@222 $generated@@225)) $generated@@225)
 :pattern ( ($generated@@222 $generated@@225))
))) (forall (($generated@@226 T@T) ) (! (= (type ($generated@@220 $generated@@226)) ($generated@@222 $generated@@226))
 :pattern ( ($generated@@220 $generated@@226))
))))
(assert (forall (($generated@@227 T@T) ) (! (= ($generated@@221 ($generated@@220 $generated@@227)) 0)
 :pattern ( ($generated@@220 $generated@@227))
)))
(assert ($generated@@190 $generated@@60))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@164)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@70) (= (type $generated@@232) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@208 ($generated@@228 $generated@@230) $generated@@231 $generated@@232) ($generated@@85 $generated@@230 $generated@@231 $generated@@232)))
 :pattern ( ($generated@@208 ($generated@@228 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@233) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@234) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@235) $generated@@164)) (= (type $generated@@236) $generated@@70)) ($generated@@143 $generated@@233 $generated@@234)) ($generated@@208 $generated@@235 $generated@@236 $generated@@233)) ($generated@@208 $generated@@235 $generated@@236 $generated@@234))
 :pattern ( ($generated@@143 $generated@@233 $generated@@234) ($generated@@208 $generated@@235 $generated@@236 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@237) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@238) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@240) $generated@@70)) ($generated@@143 $generated@@237 $generated@@238)) ($generated@@85 $generated@@239 $generated@@240 $generated@@237)) ($generated@@85 $generated@@239 $generated@@240 $generated@@238))
 :pattern ( ($generated@@143 $generated@@237 $generated@@238) ($generated@@85 $generated@@239 $generated@@240 $generated@@237))
)))
(assert (forall (($generated@@243 T@T) ) (! (= (type ($generated@@242 $generated@@243)) ($generated@@87 $generated@@243 $generated@@2))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@90 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@87 $generated@@245 $generated@@2)) (and (= (= ($generated@@241 $generated@@244) 0) (= $generated@@244 ($generated@@242 $generated@@245))) (=> (not (= ($generated@@241 $generated@@244) 0)) (exists (($generated@@246 T@U) ) (!  (and (= (type $generated@@246) $generated@@245) (< 0 ($generated ($generated@@92 $generated@@244 $generated@@246))))
 :no-pattern (type $generated@@246)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
))))))
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert  (and (and (and (and (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (= ($generated@@1 ($generated@@249 $generated@@252 $generated@@253)) 19)) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@250 ($generated@@249 $generated@@254 $generated@@255)) $generated@@254)
 :pattern ( ($generated@@249 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@249 $generated@@256 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@249 $generated@@256 $generated@@257))
))) (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@250 (type $generated@@258))))
(= (type ($generated@@247 $generated@@258)) ($generated@@87 $generated@@259 $generated@@4)))
 :pattern ( ($generated@@247 $generated@@258))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= (type ($generated@@248 $generated@@260 $generated@@261)) ($generated@@249 $generated@@260 $generated@@261))
 :pattern ( ($generated@@248 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@T) ) (! (let (($generated@@264 (type $generated@@262)))
 (not ($generated@@0 ($generated@@92 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262))))
 :pattern ( (let (($generated@@264 (type $generated@@262)))
($generated@@92 ($generated@@247 ($generated@@248 $generated@@264 $generated@@263)) $generated@@262)))
)))
(assert  (and (and (and (and (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@270 $generated@@271)) 20)) (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@272 $generated@@273)) $generated@@272)
 :pattern ( ($generated@@267 $generated@@272 $generated@@273))
))) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@267 $generated@@274 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@267 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@268 (type $generated@@276))))
(= (type ($generated@@265 $generated@@276)) ($generated@@87 $generated@@277 $generated@@4)))
 :pattern ( ($generated@@265 $generated@@276))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= (type ($generated@@266 $generated@@278 $generated@@279)) ($generated@@267 $generated@@278 $generated@@279))
 :pattern ( ($generated@@266 $generated@@278 $generated@@279))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@T) ) (! (let (($generated@@282 (type $generated@@280)))
 (not ($generated@@0 ($generated@@92 ($generated@@265 ($generated@@266 $generated@@282 $generated@@281)) $generated@@280))))
 :pattern ( (let (($generated@@282 (type $generated@@280)))
($generated@@92 ($generated@@265 ($generated@@266 $generated@@282 $generated@@281)) $generated@@280)))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (= (type $generated@@284) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@285) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@283 $generated@@284 $generated@@285)) (and ($generated@@143 $generated@@284 $generated@@285) (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@73 (type $generated@@287))))
 (=> (and (and (= (type $generated@@286) $generated@@88) (= (type $generated@@287) ($generated@@72 $generated@@288))) (not ($generated@@190 $generated@@287))) (= ($generated@@94 ($generated@@92 $generated@@284 $generated@@286) $generated@@287) ($generated@@94 ($generated@@92 $generated@@285 $generated@@286) $generated@@287))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@285 $generated@@286) $generated@@287))
))))
 :pattern ( ($generated@@283 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@90 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@87 $generated@@290 $generated@@2)) (= ($generated@@170 $generated@@289) (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@290) (and (<= 0 ($generated ($generated@@92 $generated@@289 $generated@@291))) (<= ($generated ($generated@@92 $generated@@289 $generated@@291)) ($generated@@241 $generated@@289))))
 :pattern ( ($generated@@92 $generated@@289 $generated@@291))
)))))
 :pattern ( ($generated@@170 $generated@@289))
)))
(assert (forall (($generated@@293 T@T) ($generated@@294 T@U) ) (! (= (type ($generated@@292 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@292 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@164) ($generated@@178 $generated@@295 $generated@@147)) (and (= ($generated@@228 ($generated@@292 $generated@@88 $generated@@295)) $generated@@295) ($generated@@151 ($generated@@292 $generated@@88 $generated@@295) $generated@@147)))
 :pattern ( ($generated@@178 $generated@@295 $generated@@147))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@164) ($generated@@178 $generated@@296 $generated@@174)) (and (= ($generated@@228 ($generated@@292 $generated@@88 $generated@@296)) $generated@@296) ($generated@@151 ($generated@@292 $generated@@88 $generated@@296) $generated@@174)))
 :pattern ( ($generated@@178 $generated@@296 $generated@@174))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@88) (= ($generated@@151 $generated@@297 $generated@@174)  (and ($generated@@151 $generated@@297 $generated@@147) (not (= $generated@@297 $generated@@148)))))
 :pattern ( ($generated@@151 $generated@@297 $generated@@174))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@299) $generated@@88)) (and ($generated@@207 $generated@@298) (and (not (= $generated@@299 $generated@@148)) ($generated@@151 $generated@@299 $generated@@147)))) ($generated@@151 ($generated@@94 ($generated@@92 $generated@@298 $generated@@299) $generated@@185) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@298 $generated@@299) $generated@@185))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@251 (type $generated@@300))))
(let (($generated@@302 ($generated@@250 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@249 $generated@@302 $generated@@301)) (or (= $generated@@300 ($generated@@248 $generated@@302 $generated@@301)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) ($generated@@0 ($generated@@92 ($generated@@247 $generated@@300) $generated@@303)))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@247 $generated@@300))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@251 (type $generated@@305))))
(= (type ($generated@@304 $generated@@305)) ($generated@@87 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@251 (type $generated@@307))))
(let (($generated@@309 ($generated@@250 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@249 $generated@@309 $generated@@308)) (or (= $generated@@307 ($generated@@248 $generated@@309 $generated@@308)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@308) ($generated@@0 ($generated@@92 ($generated@@304 $generated@@307) $generated@@310)))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@269 (type $generated@@311))))
(let (($generated@@313 ($generated@@268 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@267 $generated@@313 $generated@@312)) (or (= $generated@@311 ($generated@@266 $generated@@313 $generated@@312)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) ($generated@@0 ($generated@@92 ($generated@@265 $generated@@311) $generated@@314)))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@265 $generated@@311))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@269 (type $generated@@316))))
(= (type ($generated@@315 $generated@@316)) ($generated@@87 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@269 (type $generated@@318))))
(let (($generated@@320 ($generated@@268 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@267 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@266 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@319) ($generated@@0 ($generated@@92 ($generated@@315 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@323) $generated@@70)) (= ($generated@@151 $generated@@322 ($generated@@169 $generated@@323)) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@164) (< 0 ($generated ($generated@@92 $generated@@322 $generated@@324)))) ($generated@@178 $generated@@324 $generated@@323))
 :pattern ( ($generated@@92 $generated@@322 $generated@@324))
))))
 :pattern ( ($generated@@151 $generated@@322 ($generated@@169 $generated@@323)))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (= (type $generated@@325) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@326) $generated@@70)) (= (type $generated@@327) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@325 ($generated@@193 $generated@@326) $generated@@327) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@164) ($generated@@0 ($generated@@92 $generated@@325 $generated@@328))) ($generated@@208 $generated@@328 $generated@@326 $generated@@327))
 :pattern ( ($generated@@92 $generated@@325 $generated@@328))
))))
 :pattern ( ($generated@@85 $generated@@325 ($generated@@193 $generated@@326) $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (and (= (type $generated@@329) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@330) $generated@@70)) (= (type $generated@@331) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@329 ($generated@@198 $generated@@330) $generated@@331) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@164) ($generated@@0 ($generated@@92 $generated@@329 $generated@@332))) ($generated@@208 $generated@@332 $generated@@330 $generated@@331))
 :pattern ( ($generated@@92 $generated@@329 $generated@@332))
))))
 :pattern ( ($generated@@85 $generated@@329 ($generated@@198 $generated@@330) $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
(= ($generated ($generated@@92 ($generated@@242 $generated@@334) $generated@@333)) 0))
 :pattern ( (let (($generated@@334 (type $generated@@333)))
($generated@@92 ($generated@@242 $generated@@334) $generated@@333)))
)))
(assert  (and (forall (($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@337)) ($generated@@87 $generated@@164 $generated@@4))
 :pattern ( ($generated@@335 $generated@@337))
)) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@251 (type $generated@@338))))
(let (($generated@@340 ($generated@@250 (type $generated@@338))))
(= (type ($generated@@336 $generated@@338)) ($generated@@87 $generated@@340 $generated@@339))))
 :pattern ( ($generated@@336 $generated@@338))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) ($generated@@249 $generated@@164 $generated@@164)) (= (type $generated@@342) $generated@@164)) (= ($generated@@0 ($generated@@92 ($generated@@335 $generated@@341) $generated@@342))  (and ($generated@@0 ($generated@@92 ($generated@@247 $generated@@341) ($generated@@162 ($generated@@292 $generated@@155 $generated@@342)))) (= ($generated@@92 ($generated@@336 $generated@@341) ($generated@@162 ($generated@@292 $generated@@155 $generated@@342))) ($generated@@163 ($generated@@292 $generated@@155 $generated@@342))))))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@341) $generated@@342))
)))
(assert  (and (forall (($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@345)) ($generated@@87 $generated@@164 $generated@@4))
 :pattern ( ($generated@@343 $generated@@345))
)) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@269 (type $generated@@346))))
(let (($generated@@348 ($generated@@268 (type $generated@@346))))
(= (type ($generated@@344 $generated@@346)) ($generated@@87 $generated@@348 $generated@@347))))
 :pattern ( ($generated@@344 $generated@@346))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@267 $generated@@164 $generated@@164)) (= (type $generated@@350) $generated@@164)) (= ($generated@@0 ($generated@@92 ($generated@@343 $generated@@349) $generated@@350))  (and ($generated@@0 ($generated@@92 ($generated@@265 $generated@@349) ($generated@@162 ($generated@@292 $generated@@155 $generated@@350)))) (= ($generated@@92 ($generated@@344 $generated@@349) ($generated@@162 ($generated@@292 $generated@@155 $generated@@350))) ($generated@@163 ($generated@@292 $generated@@155 $generated@@350))))))
 :pattern ( ($generated@@92 ($generated@@343 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
(let (($generated@@354 ($generated@@250 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@249 $generated@@354 $generated@@353)) (= ($generated@@0 ($generated@@92 ($generated@@304 $generated@@351) $generated@@352)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) (and ($generated@@0 ($generated@@92 ($generated@@247 $generated@@351) $generated@@355)) (= $generated@@352 ($generated@@92 ($generated@@336 $generated@@351) $generated@@355))))
 :pattern ( ($generated@@92 ($generated@@247 $generated@@351) $generated@@355))
 :pattern ( ($generated@@92 ($generated@@336 $generated@@351) $generated@@355))
))))))
 :pattern ( ($generated@@92 ($generated@@304 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(let (($generated@@359 ($generated@@268 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@267 $generated@@359 $generated@@358)) (= ($generated@@0 ($generated@@92 ($generated@@315 $generated@@356) $generated@@357)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) (and ($generated@@0 ($generated@@92 ($generated@@265 $generated@@356) $generated@@360)) (= $generated@@357 ($generated@@92 ($generated@@344 $generated@@356) $generated@@360))))
 :pattern ( ($generated@@92 ($generated@@265 $generated@@356) $generated@@360))
 :pattern ( ($generated@@92 ($generated@@344 $generated@@356) $generated@@360))
))))))
 :pattern ( ($generated@@92 ($generated@@315 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@362 $generated@@363)) $generated@@70)
 :pattern ( ($generated@@361 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (and (= (type $generated@@364) ($generated@@249 $generated@@164 $generated@@164)) (= (type $generated@@365) $generated@@70)) (= (type $generated@@366) $generated@@70)) (= (type $generated@@367) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@364 ($generated@@361 $generated@@365 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@164) ($generated@@0 ($generated@@92 ($generated@@247 $generated@@364) $generated@@368))) (and ($generated@@208 ($generated@@92 ($generated@@336 $generated@@364) $generated@@368) $generated@@366 $generated@@367) ($generated@@208 $generated@@368 $generated@@365 $generated@@367)))
 :pattern ( ($generated@@92 ($generated@@336 $generated@@364) $generated@@368))
 :pattern ( ($generated@@92 ($generated@@247 $generated@@364) $generated@@368))
))))
 :pattern ( ($generated@@85 $generated@@364 ($generated@@361 $generated@@365 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@370 $generated@@371)) $generated@@70)
 :pattern ( ($generated@@369 $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (and (= (type $generated@@372) ($generated@@267 $generated@@164 $generated@@164)) (= (type $generated@@373) $generated@@70)) (= (type $generated@@374) $generated@@70)) (= (type $generated@@375) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@372 ($generated@@369 $generated@@373 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@164) ($generated@@0 ($generated@@92 ($generated@@265 $generated@@372) $generated@@376))) (and ($generated@@208 ($generated@@92 ($generated@@344 $generated@@372) $generated@@376) $generated@@374 $generated@@375) ($generated@@208 $generated@@376 $generated@@373 $generated@@375)))
 :pattern ( ($generated@@92 ($generated@@344 $generated@@372) $generated@@376))
 :pattern ( ($generated@@92 ($generated@@265 $generated@@372) $generated@@376))
))))
 :pattern ( ($generated@@85 $generated@@372 ($generated@@369 $generated@@373 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@377) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@378) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@379) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@377 $generated@@379))) (and ($generated@@143 $generated@@377 $generated@@378) ($generated@@143 $generated@@378 $generated@@379))) ($generated@@143 $generated@@377 $generated@@379))
 :pattern ( ($generated@@143 $generated@@377 $generated@@378) ($generated@@143 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@T) ) (! (= (type ($generated@@380 $generated@@381)) ($generated@@87 $generated@@381 $generated@@4))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@269 (type $generated@@382))))
(let (($generated@@384 ($generated@@268 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@267 $generated@@384 $generated@@383)) (= (= $generated@@382 ($generated@@266 $generated@@384 $generated@@383)) (= ($generated@@265 $generated@@382) ($generated@@380 $generated@@384))))))
 :pattern ( ($generated@@265 $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@269 (type $generated@@385))))
(let (($generated@@387 ($generated@@268 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@267 $generated@@387 $generated@@386)) (= (= $generated@@385 ($generated@@266 $generated@@387 $generated@@386)) (= ($generated@@315 $generated@@385) ($generated@@380 $generated@@386))))))
 :pattern ( ($generated@@315 $generated@@385))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@269 (type $generated@@388))))
(let (($generated@@390 ($generated@@268 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@267 $generated@@390 $generated@@389)) (= (= $generated@@388 ($generated@@266 $generated@@390 $generated@@389)) (= ($generated@@343 $generated@@388) ($generated@@380 $generated@@164))))))
 :pattern ( ($generated@@343 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@251 (type $generated@@391))))
(let (($generated@@393 ($generated@@250 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@249 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@248 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (and (and (= (type $generated@@394) $generated@@164) (= (type $generated@@395) $generated@@164)) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@391) ($generated@@228 ($generated@@177 $generated@@394 $generated@@395)))))
 :no-pattern (type $generated@@394)
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@335 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@269 (type $generated@@396))))
(let (($generated@@398 ($generated@@268 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@267 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@266 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (and (and (= (type $generated@@399) $generated@@164) (= (type $generated@@400) $generated@@164)) ($generated@@0 ($generated@@92 ($generated@@343 $generated@@396) ($generated@@228 ($generated@@177 $generated@@399 $generated@@400)))))
 :no-pattern (type $generated@@399)
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@343 $generated@@396))
)))
(assert (forall (($generated@@402 T@U) ) (! (= (type ($generated@@401 $generated@@402)) $generated@@76)
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@T) ) (!  (=> (and (= (type $generated@@403) $generated@@76) (= (type $generated@@404) $generated@@74)) (and (= ($generated@@401 ($generated@@186 $generated@@405 $generated@@403 $generated@@404)) $generated@@403) (= ($generated@@83 ($generated@@186 $generated@@405 $generated@@403 $generated@@404)) $generated@@404)))
 :pattern ( ($generated@@186 $generated@@405 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@164) ($generated@@178 $generated@@406 $generated@@46)) (and (= ($generated@@228 ($generated@@292 $generated@@2 $generated@@406)) $generated@@406) ($generated@@151 ($generated@@292 $generated@@2 $generated@@406) $generated@@46)))
 :pattern ( ($generated@@178 $generated@@406 $generated@@46))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@164) ($generated@@178 $generated@@407 $generated@@47)) (and (= ($generated@@228 ($generated@@292 $generated@@3 $generated@@407)) $generated@@407) ($generated@@151 ($generated@@292 $generated@@3 $generated@@407) $generated@@47)))
 :pattern ( ($generated@@178 $generated@@407 $generated@@47))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@164) ($generated@@178 $generated@@408 $generated@@44)) (and (= ($generated@@228 ($generated@@292 $generated@@4 $generated@@408)) $generated@@408) ($generated@@151 ($generated@@292 $generated@@4 $generated@@408) $generated@@44)))
 :pattern ( ($generated@@178 $generated@@408 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@409) 21))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@164) ($generated@@178 $generated@@410 $generated@@45)) (and (= ($generated@@228 ($generated@@292 $generated@@409 $generated@@410)) $generated@@410) ($generated@@151 ($generated@@292 $generated@@409 $generated@@410) $generated@@45)))
 :pattern ( ($generated@@178 $generated@@410 $generated@@45))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@70) (= ($generated@@178 ($generated@@228 $generated@@411) $generated@@412) ($generated@@151 $generated@@411 $generated@@412)))
 :pattern ( ($generated@@178 ($generated@@228 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@90 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@87 $generated@@414 $generated@@2)) (<= 0 ($generated@@241 $generated@@413))))
 :pattern ( ($generated@@241 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@223 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@222 $generated@@416)) (<= 0 ($generated@@221 $generated@@415))))
 :pattern ( ($generated@@221 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (= (type ($generated@@417 $generated@@418)) $generated@@70)
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@70) (= (type $generated@@420) $generated@@70)) (= ($generated@@417 ($generated@@361 $generated@@419 $generated@@420)) $generated@@419))
 :pattern ( ($generated@@361 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (= (type ($generated@@421 $generated@@422)) $generated@@70)
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@70) (= (type $generated@@424) $generated@@70)) (= ($generated@@421 ($generated@@361 $generated@@423 $generated@@424)) $generated@@424))
 :pattern ( ($generated@@361 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@70) (= (type $generated@@426) $generated@@70)) (= ($generated@@81 ($generated@@361 $generated@@425 $generated@@426)) $generated@@58))
 :pattern ( ($generated@@361 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@70)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@70) (= (type $generated@@430) $generated@@70)) (= ($generated@@427 ($generated@@369 $generated@@429 $generated@@430)) $generated@@429))
 :pattern ( ($generated@@369 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@70)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@70) (= (type $generated@@434) $generated@@70)) (= ($generated@@431 ($generated@@369 $generated@@433 $generated@@434)) $generated@@434))
 :pattern ( ($generated@@369 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@70) (= (type $generated@@436) $generated@@70)) (= ($generated@@81 ($generated@@369 $generated@@435 $generated@@436)) $generated@@59))
 :pattern ( ($generated@@369 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@164) (= (type $generated@@438) $generated@@164)) (= ($generated@@214 ($generated@@177 $generated@@437 $generated@@438)) $generated@@62))
 :pattern ( ($generated@@177 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@70)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@70) (= (type $generated@@442) $generated@@70)) (= ($generated@@439 ($generated@@154 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@154 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@70)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@70) (= (type $generated@@446) $generated@@70)) (= ($generated@@443 ($generated@@154 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@154 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@164) (= (type $generated@@448) $generated@@164)) (= ($generated@@162 ($generated@@177 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@177 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@164) (= (type $generated@@450) $generated@@164)) (= ($generated@@163 ($generated@@177 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@177 $generated@@449 $generated@@450))
)))
(assert  (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@453)) $generated@@70)
 :pattern ( ($generated@@451 $generated@@453))
)) (forall (($generated@@454 T@U) ($generated@@455 Int) ) (! (let (($generated@@456 ($generated@@223 (type $generated@@454))))
(= (type ($generated@@452 $generated@@454 $generated@@455)) $generated@@456))
 :pattern ( ($generated@@452 $generated@@454 $generated@@455))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@222 $generated@@164)) (= (type $generated@@458) $generated@@70)) (= (type $generated@@459) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@457 ($generated@@451 $generated@@458) $generated@@459) (forall (($generated@@460 Int) ) (!  (=> (and (<= 0 $generated@@460) (< $generated@@460 ($generated@@221 $generated@@457))) ($generated@@208 ($generated@@452 $generated@@457 $generated@@460) $generated@@458 $generated@@459))
 :pattern ( ($generated@@452 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@85 $generated@@457 ($generated@@451 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@462 Int) ) (! (= ($generated@@461 ($generated@@86 $generated@@462)) $generated@@462)
 :pattern ( ($generated@@86 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@70)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@70) (= ($generated@@463 ($generated@@193 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@193 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@70) (= ($generated@@81 ($generated@@193 $generated@@466)) $generated@@54))
 :pattern ( ($generated@@193 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@70) (= ($generated@@467 ($generated@@198 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@198 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@70) (= ($generated@@81 ($generated@@198 $generated@@470)) $generated@@55))
 :pattern ( ($generated@@198 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@70)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@70) (= ($generated@@471 ($generated@@169 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@169 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@70) (= ($generated@@81 ($generated@@169 $generated@@474)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@70) (= ($generated@@475 ($generated@@451 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@451 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@70) (= ($generated@@81 ($generated@@451 $generated@@478)) $generated@@57))
 :pattern ( ($generated@@451 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
(= ($generated@@292 $generated@@480 ($generated@@228 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@228 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@249 $generated@@164 $generated@@164)) (= (type $generated@@482) $generated@@70)) (= (type $generated@@483) $generated@@70)) (= ($generated@@151 $generated@@481 ($generated@@361 $generated@@482 $generated@@483)) (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@164) ($generated@@0 ($generated@@92 ($generated@@247 $generated@@481) $generated@@484))) (and ($generated@@178 ($generated@@92 ($generated@@336 $generated@@481) $generated@@484) $generated@@483) ($generated@@178 $generated@@484 $generated@@482)))
 :pattern ( ($generated@@92 ($generated@@336 $generated@@481) $generated@@484))
 :pattern ( ($generated@@92 ($generated@@247 $generated@@481) $generated@@484))
))))
 :pattern ( ($generated@@151 $generated@@481 ($generated@@361 $generated@@482 $generated@@483)))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@267 $generated@@164 $generated@@164)) (= (type $generated@@486) $generated@@70)) (= (type $generated@@487) $generated@@70)) (= ($generated@@151 $generated@@485 ($generated@@369 $generated@@486 $generated@@487)) (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@164) ($generated@@0 ($generated@@92 ($generated@@265 $generated@@485) $generated@@488))) (and ($generated@@178 ($generated@@92 ($generated@@344 $generated@@485) $generated@@488) $generated@@487) ($generated@@178 $generated@@488 $generated@@486)))
 :pattern ( ($generated@@92 ($generated@@344 $generated@@485) $generated@@488))
 :pattern ( ($generated@@92 ($generated@@265 $generated@@485) $generated@@488))
))))
 :pattern ( ($generated@@151 $generated@@485 ($generated@@369 $generated@@486 $generated@@487)))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@490) $generated@@88)) (=> (and (and ($generated@@207 $generated@@489) (and (not (= $generated@@490 $generated@@148)) ($generated@@151 $generated@@490 $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@489 $generated@@490) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@489 $generated@@490) $generated@@185) $generated@@46 $generated@@489)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@489 $generated@@490) $generated@@185))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@164) (= (type $generated@@494) $generated@@164)) (< ($generated@@491 $generated@@493) ($generated@@492 ($generated@@177 $generated@@493 $generated@@494))))
 :pattern ( ($generated@@177 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@164) (= (type $generated@@496) $generated@@164)) (< ($generated@@491 $generated@@496) ($generated@@492 ($generated@@177 $generated@@495 $generated@@496))))
 :pattern ( ($generated@@177 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (and (= (type $generated@@497) $generated@@164) (= (type $generated@@498) $generated@@70)) (= (type $generated@@499) $generated@@70)) ($generated@@178 $generated@@497 ($generated@@361 $generated@@498 $generated@@499))) (and (= ($generated@@228 ($generated@@292 ($generated@@249 $generated@@164 $generated@@164) $generated@@497)) $generated@@497) ($generated@@151 ($generated@@292 ($generated@@249 $generated@@164 $generated@@164) $generated@@497) ($generated@@361 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@178 $generated@@497 ($generated@@361 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) $generated@@164) (= (type $generated@@501) $generated@@70)) (= (type $generated@@502) $generated@@70)) ($generated@@178 $generated@@500 ($generated@@369 $generated@@501 $generated@@502))) (and (= ($generated@@228 ($generated@@292 ($generated@@267 $generated@@164 $generated@@164) $generated@@500)) $generated@@500) ($generated@@151 ($generated@@292 ($generated@@267 $generated@@164 $generated@@164) $generated@@500) ($generated@@369 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@178 $generated@@500 ($generated@@369 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@70) (= (type $generated@@504) $generated@@70)) (= (type $generated@@505) $generated@@164)) ($generated@@178 $generated@@505 ($generated@@154 $generated@@503 $generated@@504))) (and (= ($generated@@228 ($generated@@292 $generated@@155 $generated@@505)) $generated@@505) ($generated@@151 ($generated@@292 $generated@@155 $generated@@505) ($generated@@154 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@178 $generated@@505 ($generated@@154 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
 (not ($generated@@0 ($generated@@92 ($generated@@380 $generated@@507) $generated@@506))))
 :pattern ( (let (($generated@@507 (type $generated@@506)))
($generated@@92 ($generated@@380 $generated@@507) $generated@@506)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@514 T@T) ($generated@@515 T@T) ) (= ($generated@@1 ($generated@@510 $generated@@514 $generated@@515)) 22)) (forall (($generated@@516 T@T) ($generated@@517 T@T) ) (! (= ($generated@@511 ($generated@@510 $generated@@516 $generated@@517)) $generated@@516)
 :pattern ( ($generated@@510 $generated@@516 $generated@@517))
))) (forall (($generated@@518 T@T) ($generated@@519 T@T) ) (! (= ($generated@@512 ($generated@@510 $generated@@518 $generated@@519)) $generated@@519)
 :pattern ( ($generated@@510 $generated@@518 $generated@@519))
))) (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (! (let (($generated@@523 ($generated@@512 (type $generated@@520))))
(= (type ($generated@@508 $generated@@520 $generated@@521 $generated@@522)) $generated@@523))
 :pattern ( ($generated@@508 $generated@@520 $generated@@521 $generated@@522))
))) (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(let (($generated@@529 (type $generated@@525)))
(= (type ($generated@@513 $generated@@524 $generated@@525 $generated@@526 $generated@@527)) ($generated@@510 $generated@@529 $generated@@528))))
 :pattern ( ($generated@@513 $generated@@524 $generated@@525 $generated@@526 $generated@@527))
))) (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@512 (type $generated@@530))))
 (=> (= (type $generated@@533) $generated@@534) (= ($generated@@508 ($generated@@513 $generated@@530 $generated@@531 $generated@@532 $generated@@533) $generated@@531 $generated@@532) $generated@@533)))
 :weight 0
))) (and (and (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (or (= $generated@@537 $generated@@539) (= ($generated@@508 ($generated@@513 $generated@@536 $generated@@537 $generated@@538 $generated@@535) $generated@@539 $generated@@540) ($generated@@508 $generated@@536 $generated@@539 $generated@@540)))
 :weight 0
)) (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (or (= $generated@@544 $generated@@546) (= ($generated@@508 ($generated@@513 $generated@@542 $generated@@543 $generated@@544 $generated@@541) $generated@@545 $generated@@546) ($generated@@508 $generated@@542 $generated@@545 $generated@@546)))
 :weight 0
))) (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (or true (= ($generated@@508 ($generated@@513 $generated@@548 $generated@@549 $generated@@550 $generated@@547) $generated@@551 $generated@@552) ($generated@@508 $generated@@548 $generated@@551 $generated@@552)))
 :weight 0
)))) (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (! (= (type ($generated@@509 $generated@@553 $generated@@554 $generated@@555 $generated@@556)) ($generated@@510 $generated@@88 $generated@@4))
 :pattern ( ($generated@@509 $generated@@553 $generated@@554 $generated@@555 $generated@@556))
))))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@73 (type $generated@@562))))
 (=> (and (and (and (and (and (= (type $generated@@557) $generated@@88) (= (type $generated@@558) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@559) ($generated@@72 $generated@@4))) (= (type $generated@@560) $generated@@88)) (= (type $generated@@561) $generated@@88)) (= (type $generated@@562) ($generated@@72 $generated@@563))) (= ($generated@@0 ($generated@@508 ($generated@@509 $generated@@557 $generated@@558 $generated@@559 $generated@@560) $generated@@561 $generated@@562))  (=> (and (not (= $generated@@561 $generated@@557)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@558 $generated@@561) $generated@@559))) (= $generated@@561 $generated@@560)))))
 :pattern ( ($generated@@508 ($generated@@509 $generated@@557 $generated@@558 $generated@@559 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@77)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@70) (= (type $generated@@567) $generated@@70)) (and (= ($generated@@81 ($generated@@154 $generated@@566 $generated@@567)) $generated@@63) (= ($generated@@564 ($generated@@154 $generated@@566 $generated@@567)) $generated@@67)))
 :pattern ( ($generated@@154 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@155) (= ($generated@@491 ($generated@@228 $generated@@568)) ($generated@@492 $generated@@568)))
 :pattern ( ($generated@@491 ($generated@@228 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@164) ($generated@@178 $generated@@569 ($generated@@86 0))) (and (= ($generated@@228 ($generated@@292 $generated@@2 $generated@@569)) $generated@@569) ($generated@@151 ($generated@@292 ($generated@@87 $generated@@164 $generated@@4) $generated@@569) ($generated@@86 0))))
 :pattern ( ($generated@@178 $generated@@569 ($generated@@86 0)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@164) (= (type $generated@@571) $generated@@70)) ($generated@@178 $generated@@570 ($generated@@193 $generated@@571))) (and (= ($generated@@228 ($generated@@292 ($generated@@87 $generated@@164 $generated@@4) $generated@@570)) $generated@@570) ($generated@@151 ($generated@@292 ($generated@@87 $generated@@164 $generated@@4) $generated@@570) ($generated@@193 $generated@@571))))
 :pattern ( ($generated@@178 $generated@@570 ($generated@@193 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@164) (= (type $generated@@573) $generated@@70)) ($generated@@178 $generated@@572 ($generated@@198 $generated@@573))) (and (= ($generated@@228 ($generated@@292 ($generated@@87 $generated@@164 $generated@@4) $generated@@572)) $generated@@572) ($generated@@151 ($generated@@292 ($generated@@87 $generated@@164 $generated@@4) $generated@@572) ($generated@@198 $generated@@573))))
 :pattern ( ($generated@@178 $generated@@572 ($generated@@198 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@164) (= (type $generated@@575) $generated@@70)) ($generated@@178 $generated@@574 ($generated@@169 $generated@@575))) (and (= ($generated@@228 ($generated@@292 ($generated@@87 $generated@@164 $generated@@2) $generated@@574)) $generated@@574) ($generated@@151 ($generated@@292 ($generated@@87 $generated@@164 $generated@@2) $generated@@574) ($generated@@169 $generated@@575))))
 :pattern ( ($generated@@178 $generated@@574 ($generated@@169 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@164) (= (type $generated@@577) $generated@@70)) ($generated@@178 $generated@@576 ($generated@@451 $generated@@577))) (and (= ($generated@@228 ($generated@@292 ($generated@@222 $generated@@164) $generated@@576)) $generated@@576) ($generated@@151 ($generated@@292 ($generated@@222 $generated@@164) $generated@@576) ($generated@@451 $generated@@577))))
 :pattern ( ($generated@@178 $generated@@576 ($generated@@451 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
 (=> (and (and (and (= (type $generated@@578) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@579) $generated@@88)) (= (type $generated@@580) ($generated@@72 $generated@@582))) ($generated@@207 ($generated@@93 $generated@@578 $generated@@579 ($generated@@95 ($generated@@92 $generated@@578 $generated@@579) $generated@@580 $generated@@581)))) ($generated@@143 $generated@@578 ($generated@@93 $generated@@578 $generated@@579 ($generated@@95 ($generated@@92 $generated@@578 $generated@@579) $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@93 $generated@@578 $generated@@579 ($generated@@95 ($generated@@92 $generated@@578 $generated@@579) $generated@@580 $generated@@581)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@564 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@174) $generated@@66))
(assert (= ($generated@@564 $generated@@174) $generated@@68))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@584) $generated@@70)) (= (type $generated@@585) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@583 ($generated@@169 $generated@@584) $generated@@585) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@164) (< 0 ($generated ($generated@@92 $generated@@583 $generated@@586)))) ($generated@@208 $generated@@586 $generated@@584 $generated@@585))
 :pattern ( ($generated@@92 $generated@@583 $generated@@586))
))))
 :pattern ( ($generated@@85 $generated@@583 ($generated@@169 $generated@@584) $generated@@585))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@70)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@88) (= ($generated@@151 $generated@@590 $generated@@147)  (or (= $generated@@590 $generated@@148) ($generated@@587 ($generated@@588 $generated@@590)))))
 :pattern ( ($generated@@151 $generated@@590 $generated@@147))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@155) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@207 $generated@@593) (and ($generated@@153 $generated@@591) (exists (($generated@@594 T@U) ) (!  (and (= (type $generated@@594) $generated@@70) ($generated@@85 $generated@@591 ($generated@@154 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@85 $generated@@591 ($generated@@154 $generated@@592 $generated@@594) $generated@@593))
))))) ($generated@@208 ($generated@@162 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@208 ($generated@@162 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@155) (= (type $generated@@596) $generated@@70)) (= (type $generated@@597) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@207 $generated@@597) (and ($generated@@153 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@70) ($generated@@85 $generated@@595 ($generated@@154 $generated@@598 $generated@@596) $generated@@597))
 :pattern ( ($generated@@85 $generated@@595 ($generated@@154 $generated@@598 $generated@@596) $generated@@597))
))))) ($generated@@208 ($generated@@163 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@208 ($generated@@163 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@164) (= (type $generated@@600) $generated@@164)) (= ($generated@@177 ($generated@@203 $generated@@599) ($generated@@203 $generated@@600)) ($generated@@203 ($generated@@177 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@177 ($generated@@203 $generated@@599) ($generated@@203 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@228 ($generated@@203 $generated@@601)) ($generated@@203 ($generated@@228 $generated@@601)))
 :pattern ( ($generated@@228 ($generated@@203 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@223 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@222 $generated@@603)) (= ($generated@@221 $generated@@602) 0)) (= $generated@@602 ($generated@@220 $generated@@603))))
 :pattern ( ($generated@@221 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@87 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@241 ($generated@@93 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@241 $generated@@604) ($generated ($generated@@92 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@241 ($generated@@93 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@609) $generated@@2)) ($generated@@85 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@85 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@611) $generated@@3)) ($generated@@85 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@85 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@613) $generated@@4)) ($generated@@85 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@85 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@615) $generated@@409)) ($generated@@85 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@85 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@617) $generated@@164)) ($generated@@85 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@85 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@222 $generated@@164)) (= (type $generated@@619) $generated@@70)) (= ($generated@@151 $generated@@618 ($generated@@451 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@221 $generated@@618))) ($generated@@178 ($generated@@452 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@452 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@151 $generated@@618 ($generated@@451 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@222 $generated@@164)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@221 $generated@@622))) (< ($generated@@492 ($generated@@292 $generated@@155 ($generated@@452 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@492 ($generated@@292 $generated@@155 ($generated@@452 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@249 $generated@@164 $generated@@164)) (= (type $generated@@625) $generated@@70)) (= (type $generated@@626) $generated@@70)) ($generated@@151 $generated@@624 ($generated@@361 $generated@@625 $generated@@626))) (and (and ($generated@@151 ($generated@@247 $generated@@624) ($generated@@193 $generated@@625)) ($generated@@151 ($generated@@304 $generated@@624) ($generated@@193 $generated@@626))) ($generated@@151 ($generated@@335 $generated@@624) ($generated@@193 ($generated@@154 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@151 $generated@@624 ($generated@@361 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@267 $generated@@164 $generated@@164)) (= (type $generated@@628) $generated@@70)) (= (type $generated@@629) $generated@@70)) ($generated@@151 $generated@@627 ($generated@@369 $generated@@628 $generated@@629))) (and (and ($generated@@151 ($generated@@265 $generated@@627) ($generated@@198 $generated@@628)) ($generated@@151 ($generated@@315 $generated@@627) ($generated@@198 $generated@@629))) ($generated@@151 ($generated@@343 $generated@@627) ($generated@@198 ($generated@@154 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@151 $generated@@627 ($generated@@369 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@151 $generated@@630 $generated@@46))
 :pattern ( ($generated@@151 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@151 $generated@@631 $generated@@47))
 :pattern ( ($generated@@151 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@151 $generated@@632 $generated@@44))
 :pattern ( ($generated@@151 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@409) ($generated@@151 $generated@@633 $generated@@45))
 :pattern ( ($generated@@151 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@164) ($generated@@151 $generated@@634 $generated@@48))
 :pattern ( ($generated@@151 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 (T@U) Bool)
(declare-fun $generated@@639 () Int)
(assert  (and (and (= (type $generated@@635) ($generated@@510 $generated@@88 $generated@@4)) (= (type $generated@@636) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@637) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@640  (=> (= $generated@@635 ($generated@@509 $generated@@148 $generated@@636 $generated@@60 $generated@@637)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@637 $generated@@148))) (=> (not (= $generated@@637 $generated@@148)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@508 $generated@@635 $generated@@637 $generated@@185))))))))
(let (($generated@@641  (=> (and ($generated@@207 $generated@@636) ($generated@@638 $generated@@636)) (=> (and (and ($generated@@151 $generated@@637 $generated@@174) ($generated@@85 $generated@@637 $generated@@174 $generated@@636)) (and (= 1 $generated@@639) (= (ControlFlow 0 4) 2))) $generated@@640))))
$generated@@641)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 42))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(assert  (and (and (= (type $generated@@181) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@182) $generated@@46)) (= (type $generated@@183) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@190  (=> (= $generated@@181 ($generated@@107 $generated@@182 $generated@@183 $generated@@50 false)) (=> (and (= $generated@@184 ($generated@@162 0)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@162 0) $generated@@184) (< $generated@@184 42))))))
(let (($generated@@191  (=> (and (and (and ($generated@@185 $generated@@183) ($generated@@186 $generated@@183)) (and (<= ($generated@@162 0) $generated@@187) (< $generated@@187 42))) (and (and (<= ($generated@@162 0) $generated@@188) (< $generated@@188 42)) (and (= 1 $generated@@189) (= (ControlFlow 0 3) 2)))) $generated@@190)))
$generated@@191)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (Int Int) Int)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@T T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 Int) ) (! (= ($generated@@163 $generated@@164 $generated@@165) (div $generated@@164 $generated@@165))
 :pattern ( ($generated@@163 $generated@@164 $generated@@165))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 11) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@U) ) (! (= (type ($generated@@167 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(= ($generated@@167 $generated@@173 ($generated@@166 $generated@@172)) $generated@@172))
 :pattern ( ($generated@@166 $generated@@172))
)))
(assert (forall (($generated@@175 Int) ($generated@@176 Int) ) (! (= ($generated@@174 $generated@@175 $generated@@176) (mod $generated@@175 $generated@@176))
 :pattern ( ($generated@@174 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 Int) ) (! (= ($generated@@166 ($generated@@8 ($generated@@157 $generated@@177))) ($generated@@159 ($generated@@166 ($generated@@8 $generated@@177))))
 :pattern ( ($generated@@166 ($generated@@8 ($generated@@157 $generated@@177))))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@166 ($generated@@159 $generated@@178)) ($generated@@159 ($generated@@166 $generated@@178)))
 :pattern ( ($generated@@166 ($generated@@159 $generated@@178)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 () Int)
(assert  (and (and (and (= (type $generated@@179) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@180) $generated@@47)) (= (type $generated@@181) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@182) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@191  (=> (= $generated@@179 ($generated@@45 $generated@@180 $generated@@181 $generated@@182 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@183 0))) (=> (not (= $generated@@183 0)) (=> (= $generated@@184 ($generated@@163 $generated@@185 $generated@@183)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@157 0) $generated@@184) (< $generated@@184 42))) (=> (and (<= ($generated@@157 0) $generated@@184) (< $generated@@184 42)) (=> (= $generated@@186 ($generated@@163 $generated@@185 $generated@@183)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@183 0))) (=> (not (= $generated@@183 0)) (=> (and (= $generated@@187 ($generated@@174 $generated@@185 $generated@@183)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@157 0) $generated@@187) (< $generated@@187 42))))))))))))))
(let (($generated@@192  (=> (and (and ($generated@@188 $generated@@181) ($generated@@189 $generated@@181)) (and (<= ($generated@@157 0) $generated@@185) (< $generated@@185 42))) (=> (and (and (and (<= ($generated@@157 0) $generated@@183) (< $generated@@183 42)) (= 1 $generated@@190)) (and (not (= $generated@@183 0)) (= (ControlFlow 0 6) 2))) $generated@@191))))
$generated@@192)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@325 (T@T T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@390 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@154)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@66) (= (type $generated@@271) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@267 $generated@@269) $generated@@270 $generated@@271) ($generated@@76 $generated@@269 $generated@@270 $generated@@271)))
 :pattern ( ($generated@@247 ($generated@@267 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@274) $generated@@154)) (= (type $generated@@275) $generated@@66)) ($generated@@134 $generated@@272 $generated@@273)) ($generated@@247 $generated@@274 $generated@@275 $generated@@272)) ($generated@@247 $generated@@274 $generated@@275 $generated@@273))
 :pattern ( ($generated@@134 $generated@@272 $generated@@273) ($generated@@247 $generated@@274 $generated@@275 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@276) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@279) $generated@@66)) ($generated@@134 $generated@@276 $generated@@277)) ($generated@@76 $generated@@278 $generated@@279 $generated@@276)) ($generated@@76 $generated@@278 $generated@@279 $generated@@277))
 :pattern ( ($generated@@134 $generated@@276 $generated@@277) ($generated@@76 $generated@@278 $generated@@279 $generated@@276))
)))
(assert (forall (($generated@@282 T@T) ) (! (= (type ($generated@@281 $generated@@282)) ($generated@@78 $generated@@282 $generated@@2))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@81 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@78 $generated@@284 $generated@@2)) (and (= (= ($generated@@280 $generated@@283) 0) (= $generated@@283 ($generated@@281 $generated@@284))) (=> (not (= ($generated@@280 $generated@@283) 0)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) (< 0 ($generated ($generated@@83 $generated@@283 $generated@@285))))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@78 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@83 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@83 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@78 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@81 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@78 $generated@@323 $generated@@2)) (= ($generated@@160 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@83 $generated@@322 $generated@@324))) (<= ($generated ($generated@@83 $generated@@322 $generated@@324)) ($generated@@280 $generated@@322))))
 :pattern ( ($generated@@83 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@160 $generated@@322))
)))
(assert (forall (($generated@@326 T@T) ($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@325 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@154) ($generated@@221 $generated@@328 $generated@@138)) (and (= ($generated@@267 ($generated@@325 $generated@@2 $generated@@328)) $generated@@328) ($generated@@141 ($generated@@325 $generated@@2 $generated@@328) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@328 $generated@@138))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@290 (type $generated@@329))))
(let (($generated@@331 ($generated@@289 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@288 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@287 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@286 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@290 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@78 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@290 (type $generated@@336))))
(let (($generated@@338 ($generated@@289 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@288 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@287 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@308 (type $generated@@340))))
(let (($generated@@342 ($generated@@307 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@306 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@305 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@304 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@308 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@78 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@308 (type $generated@@347))))
(let (($generated@@349 ($generated@@307 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@306 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@305 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@83 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@352) $generated@@66)) (= ($generated@@141 $generated@@351 ($generated@@159 $generated@@352)) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@351 $generated@@353)))) ($generated@@221 $generated@@353 $generated@@352))
 :pattern ( ($generated@@83 $generated@@351 $generated@@353))
))))
 :pattern ( ($generated@@141 $generated@@351 ($generated@@159 $generated@@352)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@355) $generated@@66)) (= (type $generated@@356) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@354 ($generated@@230 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@154) ($generated@@0 ($generated@@83 $generated@@354 $generated@@357))) ($generated@@247 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@83 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@76 $generated@@354 ($generated@@230 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@359) $generated@@66)) (= (type $generated@@360) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@358 ($generated@@235 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@154) ($generated@@0 ($generated@@83 $generated@@358 $generated@@361))) ($generated@@247 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@83 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@76 $generated@@358 ($generated@@235 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@83 ($generated@@281 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@83 ($generated@@281 $generated@@363) $generated@@362)))
)))
(assert  (and (forall (($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@366)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@364 $generated@@366))
)) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@290 (type $generated@@367))))
(let (($generated@@369 ($generated@@289 (type $generated@@367))))
(= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@369 $generated@@368))))
 :pattern ( ($generated@@365 $generated@@367))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@371) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@364 $generated@@370) $generated@@371))  (and ($generated@@0 ($generated@@83 ($generated@@286 $generated@@370) ($generated@@152 ($generated@@325 $generated@@145 $generated@@371)))) (= ($generated@@83 ($generated@@365 $generated@@370) ($generated@@152 ($generated@@325 $generated@@145 $generated@@371))) ($generated@@153 ($generated@@325 $generated@@145 $generated@@371))))))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@370) $generated@@371))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@308 (type $generated@@375))))
(let (($generated@@377 ($generated@@307 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@379) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@378) ($generated@@152 ($generated@@325 $generated@@145 $generated@@379)))) (= ($generated@@83 ($generated@@373 $generated@@378) ($generated@@152 ($generated@@325 $generated@@145 $generated@@379))) ($generated@@153 ($generated@@325 $generated@@145 $generated@@379))))))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@289 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@288 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@83 ($generated@@333 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@83 ($generated@@286 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@83 ($generated@@365 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@380) $generated@@384))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@307 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@306 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@83 ($generated@@344 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@83 ($generated@@373 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@385) $generated@@389))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@83 ($generated@@344 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@391 $generated@@392)) $generated@@66)
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@393) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@394) $generated@@66)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@393) $generated@@397))) (and ($generated@@247 ($generated@@83 ($generated@@365 $generated@@393) $generated@@397) $generated@@395 $generated@@396) ($generated@@247 $generated@@397 $generated@@394 $generated@@396)))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@393) $generated@@397))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@393) $generated@@397))
))))
 :pattern ( ($generated@@76 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@66)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@401) $generated@@405))) (and ($generated@@247 ($generated@@83 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@247 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@406) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@406 $generated@@408))) (and ($generated@@134 $generated@@406 $generated@@407) ($generated@@134 $generated@@407 $generated@@408))) ($generated@@134 $generated@@406 $generated@@408))
 :pattern ( ($generated@@134 $generated@@406 $generated@@407) ($generated@@134 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@78 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@308 (type $generated@@411))))
(let (($generated@@413 ($generated@@307 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@306 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@305 $generated@@413 $generated@@412)) (= ($generated@@304 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@304 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@308 (type $generated@@414))))
(let (($generated@@416 ($generated@@307 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@306 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@305 $generated@@416 $generated@@415)) (= ($generated@@344 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@344 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@308 (type $generated@@417))))
(let (($generated@@419 ($generated@@307 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@306 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@305 $generated@@419 $generated@@418)) (= ($generated@@372 $generated@@417) ($generated@@409 $generated@@154))))))
 :pattern ( ($generated@@372 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@290 (type $generated@@420))))
(let (($generated@@422 ($generated@@289 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@288 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@287 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@154) (= (type $generated@@424) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@364 $generated@@420) ($generated@@267 ($generated@@220 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@364 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@308 (type $generated@@425))))
(let (($generated@@427 ($generated@@307 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@306 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@305 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@154) (= (type $generated@@429) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@372 $generated@@425) ($generated@@267 ($generated@@220 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@372 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@154) ($generated@@221 $generated@@430 $generated@@46)) (and (= ($generated@@267 ($generated@@325 $generated@@2 $generated@@430)) $generated@@430) ($generated@@141 ($generated@@325 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@47)) (and (= ($generated@@267 ($generated@@325 $generated@@3 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@325 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@44)) (and (= ($generated@@267 ($generated@@325 $generated@@4 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@325 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 20))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@154) ($generated@@221 $generated@@434 $generated@@45)) (and (= ($generated@@267 ($generated@@325 $generated@@433 $generated@@434)) $generated@@434) ($generated@@141 ($generated@@325 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@66) (= ($generated@@221 ($generated@@267 $generated@@435) $generated@@436) ($generated@@141 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@221 ($generated@@267 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@81 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@78 $generated@@438 $generated@@2)) (<= 0 ($generated@@280 $generated@@437))))
 :pattern ( ($generated@@280 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@262 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@261 $generated@@440)) (<= 0 ($generated@@260 $generated@@439))))
 :pattern ( ($generated@@260 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@390 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@390 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@66)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@66) (= (type $generated@@448) $generated@@66)) (= ($generated@@445 ($generated@@390 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@390 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@74 ($generated@@390 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@390 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@398 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@398 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@398 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@74 ($generated@@398 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@398 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@154) (= (type $generated@@462) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@461 $generated@@462)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@144 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@144 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@144 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@144 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@154) (= (type $generated@@472) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@220 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@154) (= (type $generated@@474) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@220 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@262 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@261 $generated@@154)) (= (type $generated@@482) $generated@@66)) (= (type $generated@@483) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@260 $generated@@481))) ($generated@@247 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@77 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@77 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@487 ($generated@@230 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@230 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@491 ($generated@@235 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@235 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@495 ($generated@@159 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@159 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@499 ($generated@@475 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@475 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@74 ($generated@@475 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@325 $generated@@504 ($generated@@267 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@267 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@506) $generated@@66)) (= (type $generated@@507) $generated@@66)) (= ($generated@@141 $generated@@505 ($generated@@390 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@505) $generated@@508))) (and ($generated@@221 ($generated@@83 ($generated@@365 $generated@@505) $generated@@508) $generated@@507) ($generated@@221 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@505) $generated@@508))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@141 $generated@@505 ($generated@@390 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@510) $generated@@66)) (= (type $generated@@511) $generated@@66)) (= ($generated@@141 $generated@@509 ($generated@@398 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@509) $generated@@512))) (and ($generated@@221 ($generated@@83 ($generated@@373 $generated@@509) $generated@@512) $generated@@511) ($generated@@221 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@509) $generated@@512))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@141 $generated@@509 ($generated@@398 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@154) (= (type $generated@@516) $generated@@154)) (< ($generated@@513 $generated@@515) ($generated@@514 ($generated@@220 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@220 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@154) (= (type $generated@@518) $generated@@154)) (< ($generated@@513 $generated@@518) ($generated@@514 ($generated@@220 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@220 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@154) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) ($generated@@221 $generated@@519 ($generated@@390 $generated@@520 $generated@@521))) (and (= ($generated@@267 ($generated@@325 ($generated@@288 $generated@@154 $generated@@154) $generated@@519)) $generated@@519) ($generated@@141 ($generated@@325 ($generated@@288 $generated@@154 $generated@@154) $generated@@519) ($generated@@390 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@221 $generated@@519 ($generated@@390 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@154) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@221 $generated@@522 ($generated@@398 $generated@@523 $generated@@524))) (and (= ($generated@@267 ($generated@@325 ($generated@@306 $generated@@154 $generated@@154) $generated@@522)) $generated@@522) ($generated@@141 ($generated@@325 ($generated@@306 $generated@@154 $generated@@154) $generated@@522) ($generated@@398 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@221 $generated@@522 ($generated@@398 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@66) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@154)) ($generated@@221 $generated@@527 ($generated@@144 $generated@@525 $generated@@526))) (and (= ($generated@@267 ($generated@@325 $generated@@145 $generated@@527)) $generated@@527) ($generated@@141 ($generated@@325 $generated@@145 $generated@@527) ($generated@@144 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@221 $generated@@527 ($generated@@144 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@83 ($generated@@409 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@83 ($generated@@409 $generated@@529) $generated@@528)))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@71)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@66) (= (type $generated@@533) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@532 $generated@@533)) $generated@@62) (= ($generated@@530 ($generated@@144 $generated@@532 $generated@@533)) $generated@@64)))
 :pattern ( ($generated@@144 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@145) (= ($generated@@513 ($generated@@267 $generated@@534)) ($generated@@514 $generated@@534)))
 :pattern ( ($generated@@513 ($generated@@267 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@154) ($generated@@221 $generated@@535 ($generated@@77 0))) (and (= ($generated@@267 ($generated@@325 $generated@@2 $generated@@535)) $generated@@535) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@535) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@535 ($generated@@77 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@154) (= (type $generated@@537) $generated@@66)) ($generated@@221 $generated@@536 ($generated@@230 $generated@@537))) (and (= ($generated@@267 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@536)) $generated@@536) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@536) ($generated@@230 $generated@@537))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@230 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@154) (= (type $generated@@539) $generated@@66)) ($generated@@221 $generated@@538 ($generated@@235 $generated@@539))) (and (= ($generated@@267 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@538)) $generated@@538) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@538) ($generated@@235 $generated@@539))))
 :pattern ( ($generated@@221 $generated@@538 ($generated@@235 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@154) (= (type $generated@@541) $generated@@66)) ($generated@@221 $generated@@540 ($generated@@159 $generated@@541))) (and (= ($generated@@267 ($generated@@325 ($generated@@78 $generated@@154 $generated@@2) $generated@@540)) $generated@@540) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@2) $generated@@540) ($generated@@159 $generated@@541))))
 :pattern ( ($generated@@221 $generated@@540 ($generated@@159 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@66)) ($generated@@221 $generated@@542 ($generated@@475 $generated@@543))) (and (= ($generated@@267 ($generated@@325 ($generated@@261 $generated@@154) $generated@@542)) $generated@@542) ($generated@@141 ($generated@@325 ($generated@@261 $generated@@154) $generated@@542) ($generated@@475 $generated@@543))))
 :pattern ( ($generated@@221 $generated@@542 ($generated@@475 $generated@@543)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@63))
(assert (= ($generated@@530 $generated@@138) $generated@@65))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@544 ($generated@@159 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@544 $generated@@547)))) ($generated@@247 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@83 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@76 $generated@@544 ($generated@@159 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@550) (and ($generated@@143 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@66) ($generated@@76 $generated@@548 ($generated@@144 $generated@@549 $generated@@551) $generated@@550))
 :pattern ( ($generated@@76 $generated@@548 ($generated@@144 $generated@@549 $generated@@551) $generated@@550))
))))) ($generated@@247 ($generated@@152 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@554) (and ($generated@@143 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@66) ($generated@@76 $generated@@552 ($generated@@144 $generated@@555 $generated@@553) $generated@@554))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@144 $generated@@555 $generated@@553) $generated@@554))
))))) ($generated@@247 ($generated@@153 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@2) (= ($generated@@141 $generated@@556 $generated@@138)  (and (<= ($generated@@240 0) ($generated $generated@@556)) (< ($generated $generated@@556) 42))))
 :pattern ( ($generated@@141 $generated@@556 $generated@@138))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@267 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@267 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@267 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@267 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@267 $generated@@560)))
 :pattern ( ($generated@@267 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@262 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@261 $generated@@562)) (= ($generated@@260 $generated@@561) 0)) (= $generated@@561 ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@260 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@280 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@280 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@280 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@433)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@154)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@261 $generated@@154)) (= (type $generated@@578) $generated@@66)) (= ($generated@@141 $generated@@577 ($generated@@475 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@260 $generated@@577))) ($generated@@221 ($generated@@476 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@476 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@577 ($generated@@475 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@581))) (< ($generated@@514 ($generated@@325 $generated@@145 ($generated@@476 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@514 ($generated@@325 $generated@@145 ($generated@@476 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@141 $generated@@583 ($generated@@390 $generated@@584 $generated@@585))) (and (and ($generated@@141 ($generated@@286 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@141 ($generated@@333 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@141 ($generated@@364 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@390 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@398 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@304 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@141 ($generated@@344 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@141 ($generated@@372 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@398 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@141 $generated@@589 $generated@@46))
 :pattern ( ($generated@@141 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@141 $generated@@590 $generated@@47))
 :pattern ( ($generated@@141 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@141 $generated@@591 $generated@@44))
 :pattern ( ($generated@@141 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@433) ($generated@@141 $generated@@592 $generated@@45))
 :pattern ( ($generated@@141 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@141 $generated@@593 $generated@@48))
 :pattern ( ($generated@@141 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 (T@U) Bool)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(assert  (and (and (= (type $generated@@594) ($generated@@166 $generated@@79 $generated@@4)) (= (type $generated@@595) $generated@@79)) (= (type $generated@@596) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@606  (=> (and (= $generated@@594 ($generated@@165 $generated@@595 $generated@@596 $generated@@60 false)) (= $generated@@597 ($generated@@240 21))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@240 0) $generated@@597) (< $generated@@597 42))) (=> (and (<= ($generated@@240 0) $generated@@597) (< $generated@@597 42)) (=> (= $generated@@598 ($generated@@240 21)) (=> (and (and (<= ($generated@@240 0) $generated@@599) (< $generated@@599 42)) (= $generated@@600 ($generated@@240 4))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@240 0) $generated@@600) (< $generated@@600 42))) (=> (and (<= ($generated@@240 0) $generated@@600) (< $generated@@600 42)) (=> (and (= $generated@@601 ($generated@@240 4)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@601 0))))))))))))
(let (($generated@@607  (=> (and ($generated@@246 $generated@@596) ($generated@@602 $generated@@596)) (=> (and (and (<= ($generated@@240 0) $generated@@603) (< $generated@@603 42)) true) (=> (and (and (and (<= ($generated@@240 0) $generated@@604) (< $generated@@604 42)) true) (and (= 2 $generated@@605) (= (ControlFlow 0 5) 2))) $generated@@606)))))
$generated@@607)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@T T@U T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (Int) Int)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@215 (T@U T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@227 (T@T) T@U)
(declare-fun $generated@@228 (T@U) Int)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Int)
(declare-fun $generated@@251 (T@T) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@257 (T@T T@T) T@U)
(declare-fun $generated@@258 (T@T T@T) T@T)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@U)
(declare-fun $generated@@276 (T@T T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@292 (T@U T@U) Bool)
(declare-fun $generated@@301 (T@T T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@368 (T@U T@U) T@U)
(declare-fun $generated@@376 (T@U T@U) T@U)
(declare-fun $generated@@387 (T@T) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@416 () T@T)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@459 (T@U Int) T@U)
(declare-fun $generated@@468 (T@U) Int)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@497 (T@U) Int)
(declare-fun $generated@@513 (T@U T@U T@U) T@U)
(declare-fun $generated@@514 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@515 (T@T T@T) T@T)
(declare-fun $generated@@516 (T@T) T@T)
(declare-fun $generated@@517 (T@T) T@T)
(declare-fun $generated@@518 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@623 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert (= (type $generated@@181) $generated@@70))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@182) $generated@@88) (= (type $generated@@183) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@182 $generated@@181 $generated@@183) ($generated@@85 $generated@@182 $generated@@147 $generated@@183)))
 :pattern ( ($generated@@85 $generated@@182 $generated@@181 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@186 $generated@@187)) $generated@@161)
 :pattern ( ($generated@@184 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@70) (= (type $generated@@189) $generated@@70)) (= (type $generated@@190) $generated@@170)) (= (type $generated@@191) $generated@@170)) (= ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189))  (and ($generated@@185 $generated@@190 $generated@@188) ($generated@@185 $generated@@191 $generated@@189))))
 :pattern ( ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@72 $generated@@193))
 :pattern ( ($generated@@192 $generated@@193 $generated@@194 $generated@@195))
)))
(assert (= ($generated@@192 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@196 $generated@@151)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@161) (= (type $generated@@198) $generated@@161)) (= ($generated@@167 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@167 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@70)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@202) $generated@@70)) (= ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)) (forall (($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@170) ($generated@@0 ($generated@@92 $generated@@201 $generated@@203))) ($generated@@185 $generated@@203 $generated@@202))
 :pattern ( ($generated@@92 $generated@@201 $generated@@203))
))))
 :pattern ( ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@70)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@207) $generated@@70)) (= ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@170) ($generated@@0 ($generated@@92 $generated@@206 $generated@@208))) ($generated@@185 $generated@@208 $generated@@207))
 :pattern ( ($generated@@92 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 Int) ) (! (= ($generated@@209 $generated@@210) $generated@@210)
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(= (type ($generated@@211 $generated@@212)) $generated@@213))
 :pattern ( ($generated@@211 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (! (= ($generated@@211 $generated@@214) $generated@@214)
 :pattern ( ($generated@@211 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@216) $generated@@70) (= (type $generated@@217) $generated@@70)) (= (type $generated@@218) $generated@@170)) (= (type $generated@@219) $generated@@170)) (= (type $generated@@220) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@220)) (= ($generated@@85 ($generated@@184 $generated@@218 $generated@@219) ($generated@@160 $generated@@216 $generated@@217) $generated@@220)  (and ($generated@@215 $generated@@218 $generated@@216 $generated@@220) ($generated@@215 $generated@@219 $generated@@217 $generated@@220))))
 :pattern ( ($generated@@85 ($generated@@184 $generated@@218 $generated@@219) ($generated@@160 $generated@@216 $generated@@217) $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@75)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@161) (= ($generated@@159 $generated@@223) (= ($generated@@221 $generated@@223) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@161) ($generated@@159 $generated@@224)) (exists (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (and (and (= (type $generated@@225) $generated@@170) (= (type $generated@@226) $generated@@170)) (= $generated@@224 ($generated@@184 $generated@@225 $generated@@226)))
 :no-pattern (type $generated@@225)
 :no-pattern (type $generated@@226)
 :no-pattern ($generated $generated@@225)
 :no-pattern ($generated@@0 $generated@@225)
 :no-pattern ($generated $generated@@226)
 :no-pattern ($generated@@0 $generated@@226)
)))
 :pattern ( ($generated@@159 $generated@@224))
)))
(assert  (and (and (forall (($generated@@231 T@T) ) (= ($generated@@1 ($generated@@229 $generated@@231)) 18)) (forall (($generated@@232 T@T) ) (! (= ($generated@@230 ($generated@@229 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@229 $generated@@232))
))) (forall (($generated@@233 T@T) ) (! (= (type ($generated@@227 $generated@@233)) ($generated@@229 $generated@@233))
 :pattern ( ($generated@@227 $generated@@233))
))))
(assert (forall (($generated@@234 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@234)) 0)
 :pattern ( ($generated@@227 $generated@@234))
)))
(assert ($generated@@196 $generated@@60))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@170)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@70) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@215 ($generated@@235 $generated@@237) $generated@@238 $generated@@239) ($generated@@85 $generated@@237 $generated@@238 $generated@@239)))
 :pattern ( ($generated@@215 ($generated@@235 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@240) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@241) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@242) $generated@@170)) (= (type $generated@@243) $generated@@70)) ($generated@@143 $generated@@240 $generated@@241)) ($generated@@215 $generated@@242 $generated@@243 $generated@@240)) ($generated@@215 $generated@@242 $generated@@243 $generated@@241))
 :pattern ( ($generated@@143 $generated@@240 $generated@@241) ($generated@@215 $generated@@242 $generated@@243 $generated@@240))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@244) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@245) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@247) $generated@@70)) ($generated@@143 $generated@@244 $generated@@245)) ($generated@@85 $generated@@246 $generated@@247 $generated@@244)) ($generated@@85 $generated@@246 $generated@@247 $generated@@245))
 :pattern ( ($generated@@143 $generated@@244 $generated@@245) ($generated@@85 $generated@@246 $generated@@247 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@249) $generated@@88)) (=> (and (and ($generated@@152 $generated@@248) (and (not (= $generated@@249 $generated@@148)) (= ($generated@@153 $generated@@249) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@151) $generated@@46 $generated@@248)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@151))
)))
(assert (forall (($generated@@252 T@T) ) (! (= (type ($generated@@251 $generated@@252)) ($generated@@87 $generated@@252 $generated@@2))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@90 (type $generated@@253))))
 (=> (= (type $generated@@253) ($generated@@87 $generated@@254 $generated@@2)) (and (= (= ($generated@@250 $generated@@253) 0) (= $generated@@253 ($generated@@251 $generated@@254))) (=> (not (= ($generated@@250 $generated@@253) 0)) (exists (($generated@@255 T@U) ) (!  (and (= (type $generated@@255) $generated@@254) (< 0 ($generated ($generated@@92 $generated@@253 $generated@@255))))
 :no-pattern (type $generated@@255)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
))))))
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert  (and (and (and (and (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (= ($generated@@1 ($generated@@258 $generated@@261 $generated@@262)) 19)) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@263 $generated@@264)) $generated@@263)
 :pattern ( ($generated@@258 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@258 $generated@@265 $generated@@266)) $generated@@266)
 :pattern ( ($generated@@258 $generated@@265 $generated@@266))
))) (forall (($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@259 (type $generated@@267))))
(= (type ($generated@@256 $generated@@267)) ($generated@@87 $generated@@268 $generated@@4)))
 :pattern ( ($generated@@256 $generated@@267))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= (type ($generated@@257 $generated@@269 $generated@@270)) ($generated@@258 $generated@@269 $generated@@270))
 :pattern ( ($generated@@257 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@T) ) (! (let (($generated@@273 (type $generated@@271)))
 (not ($generated@@0 ($generated@@92 ($generated@@256 ($generated@@257 $generated@@273 $generated@@272)) $generated@@271))))
 :pattern ( (let (($generated@@273 (type $generated@@271)))
($generated@@92 ($generated@@256 ($generated@@257 $generated@@273 $generated@@272)) $generated@@271)))
)))
(assert  (and (and (and (and (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@279 $generated@@280)) 20)) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@281 $generated@@282)) $generated@@281)
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@276 $generated@@283 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@276 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@277 (type $generated@@285))))
(= (type ($generated@@274 $generated@@285)) ($generated@@87 $generated@@286 $generated@@4)))
 :pattern ( ($generated@@274 $generated@@285))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= (type ($generated@@275 $generated@@287 $generated@@288)) ($generated@@276 $generated@@287 $generated@@288))
 :pattern ( ($generated@@275 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@T) ) (! (let (($generated@@291 (type $generated@@289)))
 (not ($generated@@0 ($generated@@92 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289))))
 :pattern ( (let (($generated@@291 (type $generated@@289)))
($generated@@92 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289)))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (= (type $generated@@293) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@294) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@292 $generated@@293 $generated@@294)) (and ($generated@@143 $generated@@293 $generated@@294) (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@73 (type $generated@@296))))
 (=> (and (and (= (type $generated@@295) $generated@@88) (= (type $generated@@296) ($generated@@72 $generated@@297))) (not ($generated@@196 $generated@@296))) (= ($generated@@94 ($generated@@92 $generated@@293 $generated@@295) $generated@@296) ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@296))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@296))
))))
 :pattern ( ($generated@@292 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@90 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@87 $generated@@299 $generated@@2)) (= ($generated@@176 $generated@@298) (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@299) (and (<= 0 ($generated ($generated@@92 $generated@@298 $generated@@300))) (<= ($generated ($generated@@92 $generated@@298 $generated@@300)) ($generated@@250 $generated@@298))))
 :pattern ( ($generated@@92 $generated@@298 $generated@@300))
)))))
 :pattern ( ($generated@@176 $generated@@298))
)))
(assert (forall (($generated@@302 T@T) ($generated@@303 T@U) ) (! (= (type ($generated@@301 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@301 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@170) ($generated@@185 $generated@@304 $generated@@147)) (and (= ($generated@@235 ($generated@@301 $generated@@88 $generated@@304)) $generated@@304) ($generated@@154 ($generated@@301 $generated@@88 $generated@@304) $generated@@147)))
 :pattern ( ($generated@@185 $generated@@304 $generated@@147))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@170) ($generated@@185 $generated@@305 $generated@@181)) (and (= ($generated@@235 ($generated@@301 $generated@@88 $generated@@305)) $generated@@305) ($generated@@154 ($generated@@301 $generated@@88 $generated@@305) $generated@@181)))
 :pattern ( ($generated@@185 $generated@@305 $generated@@181))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@88) (= ($generated@@154 $generated@@306 $generated@@181)  (and ($generated@@154 $generated@@306 $generated@@147) (not (= $generated@@306 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@306 $generated@@181))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@260 (type $generated@@307))))
(let (($generated@@309 ($generated@@259 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@258 $generated@@309 $generated@@308)) (or (= $generated@@307 ($generated@@257 $generated@@309 $generated@@308)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@307) $generated@@310)))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@256 $generated@@307))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@260 (type $generated@@312))))
(= (type ($generated@@311 $generated@@312)) ($generated@@87 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@260 (type $generated@@314))))
(let (($generated@@316 ($generated@@259 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@258 $generated@@316 $generated@@315)) (or (= $generated@@314 ($generated@@257 $generated@@316 $generated@@315)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@315) ($generated@@0 ($generated@@92 ($generated@@311 $generated@@314) $generated@@317)))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@278 (type $generated@@318))))
(let (($generated@@320 ($generated@@277 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@276 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@275 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@274 $generated@@318))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@278 (type $generated@@323))))
(= (type ($generated@@322 $generated@@323)) ($generated@@87 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@278 (type $generated@@325))))
(let (($generated@@327 ($generated@@277 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@276 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@275 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@326) ($generated@@0 ($generated@@92 ($generated@@322 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@330) $generated@@70)) (= ($generated@@154 $generated@@329 ($generated@@175 $generated@@330)) (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@329 $generated@@331)))) ($generated@@185 $generated@@331 $generated@@330))
 :pattern ( ($generated@@92 $generated@@329 $generated@@331))
))))
 :pattern ( ($generated@@154 $generated@@329 ($generated@@175 $generated@@330)))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (= (type $generated@@332) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@333) $generated@@70)) (= (type $generated@@334) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@332 ($generated@@199 $generated@@333) $generated@@334) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@170) ($generated@@0 ($generated@@92 $generated@@332 $generated@@335))) ($generated@@215 $generated@@335 $generated@@333 $generated@@334))
 :pattern ( ($generated@@92 $generated@@332 $generated@@335))
))))
 :pattern ( ($generated@@85 $generated@@332 ($generated@@199 $generated@@333) $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@337) $generated@@70)) (= (type $generated@@338) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@336 ($generated@@204 $generated@@337) $generated@@338) (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@170) ($generated@@0 ($generated@@92 $generated@@336 $generated@@339))) ($generated@@215 $generated@@339 $generated@@337 $generated@@338))
 :pattern ( ($generated@@92 $generated@@336 $generated@@339))
))))
 :pattern ( ($generated@@85 $generated@@336 ($generated@@204 $generated@@337) $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 (type $generated@@340)))
(= ($generated ($generated@@92 ($generated@@251 $generated@@341) $generated@@340)) 0))
 :pattern ( (let (($generated@@341 (type $generated@@340)))
($generated@@92 ($generated@@251 $generated@@341) $generated@@340)))
)))
(assert  (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@342 $generated@@344))
)) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@260 (type $generated@@345))))
(let (($generated@@347 ($generated@@259 (type $generated@@345))))
(= (type ($generated@@343 $generated@@345)) ($generated@@87 $generated@@347 $generated@@346))))
 :pattern ( ($generated@@343 $generated@@345))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@349) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@342 $generated@@348) $generated@@349))  (and ($generated@@0 ($generated@@92 ($generated@@256 $generated@@348) ($generated@@168 ($generated@@301 $generated@@161 $generated@@349)))) (= ($generated@@92 ($generated@@343 $generated@@348) ($generated@@168 ($generated@@301 $generated@@161 $generated@@349))) ($generated@@169 ($generated@@301 $generated@@161 $generated@@349))))))
 :pattern ( ($generated@@92 ($generated@@342 $generated@@348) $generated@@349))
)))
(assert  (and (forall (($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@352)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@350 $generated@@352))
)) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@278 (type $generated@@353))))
(let (($generated@@355 ($generated@@277 (type $generated@@353))))
(= (type ($generated@@351 $generated@@353)) ($generated@@87 $generated@@355 $generated@@354))))
 :pattern ( ($generated@@351 $generated@@353))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@357) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@350 $generated@@356) $generated@@357))  (and ($generated@@0 ($generated@@92 ($generated@@274 $generated@@356) ($generated@@168 ($generated@@301 $generated@@161 $generated@@357)))) (= ($generated@@92 ($generated@@351 $generated@@356) ($generated@@168 ($generated@@301 $generated@@161 $generated@@357))) ($generated@@169 ($generated@@301 $generated@@161 $generated@@357))))))
 :pattern ( ($generated@@92 ($generated@@350 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(let (($generated@@361 ($generated@@259 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@258 $generated@@361 $generated@@360)) (= ($generated@@0 ($generated@@92 ($generated@@311 $generated@@358) $generated@@359)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) (and ($generated@@0 ($generated@@92 ($generated@@256 $generated@@358) $generated@@362)) (= $generated@@359 ($generated@@92 ($generated@@343 $generated@@358) $generated@@362))))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@358) $generated@@362))
 :pattern ( ($generated@@92 ($generated@@343 $generated@@358) $generated@@362))
))))))
 :pattern ( ($generated@@92 ($generated@@311 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(let (($generated@@366 ($generated@@277 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@276 $generated@@366 $generated@@365)) (= ($generated@@0 ($generated@@92 ($generated@@322 $generated@@363) $generated@@364)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (and ($generated@@0 ($generated@@92 ($generated@@274 $generated@@363) $generated@@367)) (= $generated@@364 ($generated@@92 ($generated@@351 $generated@@363) $generated@@367))))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@363) $generated@@367))
 :pattern ( ($generated@@92 ($generated@@351 $generated@@363) $generated@@367))
))))))
 :pattern ( ($generated@@92 ($generated@@322 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@369 $generated@@370)) $generated@@70)
 :pattern ( ($generated@@368 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (= (type $generated@@371) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@372) $generated@@70)) (= (type $generated@@373) $generated@@70)) (= (type $generated@@374) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@371 ($generated@@368 $generated@@372 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@371) $generated@@375))) (and ($generated@@215 ($generated@@92 ($generated@@343 $generated@@371) $generated@@375) $generated@@373 $generated@@374) ($generated@@215 $generated@@375 $generated@@372 $generated@@374)))
 :pattern ( ($generated@@92 ($generated@@343 $generated@@371) $generated@@375))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@371) $generated@@375))
))))
 :pattern ( ($generated@@85 $generated@@371 ($generated@@368 $generated@@372 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@377 $generated@@378)) $generated@@70)
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (and (= (type $generated@@379) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) $generated@@70)) (= (type $generated@@382) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@379) $generated@@383))) (and ($generated@@215 ($generated@@92 ($generated@@351 $generated@@379) $generated@@383) $generated@@381 $generated@@382) ($generated@@215 $generated@@383 $generated@@380 $generated@@382)))
 :pattern ( ($generated@@92 ($generated@@351 $generated@@379) $generated@@383))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@379) $generated@@383))
))))
 :pattern ( ($generated@@85 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@384) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@385) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@386) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@384 $generated@@386))) (and ($generated@@143 $generated@@384 $generated@@385) ($generated@@143 $generated@@385 $generated@@386))) ($generated@@143 $generated@@384 $generated@@386))
 :pattern ( ($generated@@143 $generated@@384 $generated@@385) ($generated@@143 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@T) ) (! (= (type ($generated@@387 $generated@@388)) ($generated@@87 $generated@@388 $generated@@4))
 :pattern ( ($generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@278 (type $generated@@389))))
(let (($generated@@391 ($generated@@277 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@276 $generated@@391 $generated@@390)) (= (= $generated@@389 ($generated@@275 $generated@@391 $generated@@390)) (= ($generated@@274 $generated@@389) ($generated@@387 $generated@@391))))))
 :pattern ( ($generated@@274 $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@278 (type $generated@@392))))
(let (($generated@@394 ($generated@@277 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@276 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@275 $generated@@394 $generated@@393)) (= ($generated@@322 $generated@@392) ($generated@@387 $generated@@393))))))
 :pattern ( ($generated@@322 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@278 (type $generated@@395))))
(let (($generated@@397 ($generated@@277 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@276 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@275 $generated@@397 $generated@@396)) (= ($generated@@350 $generated@@395) ($generated@@387 $generated@@170))))))
 :pattern ( ($generated@@350 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@260 (type $generated@@398))))
(let (($generated@@400 ($generated@@259 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@258 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@257 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (and (and (= (type $generated@@401) $generated@@170) (= (type $generated@@402) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@342 $generated@@398) ($generated@@235 ($generated@@184 $generated@@401 $generated@@402)))))
 :no-pattern (type $generated@@401)
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@342 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@278 (type $generated@@403))))
(let (($generated@@405 ($generated@@277 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@276 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@275 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (and (and (= (type $generated@@406) $generated@@170) (= (type $generated@@407) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@350 $generated@@403) ($generated@@235 ($generated@@184 $generated@@406 $generated@@407)))))
 :no-pattern (type $generated@@406)
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@350 $generated@@403))
)))
(assert (forall (($generated@@409 T@U) ) (! (= (type ($generated@@408 $generated@@409)) $generated@@76)
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@T) ) (!  (=> (and (= (type $generated@@410) $generated@@76) (= (type $generated@@411) $generated@@74)) (and (= ($generated@@408 ($generated@@192 $generated@@412 $generated@@410 $generated@@411)) $generated@@410) (= ($generated@@83 ($generated@@192 $generated@@412 $generated@@410 $generated@@411)) $generated@@411)))
 :pattern ( ($generated@@192 $generated@@412 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@170) ($generated@@185 $generated@@413 $generated@@46)) (and (= ($generated@@235 ($generated@@301 $generated@@2 $generated@@413)) $generated@@413) ($generated@@154 ($generated@@301 $generated@@2 $generated@@413) $generated@@46)))
 :pattern ( ($generated@@185 $generated@@413 $generated@@46))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@170) ($generated@@185 $generated@@414 $generated@@47)) (and (= ($generated@@235 ($generated@@301 $generated@@3 $generated@@414)) $generated@@414) ($generated@@154 ($generated@@301 $generated@@3 $generated@@414) $generated@@47)))
 :pattern ( ($generated@@185 $generated@@414 $generated@@47))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@170) ($generated@@185 $generated@@415 $generated@@44)) (and (= ($generated@@235 ($generated@@301 $generated@@4 $generated@@415)) $generated@@415) ($generated@@154 ($generated@@301 $generated@@4 $generated@@415) $generated@@44)))
 :pattern ( ($generated@@185 $generated@@415 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@416) 21))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@170) ($generated@@185 $generated@@417 $generated@@45)) (and (= ($generated@@235 ($generated@@301 $generated@@416 $generated@@417)) $generated@@417) ($generated@@154 ($generated@@301 $generated@@416 $generated@@417) $generated@@45)))
 :pattern ( ($generated@@185 $generated@@417 $generated@@45))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@70) (= ($generated@@185 ($generated@@235 $generated@@418) $generated@@419) ($generated@@154 $generated@@418 $generated@@419)))
 :pattern ( ($generated@@185 ($generated@@235 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@90 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@87 $generated@@421 $generated@@2)) (<= 0 ($generated@@250 $generated@@420))))
 :pattern ( ($generated@@250 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@230 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@229 $generated@@423)) (<= 0 ($generated@@228 $generated@@422))))
 :pattern ( ($generated@@228 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@70) (= (type $generated@@427) $generated@@70)) (= ($generated@@424 ($generated@@368 $generated@@426 $generated@@427)) $generated@@426))
 :pattern ( ($generated@@368 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@70) (= (type $generated@@431) $generated@@70)) (= ($generated@@428 ($generated@@368 $generated@@430 $generated@@431)) $generated@@431))
 :pattern ( ($generated@@368 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@70) (= (type $generated@@433) $generated@@70)) (= ($generated@@81 ($generated@@368 $generated@@432 $generated@@433)) $generated@@58))
 :pattern ( ($generated@@368 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@70)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@70) (= (type $generated@@437) $generated@@70)) (= ($generated@@434 ($generated@@376 $generated@@436 $generated@@437)) $generated@@436))
 :pattern ( ($generated@@376 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@70)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@70) (= (type $generated@@441) $generated@@70)) (= ($generated@@438 ($generated@@376 $generated@@440 $generated@@441)) $generated@@441))
 :pattern ( ($generated@@376 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@70) (= (type $generated@@443) $generated@@70)) (= ($generated@@81 ($generated@@376 $generated@@442 $generated@@443)) $generated@@59))
 :pattern ( ($generated@@376 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@170) (= (type $generated@@445) $generated@@170)) (= ($generated@@221 ($generated@@184 $generated@@444 $generated@@445)) $generated@@62))
 :pattern ( ($generated@@184 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@70)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@70) (= (type $generated@@449) $generated@@70)) (= ($generated@@446 ($generated@@160 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@160 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@70)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@70) (= (type $generated@@453) $generated@@70)) (= ($generated@@450 ($generated@@160 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@160 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@170) (= (type $generated@@455) $generated@@170)) (= ($generated@@168 ($generated@@184 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@184 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@170) (= (type $generated@@457) $generated@@170)) (= ($generated@@169 ($generated@@184 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@184 $generated@@456 $generated@@457))
)))
(assert  (and (forall (($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@460)) $generated@@70)
 :pattern ( ($generated@@458 $generated@@460))
)) (forall (($generated@@461 T@U) ($generated@@462 Int) ) (! (let (($generated@@463 ($generated@@230 (type $generated@@461))))
(= (type ($generated@@459 $generated@@461 $generated@@462)) $generated@@463))
 :pattern ( ($generated@@459 $generated@@461 $generated@@462))
))))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@464) ($generated@@229 $generated@@170)) (= (type $generated@@465) $generated@@70)) (= (type $generated@@466) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@464 ($generated@@458 $generated@@465) $generated@@466) (forall (($generated@@467 Int) ) (!  (=> (and (<= 0 $generated@@467) (< $generated@@467 ($generated@@228 $generated@@464))) ($generated@@215 ($generated@@459 $generated@@464 $generated@@467) $generated@@465 $generated@@466))
 :pattern ( ($generated@@459 $generated@@464 $generated@@467))
))))
 :pattern ( ($generated@@85 $generated@@464 ($generated@@458 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@469 Int) ) (! (= ($generated@@468 ($generated@@86 $generated@@469)) $generated@@469)
 :pattern ( ($generated@@86 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@70)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@70) (= ($generated@@470 ($generated@@199 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@199 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@70) (= ($generated@@81 ($generated@@199 $generated@@473)) $generated@@54))
 :pattern ( ($generated@@199 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@70)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@70) (= ($generated@@474 ($generated@@204 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@204 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@70) (= ($generated@@81 ($generated@@204 $generated@@477)) $generated@@55))
 :pattern ( ($generated@@204 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@70) (= ($generated@@478 ($generated@@175 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@175 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@481)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@70) (= ($generated@@482 ($generated@@458 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@458 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@70) (= ($generated@@81 ($generated@@458 $generated@@485)) $generated@@57))
 :pattern ( ($generated@@458 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
(= ($generated@@301 $generated@@487 ($generated@@235 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@235 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@489) $generated@@70)) (= (type $generated@@490) $generated@@70)) (= ($generated@@154 $generated@@488 ($generated@@368 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@488) $generated@@491))) (and ($generated@@185 ($generated@@92 ($generated@@343 $generated@@488) $generated@@491) $generated@@490) ($generated@@185 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@92 ($generated@@343 $generated@@488) $generated@@491))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@154 $generated@@488 ($generated@@368 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@493) $generated@@70)) (= (type $generated@@494) $generated@@70)) (= ($generated@@154 $generated@@492 ($generated@@376 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@492) $generated@@495))) (and ($generated@@185 ($generated@@92 ($generated@@351 $generated@@492) $generated@@495) $generated@@494) ($generated@@185 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@92 ($generated@@351 $generated@@492) $generated@@495))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@154 $generated@@492 ($generated@@376 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) (= (type $generated@@499) $generated@@170)) (< ($generated@@496 $generated@@498) ($generated@@497 ($generated@@184 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@184 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@170) (= (type $generated@@501) $generated@@170)) (< ($generated@@496 $generated@@501) ($generated@@497 ($generated@@184 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@184 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) $generated@@170) (= (type $generated@@503) $generated@@70)) (= (type $generated@@504) $generated@@70)) ($generated@@185 $generated@@502 ($generated@@368 $generated@@503 $generated@@504))) (and (= ($generated@@235 ($generated@@301 ($generated@@258 $generated@@170 $generated@@170) $generated@@502)) $generated@@502) ($generated@@154 ($generated@@301 ($generated@@258 $generated@@170 $generated@@170) $generated@@502) ($generated@@368 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@185 $generated@@502 ($generated@@368 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) $generated@@170) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) $generated@@70)) ($generated@@185 $generated@@505 ($generated@@376 $generated@@506 $generated@@507))) (and (= ($generated@@235 ($generated@@301 ($generated@@276 $generated@@170 $generated@@170) $generated@@505)) $generated@@505) ($generated@@154 ($generated@@301 ($generated@@276 $generated@@170 $generated@@170) $generated@@505) ($generated@@376 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@185 $generated@@505 ($generated@@376 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@70) (= (type $generated@@509) $generated@@70)) (= (type $generated@@510) $generated@@170)) ($generated@@185 $generated@@510 ($generated@@160 $generated@@508 $generated@@509))) (and (= ($generated@@235 ($generated@@301 $generated@@161 $generated@@510)) $generated@@510) ($generated@@154 ($generated@@301 $generated@@161 $generated@@510) ($generated@@160 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@185 $generated@@510 ($generated@@160 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
 (not ($generated@@0 ($generated@@92 ($generated@@387 $generated@@512) $generated@@511))))
 :pattern ( (let (($generated@@512 (type $generated@@511)))
($generated@@92 ($generated@@387 $generated@@512) $generated@@511)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@519 T@T) ($generated@@520 T@T) ) (= ($generated@@1 ($generated@@515 $generated@@519 $generated@@520)) 22)) (forall (($generated@@521 T@T) ($generated@@522 T@T) ) (! (= ($generated@@516 ($generated@@515 $generated@@521 $generated@@522)) $generated@@521)
 :pattern ( ($generated@@515 $generated@@521 $generated@@522))
))) (forall (($generated@@523 T@T) ($generated@@524 T@T) ) (! (= ($generated@@517 ($generated@@515 $generated@@523 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@515 $generated@@523 $generated@@524))
))) (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (! (let (($generated@@528 ($generated@@517 (type $generated@@525))))
(= (type ($generated@@513 $generated@@525 $generated@@526 $generated@@527)) $generated@@528))
 :pattern ( ($generated@@513 $generated@@525 $generated@@526 $generated@@527))
))) (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
(let (($generated@@534 (type $generated@@530)))
(= (type ($generated@@518 $generated@@529 $generated@@530 $generated@@531 $generated@@532)) ($generated@@515 $generated@@534 $generated@@533))))
 :pattern ( ($generated@@518 $generated@@529 $generated@@530 $generated@@531 $generated@@532))
))) (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@517 (type $generated@@535))))
 (=> (= (type $generated@@538) $generated@@539) (= ($generated@@513 ($generated@@518 $generated@@535 $generated@@536 $generated@@537 $generated@@538) $generated@@536 $generated@@537) $generated@@538)))
 :weight 0
))) (and (and (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (or (= $generated@@542 $generated@@544) (= ($generated@@513 ($generated@@518 $generated@@541 $generated@@542 $generated@@543 $generated@@540) $generated@@544 $generated@@545) ($generated@@513 $generated@@541 $generated@@544 $generated@@545)))
 :weight 0
)) (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (or (= $generated@@549 $generated@@551) (= ($generated@@513 ($generated@@518 $generated@@547 $generated@@548 $generated@@549 $generated@@546) $generated@@550 $generated@@551) ($generated@@513 $generated@@547 $generated@@550 $generated@@551)))
 :weight 0
))) (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (or true (= ($generated@@513 ($generated@@518 $generated@@553 $generated@@554 $generated@@555 $generated@@552) $generated@@556 $generated@@557) ($generated@@513 $generated@@553 $generated@@556 $generated@@557)))
 :weight 0
)))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (= (type ($generated@@514 $generated@@558 $generated@@559 $generated@@560 $generated@@561)) ($generated@@515 $generated@@88 $generated@@4))
 :pattern ( ($generated@@514 $generated@@558 $generated@@559 $generated@@560 $generated@@561))
))))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@73 (type $generated@@567))))
 (=> (and (and (and (and (and (= (type $generated@@562) $generated@@88) (= (type $generated@@563) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@564) ($generated@@72 $generated@@4))) (= (type $generated@@565) $generated@@88)) (= (type $generated@@566) $generated@@88)) (= (type $generated@@567) ($generated@@72 $generated@@568))) (= ($generated@@0 ($generated@@513 ($generated@@514 $generated@@562 $generated@@563 $generated@@564 $generated@@565) $generated@@566 $generated@@567))  (=> (and (not (= $generated@@566 $generated@@562)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@563 $generated@@566) $generated@@564))) (= $generated@@566 $generated@@565)))))
 :pattern ( ($generated@@513 ($generated@@514 $generated@@562 $generated@@563 $generated@@564 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@70) (= (type $generated@@572) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@160 $generated@@571 $generated@@572)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@161) (= ($generated@@496 ($generated@@235 $generated@@573)) ($generated@@497 $generated@@573)))
 :pattern ( ($generated@@496 ($generated@@235 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@170) ($generated@@185 $generated@@574 ($generated@@86 0))) (and (= ($generated@@235 ($generated@@301 $generated@@2 $generated@@574)) $generated@@574) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@574) ($generated@@86 0))))
 :pattern ( ($generated@@185 $generated@@574 ($generated@@86 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@70)) ($generated@@185 $generated@@575 ($generated@@199 $generated@@576))) (and (= ($generated@@235 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@575) ($generated@@199 $generated@@576))))
 :pattern ( ($generated@@185 $generated@@575 ($generated@@199 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@185 $generated@@577 ($generated@@204 $generated@@578))) (and (= ($generated@@235 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@577) ($generated@@204 $generated@@578))))
 :pattern ( ($generated@@185 $generated@@577 ($generated@@204 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@185 $generated@@579 ($generated@@175 $generated@@580))) (and (= ($generated@@235 ($generated@@301 ($generated@@87 $generated@@170 $generated@@2) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@2) $generated@@579) ($generated@@175 $generated@@580))))
 :pattern ( ($generated@@185 $generated@@579 ($generated@@175 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@170) (= (type $generated@@582) $generated@@70)) ($generated@@185 $generated@@581 ($generated@@458 $generated@@582))) (and (= ($generated@@235 ($generated@@301 ($generated@@229 $generated@@170) $generated@@581)) $generated@@581) ($generated@@154 ($generated@@301 ($generated@@229 $generated@@170) $generated@@581) ($generated@@458 $generated@@582))))
 :pattern ( ($generated@@185 $generated@@581 ($generated@@458 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
 (=> (and (and (and (= (type $generated@@583) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@584) $generated@@88)) (= (type $generated@@585) ($generated@@72 $generated@@587))) ($generated@@152 ($generated@@93 $generated@@583 $generated@@584 ($generated@@95 ($generated@@92 $generated@@583 $generated@@584) $generated@@585 $generated@@586)))) ($generated@@143 $generated@@583 ($generated@@93 $generated@@583 $generated@@584 ($generated@@95 ($generated@@92 $generated@@583 $generated@@584) $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@93 $generated@@583 $generated@@584 ($generated@@95 ($generated@@92 $generated@@583 $generated@@584) $generated@@585 $generated@@586)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@569 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@181) $generated@@66))
(assert (= ($generated@@569 $generated@@181) $generated@@68))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@588 ($generated@@175 $generated@@589) $generated@@590) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@588 $generated@@591)))) ($generated@@215 $generated@@591 $generated@@589 $generated@@590))
 :pattern ( ($generated@@92 $generated@@588 $generated@@591))
))))
 :pattern ( ($generated@@85 $generated@@588 ($generated@@175 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@161) (= (type $generated@@593) $generated@@70)) (= (type $generated@@594) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@594) (and ($generated@@159 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@70) ($generated@@85 $generated@@592 ($generated@@160 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@85 $generated@@592 ($generated@@160 $generated@@593 $generated@@595) $generated@@594))
))))) ($generated@@215 ($generated@@168 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@215 ($generated@@168 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@161) (= (type $generated@@597) $generated@@70)) (= (type $generated@@598) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@598) (and ($generated@@159 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@70) ($generated@@85 $generated@@596 ($generated@@160 $generated@@599 $generated@@597) $generated@@598))
 :pattern ( ($generated@@85 $generated@@596 ($generated@@160 $generated@@599 $generated@@597) $generated@@598))
))))) ($generated@@215 ($generated@@169 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@215 ($generated@@169 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@170) (= (type $generated@@601) $generated@@170)) (= ($generated@@184 ($generated@@211 $generated@@600) ($generated@@211 $generated@@601)) ($generated@@211 ($generated@@184 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@184 ($generated@@211 $generated@@600) ($generated@@211 $generated@@601)))
)))
(assert (forall (($generated@@602 Int) ) (! (= ($generated@@235 ($generated@@8 ($generated@@209 $generated@@602))) ($generated@@211 ($generated@@235 ($generated@@8 $generated@@602))))
 :pattern ( ($generated@@235 ($generated@@8 ($generated@@209 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ) (! (= ($generated@@235 ($generated@@211 $generated@@603)) ($generated@@211 ($generated@@235 $generated@@603)))
 :pattern ( ($generated@@235 ($generated@@211 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 ($generated@@230 (type $generated@@604))))
 (=> (and (= (type $generated@@604) ($generated@@229 $generated@@605)) (= ($generated@@228 $generated@@604) 0)) (= $generated@@604 ($generated@@227 $generated@@605))))
 :pattern ( ($generated@@228 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@607)))
 (=> (and (and (= (type $generated@@606) ($generated@@87 $generated@@609 $generated@@2)) (= (type $generated@@608) $generated@@2)) (<= 0 ($generated $generated@@608))) (= ($generated@@250 ($generated@@93 $generated@@606 $generated@@607 $generated@@608)) (+ (- ($generated@@250 $generated@@606) ($generated ($generated@@92 $generated@@606 $generated@@607))) ($generated $generated@@608)))))
 :pattern ( ($generated@@250 ($generated@@93 $generated@@606 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@611) $generated@@2)) ($generated@@85 $generated@@611 $generated@@46 $generated@@610))
 :pattern ( ($generated@@85 $generated@@611 $generated@@46 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@613) $generated@@3)) ($generated@@85 $generated@@613 $generated@@47 $generated@@612))
 :pattern ( ($generated@@85 $generated@@613 $generated@@47 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@615) $generated@@4)) ($generated@@85 $generated@@615 $generated@@44 $generated@@614))
 :pattern ( ($generated@@85 $generated@@615 $generated@@44 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@617) $generated@@416)) ($generated@@85 $generated@@617 $generated@@45 $generated@@616))
 :pattern ( ($generated@@85 $generated@@617 $generated@@45 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@619) $generated@@170)) ($generated@@85 $generated@@619 $generated@@48 $generated@@618))
 :pattern ( ($generated@@85 $generated@@619 $generated@@48 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@229 $generated@@170)) (= (type $generated@@621) $generated@@70)) (= ($generated@@154 $generated@@620 ($generated@@458 $generated@@621)) (forall (($generated@@622 Int) ) (!  (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@228 $generated@@620))) ($generated@@185 ($generated@@459 $generated@@620 $generated@@622) $generated@@621))
 :pattern ( ($generated@@459 $generated@@620 $generated@@622))
))))
 :pattern ( ($generated@@154 $generated@@620 ($generated@@458 $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 Int) ) (!  (=> (= (type $generated@@624) ($generated@@229 $generated@@170)) (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@228 $generated@@624))) (< ($generated@@497 ($generated@@301 $generated@@161 ($generated@@459 $generated@@624 $generated@@625))) ($generated@@623 $generated@@624))))
 :pattern ( ($generated@@497 ($generated@@301 $generated@@161 ($generated@@459 $generated@@624 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@627) $generated@@70)) (= (type $generated@@628) $generated@@70)) ($generated@@154 $generated@@626 ($generated@@368 $generated@@627 $generated@@628))) (and (and ($generated@@154 ($generated@@256 $generated@@626) ($generated@@199 $generated@@627)) ($generated@@154 ($generated@@311 $generated@@626) ($generated@@199 $generated@@628))) ($generated@@154 ($generated@@342 $generated@@626) ($generated@@199 ($generated@@160 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@154 $generated@@626 ($generated@@368 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@630) $generated@@70)) (= (type $generated@@631) $generated@@70)) ($generated@@154 $generated@@629 ($generated@@376 $generated@@630 $generated@@631))) (and (and ($generated@@154 ($generated@@274 $generated@@629) ($generated@@204 $generated@@630)) ($generated@@154 ($generated@@322 $generated@@629) ($generated@@204 $generated@@631))) ($generated@@154 ($generated@@350 $generated@@629) ($generated@@204 ($generated@@160 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@154 $generated@@629 ($generated@@376 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@2) ($generated@@154 $generated@@632 $generated@@46))
 :pattern ( ($generated@@154 $generated@@632 $generated@@46))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@3) ($generated@@154 $generated@@633 $generated@@47))
 :pattern ( ($generated@@154 $generated@@633 $generated@@47))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@4) ($generated@@154 $generated@@634 $generated@@44))
 :pattern ( ($generated@@154 $generated@@634 $generated@@44))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@416) ($generated@@154 $generated@@635 $generated@@45))
 :pattern ( ($generated@@154 $generated@@635 $generated@@45))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@170) ($generated@@154 $generated@@636 $generated@@48))
 :pattern ( ($generated@@154 $generated@@636 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () Int)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 (T@U) Bool)
(declare-fun $generated@@644 () Int)
(assert  (and (and (and (= (type $generated@@637) ($generated@@515 $generated@@88 $generated@@4)) (= (type $generated@@638) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@639) $generated@@88)) (= (type $generated@@642) ($generated@@87 $generated@@88 $generated@@89))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@645  (=> (= $generated@@637 ($generated@@514 $generated@@148 $generated@@638 $generated@@60 $generated@@639)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@513 $generated@@637 $generated@@639 $generated@@151))) (=> ($generated@@0 ($generated@@513 $generated@@637 $generated@@639 $generated@@151)) (=> (and (and (= $generated@@640 (+ $generated@@641 1)) (= $generated@@642 ($generated@@93 $generated@@638 $generated@@639 ($generated@@95 ($generated@@92 $generated@@638 $generated@@639) $generated@@151 ($generated@@8 $generated@@640))))) (and ($generated@@152 $generated@@642) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated ($generated@@94 ($generated@@92 $generated@@642 $generated@@639) $generated@@151)) (+ $generated@@641 1))))))))
(let (($generated@@646  (=> (and ($generated@@152 $generated@@638) ($generated@@643 $generated@@638)) (=> (and (and (and (not (= $generated@@639 $generated@@148)) (and ($generated@@154 $generated@@639 $generated@@181) ($generated@@85 $generated@@639 $generated@@181 $generated@@638))) (= 1 $generated@@644)) (and (= $generated@@641 ($generated@@209 15)) (= (ControlFlow 0 4) 2))) $generated@@645))))
$generated@@646)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@87 (T@U) Int)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@206 (T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U) Bool)
(declare-fun $generated@@214 (T@T T@U T@U) T@U)
(declare-fun $generated@@218 (T@U) Bool)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@T T@T) T@U)
(declare-fun $generated@@279 (T@T T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@313 (T@U T@U) Bool)
(declare-fun $generated@@322 (T@T T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@T) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@445 () T@T)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@488 (T@U Int) T@U)
(declare-fun $generated@@497 (T@U) Int)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@533 (T@U T@U T@U) T@U)
(declare-fun $generated@@534 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@535 (T@T T@T) T@T)
(declare-fun $generated@@536 (T@T) T@T)
(declare-fun $generated@@537 (T@T) T@T)
(declare-fun $generated@@538 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@604 (T@U) T@U)
(declare-fun $generated@@660 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@77) 6) (= (type $generated@@44) $generated@@77)) (= (type $generated@@45) $generated@@77)) (= (type $generated@@46) $generated@@77)) (= (type $generated@@47) $generated@@77)) (= (type $generated@@48) $generated@@77)) (= ($generated@@1 $generated@@78) 7)) (= (type $generated@@49) $generated@@78)) (= (type $generated@@50) $generated@@78)) (= (type $generated@@51) $generated@@78)) (= (type $generated@@52) $generated@@78)) (= (type $generated@@53) $generated@@78)) (= (type $generated@@54) $generated@@78)) (= (type $generated@@55) $generated@@78)) (= (type $generated@@56) $generated@@78)) (= (type $generated@@57) $generated@@78)) (= (type $generated@@58) $generated@@78)) (= (type $generated@@59) $generated@@78)) (forall (($generated@@85 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@85)) 8))) (forall (($generated@@86 T@T) ) (! (= ($generated@@80 ($generated@@79 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@79 $generated@@86))
))) (= (type $generated@@60) ($generated@@79 $generated@@4))) (= ($generated@@1 $generated@@81) 9)) (= (type $generated@@61) $generated@@81)) (= ($generated@@1 $generated@@82) 10)) (= (type $generated@@62) $generated@@82)) (= (type $generated@@63) $generated@@78)) (= ($generated@@1 $generated@@83) 11)) (= (type $generated@@64) $generated@@83)) (= (type $generated@@65) $generated@@78)) (= (type $generated@@66) $generated@@78)) (= (type $generated@@67) $generated@@83)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= ($generated@@1 $generated@@84) 12)) (= (type $generated@@72) $generated@@84)) (= (type $generated@@73) $generated@@84)) (= (type $generated@@74) $generated@@84)) (= (type $generated@@75) $generated@@84)) (= (type $generated@@76) $generated@@81)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76)
)
(assert (= ($generated@@87 $generated@@60) 0))
(assert (forall (($generated@@89 T@U) ) (! (= (type ($generated@@88 $generated@@89)) $generated@@78)
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (= ($generated@@88 $generated@@44) $generated@@49))
(assert (= ($generated@@88 $generated@@45) $generated@@50))
(assert (= ($generated@@88 $generated@@46) $generated@@51))
(assert (= ($generated@@88 $generated@@47) $generated@@52))
(assert (= ($generated@@88 $generated@@48) $generated@@53))
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@81)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 13)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 14)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@80 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 15)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@80 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@77)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@152) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@150 $generated@@151 $generated@@152)) (forall (($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@95) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@151 $generated@@153) $generated@@60))) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@152 $generated@@153) $generated@@60)))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@152 $generated@@153) $generated@@60))
)))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert  (and (= (type $generated@@154) $generated@@77) (= (type $generated@@155) $generated@@95)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@95) (= (type $generated@@157) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@156 $generated@@154 $generated@@157)  (or (= $generated@@156 $generated@@155) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@92 $generated@@156 $generated@@154 $generated@@157))
)))
(assert (= (type $generated@@158) $generated@@77))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@95) (= (type $generated@@160) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@159 $generated@@158 $generated@@160)  (or (= $generated@@159 $generated@@155) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@160 $generated@@159) $generated@@60)))))
 :pattern ( ($generated@@92 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (= (type $generated@@161) $generated@@77))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@95) (= (type $generated@@163) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@162 $generated@@161 $generated@@163)  (or (= $generated@@162 $generated@@155) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@163 $generated@@162) $generated@@60)))))
 :pattern ( ($generated@@92 $generated@@162 $generated@@161 $generated@@163))
)))
(assert  (and (= (type $generated@@164) ($generated@@79 $generated@@2)) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@77)
 :pattern ( ($generated@@166 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@170) $generated@@95)) (and ($generated@@165 $generated@@169) (and (not (= $generated@@170 $generated@@155)) (= ($generated@@166 $generated@@170) $generated@@154)))) ($generated@@167 ($generated@@101 ($generated@@99 $generated@@169 $generated@@170) $generated@@164) $generated@@46))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@169 $generated@@170) $generated@@164))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> (= (type $generated@@171) $generated@@2) ($generated@@167 $generated@@171 ($generated@@93 0)))
 :pattern ( ($generated@@167 $generated@@171 ($generated@@93 0)))
)))
(assert ($generated@@172 $generated@@161))
(assert  (and (= ($generated@@1 $generated@@175) 16) (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@176 $generated@@177)) $generated@@77)
 :pattern ( ($generated@@174 $generated@@176 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@77) (= (type $generated@@179) $generated@@77)) (= (type $generated@@180) $generated@@175)) ($generated@@167 $generated@@180 ($generated@@174 $generated@@178 $generated@@179))) ($generated@@173 $generated@@180))
 :pattern ( ($generated@@173 $generated@@180) ($generated@@167 $generated@@180 ($generated@@174 $generated@@178 $generated@@179)))
)))
(assert  (and (and (= ($generated@@1 $generated@@184) 17) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@182 $generated@@185))
))) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@184)
 :pattern ( ($generated@@183 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@175) (= (type $generated@@188) $generated@@175)) true) (= ($generated@@181 $generated@@187 $generated@@188)  (and (= ($generated@@182 $generated@@187) ($generated@@182 $generated@@188)) (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)))))
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
)))
(assert (= (type $generated@@189) $generated@@77))
(assert (forall (($generated@@190 T@U) ) (!  (=> (= (type $generated@@190) $generated@@95) (=> (and (not (= $generated@@190 $generated@@155)) ($generated@@167 $generated@@190 $generated@@161)) ($generated@@167 $generated@@190 $generated@@189)))
 :pattern ( ($generated@@167 $generated@@190 $generated@@161))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@77)
 :pattern ( ($generated@@191 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) ($generated@@94 $generated@@184 $generated@@2)) (= (type $generated@@195) $generated@@77)) ($generated@@167 $generated@@194 ($generated@@191 $generated@@195))) ($generated@@192 $generated@@194))
 :pattern ( ($generated@@167 $generated@@194 ($generated@@191 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ) (!  (=> (= (type $generated@@196) $generated@@95) (= ($generated@@167 $generated@@196 $generated@@154)  (or (= $generated@@196 $generated@@155) (= ($generated@@166 $generated@@196) $generated@@154))))
 :pattern ( ($generated@@167 $generated@@196 $generated@@154))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> (= (type $generated@@197) $generated@@95) (= ($generated@@167 $generated@@197 $generated@@161)  (or (= $generated@@197 $generated@@155) (= ($generated@@166 $generated@@197) $generated@@161))))
 :pattern ( ($generated@@167 $generated@@197 $generated@@161))
)))
(assert (= (type $generated@@198) $generated@@77))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@199) $generated@@95) (= (type $generated@@200) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@199 $generated@@198 $generated@@200) ($generated@@92 $generated@@199 $generated@@154 $generated@@200)))
 :pattern ( ($generated@@92 $generated@@199 $generated@@198 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) $generated@@95) (= (type $generated@@202) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@201 $generated@@189 $generated@@202) ($generated@@92 $generated@@201 $generated@@158 $generated@@202)))
 :pattern ( ($generated@@92 $generated@@201 $generated@@189 $generated@@202))
)))
(assert (= (type $generated@@203) $generated@@77))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (= (type $generated@@204) $generated@@95) (= (type $generated@@205) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@204 $generated@@203 $generated@@205) ($generated@@92 $generated@@204 $generated@@161 $generated@@205)))
 :pattern ( ($generated@@92 $generated@@204 $generated@@203 $generated@@205))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! (= (type ($generated@@206 $generated@@208 $generated@@209)) $generated@@175)
 :pattern ( ($generated@@206 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (and (= (type $generated@@210) $generated@@77) (= (type $generated@@211) $generated@@77)) (= (type $generated@@212) $generated@@184)) (= (type $generated@@213) $generated@@184)) (= ($generated@@167 ($generated@@206 $generated@@212 $generated@@213) ($generated@@174 $generated@@210 $generated@@211))  (and ($generated@@207 $generated@@212 $generated@@210) ($generated@@207 $generated@@213 $generated@@211))))
 :pattern ( ($generated@@167 ($generated@@206 $generated@@212 $generated@@213) ($generated@@174 $generated@@210 $generated@@211)))
)))
(assert (= ($generated@@87 $generated@@164) 0))
(assert (forall (($generated@@215 T@T) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (= (type ($generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@79 $generated@@215))
 :pattern ( ($generated@@214 $generated@@215 $generated@@216 $generated@@217))
)))
(assert (= ($generated@@214 $generated@@2 $generated@@64 $generated@@76) $generated@@164))
(assert  (not ($generated@@218 $generated@@164)))
(assert (= (type $generated@@219) ($generated@@79 $generated@@2)))
(assert (= ($generated@@87 $generated@@219) 0))
(assert (= ($generated@@214 $generated@@2 $generated@@67 $generated@@76) $generated@@219))
(assert  (not ($generated@@218 $generated@@219)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (= (type $generated@@220) $generated@@175) (= (type $generated@@221) $generated@@175)) (= ($generated@@181 $generated@@220 $generated@@221) (= $generated@@220 $generated@@221)))
 :pattern ( ($generated@@181 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ) (! (= (type ($generated@@222 $generated@@223)) $generated@@77)
 :pattern ( ($generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) ($generated@@94 $generated@@184 $generated@@4)) (= (type $generated@@225) $generated@@77)) (= ($generated@@167 $generated@@224 ($generated@@222 $generated@@225)) (forall (($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@184) ($generated@@0 ($generated@@99 $generated@@224 $generated@@226))) ($generated@@207 $generated@@226 $generated@@225))
 :pattern ( ($generated@@99 $generated@@224 $generated@@226))
))))
 :pattern ( ($generated@@167 $generated@@224 ($generated@@222 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ) (! (= (type ($generated@@227 $generated@@228)) $generated@@77)
 :pattern ( ($generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) ($generated@@94 $generated@@184 $generated@@4)) (= (type $generated@@230) $generated@@77)) (= ($generated@@167 $generated@@229 ($generated@@227 $generated@@230)) (forall (($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@184) ($generated@@0 ($generated@@99 $generated@@229 $generated@@231))) ($generated@@207 $generated@@231 $generated@@230))
 :pattern ( ($generated@@99 $generated@@229 $generated@@231))
))))
 :pattern ( ($generated@@167 $generated@@229 ($generated@@227 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ) (! (let (($generated@@234 (type $generated@@233)))
(= (type ($generated@@232 $generated@@233)) $generated@@234))
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= ($generated@@232 $generated@@235) $generated@@235)
 :pattern ( ($generated@@232 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@77) (= (type $generated@@238) $generated@@77)) (= (type $generated@@239) $generated@@184)) (= (type $generated@@240) $generated@@184)) (= (type $generated@@241) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@165 $generated@@241)) (= ($generated@@92 ($generated@@206 $generated@@239 $generated@@240) ($generated@@174 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@92 ($generated@@206 $generated@@239 $generated@@240) ($generated@@174 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@82)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@175) (= ($generated@@173 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@62)))
 :pattern ( ($generated@@173 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@175) ($generated@@173 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@184) (= (type $generated@@247) $generated@@184)) (= $generated@@245 ($generated@@206 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@173 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 18)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert ($generated@@218 $generated@@60))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@184)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@77) (= (type $generated@@260) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260) ($generated@@92 $generated@@258 $generated@@259 $generated@@260)))
 :pattern ( ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@262) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@263) $generated@@184)) (= (type $generated@@264) $generated@@77)) ($generated@@150 $generated@@261 $generated@@262)) ($generated@@236 $generated@@263 $generated@@264 $generated@@261)) ($generated@@236 $generated@@263 $generated@@264 $generated@@262))
 :pattern ( ($generated@@150 $generated@@261 $generated@@262) ($generated@@236 $generated@@263 $generated@@264 $generated@@261))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@265) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@266) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@268) $generated@@77)) ($generated@@150 $generated@@265 $generated@@266)) ($generated@@92 $generated@@267 $generated@@268 $generated@@265)) ($generated@@92 $generated@@267 $generated@@268 $generated@@266))
 :pattern ( ($generated@@150 $generated@@265 $generated@@266) ($generated@@92 $generated@@267 $generated@@268 $generated@@265))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@270) $generated@@95)) (=> (and (and ($generated@@165 $generated@@269) (and (not (= $generated@@270 $generated@@155)) (= ($generated@@166 $generated@@270) $generated@@154))) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@269 $generated@@270) $generated@@60))) ($generated@@92 ($generated@@101 ($generated@@99 $generated@@269 $generated@@270) $generated@@164) $generated@@46 $generated@@269)))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@269 $generated@@270) $generated@@164))
)))
(assert (forall (($generated@@273 T@T) ) (! (= (type ($generated@@272 $generated@@273)) ($generated@@94 $generated@@273 $generated@@2))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@97 (type $generated@@274))))
 (=> (= (type $generated@@274) ($generated@@94 $generated@@275 $generated@@2)) (and (= (= ($generated@@271 $generated@@274) 0) (= $generated@@274 ($generated@@272 $generated@@275))) (=> (not (= ($generated@@271 $generated@@274) 0)) (exists (($generated@@276 T@U) ) (!  (and (= (type $generated@@276) $generated@@275) (< 0 ($generated ($generated@@99 $generated@@274 $generated@@276))))
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
))))))
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert  (and (and (and (and (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@282 $generated@@283)) 19)) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@284 $generated@@285)) $generated@@284)
 :pattern ( ($generated@@279 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@279 $generated@@286 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@279 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@280 (type $generated@@288))))
(= (type ($generated@@277 $generated@@288)) ($generated@@94 $generated@@289 $generated@@4)))
 :pattern ( ($generated@@277 $generated@@288))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= (type ($generated@@278 $generated@@290 $generated@@291)) ($generated@@279 $generated@@290 $generated@@291))
 :pattern ( ($generated@@278 $generated@@290 $generated@@291))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@T) ) (! (let (($generated@@294 (type $generated@@292)))
 (not ($generated@@0 ($generated@@99 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292))))
 :pattern ( (let (($generated@@294 (type $generated@@292)))
($generated@@99 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292)))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 20)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@94 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@99 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@99 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (= (type $generated@@314) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@315) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@313 $generated@@314 $generated@@315)) (and ($generated@@150 $generated@@314 $generated@@315) (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@80 (type $generated@@317))))
 (=> (and (and (= (type $generated@@316) $generated@@95) (= (type $generated@@317) ($generated@@79 $generated@@318))) (not ($generated@@218 $generated@@317))) (= ($generated@@101 ($generated@@99 $generated@@314 $generated@@316) $generated@@317) ($generated@@101 ($generated@@99 $generated@@315 $generated@@316) $generated@@317))))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@315 $generated@@316) $generated@@317))
))))
 :pattern ( ($generated@@313 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@97 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@94 $generated@@320 $generated@@2)) (= ($generated@@192 $generated@@319) (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@320) (and (<= 0 ($generated ($generated@@99 $generated@@319 $generated@@321))) (<= ($generated ($generated@@99 $generated@@319 $generated@@321)) ($generated@@271 $generated@@319))))
 :pattern ( ($generated@@99 $generated@@319 $generated@@321))
)))))
 :pattern ( ($generated@@192 $generated@@319))
)))
(assert (forall (($generated@@323 T@T) ($generated@@324 T@U) ) (! (= (type ($generated@@322 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@322 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@184) ($generated@@207 $generated@@325 $generated@@154)) (and (= ($generated@@256 ($generated@@322 $generated@@95 $generated@@325)) $generated@@325) ($generated@@167 ($generated@@322 $generated@@95 $generated@@325) $generated@@154)))
 :pattern ( ($generated@@207 $generated@@325 $generated@@154))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@184) ($generated@@207 $generated@@326 $generated@@198)) (and (= ($generated@@256 ($generated@@322 $generated@@95 $generated@@326)) $generated@@326) ($generated@@167 ($generated@@322 $generated@@95 $generated@@326) $generated@@198)))
 :pattern ( ($generated@@207 $generated@@326 $generated@@198))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@184) ($generated@@207 $generated@@327 $generated@@158)) (and (= ($generated@@256 ($generated@@322 $generated@@95 $generated@@327)) $generated@@327) ($generated@@167 ($generated@@322 $generated@@95 $generated@@327) $generated@@158)))
 :pattern ( ($generated@@207 $generated@@327 $generated@@158))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@184) ($generated@@207 $generated@@328 $generated@@189)) (and (= ($generated@@256 ($generated@@322 $generated@@95 $generated@@328)) $generated@@328) ($generated@@167 ($generated@@322 $generated@@95 $generated@@328) $generated@@189)))
 :pattern ( ($generated@@207 $generated@@328 $generated@@189))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@184) ($generated@@207 $generated@@329 $generated@@161)) (and (= ($generated@@256 ($generated@@322 $generated@@95 $generated@@329)) $generated@@329) ($generated@@167 ($generated@@322 $generated@@95 $generated@@329) $generated@@161)))
 :pattern ( ($generated@@207 $generated@@329 $generated@@161))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@184) ($generated@@207 $generated@@330 $generated@@203)) (and (= ($generated@@256 ($generated@@322 $generated@@95 $generated@@330)) $generated@@330) ($generated@@167 ($generated@@322 $generated@@95 $generated@@330) $generated@@203)))
 :pattern ( ($generated@@207 $generated@@330 $generated@@203))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@95) (= ($generated@@167 $generated@@331 $generated@@198)  (and ($generated@@167 $generated@@331 $generated@@154) (not (= $generated@@331 $generated@@155)))))
 :pattern ( ($generated@@167 $generated@@331 $generated@@198))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@95) (= ($generated@@167 $generated@@332 $generated@@189)  (and ($generated@@167 $generated@@332 $generated@@158) (not (= $generated@@332 $generated@@155)))))
 :pattern ( ($generated@@167 $generated@@332 $generated@@189))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@95) (= ($generated@@167 $generated@@333 $generated@@203)  (and ($generated@@167 $generated@@333 $generated@@161) (not (= $generated@@333 $generated@@155)))))
 :pattern ( ($generated@@167 $generated@@333 $generated@@203))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@335) $generated@@95)) (and ($generated@@165 $generated@@334) (and (not (= $generated@@335 $generated@@155)) ($generated@@167 $generated@@335 $generated@@158)))) ($generated@@167 ($generated@@101 ($generated@@99 $generated@@334 $generated@@335) $generated@@219) $generated@@46))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@334 $generated@@335) $generated@@219))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@281 (type $generated@@336))))
(let (($generated@@338 ($generated@@280 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@279 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@278 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@99 ($generated@@277 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@277 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@281 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@94 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@281 (type $generated@@343))))
(let (($generated@@345 ($generated@@280 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@279 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@278 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@99 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@299 (type $generated@@347))))
(let (($generated@@349 ($generated@@298 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@297 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@296 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@99 ($generated@@295 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@295 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@299 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@94 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@299 (type $generated@@354))))
(let (($generated@@356 ($generated@@298 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@297 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@296 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@99 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@94 $generated@@184 $generated@@2)) (= (type $generated@@359) $generated@@77)) (= ($generated@@167 $generated@@358 ($generated@@191 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@184) (< 0 ($generated ($generated@@99 $generated@@358 $generated@@360)))) ($generated@@207 $generated@@360 $generated@@359))
 :pattern ( ($generated@@99 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@167 $generated@@358 ($generated@@191 $generated@@359)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@94 $generated@@184 $generated@@4)) (= (type $generated@@362) $generated@@77)) (= (type $generated@@363) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@361 ($generated@@222 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@184) ($generated@@0 ($generated@@99 $generated@@361 $generated@@364))) ($generated@@236 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@99 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@92 $generated@@361 ($generated@@222 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@94 $generated@@184 $generated@@4)) (= (type $generated@@366) $generated@@77)) (= (type $generated@@367) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@365 ($generated@@227 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@184) ($generated@@0 ($generated@@99 $generated@@365 $generated@@368))) ($generated@@236 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@99 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@92 $generated@@365 ($generated@@227 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@99 ($generated@@272 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@99 ($generated@@272 $generated@@370) $generated@@369)))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@94 $generated@@184 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@281 (type $generated@@374))))
(let (($generated@@376 ($generated@@280 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@94 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@279 $generated@@184 $generated@@184)) (= (type $generated@@378) $generated@@184)) (= ($generated@@0 ($generated@@99 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@99 ($generated@@277 $generated@@377) ($generated@@182 ($generated@@322 $generated@@175 $generated@@378)))) (= ($generated@@99 ($generated@@372 $generated@@377) ($generated@@182 ($generated@@322 $generated@@175 $generated@@378))) ($generated@@183 ($generated@@322 $generated@@175 $generated@@378))))))
 :pattern ( ($generated@@99 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@94 $generated@@184 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@299 (type $generated@@382))))
(let (($generated@@384 ($generated@@298 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@94 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@297 $generated@@184 $generated@@184)) (= (type $generated@@386) $generated@@184)) (= ($generated@@0 ($generated@@99 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@99 ($generated@@295 $generated@@385) ($generated@@182 ($generated@@322 $generated@@175 $generated@@386)))) (= ($generated@@99 ($generated@@380 $generated@@385) ($generated@@182 ($generated@@322 $generated@@175 $generated@@386))) ($generated@@183 ($generated@@322 $generated@@175 $generated@@386))))))
 :pattern ( ($generated@@99 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@280 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@279 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@99 ($generated@@340 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@99 ($generated@@277 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@99 ($generated@@372 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@99 ($generated@@277 $generated@@387) $generated@@391))
 :pattern ( ($generated@@99 ($generated@@372 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@99 ($generated@@340 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@298 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@297 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@99 ($generated@@351 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@99 ($generated@@295 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@99 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@99 ($generated@@295 $generated@@392) $generated@@396))
 :pattern ( ($generated@@99 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@99 ($generated@@351 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@77)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@279 $generated@@184 $generated@@184)) (= (type $generated@@401) $generated@@77)) (= (type $generated@@402) $generated@@77)) (= (type $generated@@403) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@184) ($generated@@0 ($generated@@99 ($generated@@277 $generated@@400) $generated@@404))) (and ($generated@@236 ($generated@@99 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@236 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@99 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@99 ($generated@@277 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@92 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@77)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@297 $generated@@184 $generated@@184)) (= (type $generated@@409) $generated@@77)) (= (type $generated@@410) $generated@@77)) (= (type $generated@@411) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@184) ($generated@@0 ($generated@@99 ($generated@@295 $generated@@408) $generated@@412))) (and ($generated@@236 ($generated@@99 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@236 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@99 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@99 ($generated@@295 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@92 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@413) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@414) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@415) ($generated@@94 $generated@@95 $generated@@96))) (not (= $generated@@413 $generated@@415))) (and ($generated@@150 $generated@@413 $generated@@414) ($generated@@150 $generated@@414 $generated@@415))) ($generated@@150 $generated@@413 $generated@@415))
 :pattern ( ($generated@@150 $generated@@413 $generated@@414) ($generated@@150 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@417 T@T) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@94 $generated@@417 $generated@@4))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@299 (type $generated@@418))))
(let (($generated@@420 ($generated@@298 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@297 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@296 $generated@@420 $generated@@419)) (= ($generated@@295 $generated@@418) ($generated@@416 $generated@@420))))))
 :pattern ( ($generated@@295 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@299 (type $generated@@421))))
(let (($generated@@423 ($generated@@298 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@297 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@296 $generated@@423 $generated@@422)) (= ($generated@@351 $generated@@421) ($generated@@416 $generated@@422))))))
 :pattern ( ($generated@@351 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@299 (type $generated@@424))))
(let (($generated@@426 ($generated@@298 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@297 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@296 $generated@@426 $generated@@425)) (= ($generated@@379 $generated@@424) ($generated@@416 $generated@@184))))))
 :pattern ( ($generated@@379 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@281 (type $generated@@427))))
(let (($generated@@429 ($generated@@280 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@279 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@278 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@184) (= (type $generated@@431) $generated@@184)) ($generated@@0 ($generated@@99 ($generated@@371 $generated@@427) ($generated@@256 ($generated@@206 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@371 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@299 (type $generated@@432))))
(let (($generated@@434 ($generated@@298 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@297 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@296 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@184) (= (type $generated@@436) $generated@@184)) ($generated@@0 ($generated@@99 ($generated@@379 $generated@@432) ($generated@@256 ($generated@@206 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@379 $generated@@432))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@83)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@T) ) (!  (=> (and (= (type $generated@@439) $generated@@83) (= (type $generated@@440) $generated@@81)) (and (= ($generated@@437 ($generated@@214 $generated@@441 $generated@@439 $generated@@440)) $generated@@439) (= ($generated@@90 ($generated@@214 $generated@@441 $generated@@439 $generated@@440)) $generated@@440)))
 :pattern ( ($generated@@214 $generated@@441 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@184) ($generated@@207 $generated@@442 $generated@@46)) (and (= ($generated@@256 ($generated@@322 $generated@@2 $generated@@442)) $generated@@442) ($generated@@167 ($generated@@322 $generated@@2 $generated@@442) $generated@@46)))
 :pattern ( ($generated@@207 $generated@@442 $generated@@46))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@184) ($generated@@207 $generated@@443 $generated@@47)) (and (= ($generated@@256 ($generated@@322 $generated@@3 $generated@@443)) $generated@@443) ($generated@@167 ($generated@@322 $generated@@3 $generated@@443) $generated@@47)))
 :pattern ( ($generated@@207 $generated@@443 $generated@@47))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@184) ($generated@@207 $generated@@444 $generated@@44)) (and (= ($generated@@256 ($generated@@322 $generated@@4 $generated@@444)) $generated@@444) ($generated@@167 ($generated@@322 $generated@@4 $generated@@444) $generated@@44)))
 :pattern ( ($generated@@207 $generated@@444 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@445) 21))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@184) ($generated@@207 $generated@@446 $generated@@45)) (and (= ($generated@@256 ($generated@@322 $generated@@445 $generated@@446)) $generated@@446) ($generated@@167 ($generated@@322 $generated@@445 $generated@@446) $generated@@45)))
 :pattern ( ($generated@@207 $generated@@446 $generated@@45))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (= (type $generated@@448) $generated@@77) (= ($generated@@207 ($generated@@256 $generated@@447) $generated@@448) ($generated@@167 $generated@@447 $generated@@448)))
 :pattern ( ($generated@@207 ($generated@@256 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@97 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@94 $generated@@450 $generated@@2)) (<= 0 ($generated@@271 $generated@@449))))
 :pattern ( ($generated@@271 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@251 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@250 $generated@@452)) (<= 0 ($generated@@249 $generated@@451))))
 :pattern ( ($generated@@249 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@77)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@77) (= (type $generated@@456) $generated@@77)) (= ($generated@@453 ($generated@@397 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@397 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@77)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@77) (= (type $generated@@460) $generated@@77)) (= ($generated@@457 ($generated@@397 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@397 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@77) (= (type $generated@@462) $generated@@77)) (= ($generated@@88 ($generated@@397 $generated@@461 $generated@@462)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@77)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@77) (= (type $generated@@466) $generated@@77)) (= ($generated@@463 ($generated@@405 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@405 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@77)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@77) (= (type $generated@@470) $generated@@77)) (= ($generated@@467 ($generated@@405 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@405 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@77) (= (type $generated@@472) $generated@@77)) (= ($generated@@88 ($generated@@405 $generated@@471 $generated@@472)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@184) (= (type $generated@@474) $generated@@184)) (= ($generated@@242 ($generated@@206 $generated@@473 $generated@@474)) $generated@@62))
 :pattern ( ($generated@@206 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@77)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@77) (= (type $generated@@478) $generated@@77)) (= ($generated@@475 ($generated@@174 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@174 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@77)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@77) (= (type $generated@@482) $generated@@77)) (= ($generated@@479 ($generated@@174 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@174 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@184) (= (type $generated@@484) $generated@@184)) (= ($generated@@182 ($generated@@206 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@206 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@184) (= (type $generated@@486) $generated@@184)) (= ($generated@@183 ($generated@@206 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@206 $generated@@485 $generated@@486))
)))
(assert  (and (forall (($generated@@489 T@U) ) (! (= (type ($generated@@487 $generated@@489)) $generated@@77)
 :pattern ( ($generated@@487 $generated@@489))
)) (forall (($generated@@490 T@U) ($generated@@491 Int) ) (! (let (($generated@@492 ($generated@@251 (type $generated@@490))))
(= (type ($generated@@488 $generated@@490 $generated@@491)) $generated@@492))
 :pattern ( ($generated@@488 $generated@@490 $generated@@491))
))))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@493) ($generated@@250 $generated@@184)) (= (type $generated@@494) $generated@@77)) (= (type $generated@@495) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@493 ($generated@@487 $generated@@494) $generated@@495) (forall (($generated@@496 Int) ) (!  (=> (and (<= 0 $generated@@496) (< $generated@@496 ($generated@@249 $generated@@493))) ($generated@@236 ($generated@@488 $generated@@493 $generated@@496) $generated@@494 $generated@@495))
 :pattern ( ($generated@@488 $generated@@493 $generated@@496))
))))
 :pattern ( ($generated@@92 $generated@@493 ($generated@@487 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@498 Int) ) (! (= ($generated@@497 ($generated@@93 $generated@@498)) $generated@@498)
 :pattern ( ($generated@@93 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@77)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@77) (= ($generated@@499 ($generated@@222 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@222 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@77) (= ($generated@@88 ($generated@@222 $generated@@502)) $generated@@54))
 :pattern ( ($generated@@222 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@77)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@77) (= ($generated@@503 ($generated@@227 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@227 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@77) (= ($generated@@88 ($generated@@227 $generated@@506)) $generated@@55))
 :pattern ( ($generated@@227 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@77)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@77) (= ($generated@@507 ($generated@@191 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@191 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@77) (= ($generated@@88 ($generated@@191 $generated@@510)) $generated@@56))
 :pattern ( ($generated@@191 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@77)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@77) (= ($generated@@511 ($generated@@487 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@487 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@77) (= ($generated@@88 ($generated@@487 $generated@@514)) $generated@@57))
 :pattern ( ($generated@@487 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
(= ($generated@@322 $generated@@516 ($generated@@256 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@256 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@279 $generated@@184 $generated@@184)) (= (type $generated@@518) $generated@@77)) (= (type $generated@@519) $generated@@77)) (= ($generated@@167 $generated@@517 ($generated@@397 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@184) ($generated@@0 ($generated@@99 ($generated@@277 $generated@@517) $generated@@520))) (and ($generated@@207 ($generated@@99 ($generated@@372 $generated@@517) $generated@@520) $generated@@519) ($generated@@207 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@99 ($generated@@372 $generated@@517) $generated@@520))
 :pattern ( ($generated@@99 ($generated@@277 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@167 $generated@@517 ($generated@@397 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@297 $generated@@184 $generated@@184)) (= (type $generated@@522) $generated@@77)) (= (type $generated@@523) $generated@@77)) (= ($generated@@167 $generated@@521 ($generated@@405 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@184) ($generated@@0 ($generated@@99 ($generated@@295 $generated@@521) $generated@@524))) (and ($generated@@207 ($generated@@99 ($generated@@380 $generated@@521) $generated@@524) $generated@@523) ($generated@@207 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@99 ($generated@@380 $generated@@521) $generated@@524))
 :pattern ( ($generated@@99 ($generated@@295 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@167 $generated@@521 ($generated@@405 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@526) $generated@@95)) (=> (and (and ($generated@@165 $generated@@525) (and (not (= $generated@@526 $generated@@155)) ($generated@@167 $generated@@526 $generated@@158))) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@525 $generated@@526) $generated@@60))) ($generated@@92 ($generated@@101 ($generated@@99 $generated@@525 $generated@@526) $generated@@219) $generated@@46 $generated@@525)))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@525 $generated@@526) $generated@@219))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@184) (= (type $generated@@530) $generated@@184)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@206 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@206 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@184) (= (type $generated@@532) $generated@@184)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@206 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@206 $generated@@531 $generated@@532))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@539 T@T) ($generated@@540 T@T) ) (= ($generated@@1 ($generated@@535 $generated@@539 $generated@@540)) 22)) (forall (($generated@@541 T@T) ($generated@@542 T@T) ) (! (= ($generated@@536 ($generated@@535 $generated@@541 $generated@@542)) $generated@@541)
 :pattern ( ($generated@@535 $generated@@541 $generated@@542))
))) (forall (($generated@@543 T@T) ($generated@@544 T@T) ) (! (= ($generated@@537 ($generated@@535 $generated@@543 $generated@@544)) $generated@@544)
 :pattern ( ($generated@@535 $generated@@543 $generated@@544))
))) (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@537 (type $generated@@545))))
(= (type ($generated@@533 $generated@@545 $generated@@546 $generated@@547)) $generated@@548))
 :pattern ( ($generated@@533 $generated@@545 $generated@@546 $generated@@547))
))) (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
(let (($generated@@554 (type $generated@@550)))
(= (type ($generated@@538 $generated@@549 $generated@@550 $generated@@551 $generated@@552)) ($generated@@535 $generated@@554 $generated@@553))))
 :pattern ( ($generated@@538 $generated@@549 $generated@@550 $generated@@551 $generated@@552))
))) (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@537 (type $generated@@555))))
 (=> (= (type $generated@@558) $generated@@559) (= ($generated@@533 ($generated@@538 $generated@@555 $generated@@556 $generated@@557 $generated@@558) $generated@@556 $generated@@557) $generated@@558)))
 :weight 0
))) (and (and (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (or (= $generated@@562 $generated@@564) (= ($generated@@533 ($generated@@538 $generated@@561 $generated@@562 $generated@@563 $generated@@560) $generated@@564 $generated@@565) ($generated@@533 $generated@@561 $generated@@564 $generated@@565)))
 :weight 0
)) (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (or (= $generated@@569 $generated@@571) (= ($generated@@533 ($generated@@538 $generated@@567 $generated@@568 $generated@@569 $generated@@566) $generated@@570 $generated@@571) ($generated@@533 $generated@@567 $generated@@570 $generated@@571)))
 :weight 0
))) (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (or true (= ($generated@@533 ($generated@@538 $generated@@573 $generated@@574 $generated@@575 $generated@@572) $generated@@576 $generated@@577) ($generated@@533 $generated@@573 $generated@@576 $generated@@577)))
 :weight 0
)))) (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (= (type ($generated@@534 $generated@@578 $generated@@579 $generated@@580 $generated@@581 $generated@@582 $generated@@583)) ($generated@@535 $generated@@95 $generated@@4))
 :pattern ( ($generated@@534 $generated@@578 $generated@@579 $generated@@580 $generated@@581 $generated@@582 $generated@@583))
))))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 ($generated@@80 (type $generated@@591))))
 (=> (and (and (and (and (and (and (and (= (type $generated@@584) $generated@@95) (= (type $generated@@585) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@586) ($generated@@79 $generated@@4))) (= (type $generated@@587) $generated@@95)) (= (type $generated@@588) $generated@@95)) (= (type $generated@@589) $generated@@95)) (= (type $generated@@590) $generated@@95)) (= (type $generated@@591) ($generated@@79 $generated@@592))) (= ($generated@@0 ($generated@@533 ($generated@@534 $generated@@584 $generated@@585 $generated@@586 $generated@@587 $generated@@588 $generated@@589) $generated@@590 $generated@@591))  (=> (and (not (= $generated@@590 $generated@@584)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@585 $generated@@590) $generated@@586))) (or (or (= $generated@@590 $generated@@587) (= $generated@@590 $generated@@588)) (= $generated@@590 $generated@@589))))))
 :pattern ( ($generated@@533 ($generated@@534 $generated@@584 $generated@@585 $generated@@586 $generated@@587 $generated@@588 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@184) (= (type $generated@@594) $generated@@77)) (= (type $generated@@595) $generated@@77)) ($generated@@207 $generated@@593 ($generated@@397 $generated@@594 $generated@@595))) (and (= ($generated@@256 ($generated@@322 ($generated@@279 $generated@@184 $generated@@184) $generated@@593)) $generated@@593) ($generated@@167 ($generated@@322 ($generated@@279 $generated@@184 $generated@@184) $generated@@593) ($generated@@397 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@207 $generated@@593 ($generated@@397 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@184) (= (type $generated@@597) $generated@@77)) (= (type $generated@@598) $generated@@77)) ($generated@@207 $generated@@596 ($generated@@405 $generated@@597 $generated@@598))) (and (= ($generated@@256 ($generated@@322 ($generated@@297 $generated@@184 $generated@@184) $generated@@596)) $generated@@596) ($generated@@167 ($generated@@322 ($generated@@297 $generated@@184 $generated@@184) $generated@@596) ($generated@@405 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@207 $generated@@596 ($generated@@405 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@77) (= (type $generated@@600) $generated@@77)) (= (type $generated@@601) $generated@@184)) ($generated@@207 $generated@@601 ($generated@@174 $generated@@599 $generated@@600))) (and (= ($generated@@256 ($generated@@322 $generated@@175 $generated@@601)) $generated@@601) ($generated@@167 ($generated@@322 $generated@@175 $generated@@601) ($generated@@174 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@207 $generated@@601 ($generated@@174 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@602)))
 (not ($generated@@0 ($generated@@99 ($generated@@416 $generated@@603) $generated@@602))))
 :pattern ( (let (($generated@@603 (type $generated@@602)))
($generated@@99 ($generated@@416 $generated@@603) $generated@@602)))
)))
(assert (forall (($generated@@605 T@U) ) (! (= (type ($generated@@604 $generated@@605)) $generated@@84)
 :pattern ( ($generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@77) (= (type $generated@@607) $generated@@77)) (and (= ($generated@@88 ($generated@@174 $generated@@606 $generated@@607)) $generated@@63) (= ($generated@@604 ($generated@@174 $generated@@606 $generated@@607)) $generated@@72)))
 :pattern ( ($generated@@174 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@175) (= ($generated@@527 ($generated@@256 $generated@@608)) ($generated@@528 $generated@@608)))
 :pattern ( ($generated@@527 ($generated@@256 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@184) ($generated@@207 $generated@@609 ($generated@@93 0))) (and (= ($generated@@256 ($generated@@322 $generated@@2 $generated@@609)) $generated@@609) ($generated@@167 ($generated@@322 ($generated@@94 $generated@@184 $generated@@4) $generated@@609) ($generated@@93 0))))
 :pattern ( ($generated@@207 $generated@@609 ($generated@@93 0)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@184) (= (type $generated@@611) $generated@@77)) ($generated@@207 $generated@@610 ($generated@@222 $generated@@611))) (and (= ($generated@@256 ($generated@@322 ($generated@@94 $generated@@184 $generated@@4) $generated@@610)) $generated@@610) ($generated@@167 ($generated@@322 ($generated@@94 $generated@@184 $generated@@4) $generated@@610) ($generated@@222 $generated@@611))))
 :pattern ( ($generated@@207 $generated@@610 ($generated@@222 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@184) (= (type $generated@@613) $generated@@77)) ($generated@@207 $generated@@612 ($generated@@227 $generated@@613))) (and (= ($generated@@256 ($generated@@322 ($generated@@94 $generated@@184 $generated@@4) $generated@@612)) $generated@@612) ($generated@@167 ($generated@@322 ($generated@@94 $generated@@184 $generated@@4) $generated@@612) ($generated@@227 $generated@@613))))
 :pattern ( ($generated@@207 $generated@@612 ($generated@@227 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@184) (= (type $generated@@615) $generated@@77)) ($generated@@207 $generated@@614 ($generated@@191 $generated@@615))) (and (= ($generated@@256 ($generated@@322 ($generated@@94 $generated@@184 $generated@@2) $generated@@614)) $generated@@614) ($generated@@167 ($generated@@322 ($generated@@94 $generated@@184 $generated@@2) $generated@@614) ($generated@@191 $generated@@615))))
 :pattern ( ($generated@@207 $generated@@614 ($generated@@191 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@184) (= (type $generated@@617) $generated@@77)) ($generated@@207 $generated@@616 ($generated@@487 $generated@@617))) (and (= ($generated@@256 ($generated@@322 ($generated@@250 $generated@@184) $generated@@616)) $generated@@616) ($generated@@167 ($generated@@322 ($generated@@250 $generated@@184) $generated@@616) ($generated@@487 $generated@@617))))
 :pattern ( ($generated@@207 $generated@@616 ($generated@@487 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@95) (= (type $generated@@619) ($generated@@94 $generated@@95 $generated@@96))) (and (not (= $generated@@618 $generated@@155)) ($generated@@92 $generated@@618 $generated@@161 $generated@@619))) ($generated@@92 $generated@@618 $generated@@189 $generated@@619))
 :pattern ( ($generated@@92 $generated@@618 $generated@@161 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@623)))
 (=> (and (and (and (= (type $generated@@620) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@621) $generated@@95)) (= (type $generated@@622) ($generated@@79 $generated@@624))) ($generated@@165 ($generated@@100 $generated@@620 $generated@@621 ($generated@@102 ($generated@@99 $generated@@620 $generated@@621) $generated@@622 $generated@@623)))) ($generated@@150 $generated@@620 ($generated@@100 $generated@@620 $generated@@621 ($generated@@102 ($generated@@99 $generated@@620 $generated@@621) $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@100 $generated@@620 $generated@@621 ($generated@@102 ($generated@@99 $generated@@620 $generated@@621) $generated@@622 $generated@@623)))
)))
(assert (= ($generated@@88 $generated@@154) $generated@@65))
(assert (= ($generated@@604 $generated@@154) $generated@@73))
(assert (= ($generated@@88 $generated@@198) $generated@@66))
(assert (= ($generated@@604 $generated@@198) $generated@@73))
(assert (= ($generated@@88 $generated@@158) $generated@@68))
(assert (= ($generated@@604 $generated@@158) $generated@@74))
(assert (= ($generated@@88 $generated@@189) $generated@@69))
(assert (= ($generated@@604 $generated@@189) $generated@@74))
(assert (= ($generated@@88 $generated@@161) $generated@@70))
(assert (= ($generated@@604 $generated@@161) $generated@@75))
(assert (= ($generated@@88 $generated@@203) $generated@@71))
(assert (= ($generated@@604 $generated@@203) $generated@@75))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@625) ($generated@@94 $generated@@184 $generated@@2)) (= (type $generated@@626) $generated@@77)) (= (type $generated@@627) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@625 ($generated@@191 $generated@@626) $generated@@627) (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@184) (< 0 ($generated ($generated@@99 $generated@@625 $generated@@628)))) ($generated@@236 $generated@@628 $generated@@626 $generated@@627))
 :pattern ( ($generated@@99 $generated@@625 $generated@@628))
))))
 :pattern ( ($generated@@92 $generated@@625 ($generated@@191 $generated@@626) $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@95) (= ($generated@@167 $generated@@629 $generated@@158)  (or (= $generated@@629 $generated@@155) ($generated@@172 ($generated@@166 $generated@@629)))))
 :pattern ( ($generated@@167 $generated@@629 $generated@@158))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@175) (= (type $generated@@631) $generated@@77)) (= (type $generated@@632) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@165 $generated@@632) (and ($generated@@173 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@77) ($generated@@92 $generated@@630 ($generated@@174 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@92 $generated@@630 ($generated@@174 $generated@@631 $generated@@633) $generated@@632))
))))) ($generated@@236 ($generated@@182 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@236 ($generated@@182 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@175) (= (type $generated@@635) $generated@@77)) (= (type $generated@@636) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@165 $generated@@636) (and ($generated@@173 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@77) ($generated@@92 $generated@@634 ($generated@@174 $generated@@637 $generated@@635) $generated@@636))
 :pattern ( ($generated@@92 $generated@@634 ($generated@@174 $generated@@637 $generated@@635) $generated@@636))
))))) ($generated@@236 ($generated@@183 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@236 ($generated@@183 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@184) (= (type $generated@@639) $generated@@184)) (= ($generated@@206 ($generated@@232 $generated@@638) ($generated@@232 $generated@@639)) ($generated@@232 ($generated@@206 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@206 ($generated@@232 $generated@@638) ($generated@@232 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (! (= ($generated@@256 ($generated@@232 $generated@@640)) ($generated@@232 ($generated@@256 $generated@@640)))
 :pattern ( ($generated@@256 ($generated@@232 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (! (let (($generated@@642 ($generated@@251 (type $generated@@641))))
 (=> (and (= (type $generated@@641) ($generated@@250 $generated@@642)) (= ($generated@@249 $generated@@641) 0)) (= $generated@@641 ($generated@@248 $generated@@642))))
 :pattern ( ($generated@@249 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (! (let (($generated@@646 (type $generated@@644)))
 (=> (and (and (= (type $generated@@643) ($generated@@94 $generated@@646 $generated@@2)) (= (type $generated@@645) $generated@@2)) (<= 0 ($generated $generated@@645))) (= ($generated@@271 ($generated@@100 $generated@@643 $generated@@644 $generated@@645)) (+ (- ($generated@@271 $generated@@643) ($generated ($generated@@99 $generated@@643 $generated@@644))) ($generated $generated@@645)))))
 :pattern ( ($generated@@271 ($generated@@100 $generated@@643 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@648) $generated@@2)) ($generated@@92 $generated@@648 $generated@@46 $generated@@647))
 :pattern ( ($generated@@92 $generated@@648 $generated@@46 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@650) $generated@@3)) ($generated@@92 $generated@@650 $generated@@47 $generated@@649))
 :pattern ( ($generated@@92 $generated@@650 $generated@@47 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@652) $generated@@4)) ($generated@@92 $generated@@652 $generated@@44 $generated@@651))
 :pattern ( ($generated@@92 $generated@@652 $generated@@44 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@654) $generated@@445)) ($generated@@92 $generated@@654 $generated@@45 $generated@@653))
 :pattern ( ($generated@@92 $generated@@654 $generated@@45 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@656) $generated@@184)) ($generated@@92 $generated@@656 $generated@@48 $generated@@655))
 :pattern ( ($generated@@92 $generated@@656 $generated@@48 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@250 $generated@@184)) (= (type $generated@@658) $generated@@77)) (= ($generated@@167 $generated@@657 ($generated@@487 $generated@@658)) (forall (($generated@@659 Int) ) (!  (=> (and (<= 0 $generated@@659) (< $generated@@659 ($generated@@249 $generated@@657))) ($generated@@207 ($generated@@488 $generated@@657 $generated@@659) $generated@@658))
 :pattern ( ($generated@@488 $generated@@657 $generated@@659))
))))
 :pattern ( ($generated@@167 $generated@@657 ($generated@@487 $generated@@658)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 Int) ) (!  (=> (= (type $generated@@661) ($generated@@250 $generated@@184)) (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@249 $generated@@661))) (< ($generated@@528 ($generated@@322 $generated@@175 ($generated@@488 $generated@@661 $generated@@662))) ($generated@@660 $generated@@661))))
 :pattern ( ($generated@@528 ($generated@@322 $generated@@175 ($generated@@488 $generated@@661 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) ($generated@@279 $generated@@184 $generated@@184)) (= (type $generated@@664) $generated@@77)) (= (type $generated@@665) $generated@@77)) ($generated@@167 $generated@@663 ($generated@@397 $generated@@664 $generated@@665))) (and (and ($generated@@167 ($generated@@277 $generated@@663) ($generated@@222 $generated@@664)) ($generated@@167 ($generated@@340 $generated@@663) ($generated@@222 $generated@@665))) ($generated@@167 ($generated@@371 $generated@@663) ($generated@@222 ($generated@@174 $generated@@664 $generated@@665)))))
 :pattern ( ($generated@@167 $generated@@663 ($generated@@397 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) ($generated@@297 $generated@@184 $generated@@184)) (= (type $generated@@667) $generated@@77)) (= (type $generated@@668) $generated@@77)) ($generated@@167 $generated@@666 ($generated@@405 $generated@@667 $generated@@668))) (and (and ($generated@@167 ($generated@@295 $generated@@666) ($generated@@227 $generated@@667)) ($generated@@167 ($generated@@351 $generated@@666) ($generated@@227 $generated@@668))) ($generated@@167 ($generated@@379 $generated@@666) ($generated@@227 ($generated@@174 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@167 $generated@@666 ($generated@@405 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@2) ($generated@@167 $generated@@669 $generated@@46))
 :pattern ( ($generated@@167 $generated@@669 $generated@@46))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@3) ($generated@@167 $generated@@670 $generated@@47))
 :pattern ( ($generated@@167 $generated@@670 $generated@@47))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@4) ($generated@@167 $generated@@671 $generated@@44))
 :pattern ( ($generated@@167 $generated@@671 $generated@@44))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@445) ($generated@@167 $generated@@672 $generated@@45))
 :pattern ( ($generated@@167 $generated@@672 $generated@@45))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@184) ($generated@@167 $generated@@673 $generated@@48))
 :pattern ( ($generated@@167 $generated@@673 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 (T@U) Bool)
(declare-fun $generated@@686 () Bool)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 (T@U) Bool)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 (T@U) Bool)
(declare-fun $generated@@691 () Bool)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@674) ($generated@@535 $generated@@95 $generated@@4)) (= (type $generated@@675) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@676) $generated@@95)) (= (type $generated@@677) $generated@@95)) (= (type $generated@@678) $generated@@95)) (= (type $generated@@680) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@682) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@684) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@687) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@689) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@692) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@693) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@694) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@695) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@696) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@697) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@698) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@699) ($generated@@94 $generated@@95 $generated@@96))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 31) (let (($generated@@701  (=> (= $generated@@674 ($generated@@534 $generated@@155 $generated@@675 $generated@@60 $generated@@676 $generated@@677 $generated@@678)) (and (=> (= (ControlFlow 0 2) (- 0 30)) (not (= $generated@@676 $generated@@155))) (and (=> (= (ControlFlow 0 2) (- 0 29)) (not (= $generated@@677 $generated@@155))) (and (=> (= (ControlFlow 0 2) (- 0 28)) (not (= $generated@@678 $generated@@155))) (and (=> (= (ControlFlow 0 2) (- 0 27)) (not (= $generated@@676 $generated@@155))) (=> (not (= $generated@@676 $generated@@155)) (and (=> (= (ControlFlow 0 2) (- 0 26)) ($generated@@0 ($generated@@533 $generated@@674 $generated@@676 $generated@@164))) (=> ($generated@@0 ($generated@@533 $generated@@674 $generated@@676 $generated@@164)) (and (=> (= (ControlFlow 0 2) (- 0 25)) (not (= $generated@@676 $generated@@155))) (=> (not (= $generated@@676 $generated@@155)) (=> (= $generated@@679 (+ ($generated ($generated@@101 ($generated@@99 $generated@@675 $generated@@676) $generated@@164)) 3)) (=> (and (= $generated@@680 ($generated@@100 $generated@@675 $generated@@676 ($generated@@102 ($generated@@99 $generated@@675 $generated@@676) $generated@@164 ($generated@@8 $generated@@679)))) ($generated@@165 $generated@@680)) (and (=> (= (ControlFlow 0 2) (- 0 24)) (not (= $generated@@677 $generated@@155))) (=> (not (= $generated@@677 $generated@@155)) (and (=> (= (ControlFlow 0 2) (- 0 23)) ($generated@@0 ($generated@@533 $generated@@674 $generated@@677 $generated@@219))) (=> ($generated@@0 ($generated@@533 $generated@@674 $generated@@677 $generated@@219)) (and (=> (= (ControlFlow 0 2) (- 0 22)) (not (= $generated@@677 $generated@@155))) (=> (not (= $generated@@677 $generated@@155)) (=> (= $generated@@681 (+ ($generated ($generated@@101 ($generated@@99 $generated@@680 $generated@@677) $generated@@219)) 3)) (=> (and (= $generated@@682 ($generated@@100 $generated@@680 $generated@@677 ($generated@@102 ($generated@@99 $generated@@680 $generated@@677) $generated@@219 ($generated@@8 $generated@@681)))) ($generated@@165 $generated@@682)) (and (=> (= (ControlFlow 0 2) (- 0 21)) (not (= $generated@@678 $generated@@155))) (=> (not (= $generated@@678 $generated@@155)) (and (=> (= (ControlFlow 0 2) (- 0 20)) ($generated@@0 ($generated@@533 $generated@@674 $generated@@678 $generated@@219))) (=> ($generated@@0 ($generated@@533 $generated@@674 $generated@@678 $generated@@219)) (and (=> (= (ControlFlow 0 2) (- 0 19)) (not (= $generated@@678 $generated@@155))) (=> (not (= $generated@@678 $generated@@155)) (=> (= $generated@@683 (+ ($generated ($generated@@101 ($generated@@99 $generated@@682 $generated@@678) $generated@@219)) 3)) (=> (and (= $generated@@684 ($generated@@100 $generated@@682 $generated@@678 ($generated@@102 ($generated@@99 $generated@@682 $generated@@678) $generated@@219 ($generated@@8 $generated@@683)))) ($generated@@165 $generated@@684)) (and (=> (= (ControlFlow 0 2) (- 0 18)) (not (= $generated@@676 $generated@@155))) (and (=> (= (ControlFlow 0 2) (- 0 17)) (not (= $generated@@677 $generated@@155))) (and (=> (= (ControlFlow 0 2) (- 0 16)) (not (= $generated@@678 $generated@@155))) (and (=> (= (ControlFlow 0 2) (- 0 15)) (not (= $generated@@676 $generated@@155))) (and (=> (= (ControlFlow 0 2) (- 0 14)) (not (= $generated@@676 $generated@@155))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (not (= $generated@@676 $generated@@155))) (=> ($generated@@92 $generated@@676 $generated@@154 $generated@@684) (=> (and (and ($generated@@685 $generated@@676) ($generated@@685 $generated@@676)) (and $generated@@686 $generated@@686)) (and (=> (= (ControlFlow 0 2) (- 0 12)) (not (= $generated@@676 $generated@@155))) (=> (not (= $generated@@676 $generated@@155)) (=> (and (and (and ($generated@@165 $generated@@687) ($generated@@688 $generated@@687)) (and (forall (($generated@@702 T@U) ) (!  (=> (= (type $generated@@702) $generated@@95) (=> (and (not (= $generated@@702 $generated@@155)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@684 $generated@@702) $generated@@60))) (= ($generated@@99 $generated@@687 $generated@@702) ($generated@@99 $generated@@684 $generated@@702))))
 :pattern ( ($generated@@99 $generated@@687 $generated@@702))
)) ($generated@@150 $generated@@684 $generated@@687))) (and (and ($generated@@165 $generated@@689) ($generated@@688 $generated@@689)) (and (forall (($generated@@703 T@U) ) (!  (=> (= (type $generated@@703) $generated@@95) (=> (and (not (= $generated@@703 $generated@@155)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@687 $generated@@703) $generated@@60))) (= ($generated@@99 $generated@@689 $generated@@703) ($generated@@99 $generated@@687 $generated@@703))))
 :pattern ( ($generated@@99 $generated@@689 $generated@@703))
)) ($generated@@150 $generated@@687 $generated@@689)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (not (= $generated@@677 $generated@@155))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (not (= $generated@@677 $generated@@155))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (not (= $generated@@677 $generated@@155))) (=> ($generated@@92 $generated@@677 $generated@@158 $generated@@689) (=> (and (and ($generated@@690 $generated@@677) ($generated@@690 $generated@@677)) (and $generated@@691 $generated@@691)) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@677 $generated@@155))) (=> (not (= $generated@@677 $generated@@155)) (=> (and (and (and ($generated@@165 $generated@@692) ($generated@@688 $generated@@692)) (and (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@95) (=> (and (not (= $generated@@704 $generated@@155)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@689 $generated@@704) $generated@@60))) (= ($generated@@99 $generated@@692 $generated@@704) ($generated@@99 $generated@@689 $generated@@704))))
 :pattern ( ($generated@@99 $generated@@692 $generated@@704))
)) ($generated@@150 $generated@@689 $generated@@692))) (and (and ($generated@@165 $generated@@693) ($generated@@688 $generated@@693)) (and (forall (($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@95) (=> (and (not (= $generated@@705 $generated@@155)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@692 $generated@@705) $generated@@60))) (= ($generated@@99 $generated@@693 $generated@@705) ($generated@@99 $generated@@692 $generated@@705))))
 :pattern ( ($generated@@99 $generated@@693 $generated@@705))
)) ($generated@@150 $generated@@692 $generated@@693)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (not (= $generated@@678 $generated@@155))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= $generated@@678 $generated@@155))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@678 $generated@@155))) (=> ($generated@@92 $generated@@678 $generated@@158 $generated@@693) (=> (and (and ($generated@@690 $generated@@678) ($generated@@690 $generated@@678)) (and $generated@@691 $generated@@691)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@678 $generated@@155))) (=> (not (= $generated@@678 $generated@@155)) (=> (and ($generated@@165 $generated@@694) ($generated@@688 $generated@@694)) (=> (and (and (and (forall (($generated@@706 T@U) ) (!  (=> (= (type $generated@@706) $generated@@95) (=> (and (not (= $generated@@706 $generated@@155)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@693 $generated@@706) $generated@@60))) (= ($generated@@99 $generated@@694 $generated@@706) ($generated@@99 $generated@@693 $generated@@706))))
 :pattern ( ($generated@@99 $generated@@694 $generated@@706))
)) ($generated@@150 $generated@@693 $generated@@694)) (and ($generated@@165 $generated@@695) ($generated@@688 $generated@@695))) (and (and (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@95) (=> (and (not (= $generated@@707 $generated@@155)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@694 $generated@@707) $generated@@60))) (= ($generated@@99 $generated@@695 $generated@@707) ($generated@@99 $generated@@694 $generated@@707))))
 :pattern ( ($generated@@99 $generated@@695 $generated@@707))
)) ($generated@@150 $generated@@694 $generated@@695)) (and $generated@@686 $generated@@686))) (=> (and (and (and (and ($generated@@165 $generated@@696) ($generated@@688 $generated@@696)) (and (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@95) (=> (and (not (= $generated@@708 $generated@@155)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@695 $generated@@708) $generated@@60))) (= ($generated@@99 $generated@@696 $generated@@708) ($generated@@99 $generated@@695 $generated@@708))))
 :pattern ( ($generated@@99 $generated@@696 $generated@@708))
)) ($generated@@150 $generated@@695 $generated@@696))) (and (and $generated@@691 $generated@@691) (and ($generated@@165 $generated@@697) ($generated@@688 $generated@@697)))) (and (and (and (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@95) (=> (and (not (= $generated@@709 $generated@@155)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@696 $generated@@709) $generated@@60))) (= ($generated@@99 $generated@@697 $generated@@709) ($generated@@99 $generated@@696 $generated@@709))))
 :pattern ( ($generated@@99 $generated@@697 $generated@@709))
)) ($generated@@150 $generated@@696 $generated@@697)) (and $generated@@691 $generated@@691)) (and (and ($generated@@165 $generated@@698) ($generated@@688 $generated@@698)) (and (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@95) (=> (and (not (= $generated@@710 $generated@@155)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@697 $generated@@710) $generated@@60))) (= ($generated@@99 $generated@@698 $generated@@710) ($generated@@99 $generated@@697 $generated@@710))))
 :pattern ( ($generated@@99 $generated@@698 $generated@@710))
)) ($generated@@150 $generated@@697 $generated@@698))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (! (let (($generated@@713 ($generated@@80 (type $generated@@712))))
 (=> (and (= (type $generated@@711) $generated@@95) (= (type $generated@@712) ($generated@@79 $generated@@713))) (=> (and (and (not (= $generated@@711 $generated@@155)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@698 $generated@@711) $generated@@60))) (= $generated@@711 $generated@@678)) ($generated@@0 ($generated@@533 $generated@@674 $generated@@711 $generated@@712)))))
 :no-pattern (type $generated@@711)
 :no-pattern (type $generated@@712)
 :no-pattern ($generated $generated@@711)
 :no-pattern ($generated@@0 $generated@@711)
 :no-pattern ($generated $generated@@712)
 :no-pattern ($generated@@0 $generated@@712)
))) (=> (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (! (let (($generated@@716 ($generated@@80 (type $generated@@715))))
 (=> (and (= (type $generated@@714) $generated@@95) (= (type $generated@@715) ($generated@@79 $generated@@716))) (=> (and (and (not (= $generated@@714 $generated@@155)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@698 $generated@@714) $generated@@60))) (= $generated@@714 $generated@@678)) ($generated@@0 ($generated@@533 $generated@@674 $generated@@714 $generated@@715)))))
 :no-pattern (type $generated@@714)
 :no-pattern (type $generated@@715)
 :no-pattern ($generated $generated@@714)
 :no-pattern ($generated@@0 $generated@@714)
 :no-pattern ($generated $generated@@715)
 :no-pattern ($generated@@0 $generated@@715)
)) (=> (and (and (and ($generated@@165 $generated@@699) ($generated@@688 $generated@@699)) (forall (($generated@@717 T@U) ) (!  (=> (= (type $generated@@717) $generated@@95) (=> (and (not (= $generated@@717 $generated@@155)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@698 $generated@@717) $generated@@60))) (or (= ($generated@@99 $generated@@699 $generated@@717) ($generated@@99 $generated@@698 $generated@@717)) (= $generated@@717 $generated@@678))))
 :pattern ( ($generated@@99 $generated@@699 $generated@@717))
))) (and ($generated@@150 $generated@@698 $generated@@699) (= (ControlFlow 0 2) (- 0 1)))) (not (= $generated@@678 $generated@@155))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@718  (=> (and ($generated@@165 $generated@@675) ($generated@@688 $generated@@675)) (=> (and (and (and ($generated@@167 $generated@@676 $generated@@198) ($generated@@92 $generated@@676 $generated@@198 $generated@@675)) (and ($generated@@167 $generated@@677 $generated@@189) ($generated@@92 $generated@@677 $generated@@189 $generated@@675))) (and (and ($generated@@167 $generated@@678 $generated@@203) ($generated@@92 $generated@@678 $generated@@203 $generated@@675)) (and (= 2 $generated@@700) (= (ControlFlow 0 31) 2)))) $generated@@701))))
$generated@@718)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@T)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@192 (T@T T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@254 (T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (Int) Int)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@281 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@T) T@U)
(declare-fun $generated@@477 () T@T)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@520 (T@U Int) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@626 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@75) 6) (= (type $generated@@44) $generated@@75)) (= (type $generated@@45) $generated@@75)) (= (type $generated@@46) $generated@@75)) (= (type $generated@@47) $generated@@75)) (= (type $generated@@48) $generated@@75)) (= ($generated@@1 $generated@@76) 7)) (= (type $generated@@49) $generated@@76)) (= (type $generated@@50) $generated@@76)) (= (type $generated@@51) $generated@@76)) (= (type $generated@@52) $generated@@76)) (= (type $generated@@53) $generated@@76)) (= (type $generated@@54) $generated@@76)) (= (type $generated@@55) $generated@@76)) (= (type $generated@@56) $generated@@76)) (= (type $generated@@57) $generated@@76)) (= (type $generated@@58) $generated@@76)) (= (type $generated@@59) $generated@@76)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@77 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@78 ($generated@@77 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@77 $generated@@82))
))) (= (type $generated@@60) ($generated@@77 $generated@@4))) (= (type $generated@@61) $generated@@76)) (= ($generated@@1 $generated@@79) 9)) (= (type $generated@@62) $generated@@79)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@76)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= (type $generated@@69) $generated@@76)) (= ($generated@@1 $generated@@80) 10)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74)
)
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@76)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@78 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@78 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@75)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert (= (type $generated@@147) $generated@@75))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@148 $generated@@147 $generated@@149))
 :pattern ( ($generated@@85 $generated@@148 $generated@@147 $generated@@149))
)))
(assert  (and (= (type $generated@@150) $generated@@75) (= (type $generated@@151) $generated@@88)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@88) (= (type $generated@@153) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@152 $generated@@150 $generated@@153)  (or (= $generated@@152 $generated@@151) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@153 $generated@@152) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@152 $generated@@150 $generated@@153))
)))
(assert (= (type $generated@@154) $generated@@75))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@88) (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@155 $generated@@154 $generated@@156)  (or (= $generated@@155 $generated@@151) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@155 $generated@@154 $generated@@156))
)))
(assert (= (type $generated@@157) $generated@@75))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@88) (= (type $generated@@159) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@158 $generated@@157 $generated@@159)  (or (= $generated@@158 $generated@@151) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@159 $generated@@158) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@158 $generated@@157 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= (type $generated@@161) $generated@@2) ($generated@@160 $generated@@161 ($generated@@86 0)))
 :pattern ( ($generated@@160 $generated@@161 ($generated@@86 0)))
)))
(assert ($generated@@162 $generated@@157))
(assert  (and (= ($generated@@1 $generated@@165) 14) (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@166 $generated@@167)) $generated@@75)
 :pattern ( ($generated@@164 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (= (type $generated@@168) $generated@@75) (= (type $generated@@169) $generated@@75)) (= (type $generated@@170) $generated@@165)) ($generated@@160 $generated@@170 ($generated@@164 $generated@@168 $generated@@169))) ($generated@@163 $generated@@170))
 :pattern ( ($generated@@163 $generated@@170) ($generated@@160 $generated@@170 ($generated@@164 $generated@@168 $generated@@169)))
)))
(assert  (and (and (= ($generated@@1 $generated@@174) 15) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@172 $generated@@175))
))) (forall (($generated@@176 T@U) ) (! (= (type ($generated@@173 $generated@@176)) $generated@@174)
 :pattern ( ($generated@@173 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) $generated@@165) (= (type $generated@@178) $generated@@165)) true) (= ($generated@@171 $generated@@177 $generated@@178)  (and (= ($generated@@172 $generated@@177) ($generated@@172 $generated@@178)) (= ($generated@@173 $generated@@177) ($generated@@173 $generated@@178)))))
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
)))
(assert (= (type $generated@@179) $generated@@75))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (=> (and (not (= $generated@@180 $generated@@151)) ($generated@@160 $generated@@180 $generated@@157)) ($generated@@160 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@160 $generated@@180 $generated@@157))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@75)
 :pattern ( ($generated@@181 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) ($generated@@87 $generated@@174 $generated@@2)) (= (type $generated@@185) $generated@@75)) ($generated@@160 $generated@@184 ($generated@@181 $generated@@185))) ($generated@@182 $generated@@184))
 :pattern ( ($generated@@160 $generated@@184 ($generated@@181 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ) (! (= (type ($generated@@186 $generated@@187)) $generated@@75)
 :pattern ( ($generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ) (!  (=> (= (type $generated@@188) $generated@@88) (= ($generated@@160 $generated@@188 $generated@@150)  (or (= $generated@@188 $generated@@151) (= ($generated@@186 $generated@@188) $generated@@150))))
 :pattern ( ($generated@@160 $generated@@188 $generated@@150))
)))
(assert (forall (($generated@@189 T@U) ) (!  (=> (= (type $generated@@189) $generated@@88) (= ($generated@@160 $generated@@189 $generated@@157)  (or (= $generated@@189 $generated@@151) (= ($generated@@186 $generated@@189) $generated@@157))))
 :pattern ( ($generated@@160 $generated@@189 $generated@@157))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (= ($generated@@1 ($generated@@192 $generated@@196 $generated@@197)) 16)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@193 ($generated@@192 $generated@@198 $generated@@199)) $generated@@198)
 :pattern ( ($generated@@192 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@194 ($generated@@192 $generated@@200 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@192 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@194 (type $generated@@202))))
(= (type ($generated@@190 $generated@@202 $generated@@203 $generated@@204)) $generated@@205))
 :pattern ( ($generated@@190 $generated@@202 $generated@@203 $generated@@204))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 (type $generated@@209)))
(let (($generated@@211 (type $generated@@207)))
(= (type ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@192 $generated@@211 $generated@@210))))
 :pattern ( ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@194 (type $generated@@212))))
 (=> (= (type $generated@@215) $generated@@216) (= ($generated@@190 ($generated@@195 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@213 $generated@@214) $generated@@215)))
 :weight 0
))) (and (and (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@190 ($generated@@195 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@190 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@226 $generated@@228) (= ($generated@@190 ($generated@@195 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@190 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or true (= ($generated@@190 ($generated@@195 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@190 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ) (! (= (type ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@192 $generated@@88 $generated@@4))
 :pattern ( ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@78 (type $generated@@244))))
 (=> (and (and (and (and (= (type $generated@@239) $generated@@88) (= (type $generated@@240) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@241) ($generated@@77 $generated@@4))) (= (type $generated@@243) $generated@@88)) (= (type $generated@@244) ($generated@@77 $generated@@245))) (= ($generated@@0 ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))  (=> (and (not (= $generated@@243 $generated@@239)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@240 $generated@@243) $generated@@241))) $generated@@242))))
 :pattern ( ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (= (type $generated@@246) $generated@@75))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@88) (= (type $generated@@248) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@247 $generated@@246 $generated@@248) ($generated@@85 $generated@@247 $generated@@150 $generated@@248)))
 :pattern ( ($generated@@85 $generated@@247 $generated@@246 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@88) (= (type $generated@@250) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@249 $generated@@179 $generated@@250) ($generated@@85 $generated@@249 $generated@@154 $generated@@250)))
 :pattern ( ($generated@@85 $generated@@249 $generated@@179 $generated@@250))
)))
(assert (= (type $generated@@251) $generated@@75))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@88) (= (type $generated@@253) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@252 $generated@@251 $generated@@253) ($generated@@85 $generated@@252 $generated@@157 $generated@@253)))
 :pattern ( ($generated@@85 $generated@@252 $generated@@251 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@254 $generated@@256 $generated@@257)) $generated@@165)
 :pattern ( ($generated@@254 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@75) (= (type $generated@@259) $generated@@75)) (= (type $generated@@260) $generated@@174)) (= (type $generated@@261) $generated@@174)) (= ($generated@@160 ($generated@@254 $generated@@260 $generated@@261) ($generated@@164 $generated@@258 $generated@@259))  (and ($generated@@255 $generated@@260 $generated@@258) ($generated@@255 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@160 ($generated@@254 $generated@@260 $generated@@261) ($generated@@164 $generated@@258 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@165) (= (type $generated@@263) $generated@@165)) (= ($generated@@171 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@171 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@75)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@87 $generated@@174 $generated@@4)) (= (type $generated@@267) $generated@@75)) (= ($generated@@160 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@174) ($generated@@0 ($generated@@92 $generated@@266 $generated@@268))) ($generated@@255 $generated@@268 $generated@@267))
 :pattern ( ($generated@@92 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@160 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@75)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@87 $generated@@174 $generated@@4)) (= (type $generated@@272) $generated@@75)) (= ($generated@@160 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@174) ($generated@@0 ($generated@@92 $generated@@271 $generated@@273))) ($generated@@255 $generated@@273 $generated@@272))
 :pattern ( ($generated@@92 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@160 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@274 $generated@@275) $generated@@275)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(= (type ($generated@@276 $generated@@277)) $generated@@278))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= ($generated@@276 $generated@@279) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@282) $generated@@75) (= (type $generated@@283) $generated@@75)) (= (type $generated@@284) $generated@@174)) (= (type $generated@@285) $generated@@174)) (= (type $generated@@286) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@280 $generated@@286)) (= ($generated@@85 ($generated@@254 $generated@@284 $generated@@285) ($generated@@164 $generated@@282 $generated@@283) $generated@@286)  (and ($generated@@281 $generated@@284 $generated@@282 $generated@@286) ($generated@@281 $generated@@285 $generated@@283 $generated@@286))))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@284 $generated@@285) ($generated@@164 $generated@@282 $generated@@283) $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@79)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@165) (= ($generated@@163 $generated@@289) (= ($generated@@287 $generated@@289) $generated@@62)))
 :pattern ( ($generated@@163 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@165) ($generated@@163 $generated@@290)) (exists (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (and (and (= (type $generated@@291) $generated@@174) (= (type $generated@@292) $generated@@174)) (= $generated@@290 ($generated@@254 $generated@@291 $generated@@292)))
 :no-pattern (type $generated@@291)
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
)))
 :pattern ( ($generated@@163 $generated@@290))
)))
(assert  (and (and (forall (($generated@@297 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@297)) 17)) (forall (($generated@@298 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@295 $generated@@298))
))) (forall (($generated@@299 T@T) ) (! (= (type ($generated@@293 $generated@@299)) ($generated@@295 $generated@@299))
 :pattern ( ($generated@@293 $generated@@299))
))))
(assert (forall (($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@300)) 0)
 :pattern ( ($generated@@293 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@2) (= ($generated@@160 $generated@@301 $generated@@147) (<= ($generated@@274 0) ($generated $generated@@301))))
 :pattern ( ($generated@@160 $generated@@301 $generated@@147))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@174)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@75) (= (type $generated@@306) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@281 ($generated@@302 $generated@@304) $generated@@305 $generated@@306) ($generated@@85 $generated@@304 $generated@@305 $generated@@306)))
 :pattern ( ($generated@@281 ($generated@@302 $generated@@304) $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@307) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@308) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@309) $generated@@174)) (= (type $generated@@310) $generated@@75)) ($generated@@143 $generated@@307 $generated@@308)) ($generated@@281 $generated@@309 $generated@@310 $generated@@307)) ($generated@@281 $generated@@309 $generated@@310 $generated@@308))
 :pattern ( ($generated@@143 $generated@@307 $generated@@308) ($generated@@281 $generated@@309 $generated@@310 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@311) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@312) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@314) $generated@@75)) ($generated@@143 $generated@@311 $generated@@312)) ($generated@@85 $generated@@313 $generated@@314 $generated@@311)) ($generated@@85 $generated@@313 $generated@@314 $generated@@312))
 :pattern ( ($generated@@143 $generated@@311 $generated@@312) ($generated@@85 $generated@@313 $generated@@314 $generated@@311))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@87 $generated@@317 $generated@@2))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@90 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@87 $generated@@319 $generated@@2)) (and (= (= ($generated@@315 $generated@@318) 0) (= $generated@@318 ($generated@@316 $generated@@319))) (=> (not (= ($generated@@315 $generated@@318) 0)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) (< 0 ($generated ($generated@@92 $generated@@318 $generated@@320))))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 18)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@87 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@92 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@92 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 19)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@87 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@92 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@92 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@90 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@87 $generated@@358 $generated@@2)) (= ($generated@@182 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@92 $generated@@357 $generated@@359))) (<= ($generated ($generated@@92 $generated@@357 $generated@@359)) ($generated@@315 $generated@@357))))
 :pattern ( ($generated@@92 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@182 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@174) ($generated@@255 $generated@@363 $generated@@147)) (and (= ($generated@@302 ($generated@@360 $generated@@2 $generated@@363)) $generated@@363) ($generated@@160 ($generated@@360 $generated@@2 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@255 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@174) ($generated@@255 $generated@@364 $generated@@150)) (and (= ($generated@@302 ($generated@@360 $generated@@88 $generated@@364)) $generated@@364) ($generated@@160 ($generated@@360 $generated@@88 $generated@@364) $generated@@150)))
 :pattern ( ($generated@@255 $generated@@364 $generated@@150))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@174) ($generated@@255 $generated@@365 $generated@@246)) (and (= ($generated@@302 ($generated@@360 $generated@@88 $generated@@365)) $generated@@365) ($generated@@160 ($generated@@360 $generated@@88 $generated@@365) $generated@@246)))
 :pattern ( ($generated@@255 $generated@@365 $generated@@246))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@174) ($generated@@255 $generated@@366 $generated@@154)) (and (= ($generated@@302 ($generated@@360 $generated@@88 $generated@@366)) $generated@@366) ($generated@@160 ($generated@@360 $generated@@88 $generated@@366) $generated@@154)))
 :pattern ( ($generated@@255 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@174) ($generated@@255 $generated@@367 $generated@@179)) (and (= ($generated@@302 ($generated@@360 $generated@@88 $generated@@367)) $generated@@367) ($generated@@160 ($generated@@360 $generated@@88 $generated@@367) $generated@@179)))
 :pattern ( ($generated@@255 $generated@@367 $generated@@179))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@174) ($generated@@255 $generated@@368 $generated@@157)) (and (= ($generated@@302 ($generated@@360 $generated@@88 $generated@@368)) $generated@@368) ($generated@@160 ($generated@@360 $generated@@88 $generated@@368) $generated@@157)))
 :pattern ( ($generated@@255 $generated@@368 $generated@@157))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@174) ($generated@@255 $generated@@369 $generated@@251)) (and (= ($generated@@302 ($generated@@360 $generated@@88 $generated@@369)) $generated@@369) ($generated@@160 ($generated@@360 $generated@@88 $generated@@369) $generated@@251)))
 :pattern ( ($generated@@255 $generated@@369 $generated@@251))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@88) (= ($generated@@160 $generated@@370 $generated@@246)  (and ($generated@@160 $generated@@370 $generated@@150) (not (= $generated@@370 $generated@@151)))))
 :pattern ( ($generated@@160 $generated@@370 $generated@@246))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@88) (= ($generated@@160 $generated@@371 $generated@@179)  (and ($generated@@160 $generated@@371 $generated@@154) (not (= $generated@@371 $generated@@151)))))
 :pattern ( ($generated@@160 $generated@@371 $generated@@179))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@88) (= ($generated@@160 $generated@@372 $generated@@251)  (and ($generated@@160 $generated@@372 $generated@@157) (not (= $generated@@372 $generated@@151)))))
 :pattern ( ($generated@@160 $generated@@372 $generated@@251))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@325 (type $generated@@373))))
(let (($generated@@375 ($generated@@324 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@323 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@322 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@92 ($generated@@321 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@321 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@325 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@87 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@325 (type $generated@@380))))
(let (($generated@@382 ($generated@@324 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@323 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@322 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@92 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@343 (type $generated@@384))))
(let (($generated@@386 ($generated@@342 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@341 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@340 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) ($generated@@0 ($generated@@92 ($generated@@339 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@339 $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@343 (type $generated@@389))))
(= (type ($generated@@388 $generated@@389)) ($generated@@87 $generated@@390 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@343 (type $generated@@391))))
(let (($generated@@393 ($generated@@342 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@341 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@340 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@392) ($generated@@0 ($generated@@92 ($generated@@388 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@388 $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@87 $generated@@174 $generated@@2)) (= (type $generated@@396) $generated@@75)) (= ($generated@@160 $generated@@395 ($generated@@181 $generated@@396)) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@174) (< 0 ($generated ($generated@@92 $generated@@395 $generated@@397)))) ($generated@@255 $generated@@397 $generated@@396))
 :pattern ( ($generated@@92 $generated@@395 $generated@@397))
))))
 :pattern ( ($generated@@160 $generated@@395 ($generated@@181 $generated@@396)))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@87 $generated@@174 $generated@@4)) (= (type $generated@@399) $generated@@75)) (= (type $generated@@400) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@398 ($generated@@264 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@174) ($generated@@0 ($generated@@92 $generated@@398 $generated@@401))) ($generated@@281 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@92 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@85 $generated@@398 ($generated@@264 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@87 $generated@@174 $generated@@4)) (= (type $generated@@403) $generated@@75)) (= (type $generated@@404) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@402 ($generated@@269 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@174) ($generated@@0 ($generated@@92 $generated@@402 $generated@@405))) ($generated@@281 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@92 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@85 $generated@@402 ($generated@@269 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(= ($generated ($generated@@92 ($generated@@316 $generated@@407) $generated@@406)) 0))
 :pattern ( (let (($generated@@407 (type $generated@@406)))
($generated@@92 ($generated@@316 $generated@@407) $generated@@406)))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) ($generated@@87 $generated@@174 $generated@@4))
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@325 (type $generated@@411))))
(let (($generated@@413 ($generated@@324 (type $generated@@411))))
(= (type ($generated@@409 $generated@@411)) ($generated@@87 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@323 $generated@@174 $generated@@174)) (= (type $generated@@415) $generated@@174)) (= ($generated@@0 ($generated@@92 ($generated@@408 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@92 ($generated@@321 $generated@@414) ($generated@@172 ($generated@@360 $generated@@165 $generated@@415)))) (= ($generated@@92 ($generated@@409 $generated@@414) ($generated@@172 ($generated@@360 $generated@@165 $generated@@415))) ($generated@@173 ($generated@@360 $generated@@165 $generated@@415))))))
 :pattern ( ($generated@@92 ($generated@@408 $generated@@414) $generated@@415))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@87 $generated@@174 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@343 (type $generated@@419))))
(let (($generated@@421 ($generated@@342 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@87 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@341 $generated@@174 $generated@@174)) (= (type $generated@@423) $generated@@174)) (= ($generated@@0 ($generated@@92 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@92 ($generated@@339 $generated@@422) ($generated@@172 ($generated@@360 $generated@@165 $generated@@423)))) (= ($generated@@92 ($generated@@417 $generated@@422) ($generated@@172 ($generated@@360 $generated@@165 $generated@@423))) ($generated@@173 ($generated@@360 $generated@@165 $generated@@423))))))
 :pattern ( ($generated@@92 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@324 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@323 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@92 ($generated@@377 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@92 ($generated@@321 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@92 ($generated@@409 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@92 ($generated@@321 $generated@@424) $generated@@428))
 :pattern ( ($generated@@92 ($generated@@409 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@92 ($generated@@377 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@342 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@341 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@92 ($generated@@388 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@92 ($generated@@339 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@92 ($generated@@417 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@92 ($generated@@339 $generated@@429) $generated@@433))
 :pattern ( ($generated@@92 ($generated@@417 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@92 ($generated@@388 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@75)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@323 $generated@@174 $generated@@174)) (= (type $generated@@438) $generated@@75)) (= (type $generated@@439) $generated@@75)) (= (type $generated@@440) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@174) ($generated@@0 ($generated@@92 ($generated@@321 $generated@@437) $generated@@441))) (and ($generated@@281 ($generated@@92 ($generated@@409 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@281 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@92 ($generated@@409 $generated@@437) $generated@@441))
 :pattern ( ($generated@@92 ($generated@@321 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@85 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@75)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@341 $generated@@174 $generated@@174)) (= (type $generated@@446) $generated@@75)) (= (type $generated@@447) $generated@@75)) (= (type $generated@@448) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@174) ($generated@@0 ($generated@@92 ($generated@@339 $generated@@445) $generated@@449))) (and ($generated@@281 ($generated@@92 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@281 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@92 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@92 ($generated@@339 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@85 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@450) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@451) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@452) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@450 $generated@@452))) (and ($generated@@143 $generated@@450 $generated@@451) ($generated@@143 $generated@@451 $generated@@452))) ($generated@@143 $generated@@450 $generated@@452))
 :pattern ( ($generated@@143 $generated@@450 $generated@@451) ($generated@@143 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@T) ) (! (= (type ($generated@@453 $generated@@454)) ($generated@@87 $generated@@454 $generated@@4))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@343 (type $generated@@455))))
(let (($generated@@457 ($generated@@342 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@341 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@340 $generated@@457 $generated@@456)) (= ($generated@@339 $generated@@455) ($generated@@453 $generated@@457))))))
 :pattern ( ($generated@@339 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@343 (type $generated@@458))))
(let (($generated@@460 ($generated@@342 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@341 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@340 $generated@@460 $generated@@459)) (= ($generated@@388 $generated@@458) ($generated@@453 $generated@@459))))))
 :pattern ( ($generated@@388 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@343 (type $generated@@461))))
(let (($generated@@463 ($generated@@342 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@341 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@340 $generated@@463 $generated@@462)) (= ($generated@@416 $generated@@461) ($generated@@453 $generated@@174))))))
 :pattern ( ($generated@@416 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@325 (type $generated@@464))))
(let (($generated@@466 ($generated@@324 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@323 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@322 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@174) (= (type $generated@@468) $generated@@174)) ($generated@@0 ($generated@@92 ($generated@@408 $generated@@464) ($generated@@302 ($generated@@254 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@408 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@343 (type $generated@@469))))
(let (($generated@@471 ($generated@@342 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@341 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@340 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@174) (= (type $generated@@473) $generated@@174)) ($generated@@0 ($generated@@92 ($generated@@416 $generated@@469) ($generated@@302 ($generated@@254 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@416 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@174) ($generated@@255 $generated@@474 $generated@@46)) (and (= ($generated@@302 ($generated@@360 $generated@@2 $generated@@474)) $generated@@474) ($generated@@160 ($generated@@360 $generated@@2 $generated@@474) $generated@@46)))
 :pattern ( ($generated@@255 $generated@@474 $generated@@46))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@174) ($generated@@255 $generated@@475 $generated@@47)) (and (= ($generated@@302 ($generated@@360 $generated@@3 $generated@@475)) $generated@@475) ($generated@@160 ($generated@@360 $generated@@3 $generated@@475) $generated@@47)))
 :pattern ( ($generated@@255 $generated@@475 $generated@@47))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@174) ($generated@@255 $generated@@476 $generated@@44)) (and (= ($generated@@302 ($generated@@360 $generated@@4 $generated@@476)) $generated@@476) ($generated@@160 ($generated@@360 $generated@@4 $generated@@476) $generated@@44)))
 :pattern ( ($generated@@255 $generated@@476 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@477) 20))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@174) ($generated@@255 $generated@@478 $generated@@45)) (and (= ($generated@@302 ($generated@@360 $generated@@477 $generated@@478)) $generated@@478) ($generated@@160 ($generated@@360 $generated@@477 $generated@@478) $generated@@45)))
 :pattern ( ($generated@@255 $generated@@478 $generated@@45))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@75) (= ($generated@@255 ($generated@@302 $generated@@479) $generated@@480) ($generated@@160 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@255 ($generated@@302 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@90 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@87 $generated@@482 $generated@@2)) (<= 0 ($generated@@315 $generated@@481))))
 :pattern ( ($generated@@315 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@296 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@295 $generated@@484)) (<= 0 ($generated@@294 $generated@@483))))
 :pattern ( ($generated@@294 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@75)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@75) (= (type $generated@@488) $generated@@75)) (= ($generated@@485 ($generated@@434 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@434 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@75)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@75) (= (type $generated@@492) $generated@@75)) (= ($generated@@489 ($generated@@434 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@434 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@75) (= (type $generated@@494) $generated@@75)) (= ($generated@@83 ($generated@@434 $generated@@493 $generated@@494)) $generated@@58))
 :pattern ( ($generated@@434 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@75)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@75) (= (type $generated@@498) $generated@@75)) (= ($generated@@495 ($generated@@442 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@442 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@75)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@75) (= (type $generated@@502) $generated@@75)) (= ($generated@@499 ($generated@@442 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@442 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@75) (= (type $generated@@504) $generated@@75)) (= ($generated@@83 ($generated@@442 $generated@@503 $generated@@504)) $generated@@59))
 :pattern ( ($generated@@442 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@174) (= (type $generated@@506) $generated@@174)) (= ($generated@@287 ($generated@@254 $generated@@505 $generated@@506)) $generated@@62))
 :pattern ( ($generated@@254 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@75)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@75) (= (type $generated@@510) $generated@@75)) (= ($generated@@507 ($generated@@164 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@164 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@75)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@75) (= (type $generated@@514) $generated@@75)) (= ($generated@@511 ($generated@@164 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@164 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@174) (= (type $generated@@516) $generated@@174)) (= ($generated@@172 ($generated@@254 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@254 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@174) (= (type $generated@@518) $generated@@174)) (= ($generated@@173 ($generated@@254 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@254 $generated@@517 $generated@@518))
)))
(assert  (and (forall (($generated@@521 T@U) ) (! (= (type ($generated@@519 $generated@@521)) $generated@@75)
 :pattern ( ($generated@@519 $generated@@521))
)) (forall (($generated@@522 T@U) ($generated@@523 Int) ) (! (let (($generated@@524 ($generated@@296 (type $generated@@522))))
(= (type ($generated@@520 $generated@@522 $generated@@523)) $generated@@524))
 :pattern ( ($generated@@520 $generated@@522 $generated@@523))
))))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@295 $generated@@174)) (= (type $generated@@526) $generated@@75)) (= (type $generated@@527) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@525 ($generated@@519 $generated@@526) $generated@@527) (forall (($generated@@528 Int) ) (!  (=> (and (<= 0 $generated@@528) (< $generated@@528 ($generated@@294 $generated@@525))) ($generated@@281 ($generated@@520 $generated@@525 $generated@@528) $generated@@526 $generated@@527))
 :pattern ( ($generated@@520 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@85 $generated@@525 ($generated@@519 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@530 Int) ) (! (= ($generated@@529 ($generated@@86 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@86 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@75)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@75) (= ($generated@@531 ($generated@@264 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@264 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@75) (= ($generated@@83 ($generated@@264 $generated@@534)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@75)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@75) (= ($generated@@535 ($generated@@269 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@269 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@75) (= ($generated@@83 ($generated@@269 $generated@@538)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@75)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@75) (= ($generated@@539 ($generated@@181 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@181 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@75) (= ($generated@@83 ($generated@@181 $generated@@542)) $generated@@56))
 :pattern ( ($generated@@181 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@75)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@75) (= ($generated@@543 ($generated@@519 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@519 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@75) (= ($generated@@83 ($generated@@519 $generated@@546)) $generated@@57))
 :pattern ( ($generated@@519 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
(= ($generated@@360 $generated@@548 ($generated@@302 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@302 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@323 $generated@@174 $generated@@174)) (= (type $generated@@550) $generated@@75)) (= (type $generated@@551) $generated@@75)) (= ($generated@@160 $generated@@549 ($generated@@434 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@174) ($generated@@0 ($generated@@92 ($generated@@321 $generated@@549) $generated@@552))) (and ($generated@@255 ($generated@@92 ($generated@@409 $generated@@549) $generated@@552) $generated@@551) ($generated@@255 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@92 ($generated@@409 $generated@@549) $generated@@552))
 :pattern ( ($generated@@92 ($generated@@321 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@160 $generated@@549 ($generated@@434 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@341 $generated@@174 $generated@@174)) (= (type $generated@@554) $generated@@75)) (= (type $generated@@555) $generated@@75)) (= ($generated@@160 $generated@@553 ($generated@@442 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@174) ($generated@@0 ($generated@@92 ($generated@@339 $generated@@553) $generated@@556))) (and ($generated@@255 ($generated@@92 ($generated@@417 $generated@@553) $generated@@556) $generated@@555) ($generated@@255 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@92 ($generated@@417 $generated@@553) $generated@@556))
 :pattern ( ($generated@@92 ($generated@@339 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@160 $generated@@553 ($generated@@442 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@174) (= (type $generated@@560) $generated@@174)) (< ($generated@@557 $generated@@559) ($generated@@558 ($generated@@254 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@254 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@174) (= (type $generated@@562) $generated@@174)) (< ($generated@@557 $generated@@562) ($generated@@558 ($generated@@254 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@254 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@174) (= (type $generated@@564) $generated@@75)) (= (type $generated@@565) $generated@@75)) ($generated@@255 $generated@@563 ($generated@@434 $generated@@564 $generated@@565))) (and (= ($generated@@302 ($generated@@360 ($generated@@323 $generated@@174 $generated@@174) $generated@@563)) $generated@@563) ($generated@@160 ($generated@@360 ($generated@@323 $generated@@174 $generated@@174) $generated@@563) ($generated@@434 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@255 $generated@@563 ($generated@@434 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@174) (= (type $generated@@567) $generated@@75)) (= (type $generated@@568) $generated@@75)) ($generated@@255 $generated@@566 ($generated@@442 $generated@@567 $generated@@568))) (and (= ($generated@@302 ($generated@@360 ($generated@@341 $generated@@174 $generated@@174) $generated@@566)) $generated@@566) ($generated@@160 ($generated@@360 ($generated@@341 $generated@@174 $generated@@174) $generated@@566) ($generated@@442 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@255 $generated@@566 ($generated@@442 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@75) (= (type $generated@@570) $generated@@75)) (= (type $generated@@571) $generated@@174)) ($generated@@255 $generated@@571 ($generated@@164 $generated@@569 $generated@@570))) (and (= ($generated@@302 ($generated@@360 $generated@@165 $generated@@571)) $generated@@571) ($generated@@160 ($generated@@360 $generated@@165 $generated@@571) ($generated@@164 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@255 $generated@@571 ($generated@@164 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@92 ($generated@@453 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@92 ($generated@@453 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@80)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@75) (= (type $generated@@577) $generated@@75)) (and (= ($generated@@83 ($generated@@164 $generated@@576 $generated@@577)) $generated@@63) (= ($generated@@574 ($generated@@164 $generated@@576 $generated@@577)) $generated@@71)))
 :pattern ( ($generated@@164 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@165) (= ($generated@@557 ($generated@@302 $generated@@578)) ($generated@@558 $generated@@578)))
 :pattern ( ($generated@@557 ($generated@@302 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@174) ($generated@@255 $generated@@579 ($generated@@86 0))) (and (= ($generated@@302 ($generated@@360 $generated@@2 $generated@@579)) $generated@@579) ($generated@@160 ($generated@@360 ($generated@@87 $generated@@174 $generated@@4) $generated@@579) ($generated@@86 0))))
 :pattern ( ($generated@@255 $generated@@579 ($generated@@86 0)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@174) (= (type $generated@@581) $generated@@75)) ($generated@@255 $generated@@580 ($generated@@264 $generated@@581))) (and (= ($generated@@302 ($generated@@360 ($generated@@87 $generated@@174 $generated@@4) $generated@@580)) $generated@@580) ($generated@@160 ($generated@@360 ($generated@@87 $generated@@174 $generated@@4) $generated@@580) ($generated@@264 $generated@@581))))
 :pattern ( ($generated@@255 $generated@@580 ($generated@@264 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@174) (= (type $generated@@583) $generated@@75)) ($generated@@255 $generated@@582 ($generated@@269 $generated@@583))) (and (= ($generated@@302 ($generated@@360 ($generated@@87 $generated@@174 $generated@@4) $generated@@582)) $generated@@582) ($generated@@160 ($generated@@360 ($generated@@87 $generated@@174 $generated@@4) $generated@@582) ($generated@@269 $generated@@583))))
 :pattern ( ($generated@@255 $generated@@582 ($generated@@269 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@174) (= (type $generated@@585) $generated@@75)) ($generated@@255 $generated@@584 ($generated@@181 $generated@@585))) (and (= ($generated@@302 ($generated@@360 ($generated@@87 $generated@@174 $generated@@2) $generated@@584)) $generated@@584) ($generated@@160 ($generated@@360 ($generated@@87 $generated@@174 $generated@@2) $generated@@584) ($generated@@181 $generated@@585))))
 :pattern ( ($generated@@255 $generated@@584 ($generated@@181 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@174) (= (type $generated@@587) $generated@@75)) ($generated@@255 $generated@@586 ($generated@@519 $generated@@587))) (and (= ($generated@@302 ($generated@@360 ($generated@@295 $generated@@174) $generated@@586)) $generated@@586) ($generated@@160 ($generated@@360 ($generated@@295 $generated@@174) $generated@@586) ($generated@@519 $generated@@587))))
 :pattern ( ($generated@@255 $generated@@586 ($generated@@519 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@88) (= (type $generated@@589) ($generated@@87 $generated@@88 $generated@@89))) (and (not (= $generated@@588 $generated@@151)) ($generated@@85 $generated@@588 $generated@@157 $generated@@589))) ($generated@@85 $generated@@588 $generated@@179 $generated@@589))
 :pattern ( ($generated@@85 $generated@@588 $generated@@157 $generated@@589))
)))
(assert (= ($generated@@83 $generated@@147) $generated@@61))
(assert (= ($generated@@574 $generated@@147) $generated@@70))
(assert (= ($generated@@83 $generated@@150) $generated@@64))
(assert (= ($generated@@574 $generated@@150) $generated@@72))
(assert (= ($generated@@83 $generated@@246) $generated@@65))
(assert (= ($generated@@574 $generated@@246) $generated@@72))
(assert (= ($generated@@83 $generated@@154) $generated@@66))
(assert (= ($generated@@574 $generated@@154) $generated@@73))
(assert (= ($generated@@83 $generated@@179) $generated@@67))
(assert (= ($generated@@574 $generated@@179) $generated@@73))
(assert (= ($generated@@83 $generated@@157) $generated@@68))
(assert (= ($generated@@574 $generated@@157) $generated@@74))
(assert (= ($generated@@83 $generated@@251) $generated@@69))
(assert (= ($generated@@574 $generated@@251) $generated@@74))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@87 $generated@@174 $generated@@2)) (= (type $generated@@591) $generated@@75)) (= (type $generated@@592) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@590 ($generated@@181 $generated@@591) $generated@@592) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@174) (< 0 ($generated ($generated@@92 $generated@@590 $generated@@593)))) ($generated@@281 $generated@@593 $generated@@591 $generated@@592))
 :pattern ( ($generated@@92 $generated@@590 $generated@@593))
))))
 :pattern ( ($generated@@85 $generated@@590 ($generated@@181 $generated@@591) $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@88) (= ($generated@@160 $generated@@594 $generated@@154)  (or (= $generated@@594 $generated@@151) ($generated@@162 ($generated@@186 $generated@@594)))))
 :pattern ( ($generated@@160 $generated@@594 $generated@@154))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@165) (= (type $generated@@596) $generated@@75)) (= (type $generated@@597) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@280 $generated@@597) (and ($generated@@163 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@75) ($generated@@85 $generated@@595 ($generated@@164 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@85 $generated@@595 ($generated@@164 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@281 ($generated@@172 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@281 ($generated@@172 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@165) (= (type $generated@@600) $generated@@75)) (= (type $generated@@601) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@280 $generated@@601) (and ($generated@@163 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@75) ($generated@@85 $generated@@599 ($generated@@164 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@85 $generated@@599 ($generated@@164 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@281 ($generated@@173 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@281 ($generated@@173 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@174) (= (type $generated@@604) $generated@@174)) (= ($generated@@254 ($generated@@276 $generated@@603) ($generated@@276 $generated@@604)) ($generated@@276 ($generated@@254 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@254 ($generated@@276 $generated@@603) ($generated@@276 $generated@@604)))
)))
(assert (forall (($generated@@605 Int) ) (! (= ($generated@@302 ($generated@@8 ($generated@@274 $generated@@605))) ($generated@@276 ($generated@@302 ($generated@@8 $generated@@605))))
 :pattern ( ($generated@@302 ($generated@@8 ($generated@@274 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ) (! (= ($generated@@302 ($generated@@276 $generated@@606)) ($generated@@276 ($generated@@302 $generated@@606)))
 :pattern ( ($generated@@302 ($generated@@276 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@296 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@295 $generated@@608)) (= ($generated@@294 $generated@@607) 0)) (= $generated@@607 ($generated@@293 $generated@@608))))
 :pattern ( ($generated@@294 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@610)))
 (=> (and (and (= (type $generated@@609) ($generated@@87 $generated@@612 $generated@@2)) (= (type $generated@@611) $generated@@2)) (<= 0 ($generated $generated@@611))) (= ($generated@@315 ($generated@@93 $generated@@609 $generated@@610 $generated@@611)) (+ (- ($generated@@315 $generated@@609) ($generated ($generated@@92 $generated@@609 $generated@@610))) ($generated $generated@@611)))))
 :pattern ( ($generated@@315 ($generated@@93 $generated@@609 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@614) $generated@@2)) ($generated@@85 $generated@@614 $generated@@46 $generated@@613))
 :pattern ( ($generated@@85 $generated@@614 $generated@@46 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@616) $generated@@3)) ($generated@@85 $generated@@616 $generated@@47 $generated@@615))
 :pattern ( ($generated@@85 $generated@@616 $generated@@47 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@618) $generated@@4)) ($generated@@85 $generated@@618 $generated@@44 $generated@@617))
 :pattern ( ($generated@@85 $generated@@618 $generated@@44 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@620) $generated@@477)) ($generated@@85 $generated@@620 $generated@@45 $generated@@619))
 :pattern ( ($generated@@85 $generated@@620 $generated@@45 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@622) $generated@@174)) ($generated@@85 $generated@@622 $generated@@48 $generated@@621))
 :pattern ( ($generated@@85 $generated@@622 $generated@@48 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@295 $generated@@174)) (= (type $generated@@624) $generated@@75)) (= ($generated@@160 $generated@@623 ($generated@@519 $generated@@624)) (forall (($generated@@625 Int) ) (!  (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@294 $generated@@623))) ($generated@@255 ($generated@@520 $generated@@623 $generated@@625) $generated@@624))
 :pattern ( ($generated@@520 $generated@@623 $generated@@625))
))))
 :pattern ( ($generated@@160 $generated@@623 ($generated@@519 $generated@@624)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 Int) ) (!  (=> (= (type $generated@@627) ($generated@@295 $generated@@174)) (=> (and (<= 0 $generated@@628) (< $generated@@628 ($generated@@294 $generated@@627))) (< ($generated@@558 ($generated@@360 $generated@@165 ($generated@@520 $generated@@627 $generated@@628))) ($generated@@626 $generated@@627))))
 :pattern ( ($generated@@558 ($generated@@360 $generated@@165 ($generated@@520 $generated@@627 $generated@@628))))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@323 $generated@@174 $generated@@174)) (= (type $generated@@630) $generated@@75)) (= (type $generated@@631) $generated@@75)) ($generated@@160 $generated@@629 ($generated@@434 $generated@@630 $generated@@631))) (and (and ($generated@@160 ($generated@@321 $generated@@629) ($generated@@264 $generated@@630)) ($generated@@160 ($generated@@377 $generated@@629) ($generated@@264 $generated@@631))) ($generated@@160 ($generated@@408 $generated@@629) ($generated@@264 ($generated@@164 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@160 $generated@@629 ($generated@@434 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) ($generated@@341 $generated@@174 $generated@@174)) (= (type $generated@@633) $generated@@75)) (= (type $generated@@634) $generated@@75)) ($generated@@160 $generated@@632 ($generated@@442 $generated@@633 $generated@@634))) (and (and ($generated@@160 ($generated@@339 $generated@@632) ($generated@@269 $generated@@633)) ($generated@@160 ($generated@@388 $generated@@632) ($generated@@269 $generated@@634))) ($generated@@160 ($generated@@416 $generated@@632) ($generated@@269 ($generated@@164 $generated@@633 $generated@@634)))))
 :pattern ( ($generated@@160 $generated@@632 ($generated@@442 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@2) ($generated@@160 $generated@@635 $generated@@46))
 :pattern ( ($generated@@160 $generated@@635 $generated@@46))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@3) ($generated@@160 $generated@@636 $generated@@47))
 :pattern ( ($generated@@160 $generated@@636 $generated@@47))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@4) ($generated@@160 $generated@@637 $generated@@44))
 :pattern ( ($generated@@160 $generated@@637 $generated@@44))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@477) ($generated@@160 $generated@@638 $generated@@45))
 :pattern ( ($generated@@160 $generated@@638 $generated@@45))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@174) ($generated@@160 $generated@@639 $generated@@48))
 :pattern ( ($generated@@160 $generated@@639 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 (T@U) Bool)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Bool)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () Bool)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Bool)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Bool)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () Bool)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@640) ($generated@@192 $generated@@88 $generated@@4)) (= (type $generated@@641) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@643) $generated@@88)) (= (type $generated@@644) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@646) $generated@@88)) (= (type $generated@@648) $generated@@88)) (= (type $generated@@649) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@650) $generated@@88)) (= (type $generated@@652) $generated@@88)) (= (type $generated@@653) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@654) $generated@@88)) (= (type $generated@@656) $generated@@88)) (= (type $generated@@657) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@658) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@659) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@661) $generated@@88)) (= (type $generated@@663) $generated@@88)) (= (type $generated@@665) $generated@@88)) (= (type $generated@@667) $generated@@88)) (= (type $generated@@668) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@670  (=> (and (= $generated@@640 ($generated@@191 $generated@@151 $generated@@641 $generated@@60 false)) (= $generated@@642 ($generated@@274 3))) (=> (and (and (and (and (and (not (= $generated@@643 $generated@@151)) (and ($generated@@160 $generated@@643 $generated@@246) ($generated@@85 $generated@@643 $generated@@246 $generated@@641))) (and ($generated@@280 $generated@@644) ($generated@@645 $generated@@644))) (and (and (not (= $generated@@646 $generated@@151)) (and ($generated@@160 $generated@@646 $generated@@246) ($generated@@85 $generated@@646 $generated@@246 $generated@@644))) (and (not ($generated@@0 ($generated@@94 ($generated@@92 $generated@@641 $generated@@646) $generated@@60))) (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@88) (=> (and (not (= $generated@@671 $generated@@151)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@641 $generated@@671) $generated@@60))) (= ($generated@@92 $generated@@644 $generated@@671) ($generated@@92 $generated@@641 $generated@@671))))
 :pattern ( ($generated@@92 $generated@@644 $generated@@671))
))))) (and (and (and ($generated@@143 $generated@@641 $generated@@644) (= $generated@@647 ($generated@@274 2))) (and (not (= $generated@@648 $generated@@151)) (and ($generated@@160 $generated@@648 $generated@@251) ($generated@@85 $generated@@648 $generated@@251 $generated@@641)))) (and (and ($generated@@280 $generated@@649) ($generated@@645 $generated@@649)) (and (not (= $generated@@650 $generated@@151)) (and ($generated@@160 $generated@@650 $generated@@251) ($generated@@85 $generated@@650 $generated@@251 $generated@@649)))))) (and (and (and (and (not ($generated@@0 ($generated@@94 ($generated@@92 $generated@@644 $generated@@650) $generated@@60))) (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@88) (=> (and (not (= $generated@@672 $generated@@151)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@644 $generated@@672) $generated@@60))) (= ($generated@@92 $generated@@649 $generated@@672) ($generated@@92 $generated@@644 $generated@@672))))
 :pattern ( ($generated@@92 $generated@@649 $generated@@672))
))) (and ($generated@@143 $generated@@644 $generated@@649) (= $generated@@651 ($generated@@274 2)))) (and (and (not (= $generated@@652 $generated@@151)) (and ($generated@@160 $generated@@652 $generated@@251) ($generated@@85 $generated@@652 $generated@@251 $generated@@641))) (and ($generated@@280 $generated@@653) ($generated@@645 $generated@@653)))) (and (and (and (not (= $generated@@654 $generated@@151)) (and ($generated@@160 $generated@@654 $generated@@251) ($generated@@85 $generated@@654 $generated@@251 $generated@@653))) (not ($generated@@0 ($generated@@94 ($generated@@92 $generated@@649 $generated@@654) $generated@@60)))) (and (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@88) (=> (and (not (= $generated@@673 $generated@@151)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@649 $generated@@673) $generated@@60))) (= ($generated@@92 $generated@@653 $generated@@673) ($generated@@92 $generated@@649 $generated@@673))))
 :pattern ( ($generated@@92 $generated@@653 $generated@@673))
)) ($generated@@143 $generated@@649 $generated@@653))))) (and (=> (= (ControlFlow 0 2) (- 0 14)) true) (and (=> (= (ControlFlow 0 2) (- 0 13)) true) (and (=> (= (ControlFlow 0 2) (- 0 12)) true) (and (=> (= (ControlFlow 0 2) (- 0 11)) true) (and (=> (= (ControlFlow 0 2) (- 0 10)) true) (and (=> (= (ControlFlow 0 2) (- 0 9)) true) (and (=> (= (ControlFlow 0 2) (- 0 8)) true) (=> (=> $generated@@655 (and ($generated@@160 $generated@@656 $generated@@179) ($generated@@85 $generated@@656 $generated@@179 $generated@@653))) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) true) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (! (let (($generated@@676 ($generated@@78 (type $generated@@675))))
 (=> (and (= (type $generated@@674) $generated@@88) (= (type $generated@@675) ($generated@@77 $generated@@676))) (=> (and (and (not (= $generated@@674 $generated@@151)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@653 $generated@@674) $generated@@60))) (or (or (= $generated@@674 $generated@@646) (= $generated@@674 $generated@@650)) (= $generated@@674 $generated@@654))) ($generated@@0 ($generated@@190 $generated@@640 $generated@@674 $generated@@675)))))
 :no-pattern (type $generated@@674)
 :no-pattern (type $generated@@675)
 :no-pattern ($generated $generated@@674)
 :no-pattern ($generated@@0 $generated@@674)
 :no-pattern ($generated $generated@@675)
 :no-pattern ($generated@@0 $generated@@675)
))) (=> (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (! (let (($generated@@679 ($generated@@78 (type $generated@@678))))
 (=> (and (= (type $generated@@677) $generated@@88) (= (type $generated@@678) ($generated@@77 $generated@@679))) (=> (and (and (not (= $generated@@677 $generated@@151)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@653 $generated@@677) $generated@@60))) (or (or (= $generated@@677 $generated@@646) (= $generated@@677 $generated@@650)) (= $generated@@677 $generated@@654))) ($generated@@0 ($generated@@190 $generated@@640 $generated@@677 $generated@@678)))))
 :no-pattern (type $generated@@677)
 :no-pattern (type $generated@@678)
 :no-pattern ($generated $generated@@677)
 :no-pattern ($generated@@0 $generated@@677)
 :no-pattern ($generated $generated@@678)
 :no-pattern ($generated@@0 $generated@@678)
)) (=> (and (and (and (and ($generated@@280 $generated@@657) ($generated@@645 $generated@@657)) (and (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@88) (=> (and (not (= $generated@@680 $generated@@151)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@653 $generated@@680) $generated@@60))) (or (= ($generated@@92 $generated@@657 $generated@@680) ($generated@@92 $generated@@653 $generated@@680)) (or (or (= $generated@@680 $generated@@646) (= $generated@@680 $generated@@650)) (= $generated@@680 $generated@@654)))))
 :pattern ( ($generated@@92 $generated@@657 $generated@@680))
)) ($generated@@143 $generated@@653 $generated@@657))) (and (and ($generated@@280 $generated@@658) ($generated@@645 $generated@@658)) (and (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@88) (=> (and (not (= $generated@@681 $generated@@151)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@657 $generated@@681) $generated@@60))) (= ($generated@@92 $generated@@658 $generated@@681) ($generated@@92 $generated@@657 $generated@@681))))
 :pattern ( ($generated@@92 $generated@@658 $generated@@681))
)) ($generated@@143 $generated@@657 $generated@@658)))) (and (and (and ($generated@@280 $generated@@659) ($generated@@645 $generated@@659)) (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@88) (=> (and (not (= $generated@@682 $generated@@151)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@658 $generated@@682) $generated@@60))) (= ($generated@@92 $generated@@659 $generated@@682) ($generated@@92 $generated@@658 $generated@@682))))
 :pattern ( ($generated@@92 $generated@@659 $generated@@682))
))) (and ($generated@@143 $generated@@658 $generated@@659) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@160 ($generated@@8 ($generated@@274 70)) $generated@@147))))))))))))))))))))
(let (($generated@@683  (=> (and ($generated@@280 $generated@@641) ($generated@@645 $generated@@641)) (=> (and (and (=> $generated@@660 (and ($generated@@160 $generated@@661 $generated@@246) ($generated@@85 $generated@@661 $generated@@246 $generated@@641))) true) (and (=> $generated@@662 (and ($generated@@160 $generated@@663 $generated@@251) ($generated@@85 $generated@@663 $generated@@251 $generated@@641))) true)) (=> (and (and (and (=> $generated@@664 (and ($generated@@160 $generated@@665 $generated@@251) ($generated@@85 $generated@@665 $generated@@251 $generated@@641))) true) (and (=> $generated@@666 (and ($generated@@160 $generated@@667 $generated@@179) ($generated@@85 $generated@@667 $generated@@179 $generated@@641))) true)) (and (and (=> $generated@@655 (and ($generated@@160 $generated@@668 $generated@@179) ($generated@@85 $generated@@668 $generated@@179 $generated@@641))) true) (and (= 3 $generated@@669) (= (ControlFlow 0 15) 2)))) $generated@@670)))))
$generated@@683)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@87 (T@U) Int)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (Int) T@U)
(declare-fun $generated@@92 (T@T T@T) T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U) Int)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@T T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 () T@T)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@267 () Int)
(declare-fun $generated@@268 (Int) Int)
(declare-fun $generated@@269 (Int) Int)
(declare-fun $generated@@270 (Int) Bool)
(declare-fun $generated@@272 (T@U T@U T@U) T@U)
(declare-fun $generated@@273 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@328 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@340 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@352 (T@U T@U) T@U)
(declare-fun $generated@@353 () T@T)
(declare-fun $generated@@363 () T@U)
(declare-fun $generated@@366 () T@U)
(declare-fun $generated@@369 (T@U T@U) T@U)
(declare-fun $generated@@376 (Int) Bool)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@395 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@396 () T@U)
(declare-fun $generated@@397 (T@U T@U) Bool)
(declare-fun $generated@@398 (T@T) T@U)
(declare-fun $generated@@410 (T@U T@U T@U) Bool)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@419 (Int) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@T T@U) T@U)
(declare-fun $generated@@432 (T@T) T@U)
(declare-fun $generated@@433 (T@U) Int)
(declare-fun $generated@@434 (T@T) T@T)
(declare-fun $generated@@435 (T@T) T@T)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@445 () T@T)
(declare-fun $generated@@453 (T@U) Bool)
(declare-fun $generated@@467 (T@U) Int)
(declare-fun $generated@@468 (T@T) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 (T@T T@T) T@U)
(declare-fun $generated@@479 (T@T T@T) T@T)
(declare-fun $generated@@480 (T@T) T@T)
(declare-fun $generated@@481 (T@T) T@T)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@496 (T@T T@T) T@U)
(declare-fun $generated@@497 (T@T T@T) T@T)
(declare-fun $generated@@498 (T@T) T@T)
(declare-fun $generated@@499 (T@T) T@T)
(declare-fun $generated@@513 (T@U T@U) Bool)
(declare-fun $generated@@526 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@527 (T@U T@U T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@578 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@590 (Bool) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@643 (T@U T@U) T@U)
(declare-fun $generated@@651 (T@U T@U) T@U)
(declare-fun $generated@@665 (Int) T@U)
(declare-fun $generated@@676 (T@T) T@U)
(declare-fun $generated@@700 () T@T)
(declare-fun $generated@@716 (T@U) T@U)
(declare-fun $generated@@720 (T@U) T@U)
(declare-fun $generated@@726 (T@U) T@U)
(declare-fun $generated@@730 (T@U) T@U)
(declare-fun $generated@@736 (T@U) T@U)
(declare-fun $generated@@740 (T@U) T@U)
(declare-fun $generated@@746 (T@U) T@U)
(declare-fun $generated@@750 (T@U) T@U)
(declare-fun $generated@@759 (T@U) T@U)
(declare-fun $generated@@760 (T@U Int) T@U)
(declare-fun $generated@@769 (T@U) Int)
(declare-fun $generated@@771 (T@U) T@U)
(declare-fun $generated@@775 (T@U) T@U)
(declare-fun $generated@@779 (T@U) T@U)
(declare-fun $generated@@783 (T@U) T@U)
(declare-fun $generated@@788 (T@U) Int)
(declare-fun $generated@@790 (T@U) T@U)
(declare-fun $generated@@793 (T@U) T@U)
(declare-fun $generated@@806 () T@U)
(declare-fun $generated@@816 (T@U) Int)
(declare-fun $generated@@817 (T@U) Int)
(declare-fun $generated@@822 (T@U) T@U)
(declare-fun $generated@@966 (T@U) T@U)
(declare-fun $generated@@971 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@79) 6) (= (type $generated@@44) $generated@@79)) (= (type $generated@@45) $generated@@79)) (= (type $generated@@46) $generated@@79)) (= (type $generated@@47) $generated@@79)) (= (type $generated@@48) $generated@@79)) (= ($generated@@1 $generated@@80) 7)) (= (type $generated@@49) $generated@@80)) (= (type $generated@@50) $generated@@80)) (= (type $generated@@51) $generated@@80)) (= (type $generated@@52) $generated@@80)) (= (type $generated@@53) $generated@@80)) (= (type $generated@@54) $generated@@80)) (= (type $generated@@55) $generated@@80)) (= (type $generated@@56) $generated@@80)) (= (type $generated@@57) $generated@@80)) (= (type $generated@@58) $generated@@80)) (= (type $generated@@59) $generated@@80)) (forall (($generated@@85 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@85)) 8))) (forall (($generated@@86 T@T) ) (! (= ($generated@@82 ($generated@@81 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@81 $generated@@86))
))) (= (type $generated@@60) ($generated@@81 $generated@@4))) (= (type $generated@@61) $generated@@80)) (= (type $generated@@62) $generated@@80)) (= (type $generated@@63) $generated@@80)) (= (type $generated@@64) $generated@@80)) (= (type $generated@@65) $generated@@80)) (= ($generated@@1 $generated@@83) 9)) (= (type $generated@@66) $generated@@83)) (= (type $generated@@67) $generated@@80)) (= (type $generated@@68) $generated@@80)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@80)) (= ($generated@@1 $generated@@84) 10)) (= (type $generated@@72) $generated@@84)) (= (type $generated@@73) $generated@@84)) (= (type $generated@@74) $generated@@84)) (= (type $generated@@75) $generated@@84)) (= (type $generated@@76) $generated@@84)) (= (type $generated@@77) $generated@@84)) (= (type $generated@@78) $generated@@84)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78)
)
(assert (= ($generated@@87 $generated@@60) 0))
(assert (forall (($generated@@89 T@U) ) (! (= (type ($generated@@88 $generated@@89)) $generated@@80)
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (= ($generated@@88 $generated@@44) $generated@@49))
(assert (= ($generated@@88 $generated@@45) $generated@@50))
(assert (= ($generated@@88 $generated@@46) $generated@@51))
(assert (= ($generated@@88 $generated@@47) $generated@@52))
(assert (= ($generated@@88 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (= ($generated@@1 ($generated@@92 $generated@@101 $generated@@102)) 11)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@95 ($generated@@92 $generated@@103 $generated@@104)) $generated@@103)
 :pattern ( ($generated@@92 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@96 ($generated@@92 $generated@@105 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@92 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@96 (type $generated@@107))))
(= (type ($generated@@97 $generated@@107 $generated@@108)) $generated@@109))
 :pattern ( ($generated@@97 $generated@@107 $generated@@108))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 (type $generated@@112)))
(let (($generated@@114 (type $generated@@111)))
(= (type ($generated@@98 $generated@@110 $generated@@111 $generated@@112)) ($generated@@92 $generated@@114 $generated@@113))))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111 $generated@@112))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@96 (type $generated@@115))))
 (=> (= (type $generated@@117) $generated@@118) (= ($generated@@97 ($generated@@98 $generated@@115 $generated@@116 $generated@@117) $generated@@116) $generated@@117)))
 :weight 0
))) (and (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@121 $generated@@122) (= ($generated@@97 ($generated@@98 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@97 $generated@@120 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@97 $generated@@124 $generated@@126)))
 :weight 0
)))) (= ($generated@@1 $generated@@93) 12)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@82 (type $generated@@128))))
(= (type ($generated@@99 $generated@@127 $generated@@128)) $generated@@129))
 :pattern ( ($generated@@99 $generated@@127 $generated@@128))
))) (= ($generated@@1 $generated@@94) 13)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= (type ($generated@@100 $generated@@130 $generated@@131 $generated@@132)) $generated@@94)
 :pattern ( ($generated@@100 $generated@@130 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@82 (type $generated@@134))))
 (=> (= (type $generated@@135) $generated@@136) (= ($generated@@99 ($generated@@100 $generated@@133 $generated@@134 $generated@@135) $generated@@134) $generated@@135)))
 :weight 0
))) (and (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@139 $generated@@140) (= ($generated@@99 ($generated@@100 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@99 $generated@@138 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@99 $generated@@142 $generated@@144)))
 :weight 0
)))) (forall (($generated@@145 Int) ) (! (= (type ($generated@@91 $generated@@145)) $generated@@79)
 :pattern ( ($generated@@91 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@2) (= (type $generated@@147) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
 :pattern ( ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
)))
(assert  (and (and (forall (($generated@@153 T@U) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@79)
 :pattern ( ($generated@@149 $generated@@153))
)) (= (type $generated@@150) $generated@@93)) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@79)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@79) (= (type $generated@@156) $generated@@93)) (and (not (= $generated@@156 $generated@@150)) (= ($generated@@151 $generated@@156) ($generated@@149 $generated@@155)))) ($generated@@152 ($generated@@8 ($generated@@148 $generated@@156)) $generated@@46))
 :pattern ( ($generated@@148 $generated@@156) ($generated@@149 $generated@@155))
)))
(assert  (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@159) 14) (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@166 $generated@@167 $generated@@168)) 15))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@169 $generated@@170 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@172 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@161 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@164 ($generated@@161 $generated@@175 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@161 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@164 (type $generated@@178))))
(= (type ($generated@@157 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@157 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@184)))
(let (($generated@@188 (type $generated@@183)))
(= (type ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@161 $generated@@188 $generated@@187 $generated@@186)))))
 :pattern ( ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@164 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@157 ($generated@@165 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@157 ($generated@@165 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@157 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@157 ($generated@@165 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@157 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@157 ($generated@@165 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@157 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ) (! (= (type ($generated@@158 $generated@@212)) ($generated@@161 ($generated@@92 $generated@@93 $generated@@94) $generated@@159 $generated@@4))
 :pattern ( ($generated@@158 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@215) $generated@@159)) (= ($generated@@0 ($generated@@157 ($generated@@158 $generated@@213) $generated@@214 $generated@@215)) ($generated@@160 $generated@@215 $generated@@213)))
 :pattern ( ($generated@@157 ($generated@@158 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (= (type $generated@@217) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@218) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@216 $generated@@217 $generated@@218)) (forall (($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@93) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@217 $generated@@219) $generated@@60))) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@218 $generated@@219) $generated@@60)))
 :pattern ( ($generated@@99 ($generated@@97 $generated@@218 $generated@@219) $generated@@60))
)))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@220) $generated@@79) (= (type $generated@@221) $generated@@93)) (= (type $generated@@222) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@221 ($generated@@149 $generated@@220) $generated@@222)  (or (= $generated@@221 $generated@@150) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@222 $generated@@221) $generated@@60)))))
 :pattern ( ($generated@@90 $generated@@221 ($generated@@149 $generated@@220) $generated@@222))
)))
(assert (= (type $generated@@223) $generated@@79))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@2) (= (type $generated@@225) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@224 $generated@@223 $generated@@225))
 :pattern ( ($generated@@90 $generated@@224 $generated@@223 $generated@@225))
)))
(assert (= (type $generated@@226) $generated@@79))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@93) (= (type $generated@@228) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@227 $generated@@226 $generated@@228)  (or (= $generated@@227 $generated@@150) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@228 $generated@@227) $generated@@60)))))
 :pattern ( ($generated@@90 $generated@@227 $generated@@226 $generated@@228))
)))
(assert (= (type $generated@@229) $generated@@79))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@93) (= (type $generated@@231) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@230 $generated@@229 $generated@@231)  (or (= $generated@@230 $generated@@150) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@231 $generated@@230) $generated@@60)))))
 :pattern ( ($generated@@90 $generated@@230 $generated@@229 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@79))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@93) (= (type $generated@@234) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@233 $generated@@232 $generated@@234)  (or (= $generated@@233 $generated@@150) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@234 $generated@@233) $generated@@60)))))
 :pattern ( ($generated@@90 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@79) (= (type $generated@@237) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@238) $generated@@93)) (and (and ($generated@@235 $generated@@237) (and (not (= $generated@@238 $generated@@150)) (= ($generated@@151 $generated@@238) ($generated@@149 $generated@@236)))) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@237 $generated@@238) $generated@@60)))) ($generated@@90 ($generated@@8 ($generated@@148 $generated@@238)) $generated@@46 $generated@@237))
 :pattern ( ($generated@@148 $generated@@238) ($generated@@99 ($generated@@97 $generated@@237 $generated@@238) $generated@@60) ($generated@@149 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ) (!  (=> (= (type $generated@@239) $generated@@2) ($generated@@152 $generated@@239 ($generated@@91 0)))
 :pattern ( ($generated@@152 $generated@@239 ($generated@@91 0)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@79)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (= (type $generated@@242) $generated@@79) (= (type $generated@@243) $generated@@93)) (= (type $generated@@244) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@243 ($generated@@240 $generated@@242) $generated@@244) ($generated@@90 $generated@@243 ($generated@@149 $generated@@242) $generated@@244)))
 :pattern ( ($generated@@90 $generated@@243 ($generated@@240 $generated@@242) $generated@@244))
)))
(assert  (and (= ($generated@@1 $generated@@247) 16) (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@248 $generated@@249)) $generated@@79)
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@250) $generated@@79) (= (type $generated@@251) $generated@@79)) (= (type $generated@@252) $generated@@247)) ($generated@@152 $generated@@252 ($generated@@246 $generated@@250 $generated@@251))) ($generated@@245 $generated@@252))
 :pattern ( ($generated@@245 $generated@@252) ($generated@@152 $generated@@252 ($generated@@246 $generated@@250 $generated@@251)))
)))
(assert  (and (forall (($generated@@256 T@U) ) (! (= (type ($generated@@254 $generated@@256)) $generated@@159)
 :pattern ( ($generated@@254 $generated@@256))
)) (forall (($generated@@257 T@U) ) (! (= (type ($generated@@255 $generated@@257)) $generated@@159)
 :pattern ( ($generated@@255 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@258) $generated@@247) (= (type $generated@@259) $generated@@247)) true) (= ($generated@@253 $generated@@258 $generated@@259)  (and (= ($generated@@254 $generated@@258) ($generated@@254 $generated@@259)) (= ($generated@@255 $generated@@258) ($generated@@255 $generated@@259)))))
 :pattern ( ($generated@@253 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@260 $generated@@262)) $generated@@79)
 :pattern ( ($generated@@260 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) ($generated@@92 $generated@@159 $generated@@2)) (= (type $generated@@264) $generated@@79)) ($generated@@152 $generated@@263 ($generated@@260 $generated@@264))) ($generated@@261 $generated@@263))
 :pattern ( ($generated@@152 $generated@@263 ($generated@@260 $generated@@264)))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@93) (= ($generated@@152 $generated@@265 $generated@@229)  (or (= $generated@@265 $generated@@150) (= ($generated@@151 $generated@@265) $generated@@229))))
 :pattern ( ($generated@@152 $generated@@265 $generated@@229))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@93) (= ($generated@@152 $generated@@266 $generated@@232)  (or (= $generated@@266 $generated@@150) (= ($generated@@151 $generated@@266) $generated@@232))))
 :pattern ( ($generated@@152 $generated@@266 $generated@@232))
)))
(assert  (=> (<= 1 $generated@@267) (forall (($generated@@271 Int) ) (!  (=> (or ($generated@@270 ($generated@@269 $generated@@271)) (and (not (= 1 $generated@@267)) (<= ($generated@@269 0) $generated@@271))) (= ($generated@@268 ($generated@@269 $generated@@271)) ($generated@@269 (- $generated@@271 7))))
 :weight 3
 :pattern ( ($generated@@268 ($generated@@269 $generated@@271)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@278 $generated@@279)) 17)) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@280 $generated@@281)) $generated@@280)
 :pattern ( ($generated@@274 $generated@@280 $generated@@281))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@282 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@274 $generated@@282 $generated@@283))
))) (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@276 (type $generated@@284))))
(= (type ($generated@@272 $generated@@284 $generated@@285 $generated@@286)) $generated@@287))
 :pattern ( ($generated@@272 $generated@@284 $generated@@285 $generated@@286))
))) (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (! (let (($generated@@292 (type $generated@@291)))
(let (($generated@@293 (type $generated@@289)))
(= (type ($generated@@277 $generated@@288 $generated@@289 $generated@@290 $generated@@291)) ($generated@@274 $generated@@293 $generated@@292))))
 :pattern ( ($generated@@277 $generated@@288 $generated@@289 $generated@@290 $generated@@291))
))) (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@276 (type $generated@@294))))
 (=> (= (type $generated@@297) $generated@@298) (= ($generated@@272 ($generated@@277 $generated@@294 $generated@@295 $generated@@296 $generated@@297) $generated@@295 $generated@@296) $generated@@297)))
 :weight 0
))) (and (and (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (or (= $generated@@301 $generated@@303) (= ($generated@@272 ($generated@@277 $generated@@300 $generated@@301 $generated@@302 $generated@@299) $generated@@303 $generated@@304) ($generated@@272 $generated@@300 $generated@@303 $generated@@304)))
 :weight 0
)) (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (or (= $generated@@308 $generated@@310) (= ($generated@@272 ($generated@@277 $generated@@306 $generated@@307 $generated@@308 $generated@@305) $generated@@309 $generated@@310) ($generated@@272 $generated@@306 $generated@@309 $generated@@310)))
 :weight 0
))) (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (or true (= ($generated@@272 ($generated@@277 $generated@@312 $generated@@313 $generated@@314 $generated@@311) $generated@@315 $generated@@316) ($generated@@272 $generated@@312 $generated@@315 $generated@@316)))
 :weight 0
)))) (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 Bool) ) (! (= (type ($generated@@273 $generated@@317 $generated@@318 $generated@@319 $generated@@320)) ($generated@@274 $generated@@93 $generated@@4))
 :pattern ( ($generated@@273 $generated@@317 $generated@@318 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 Bool) ($generated@@325 T@U) ($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@82 (type $generated@@326))))
 (=> (and (and (and (and (= (type $generated@@321) $generated@@93) (= (type $generated@@322) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@323) ($generated@@81 $generated@@4))) (= (type $generated@@325) $generated@@93)) (= (type $generated@@326) ($generated@@81 $generated@@327))) (= ($generated@@0 ($generated@@272 ($generated@@273 $generated@@321 $generated@@322 $generated@@323 $generated@@324) $generated@@325 $generated@@326))  (=> (and (not (= $generated@@325 $generated@@321)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@322 $generated@@325) $generated@@323))) $generated@@324))))
 :pattern ( ($generated@@272 ($generated@@273 $generated@@321 $generated@@322 $generated@@323 $generated@@324) $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 Bool) ) (! (= (type ($generated@@328 $generated@@329 $generated@@330 $generated@@331 $generated@@332)) ($generated@@274 $generated@@93 $generated@@4))
 :pattern ( ($generated@@328 $generated@@329 $generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 Bool) ($generated@@337 T@U) ($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@82 (type $generated@@338))))
 (=> (and (and (and (and (= (type $generated@@333) $generated@@93) (= (type $generated@@334) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@335) ($generated@@81 $generated@@4))) (= (type $generated@@337) $generated@@93)) (= (type $generated@@338) ($generated@@81 $generated@@339))) (= ($generated@@0 ($generated@@272 ($generated@@328 $generated@@333 $generated@@334 $generated@@335 $generated@@336) $generated@@337 $generated@@338))  (=> (and (not (= $generated@@337 $generated@@333)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@334 $generated@@337) $generated@@335))) $generated@@336))))
 :pattern ( ($generated@@272 ($generated@@328 $generated@@333 $generated@@334 $generated@@335 $generated@@336) $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 Bool) ) (! (= (type ($generated@@340 $generated@@341 $generated@@342 $generated@@343 $generated@@344)) ($generated@@274 $generated@@93 $generated@@4))
 :pattern ( ($generated@@340 $generated@@341 $generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 Bool) ($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@82 (type $generated@@350))))
 (=> (and (and (and (and (= (type $generated@@345) $generated@@93) (= (type $generated@@346) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@347) ($generated@@81 $generated@@4))) (= (type $generated@@349) $generated@@93)) (= (type $generated@@350) ($generated@@81 $generated@@351))) (= ($generated@@0 ($generated@@272 ($generated@@340 $generated@@345 $generated@@346 $generated@@347 $generated@@348) $generated@@349 $generated@@350))  (=> (and (not (= $generated@@349 $generated@@345)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@346 $generated@@349) $generated@@347))) $generated@@348))))
 :pattern ( ($generated@@272 ($generated@@340 $generated@@345 $generated@@346 $generated@@347 $generated@@348) $generated@@349 $generated@@350))
)))
(assert  (and (= ($generated@@1 $generated@@353) 18) (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (= (type ($generated@@352 $generated@@354 $generated@@355)) $generated@@79)
 :pattern ( ($generated@@352 $generated@@354 $generated@@355))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@356) $generated@@353) (= (type $generated@@357) $generated@@79)) (= (type $generated@@358) $generated@@79)) (= (type $generated@@359) $generated@@79)) (= (type $generated@@360) $generated@@79)) (and (and ($generated@@152 $generated@@356 ($generated@@352 $generated@@357 $generated@@358)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@159) ($generated@@160 $generated@@361 $generated@@359)) ($generated@@160 $generated@@361 $generated@@357))
 :pattern ( ($generated@@160 $generated@@361 $generated@@359))
 :pattern ( ($generated@@160 $generated@@361 $generated@@357))
))) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@159) ($generated@@160 $generated@@362 $generated@@358)) ($generated@@160 $generated@@362 $generated@@360))
 :pattern ( ($generated@@160 $generated@@362 $generated@@358))
 :pattern ( ($generated@@160 $generated@@362 $generated@@360))
)))) ($generated@@152 $generated@@356 ($generated@@352 $generated@@359 $generated@@360)))
 :pattern ( ($generated@@152 $generated@@356 ($generated@@352 $generated@@357 $generated@@358)) ($generated@@152 $generated@@356 ($generated@@352 $generated@@359 $generated@@360)))
)))
(assert (= (type $generated@@363) $generated@@79))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@93) (= (type $generated@@365) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@364 $generated@@363 $generated@@365) ($generated@@90 $generated@@364 $generated@@229 $generated@@365)))
 :pattern ( ($generated@@90 $generated@@364 $generated@@363 $generated@@365))
)))
(assert (= (type $generated@@366) $generated@@79))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@93) (= (type $generated@@368) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@367 $generated@@366 $generated@@368) ($generated@@90 $generated@@367 $generated@@232 $generated@@368)))
 :pattern ( ($generated@@90 $generated@@367 $generated@@366 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@370 $generated@@371)) $generated@@247)
 :pattern ( ($generated@@369 $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (and (= (type $generated@@372) $generated@@79) (= (type $generated@@373) $generated@@79)) (= (type $generated@@374) $generated@@159)) (= (type $generated@@375) $generated@@159)) (= ($generated@@152 ($generated@@369 $generated@@374 $generated@@375) ($generated@@246 $generated@@372 $generated@@373))  (and ($generated@@160 $generated@@374 $generated@@372) ($generated@@160 $generated@@375 $generated@@373))))
 :pattern ( ($generated@@152 ($generated@@369 $generated@@374 $generated@@375) ($generated@@246 $generated@@372 $generated@@373)))
)))
(assert (forall (($generated@@377 Int) ) (!  (=> (<= ($generated@@269 0) $generated@@377) (= ($generated@@376 $generated@@377) true))
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@247) (= (type $generated@@379) $generated@@247)) (= ($generated@@253 $generated@@378 $generated@@379) (= $generated@@378 $generated@@379)))
 :pattern ( ($generated@@253 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (= (type ($generated@@380 $generated@@381)) $generated@@79)
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@92 $generated@@159 $generated@@4)) (= (type $generated@@383) $generated@@79)) (= ($generated@@152 $generated@@382 ($generated@@380 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@159) ($generated@@0 ($generated@@97 $generated@@382 $generated@@384))) ($generated@@160 $generated@@384 $generated@@383))
 :pattern ( ($generated@@97 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@152 $generated@@382 ($generated@@380 $generated@@383)))
)))
(assert (forall (($generated@@386 T@U) ) (! (= (type ($generated@@385 $generated@@386)) $generated@@79)
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@92 $generated@@159 $generated@@4)) (= (type $generated@@388) $generated@@79)) (= ($generated@@152 $generated@@387 ($generated@@385 $generated@@388)) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@159) ($generated@@0 ($generated@@97 $generated@@387 $generated@@389))) ($generated@@160 $generated@@389 $generated@@388))
 :pattern ( ($generated@@97 $generated@@387 $generated@@389))
))))
 :pattern ( ($generated@@152 $generated@@387 ($generated@@385 $generated@@388)))
)))
(assert (forall (($generated@@390 Int) ) (! (= ($generated@@269 $generated@@390) $generated@@390)
 :pattern ( ($generated@@269 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(= (type ($generated@@391 $generated@@392)) $generated@@393))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (= ($generated@@391 $generated@@394) $generated@@394)
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert  (and (and (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@395 $generated@@399 $generated@@400 $generated@@401 $generated@@402 $generated@@403)) ($generated@@92 $generated@@159 $generated@@4))
 :pattern ( ($generated@@395 $generated@@399 $generated@@400 $generated@@401 $generated@@402 $generated@@403))
)) (= (type $generated@@396) ($generated@@92 $generated@@93 $generated@@94))) (forall (($generated@@404 T@T) ) (! (= (type ($generated@@398 $generated@@404)) ($generated@@92 $generated@@404 $generated@@4))
 :pattern ( ($generated@@398 $generated@@404))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@405) $generated@@79) (= (type $generated@@406) $generated@@79)) (= (type $generated@@407) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@408) $generated@@353)) (= (type $generated@@409) $generated@@159)) (and ($generated@@235 $generated@@407) (and ($generated@@160 $generated@@409 $generated@@405) ($generated@@152 $generated@@408 ($generated@@352 $generated@@405 $generated@@406))))) (= ($generated@@397 ($generated@@395 $generated@@405 $generated@@406 $generated@@396 $generated@@408 $generated@@409) ($generated@@398 $generated@@159)) ($generated@@397 ($generated@@395 $generated@@405 $generated@@406 $generated@@407 $generated@@408 $generated@@409) ($generated@@398 $generated@@159))))
 :pattern ( ($generated@@395 $generated@@405 $generated@@406 $generated@@396 $generated@@408 $generated@@409) ($generated@@235 $generated@@407))
 :pattern ( ($generated@@395 $generated@@405 $generated@@406 $generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@411) $generated@@79) (= (type $generated@@412) $generated@@79)) (= (type $generated@@413) $generated@@159)) (= (type $generated@@414) $generated@@159)) (= (type $generated@@415) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@235 $generated@@415)) (= ($generated@@90 ($generated@@369 $generated@@413 $generated@@414) ($generated@@246 $generated@@411 $generated@@412) $generated@@415)  (and ($generated@@410 $generated@@413 $generated@@411 $generated@@415) ($generated@@410 $generated@@414 $generated@@412 $generated@@415))))
 :pattern ( ($generated@@90 ($generated@@369 $generated@@413 $generated@@414) ($generated@@246 $generated@@411 $generated@@412) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ) (! (= (type ($generated@@416 $generated@@417)) $generated@@83)
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@247) (= ($generated@@245 $generated@@418) (= ($generated@@416 $generated@@418) $generated@@66)))
 :pattern ( ($generated@@245 $generated@@418))
)))
(assert  (and (and (forall (($generated@@422 Int) ) (! (= (type ($generated@@419 $generated@@422)) ($generated@@161 ($generated@@92 $generated@@93 $generated@@94) $generated@@159 $generated@@159))
 :pattern ( ($generated@@419 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (= (type ($generated@@420 $generated@@423)) $generated@@159)
 :pattern ( ($generated@@420 $generated@@423))
))) (forall (($generated@@424 T@T) ($generated@@425 T@U) ) (! (= (type ($generated@@421 $generated@@424 $generated@@425)) $generated@@424)
 :pattern ( ($generated@@421 $generated@@424 $generated@@425))
))))
(assert (forall (($generated@@426 Int) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@428) $generated@@159)) (= ($generated@@157 ($generated@@419 $generated@@426) $generated@@427 $generated@@428) ($generated@@420 ($generated@@8 (+ ($generated ($generated@@421 $generated@@2 $generated@@428)) $generated@@426)))))
 :pattern ( ($generated@@157 ($generated@@419 $generated@@426) $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@247) ($generated@@245 $generated@@429)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@159) (= (type $generated@@431) $generated@@159)) (= $generated@@429 ($generated@@369 $generated@@430 $generated@@431)))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
)))
 :pattern ( ($generated@@245 $generated@@429))
)))
(assert  (and (and (forall (($generated@@436 T@T) ) (= ($generated@@1 ($generated@@434 $generated@@436)) 19)) (forall (($generated@@437 T@T) ) (! (= ($generated@@435 ($generated@@434 $generated@@437)) $generated@@437)
 :pattern ( ($generated@@434 $generated@@437))
))) (forall (($generated@@438 T@T) ) (! (= (type ($generated@@432 $generated@@438)) ($generated@@434 $generated@@438))
 :pattern ( ($generated@@432 $generated@@438))
))))
(assert (forall (($generated@@439 T@T) ) (! (= ($generated@@433 ($generated@@432 $generated@@439)) 0)
 :pattern ( ($generated@@432 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@92 $generated@@159 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@92 $generated@@93 $generated@@4)) (= (type $generated@@443) $generated@@159)) (= ($generated@@0 ($generated@@97 ($generated@@440 $generated@@442) $generated@@443)) ($generated@@0 ($generated@@97 $generated@@442 ($generated@@421 $generated@@93 $generated@@443)))))
 :pattern ( ($generated@@97 ($generated@@440 $generated@@442) $generated@@443))
)))
(assert  (and (= ($generated@@1 $generated@@445) 20) (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@96 (type $generated@@446))))
(= (type ($generated@@444 $generated@@446 $generated@@447)) $generated@@448))
 :pattern ( ($generated@@444 $generated@@446 $generated@@447))
))))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@96 (type $generated@@449))))
 (=> (and (= (type $generated@@449) ($generated@@92 $generated@@445 $generated@@451)) (= (type $generated@@450) $generated@@445)) (= ($generated@@444 $generated@@449 $generated@@450) ($generated@@97 $generated@@449 $generated@@450))))
 :pattern ( ($generated@@444 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@2) (= ($generated@@152 $generated@@452 $generated@@223) (<= ($generated@@269 0) ($generated $generated@@452))))
 :pattern ( ($generated@@152 $generated@@452 $generated@@223))
)))
(assert ($generated@@453 $generated@@60))
(assert ($generated@@235 $generated@@396))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@79) (= (type $generated@@455) $generated@@93)) (= ($generated@@152 $generated@@455 ($generated@@240 $generated@@454))  (and ($generated@@152 $generated@@455 ($generated@@149 $generated@@454)) (not (= $generated@@455 $generated@@150)))))
 :pattern ( ($generated@@152 $generated@@455 ($generated@@240 $generated@@454)))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@79) (= (type $generated@@458) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@410 ($generated@@420 $generated@@456) $generated@@457 $generated@@458) ($generated@@90 $generated@@456 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@410 ($generated@@420 $generated@@456) $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@459) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@460) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@461) $generated@@159)) (= (type $generated@@462) $generated@@79)) ($generated@@216 $generated@@459 $generated@@460)) ($generated@@410 $generated@@461 $generated@@462 $generated@@459)) ($generated@@410 $generated@@461 $generated@@462 $generated@@460))
 :pattern ( ($generated@@216 $generated@@459 $generated@@460) ($generated@@410 $generated@@461 $generated@@462 $generated@@459))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@463) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@464) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@466) $generated@@79)) ($generated@@216 $generated@@463 $generated@@464)) ($generated@@90 $generated@@465 $generated@@466 $generated@@463)) ($generated@@90 $generated@@465 $generated@@466 $generated@@464))
 :pattern ( ($generated@@216 $generated@@463 $generated@@464) ($generated@@90 $generated@@465 $generated@@466 $generated@@463))
)))
(assert (forall (($generated@@469 T@T) ) (! (= (type ($generated@@468 $generated@@469)) ($generated@@92 $generated@@469 $generated@@2))
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@95 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@92 $generated@@471 $generated@@2)) (and (= (= ($generated@@467 $generated@@470) 0) (= $generated@@470 ($generated@@468 $generated@@471))) (=> (not (= ($generated@@467 $generated@@470) 0)) (exists (($generated@@472 T@U) ) (!  (and (= (type $generated@@472) $generated@@471) (< 0 ($generated ($generated@@97 $generated@@470 $generated@@472))))
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@467 $generated@@470))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@84)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@79) (and (= ($generated@@88 ($generated@@149 $generated@@475)) $generated@@63) (= ($generated@@473 ($generated@@149 $generated@@475)) $generated@@74)))
 :pattern ( ($generated@@149 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@79) (and (= ($generated@@88 ($generated@@240 $generated@@476)) $generated@@64) (= ($generated@@473 ($generated@@240 $generated@@476)) $generated@@74)))
 :pattern ( ($generated@@240 $generated@@476))
)))
(assert  (and (and (and (and (forall (($generated@@482 T@T) ($generated@@483 T@T) ) (= ($generated@@1 ($generated@@479 $generated@@482 $generated@@483)) 21)) (forall (($generated@@484 T@T) ($generated@@485 T@T) ) (! (= ($generated@@480 ($generated@@479 $generated@@484 $generated@@485)) $generated@@484)
 :pattern ( ($generated@@479 $generated@@484 $generated@@485))
))) (forall (($generated@@486 T@T) ($generated@@487 T@T) ) (! (= ($generated@@481 ($generated@@479 $generated@@486 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@479 $generated@@486 $generated@@487))
))) (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@480 (type $generated@@488))))
(= (type ($generated@@477 $generated@@488)) ($generated@@92 $generated@@489 $generated@@4)))
 :pattern ( ($generated@@477 $generated@@488))
))) (forall (($generated@@490 T@T) ($generated@@491 T@T) ) (! (= (type ($generated@@478 $generated@@490 $generated@@491)) ($generated@@479 $generated@@490 $generated@@491))
 :pattern ( ($generated@@478 $generated@@490 $generated@@491))
))))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@T) ) (! (let (($generated@@494 (type $generated@@492)))
 (not ($generated@@0 ($generated@@97 ($generated@@477 ($generated@@478 $generated@@494 $generated@@493)) $generated@@492))))
 :pattern ( (let (($generated@@494 (type $generated@@492)))
($generated@@97 ($generated@@477 ($generated@@478 $generated@@494 $generated@@493)) $generated@@492)))
)))
(assert  (and (and (and (and (forall (($generated@@500 T@T) ($generated@@501 T@T) ) (= ($generated@@1 ($generated@@497 $generated@@500 $generated@@501)) 22)) (forall (($generated@@502 T@T) ($generated@@503 T@T) ) (! (= ($generated@@498 ($generated@@497 $generated@@502 $generated@@503)) $generated@@502)
 :pattern ( ($generated@@497 $generated@@502 $generated@@503))
))) (forall (($generated@@504 T@T) ($generated@@505 T@T) ) (! (= ($generated@@499 ($generated@@497 $generated@@504 $generated@@505)) $generated@@505)
 :pattern ( ($generated@@497 $generated@@504 $generated@@505))
))) (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@498 (type $generated@@506))))
(= (type ($generated@@495 $generated@@506)) ($generated@@92 $generated@@507 $generated@@4)))
 :pattern ( ($generated@@495 $generated@@506))
))) (forall (($generated@@508 T@T) ($generated@@509 T@T) ) (! (= (type ($generated@@496 $generated@@508 $generated@@509)) ($generated@@497 $generated@@508 $generated@@509))
 :pattern ( ($generated@@496 $generated@@508 $generated@@509))
))))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@T) ) (! (let (($generated@@512 (type $generated@@510)))
 (not ($generated@@0 ($generated@@97 ($generated@@495 ($generated@@496 $generated@@512 $generated@@511)) $generated@@510))))
 :pattern ( (let (($generated@@512 (type $generated@@510)))
($generated@@97 ($generated@@495 ($generated@@496 $generated@@512 $generated@@511)) $generated@@510)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@515) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@513 $generated@@514 $generated@@515)) (and ($generated@@216 $generated@@514 $generated@@515) (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@82 (type $generated@@517))))
 (=> (and (and (= (type $generated@@516) $generated@@93) (= (type $generated@@517) ($generated@@81 $generated@@518))) (not ($generated@@453 $generated@@517))) (= ($generated@@99 ($generated@@97 $generated@@514 $generated@@516) $generated@@517) ($generated@@99 ($generated@@97 $generated@@515 $generated@@516) $generated@@517))))
 :pattern ( ($generated@@99 ($generated@@97 $generated@@515 $generated@@516) $generated@@517))
))))
 :pattern ( ($generated@@513 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@95 (type $generated@@519))))
 (=> (and (= (type $generated@@519) ($generated@@92 $generated@@521 $generated@@4)) (= (type $generated@@520) ($generated@@92 $generated@@521 $generated@@4))) (= ($generated@@397 $generated@@519 $generated@@520) (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@521) (= ($generated@@0 ($generated@@97 $generated@@519 $generated@@522)) ($generated@@0 ($generated@@97 $generated@@520 $generated@@522))))
 :pattern ( ($generated@@97 $generated@@519 $generated@@522))
 :pattern ( ($generated@@97 $generated@@520 $generated@@522))
)))))
 :pattern ( ($generated@@397 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@95 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@92 $generated@@524 $generated@@2)) (= ($generated@@261 $generated@@523) (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@524) (and (<= 0 ($generated ($generated@@97 $generated@@523 $generated@@525))) (<= ($generated ($generated@@97 $generated@@523 $generated@@525)) ($generated@@467 $generated@@523))))
 :pattern ( ($generated@@97 $generated@@523 $generated@@525))
)))))
 :pattern ( ($generated@@261 $generated@@523))
)))
(assert  (and (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (! (= (type ($generated@@526 $generated@@528 $generated@@529 $generated@@530 $generated@@531 $generated@@532)) $generated@@159)
 :pattern ( ($generated@@526 $generated@@528 $generated@@529 $generated@@530 $generated@@531 $generated@@532))
)) (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (! (= (type ($generated@@527 $generated@@533 $generated@@534 $generated@@535)) $generated@@353)
 :pattern ( ($generated@@527 $generated@@533 $generated@@534 $generated@@535))
))))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@536) $generated@@79) (= (type $generated@@537) $generated@@79)) (= (type $generated@@538) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@539) ($generated@@161 ($generated@@92 $generated@@93 $generated@@94) $generated@@159 $generated@@159))) (= (type $generated@@540) ($generated@@161 ($generated@@92 $generated@@93 $generated@@94) $generated@@159 $generated@@4))) (= (type $generated@@541) ($generated@@161 ($generated@@92 $generated@@93 $generated@@94) $generated@@159 ($generated@@92 $generated@@159 $generated@@4)))) (= (type $generated@@542) $generated@@159)) (= ($generated@@526 $generated@@536 $generated@@537 $generated@@538 ($generated@@527 $generated@@539 $generated@@540 $generated@@541) $generated@@542) ($generated@@157 $generated@@539 $generated@@538 $generated@@542)))
 :pattern ( ($generated@@526 $generated@@536 $generated@@537 $generated@@538 ($generated@@527 $generated@@539 $generated@@540 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@159) ($generated@@160 $generated@@543 $generated@@223)) (and (= ($generated@@420 ($generated@@421 $generated@@2 $generated@@543)) $generated@@543) ($generated@@152 ($generated@@421 $generated@@2 $generated@@543) $generated@@223)))
 :pattern ( ($generated@@160 $generated@@543 $generated@@223))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@159) ($generated@@160 $generated@@544 $generated@@226)) (and (= ($generated@@420 ($generated@@421 $generated@@93 $generated@@544)) $generated@@544) ($generated@@152 ($generated@@421 $generated@@93 $generated@@544) $generated@@226)))
 :pattern ( ($generated@@160 $generated@@544 $generated@@226))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@159) ($generated@@160 $generated@@545 $generated@@229)) (and (= ($generated@@420 ($generated@@421 $generated@@93 $generated@@545)) $generated@@545) ($generated@@152 ($generated@@421 $generated@@93 $generated@@545) $generated@@229)))
 :pattern ( ($generated@@160 $generated@@545 $generated@@229))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@159) ($generated@@160 $generated@@546 $generated@@363)) (and (= ($generated@@420 ($generated@@421 $generated@@93 $generated@@546)) $generated@@546) ($generated@@152 ($generated@@421 $generated@@93 $generated@@546) $generated@@363)))
 :pattern ( ($generated@@160 $generated@@546 $generated@@363))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@159) ($generated@@160 $generated@@547 $generated@@232)) (and (= ($generated@@420 ($generated@@421 $generated@@93 $generated@@547)) $generated@@547) ($generated@@152 ($generated@@421 $generated@@93 $generated@@547) $generated@@232)))
 :pattern ( ($generated@@160 $generated@@547 $generated@@232))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@159) ($generated@@160 $generated@@548 $generated@@366)) (and (= ($generated@@420 ($generated@@421 $generated@@93 $generated@@548)) $generated@@548) ($generated@@152 ($generated@@421 $generated@@93 $generated@@548) $generated@@366)))
 :pattern ( ($generated@@160 $generated@@548 $generated@@366))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@79) (= (type $generated@@550) $generated@@93)) (= ($generated@@152 $generated@@550 ($generated@@149 $generated@@549))  (or (= $generated@@550 $generated@@150) (= ($generated@@151 $generated@@550) ($generated@@149 $generated@@549)))))
 :pattern ( ($generated@@152 $generated@@550 ($generated@@149 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@93) (= ($generated@@152 $generated@@551 $generated@@363)  (and ($generated@@152 $generated@@551 $generated@@229) (not (= $generated@@551 $generated@@150)))))
 :pattern ( ($generated@@152 $generated@@551 $generated@@363))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@93) (= ($generated@@152 $generated@@552 $generated@@366)  (and ($generated@@152 $generated@@552 $generated@@232) (not (= $generated@@552 $generated@@150)))))
 :pattern ( ($generated@@152 $generated@@552 $generated@@366))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@481 (type $generated@@553))))
(let (($generated@@555 ($generated@@480 (type $generated@@553))))
 (=> (= (type $generated@@553) ($generated@@479 $generated@@555 $generated@@554)) (or (= $generated@@553 ($generated@@478 $generated@@555 $generated@@554)) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@555) ($generated@@0 ($generated@@97 ($generated@@477 $generated@@553) $generated@@556)))
 :no-pattern (type $generated@@556)
 :no-pattern ($generated $generated@@556)
 :no-pattern ($generated@@0 $generated@@556)
))))))
 :pattern ( ($generated@@477 $generated@@553))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@481 (type $generated@@558))))
(= (type ($generated@@557 $generated@@558)) ($generated@@92 $generated@@559 $generated@@4)))
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@481 (type $generated@@560))))
(let (($generated@@562 ($generated@@480 (type $generated@@560))))
 (=> (= (type $generated@@560) ($generated@@479 $generated@@562 $generated@@561)) (or (= $generated@@560 ($generated@@478 $generated@@562 $generated@@561)) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@561) ($generated@@0 ($generated@@97 ($generated@@557 $generated@@560) $generated@@563)))
 :no-pattern (type $generated@@563)
 :no-pattern ($generated $generated@@563)
 :no-pattern ($generated@@0 $generated@@563)
))))))
 :pattern ( ($generated@@557 $generated@@560))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@499 (type $generated@@564))))
(let (($generated@@566 ($generated@@498 (type $generated@@564))))
 (=> (= (type $generated@@564) ($generated@@497 $generated@@566 $generated@@565)) (or (= $generated@@564 ($generated@@496 $generated@@566 $generated@@565)) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@566) ($generated@@0 ($generated@@97 ($generated@@495 $generated@@564) $generated@@567)))
 :no-pattern (type $generated@@567)
 :no-pattern ($generated $generated@@567)
 :no-pattern ($generated@@0 $generated@@567)
))))))
 :pattern ( ($generated@@495 $generated@@564))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@499 (type $generated@@569))))
(= (type ($generated@@568 $generated@@569)) ($generated@@92 $generated@@570 $generated@@4)))
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@499 (type $generated@@571))))
(let (($generated@@573 ($generated@@498 (type $generated@@571))))
 (=> (= (type $generated@@571) ($generated@@497 $generated@@573 $generated@@572)) (or (= $generated@@571 ($generated@@496 $generated@@573 $generated@@572)) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@572) ($generated@@0 ($generated@@97 ($generated@@568 $generated@@571) $generated@@574)))
 :no-pattern (type $generated@@574)
 :no-pattern ($generated $generated@@574)
 :no-pattern ($generated@@0 $generated@@574)
))))))
 :pattern ( ($generated@@568 $generated@@571))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@92 $generated@@159 $generated@@2)) (= (type $generated@@576) $generated@@79)) (= ($generated@@152 $generated@@575 ($generated@@260 $generated@@576)) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@159) (< 0 ($generated ($generated@@97 $generated@@575 $generated@@577)))) ($generated@@160 $generated@@577 $generated@@576))
 :pattern ( ($generated@@97 $generated@@575 $generated@@577))
))))
 :pattern ( ($generated@@152 $generated@@575 ($generated@@260 $generated@@576)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@579) $generated@@353) (= (type $generated@@580) $generated@@79)) (= (type $generated@@581) $generated@@79)) (= (type $generated@@582) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@235 $generated@@582) ($generated@@90 $generated@@579 ($generated@@352 $generated@@580 $generated@@581) $generated@@582))) (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@159) (=> (and ($generated@@410 $generated@@583 $generated@@580 $generated@@582) ($generated@@578 $generated@@580 $generated@@581 $generated@@582 $generated@@579 $generated@@583)) ($generated@@410 ($generated@@526 $generated@@580 $generated@@581 $generated@@582 $generated@@579 $generated@@583) $generated@@581 $generated@@582)))
 :pattern ( ($generated@@526 $generated@@580 $generated@@581 $generated@@582 $generated@@579 $generated@@583))
)))
 :pattern ( ($generated@@90 $generated@@579 ($generated@@352 $generated@@580 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@584) $generated@@353) (= (type $generated@@585) $generated@@79)) (= (type $generated@@586) $generated@@79)) (= (type $generated@@587) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@235 $generated@@587)) (= ($generated@@90 $generated@@584 ($generated@@352 $generated@@585 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@159) (=> (and (and ($generated@@160 $generated@@588 $generated@@585) ($generated@@410 $generated@@588 $generated@@585 $generated@@587)) ($generated@@578 $generated@@585 $generated@@586 $generated@@587 $generated@@584 $generated@@588)) (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@93) (=> (and (not (= $generated@@589 $generated@@150)) ($generated@@0 ($generated@@97 ($generated@@395 $generated@@585 $generated@@586 $generated@@587 $generated@@584 $generated@@588) ($generated@@420 $generated@@589)))) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@587 $generated@@589) $generated@@60))))
 :pattern ( ($generated@@97 ($generated@@395 $generated@@585 $generated@@586 $generated@@587 $generated@@584 $generated@@588) ($generated@@420 $generated@@589)))
))))
 :pattern ( ($generated@@526 $generated@@585 $generated@@586 $generated@@587 $generated@@584 $generated@@588))
 :pattern ( ($generated@@395 $generated@@585 $generated@@586 $generated@@587 $generated@@584 $generated@@588))
))))
 :pattern ( ($generated@@90 $generated@@584 ($generated@@352 $generated@@585 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@591 Bool) ) (! (= (type ($generated@@590 $generated@@591)) ($generated@@92 $generated@@93 $generated@@4))
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 Bool) ($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@93) (= ($generated@@0 ($generated@@97 ($generated@@590 $generated@@592) $generated@@593)) $generated@@592))
 :pattern ( ($generated@@97 ($generated@@590 $generated@@592) $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) ($generated@@92 $generated@@445 $generated@@353))
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@353) (= (type $generated@@597) $generated@@445)) (= ($generated@@97 ($generated@@594 $generated@@596) $generated@@597) $generated@@596))
 :pattern ( ($generated@@97 ($generated@@594 $generated@@596) $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@92 $generated@@159 $generated@@4)) (= (type $generated@@599) $generated@@79)) (= (type $generated@@600) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@598 ($generated@@380 $generated@@599) $generated@@600) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@159) ($generated@@0 ($generated@@97 $generated@@598 $generated@@601))) ($generated@@410 $generated@@601 $generated@@599 $generated@@600))
 :pattern ( ($generated@@97 $generated@@598 $generated@@601))
))))
 :pattern ( ($generated@@90 $generated@@598 ($generated@@380 $generated@@599) $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@92 $generated@@159 $generated@@4)) (= (type $generated@@603) $generated@@79)) (= (type $generated@@604) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@602 ($generated@@385 $generated@@603) $generated@@604) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@159) ($generated@@0 ($generated@@97 $generated@@602 $generated@@605))) ($generated@@410 $generated@@605 $generated@@603 $generated@@604))
 :pattern ( ($generated@@97 $generated@@602 $generated@@605))
))))
 :pattern ( ($generated@@90 $generated@@602 ($generated@@385 $generated@@603) $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
(= ($generated ($generated@@97 ($generated@@468 $generated@@607) $generated@@606)) 0))
 :pattern ( (let (($generated@@607 (type $generated@@606)))
($generated@@97 ($generated@@468 $generated@@607) $generated@@606)))
)))
(assert  (=> (<= 1 $generated@@267) (forall (($generated@@608 Int) ) (!  (=> (or ($generated@@270 $generated@@608) (and (not (= 1 $generated@@267)) (<= ($generated@@269 0) $generated@@608))) true)
 :pattern ( ($generated@@268 $generated@@608))
))))
(assert  (and (forall (($generated@@611 T@U) ) (! (= (type ($generated@@609 $generated@@611)) ($generated@@92 $generated@@159 $generated@@4))
 :pattern ( ($generated@@609 $generated@@611))
)) (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@481 (type $generated@@612))))
(let (($generated@@614 ($generated@@480 (type $generated@@612))))
(= (type ($generated@@610 $generated@@612)) ($generated@@92 $generated@@614 $generated@@613))))
 :pattern ( ($generated@@610 $generated@@612))
))))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@479 $generated@@159 $generated@@159)) (= (type $generated@@616) $generated@@159)) (= ($generated@@0 ($generated@@97 ($generated@@609 $generated@@615) $generated@@616))  (and ($generated@@0 ($generated@@97 ($generated@@477 $generated@@615) ($generated@@254 ($generated@@421 $generated@@247 $generated@@616)))) (= ($generated@@97 ($generated@@610 $generated@@615) ($generated@@254 ($generated@@421 $generated@@247 $generated@@616))) ($generated@@255 ($generated@@421 $generated@@247 $generated@@616))))))
 :pattern ( ($generated@@97 ($generated@@609 $generated@@615) $generated@@616))
)))
(assert  (and (forall (($generated@@619 T@U) ) (! (= (type ($generated@@617 $generated@@619)) ($generated@@92 $generated@@159 $generated@@4))
 :pattern ( ($generated@@617 $generated@@619))
)) (forall (($generated@@620 T@U) ) (! (let (($generated@@621 ($generated@@499 (type $generated@@620))))
(let (($generated@@622 ($generated@@498 (type $generated@@620))))
(= (type ($generated@@618 $generated@@620)) ($generated@@92 $generated@@622 $generated@@621))))
 :pattern ( ($generated@@618 $generated@@620))
))))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@497 $generated@@159 $generated@@159)) (= (type $generated@@624) $generated@@159)) (= ($generated@@0 ($generated@@97 ($generated@@617 $generated@@623) $generated@@624))  (and ($generated@@0 ($generated@@97 ($generated@@495 $generated@@623) ($generated@@254 ($generated@@421 $generated@@247 $generated@@624)))) (= ($generated@@97 ($generated@@618 $generated@@623) ($generated@@254 ($generated@@421 $generated@@247 $generated@@624))) ($generated@@255 ($generated@@421 $generated@@247 $generated@@624))))))
 :pattern ( ($generated@@97 ($generated@@617 $generated@@623) $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (! (let (($generated@@627 (type $generated@@626)))
(let (($generated@@628 ($generated@@480 (type $generated@@625))))
 (=> (= (type $generated@@625) ($generated@@479 $generated@@628 $generated@@627)) (= ($generated@@0 ($generated@@97 ($generated@@557 $generated@@625) $generated@@626)) (exists (($generated@@629 T@U) ) (!  (and (= (type $generated@@629) $generated@@628) (and ($generated@@0 ($generated@@97 ($generated@@477 $generated@@625) $generated@@629)) (= $generated@@626 ($generated@@97 ($generated@@610 $generated@@625) $generated@@629))))
 :pattern ( ($generated@@97 ($generated@@477 $generated@@625) $generated@@629))
 :pattern ( ($generated@@97 ($generated@@610 $generated@@625) $generated@@629))
))))))
 :pattern ( ($generated@@97 ($generated@@557 $generated@@625) $generated@@626))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@631)))
(let (($generated@@633 ($generated@@498 (type $generated@@630))))
 (=> (= (type $generated@@630) ($generated@@497 $generated@@633 $generated@@632)) (= ($generated@@0 ($generated@@97 ($generated@@568 $generated@@630) $generated@@631)) (exists (($generated@@634 T@U) ) (!  (and (= (type $generated@@634) $generated@@633) (and ($generated@@0 ($generated@@97 ($generated@@495 $generated@@630) $generated@@634)) (= $generated@@631 ($generated@@97 ($generated@@618 $generated@@630) $generated@@634))))
 :pattern ( ($generated@@97 ($generated@@495 $generated@@630) $generated@@634))
 :pattern ( ($generated@@97 ($generated@@618 $generated@@630) $generated@@634))
))))))
 :pattern ( ($generated@@97 ($generated@@568 $generated@@630) $generated@@631))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@635) $generated@@79) (= (type $generated@@636) $generated@@79)) (= (type $generated@@637) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@638) ($generated@@161 ($generated@@92 $generated@@93 $generated@@94) $generated@@159 $generated@@159))) (= (type $generated@@639) ($generated@@161 ($generated@@92 $generated@@93 $generated@@94) $generated@@159 $generated@@4))) (= (type $generated@@640) ($generated@@161 ($generated@@92 $generated@@93 $generated@@94) $generated@@159 ($generated@@92 $generated@@159 $generated@@4)))) (= (type $generated@@641) $generated@@159)) (= (type $generated@@642) $generated@@159)) (= ($generated@@0 ($generated@@97 ($generated@@395 $generated@@635 $generated@@636 $generated@@637 ($generated@@527 $generated@@638 $generated@@639 $generated@@640) $generated@@641) $generated@@642)) ($generated@@0 ($generated@@97 ($generated@@157 $generated@@640 $generated@@637 $generated@@641) $generated@@642))))
 :pattern ( ($generated@@97 ($generated@@395 $generated@@635 $generated@@636 $generated@@637 ($generated@@527 $generated@@638 $generated@@639 $generated@@640) $generated@@641) $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (! (= (type ($generated@@643 $generated@@644 $generated@@645)) $generated@@79)
 :pattern ( ($generated@@643 $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@479 $generated@@159 $generated@@159)) (= (type $generated@@647) $generated@@79)) (= (type $generated@@648) $generated@@79)) (= (type $generated@@649) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@646 ($generated@@643 $generated@@647 $generated@@648) $generated@@649) (forall (($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@159) ($generated@@0 ($generated@@97 ($generated@@477 $generated@@646) $generated@@650))) (and ($generated@@410 ($generated@@97 ($generated@@610 $generated@@646) $generated@@650) $generated@@648 $generated@@649) ($generated@@410 $generated@@650 $generated@@647 $generated@@649)))
 :pattern ( ($generated@@97 ($generated@@610 $generated@@646) $generated@@650))
 :pattern ( ($generated@@97 ($generated@@477 $generated@@646) $generated@@650))
))))
 :pattern ( ($generated@@90 $generated@@646 ($generated@@643 $generated@@647 $generated@@648) $generated@@649))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (! (= (type ($generated@@651 $generated@@652 $generated@@653)) $generated@@79)
 :pattern ( ($generated@@651 $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) ($generated@@497 $generated@@159 $generated@@159)) (= (type $generated@@655) $generated@@79)) (= (type $generated@@656) $generated@@79)) (= (type $generated@@657) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@654 ($generated@@651 $generated@@655 $generated@@656) $generated@@657) (forall (($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@159) ($generated@@0 ($generated@@97 ($generated@@495 $generated@@654) $generated@@658))) (and ($generated@@410 ($generated@@97 ($generated@@618 $generated@@654) $generated@@658) $generated@@656 $generated@@657) ($generated@@410 $generated@@658 $generated@@655 $generated@@657)))
 :pattern ( ($generated@@97 ($generated@@618 $generated@@654) $generated@@658))
 :pattern ( ($generated@@97 ($generated@@495 $generated@@654) $generated@@658))
))))
 :pattern ( ($generated@@90 $generated@@654 ($generated@@651 $generated@@655 $generated@@656) $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (! (let (($generated@@661 ($generated@@95 (type $generated@@659))))
 (=> (and (and (= (type $generated@@659) ($generated@@92 $generated@@661 $generated@@4)) (= (type $generated@@660) ($generated@@92 $generated@@661 $generated@@4))) ($generated@@397 $generated@@659 $generated@@660)) (= $generated@@659 $generated@@660)))
 :pattern ( ($generated@@397 $generated@@659 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@662) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@663) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@664) ($generated@@92 $generated@@93 $generated@@94))) (not (= $generated@@662 $generated@@664))) (and ($generated@@216 $generated@@662 $generated@@663) ($generated@@216 $generated@@663 $generated@@664))) ($generated@@216 $generated@@662 $generated@@664))
 :pattern ( ($generated@@216 $generated@@662 $generated@@663) ($generated@@216 $generated@@663 $generated@@664))
)))
(assert (forall (($generated@@666 Int) ) (! (= (type ($generated@@665 $generated@@666)) ($generated@@81 $generated@@159))
 :pattern ( ($generated@@665 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 Int) ) (!  (=> (and (and (= (type $generated@@667) $generated@@79) (= (type $generated@@668) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@669) $generated@@93)) (=> (and (and (and ($generated@@235 $generated@@668) (and (not (= $generated@@669 $generated@@150)) (= ($generated@@151 $generated@@669) ($generated@@149 $generated@@667)))) (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@148 $generated@@669)))) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@668 $generated@@669) $generated@@60))) ($generated@@410 ($generated@@99 ($generated@@97 $generated@@668 $generated@@669) ($generated@@665 $generated@@670)) $generated@@667 $generated@@668)))
 :pattern ( ($generated@@99 ($generated@@97 $generated@@668 $generated@@669) ($generated@@665 $generated@@670)) ($generated@@149 $generated@@667))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (= (type $generated@@671) $generated@@353) (= (type $generated@@672) $generated@@79)) (= (type $generated@@673) $generated@@79)) (= ($generated@@152 $generated@@671 ($generated@@352 $generated@@672 $generated@@673)) (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@675) $generated@@159)) (=> (and (and ($generated@@235 $generated@@674) ($generated@@160 $generated@@675 $generated@@672)) ($generated@@578 $generated@@672 $generated@@673 $generated@@674 $generated@@671 $generated@@675)) ($generated@@160 ($generated@@526 $generated@@672 $generated@@673 $generated@@674 $generated@@671 $generated@@675) $generated@@673)))
 :pattern ( ($generated@@526 $generated@@672 $generated@@673 $generated@@674 $generated@@671 $generated@@675))
))))
 :pattern ( ($generated@@152 $generated@@671 ($generated@@352 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@677 T@T) ) (! (= (type ($generated@@676 $generated@@677)) ($generated@@92 $generated@@677 $generated@@4))
 :pattern ( ($generated@@676 $generated@@677))
)))
(assert (forall (($generated@@678 T@U) ) (! (let (($generated@@679 ($generated@@499 (type $generated@@678))))
(let (($generated@@680 ($generated@@498 (type $generated@@678))))
 (=> (= (type $generated@@678) ($generated@@497 $generated@@680 $generated@@679)) (= (= $generated@@678 ($generated@@496 $generated@@680 $generated@@679)) (= ($generated@@495 $generated@@678) ($generated@@676 $generated@@680))))))
 :pattern ( ($generated@@495 $generated@@678))
)))
(assert (forall (($generated@@681 T@U) ) (! (let (($generated@@682 ($generated@@499 (type $generated@@681))))
(let (($generated@@683 ($generated@@498 (type $generated@@681))))
 (=> (= (type $generated@@681) ($generated@@497 $generated@@683 $generated@@682)) (= (= $generated@@681 ($generated@@496 $generated@@683 $generated@@682)) (= ($generated@@568 $generated@@681) ($generated@@676 $generated@@682))))))
 :pattern ( ($generated@@568 $generated@@681))
)))
(assert (forall (($generated@@684 T@U) ) (! (let (($generated@@685 ($generated@@499 (type $generated@@684))))
(let (($generated@@686 ($generated@@498 (type $generated@@684))))
 (=> (= (type $generated@@684) ($generated@@497 $generated@@686 $generated@@685)) (= (= $generated@@684 ($generated@@496 $generated@@686 $generated@@685)) (= ($generated@@617 $generated@@684) ($generated@@676 $generated@@159))))))
 :pattern ( ($generated@@617 $generated@@684))
)))
(assert (forall (($generated@@687 T@U) ) (! (let (($generated@@688 ($generated@@481 (type $generated@@687))))
(let (($generated@@689 ($generated@@480 (type $generated@@687))))
 (=> (= (type $generated@@687) ($generated@@479 $generated@@689 $generated@@688)) (or (= $generated@@687 ($generated@@478 $generated@@689 $generated@@688)) (exists (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (and (and (= (type $generated@@690) $generated@@159) (= (type $generated@@691) $generated@@159)) ($generated@@0 ($generated@@97 ($generated@@609 $generated@@687) ($generated@@420 ($generated@@369 $generated@@690 $generated@@691)))))
 :no-pattern (type $generated@@690)
 :no-pattern (type $generated@@691)
 :no-pattern ($generated $generated@@690)
 :no-pattern ($generated@@0 $generated@@690)
 :no-pattern ($generated $generated@@691)
 :no-pattern ($generated@@0 $generated@@691)
))))))
 :pattern ( ($generated@@609 $generated@@687))
)))
(assert (forall (($generated@@692 T@U) ) (! (let (($generated@@693 ($generated@@499 (type $generated@@692))))
(let (($generated@@694 ($generated@@498 (type $generated@@692))))
 (=> (= (type $generated@@692) ($generated@@497 $generated@@694 $generated@@693)) (or (= $generated@@692 ($generated@@496 $generated@@694 $generated@@693)) (exists (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (and (and (= (type $generated@@695) $generated@@159) (= (type $generated@@696) $generated@@159)) ($generated@@0 ($generated@@97 ($generated@@617 $generated@@692) ($generated@@420 ($generated@@369 $generated@@695 $generated@@696)))))
 :no-pattern (type $generated@@695)
 :no-pattern (type $generated@@696)
 :no-pattern ($generated $generated@@695)
 :no-pattern ($generated@@0 $generated@@695)
 :no-pattern ($generated $generated@@696)
 :no-pattern ($generated@@0 $generated@@696)
))))))
 :pattern ( ($generated@@617 $generated@@692))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@697) $generated@@159) ($generated@@160 $generated@@697 $generated@@46)) (and (= ($generated@@420 ($generated@@421 $generated@@2 $generated@@697)) $generated@@697) ($generated@@152 ($generated@@421 $generated@@2 $generated@@697) $generated@@46)))
 :pattern ( ($generated@@160 $generated@@697 $generated@@46))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@698) $generated@@159) ($generated@@160 $generated@@698 $generated@@47)) (and (= ($generated@@420 ($generated@@421 $generated@@3 $generated@@698)) $generated@@698) ($generated@@152 ($generated@@421 $generated@@3 $generated@@698) $generated@@47)))
 :pattern ( ($generated@@160 $generated@@698 $generated@@47))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@699) $generated@@159) ($generated@@160 $generated@@699 $generated@@44)) (and (= ($generated@@420 ($generated@@421 $generated@@4 $generated@@699)) $generated@@699) ($generated@@152 ($generated@@421 $generated@@4 $generated@@699) $generated@@44)))
 :pattern ( ($generated@@160 $generated@@699 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@700) 23))
(assert (forall (($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@701) $generated@@159) ($generated@@160 $generated@@701 $generated@@45)) (and (= ($generated@@420 ($generated@@421 $generated@@700 $generated@@701)) $generated@@701) ($generated@@152 ($generated@@421 $generated@@700 $generated@@701) $generated@@45)))
 :pattern ( ($generated@@160 $generated@@701 $generated@@45))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (= (type $generated@@703) $generated@@79) (= ($generated@@160 ($generated@@420 $generated@@702) $generated@@703) ($generated@@152 $generated@@702 $generated@@703)))
 :pattern ( ($generated@@160 ($generated@@420 $generated@@702) $generated@@703))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@704) $generated@@79) (= (type $generated@@705) $generated@@79)) (= (type $generated@@706) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@707) ($generated@@161 ($generated@@92 $generated@@93 $generated@@94) $generated@@159 $generated@@159))) (= (type $generated@@708) ($generated@@161 ($generated@@92 $generated@@93 $generated@@94) $generated@@159 $generated@@4))) (= (type $generated@@709) ($generated@@161 ($generated@@92 $generated@@93 $generated@@94) $generated@@159 ($generated@@92 $generated@@159 $generated@@4)))) (= (type $generated@@710) $generated@@159)) ($generated@@0 ($generated@@157 $generated@@708 $generated@@706 $generated@@710))) ($generated@@578 $generated@@704 $generated@@705 $generated@@706 ($generated@@527 $generated@@707 $generated@@708 $generated@@709) $generated@@710))
 :pattern ( ($generated@@578 $generated@@704 $generated@@705 $generated@@706 ($generated@@527 $generated@@707 $generated@@708 $generated@@709) $generated@@710))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@93) (<= 0 ($generated@@148 $generated@@711)))
 :no-pattern (type $generated@@711)
 :no-pattern ($generated $generated@@711)
 :no-pattern ($generated@@0 $generated@@711)
)))
(assert (forall (($generated@@712 T@U) ) (! (let (($generated@@713 ($generated@@95 (type $generated@@712))))
 (=> (= (type $generated@@712) ($generated@@92 $generated@@713 $generated@@2)) (<= 0 ($generated@@467 $generated@@712))))
 :pattern ( ($generated@@467 $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ) (! (let (($generated@@715 ($generated@@435 (type $generated@@714))))
 (=> (= (type $generated@@714) ($generated@@434 $generated@@715)) (<= 0 ($generated@@433 $generated@@714))))
 :pattern ( ($generated@@433 $generated@@714))
)))
(assert (forall (($generated@@717 T@U) ) (! (= (type ($generated@@716 $generated@@717)) $generated@@79)
 :pattern ( ($generated@@716 $generated@@717))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@718) $generated@@79) (= (type $generated@@719) $generated@@79)) (= ($generated@@716 ($generated@@643 $generated@@718 $generated@@719)) $generated@@718))
 :pattern ( ($generated@@643 $generated@@718 $generated@@719))
)))
(assert (forall (($generated@@721 T@U) ) (! (= (type ($generated@@720 $generated@@721)) $generated@@79)
 :pattern ( ($generated@@720 $generated@@721))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@722) $generated@@79) (= (type $generated@@723) $generated@@79)) (= ($generated@@720 ($generated@@643 $generated@@722 $generated@@723)) $generated@@723))
 :pattern ( ($generated@@643 $generated@@722 $generated@@723))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@724) $generated@@79) (= (type $generated@@725) $generated@@79)) (= ($generated@@88 ($generated@@643 $generated@@724 $generated@@725)) $generated@@58))
 :pattern ( ($generated@@643 $generated@@724 $generated@@725))
)))
(assert (forall (($generated@@727 T@U) ) (! (= (type ($generated@@726 $generated@@727)) $generated@@79)
 :pattern ( ($generated@@726 $generated@@727))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (= (type $generated@@728) $generated@@79) (= (type $generated@@729) $generated@@79)) (= ($generated@@726 ($generated@@651 $generated@@728 $generated@@729)) $generated@@728))
 :pattern ( ($generated@@651 $generated@@728 $generated@@729))
)))
(assert (forall (($generated@@731 T@U) ) (! (= (type ($generated@@730 $generated@@731)) $generated@@79)
 :pattern ( ($generated@@730 $generated@@731))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (= (type $generated@@732) $generated@@79) (= (type $generated@@733) $generated@@79)) (= ($generated@@730 ($generated@@651 $generated@@732 $generated@@733)) $generated@@733))
 :pattern ( ($generated@@651 $generated@@732 $generated@@733))
)))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (= (type $generated@@734) $generated@@79) (= (type $generated@@735) $generated@@79)) (= ($generated@@88 ($generated@@651 $generated@@734 $generated@@735)) $generated@@59))
 :pattern ( ($generated@@651 $generated@@734 $generated@@735))
)))
(assert (forall (($generated@@737 T@U) ) (! (= (type ($generated@@736 $generated@@737)) $generated@@79)
 :pattern ( ($generated@@736 $generated@@737))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (= (type $generated@@738) $generated@@79) (= (type $generated@@739) $generated@@79)) (= ($generated@@736 ($generated@@352 $generated@@738 $generated@@739)) $generated@@738))
 :pattern ( ($generated@@352 $generated@@738 $generated@@739))
)))
(assert (forall (($generated@@741 T@U) ) (! (= (type ($generated@@740 $generated@@741)) $generated@@79)
 :pattern ( ($generated@@740 $generated@@741))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (= (type $generated@@742) $generated@@79) (= (type $generated@@743) $generated@@79)) (= ($generated@@740 ($generated@@352 $generated@@742 $generated@@743)) $generated@@743))
 :pattern ( ($generated@@352 $generated@@742 $generated@@743))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (= (type $generated@@744) $generated@@159) (= (type $generated@@745) $generated@@159)) (= ($generated@@416 ($generated@@369 $generated@@744 $generated@@745)) $generated@@66))
 :pattern ( ($generated@@369 $generated@@744 $generated@@745))
)))
(assert (forall (($generated@@747 T@U) ) (! (= (type ($generated@@746 $generated@@747)) $generated@@79)
 :pattern ( ($generated@@746 $generated@@747))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ) (!  (=> (and (= (type $generated@@748) $generated@@79) (= (type $generated@@749) $generated@@79)) (= ($generated@@746 ($generated@@246 $generated@@748 $generated@@749)) $generated@@748))
 :pattern ( ($generated@@246 $generated@@748 $generated@@749))
)))
(assert (forall (($generated@@751 T@U) ) (! (= (type ($generated@@750 $generated@@751)) $generated@@79)
 :pattern ( ($generated@@750 $generated@@751))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (= (type $generated@@752) $generated@@79) (= (type $generated@@753) $generated@@79)) (= ($generated@@750 ($generated@@246 $generated@@752 $generated@@753)) $generated@@753))
 :pattern ( ($generated@@246 $generated@@752 $generated@@753))
)))
(assert (forall (($generated@@754 T@U) ($generated@@755 T@U) ) (!  (=> (and (= (type $generated@@754) $generated@@159) (= (type $generated@@755) $generated@@159)) (= ($generated@@254 ($generated@@369 $generated@@754 $generated@@755)) $generated@@754))
 :pattern ( ($generated@@369 $generated@@754 $generated@@755))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ) (!  (=> (and (= (type $generated@@756) $generated@@159) (= (type $generated@@757) $generated@@159)) (= ($generated@@255 ($generated@@369 $generated@@756 $generated@@757)) $generated@@757))
 :pattern ( ($generated@@369 $generated@@756 $generated@@757))
)))
(assert (forall (($generated@@758 T@U) ) (!  (=> (= (type $generated@@758) $generated@@93) ($generated@@152 $generated@@758 $generated@@226))
 :pattern ( ($generated@@152 $generated@@758 $generated@@226))
)))
(assert  (and (forall (($generated@@761 T@U) ) (! (= (type ($generated@@759 $generated@@761)) $generated@@79)
 :pattern ( ($generated@@759 $generated@@761))
)) (forall (($generated@@762 T@U) ($generated@@763 Int) ) (! (let (($generated@@764 ($generated@@435 (type $generated@@762))))
(= (type ($generated@@760 $generated@@762 $generated@@763)) $generated@@764))
 :pattern ( ($generated@@760 $generated@@762 $generated@@763))
))))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ($generated@@767 T@U) ) (!  (=> (and (and (= (type $generated@@765) ($generated@@434 $generated@@159)) (= (type $generated@@766) $generated@@79)) (= (type $generated@@767) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@765 ($generated@@759 $generated@@766) $generated@@767) (forall (($generated@@768 Int) ) (!  (=> (and (<= 0 $generated@@768) (< $generated@@768 ($generated@@433 $generated@@765))) ($generated@@410 ($generated@@760 $generated@@765 $generated@@768) $generated@@766 $generated@@767))
 :pattern ( ($generated@@760 $generated@@765 $generated@@768))
))))
 :pattern ( ($generated@@90 $generated@@765 ($generated@@759 $generated@@766) $generated@@767))
)))
(assert (forall (($generated@@770 Int) ) (! (= ($generated@@769 ($generated@@91 $generated@@770)) $generated@@770)
 :pattern ( ($generated@@91 $generated@@770))
)))
(assert (forall (($generated@@772 T@U) ) (! (= (type ($generated@@771 $generated@@772)) $generated@@79)
 :pattern ( ($generated@@771 $generated@@772))
)))
(assert (forall (($generated@@773 T@U) ) (!  (=> (= (type $generated@@773) $generated@@79) (= ($generated@@771 ($generated@@380 $generated@@773)) $generated@@773))
 :pattern ( ($generated@@380 $generated@@773))
)))
(assert (forall (($generated@@774 T@U) ) (!  (=> (= (type $generated@@774) $generated@@79) (= ($generated@@88 ($generated@@380 $generated@@774)) $generated@@54))
 :pattern ( ($generated@@380 $generated@@774))
)))
(assert (forall (($generated@@776 T@U) ) (! (= (type ($generated@@775 $generated@@776)) $generated@@79)
 :pattern ( ($generated@@775 $generated@@776))
)))
(assert (forall (($generated@@777 T@U) ) (!  (=> (= (type $generated@@777) $generated@@79) (= ($generated@@775 ($generated@@385 $generated@@777)) $generated@@777))
 :pattern ( ($generated@@385 $generated@@777))
)))
(assert (forall (($generated@@778 T@U) ) (!  (=> (= (type $generated@@778) $generated@@79) (= ($generated@@88 ($generated@@385 $generated@@778)) $generated@@55))
 :pattern ( ($generated@@385 $generated@@778))
)))
(assert (forall (($generated@@780 T@U) ) (! (= (type ($generated@@779 $generated@@780)) $generated@@79)
 :pattern ( ($generated@@779 $generated@@780))
)))
(assert (forall (($generated@@781 T@U) ) (!  (=> (= (type $generated@@781) $generated@@79) (= ($generated@@779 ($generated@@260 $generated@@781)) $generated@@781))
 :pattern ( ($generated@@260 $generated@@781))
)))
(assert (forall (($generated@@782 T@U) ) (!  (=> (= (type $generated@@782) $generated@@79) (= ($generated@@88 ($generated@@260 $generated@@782)) $generated@@56))
 :pattern ( ($generated@@260 $generated@@782))
)))
(assert (forall (($generated@@784 T@U) ) (! (= (type ($generated@@783 $generated@@784)) $generated@@79)
 :pattern ( ($generated@@783 $generated@@784))
)))
(assert (forall (($generated@@785 T@U) ) (!  (=> (= (type $generated@@785) $generated@@79) (= ($generated@@783 ($generated@@759 $generated@@785)) $generated@@785))
 :pattern ( ($generated@@759 $generated@@785))
)))
(assert (forall (($generated@@786 T@U) ) (!  (=> (= (type $generated@@786) $generated@@79) (= ($generated@@88 ($generated@@759 $generated@@786)) $generated@@57))
 :pattern ( ($generated@@759 $generated@@786))
)))
(assert (forall (($generated@@787 Int) ) (! (= ($generated@@87 ($generated@@665 $generated@@787)) 1)
 :pattern ( ($generated@@665 $generated@@787))
)))
(assert (forall (($generated@@789 Int) ) (! (= ($generated@@788 ($generated@@665 $generated@@789)) $generated@@789)
 :pattern ( ($generated@@665 $generated@@789))
)))
(assert (forall (($generated@@791 T@U) ) (! (= (type ($generated@@790 $generated@@791)) $generated@@79)
 :pattern ( ($generated@@790 $generated@@791))
)))
(assert (forall (($generated@@792 T@U) ) (!  (=> (= (type $generated@@792) $generated@@79) (= ($generated@@790 ($generated@@149 $generated@@792)) $generated@@792))
 :pattern ( ($generated@@149 $generated@@792))
)))
(assert (forall (($generated@@794 T@U) ) (! (= (type ($generated@@793 $generated@@794)) $generated@@79)
 :pattern ( ($generated@@793 $generated@@794))
)))
(assert (forall (($generated@@795 T@U) ) (!  (=> (= (type $generated@@795) $generated@@79) (= ($generated@@793 ($generated@@240 $generated@@795)) $generated@@795))
 :pattern ( ($generated@@240 $generated@@795))
)))
(assert (forall (($generated@@796 T@U) ) (! (let (($generated@@797 (type $generated@@796)))
(= ($generated@@421 $generated@@797 ($generated@@420 $generated@@796)) $generated@@796))
 :pattern ( ($generated@@420 $generated@@796))
)))
(assert (forall (($generated@@798 T@U) ($generated@@799 T@U) ($generated@@800 T@U) ) (!  (=> (and (and (= (type $generated@@798) ($generated@@479 $generated@@159 $generated@@159)) (= (type $generated@@799) $generated@@79)) (= (type $generated@@800) $generated@@79)) (= ($generated@@152 $generated@@798 ($generated@@643 $generated@@799 $generated@@800)) (forall (($generated@@801 T@U) ) (!  (=> (and (= (type $generated@@801) $generated@@159) ($generated@@0 ($generated@@97 ($generated@@477 $generated@@798) $generated@@801))) (and ($generated@@160 ($generated@@97 ($generated@@610 $generated@@798) $generated@@801) $generated@@800) ($generated@@160 $generated@@801 $generated@@799)))
 :pattern ( ($generated@@97 ($generated@@610 $generated@@798) $generated@@801))
 :pattern ( ($generated@@97 ($generated@@477 $generated@@798) $generated@@801))
))))
 :pattern ( ($generated@@152 $generated@@798 ($generated@@643 $generated@@799 $generated@@800)))
)))
(assert (forall (($generated@@802 T@U) ($generated@@803 T@U) ($generated@@804 T@U) ) (!  (=> (and (and (= (type $generated@@802) ($generated@@497 $generated@@159 $generated@@159)) (= (type $generated@@803) $generated@@79)) (= (type $generated@@804) $generated@@79)) (= ($generated@@152 $generated@@802 ($generated@@651 $generated@@803 $generated@@804)) (forall (($generated@@805 T@U) ) (!  (=> (and (= (type $generated@@805) $generated@@159) ($generated@@0 ($generated@@97 ($generated@@495 $generated@@802) $generated@@805))) (and ($generated@@160 ($generated@@97 ($generated@@618 $generated@@802) $generated@@805) $generated@@804) ($generated@@160 $generated@@805 $generated@@803)))
 :pattern ( ($generated@@97 ($generated@@618 $generated@@802) $generated@@805))
 :pattern ( ($generated@@97 ($generated@@495 $generated@@802) $generated@@805))
))))
 :pattern ( ($generated@@152 $generated@@802 ($generated@@651 $generated@@803 $generated@@804)))
)))
(assert (= (type $generated@@806) $generated@@353))
(assert (forall (($generated@@807 T@U) ($generated@@808 T@U) ($generated@@809 T@U) ) (!  (=> (and (and (= (type $generated@@807) $generated@@159) (= (type $generated@@808) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@809) $generated@@159)) (= ($generated@@0 ($generated@@97 ($generated@@395 $generated@@223 $generated@@46 $generated@@808 $generated@@806 $generated@@809) $generated@@807)) false))
 :pattern ( ($generated@@97 ($generated@@395 $generated@@223 $generated@@46 $generated@@808 $generated@@806 $generated@@809) $generated@@807))
)))
(assert (forall (($generated@@810 T@U) ($generated@@811 T@U) ) (!  (=> (and (= (type $generated@@810) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@811) $generated@@159)) (= ($generated@@578 $generated@@223 $generated@@46 $generated@@810 $generated@@806 $generated@@811) ($generated@@376 ($generated ($generated@@421 $generated@@2 $generated@@811)))))
 :pattern ( ($generated@@578 $generated@@223 $generated@@46 $generated@@810 $generated@@806 $generated@@811))
)))
(assert (forall (($generated@@812 T@U) ($generated@@813 T@U) ($generated@@814 T@U) ($generated@@815 Int) ) (!  (=> (and (and (and (= (type $generated@@812) $generated@@79) (= (type $generated@@813) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@814) $generated@@93)) (and (and ($generated@@235 $generated@@813) (and (not (= $generated@@814 $generated@@150)) (= ($generated@@151 $generated@@814) ($generated@@149 $generated@@812)))) (and (<= 0 $generated@@815) (< $generated@@815 ($generated@@148 $generated@@814))))) ($generated@@160 ($generated@@99 ($generated@@97 $generated@@813 $generated@@814) ($generated@@665 $generated@@815)) $generated@@812))
 :pattern ( ($generated@@99 ($generated@@97 $generated@@813 $generated@@814) ($generated@@665 $generated@@815)) ($generated@@149 $generated@@812))
)))
(assert (forall (($generated@@818 T@U) ($generated@@819 T@U) ) (!  (=> (and (= (type $generated@@818) $generated@@159) (= (type $generated@@819) $generated@@159)) (< ($generated@@816 $generated@@818) ($generated@@817 ($generated@@369 $generated@@818 $generated@@819))))
 :pattern ( ($generated@@369 $generated@@818 $generated@@819))
)))
(assert (forall (($generated@@820 T@U) ($generated@@821 T@U) ) (!  (=> (and (= (type $generated@@820) $generated@@159) (= (type $generated@@821) $generated@@159)) (< ($generated@@816 $generated@@821) ($generated@@817 ($generated@@369 $generated@@820 $generated@@821))))
 :pattern ( ($generated@@369 $generated@@820 $generated@@821))
)))
(assert (forall (($generated@@823 T@U) ) (! (= (type ($generated@@822 $generated@@823)) $generated@@445)
 :pattern ( ($generated@@822 $generated@@823))
)))
(assert (forall (($generated@@824 T@U) ($generated@@825 T@U) ) (! (let (($generated@@826 ($generated@@96 (type $generated@@824))))
 (=> (and (= (type $generated@@824) ($generated@@92 $generated@@445 $generated@@826)) (= (type $generated@@825) $generated@@445)) (= ($generated@@444 $generated@@824 ($generated@@822 $generated@@825)) ($generated@@444 $generated@@824 $generated@@825))))
 :pattern ( ($generated@@444 $generated@@824 ($generated@@822 $generated@@825)))
)))
(assert (forall (($generated@@827 T@U) ($generated@@828 T@U) ($generated@@829 T@U) ) (!  (=> (and (and (and (= (type $generated@@827) $generated@@159) (= (type $generated@@828) $generated@@79)) (= (type $generated@@829) $generated@@79)) ($generated@@160 $generated@@827 ($generated@@643 $generated@@828 $generated@@829))) (and (= ($generated@@420 ($generated@@421 ($generated@@479 $generated@@159 $generated@@159) $generated@@827)) $generated@@827) ($generated@@152 ($generated@@421 ($generated@@479 $generated@@159 $generated@@159) $generated@@827) ($generated@@643 $generated@@828 $generated@@829))))
 :pattern ( ($generated@@160 $generated@@827 ($generated@@643 $generated@@828 $generated@@829)))
)))
(assert (forall (($generated@@830 T@U) ($generated@@831 T@U) ($generated@@832 T@U) ) (!  (=> (and (and (and (= (type $generated@@830) $generated@@159) (= (type $generated@@831) $generated@@79)) (= (type $generated@@832) $generated@@79)) ($generated@@160 $generated@@830 ($generated@@651 $generated@@831 $generated@@832))) (and (= ($generated@@420 ($generated@@421 ($generated@@497 $generated@@159 $generated@@159) $generated@@830)) $generated@@830) ($generated@@152 ($generated@@421 ($generated@@497 $generated@@159 $generated@@159) $generated@@830) ($generated@@651 $generated@@831 $generated@@832))))
 :pattern ( ($generated@@160 $generated@@830 ($generated@@651 $generated@@831 $generated@@832)))
)))
(assert (forall (($generated@@833 T@U) ($generated@@834 T@U) ($generated@@835 T@U) ) (!  (=> (and (and (and (= (type $generated@@833) $generated@@79) (= (type $generated@@834) $generated@@79)) (= (type $generated@@835) $generated@@159)) ($generated@@160 $generated@@835 ($generated@@352 $generated@@833 $generated@@834))) (and (= ($generated@@420 ($generated@@421 $generated@@353 $generated@@835)) $generated@@835) ($generated@@152 ($generated@@421 $generated@@353 $generated@@835) ($generated@@352 $generated@@833 $generated@@834))))
 :pattern ( ($generated@@160 $generated@@835 ($generated@@352 $generated@@833 $generated@@834)))
)))
(assert (forall (($generated@@836 T@U) ($generated@@837 T@U) ($generated@@838 T@U) ) (!  (=> (and (and (and (= (type $generated@@836) $generated@@79) (= (type $generated@@837) $generated@@79)) (= (type $generated@@838) $generated@@159)) ($generated@@160 $generated@@838 ($generated@@246 $generated@@836 $generated@@837))) (and (= ($generated@@420 ($generated@@421 $generated@@247 $generated@@838)) $generated@@838) ($generated@@152 ($generated@@421 $generated@@247 $generated@@838) ($generated@@246 $generated@@836 $generated@@837))))
 :pattern ( ($generated@@160 $generated@@838 ($generated@@246 $generated@@836 $generated@@837)))
)))
(assert (forall (($generated@@839 T@U) ($generated@@840 Int) ) (!  (=> (= (type $generated@@839) ($generated@@92 $generated@@93 $generated@@94)) (= ($generated@@268 $generated@@840) ($generated ($generated@@421 $generated@@2 ($generated@@526 $generated@@223 $generated@@46 $generated@@839 $generated@@806 ($generated@@420 ($generated@@8 $generated@@840)))))))
 :pattern ( ($generated@@268 $generated@@840) ($generated@@235 $generated@@839))
)))
(assert (forall (($generated@@841 T@U) ) (! (let (($generated@@842 (type $generated@@841)))
 (not ($generated@@0 ($generated@@97 ($generated@@398 $generated@@842) $generated@@841))))
 :pattern ( (let (($generated@@842 (type $generated@@841)))
($generated@@97 ($generated@@398 $generated@@842) $generated@@841)))
)))
(assert (forall (($generated@@843 T@U) ) (! (let (($generated@@844 (type $generated@@843)))
 (not ($generated@@0 ($generated@@97 ($generated@@676 $generated@@844) $generated@@843))))
 :pattern ( (let (($generated@@844 (type $generated@@843)))
($generated@@97 ($generated@@676 $generated@@844) $generated@@843)))
)))
(assert (forall (($generated@@845 T@U) ($generated@@846 T@U) ) (!  (=> (and (= (type $generated@@845) $generated@@79) (= (type $generated@@846) $generated@@79)) (and (= ($generated@@88 ($generated@@352 $generated@@845 $generated@@846)) $generated@@65) (= ($generated@@473 ($generated@@352 $generated@@845 $generated@@846)) $generated@@75)))
 :pattern ( ($generated@@352 $generated@@845 $generated@@846))
)))
(assert (forall (($generated@@847 T@U) ($generated@@848 T@U) ) (!  (=> (and (= (type $generated@@847) $generated@@79) (= (type $generated@@848) $generated@@79)) (and (= ($generated@@88 ($generated@@246 $generated@@847 $generated@@848)) $generated@@67) (= ($generated@@473 ($generated@@246 $generated@@847 $generated@@848)) $generated@@76)))
 :pattern ( ($generated@@246 $generated@@847 $generated@@848))
)))
(assert (forall (($generated@@849 T@U) ($generated@@850 T@U) ($generated@@851 T@U) ($generated@@852 T@U) ($generated@@853 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@849) $generated@@79) (= (type $generated@@850) $generated@@79)) (= (type $generated@@851) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@852) $generated@@353)) (= (type $generated@@853) $generated@@159)) (and (and ($generated@@235 $generated@@851) (and ($generated@@160 $generated@@853 $generated@@849) ($generated@@152 $generated@@852 ($generated@@352 $generated@@849 $generated@@850)))) ($generated@@397 ($generated@@395 $generated@@849 $generated@@850 $generated@@396 $generated@@852 $generated@@853) ($generated@@398 $generated@@159)))) (= ($generated@@578 $generated@@849 $generated@@850 $generated@@396 $generated@@852 $generated@@853) ($generated@@578 $generated@@849 $generated@@850 $generated@@851 $generated@@852 $generated@@853)))
 :pattern ( ($generated@@578 $generated@@849 $generated@@850 $generated@@396 $generated@@852 $generated@@853) ($generated@@235 $generated@@851))
 :pattern ( ($generated@@578 $generated@@849 $generated@@850 $generated@@851 $generated@@852 $generated@@853))
)))
(assert (forall (($generated@@854 T@U) ) (!  (=> (= (type $generated@@854) $generated@@247) (= ($generated@@816 ($generated@@420 $generated@@854)) ($generated@@817 $generated@@854)))
 :pattern ( ($generated@@816 ($generated@@420 $generated@@854)))
)))
(assert (forall (($generated@@855 T@U) ) (!  (=> (and (= (type $generated@@855) $generated@@159) ($generated@@160 $generated@@855 ($generated@@91 0))) (and (= ($generated@@420 ($generated@@421 $generated@@2 $generated@@855)) $generated@@855) ($generated@@152 ($generated@@421 ($generated@@92 $generated@@159 $generated@@4) $generated@@855) ($generated@@91 0))))
 :pattern ( ($generated@@160 $generated@@855 ($generated@@91 0)))
)))
(assert (forall (($generated@@856 T@U) ($generated@@857 T@U) ) (!  (=> (and (and (= (type $generated@@856) $generated@@159) (= (type $generated@@857) $generated@@79)) ($generated@@160 $generated@@856 ($generated@@380 $generated@@857))) (and (= ($generated@@420 ($generated@@421 ($generated@@92 $generated@@159 $generated@@4) $generated@@856)) $generated@@856) ($generated@@152 ($generated@@421 ($generated@@92 $generated@@159 $generated@@4) $generated@@856) ($generated@@380 $generated@@857))))
 :pattern ( ($generated@@160 $generated@@856 ($generated@@380 $generated@@857)))
)))
(assert (forall (($generated@@858 T@U) ($generated@@859 T@U) ) (!  (=> (and (and (= (type $generated@@858) $generated@@159) (= (type $generated@@859) $generated@@79)) ($generated@@160 $generated@@858 ($generated@@385 $generated@@859))) (and (= ($generated@@420 ($generated@@421 ($generated@@92 $generated@@159 $generated@@4) $generated@@858)) $generated@@858) ($generated@@152 ($generated@@421 ($generated@@92 $generated@@159 $generated@@4) $generated@@858) ($generated@@385 $generated@@859))))
 :pattern ( ($generated@@160 $generated@@858 ($generated@@385 $generated@@859)))
)))
(assert (forall (($generated@@860 T@U) ($generated@@861 T@U) ) (!  (=> (and (and (= (type $generated@@860) $generated@@159) (= (type $generated@@861) $generated@@79)) ($generated@@160 $generated@@860 ($generated@@260 $generated@@861))) (and (= ($generated@@420 ($generated@@421 ($generated@@92 $generated@@159 $generated@@2) $generated@@860)) $generated@@860) ($generated@@152 ($generated@@421 ($generated@@92 $generated@@159 $generated@@2) $generated@@860) ($generated@@260 $generated@@861))))
 :pattern ( ($generated@@160 $generated@@860 ($generated@@260 $generated@@861)))
)))
(assert (forall (($generated@@862 T@U) ($generated@@863 T@U) ) (!  (=> (and (and (= (type $generated@@862) $generated@@159) (= (type $generated@@863) $generated@@79)) ($generated@@160 $generated@@862 ($generated@@759 $generated@@863))) (and (= ($generated@@420 ($generated@@421 ($generated@@434 $generated@@159) $generated@@862)) $generated@@862) ($generated@@152 ($generated@@421 ($generated@@434 $generated@@159) $generated@@862) ($generated@@759 $generated@@863))))
 :pattern ( ($generated@@160 $generated@@862 ($generated@@759 $generated@@863)))
)))
(assert (forall (($generated@@864 T@U) ($generated@@865 T@U) ) (!  (=> (and (and (= (type $generated@@864) $generated@@79) (= (type $generated@@865) $generated@@159)) ($generated@@160 $generated@@865 ($generated@@149 $generated@@864))) (and (= ($generated@@420 ($generated@@421 $generated@@93 $generated@@865)) $generated@@865) ($generated@@152 ($generated@@421 $generated@@93 $generated@@865) ($generated@@149 $generated@@864))))
 :pattern ( ($generated@@160 $generated@@865 ($generated@@149 $generated@@864)))
)))
(assert (forall (($generated@@866 T@U) ($generated@@867 T@U) ) (!  (=> (and (and (= (type $generated@@866) $generated@@79) (= (type $generated@@867) $generated@@159)) ($generated@@160 $generated@@867 ($generated@@240 $generated@@866))) (and (= ($generated@@420 ($generated@@421 $generated@@93 $generated@@867)) $generated@@867) ($generated@@152 ($generated@@421 $generated@@93 $generated@@867) ($generated@@240 $generated@@866))))
 :pattern ( ($generated@@160 $generated@@867 ($generated@@240 $generated@@866)))
)))
(assert (forall (($generated@@868 T@U) ($generated@@869 T@U) ($generated@@870 T@U) ($generated@@871 T@U) ) (! (let (($generated@@872 (type $generated@@871)))
 (=> (and (and (and (= (type $generated@@868) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@869) $generated@@93)) (= (type $generated@@870) ($generated@@81 $generated@@872))) ($generated@@235 ($generated@@98 $generated@@868 $generated@@869 ($generated@@100 ($generated@@97 $generated@@868 $generated@@869) $generated@@870 $generated@@871)))) ($generated@@216 $generated@@868 ($generated@@98 $generated@@868 $generated@@869 ($generated@@100 ($generated@@97 $generated@@868 $generated@@869) $generated@@870 $generated@@871)))))
 :pattern ( ($generated@@98 $generated@@868 $generated@@869 ($generated@@100 ($generated@@97 $generated@@868 $generated@@869) $generated@@870 $generated@@871)))
)))
(assert (= ($generated@@88 $generated@@223) $generated@@61))
(assert (= ($generated@@473 $generated@@223) $generated@@72))
(assert (= ($generated@@88 $generated@@226) $generated@@62))
(assert (= ($generated@@473 $generated@@226) $generated@@73))
(assert (= ($generated@@88 $generated@@229) $generated@@68))
(assert (= ($generated@@473 $generated@@229) $generated@@77))
(assert (= ($generated@@88 $generated@@363) $generated@@69))
(assert (= ($generated@@473 $generated@@363) $generated@@77))
(assert (= ($generated@@88 $generated@@232) $generated@@70))
(assert (= ($generated@@473 $generated@@232) $generated@@78))
(assert (= ($generated@@88 $generated@@366) $generated@@71))
(assert (= ($generated@@473 $generated@@366) $generated@@78))
(assert (forall (($generated@@873 T@U) ($generated@@874 T@U) ($generated@@875 T@U) ) (!  (=> (and (and (= (type $generated@@873) ($generated@@92 $generated@@159 $generated@@2)) (= (type $generated@@874) $generated@@79)) (= (type $generated@@875) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@873 ($generated@@260 $generated@@874) $generated@@875) (forall (($generated@@876 T@U) ) (!  (=> (and (= (type $generated@@876) $generated@@159) (< 0 ($generated ($generated@@97 $generated@@873 $generated@@876)))) ($generated@@410 $generated@@876 $generated@@874 $generated@@875))
 :pattern ( ($generated@@97 $generated@@873 $generated@@876))
))))
 :pattern ( ($generated@@90 $generated@@873 ($generated@@260 $generated@@874) $generated@@875))
)))
(assert (forall (($generated@@877 T@U) ) (!  (=> (= (type $generated@@877) ($generated@@92 $generated@@93 $generated@@4)) ($generated@@152 ($generated@@440 $generated@@877) ($generated@@380 $generated@@226)))
 :pattern ( ($generated@@440 $generated@@877))
)))
(assert (forall (($generated@@878 T@U) ($generated@@879 T@U) ($generated@@880 T@U) ($generated@@881 T@U) ($generated@@882 T@U) ($generated@@883 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@878) $generated@@79) (= (type $generated@@879) $generated@@79)) (= (type $generated@@880) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@881) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@882) $generated@@353)) (= (type $generated@@883) $generated@@159)) (and (and (and ($generated@@216 $generated@@880 $generated@@881) (and ($generated@@235 $generated@@880) ($generated@@235 $generated@@881))) (and ($generated@@160 $generated@@883 $generated@@878) ($generated@@152 $generated@@882 ($generated@@352 $generated@@878 $generated@@879)))) (forall (($generated@@884 T@U) ($generated@@885 T@U) ) (! (let (($generated@@886 ($generated@@82 (type $generated@@885))))
 (=> (and (and (= (type $generated@@884) $generated@@93) (= (type $generated@@885) ($generated@@81 $generated@@886))) (and (not (= $generated@@884 $generated@@150)) ($generated@@0 ($generated@@97 ($generated@@395 $generated@@878 $generated@@879 $generated@@880 $generated@@882 $generated@@883) ($generated@@420 $generated@@884))))) (= ($generated@@99 ($generated@@97 $generated@@880 $generated@@884) $generated@@885) ($generated@@99 ($generated@@97 $generated@@881 $generated@@884) $generated@@885))))
 :no-pattern (type $generated@@884)
 :no-pattern (type $generated@@885)
 :no-pattern ($generated $generated@@884)
 :no-pattern ($generated@@0 $generated@@884)
 :no-pattern ($generated $generated@@885)
 :no-pattern ($generated@@0 $generated@@885)
)))) (= ($generated@@578 $generated@@878 $generated@@879 $generated@@880 $generated@@882 $generated@@883) ($generated@@578 $generated@@878 $generated@@879 $generated@@881 $generated@@882 $generated@@883)))
 :pattern ( ($generated@@216 $generated@@880 $generated@@881) ($generated@@578 $generated@@878 $generated@@879 $generated@@881 $generated@@882 $generated@@883))
)))
(assert (forall (($generated@@887 T@U) ($generated@@888 T@U) ($generated@@889 T@U) ($generated@@890 T@U) ($generated@@891 T@U) ($generated@@892 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@887) $generated@@79) (= (type $generated@@888) $generated@@79)) (= (type $generated@@889) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@890) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@891) $generated@@353)) (= (type $generated@@892) $generated@@159)) (and (and (and ($generated@@216 $generated@@889 $generated@@890) (and ($generated@@235 $generated@@889) ($generated@@235 $generated@@890))) (and ($generated@@160 $generated@@892 $generated@@887) ($generated@@152 $generated@@891 ($generated@@352 $generated@@887 $generated@@888)))) (forall (($generated@@893 T@U) ($generated@@894 T@U) ) (! (let (($generated@@895 ($generated@@82 (type $generated@@894))))
 (=> (and (and (= (type $generated@@893) $generated@@93) (= (type $generated@@894) ($generated@@81 $generated@@895))) (and (not (= $generated@@893 $generated@@150)) ($generated@@0 ($generated@@97 ($generated@@395 $generated@@887 $generated@@888 $generated@@890 $generated@@891 $generated@@892) ($generated@@420 $generated@@893))))) (= ($generated@@99 ($generated@@97 $generated@@889 $generated@@893) $generated@@894) ($generated@@99 ($generated@@97 $generated@@890 $generated@@893) $generated@@894))))
 :no-pattern (type $generated@@893)
 :no-pattern (type $generated@@894)
 :no-pattern ($generated $generated@@893)
 :no-pattern ($generated@@0 $generated@@893)
 :no-pattern ($generated $generated@@894)
 :no-pattern ($generated@@0 $generated@@894)
)))) (= ($generated@@578 $generated@@887 $generated@@888 $generated@@889 $generated@@891 $generated@@892) ($generated@@578 $generated@@887 $generated@@888 $generated@@890 $generated@@891 $generated@@892)))
 :pattern ( ($generated@@216 $generated@@889 $generated@@890) ($generated@@578 $generated@@887 $generated@@888 $generated@@890 $generated@@891 $generated@@892))
)))
(assert (forall (($generated@@896 T@U) ($generated@@897 T@U) ($generated@@898 T@U) ) (!  (=> (and (and (and (= (type $generated@@896) $generated@@247) (= (type $generated@@897) $generated@@79)) (= (type $generated@@898) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@235 $generated@@898) (and ($generated@@245 $generated@@896) (exists (($generated@@899 T@U) ) (!  (and (= (type $generated@@899) $generated@@79) ($generated@@90 $generated@@896 ($generated@@246 $generated@@897 $generated@@899) $generated@@898))
 :pattern ( ($generated@@90 $generated@@896 ($generated@@246 $generated@@897 $generated@@899) $generated@@898))
))))) ($generated@@410 ($generated@@254 $generated@@896) $generated@@897 $generated@@898))
 :pattern ( ($generated@@410 ($generated@@254 $generated@@896) $generated@@897 $generated@@898))
)))
(assert (forall (($generated@@900 T@U) ($generated@@901 T@U) ($generated@@902 T@U) ) (!  (=> (and (and (and (= (type $generated@@900) $generated@@247) (= (type $generated@@901) $generated@@79)) (= (type $generated@@902) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@235 $generated@@902) (and ($generated@@245 $generated@@900) (exists (($generated@@903 T@U) ) (!  (and (= (type $generated@@903) $generated@@79) ($generated@@90 $generated@@900 ($generated@@246 $generated@@903 $generated@@901) $generated@@902))
 :pattern ( ($generated@@90 $generated@@900 ($generated@@246 $generated@@903 $generated@@901) $generated@@902))
))))) ($generated@@410 ($generated@@255 $generated@@900) $generated@@901 $generated@@902))
 :pattern ( ($generated@@410 ($generated@@255 $generated@@900) $generated@@901 $generated@@902))
)))
(assert (forall (($generated@@904 T@U) ($generated@@905 T@U) ) (!  (=> (and (= (type $generated@@904) $generated@@159) (= (type $generated@@905) $generated@@159)) (= ($generated@@369 ($generated@@391 $generated@@904) ($generated@@391 $generated@@905)) ($generated@@391 ($generated@@369 $generated@@904 $generated@@905))))
 :pattern ( ($generated@@369 ($generated@@391 $generated@@904) ($generated@@391 $generated@@905)))
)))
(assert  (=> (<= 1 $generated@@267) (forall (($generated@@906 Int) ) (!  (=> (or ($generated@@270 $generated@@906) (and (not (= 1 $generated@@267)) (<= ($generated@@269 0) $generated@@906))) (= ($generated@@268 $generated@@906) (- $generated@@906 7)))
 :pattern ( ($generated@@268 $generated@@906))
))))
(assert (forall (($generated@@907 T@U) ($generated@@908 T@U) ) (!  (=> (and (= (type $generated@@907) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@908) $generated@@159)) (= ($generated@@526 $generated@@223 $generated@@46 $generated@@907 $generated@@806 $generated@@908) ($generated@@420 ($generated@@8 ($generated@@268 ($generated ($generated@@421 $generated@@2 $generated@@908)))))))
 :pattern ( ($generated@@526 $generated@@223 $generated@@46 $generated@@907 $generated@@806 $generated@@908))
)))
(assert (forall (($generated@@909 Int) ) (! (= ($generated@@420 ($generated@@8 ($generated@@269 $generated@@909))) ($generated@@391 ($generated@@420 ($generated@@8 $generated@@909))))
 :pattern ( ($generated@@420 ($generated@@8 ($generated@@269 $generated@@909))))
)))
(assert (forall (($generated@@910 T@U) ) (! (= ($generated@@420 ($generated@@391 $generated@@910)) ($generated@@391 ($generated@@420 $generated@@910)))
 :pattern ( ($generated@@420 ($generated@@391 $generated@@910)))
)))
(assert (forall (($generated@@911 T@U) ) (! (let (($generated@@912 ($generated@@435 (type $generated@@911))))
 (=> (and (= (type $generated@@911) ($generated@@434 $generated@@912)) (= ($generated@@433 $generated@@911) 0)) (= $generated@@911 ($generated@@432 $generated@@912))))
 :pattern ( ($generated@@433 $generated@@911))
)))
(assert (forall (($generated@@913 T@U) ($generated@@914 T@U) ($generated@@915 T@U) ) (! (let (($generated@@916 (type $generated@@914)))
 (=> (and (and (= (type $generated@@913) ($generated@@92 $generated@@916 $generated@@2)) (= (type $generated@@915) $generated@@2)) (<= 0 ($generated $generated@@915))) (= ($generated@@467 ($generated@@98 $generated@@913 $generated@@914 $generated@@915)) (+ (- ($generated@@467 $generated@@913) ($generated ($generated@@97 $generated@@913 $generated@@914))) ($generated $generated@@915)))))
 :pattern ( ($generated@@467 ($generated@@98 $generated@@913 $generated@@914 $generated@@915)))
)))
(assert (forall (($generated@@917 T@U) ($generated@@918 T@U) ($generated@@919 T@U) ($generated@@920 T@U) ($generated@@921 T@U) ($generated@@922 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@917) $generated@@79) (= (type $generated@@918) $generated@@79)) (= (type $generated@@919) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@920) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@921) $generated@@353)) (= (type $generated@@922) $generated@@159)) (and (and (and ($generated@@216 $generated@@919 $generated@@920) (and ($generated@@235 $generated@@919) ($generated@@235 $generated@@920))) (and ($generated@@160 $generated@@922 $generated@@917) ($generated@@152 $generated@@921 ($generated@@352 $generated@@917 $generated@@918)))) (forall (($generated@@923 T@U) ($generated@@924 T@U) ) (! (let (($generated@@925 ($generated@@82 (type $generated@@924))))
 (=> (and (and (= (type $generated@@923) $generated@@93) (= (type $generated@@924) ($generated@@81 $generated@@925))) (and (not (= $generated@@923 $generated@@150)) ($generated@@0 ($generated@@97 ($generated@@395 $generated@@917 $generated@@918 $generated@@919 $generated@@921 $generated@@922) ($generated@@420 $generated@@923))))) (= ($generated@@99 ($generated@@97 $generated@@919 $generated@@923) $generated@@924) ($generated@@99 ($generated@@97 $generated@@920 $generated@@923) $generated@@924))))
 :no-pattern (type $generated@@923)
 :no-pattern (type $generated@@924)
 :no-pattern ($generated $generated@@923)
 :no-pattern ($generated@@0 $generated@@923)
 :no-pattern ($generated $generated@@924)
 :no-pattern ($generated@@0 $generated@@924)
)))) (= ($generated@@395 $generated@@917 $generated@@918 $generated@@919 $generated@@921 $generated@@922) ($generated@@395 $generated@@917 $generated@@918 $generated@@920 $generated@@921 $generated@@922)))
 :pattern ( ($generated@@216 $generated@@919 $generated@@920) ($generated@@395 $generated@@917 $generated@@918 $generated@@920 $generated@@921 $generated@@922))
)))
(assert (forall (($generated@@926 T@U) ($generated@@927 T@U) ($generated@@928 T@U) ($generated@@929 T@U) ($generated@@930 T@U) ($generated@@931 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@926) $generated@@79) (= (type $generated@@927) $generated@@79)) (= (type $generated@@928) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@929) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@930) $generated@@353)) (= (type $generated@@931) $generated@@159)) (and (and (and ($generated@@216 $generated@@928 $generated@@929) (and ($generated@@235 $generated@@928) ($generated@@235 $generated@@929))) (and ($generated@@160 $generated@@931 $generated@@926) ($generated@@152 $generated@@930 ($generated@@352 $generated@@926 $generated@@927)))) (forall (($generated@@932 T@U) ($generated@@933 T@U) ) (! (let (($generated@@934 ($generated@@82 (type $generated@@933))))
 (=> (and (and (= (type $generated@@932) $generated@@93) (= (type $generated@@933) ($generated@@81 $generated@@934))) (and (not (= $generated@@932 $generated@@150)) ($generated@@0 ($generated@@97 ($generated@@395 $generated@@926 $generated@@927 $generated@@929 $generated@@930 $generated@@931) ($generated@@420 $generated@@932))))) (= ($generated@@99 ($generated@@97 $generated@@928 $generated@@932) $generated@@933) ($generated@@99 ($generated@@97 $generated@@929 $generated@@932) $generated@@933))))
 :no-pattern (type $generated@@932)
 :no-pattern (type $generated@@933)
 :no-pattern ($generated $generated@@932)
 :no-pattern ($generated@@0 $generated@@932)
 :no-pattern ($generated $generated@@933)
 :no-pattern ($generated@@0 $generated@@933)
)))) (= ($generated@@395 $generated@@926 $generated@@927 $generated@@928 $generated@@930 $generated@@931) ($generated@@395 $generated@@926 $generated@@927 $generated@@929 $generated@@930 $generated@@931)))
 :pattern ( ($generated@@216 $generated@@928 $generated@@929) ($generated@@395 $generated@@926 $generated@@927 $generated@@929 $generated@@930 $generated@@931))
)))
(assert (forall (($generated@@935 T@U) ($generated@@936 T@U) ($generated@@937 T@U) ($generated@@938 T@U) ($generated@@939 T@U) ($generated@@940 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@935) $generated@@79) (= (type $generated@@936) $generated@@79)) (= (type $generated@@937) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@938) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@939) $generated@@353)) (= (type $generated@@940) $generated@@159)) (and (and (and ($generated@@216 $generated@@937 $generated@@938) (and ($generated@@235 $generated@@937) ($generated@@235 $generated@@938))) (and ($generated@@160 $generated@@940 $generated@@935) ($generated@@152 $generated@@939 ($generated@@352 $generated@@935 $generated@@936)))) (forall (($generated@@941 T@U) ($generated@@942 T@U) ) (! (let (($generated@@943 ($generated@@82 (type $generated@@942))))
 (=> (and (and (= (type $generated@@941) $generated@@93) (= (type $generated@@942) ($generated@@81 $generated@@943))) (and (not (= $generated@@941 $generated@@150)) ($generated@@0 ($generated@@97 ($generated@@395 $generated@@935 $generated@@936 $generated@@937 $generated@@939 $generated@@940) ($generated@@420 $generated@@941))))) (= ($generated@@99 ($generated@@97 $generated@@937 $generated@@941) $generated@@942) ($generated@@99 ($generated@@97 $generated@@938 $generated@@941) $generated@@942))))
 :no-pattern (type $generated@@941)
 :no-pattern (type $generated@@942)
 :no-pattern ($generated $generated@@941)
 :no-pattern ($generated@@0 $generated@@941)
 :no-pattern ($generated $generated@@942)
 :no-pattern ($generated@@0 $generated@@942)
)))) (= ($generated@@526 $generated@@935 $generated@@936 $generated@@937 $generated@@939 $generated@@940) ($generated@@526 $generated@@935 $generated@@936 $generated@@938 $generated@@939 $generated@@940)))
 :pattern ( ($generated@@216 $generated@@937 $generated@@938) ($generated@@526 $generated@@935 $generated@@936 $generated@@938 $generated@@939 $generated@@940))
)))
(assert (forall (($generated@@944 T@U) ($generated@@945 T@U) ($generated@@946 T@U) ($generated@@947 T@U) ($generated@@948 T@U) ($generated@@949 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@944) $generated@@79) (= (type $generated@@945) $generated@@79)) (= (type $generated@@946) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@947) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@948) $generated@@353)) (= (type $generated@@949) $generated@@159)) (and (and (and ($generated@@216 $generated@@946 $generated@@947) (and ($generated@@235 $generated@@946) ($generated@@235 $generated@@947))) (and ($generated@@160 $generated@@949 $generated@@944) ($generated@@152 $generated@@948 ($generated@@352 $generated@@944 $generated@@945)))) (forall (($generated@@950 T@U) ($generated@@951 T@U) ) (! (let (($generated@@952 ($generated@@82 (type $generated@@951))))
 (=> (and (and (= (type $generated@@950) $generated@@93) (= (type $generated@@951) ($generated@@81 $generated@@952))) (and (not (= $generated@@950 $generated@@150)) ($generated@@0 ($generated@@97 ($generated@@395 $generated@@944 $generated@@945 $generated@@947 $generated@@948 $generated@@949) ($generated@@420 $generated@@950))))) (= ($generated@@99 ($generated@@97 $generated@@946 $generated@@950) $generated@@951) ($generated@@99 ($generated@@97 $generated@@947 $generated@@950) $generated@@951))))
 :no-pattern (type $generated@@950)
 :no-pattern (type $generated@@951)
 :no-pattern ($generated $generated@@950)
 :no-pattern ($generated@@0 $generated@@950)
 :no-pattern ($generated $generated@@951)
 :no-pattern ($generated@@0 $generated@@951)
)))) (= ($generated@@526 $generated@@944 $generated@@945 $generated@@946 $generated@@948 $generated@@949) ($generated@@526 $generated@@944 $generated@@945 $generated@@947 $generated@@948 $generated@@949)))
 :pattern ( ($generated@@216 $generated@@946 $generated@@947) ($generated@@526 $generated@@944 $generated@@945 $generated@@947 $generated@@948 $generated@@949))
)))
(assert (forall (($generated@@953 T@U) ($generated@@954 T@U) ) (!  (=> (and (= (type $generated@@953) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@954) $generated@@2)) ($generated@@90 $generated@@954 $generated@@46 $generated@@953))
 :pattern ( ($generated@@90 $generated@@954 $generated@@46 $generated@@953))
)))
(assert (forall (($generated@@955 T@U) ($generated@@956 T@U) ) (!  (=> (and (= (type $generated@@955) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@956) $generated@@3)) ($generated@@90 $generated@@956 $generated@@47 $generated@@955))
 :pattern ( ($generated@@90 $generated@@956 $generated@@47 $generated@@955))
)))
(assert (forall (($generated@@957 T@U) ($generated@@958 T@U) ) (!  (=> (and (= (type $generated@@957) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@958) $generated@@4)) ($generated@@90 $generated@@958 $generated@@44 $generated@@957))
 :pattern ( ($generated@@90 $generated@@958 $generated@@44 $generated@@957))
)))
(assert (forall (($generated@@959 T@U) ($generated@@960 T@U) ) (!  (=> (and (= (type $generated@@959) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@960) $generated@@700)) ($generated@@90 $generated@@960 $generated@@45 $generated@@959))
 :pattern ( ($generated@@90 $generated@@960 $generated@@45 $generated@@959))
)))
(assert (forall (($generated@@961 T@U) ($generated@@962 T@U) ) (!  (=> (and (= (type $generated@@961) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@962) $generated@@159)) ($generated@@90 $generated@@962 $generated@@48 $generated@@961))
 :pattern ( ($generated@@90 $generated@@962 $generated@@48 $generated@@961))
)))
(assert (forall (($generated@@963 T@U) ($generated@@964 T@U) ) (!  (=> (and (= (type $generated@@963) ($generated@@434 $generated@@159)) (= (type $generated@@964) $generated@@79)) (= ($generated@@152 $generated@@963 ($generated@@759 $generated@@964)) (forall (($generated@@965 Int) ) (!  (=> (and (<= 0 $generated@@965) (< $generated@@965 ($generated@@433 $generated@@963))) ($generated@@160 ($generated@@760 $generated@@963 $generated@@965) $generated@@964))
 :pattern ( ($generated@@760 $generated@@963 $generated@@965))
))))
 :pattern ( ($generated@@152 $generated@@963 ($generated@@759 $generated@@964)))
)))
(assert (forall (($generated@@967 T@U) ) (! (= (type ($generated@@966 $generated@@967)) ($generated@@161 ($generated@@92 $generated@@93 $generated@@94) $generated@@159 ($generated@@92 $generated@@159 $generated@@4)))
 :pattern ( ($generated@@966 $generated@@967))
)))
(assert (forall (($generated@@968 T@U) ($generated@@969 T@U) ($generated@@970 T@U) ) (!  (=> (and (and (= (type $generated@@968) ($generated@@92 $generated@@159 $generated@@4)) (= (type $generated@@969) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@970) $generated@@159)) (= ($generated@@157 ($generated@@966 $generated@@968) $generated@@969 $generated@@970) $generated@@968))
 :pattern ( ($generated@@157 ($generated@@966 $generated@@968) $generated@@969 $generated@@970))
)))
(assert (forall (($generated@@972 T@U) ($generated@@973 Int) ) (!  (=> (= (type $generated@@972) ($generated@@434 $generated@@159)) (=> (and (<= 0 $generated@@973) (< $generated@@973 ($generated@@433 $generated@@972))) (< ($generated@@817 ($generated@@421 $generated@@247 ($generated@@760 $generated@@972 $generated@@973))) ($generated@@971 $generated@@972))))
 :pattern ( ($generated@@817 ($generated@@421 $generated@@247 ($generated@@760 $generated@@972 $generated@@973))))
)))
(assert (forall (($generated@@974 T@U) ($generated@@975 T@U) ($generated@@976 T@U) ) (!  (=> (and (and (and (= (type $generated@@974) ($generated@@479 $generated@@159 $generated@@159)) (= (type $generated@@975) $generated@@79)) (= (type $generated@@976) $generated@@79)) ($generated@@152 $generated@@974 ($generated@@643 $generated@@975 $generated@@976))) (and (and ($generated@@152 ($generated@@477 $generated@@974) ($generated@@380 $generated@@975)) ($generated@@152 ($generated@@557 $generated@@974) ($generated@@380 $generated@@976))) ($generated@@152 ($generated@@609 $generated@@974) ($generated@@380 ($generated@@246 $generated@@975 $generated@@976)))))
 :pattern ( ($generated@@152 $generated@@974 ($generated@@643 $generated@@975 $generated@@976)))
)))
(assert (forall (($generated@@977 T@U) ($generated@@978 T@U) ($generated@@979 T@U) ) (!  (=> (and (and (and (= (type $generated@@977) ($generated@@497 $generated@@159 $generated@@159)) (= (type $generated@@978) $generated@@79)) (= (type $generated@@979) $generated@@79)) ($generated@@152 $generated@@977 ($generated@@651 $generated@@978 $generated@@979))) (and (and ($generated@@152 ($generated@@495 $generated@@977) ($generated@@385 $generated@@978)) ($generated@@152 ($generated@@568 $generated@@977) ($generated@@385 $generated@@979))) ($generated@@152 ($generated@@617 $generated@@977) ($generated@@385 ($generated@@246 $generated@@978 $generated@@979)))))
 :pattern ( ($generated@@152 $generated@@977 ($generated@@651 $generated@@978 $generated@@979)))
)))
(assert (forall (($generated@@980 T@U) ) (!  (=> (= (type $generated@@980) $generated@@2) ($generated@@152 $generated@@980 $generated@@46))
 :pattern ( ($generated@@152 $generated@@980 $generated@@46))
)))
(assert (forall (($generated@@981 T@U) ) (!  (=> (= (type $generated@@981) $generated@@3) ($generated@@152 $generated@@981 $generated@@47))
 :pattern ( ($generated@@152 $generated@@981 $generated@@47))
)))
(assert (forall (($generated@@982 T@U) ) (!  (=> (= (type $generated@@982) $generated@@4) ($generated@@152 $generated@@982 $generated@@44))
 :pattern ( ($generated@@152 $generated@@982 $generated@@44))
)))
(assert (forall (($generated@@983 T@U) ) (!  (=> (= (type $generated@@983) $generated@@700) ($generated@@152 $generated@@983 $generated@@45))
 :pattern ( ($generated@@152 $generated@@983 $generated@@45))
)))
(assert (forall (($generated@@984 T@U) ) (!  (=> (= (type $generated@@984) $generated@@159) ($generated@@152 $generated@@984 $generated@@48))
 :pattern ( ($generated@@152 $generated@@984 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@985 () Int)
(declare-fun $generated@@986 () T@U)
(declare-fun $generated@@987 () T@U)
(declare-fun $generated@@988 () Int)
(declare-fun $generated@@989 () Int)
(declare-fun $generated@@990 () T@U)
(declare-fun $generated@@991 () T@U)
(declare-fun $generated@@992 () T@U)
(declare-fun $generated@@993 () T@U)
(declare-fun $generated@@994 () Int)
(declare-fun $generated@@995 () T@U)
(declare-fun $generated@@996 () T@U)
(declare-fun $generated@@997 (T@U) Bool)
(declare-fun $generated@@998 () T@U)
(declare-fun $generated@@999 () T@U)
(declare-fun $generated@@1000 () T@U)
(declare-fun $generated@@1001 () T@U)
(declare-fun $generated@@1002 () Int)
(declare-fun $generated@@1003 () T@U)
(declare-fun $generated@@1004 () T@U)
(declare-fun $generated@@1005 () T@U)
(declare-fun $generated@@1006 () T@U)
(declare-fun $generated@@1007 () T@U)
(declare-fun $generated@@1008 () T@U)
(declare-fun $generated@@1009 () T@U)
(declare-fun $generated@@1010 () T@U)
(declare-fun $generated@@1011 () T@U)
(declare-fun $generated@@1012 () T@U)
(declare-fun $generated@@1013 () T@U)
(declare-fun $generated@@1014 () T@U)
(declare-fun $generated@@1015 () T@U)
(declare-fun $generated@@1016 () Bool)
(declare-fun $generated@@1017 () T@U)
(declare-fun $generated@@1018 () Bool)
(declare-fun $generated@@1019 () T@U)
(declare-fun $generated@@1020 () Bool)
(declare-fun $generated@@1021 () T@U)
(declare-fun $generated@@1022 () Bool)
(declare-fun $generated@@1023 () T@U)
(declare-fun $generated@@1024 () T@U)
(declare-fun $generated@@1025 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@993) $generated@@93) (= (type $generated@@992) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@995) $generated@@445)) (= (type $generated@@996) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@998) $generated@@93)) (= (type $generated@@991) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@999) $generated@@93)) (= (type $generated@@990) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@986) ($generated@@274 $generated@@93 $generated@@4))) (= (type $generated@@987) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@1000) ($generated@@274 $generated@@93 $generated@@4))) (= (type $generated@@1001) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@1003) $generated@@93)) (= (type $generated@@1004) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@1005) $generated@@93)) (= (type $generated@@1006) $generated@@93)) (= (type $generated@@1007) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@1008) $generated@@93)) (= (type $generated@@1009) $generated@@93)) (= (type $generated@@1010) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@1011) $generated@@93)) (= (type $generated@@1012) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@1013) $generated@@93)) (= (type $generated@@1014) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@1015) $generated@@93)) (= (type $generated@@1017) $generated@@93)) (= (type $generated@@1019) $generated@@93)) (= (type $generated@@1021) $generated@@93)) (= (type $generated@@1023) $generated@@93)) (= (type $generated@@1024) $generated@@93)) (= (type $generated@@1025) $generated@@93)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@1026 true))
(let (($generated@@1027  (=> (and (< $generated@@985 ($generated@@269 0)) (= (ControlFlow 0 15) 12)) $generated@@1026)))
(let (($generated@@1028  (=> (<= ($generated@@269 0) $generated@@985) (=> (and (= $generated@@986 ($generated@@340 $generated@@150 $generated@@987 $generated@@60 false)) (= $generated@@988 (+ $generated@@985 2))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (<= ($generated@@269 0) $generated@@988)) (=> (<= ($generated@@269 0) $generated@@988) (=> (= $generated@@989 (+ $generated@@985 2)) (=> (and ($generated@@152 ($generated@@8 $generated@@989) $generated@@223) (= (ControlFlow 0 13) 12)) $generated@@1026))))))))
(let (($generated@@1029  (=> (and ($generated@@235 $generated@@987) (or (= $generated@@990 $generated@@987) ($generated@@216 $generated@@990 $generated@@987))) (and (=> (= (ControlFlow 0 16) 13) $generated@@1028) (=> (= (ControlFlow 0 16) 15) $generated@@1027)))))
(let (($generated@@1030 true))
(let (($generated@@1031 true))
(let (($generated@@1032  (=> (and ($generated@@235 $generated@@991) (or (= $generated@@992 $generated@@991) ($generated@@216 $generated@@992 $generated@@991))) (and (=> (= (ControlFlow 0 8) 6) $generated@@1031) (=> (= (ControlFlow 0 8) 7) $generated@@1030)))))
(let (($generated@@1033  (=> (and (and (not (= $generated@@993 $generated@@150)) (= ($generated@@151 $generated@@993) ($generated@@149 $generated@@46))) (and (not ($generated@@0 ($generated@@99 ($generated@@97 $generated@@992 $generated@@993) $generated@@60))) (= ($generated@@148 $generated@@993) $generated@@994))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (forall (($generated@@1034 Int) )  (=> (and (<= 0 $generated@@1034) (< $generated@@1034 $generated@@994)) ($generated@@578 $generated@@46 $generated@@46 $generated@@992 ($generated@@391 ($generated@@444 ($generated@@594 ($generated@@527 ($generated@@419 $generated@@994) ($generated@@158 $generated@@46) ($generated@@966 ($generated@@440 ($generated@@590 false))))) ($generated@@822 $generated@@995))) ($generated@@420 ($generated@@8 $generated@@1034)))))) (=> (and (and (forall (($generated@@1035 Int) ) (!  (=> (and (<= 0 $generated@@1035) (< $generated@@1035 $generated@@994)) (= ($generated ($generated@@421 $generated@@2 ($generated@@99 ($generated@@97 $generated@@992 $generated@@993) ($generated@@665 $generated@@1035)))) ($generated ($generated@@421 $generated@@2 ($generated@@526 $generated@@46 $generated@@46 $generated@@992 ($generated@@391 ($generated@@444 ($generated@@594 ($generated@@527 ($generated@@419 $generated@@994) ($generated@@158 $generated@@46) ($generated@@966 ($generated@@440 ($generated@@590 false))))) ($generated@@822 $generated@@995))) ($generated@@420 ($generated@@8 $generated@@1035)))))))
 :pattern ( ($generated@@99 ($generated@@97 $generated@@992 $generated@@993) ($generated@@665 $generated@@1035)))
)) (= $generated@@996 ($generated@@98 $generated@@992 $generated@@993 ($generated@@100 ($generated@@97 $generated@@992 $generated@@993) $generated@@60 ($generated@@11 true))))) (and ($generated@@235 $generated@@996) ($generated@@997 $generated@@996))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= 0 ($generated@@269 100))) (=> (<= 0 ($generated@@269 100)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= 1 $generated@@267))) (=> (not (= 1 $generated@@267)) (=> (and (and (and (not (= $generated@@998 $generated@@150)) (= ($generated@@151 $generated@@998) ($generated@@149 $generated@@46))) (not ($generated@@0 ($generated@@99 ($generated@@97 $generated@@996 $generated@@998) $generated@@60)))) (and (= ($generated@@148 $generated@@998) ($generated@@269 100)) (= (ControlFlow 0 2) (- 0 1)))) (forall (($generated@@1036 Int) )  (=> (and (<= 0 $generated@@1036) (< $generated@@1036 ($generated@@269 100))) ($generated@@578 $generated@@223 $generated@@46 $generated@@996 $generated@@806 ($generated@@420 ($generated@@8 $generated@@1036)))))))))))))))
(let (($generated@@1037  (=> (and (and (not (= $generated@@999 $generated@@150)) (= ($generated@@151 $generated@@999) ($generated@@149 $generated@@46))) (and (not ($generated@@0 ($generated@@99 ($generated@@97 $generated@@990 $generated@@999) $generated@@60))) (= ($generated@@148 $generated@@999) ($generated@@269 10)))) (and (=> (= (ControlFlow 0 9) (- 0 11)) (forall (($generated@@1038 Int) )  (=> (and (<= 0 $generated@@1038) (< $generated@@1038 ($generated@@269 10))) ($generated@@578 $generated@@223 $generated@@223 $generated@@990 ($generated@@391 ($generated@@444 ($generated@@594 ($generated@@527 ($generated@@419 2) ($generated@@158 $generated@@223) ($generated@@966 ($generated@@440 ($generated@@590 false))))) ($generated@@822 $generated@@995))) ($generated@@420 ($generated@@8 $generated@@1038)))))) (=> (and (and (forall (($generated@@1039 Int) ) (!  (=> (and (<= 0 $generated@@1039) (< $generated@@1039 ($generated@@269 10))) (= ($generated ($generated@@421 $generated@@2 ($generated@@99 ($generated@@97 $generated@@990 $generated@@999) ($generated@@665 $generated@@1039)))) ($generated ($generated@@421 $generated@@2 ($generated@@526 $generated@@223 $generated@@223 $generated@@990 ($generated@@391 ($generated@@444 ($generated@@594 ($generated@@527 ($generated@@419 2) ($generated@@158 $generated@@223) ($generated@@966 ($generated@@440 ($generated@@590 false))))) ($generated@@822 $generated@@995))) ($generated@@420 ($generated@@8 $generated@@1039)))))))
 :pattern ( ($generated@@99 ($generated@@97 $generated@@990 $generated@@999) ($generated@@665 $generated@@1039)))
)) (= $generated@@992 ($generated@@98 $generated@@990 $generated@@999 ($generated@@100 ($generated@@97 $generated@@990 $generated@@999) $generated@@60 ($generated@@11 true))))) (and ($generated@@235 $generated@@992) ($generated@@997 $generated@@992))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (<= 0 $generated@@994)) (=> (<= 0 $generated@@994) (and (=> (= (ControlFlow 0 9) 8) $generated@@1032) (=> (= (ControlFlow 0 9) 2) $generated@@1033)))))))))
(let (($generated@@1040  (=> (and (= $generated@@1000 ($generated@@273 $generated@@150 $generated@@1001 $generated@@60 false)) (= $generated@@1002 ($generated@@269 10))) (=> (and (and (not (= $generated@@1003 $generated@@150)) (and ($generated@@152 $generated@@1003 $generated@@363) ($generated@@90 $generated@@1003 $generated@@363 $generated@@1001))) (and ($generated@@235 $generated@@1004) ($generated@@997 $generated@@1004))) (=> (and (and (and (and (not (= $generated@@1005 $generated@@150)) (and ($generated@@152 $generated@@1005 $generated@@363) ($generated@@90 $generated@@1005 $generated@@363 $generated@@1004))) (not ($generated@@0 ($generated@@99 ($generated@@97 $generated@@1001 $generated@@1005) $generated@@60)))) (and (forall (($generated@@1041 T@U) ) (!  (=> (= (type $generated@@1041) $generated@@93) (=> (and (not (= $generated@@1041 $generated@@150)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@1001 $generated@@1041) $generated@@60))) (= ($generated@@97 $generated@@1004 $generated@@1041) ($generated@@97 $generated@@1001 $generated@@1041))))
 :pattern ( ($generated@@97 $generated@@1004 $generated@@1041))
)) ($generated@@216 $generated@@1001 $generated@@1004))) (and (and (not (= $generated@@1006 $generated@@150)) (and ($generated@@152 $generated@@1006 $generated@@363) ($generated@@90 $generated@@1006 $generated@@363 $generated@@1001))) (and ($generated@@235 $generated@@1007) ($generated@@997 $generated@@1007)))) (=> (and (and (and (and (and (not (= $generated@@1008 $generated@@150)) (and ($generated@@152 $generated@@1008 $generated@@363) ($generated@@90 $generated@@1008 $generated@@363 $generated@@1007))) (not ($generated@@0 ($generated@@99 ($generated@@97 $generated@@1004 $generated@@1008) $generated@@60)))) (and (forall (($generated@@1042 T@U) ) (!  (=> (= (type $generated@@1042) $generated@@93) (=> (and (not (= $generated@@1042 $generated@@150)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@1004 $generated@@1042) $generated@@60))) (= ($generated@@97 $generated@@1007 $generated@@1042) ($generated@@97 $generated@@1004 $generated@@1042))))
 :pattern ( ($generated@@97 $generated@@1007 $generated@@1042))
)) ($generated@@513 $generated@@1004 $generated@@1007))) (and (and (not (= $generated@@1009 $generated@@150)) (= ($generated@@151 $generated@@1009) $generated@@232)) (and (not ($generated@@0 ($generated@@99 ($generated@@97 $generated@@1007 $generated@@1009) $generated@@60))) (= $generated@@1010 ($generated@@98 $generated@@1007 $generated@@1009 ($generated@@100 ($generated@@97 $generated@@1007 $generated@@1009) $generated@@60 ($generated@@11 true))))))) (and (and (and ($generated@@235 $generated@@1010) ($generated@@997 $generated@@1010)) (and (not (= $generated@@1011 $generated@@150)) (= ($generated@@151 $generated@@1011) $generated@@232))) (and (and (not ($generated@@0 ($generated@@99 ($generated@@97 $generated@@1010 $generated@@1011) $generated@@60))) (= $generated@@1012 ($generated@@98 $generated@@1010 $generated@@1011 ($generated@@100 ($generated@@97 $generated@@1010 $generated@@1011) $generated@@60 ($generated@@11 true))))) (and ($generated@@235 $generated@@1012) ($generated@@997 $generated@@1012))))) (and (=> (= (ControlFlow 0 17) (- 0 20)) (<= 0 ($generated@@269 10))) (=> (<= 0 ($generated@@269 10)) (=> (and (and (and (not (= $generated@@1013 $generated@@150)) (= ($generated@@151 $generated@@1013) ($generated@@149 $generated@@46))) (not ($generated@@0 ($generated@@99 ($generated@@97 $generated@@1012 $generated@@1013) $generated@@60)))) (and (and (= ($generated@@148 $generated@@1013) ($generated@@269 10)) (= $generated@@1014 ($generated@@98 $generated@@1012 $generated@@1013 ($generated@@100 ($generated@@97 $generated@@1012 $generated@@1013) $generated@@60 ($generated@@11 true))))) (and ($generated@@235 $generated@@1014) ($generated@@997 $generated@@1014)))) (and (=> (= (ControlFlow 0 17) (- 0 19)) (<= 0 $generated@@994)) (=> (<= 0 $generated@@994) (=> (and (and (and (not (= $generated@@1015 $generated@@150)) (= ($generated@@151 $generated@@1015) ($generated@@149 $generated@@46))) (not ($generated@@0 ($generated@@99 ($generated@@97 $generated@@1014 $generated@@1015) $generated@@60)))) (and (and (= ($generated@@148 $generated@@1015) $generated@@994) (= $generated@@990 ($generated@@98 $generated@@1014 $generated@@1015 ($generated@@100 ($generated@@97 $generated@@1014 $generated@@1015) $generated@@60 ($generated@@11 true))))) (and ($generated@@235 $generated@@990) ($generated@@997 $generated@@990)))) (and (=> (= (ControlFlow 0 17) (- 0 18)) (<= 0 ($generated@@269 10))) (=> (<= 0 ($generated@@269 10)) (and (=> (= (ControlFlow 0 17) 16) $generated@@1029) (=> (= (ControlFlow 0 17) 9) $generated@@1037))))))))))))))))
(let (($generated@@1043  (=> (and (and (and ($generated@@235 $generated@@1001) ($generated@@997 $generated@@1001)) (<= ($generated@@269 0) $generated@@994)) (and (and (=> $generated@@1016 (and ($generated@@152 $generated@@1017 $generated@@363) ($generated@@90 $generated@@1017 $generated@@363 $generated@@1001))) true) (and (=> $generated@@1018 (and ($generated@@152 $generated@@1019 $generated@@363) ($generated@@90 $generated@@1019 $generated@@363 $generated@@1001))) true))) (=> (and (and (and (and (=> $generated@@1020 (and ($generated@@152 $generated@@1021 $generated@@366) ($generated@@90 $generated@@1021 $generated@@366 $generated@@1001))) true) (and (=> $generated@@1022 (and ($generated@@152 $generated@@1023 $generated@@366) ($generated@@90 $generated@@1023 $generated@@366 $generated@@1001))) true)) (and (and ($generated@@152 $generated@@1024 ($generated@@240 $generated@@46)) ($generated@@90 $generated@@1024 ($generated@@240 $generated@@46) $generated@@1001)) true)) (and (and (and ($generated@@152 $generated@@1025 ($generated@@240 $generated@@46)) ($generated@@90 $generated@@1025 ($generated@@240 $generated@@46) $generated@@1001)) true) (and (= 2 $generated@@267) (= (ControlFlow 0 21) 17)))) $generated@@1040))))
$generated@@1043))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@T T@U T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (Int) Int)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@306 (T@U) Int)
(declare-fun $generated@@307 (T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@348 (T@U T@U) Bool)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@T) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 () T@T)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@515 (T@U Int) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@623 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 18)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@88 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@88) (= (type $generated@@231) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@88)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (= (type $generated@@237) $generated@@70))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@88) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@238 $generated@@237 $generated@@239) ($generated@@85 $generated@@238 $generated@@147 $generated@@239)))
 :pattern ( ($generated@@85 $generated@@238 $generated@@237 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@242 $generated@@243)) $generated@@161)
 :pattern ( ($generated@@240 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@70) (= (type $generated@@245) $generated@@70)) (= (type $generated@@246) $generated@@170)) (= (type $generated@@247) $generated@@170)) (= ($generated@@154 ($generated@@240 $generated@@246 $generated@@247) ($generated@@160 $generated@@244 $generated@@245))  (and ($generated@@241 $generated@@246 $generated@@244) ($generated@@241 $generated@@247 $generated@@245))))
 :pattern ( ($generated@@154 ($generated@@240 $generated@@246 $generated@@247) ($generated@@160 $generated@@244 $generated@@245)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@249 T@T) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@249 $generated@@250 $generated@@251)) ($generated@@72 $generated@@249))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250 $generated@@251))
)))
(assert (= ($generated@@248 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@252 $generated@@151)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@161) (= (type $generated@@254) $generated@@161)) (= ($generated@@167 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@167 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@70)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@258) $generated@@70)) (= ($generated@@154 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@170) ($generated@@0 ($generated@@92 $generated@@257 $generated@@259))) ($generated@@241 $generated@@259 $generated@@258))
 :pattern ( ($generated@@92 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@154 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@70)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@263) $generated@@70)) (= ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@170) ($generated@@0 ($generated@@92 $generated@@262 $generated@@264))) ($generated@@241 $generated@@264 $generated@@263))
 :pattern ( ($generated@@92 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 Int) ) (! (= ($generated@@265 $generated@@266) $generated@@266)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (let (($generated@@269 (type $generated@@268)))
(= (type ($generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= ($generated@@267 $generated@@270) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@70) (= (type $generated@@273) $generated@@70)) (= (type $generated@@274) $generated@@170)) (= (type $generated@@275) $generated@@170)) (= (type $generated@@276) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@276)) (= ($generated@@85 ($generated@@240 $generated@@274 $generated@@275) ($generated@@160 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@85 ($generated@@240 $generated@@274 $generated@@275) ($generated@@160 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@75)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@161) (= ($generated@@159 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@161) ($generated@@159 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@170) (= (type $generated@@282) $generated@@170)) (= $generated@@280 ($generated@@240 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@159 $generated@@280))
)))
(assert  (and (and (forall (($generated@@287 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@287)) 19)) (forall (($generated@@288 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
))) (forall (($generated@@289 T@T) ) (! (= (type ($generated@@283 $generated@@289)) ($generated@@285 $generated@@289))
 :pattern ( ($generated@@283 $generated@@289))
))))
(assert (forall (($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@290)) 0)
 :pattern ( ($generated@@283 $generated@@290))
)))
(assert ($generated@@252 $generated@@60))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@170)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@70) (= (type $generated@@295) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@271 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@85 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@271 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@296) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@297) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@298) $generated@@170)) (= (type $generated@@299) $generated@@70)) ($generated@@143 $generated@@296 $generated@@297)) ($generated@@271 $generated@@298 $generated@@299 $generated@@296)) ($generated@@271 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@143 $generated@@296 $generated@@297) ($generated@@271 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@300) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@301) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@303) $generated@@70)) ($generated@@143 $generated@@300 $generated@@301)) ($generated@@85 $generated@@302 $generated@@303 $generated@@300)) ($generated@@85 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@143 $generated@@300 $generated@@301) ($generated@@85 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@305) $generated@@88)) (=> (and (and ($generated@@152 $generated@@304) (and (not (= $generated@@305 $generated@@148)) (= ($generated@@153 $generated@@305) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@304 $generated@@305) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@304 $generated@@305) $generated@@151) $generated@@46 $generated@@304)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@304 $generated@@305) $generated@@151))
)))
(assert (forall (($generated@@308 T@T) ) (! (= (type ($generated@@307 $generated@@308)) ($generated@@87 $generated@@308 $generated@@2))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@90 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@87 $generated@@310 $generated@@2)) (and (= (= ($generated@@306 $generated@@309) 0) (= $generated@@309 ($generated@@307 $generated@@310))) (=> (not (= ($generated@@306 $generated@@309) 0)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) (< 0 ($generated ($generated@@92 $generated@@309 $generated@@311))))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@306 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 20)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@87 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@92 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@92 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 21)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@87 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@92 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@92 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@350) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@348 $generated@@349 $generated@@350)) (and ($generated@@143 $generated@@349 $generated@@350) (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@73 (type $generated@@352))))
 (=> (and (and (= (type $generated@@351) $generated@@88) (= (type $generated@@352) ($generated@@72 $generated@@353))) (not ($generated@@252 $generated@@352))) (= ($generated@@94 ($generated@@92 $generated@@349 $generated@@351) $generated@@352) ($generated@@94 ($generated@@92 $generated@@350 $generated@@351) $generated@@352))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@350 $generated@@351) $generated@@352))
))))
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@90 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@87 $generated@@355 $generated@@2)) (= ($generated@@176 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@92 $generated@@354 $generated@@356))) (<= ($generated ($generated@@92 $generated@@354 $generated@@356)) ($generated@@306 $generated@@354))))
 :pattern ( ($generated@@92 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@176 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@170) ($generated@@241 $generated@@360 $generated@@147)) (and (= ($generated@@291 ($generated@@357 $generated@@88 $generated@@360)) $generated@@360) ($generated@@154 ($generated@@357 $generated@@88 $generated@@360) $generated@@147)))
 :pattern ( ($generated@@241 $generated@@360 $generated@@147))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@170) ($generated@@241 $generated@@361 $generated@@237)) (and (= ($generated@@291 ($generated@@357 $generated@@88 $generated@@361)) $generated@@361) ($generated@@154 ($generated@@357 $generated@@88 $generated@@361) $generated@@237)))
 :pattern ( ($generated@@241 $generated@@361 $generated@@237))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@88) (= ($generated@@154 $generated@@362 $generated@@237)  (and ($generated@@154 $generated@@362 $generated@@147) (not (= $generated@@362 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@362 $generated@@237))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@316 (type $generated@@363))))
(let (($generated@@365 ($generated@@315 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@314 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@313 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@92 ($generated@@312 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@312 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@316 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@87 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@316 (type $generated@@370))))
(let (($generated@@372 ($generated@@315 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@314 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@313 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@92 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@334 (type $generated@@374))))
(let (($generated@@376 ($generated@@333 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@332 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@331 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@92 ($generated@@330 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@330 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@334 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@87 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@334 (type $generated@@381))))
(let (($generated@@383 ($generated@@333 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@332 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@331 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@92 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@386) $generated@@70)) (= ($generated@@154 $generated@@385 ($generated@@175 $generated@@386)) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@385 $generated@@387)))) ($generated@@241 $generated@@387 $generated@@386))
 :pattern ( ($generated@@92 $generated@@385 $generated@@387))
))))
 :pattern ( ($generated@@154 $generated@@385 ($generated@@175 $generated@@386)))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@389) $generated@@70)) (= (type $generated@@390) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@388 ($generated@@255 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@170) ($generated@@0 ($generated@@92 $generated@@388 $generated@@391))) ($generated@@271 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@92 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@85 $generated@@388 ($generated@@255 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@393) $generated@@70)) (= (type $generated@@394) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@392 ($generated@@260 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@170) ($generated@@0 ($generated@@92 $generated@@392 $generated@@395))) ($generated@@271 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@92 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@85 $generated@@392 ($generated@@260 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(= ($generated ($generated@@92 ($generated@@307 $generated@@397) $generated@@396)) 0))
 :pattern ( (let (($generated@@397 (type $generated@@396)))
($generated@@92 ($generated@@307 $generated@@397) $generated@@396)))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@316 (type $generated@@401))))
(let (($generated@@403 ($generated@@315 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@87 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@314 $generated@@170 $generated@@170)) (= (type $generated@@405) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@92 ($generated@@312 $generated@@404) ($generated@@168 ($generated@@357 $generated@@161 $generated@@405)))) (= ($generated@@92 ($generated@@399 $generated@@404) ($generated@@168 ($generated@@357 $generated@@161 $generated@@405))) ($generated@@169 ($generated@@357 $generated@@161 $generated@@405))))))
 :pattern ( ($generated@@92 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@334 (type $generated@@409))))
(let (($generated@@411 ($generated@@333 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@87 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@332 $generated@@170 $generated@@170)) (= (type $generated@@413) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@92 ($generated@@330 $generated@@412) ($generated@@168 ($generated@@357 $generated@@161 $generated@@413)))) (= ($generated@@92 ($generated@@407 $generated@@412) ($generated@@168 ($generated@@357 $generated@@161 $generated@@413))) ($generated@@169 ($generated@@357 $generated@@161 $generated@@413))))))
 :pattern ( ($generated@@92 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@315 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@314 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@92 ($generated@@367 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@92 ($generated@@312 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@92 ($generated@@399 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@92 ($generated@@312 $generated@@414) $generated@@418))
 :pattern ( ($generated@@92 ($generated@@399 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@92 ($generated@@367 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@333 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@332 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@92 ($generated@@378 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@92 ($generated@@330 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@92 ($generated@@407 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@92 ($generated@@330 $generated@@419) $generated@@423))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@92 ($generated@@378 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@70)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@314 $generated@@170 $generated@@170)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) $generated@@70)) (= (type $generated@@430) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@312 $generated@@427) $generated@@431))) (and ($generated@@271 ($generated@@92 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@271 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@92 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@92 ($generated@@312 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@85 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@332 $generated@@170 $generated@@170)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) $generated@@70)) (= (type $generated@@438) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@330 $generated@@435) $generated@@439))) (and ($generated@@271 ($generated@@92 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@271 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@92 ($generated@@330 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@85 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@440) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@441) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@442) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@440 $generated@@442))) (and ($generated@@143 $generated@@440 $generated@@441) ($generated@@143 $generated@@441 $generated@@442))) ($generated@@143 $generated@@440 $generated@@442))
 :pattern ( ($generated@@143 $generated@@440 $generated@@441) ($generated@@143 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@T) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@87 $generated@@444 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@334 (type $generated@@445))))
(let (($generated@@447 ($generated@@333 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@332 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@331 $generated@@447 $generated@@446)) (= ($generated@@330 $generated@@445) ($generated@@443 $generated@@447))))))
 :pattern ( ($generated@@330 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@334 (type $generated@@448))))
(let (($generated@@450 ($generated@@333 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@332 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@331 $generated@@450 $generated@@449)) (= ($generated@@378 $generated@@448) ($generated@@443 $generated@@449))))))
 :pattern ( ($generated@@378 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@334 (type $generated@@451))))
(let (($generated@@453 ($generated@@333 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@332 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@331 $generated@@453 $generated@@452)) (= ($generated@@406 $generated@@451) ($generated@@443 $generated@@170))))))
 :pattern ( ($generated@@406 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@316 (type $generated@@454))))
(let (($generated@@456 ($generated@@315 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@314 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@313 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@170) (= (type $generated@@458) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@398 $generated@@454) ($generated@@291 ($generated@@240 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@398 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@334 (type $generated@@459))))
(let (($generated@@461 ($generated@@333 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@332 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@331 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@170) (= (type $generated@@463) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@406 $generated@@459) ($generated@@291 ($generated@@240 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@406 $generated@@459))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@76)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@T) ) (!  (=> (and (= (type $generated@@466) $generated@@76) (= (type $generated@@467) $generated@@74)) (and (= ($generated@@464 ($generated@@248 $generated@@468 $generated@@466 $generated@@467)) $generated@@466) (= ($generated@@83 ($generated@@248 $generated@@468 $generated@@466 $generated@@467)) $generated@@467)))
 :pattern ( ($generated@@248 $generated@@468 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@170) ($generated@@241 $generated@@469 $generated@@46)) (and (= ($generated@@291 ($generated@@357 $generated@@2 $generated@@469)) $generated@@469) ($generated@@154 ($generated@@357 $generated@@2 $generated@@469) $generated@@46)))
 :pattern ( ($generated@@241 $generated@@469 $generated@@46))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@170) ($generated@@241 $generated@@470 $generated@@47)) (and (= ($generated@@291 ($generated@@357 $generated@@3 $generated@@470)) $generated@@470) ($generated@@154 ($generated@@357 $generated@@3 $generated@@470) $generated@@47)))
 :pattern ( ($generated@@241 $generated@@470 $generated@@47))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@170) ($generated@@241 $generated@@471 $generated@@44)) (and (= ($generated@@291 ($generated@@357 $generated@@4 $generated@@471)) $generated@@471) ($generated@@154 ($generated@@357 $generated@@4 $generated@@471) $generated@@44)))
 :pattern ( ($generated@@241 $generated@@471 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@472) 22))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@170) ($generated@@241 $generated@@473 $generated@@45)) (and (= ($generated@@291 ($generated@@357 $generated@@472 $generated@@473)) $generated@@473) ($generated@@154 ($generated@@357 $generated@@472 $generated@@473) $generated@@45)))
 :pattern ( ($generated@@241 $generated@@473 $generated@@45))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@70) (= ($generated@@241 ($generated@@291 $generated@@474) $generated@@475) ($generated@@154 $generated@@474 $generated@@475)))
 :pattern ( ($generated@@241 ($generated@@291 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@90 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@87 $generated@@477 $generated@@2)) (<= 0 ($generated@@306 $generated@@476))))
 :pattern ( ($generated@@306 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@286 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@285 $generated@@479)) (<= 0 ($generated@@284 $generated@@478))))
 :pattern ( ($generated@@284 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@480 ($generated@@424 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@424 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@484 ($generated@@424 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@424 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@70) (= (type $generated@@489) $generated@@70)) (= ($generated@@81 ($generated@@424 $generated@@488 $generated@@489)) $generated@@58))
 :pattern ( ($generated@@424 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@70) (= (type $generated@@493) $generated@@70)) (= ($generated@@490 ($generated@@432 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@432 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@70)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@494 ($generated@@432 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@432 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@70) (= (type $generated@@499) $generated@@70)) (= ($generated@@81 ($generated@@432 $generated@@498 $generated@@499)) $generated@@59))
 :pattern ( ($generated@@432 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@170) (= (type $generated@@501) $generated@@170)) (= ($generated@@277 ($generated@@240 $generated@@500 $generated@@501)) $generated@@62))
 :pattern ( ($generated@@240 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@70)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@70) (= (type $generated@@505) $generated@@70)) (= ($generated@@502 ($generated@@160 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@160 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@70)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@70) (= (type $generated@@509) $generated@@70)) (= ($generated@@506 ($generated@@160 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@160 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@170) (= (type $generated@@511) $generated@@170)) (= ($generated@@168 ($generated@@240 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@240 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@170) (= (type $generated@@513) $generated@@170)) (= ($generated@@169 ($generated@@240 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@240 $generated@@512 $generated@@513))
)))
(assert  (and (forall (($generated@@516 T@U) ) (! (= (type ($generated@@514 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@514 $generated@@516))
)) (forall (($generated@@517 T@U) ($generated@@518 Int) ) (! (let (($generated@@519 ($generated@@286 (type $generated@@517))))
(= (type ($generated@@515 $generated@@517 $generated@@518)) $generated@@519))
 :pattern ( ($generated@@515 $generated@@517 $generated@@518))
))))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@285 $generated@@170)) (= (type $generated@@521) $generated@@70)) (= (type $generated@@522) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@520 ($generated@@514 $generated@@521) $generated@@522) (forall (($generated@@523 Int) ) (!  (=> (and (<= 0 $generated@@523) (< $generated@@523 ($generated@@284 $generated@@520))) ($generated@@271 ($generated@@515 $generated@@520 $generated@@523) $generated@@521 $generated@@522))
 :pattern ( ($generated@@515 $generated@@520 $generated@@523))
))))
 :pattern ( ($generated@@85 $generated@@520 ($generated@@514 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@525 Int) ) (! (= ($generated@@524 ($generated@@86 $generated@@525)) $generated@@525)
 :pattern ( ($generated@@86 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@70)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@526 ($generated@@255 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@255 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@70) (= ($generated@@81 ($generated@@255 $generated@@529)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@70)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@530 ($generated@@260 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@260 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@81 ($generated@@260 $generated@@533)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@70)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@534 ($generated@@175 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@175 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@537)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@70)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@70) (= ($generated@@538 ($generated@@514 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@514 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@81 ($generated@@514 $generated@@541)) $generated@@57))
 :pattern ( ($generated@@514 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
(= ($generated@@357 $generated@@543 ($generated@@291 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@291 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@314 $generated@@170 $generated@@170)) (= (type $generated@@545) $generated@@70)) (= (type $generated@@546) $generated@@70)) (= ($generated@@154 $generated@@544 ($generated@@424 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@312 $generated@@544) $generated@@547))) (and ($generated@@241 ($generated@@92 ($generated@@399 $generated@@544) $generated@@547) $generated@@546) ($generated@@241 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@92 ($generated@@399 $generated@@544) $generated@@547))
 :pattern ( ($generated@@92 ($generated@@312 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@154 $generated@@544 ($generated@@424 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@332 $generated@@170 $generated@@170)) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@70)) (= ($generated@@154 $generated@@548 ($generated@@432 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@330 $generated@@548) $generated@@551))) (and ($generated@@241 ($generated@@92 ($generated@@407 $generated@@548) $generated@@551) $generated@@550) ($generated@@241 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@548) $generated@@551))
 :pattern ( ($generated@@92 ($generated@@330 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@154 $generated@@548 ($generated@@432 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@170) (= (type $generated@@555) $generated@@170)) (< ($generated@@552 $generated@@554) ($generated@@553 ($generated@@240 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@240 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@170) (= (type $generated@@557) $generated@@170)) (< ($generated@@552 $generated@@557) ($generated@@553 ($generated@@240 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@240 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@170) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) $generated@@70)) ($generated@@241 $generated@@558 ($generated@@424 $generated@@559 $generated@@560))) (and (= ($generated@@291 ($generated@@357 ($generated@@314 $generated@@170 $generated@@170) $generated@@558)) $generated@@558) ($generated@@154 ($generated@@357 ($generated@@314 $generated@@170 $generated@@170) $generated@@558) ($generated@@424 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@241 $generated@@558 ($generated@@424 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@170) (= (type $generated@@562) $generated@@70)) (= (type $generated@@563) $generated@@70)) ($generated@@241 $generated@@561 ($generated@@432 $generated@@562 $generated@@563))) (and (= ($generated@@291 ($generated@@357 ($generated@@332 $generated@@170 $generated@@170) $generated@@561)) $generated@@561) ($generated@@154 ($generated@@357 ($generated@@332 $generated@@170 $generated@@170) $generated@@561) ($generated@@432 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@241 $generated@@561 ($generated@@432 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@70) (= (type $generated@@565) $generated@@70)) (= (type $generated@@566) $generated@@170)) ($generated@@241 $generated@@566 ($generated@@160 $generated@@564 $generated@@565))) (and (= ($generated@@291 ($generated@@357 $generated@@161 $generated@@566)) $generated@@566) ($generated@@154 ($generated@@357 $generated@@161 $generated@@566) ($generated@@160 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@241 $generated@@566 ($generated@@160 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@92 ($generated@@443 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@92 ($generated@@443 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@70) (= (type $generated@@572) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@160 $generated@@571 $generated@@572)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@161) (= ($generated@@552 ($generated@@291 $generated@@573)) ($generated@@553 $generated@@573)))
 :pattern ( ($generated@@552 ($generated@@291 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@170) ($generated@@241 $generated@@574 ($generated@@86 0))) (and (= ($generated@@291 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@154 ($generated@@357 ($generated@@87 $generated@@170 $generated@@4) $generated@@574) ($generated@@86 0))))
 :pattern ( ($generated@@241 $generated@@574 ($generated@@86 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@70)) ($generated@@241 $generated@@575 ($generated@@255 $generated@@576))) (and (= ($generated@@291 ($generated@@357 ($generated@@87 $generated@@170 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@357 ($generated@@87 $generated@@170 $generated@@4) $generated@@575) ($generated@@255 $generated@@576))))
 :pattern ( ($generated@@241 $generated@@575 ($generated@@255 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@241 $generated@@577 ($generated@@260 $generated@@578))) (and (= ($generated@@291 ($generated@@357 ($generated@@87 $generated@@170 $generated@@4) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@357 ($generated@@87 $generated@@170 $generated@@4) $generated@@577) ($generated@@260 $generated@@578))))
 :pattern ( ($generated@@241 $generated@@577 ($generated@@260 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@241 $generated@@579 ($generated@@175 $generated@@580))) (and (= ($generated@@291 ($generated@@357 ($generated@@87 $generated@@170 $generated@@2) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@357 ($generated@@87 $generated@@170 $generated@@2) $generated@@579) ($generated@@175 $generated@@580))))
 :pattern ( ($generated@@241 $generated@@579 ($generated@@175 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@170) (= (type $generated@@582) $generated@@70)) ($generated@@241 $generated@@581 ($generated@@514 $generated@@582))) (and (= ($generated@@291 ($generated@@357 ($generated@@285 $generated@@170) $generated@@581)) $generated@@581) ($generated@@154 ($generated@@357 ($generated@@285 $generated@@170) $generated@@581) ($generated@@514 $generated@@582))))
 :pattern ( ($generated@@241 $generated@@581 ($generated@@514 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
 (=> (and (and (and (= (type $generated@@583) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@584) $generated@@88)) (= (type $generated@@585) ($generated@@72 $generated@@587))) ($generated@@152 ($generated@@93 $generated@@583 $generated@@584 ($generated@@95 ($generated@@92 $generated@@583 $generated@@584) $generated@@585 $generated@@586)))) ($generated@@143 $generated@@583 ($generated@@93 $generated@@583 $generated@@584 ($generated@@95 ($generated@@92 $generated@@583 $generated@@584) $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@93 $generated@@583 $generated@@584 ($generated@@95 ($generated@@92 $generated@@583 $generated@@584) $generated@@585 $generated@@586)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@569 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@237) $generated@@66))
(assert (= ($generated@@569 $generated@@237) $generated@@68))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@588 ($generated@@175 $generated@@589) $generated@@590) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@588 $generated@@591)))) ($generated@@271 $generated@@591 $generated@@589 $generated@@590))
 :pattern ( ($generated@@92 $generated@@588 $generated@@591))
))))
 :pattern ( ($generated@@85 $generated@@588 ($generated@@175 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@161) (= (type $generated@@593) $generated@@70)) (= (type $generated@@594) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@594) (and ($generated@@159 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@70) ($generated@@85 $generated@@592 ($generated@@160 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@85 $generated@@592 ($generated@@160 $generated@@593 $generated@@595) $generated@@594))
))))) ($generated@@271 ($generated@@168 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@271 ($generated@@168 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@161) (= (type $generated@@597) $generated@@70)) (= (type $generated@@598) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@598) (and ($generated@@159 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@70) ($generated@@85 $generated@@596 ($generated@@160 $generated@@599 $generated@@597) $generated@@598))
 :pattern ( ($generated@@85 $generated@@596 ($generated@@160 $generated@@599 $generated@@597) $generated@@598))
))))) ($generated@@271 ($generated@@169 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@271 ($generated@@169 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@170) (= (type $generated@@601) $generated@@170)) (= ($generated@@240 ($generated@@267 $generated@@600) ($generated@@267 $generated@@601)) ($generated@@267 ($generated@@240 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@240 ($generated@@267 $generated@@600) ($generated@@267 $generated@@601)))
)))
(assert (forall (($generated@@602 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@265 $generated@@602))) ($generated@@267 ($generated@@291 ($generated@@8 $generated@@602))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@265 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ) (! (= ($generated@@291 ($generated@@267 $generated@@603)) ($generated@@267 ($generated@@291 $generated@@603)))
 :pattern ( ($generated@@291 ($generated@@267 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 ($generated@@286 (type $generated@@604))))
 (=> (and (= (type $generated@@604) ($generated@@285 $generated@@605)) (= ($generated@@284 $generated@@604) 0)) (= $generated@@604 ($generated@@283 $generated@@605))))
 :pattern ( ($generated@@284 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@607)))
 (=> (and (and (= (type $generated@@606) ($generated@@87 $generated@@609 $generated@@2)) (= (type $generated@@608) $generated@@2)) (<= 0 ($generated $generated@@608))) (= ($generated@@306 ($generated@@93 $generated@@606 $generated@@607 $generated@@608)) (+ (- ($generated@@306 $generated@@606) ($generated ($generated@@92 $generated@@606 $generated@@607))) ($generated $generated@@608)))))
 :pattern ( ($generated@@306 ($generated@@93 $generated@@606 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@611) $generated@@2)) ($generated@@85 $generated@@611 $generated@@46 $generated@@610))
 :pattern ( ($generated@@85 $generated@@611 $generated@@46 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@613) $generated@@3)) ($generated@@85 $generated@@613 $generated@@47 $generated@@612))
 :pattern ( ($generated@@85 $generated@@613 $generated@@47 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@615) $generated@@4)) ($generated@@85 $generated@@615 $generated@@44 $generated@@614))
 :pattern ( ($generated@@85 $generated@@615 $generated@@44 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@617) $generated@@472)) ($generated@@85 $generated@@617 $generated@@45 $generated@@616))
 :pattern ( ($generated@@85 $generated@@617 $generated@@45 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@619) $generated@@170)) ($generated@@85 $generated@@619 $generated@@48 $generated@@618))
 :pattern ( ($generated@@85 $generated@@619 $generated@@48 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@285 $generated@@170)) (= (type $generated@@621) $generated@@70)) (= ($generated@@154 $generated@@620 ($generated@@514 $generated@@621)) (forall (($generated@@622 Int) ) (!  (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@284 $generated@@620))) ($generated@@241 ($generated@@515 $generated@@620 $generated@@622) $generated@@621))
 :pattern ( ($generated@@515 $generated@@620 $generated@@622))
))))
 :pattern ( ($generated@@154 $generated@@620 ($generated@@514 $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 Int) ) (!  (=> (= (type $generated@@624) ($generated@@285 $generated@@170)) (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@284 $generated@@624))) (< ($generated@@553 ($generated@@357 $generated@@161 ($generated@@515 $generated@@624 $generated@@625))) ($generated@@623 $generated@@624))))
 :pattern ( ($generated@@553 ($generated@@357 $generated@@161 ($generated@@515 $generated@@624 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@314 $generated@@170 $generated@@170)) (= (type $generated@@627) $generated@@70)) (= (type $generated@@628) $generated@@70)) ($generated@@154 $generated@@626 ($generated@@424 $generated@@627 $generated@@628))) (and (and ($generated@@154 ($generated@@312 $generated@@626) ($generated@@255 $generated@@627)) ($generated@@154 ($generated@@367 $generated@@626) ($generated@@255 $generated@@628))) ($generated@@154 ($generated@@398 $generated@@626) ($generated@@255 ($generated@@160 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@154 $generated@@626 ($generated@@424 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@332 $generated@@170 $generated@@170)) (= (type $generated@@630) $generated@@70)) (= (type $generated@@631) $generated@@70)) ($generated@@154 $generated@@629 ($generated@@432 $generated@@630 $generated@@631))) (and (and ($generated@@154 ($generated@@330 $generated@@629) ($generated@@260 $generated@@630)) ($generated@@154 ($generated@@378 $generated@@629) ($generated@@260 $generated@@631))) ($generated@@154 ($generated@@406 $generated@@629) ($generated@@260 ($generated@@160 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@154 $generated@@629 ($generated@@432 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@2) ($generated@@154 $generated@@632 $generated@@46))
 :pattern ( ($generated@@154 $generated@@632 $generated@@46))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@3) ($generated@@154 $generated@@633 $generated@@47))
 :pattern ( ($generated@@154 $generated@@633 $generated@@47))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@4) ($generated@@154 $generated@@634 $generated@@44))
 :pattern ( ($generated@@154 $generated@@634 $generated@@44))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@472) ($generated@@154 $generated@@635 $generated@@45))
 :pattern ( ($generated@@154 $generated@@635 $generated@@45))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@170) ($generated@@154 $generated@@636 $generated@@48))
 :pattern ( ($generated@@154 $generated@@636 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 (T@U) Bool)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () Bool)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@637) ($generated@@183 $generated@@88 $generated@@4)) (= (type $generated@@638) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@639) $generated@@88)) (= (type $generated@@640) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@643) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@644) $generated@@88)) (= (type $generated@@645) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@647) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@649) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@651  (=> (= $generated@@637 ($generated@@182 $generated@@148 $generated@@638 $generated@@60 false)) (=> (and (not (= $generated@@639 $generated@@148)) (= ($generated@@153 $generated@@639) $generated@@147)) (=> (and (and (not ($generated@@0 ($generated@@94 ($generated@@92 $generated@@638 $generated@@639) $generated@@60))) (= $generated@@640 ($generated@@93 $generated@@638 $generated@@639 ($generated@@95 ($generated@@92 $generated@@638 $generated@@639) $generated@@60 ($generated@@11 true))))) (and ($generated@@152 $generated@@640) ($generated@@641 $generated@@640))) (and (=> (= (ControlFlow 0 2) (- 0 12)) true) (and (=> (= (ControlFlow 0 2) (- 0 11)) (not (= $generated@@639 $generated@@148))) (=> (not (= $generated@@639 $generated@@148)) (and (=> (= (ControlFlow 0 2) (- 0 10)) ($generated@@0 ($generated@@181 $generated@@637 $generated@@639 $generated@@151))) (=> ($generated@@0 ($generated@@181 $generated@@637 $generated@@639 $generated@@151)) (=> (= $generated@@642 ($generated@@265 15)) (=> (and (= $generated@@643 ($generated@@93 $generated@@640 $generated@@639 ($generated@@95 ($generated@@92 $generated@@640 $generated@@639) $generated@@151 ($generated@@8 $generated@@642)))) ($generated@@152 $generated@@643)) (and (=> (= (ControlFlow 0 2) (- 0 9)) true) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@639 $generated@@148))) (=> (and (not (= $generated@@644 $generated@@148)) (= ($generated@@153 $generated@@644) $generated@@147)) (=> (and (and (not ($generated@@0 ($generated@@94 ($generated@@92 $generated@@643 $generated@@644) $generated@@60))) (= $generated@@645 ($generated@@93 $generated@@643 $generated@@644 ($generated@@95 ($generated@@92 $generated@@643 $generated@@644) $generated@@60 ($generated@@11 true))))) (and ($generated@@152 $generated@@645) ($generated@@641 $generated@@645))) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= $generated@@639 $generated@@148))) (=> (not (= $generated@@639 $generated@@148)) (=> (= $generated@@646 ($generated ($generated@@94 ($generated@@92 $generated@@645 $generated@@639) $generated@@151))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 ($generated@@73 (type $generated@@653))))
 (=> (and (= (type $generated@@652) $generated@@88) (= (type $generated@@653) ($generated@@72 $generated@@654))) (=> (and (and (not (= $generated@@652 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@645 $generated@@652) $generated@@60))) (= $generated@@652 $generated@@644)) ($generated@@0 ($generated@@181 $generated@@637 $generated@@652 $generated@@653)))))
 :no-pattern (type $generated@@652)
 :no-pattern (type $generated@@653)
 :no-pattern ($generated $generated@@652)
 :no-pattern ($generated@@0 $generated@@652)
 :no-pattern ($generated $generated@@653)
 :no-pattern ($generated@@0 $generated@@653)
))) (=> (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (! (let (($generated@@657 ($generated@@73 (type $generated@@656))))
 (=> (and (= (type $generated@@655) $generated@@88) (= (type $generated@@656) ($generated@@72 $generated@@657))) (=> (and (and (not (= $generated@@655 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@645 $generated@@655) $generated@@60))) (= $generated@@655 $generated@@644)) ($generated@@0 ($generated@@181 $generated@@637 $generated@@655 $generated@@656)))))
 :no-pattern (type $generated@@655)
 :no-pattern (type $generated@@656)
 :no-pattern ($generated $generated@@655)
 :no-pattern ($generated@@0 $generated@@655)
 :no-pattern ($generated $generated@@656)
 :no-pattern ($generated@@0 $generated@@656)
)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= $generated@@646 ($generated@@265 15))) (=> (= $generated@@646 ($generated@@265 15)) (=> (and (and (and ($generated@@152 $generated@@647) ($generated@@641 $generated@@647)) (= ($generated ($generated@@94 ($generated@@92 $generated@@647 $generated@@644) $generated@@151)) (+ $generated@@646 1))) (and (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@88) (=> (and (not (= $generated@@658 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@645 $generated@@658) $generated@@60))) (or (= ($generated@@92 $generated@@647 $generated@@658) ($generated@@92 $generated@@645 $generated@@658)) (= $generated@@658 $generated@@644))))
 :pattern ( ($generated@@92 $generated@@647 $generated@@658))
)) ($generated@@143 $generated@@645 $generated@@647))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@644 $generated@@148)))))))))))))))))))))))))))))
(let (($generated@@659  (=> (and ($generated@@152 $generated@@638) ($generated@@641 $generated@@638)) (=> (and (and (=> $generated@@648 (and ($generated@@154 $generated@@649 $generated@@237) ($generated@@85 $generated@@649 $generated@@237 $generated@@638))) true) (and (= 2 $generated@@650) (= (ControlFlow 0 13) 2))) $generated@@651))))
$generated@@659)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
