(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 () Int)
(declare-fun $generated@@141 (T@U T@U) Int)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@164 (T@U Int T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 (T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@195 () T@T)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@205 (T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@207 (T@T T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 (T@U T@U) T@U)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (Int) Int)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@295 (T@U) Bool)
(declare-fun $generated@@298 (T@U T@U T@U) Bool)
(declare-fun $generated@@306 (T@U) Bool)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@338 (T@T) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@T) T@U)
(declare-fun $generated@@363 (T@T T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@382 (T@T T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@455 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@U T@U) T@U)
(declare-fun $generated@@475 () Bool)
(declare-fun $generated@@476 (T@T) T@U)
(declare-fun $generated@@500 () T@T)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@543 () T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@548 (T@U Int) T@U)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(declare-fun $generated@@597 (T@U) Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@676 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@143) 14) (= ($generated@@1 $generated@@144) 15)) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@142 $generated@@154)) $generated@@143)
 :pattern ( ($generated@@142 $generated@@154))
))) (= (type $generated@@147) $generated@@68)) (= (type $generated@@150) $generated@@144)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@144)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@151 $generated@@156)) $generated@@144)
 :pattern ( ($generated@@151 $generated@@156))
))))
(assert  (=> (<= 1 $generated@@140) (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@143) (= (type $generated@@158) $generated@@144)) (or ($generated@@145 $generated@@158) (and (not (= 1 $generated@@140)) ($generated@@146 $generated@@158 $generated@@147)))) (and (and ($generated@@148 $generated@@158) (=> (not ($generated@@149 $generated@@158 $generated@@150)) (let (($generated@@159 ($generated@@151 $generated@@158)))
(let (($generated@@160 ($generated@@152 $generated@@158)))
 (and ($generated@@145 $generated@@160) ($generated@@145 $generated@@159)))))) (= ($generated@@141 ($generated@@142 $generated@@157) $generated@@158) (ite ($generated@@149 $generated@@158 $generated@@150) 0 (let (($generated@@161 ($generated@@151 $generated@@158)))
(let (($generated@@162 ($generated@@153 $generated@@158)))
(let (($generated@@163 ($generated@@152 $generated@@158)))
(+ (+ ($generated@@141 $generated@@157 $generated@@163) $generated@@162) ($generated@@141 $generated@@157 $generated@@161)))))))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@157) $generated@@158))
))))
(assert  (and (forall (($generated@@166 T@U) ($generated@@167 Int) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@166 $generated@@167 $generated@@168)) $generated@@144)
 :pattern ( ($generated@@164 $generated@@166 $generated@@167 $generated@@168))
)) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@72)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 Int) ($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@144) (= (type $generated@@172) $generated@@144)) (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171 $generated@@172)) $generated@@65))
 :pattern ( ($generated@@164 $generated@@170 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 Int) ($generated@@175 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@144) (= (type $generated@@175) $generated@@144)) (= ($generated@@152 ($generated@@164 $generated@@173 $generated@@174 $generated@@175)) $generated@@173))
 :pattern ( ($generated@@164 $generated@@173 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 Int) ($generated@@178 T@U) ) (!  (=> (and (= (type $generated@@176) $generated@@144) (= (type $generated@@178) $generated@@144)) (= ($generated@@153 ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@177))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@144) (= (type $generated@@181) $generated@@144)) (= ($generated@@151 ($generated@@164 $generated@@179 $generated@@180 $generated@@181)) $generated@@181))
 :pattern ( ($generated@@164 $generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> (= (type $generated@@182) $generated@@2) ($generated@@146 $generated@@182 ($generated@@79 0)))
 :pattern ( ($generated@@146 $generated@@182 ($generated@@79 0)))
)))
(assert  (=> (<= 1 $generated@@140) (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) $generated@@143) (= (type $generated@@184) $generated@@144)) (or ($generated@@145 $generated@@184) (and (not (= 1 $generated@@140)) ($generated@@146 $generated@@184 $generated@@147)))) true)
 :pattern ( ($generated@@141 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@187 $generated@@188)) $generated@@68)
 :pattern ( ($generated@@186 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@189) $generated@@68) (= (type $generated@@190) $generated@@68)) (= (type $generated@@191) $generated@@144)) ($generated@@146 $generated@@191 ($generated@@186 $generated@@189 $generated@@190))) ($generated@@185 $generated@@191))
 :pattern ( ($generated@@185 $generated@@191) ($generated@@146 $generated@@191 ($generated@@186 $generated@@189 $generated@@190)))
)))
(assert  (and (and (= ($generated@@1 $generated@@195) 16) (forall (($generated@@196 T@U) ) (! (= (type ($generated@@193 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@193 $generated@@196))
))) (forall (($generated@@197 T@U) ) (! (= (type ($generated@@194 $generated@@197)) $generated@@195)
 :pattern ( ($generated@@194 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (= (type $generated@@198) $generated@@144) (= (type $generated@@199) $generated@@144)) true) (= ($generated@@192 $generated@@198 $generated@@199)  (and (= ($generated@@193 $generated@@198) ($generated@@193 $generated@@199)) (= ($generated@@194 $generated@@198) ($generated@@194 $generated@@199)))))
 :pattern ( ($generated@@192 $generated@@198 $generated@@199))
)))
(assert (= ($generated@@165 $generated@@150) $generated@@63))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@68)
 :pattern ( ($generated@@200 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) ($generated@@80 $generated@@195 $generated@@2)) (= (type $generated@@204) $generated@@68)) ($generated@@146 $generated@@203 ($generated@@200 $generated@@204))) ($generated@@201 $generated@@203))
 :pattern ( ($generated@@146 $generated@@203 ($generated@@200 $generated@@204)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@211 $generated@@212)) 17)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@207 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@209 ($generated@@207 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@207 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@209 (type $generated@@217))))
(= (type ($generated@@205 $generated@@217 $generated@@218 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(let (($generated@@226 (type $generated@@222)))
(= (type ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@207 $generated@@226 $generated@@225))))
 :pattern ( ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@209 (type $generated@@227))))
 (=> (= (type $generated@@230) $generated@@231) (= ($generated@@205 ($generated@@210 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@228 $generated@@229) $generated@@230)))
 :weight 0
))) (and (and (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@205 ($generated@@210 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@205 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@241 $generated@@243) (= ($generated@@205 ($generated@@210 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@205 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or true (= ($generated@@205 ($generated@@210 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@205 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
)))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@207 $generated@@81 $generated@@4))
 :pattern ( ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@71 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@81) (= (type $generated@@255) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@256) ($generated@@70 $generated@@4))) (= (type $generated@@258) $generated@@81)) (= (type $generated@@259) ($generated@@70 $generated@@260))) (= ($generated@@0 ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (! (= (type ($generated@@261 $generated@@263 $generated@@264)) $generated@@144)
 :pattern ( ($generated@@261 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (= (type $generated@@265) $generated@@68) (= (type $generated@@266) $generated@@68)) (= (type $generated@@267) $generated@@195)) (= (type $generated@@268) $generated@@195)) (= ($generated@@146 ($generated@@261 $generated@@267 $generated@@268) ($generated@@186 $generated@@265 $generated@@266))  (and ($generated@@262 $generated@@267 $generated@@265) ($generated@@262 $generated@@268 $generated@@266))))
 :pattern ( ($generated@@146 ($generated@@261 $generated@@267 $generated@@268) ($generated@@186 $generated@@265 $generated@@266)))
)))
(assert ($generated@@146 $generated@@150 $generated@@147))
(assert (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@269 $generated@@270)) ($generated@@78 $generated@@150 $generated@@147 $generated@@270))
 :pattern ( ($generated@@78 $generated@@150 $generated@@147 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@144) (= (type $generated@@272) $generated@@144)) (= ($generated@@192 $generated@@271 $generated@@272) (= $generated@@271 $generated@@272)))
 :pattern ( ($generated@@192 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@144) (= (type $generated@@274) $generated@@144)) (= ($generated@@149 $generated@@273 $generated@@274) (= $generated@@273 $generated@@274)))
 :pattern ( ($generated@@149 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@68)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@80 $generated@@195 $generated@@4)) (= (type $generated@@278) $generated@@68)) (= ($generated@@146 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@195) ($generated@@0 ($generated@@85 $generated@@277 $generated@@279))) ($generated@@262 $generated@@279 $generated@@278))
 :pattern ( ($generated@@85 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@146 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@68)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) ($generated@@80 $generated@@195 $generated@@4)) (= (type $generated@@283) $generated@@68)) (= ($generated@@146 $generated@@282 ($generated@@280 $generated@@283)) (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@195) ($generated@@0 ($generated@@85 $generated@@282 $generated@@284))) ($generated@@262 $generated@@284 $generated@@283))
 :pattern ( ($generated@@85 $generated@@282 $generated@@284))
))))
 :pattern ( ($generated@@146 $generated@@282 ($generated@@280 $generated@@283)))
)))
(assert (forall (($generated@@286 Int) ) (! (= ($generated@@285 $generated@@286) $generated@@286)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 (type $generated@@288)))
(= (type ($generated@@287 $generated@@288)) $generated@@289))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= ($generated@@287 $generated@@290) $generated@@290)
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 Int) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (= (type $generated@@291) $generated@@144) (= (type $generated@@293) $generated@@144)) (= (type $generated@@294) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@269 $generated@@294)) (= ($generated@@78 ($generated@@164 $generated@@291 $generated@@292 $generated@@293) $generated@@147 $generated@@294)  (and (and ($generated@@78 $generated@@291 $generated@@147 $generated@@294) ($generated@@78 ($generated@@8 $generated@@292) $generated@@46 $generated@@294)) ($generated@@78 $generated@@293 $generated@@147 $generated@@294))))
 :pattern ( ($generated@@78 ($generated@@164 $generated@@291 $generated@@292 $generated@@293) $generated@@147 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (= (type $generated@@296) $generated@@144) (= (type $generated@@297) $generated@@144)) (and ($generated@@295 $generated@@296) ($generated@@295 $generated@@297))) (= ($generated@@149 $generated@@296 $generated@@297) true))
 :pattern ( ($generated@@149 $generated@@296 $generated@@297) ($generated@@295 $generated@@296))
 :pattern ( ($generated@@149 $generated@@296 $generated@@297) ($generated@@295 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@299) $generated@@68) (= (type $generated@@300) $generated@@68)) (= (type $generated@@301) $generated@@195)) (= (type $generated@@302) $generated@@195)) (= (type $generated@@303) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@269 $generated@@303)) (= ($generated@@78 ($generated@@261 $generated@@301 $generated@@302) ($generated@@186 $generated@@299 $generated@@300) $generated@@303)  (and ($generated@@298 $generated@@301 $generated@@299 $generated@@303) ($generated@@298 $generated@@302 $generated@@300 $generated@@303))))
 :pattern ( ($generated@@78 ($generated@@261 $generated@@301 $generated@@302) ($generated@@186 $generated@@299 $generated@@300) $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@144) (= ($generated@@185 $generated@@304) (= ($generated@@165 $generated@@304) $generated@@61)))
 :pattern ( ($generated@@185 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@144) (= ($generated@@295 $generated@@305) (= ($generated@@165 $generated@@305) $generated@@63)))
 :pattern ( ($generated@@295 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@144) (= ($generated@@306 $generated@@307) (= ($generated@@165 $generated@@307) $generated@@65)))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@144) ($generated@@306 $generated@@308)) (exists (($generated@@309 T@U) ($generated@@310 Int) ($generated@@311 T@U) ) (!  (and (and (= (type $generated@@309) $generated@@144) (= (type $generated@@311) $generated@@144)) (= $generated@@308 ($generated@@164 $generated@@309 $generated@@310 $generated@@311)))
 :no-pattern (type $generated@@309)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@306 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@144) ($generated@@185 $generated@@312)) (exists (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (and (and (= (type $generated@@313) $generated@@195) (= (type $generated@@314) $generated@@195)) (= $generated@@312 ($generated@@261 $generated@@313 $generated@@314)))
 :no-pattern (type $generated@@313)
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
)))
 :pattern ( ($generated@@185 $generated@@312))
)))
(assert  (and (and (forall (($generated@@319 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@319)) 18)) (forall (($generated@@320 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@317 $generated@@320))
))) (forall (($generated@@321 T@T) ) (! (= (type ($generated@@315 $generated@@321)) ($generated@@317 $generated@@321))
 :pattern ( ($generated@@315 $generated@@321))
))))
(assert (forall (($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@322)) 0)
 :pattern ( ($generated@@315 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@144) ($generated@@295 $generated@@323)) (= $generated@@323 $generated@@150))
 :pattern ( ($generated@@295 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@195)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@68) (= (type $generated@@328) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@298 ($generated@@324 $generated@@326) $generated@@327 $generated@@328) ($generated@@78 $generated@@326 $generated@@327 $generated@@328)))
 :pattern ( ($generated@@298 ($generated@@324 $generated@@326) $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@329) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@330) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@331) $generated@@195)) (= (type $generated@@332) $generated@@68)) ($generated@@136 $generated@@329 $generated@@330)) ($generated@@298 $generated@@331 $generated@@332 $generated@@329)) ($generated@@298 $generated@@331 $generated@@332 $generated@@330))
 :pattern ( ($generated@@136 $generated@@329 $generated@@330) ($generated@@298 $generated@@331 $generated@@332 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@333) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@334) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@336) $generated@@68)) ($generated@@136 $generated@@333 $generated@@334)) ($generated@@78 $generated@@335 $generated@@336 $generated@@333)) ($generated@@78 $generated@@335 $generated@@336 $generated@@334))
 :pattern ( ($generated@@136 $generated@@333 $generated@@334) ($generated@@78 $generated@@335 $generated@@336 $generated@@333))
)))
(assert (forall (($generated@@339 T@T) ) (! (= (type ($generated@@338 $generated@@339)) ($generated@@80 $generated@@339 $generated@@2))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@83 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@80 $generated@@341 $generated@@2)) (and (= (= ($generated@@337 $generated@@340) 0) (= $generated@@340 ($generated@@338 $generated@@341))) (=> (not (= ($generated@@337 $generated@@340) 0)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) (< 0 ($generated ($generated@@85 $generated@@340 $generated@@342))))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 19)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@80 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@85 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@85 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert  (and (and (and (and (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (= ($generated@@1 ($generated@@363 $generated@@366 $generated@@367)) 20)) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= ($generated@@364 ($generated@@363 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@363 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@365 ($generated@@363 $generated@@370 $generated@@371)) $generated@@371)
 :pattern ( ($generated@@363 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@364 (type $generated@@372))))
(= (type ($generated@@361 $generated@@372)) ($generated@@80 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@372))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= (type ($generated@@362 $generated@@374 $generated@@375)) ($generated@@363 $generated@@374 $generated@@375))
 :pattern ( ($generated@@362 $generated@@374 $generated@@375))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@T) ) (! (let (($generated@@378 (type $generated@@376)))
 (not ($generated@@0 ($generated@@85 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376))))
 :pattern ( (let (($generated@@378 (type $generated@@376)))
($generated@@85 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376)))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@83 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@80 $generated@@380 $generated@@2)) (= ($generated@@201 $generated@@379) (forall (($generated@@381 T@U) ) (!  (=> (= (type $generated@@381) $generated@@380) (and (<= 0 ($generated ($generated@@85 $generated@@379 $generated@@381))) (<= ($generated ($generated@@85 $generated@@379 $generated@@381)) ($generated@@337 $generated@@379))))
 :pattern ( ($generated@@85 $generated@@379 $generated@@381))
)))))
 :pattern ( ($generated@@201 $generated@@379))
)))
(assert (forall (($generated@@383 T@T) ($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@383 $generated@@384)) $generated@@383)
 :pattern ( ($generated@@382 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@195) ($generated@@262 $generated@@385 $generated@@147)) (and (= ($generated@@324 ($generated@@382 $generated@@144 $generated@@385)) $generated@@385) ($generated@@146 ($generated@@382 $generated@@144 $generated@@385) $generated@@147)))
 :pattern ( ($generated@@262 $generated@@385 $generated@@147))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@347 (type $generated@@386))))
(let (($generated@@388 ($generated@@346 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@345 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@344 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@343 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@347 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@80 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@347 (type $generated@@393))))
(let (($generated@@395 ($generated@@346 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@345 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@344 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@85 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@365 (type $generated@@397))))
(let (($generated@@399 ($generated@@364 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@363 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@362 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@361 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@365 (type $generated@@402))))
(= (type ($generated@@401 $generated@@402)) ($generated@@80 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@365 (type $generated@@404))))
(let (($generated@@406 ($generated@@364 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@363 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@362 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@405) ($generated@@0 ($generated@@85 ($generated@@401 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@401 $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@80 $generated@@195 $generated@@2)) (= (type $generated@@409) $generated@@68)) (= ($generated@@146 $generated@@408 ($generated@@200 $generated@@409)) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@195) (< 0 ($generated ($generated@@85 $generated@@408 $generated@@410)))) ($generated@@262 $generated@@410 $generated@@409))
 :pattern ( ($generated@@85 $generated@@408 $generated@@410))
))))
 :pattern ( ($generated@@146 $generated@@408 ($generated@@200 $generated@@409)))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@144) ($generated@@148 $generated@@411)) (or ($generated@@295 $generated@@411) ($generated@@306 $generated@@411)))
 :pattern ( ($generated@@148 $generated@@411))
)))
(assert  (=> (<= 1 $generated@@140) (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@412) $generated@@143) (= (type $generated@@413) $generated@@144)) (or ($generated@@145 ($generated@@287 $generated@@413)) (and (not (= 1 $generated@@140)) ($generated@@146 $generated@@413 $generated@@147)))) (and (and ($generated@@148 ($generated@@287 $generated@@413)) (=> (not ($generated@@149 $generated@@413 $generated@@150)) (let (($generated@@414 ($generated@@151 ($generated@@287 $generated@@413))))
(let (($generated@@415 ($generated@@152 ($generated@@287 $generated@@413))))
 (and ($generated@@145 $generated@@415) ($generated@@145 $generated@@414)))))) (= ($generated@@141 ($generated@@142 $generated@@412) ($generated@@287 $generated@@413)) (ite ($generated@@149 $generated@@413 $generated@@150) 0 (let (($generated@@416 ($generated@@151 ($generated@@287 $generated@@413))))
(let (($generated@@417 ($generated@@153 ($generated@@287 $generated@@413))))
(let (($generated@@418 ($generated@@152 ($generated@@287 $generated@@413))))
(+ (+ ($generated@@141 ($generated@@142 $generated@@412) $generated@@418) $generated@@417) ($generated@@141 ($generated@@142 $generated@@412) $generated@@416)))))))))
 :weight 3
 :pattern ( ($generated@@141 ($generated@@142 $generated@@412) ($generated@@287 $generated@@413)))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (= (type $generated@@419) ($generated@@80 $generated@@195 $generated@@4)) (= (type $generated@@420) $generated@@68)) (= (type $generated@@421) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@419 ($generated@@275 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@195) ($generated@@0 ($generated@@85 $generated@@419 $generated@@422))) ($generated@@298 $generated@@422 $generated@@420 $generated@@421))
 :pattern ( ($generated@@85 $generated@@419 $generated@@422))
))))
 :pattern ( ($generated@@78 $generated@@419 ($generated@@275 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@80 $generated@@195 $generated@@4)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@423 ($generated@@280 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@195) ($generated@@0 ($generated@@85 $generated@@423 $generated@@426))) ($generated@@298 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@85 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@78 $generated@@423 ($generated@@280 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(= ($generated ($generated@@85 ($generated@@338 $generated@@428) $generated@@427)) 0))
 :pattern ( (let (($generated@@428 (type $generated@@427)))
($generated@@85 ($generated@@338 $generated@@428) $generated@@427)))
)))
(assert  (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@431)) ($generated@@80 $generated@@195 $generated@@4))
 :pattern ( ($generated@@429 $generated@@431))
)) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@347 (type $generated@@432))))
(let (($generated@@434 ($generated@@346 (type $generated@@432))))
(= (type ($generated@@430 $generated@@432)) ($generated@@80 $generated@@434 $generated@@433))))
 :pattern ( ($generated@@430 $generated@@432))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@345 $generated@@195 $generated@@195)) (= (type $generated@@436) $generated@@195)) (= ($generated@@0 ($generated@@85 ($generated@@429 $generated@@435) $generated@@436))  (and ($generated@@0 ($generated@@85 ($generated@@343 $generated@@435) ($generated@@193 ($generated@@382 $generated@@144 $generated@@436)))) (= ($generated@@85 ($generated@@430 $generated@@435) ($generated@@193 ($generated@@382 $generated@@144 $generated@@436))) ($generated@@194 ($generated@@382 $generated@@144 $generated@@436))))))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@435) $generated@@436))
)))
(assert  (and (forall (($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@439)) ($generated@@80 $generated@@195 $generated@@4))
 :pattern ( ($generated@@437 $generated@@439))
)) (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@365 (type $generated@@440))))
(let (($generated@@442 ($generated@@364 (type $generated@@440))))
(= (type ($generated@@438 $generated@@440)) ($generated@@80 $generated@@442 $generated@@441))))
 :pattern ( ($generated@@438 $generated@@440))
))))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) ($generated@@363 $generated@@195 $generated@@195)) (= (type $generated@@444) $generated@@195)) (= ($generated@@0 ($generated@@85 ($generated@@437 $generated@@443) $generated@@444))  (and ($generated@@0 ($generated@@85 ($generated@@361 $generated@@443) ($generated@@193 ($generated@@382 $generated@@144 $generated@@444)))) (= ($generated@@85 ($generated@@438 $generated@@443) ($generated@@193 ($generated@@382 $generated@@144 $generated@@444))) ($generated@@194 ($generated@@382 $generated@@144 $generated@@444))))))
 :pattern ( ($generated@@85 ($generated@@437 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@346 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@345 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@85 ($generated@@390 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@85 ($generated@@343 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@85 ($generated@@430 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@445) $generated@@449))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (let (($generated@@452 (type $generated@@451)))
(let (($generated@@453 ($generated@@364 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@363 $generated@@453 $generated@@452)) (= ($generated@@0 ($generated@@85 ($generated@@401 $generated@@450) $generated@@451)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@453) (and ($generated@@0 ($generated@@85 ($generated@@361 $generated@@450) $generated@@454)) (= $generated@@451 ($generated@@85 ($generated@@438 $generated@@450) $generated@@454))))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@450) $generated@@454))
 :pattern ( ($generated@@85 ($generated@@438 $generated@@450) $generated@@454))
))))))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@456 $generated@@457)) $generated@@68)
 :pattern ( ($generated@@455 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (and (= (type $generated@@458) ($generated@@345 $generated@@195 $generated@@195)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) $generated@@68)) (= (type $generated@@461) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@195) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@458) $generated@@462))) (and ($generated@@298 ($generated@@85 ($generated@@430 $generated@@458) $generated@@462) $generated@@460 $generated@@461) ($generated@@298 $generated@@462 $generated@@459 $generated@@461)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@458) $generated@@462))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@458) $generated@@462))
))))
 :pattern ( ($generated@@78 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@463 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (and (= (type $generated@@466) ($generated@@363 $generated@@195 $generated@@195)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) $generated@@68)) (= (type $generated@@469) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@466 ($generated@@463 $generated@@467 $generated@@468) $generated@@469) (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@195) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@466) $generated@@470))) (and ($generated@@298 ($generated@@85 ($generated@@438 $generated@@466) $generated@@470) $generated@@468 $generated@@469) ($generated@@298 $generated@@470 $generated@@467 $generated@@469)))
 :pattern ( ($generated@@85 ($generated@@438 $generated@@466) $generated@@470))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@466) $generated@@470))
))))
 :pattern ( ($generated@@78 $generated@@466 ($generated@@463 $generated@@467 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@144) ($generated@@146 $generated@@471 $generated@@147)) (or ($generated@@295 $generated@@471) ($generated@@306 $generated@@471)))
 :pattern ( ($generated@@306 $generated@@471) ($generated@@146 $generated@@471 $generated@@147))
 :pattern ( ($generated@@295 $generated@@471) ($generated@@146 $generated@@471 $generated@@147))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@472) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@473) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@474) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@472 $generated@@474))) (and ($generated@@136 $generated@@472 $generated@@473) ($generated@@136 $generated@@473 $generated@@474))) ($generated@@136 $generated@@472 $generated@@474))
 :pattern ( ($generated@@136 $generated@@472 $generated@@473) ($generated@@136 $generated@@473 $generated@@474))
)))
(assert  (=> (<= 0 $generated@@140) (=> (or $generated@@475 (not (= 0 $generated@@140))) true)))
(assert (forall (($generated@@477 T@T) ) (! (= (type ($generated@@476 $generated@@477)) ($generated@@80 $generated@@477 $generated@@4))
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@365 (type $generated@@478))))
(let (($generated@@480 ($generated@@364 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@363 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@362 $generated@@480 $generated@@479)) (= ($generated@@361 $generated@@478) ($generated@@476 $generated@@480))))))
 :pattern ( ($generated@@361 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@365 (type $generated@@481))))
(let (($generated@@483 ($generated@@364 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@363 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@362 $generated@@483 $generated@@482)) (= ($generated@@401 $generated@@481) ($generated@@476 $generated@@482))))))
 :pattern ( ($generated@@401 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@365 (type $generated@@484))))
(let (($generated@@486 ($generated@@364 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@363 $generated@@486 $generated@@485)) (= (= $generated@@484 ($generated@@362 $generated@@486 $generated@@485)) (= ($generated@@437 $generated@@484) ($generated@@476 $generated@@195))))))
 :pattern ( ($generated@@437 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@347 (type $generated@@487))))
(let (($generated@@489 ($generated@@346 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@345 $generated@@489 $generated@@488)) (or (= $generated@@487 ($generated@@344 $generated@@489 $generated@@488)) (exists (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (and (and (= (type $generated@@490) $generated@@195) (= (type $generated@@491) $generated@@195)) ($generated@@0 ($generated@@85 ($generated@@429 $generated@@487) ($generated@@324 ($generated@@261 $generated@@490 $generated@@491)))))
 :no-pattern (type $generated@@490)
 :no-pattern (type $generated@@491)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
))))))
 :pattern ( ($generated@@429 $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@365 (type $generated@@492))))
(let (($generated@@494 ($generated@@364 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@363 $generated@@494 $generated@@493)) (or (= $generated@@492 ($generated@@362 $generated@@494 $generated@@493)) (exists (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (and (and (= (type $generated@@495) $generated@@195) (= (type $generated@@496) $generated@@195)) ($generated@@0 ($generated@@85 ($generated@@437 $generated@@492) ($generated@@324 ($generated@@261 $generated@@495 $generated@@496)))))
 :no-pattern (type $generated@@495)
 :no-pattern (type $generated@@496)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
))))))
 :pattern ( ($generated@@437 $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@195) ($generated@@262 $generated@@497 $generated@@46)) (and (= ($generated@@324 ($generated@@382 $generated@@2 $generated@@497)) $generated@@497) ($generated@@146 ($generated@@382 $generated@@2 $generated@@497) $generated@@46)))
 :pattern ( ($generated@@262 $generated@@497 $generated@@46))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@195) ($generated@@262 $generated@@498 $generated@@47)) (and (= ($generated@@324 ($generated@@382 $generated@@3 $generated@@498)) $generated@@498) ($generated@@146 ($generated@@382 $generated@@3 $generated@@498) $generated@@47)))
 :pattern ( ($generated@@262 $generated@@498 $generated@@47))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@195) ($generated@@262 $generated@@499 $generated@@44)) (and (= ($generated@@324 ($generated@@382 $generated@@4 $generated@@499)) $generated@@499) ($generated@@146 ($generated@@382 $generated@@4 $generated@@499) $generated@@44)))
 :pattern ( ($generated@@262 $generated@@499 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@500) 21))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@195) ($generated@@262 $generated@@501 $generated@@45)) (and (= ($generated@@324 ($generated@@382 $generated@@500 $generated@@501)) $generated@@501) ($generated@@146 ($generated@@382 $generated@@500 $generated@@501) $generated@@45)))
 :pattern ( ($generated@@262 $generated@@501 $generated@@45))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@68) (= ($generated@@262 ($generated@@324 $generated@@502) $generated@@503) ($generated@@146 $generated@@502 $generated@@503)))
 :pattern ( ($generated@@262 ($generated@@324 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@83 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@80 $generated@@505 $generated@@2)) (<= 0 ($generated@@337 $generated@@504))))
 :pattern ( ($generated@@337 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@318 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@317 $generated@@507)) (<= 0 ($generated@@316 $generated@@506))))
 :pattern ( ($generated@@316 $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@508 ($generated@@455 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@455 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@455 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@455 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@68) (= (type $generated@@517) $generated@@68)) (= ($generated@@76 ($generated@@455 $generated@@516 $generated@@517)) $generated@@58))
 :pattern ( ($generated@@455 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= ($generated@@518 ($generated@@463 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@463 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@68) (= (type $generated@@525) $generated@@68)) (= ($generated@@522 ($generated@@463 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@463 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@68) (= (type $generated@@527) $generated@@68)) (= ($generated@@76 ($generated@@463 $generated@@526 $generated@@527)) $generated@@59))
 :pattern ( ($generated@@463 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@195) (= (type $generated@@529) $generated@@195)) (= ($generated@@165 ($generated@@261 $generated@@528 $generated@@529)) $generated@@61))
 :pattern ( ($generated@@261 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@68) (= (type $generated@@533) $generated@@68)) (= ($generated@@530 ($generated@@186 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@186 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@68) (= (type $generated@@537) $generated@@68)) (= ($generated@@534 ($generated@@186 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@186 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@195) (= (type $generated@@539) $generated@@195)) (= ($generated@@193 ($generated@@261 $generated@@538 $generated@@539)) $generated@@538))
 :pattern ( ($generated@@261 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@195) (= (type $generated@@541) $generated@@195)) (= ($generated@@194 ($generated@@261 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@261 $generated@@540 $generated@@541))
)))
(assert  (and (forall (($generated@@544 T@U) ) (! (= (type ($generated@@542 $generated@@544)) $generated@@143)
 :pattern ( ($generated@@542 $generated@@544))
)) (= (type $generated@@543) $generated@@143)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@143) (= (type $generated@@546) $generated@@144)) (= ($generated@@141 $generated@@545 $generated@@546) ($generated@@141 $generated@@543 $generated@@546)))
 :pattern ( ($generated@@141 ($generated@@542 $generated@@545) $generated@@546))
)))
(assert  (and (forall (($generated@@549 T@U) ) (! (= (type ($generated@@547 $generated@@549)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@549))
)) (forall (($generated@@550 T@U) ($generated@@551 Int) ) (! (let (($generated@@552 ($generated@@318 (type $generated@@550))))
(= (type ($generated@@548 $generated@@550 $generated@@551)) $generated@@552))
 :pattern ( ($generated@@548 $generated@@550 $generated@@551))
))))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@317 $generated@@195)) (= (type $generated@@554) $generated@@68)) (= (type $generated@@555) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@553 ($generated@@547 $generated@@554) $generated@@555) (forall (($generated@@556 Int) ) (!  (=> (and (<= 0 $generated@@556) (< $generated@@556 ($generated@@316 $generated@@553))) ($generated@@298 ($generated@@548 $generated@@553 $generated@@556) $generated@@554 $generated@@555))
 :pattern ( ($generated@@548 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@78 $generated@@553 ($generated@@547 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 Int) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@144) (= (type $generated@@559) $generated@@144)) (= ($generated@@164 ($generated@@287 $generated@@557) ($generated@@285 $generated@@558) ($generated@@287 $generated@@559)) ($generated@@287 ($generated@@164 $generated@@557 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@164 ($generated@@287 $generated@@557) ($generated@@285 $generated@@558) ($generated@@287 $generated@@559)))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@560 ($generated@@79 $generated@@561)) $generated@@561)
 :pattern ( ($generated@@79 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@68) (= ($generated@@562 ($generated@@275 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@275 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@76 ($generated@@275 $generated@@565)) $generated@@54))
 :pattern ( ($generated@@275 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@68)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@68) (= ($generated@@566 ($generated@@280 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@280 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@76 ($generated@@280 $generated@@569)) $generated@@55))
 :pattern ( ($generated@@280 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@68)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@570 ($generated@@200 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@200 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@68) (= ($generated@@76 ($generated@@200 $generated@@573)) $generated@@56))
 :pattern ( ($generated@@200 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@68)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@68) (= ($generated@@574 ($generated@@547 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@547 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@76 ($generated@@547 $generated@@577)) $generated@@57))
 :pattern ( ($generated@@547 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
(= ($generated@@382 $generated@@579 ($generated@@324 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@324 $generated@@578))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@144) (= (type $generated@@583) $generated@@144)) (< ($generated@@580 $generated@@581) ($generated@@580 ($generated@@164 $generated@@581 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@164 $generated@@581 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 Int) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@144) (= (type $generated@@586) $generated@@144)) (< ($generated@@580 $generated@@586) ($generated@@580 ($generated@@164 $generated@@584 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@164 $generated@@584 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@345 $generated@@195 $generated@@195)) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) $generated@@68)) (= ($generated@@146 $generated@@587 ($generated@@455 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@195) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@587) $generated@@590))) (and ($generated@@262 ($generated@@85 ($generated@@430 $generated@@587) $generated@@590) $generated@@589) ($generated@@262 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@587) $generated@@590))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@146 $generated@@587 ($generated@@455 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@363 $generated@@195 $generated@@195)) (= (type $generated@@592) $generated@@68)) (= (type $generated@@593) $generated@@68)) (= ($generated@@146 $generated@@591 ($generated@@463 $generated@@592 $generated@@593)) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@195) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@591) $generated@@594))) (and ($generated@@262 ($generated@@85 ($generated@@438 $generated@@591) $generated@@594) $generated@@593) ($generated@@262 $generated@@594 $generated@@592)))
 :pattern ( ($generated@@85 ($generated@@438 $generated@@591) $generated@@594))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@591) $generated@@594))
))))
 :pattern ( ($generated@@146 $generated@@591 ($generated@@463 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@144) (= (type $generated@@596) $generated@@144)) (and ($generated@@306 $generated@@595) ($generated@@306 $generated@@596))) (= ($generated@@149 $generated@@595 $generated@@596)  (and (and ($generated@@149 ($generated@@152 $generated@@595) ($generated@@152 $generated@@596)) (= ($generated@@153 $generated@@595) ($generated@@153 $generated@@596))) ($generated@@149 ($generated@@151 $generated@@595) ($generated@@151 $generated@@596)))))
 :pattern ( ($generated@@149 $generated@@595 $generated@@596) ($generated@@306 $generated@@595))
 :pattern ( ($generated@@149 $generated@@595 $generated@@596) ($generated@@306 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@195) (= (type $generated@@599) $generated@@195)) (< ($generated@@597 $generated@@598) ($generated@@580 ($generated@@261 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@261 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@195) (= (type $generated@@601) $generated@@195)) (< ($generated@@597 $generated@@601) ($generated@@580 ($generated@@261 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@261 $generated@@600 $generated@@601))
)))
(assert  (=> (<= 0 $generated@@140) (=> (or $generated@@475 (not (= 0 $generated@@140))) (= $generated@@602 (let (($generated@@603 ($generated@@285 58)))
$generated@@603)))))
(assert  (=> (<= 0 $generated@@140) (=> (or $generated@@475 (not (= 0 $generated@@140))) (= $generated@@602 (let (($generated@@604 ($generated@@285 58)))
$generated@@604)))))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@143) (= (type $generated@@606) $generated@@144)) (= ($generated@@141 ($generated@@142 $generated@@605) $generated@@606) ($generated@@141 $generated@@605 $generated@@606)))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@605) $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@195) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) $generated@@68)) ($generated@@262 $generated@@607 ($generated@@455 $generated@@608 $generated@@609))) (and (= ($generated@@324 ($generated@@382 ($generated@@345 $generated@@195 $generated@@195) $generated@@607)) $generated@@607) ($generated@@146 ($generated@@382 ($generated@@345 $generated@@195 $generated@@195) $generated@@607) ($generated@@455 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@262 $generated@@607 ($generated@@455 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@195) (= (type $generated@@611) $generated@@68)) (= (type $generated@@612) $generated@@68)) ($generated@@262 $generated@@610 ($generated@@463 $generated@@611 $generated@@612))) (and (= ($generated@@324 ($generated@@382 ($generated@@363 $generated@@195 $generated@@195) $generated@@610)) $generated@@610) ($generated@@146 ($generated@@382 ($generated@@363 $generated@@195 $generated@@195) $generated@@610) ($generated@@463 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@262 $generated@@610 ($generated@@463 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@68) (= (type $generated@@614) $generated@@68)) (= (type $generated@@615) $generated@@195)) ($generated@@262 $generated@@615 ($generated@@186 $generated@@613 $generated@@614))) (and (= ($generated@@324 ($generated@@382 $generated@@144 $generated@@615)) $generated@@615) ($generated@@146 ($generated@@382 $generated@@144 $generated@@615) ($generated@@186 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@262 $generated@@615 ($generated@@186 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@616)))
 (not ($generated@@0 ($generated@@85 ($generated@@476 $generated@@617) $generated@@616))))
 :pattern ( (let (($generated@@617 (type $generated@@616)))
($generated@@85 ($generated@@476 $generated@@617) $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ) (! (= (type ($generated@@618 $generated@@619)) $generated@@73)
 :pattern ( ($generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@68) (= (type $generated@@621) $generated@@68)) (and (= ($generated@@76 ($generated@@186 $generated@@620 $generated@@621)) $generated@@62) (= ($generated@@618 ($generated@@186 $generated@@620 $generated@@621)) $generated@@66)))
 :pattern ( ($generated@@186 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@144) (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@269 $generated@@623) (and ($generated@@306 $generated@@622) ($generated@@78 $generated@@622 $generated@@147 $generated@@623)))) ($generated@@78 ($generated@@8 ($generated@@153 $generated@@622)) $generated@@46 $generated@@623))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@153 $generated@@622)) $generated@@46 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@144) (= ($generated@@597 ($generated@@324 $generated@@624)) ($generated@@580 $generated@@624)))
 :pattern ( ($generated@@597 ($generated@@324 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@195) ($generated@@262 $generated@@625 ($generated@@79 0))) (and (= ($generated@@324 ($generated@@382 $generated@@2 $generated@@625)) $generated@@625) ($generated@@146 ($generated@@382 ($generated@@80 $generated@@195 $generated@@4) $generated@@625) ($generated@@79 0))))
 :pattern ( ($generated@@262 $generated@@625 ($generated@@79 0)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@195) (= (type $generated@@627) $generated@@68)) ($generated@@262 $generated@@626 ($generated@@275 $generated@@627))) (and (= ($generated@@324 ($generated@@382 ($generated@@80 $generated@@195 $generated@@4) $generated@@626)) $generated@@626) ($generated@@146 ($generated@@382 ($generated@@80 $generated@@195 $generated@@4) $generated@@626) ($generated@@275 $generated@@627))))
 :pattern ( ($generated@@262 $generated@@626 ($generated@@275 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@195) (= (type $generated@@629) $generated@@68)) ($generated@@262 $generated@@628 ($generated@@280 $generated@@629))) (and (= ($generated@@324 ($generated@@382 ($generated@@80 $generated@@195 $generated@@4) $generated@@628)) $generated@@628) ($generated@@146 ($generated@@382 ($generated@@80 $generated@@195 $generated@@4) $generated@@628) ($generated@@280 $generated@@629))))
 :pattern ( ($generated@@262 $generated@@628 ($generated@@280 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@195) (= (type $generated@@631) $generated@@68)) ($generated@@262 $generated@@630 ($generated@@200 $generated@@631))) (and (= ($generated@@324 ($generated@@382 ($generated@@80 $generated@@195 $generated@@2) $generated@@630)) $generated@@630) ($generated@@146 ($generated@@382 ($generated@@80 $generated@@195 $generated@@2) $generated@@630) ($generated@@200 $generated@@631))))
 :pattern ( ($generated@@262 $generated@@630 ($generated@@200 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@195) (= (type $generated@@633) $generated@@68)) ($generated@@262 $generated@@632 ($generated@@547 $generated@@633))) (and (= ($generated@@324 ($generated@@382 ($generated@@317 $generated@@195) $generated@@632)) $generated@@632) ($generated@@146 ($generated@@382 ($generated@@317 $generated@@195) $generated@@632) ($generated@@547 $generated@@633))))
 :pattern ( ($generated@@262 $generated@@632 ($generated@@547 $generated@@633)))
)))
(assert (= ($generated@@76 $generated@@147) $generated@@64))
(assert (= ($generated@@618 $generated@@147) $generated@@67))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@634) ($generated@@80 $generated@@195 $generated@@2)) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@634 ($generated@@200 $generated@@635) $generated@@636) (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@195) (< 0 ($generated ($generated@@85 $generated@@634 $generated@@637)))) ($generated@@298 $generated@@637 $generated@@635 $generated@@636))
 :pattern ( ($generated@@85 $generated@@634 $generated@@637))
))))
 :pattern ( ($generated@@78 $generated@@634 ($generated@@200 $generated@@635) $generated@@636))
)))
(assert (= $generated@@150 ($generated@@287 $generated@@150)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) $generated@@144) (= (type $generated@@639) $generated@@68)) (= (type $generated@@640) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@269 $generated@@640) (and ($generated@@185 $generated@@638) (exists (($generated@@641 T@U) ) (!  (and (= (type $generated@@641) $generated@@68) ($generated@@78 $generated@@638 ($generated@@186 $generated@@639 $generated@@641) $generated@@640))
 :pattern ( ($generated@@78 $generated@@638 ($generated@@186 $generated@@639 $generated@@641) $generated@@640))
))))) ($generated@@298 ($generated@@193 $generated@@638) $generated@@639 $generated@@640))
 :pattern ( ($generated@@298 ($generated@@193 $generated@@638) $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) $generated@@144) (= (type $generated@@643) $generated@@68)) (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@269 $generated@@644) (and ($generated@@185 $generated@@642) (exists (($generated@@645 T@U) ) (!  (and (= (type $generated@@645) $generated@@68) ($generated@@78 $generated@@642 ($generated@@186 $generated@@645 $generated@@643) $generated@@644))
 :pattern ( ($generated@@78 $generated@@642 ($generated@@186 $generated@@645 $generated@@643) $generated@@644))
))))) ($generated@@298 ($generated@@194 $generated@@642) $generated@@643 $generated@@644))
 :pattern ( ($generated@@298 ($generated@@194 $generated@@642) $generated@@643 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@646) $generated@@144) (= (type $generated@@647) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@269 $generated@@647) (and ($generated@@306 $generated@@646) ($generated@@78 $generated@@646 $generated@@147 $generated@@647)))) ($generated@@78 ($generated@@152 $generated@@646) $generated@@147 $generated@@647))
 :pattern ( ($generated@@78 ($generated@@152 $generated@@646) $generated@@147 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@648) $generated@@144) (= (type $generated@@649) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@269 $generated@@649) (and ($generated@@306 $generated@@648) ($generated@@78 $generated@@648 $generated@@147 $generated@@649)))) ($generated@@78 ($generated@@151 $generated@@648) $generated@@147 $generated@@649))
 :pattern ( ($generated@@78 ($generated@@151 $generated@@648) $generated@@147 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@195) (= (type $generated@@651) $generated@@195)) (= ($generated@@261 ($generated@@287 $generated@@650) ($generated@@287 $generated@@651)) ($generated@@287 ($generated@@261 $generated@@650 $generated@@651))))
 :pattern ( ($generated@@261 ($generated@@287 $generated@@650) ($generated@@287 $generated@@651)))
)))
(assert (forall (($generated@@652 Int) ) (! (= ($generated@@324 ($generated@@8 ($generated@@285 $generated@@652))) ($generated@@287 ($generated@@324 ($generated@@8 $generated@@652))))
 :pattern ( ($generated@@324 ($generated@@8 ($generated@@285 $generated@@652))))
)))
(assert (forall (($generated@@653 T@U) ) (! (= ($generated@@324 ($generated@@287 $generated@@653)) ($generated@@287 ($generated@@324 $generated@@653)))
 :pattern ( ($generated@@324 ($generated@@287 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ) (! (let (($generated@@655 ($generated@@318 (type $generated@@654))))
 (=> (and (= (type $generated@@654) ($generated@@317 $generated@@655)) (= ($generated@@316 $generated@@654) 0)) (= $generated@@654 ($generated@@315 $generated@@655))))
 :pattern ( ($generated@@316 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (! (let (($generated@@659 (type $generated@@657)))
 (=> (and (and (= (type $generated@@656) ($generated@@80 $generated@@659 $generated@@2)) (= (type $generated@@658) $generated@@2)) (<= 0 ($generated $generated@@658))) (= ($generated@@337 ($generated@@86 $generated@@656 $generated@@657 $generated@@658)) (+ (- ($generated@@337 $generated@@656) ($generated ($generated@@85 $generated@@656 $generated@@657))) ($generated $generated@@658)))))
 :pattern ( ($generated@@337 ($generated@@86 $generated@@656 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@661) $generated@@2)) ($generated@@78 $generated@@661 $generated@@46 $generated@@660))
 :pattern ( ($generated@@78 $generated@@661 $generated@@46 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@663) $generated@@3)) ($generated@@78 $generated@@663 $generated@@47 $generated@@662))
 :pattern ( ($generated@@78 $generated@@663 $generated@@47 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@665) $generated@@4)) ($generated@@78 $generated@@665 $generated@@44 $generated@@664))
 :pattern ( ($generated@@78 $generated@@665 $generated@@44 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@667) $generated@@500)) ($generated@@78 $generated@@667 $generated@@45 $generated@@666))
 :pattern ( ($generated@@78 $generated@@667 $generated@@45 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@669) $generated@@195)) ($generated@@78 $generated@@669 $generated@@48 $generated@@668))
 :pattern ( ($generated@@78 $generated@@669 $generated@@48 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 Int) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@144) (= (type $generated@@672) $generated@@144)) (= ($generated@@146 ($generated@@164 $generated@@670 $generated@@671 $generated@@672) $generated@@147)  (and (and ($generated@@146 $generated@@670 $generated@@147) ($generated@@146 ($generated@@8 $generated@@671) $generated@@46)) ($generated@@146 $generated@@672 $generated@@147))))
 :pattern ( ($generated@@146 ($generated@@164 $generated@@670 $generated@@671 $generated@@672) $generated@@147))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) ($generated@@317 $generated@@195)) (= (type $generated@@674) $generated@@68)) (= ($generated@@146 $generated@@673 ($generated@@547 $generated@@674)) (forall (($generated@@675 Int) ) (!  (=> (and (<= 0 $generated@@675) (< $generated@@675 ($generated@@316 $generated@@673))) ($generated@@262 ($generated@@548 $generated@@673 $generated@@675) $generated@@674))
 :pattern ( ($generated@@548 $generated@@673 $generated@@675))
))))
 :pattern ( ($generated@@146 $generated@@673 ($generated@@547 $generated@@674)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 Int) ) (!  (=> (= (type $generated@@677) ($generated@@317 $generated@@195)) (=> (and (<= 0 $generated@@678) (< $generated@@678 ($generated@@316 $generated@@677))) (< ($generated@@580 ($generated@@382 $generated@@144 ($generated@@548 $generated@@677 $generated@@678))) ($generated@@676 $generated@@677))))
 :pattern ( ($generated@@580 ($generated@@382 $generated@@144 ($generated@@548 $generated@@677 $generated@@678))))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (and (= (type $generated@@679) ($generated@@345 $generated@@195 $generated@@195)) (= (type $generated@@680) $generated@@68)) (= (type $generated@@681) $generated@@68)) ($generated@@146 $generated@@679 ($generated@@455 $generated@@680 $generated@@681))) (and (and ($generated@@146 ($generated@@343 $generated@@679) ($generated@@275 $generated@@680)) ($generated@@146 ($generated@@390 $generated@@679) ($generated@@275 $generated@@681))) ($generated@@146 ($generated@@429 $generated@@679) ($generated@@275 ($generated@@186 $generated@@680 $generated@@681)))))
 :pattern ( ($generated@@146 $generated@@679 ($generated@@455 $generated@@680 $generated@@681)))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (and (= (type $generated@@682) ($generated@@363 $generated@@195 $generated@@195)) (= (type $generated@@683) $generated@@68)) (= (type $generated@@684) $generated@@68)) ($generated@@146 $generated@@682 ($generated@@463 $generated@@683 $generated@@684))) (and (and ($generated@@146 ($generated@@361 $generated@@682) ($generated@@280 $generated@@683)) ($generated@@146 ($generated@@401 $generated@@682) ($generated@@280 $generated@@684))) ($generated@@146 ($generated@@437 $generated@@682) ($generated@@280 ($generated@@186 $generated@@683 $generated@@684)))))
 :pattern ( ($generated@@146 $generated@@682 ($generated@@463 $generated@@683 $generated@@684)))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@2) ($generated@@146 $generated@@685 $generated@@46))
 :pattern ( ($generated@@146 $generated@@685 $generated@@46))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@3) ($generated@@146 $generated@@686 $generated@@47))
 :pattern ( ($generated@@146 $generated@@686 $generated@@47))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@4) ($generated@@146 $generated@@687 $generated@@44))
 :pattern ( ($generated@@146 $generated@@687 $generated@@44))
)))
(assert (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@500) ($generated@@146 $generated@@688 $generated@@45))
 :pattern ( ($generated@@146 $generated@@688 $generated@@45))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@195) ($generated@@146 $generated@@689 $generated@@48))
 :pattern ( ($generated@@146 $generated@@689 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 (T@U) Bool)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () Int)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () Int)
(declare-fun $generated@@711 () Int)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () Int)
(declare-fun $generated@@714 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@690) ($generated@@207 $generated@@81 $generated@@4)) (= (type $generated@@691) $generated@@81)) (= (type $generated@@692) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@693) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@696) $generated@@144)) (= (type $generated@@698) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@699) $generated@@144)) (= (type $generated@@700) $generated@@144)) (= (type $generated@@701) $generated@@144)) (= (type $generated@@702) $generated@@144)) (= (type $generated@@705) $generated@@144)) (= (type $generated@@706) $generated@@144)) (= (type $generated@@707) $generated@@144)) (= (type $generated@@708) $generated@@144)) (= (type $generated@@709) $generated@@144)) (= (type $generated@@712) $generated@@144)) (= (type $generated@@714) $generated@@144)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@715  (=> (= $generated@@690 ($generated@@206 $generated@@691 $generated@@692 $generated@@60 false)) (=> (and (and (and ($generated@@269 $generated@@693) ($generated@@694 $generated@@693)) (and (forall (($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@81) (=> (and (not (= $generated@@716 $generated@@691)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@692 $generated@@716) $generated@@60))) (= ($generated@@85 $generated@@693 $generated@@716) ($generated@@85 $generated@@692 $generated@@716))))
 :pattern ( ($generated@@85 $generated@@693 $generated@@716))
)) ($generated@@136 $generated@@692 $generated@@693))) (and (and $generated@@475 $generated@@475) (and (= $generated@@695 ($generated@@285 $generated@@602)) (= $generated@@696 ($generated@@287 ($generated@@164 ($generated@@287 ($generated@@164 ($generated@@287 $generated@@150) ($generated@@285 5) ($generated@@287 ($generated@@164 ($generated@@287 $generated@@150) ($generated@@285 7) ($generated@@287 $generated@@150))))) ($generated@@285 9) ($generated@@287 ($generated@@164 ($generated@@287 $generated@@150) ($generated@@285 10) ($generated@@287 ($generated@@164 ($generated@@287 $generated@@150) ($generated@@285 12) ($generated@@287 ($generated@@164 ($generated@@287 $generated@@150) ($generated@@285 30) ($generated@@287 $generated@@150))))))))))))) (=> (and (and (and (and ($generated@@78 $generated@@696 $generated@@147 $generated@@693) ($generated@@145 $generated@@696)) (and ($generated@@145 $generated@@696) (= $generated@@697 ($generated@@141 ($generated@@142 $generated@@543) $generated@@696)))) (and (and ($generated@@269 $generated@@698) ($generated@@694 $generated@@698)) (and (forall (($generated@@717 T@U) ) (!  (=> (= (type $generated@@717) $generated@@81) (=> (and (not (= $generated@@717 $generated@@691)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@693 $generated@@717) $generated@@60))) (= ($generated@@85 $generated@@698 $generated@@717) ($generated@@85 $generated@@693 $generated@@717))))
 :pattern ( ($generated@@85 $generated@@698 $generated@@717))
)) ($generated@@136 $generated@@693 $generated@@698)))) (and (and (and ($generated@@146 $generated@@699 $generated@@147) ($generated@@78 $generated@@699 $generated@@147 $generated@@698)) (and ($generated@@146 $generated@@700 $generated@@147) ($generated@@78 $generated@@700 $generated@@147 $generated@@698))) (and (and ($generated@@146 $generated@@701 $generated@@147) ($generated@@78 $generated@@701 $generated@@147 $generated@@698)) (and (= $generated@@702 $generated@@696) ($generated@@146 $generated@@702 $generated@@147))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@306 $generated@@702)) (=> ($generated@@306 $generated@@702) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@306 ($generated@@152 $generated@@702))) (=> ($generated@@306 ($generated@@152 $generated@@702)) (=> (= ($generated@@164 ($generated@@164 $generated@@699 $generated@@703 $generated@@700) $generated@@704 $generated@@701) $generated@@702) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@306 $generated@@700)) (=> ($generated@@306 $generated@@700) (=> (and ($generated@@146 $generated@@705 $generated@@147) ($generated@@78 $generated@@705 $generated@@147 $generated@@698)) (=> (and (and (and (and ($generated@@146 $generated@@706 $generated@@147) ($generated@@78 $generated@@706 $generated@@147 $generated@@698)) (and ($generated@@146 $generated@@707 $generated@@147) ($generated@@78 $generated@@707 $generated@@147 $generated@@698))) (and ($generated@@146 $generated@@708 $generated@@147) ($generated@@78 $generated@@708 $generated@@147 $generated@@698))) (and (= $generated@@709 $generated@@696) ($generated@@146 $generated@@709 $generated@@147))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@306 $generated@@709)) (=> ($generated@@306 $generated@@709) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@306 ($generated@@152 $generated@@709))) (=> ($generated@@306 ($generated@@152 $generated@@709)) (=> (and (= ($generated@@164 ($generated@@164 $generated@@706 $generated@@710 $generated@@707) $generated@@711 $generated@@708) $generated@@709) (= $generated@@712 ($generated@@261 ($generated@@324 ($generated@@8 $generated@@710)) ($generated@@324 $generated@@707)))) (=> (and (and ($generated@@146 $generated@@712 ($generated@@186 $generated@@46 $generated@@147)) ($generated@@185 $generated@@712)) (and (= ($generated@@261 ($generated@@324 ($generated@@8 $generated@@713)) ($generated@@324 $generated@@705)) $generated@@712) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@306 $generated@@705)))))))))))))))))))))
(let (($generated@@718  (=> (and ($generated@@269 $generated@@692) ($generated@@694 $generated@@692)) (=> (and (and (and ($generated@@146 $generated@@714 $generated@@147) ($generated@@78 $generated@@714 $generated@@147 $generated@@692)) true) (and (= 2 $generated@@140) (= (ControlFlow 0 8) 2))) $generated@@715))))
$generated@@718)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U T@U) Int)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) Int)
(declare-fun $generated@@160 (T@U Int T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U) Bool)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 () T@T)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@201 (T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@203 (T@T T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@269 (T@U T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (Int) Int)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@303 (T@U) Bool)
(declare-fun $generated@@306 (T@U T@U T@U) Bool)
(declare-fun $generated@@314 (T@U) Bool)
(declare-fun $generated@@323 (T@T) T@U)
(declare-fun $generated@@324 (T@U) Int)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@338 (T@T) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@T) T@U)
(declare-fun $generated@@363 (T@T T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@382 (T@T T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@455 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@T) T@U)
(declare-fun $generated@@496 () T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@539 () T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@544 (T@U Int) T@U)
(declare-fun $generated@@556 (T@U) Int)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(declare-fun $generated@@593 (T@U) Int)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@669 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@139) 14) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@138 $generated@@150)) $generated@@139)
 :pattern ( ($generated@@138 $generated@@150))
))) (= (type $generated@@143) $generated@@68)) (= (type $generated@@146) $generated@@140)) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@140)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@147 $generated@@152)) $generated@@140)
 :pattern ( ($generated@@147 $generated@@152))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@139) (= (type $generated@@154) $generated@@140)) (or ($generated@@141 $generated@@154) (and (not (= 1 $generated@@136)) ($generated@@142 $generated@@154 $generated@@143)))) (and (and ($generated@@144 $generated@@154) (=> (not ($generated@@145 $generated@@154 $generated@@146)) (let (($generated@@155 ($generated@@147 $generated@@154)))
(let (($generated@@156 ($generated@@148 $generated@@154)))
 (and ($generated@@141 $generated@@156) ($generated@@141 $generated@@155)))))) (= ($generated@@137 ($generated@@138 $generated@@153) $generated@@154) (ite ($generated@@145 $generated@@154 $generated@@146) 0 (let (($generated@@157 ($generated@@147 $generated@@154)))
(let (($generated@@158 ($generated@@149 $generated@@154)))
(let (($generated@@159 ($generated@@148 $generated@@154)))
(+ (+ ($generated@@137 $generated@@153 $generated@@159) $generated@@158) ($generated@@137 $generated@@153 $generated@@157)))))))))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@153) $generated@@154))
))))
(assert  (and (forall (($generated@@162 T@U) ($generated@@163 Int) ($generated@@164 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163 $generated@@164)) $generated@@140)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163 $generated@@164))
)) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@161 $generated@@165)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 Int) ($generated@@168 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@140) (= (type $generated@@168) $generated@@140)) (= ($generated@@161 ($generated@@160 $generated@@166 $generated@@167 $generated@@168)) $generated@@65))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 Int) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@169) $generated@@140) (= (type $generated@@171) $generated@@140)) (= ($generated@@148 ($generated@@160 $generated@@169 $generated@@170 $generated@@171)) $generated@@169))
 :pattern ( ($generated@@160 $generated@@169 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 Int) ($generated@@174 T@U) ) (!  (=> (and (= (type $generated@@172) $generated@@140) (= (type $generated@@174) $generated@@140)) (= ($generated@@149 ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@173))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 Int) ($generated@@177 T@U) ) (!  (=> (and (= (type $generated@@175) $generated@@140) (= (type $generated@@177) $generated@@140)) (= ($generated@@147 ($generated@@160 $generated@@175 $generated@@176 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@160 $generated@@175 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@2) ($generated@@142 $generated@@178 ($generated@@79 0)))
 :pattern ( ($generated@@142 $generated@@178 ($generated@@79 0)))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@139) (= (type $generated@@180) $generated@@140)) (or ($generated@@141 $generated@@180) (and (not (= 1 $generated@@136)) ($generated@@142 $generated@@180 $generated@@143)))) true)
 :pattern ( ($generated@@137 $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@183 $generated@@184)) $generated@@68)
 :pattern ( ($generated@@182 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (and (= (type $generated@@185) $generated@@68) (= (type $generated@@186) $generated@@68)) (= (type $generated@@187) $generated@@140)) ($generated@@142 $generated@@187 ($generated@@182 $generated@@185 $generated@@186))) ($generated@@181 $generated@@187))
 :pattern ( ($generated@@181 $generated@@187) ($generated@@142 $generated@@187 ($generated@@182 $generated@@185 $generated@@186)))
)))
(assert  (and (and (= ($generated@@1 $generated@@191) 16) (forall (($generated@@192 T@U) ) (! (= (type ($generated@@189 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@192))
))) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@193)) $generated@@191)
 :pattern ( ($generated@@190 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@140) (= (type $generated@@195) $generated@@140)) true) (= ($generated@@188 $generated@@194 $generated@@195)  (and (= ($generated@@189 $generated@@194) ($generated@@189 $generated@@195)) (= ($generated@@190 $generated@@194) ($generated@@190 $generated@@195)))))
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
)))
(assert (= ($generated@@161 $generated@@146) $generated@@63))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@68)
 :pattern ( ($generated@@196 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (= (type $generated@@199) ($generated@@80 $generated@@191 $generated@@2)) (= (type $generated@@200) $generated@@68)) ($generated@@142 $generated@@199 ($generated@@196 $generated@@200))) ($generated@@197 $generated@@199))
 :pattern ( ($generated@@142 $generated@@199 ($generated@@196 $generated@@200)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@207 $generated@@208)) 17)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@203 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@205 ($generated@@203 $generated@@211 $generated@@212)) $generated@@212)
 :pattern ( ($generated@@203 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@205 (type $generated@@213))))
(= (type ($generated@@201 $generated@@213 $generated@@214 $generated@@215)) $generated@@216))
 :pattern ( ($generated@@201 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 (type $generated@@220)))
(let (($generated@@222 (type $generated@@218)))
(= (type ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@203 $generated@@222 $generated@@221))))
 :pattern ( ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@205 (type $generated@@223))))
 (=> (= (type $generated@@226) $generated@@227) (= ($generated@@201 ($generated@@206 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@224 $generated@@225) $generated@@226)))
 :weight 0
))) (and (and (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@201 ($generated@@206 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@201 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@201 ($generated@@206 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@201 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or true (= ($generated@@201 ($generated@@206 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@201 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
)))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@203 $generated@@81 $generated@@4))
 :pattern ( ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@71 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@81) (= (type $generated@@251) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@252) ($generated@@70 $generated@@4))) (= (type $generated@@254) $generated@@81)) (= (type $generated@@255) ($generated@@70 $generated@@256))) (= ($generated@@0 ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 Bool) ) (! (= (type ($generated@@257 $generated@@258 $generated@@259 $generated@@260 $generated@@261)) ($generated@@203 $generated@@81 $generated@@4))
 :pattern ( ($generated@@257 $generated@@258 $generated@@259 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Bool) ($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@71 (type $generated@@267))))
 (=> (and (and (and (and (= (type $generated@@262) $generated@@81) (= (type $generated@@263) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@264) ($generated@@70 $generated@@4))) (= (type $generated@@266) $generated@@81)) (= (type $generated@@267) ($generated@@70 $generated@@268))) (= ($generated@@0 ($generated@@201 ($generated@@257 $generated@@262 $generated@@263 $generated@@264 $generated@@265) $generated@@266 $generated@@267))  (=> (and (not (= $generated@@266 $generated@@262)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@263 $generated@@266) $generated@@264))) $generated@@265))))
 :pattern ( ($generated@@201 ($generated@@257 $generated@@262 $generated@@263 $generated@@264 $generated@@265) $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (! (= (type ($generated@@269 $generated@@271 $generated@@272)) $generated@@140)
 :pattern ( ($generated@@269 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (= (type $generated@@273) $generated@@68) (= (type $generated@@274) $generated@@68)) (= (type $generated@@275) $generated@@191)) (= (type $generated@@276) $generated@@191)) (= ($generated@@142 ($generated@@269 $generated@@275 $generated@@276) ($generated@@182 $generated@@273 $generated@@274))  (and ($generated@@270 $generated@@275 $generated@@273) ($generated@@270 $generated@@276 $generated@@274))))
 :pattern ( ($generated@@142 ($generated@@269 $generated@@275 $generated@@276) ($generated@@182 $generated@@273 $generated@@274)))
)))
(assert ($generated@@142 $generated@@146 $generated@@143))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@277 $generated@@278)) ($generated@@78 $generated@@146 $generated@@143 $generated@@278))
 :pattern ( ($generated@@78 $generated@@146 $generated@@143 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@140) (= (type $generated@@280) $generated@@140)) (= ($generated@@188 $generated@@279 $generated@@280) (= $generated@@279 $generated@@280)))
 :pattern ( ($generated@@188 $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@140) (= (type $generated@@282) $generated@@140)) (= ($generated@@145 $generated@@281 $generated@@282) (= $generated@@281 $generated@@282)))
 :pattern ( ($generated@@145 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@68)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) ($generated@@80 $generated@@191 $generated@@4)) (= (type $generated@@286) $generated@@68)) (= ($generated@@142 $generated@@285 ($generated@@283 $generated@@286)) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@191) ($generated@@0 ($generated@@85 $generated@@285 $generated@@287))) ($generated@@270 $generated@@287 $generated@@286))
 :pattern ( ($generated@@85 $generated@@285 $generated@@287))
))))
 :pattern ( ($generated@@142 $generated@@285 ($generated@@283 $generated@@286)))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@68)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) ($generated@@80 $generated@@191 $generated@@4)) (= (type $generated@@291) $generated@@68)) (= ($generated@@142 $generated@@290 ($generated@@288 $generated@@291)) (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@191) ($generated@@0 ($generated@@85 $generated@@290 $generated@@292))) ($generated@@270 $generated@@292 $generated@@291))
 :pattern ( ($generated@@85 $generated@@290 $generated@@292))
))))
 :pattern ( ($generated@@142 $generated@@290 ($generated@@288 $generated@@291)))
)))
(assert (forall (($generated@@294 Int) ) (! (= ($generated@@293 $generated@@294) $generated@@294)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 (type $generated@@296)))
(= (type ($generated@@295 $generated@@296)) $generated@@297))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= ($generated@@295 $generated@@298) $generated@@298)
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 Int) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (= (type $generated@@299) $generated@@140) (= (type $generated@@301) $generated@@140)) (= (type $generated@@302) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@277 $generated@@302)) (= ($generated@@78 ($generated@@160 $generated@@299 $generated@@300 $generated@@301) $generated@@143 $generated@@302)  (and (and ($generated@@78 $generated@@299 $generated@@143 $generated@@302) ($generated@@78 ($generated@@8 $generated@@300) $generated@@46 $generated@@302)) ($generated@@78 $generated@@301 $generated@@143 $generated@@302))))
 :pattern ( ($generated@@78 ($generated@@160 $generated@@299 $generated@@300 $generated@@301) $generated@@143 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (= (type $generated@@304) $generated@@140) (= (type $generated@@305) $generated@@140)) (and ($generated@@303 $generated@@304) ($generated@@303 $generated@@305))) (= ($generated@@145 $generated@@304 $generated@@305) true))
 :pattern ( ($generated@@145 $generated@@304 $generated@@305) ($generated@@303 $generated@@304))
 :pattern ( ($generated@@145 $generated@@304 $generated@@305) ($generated@@303 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@307) $generated@@68) (= (type $generated@@308) $generated@@68)) (= (type $generated@@309) $generated@@191)) (= (type $generated@@310) $generated@@191)) (= (type $generated@@311) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@277 $generated@@311)) (= ($generated@@78 ($generated@@269 $generated@@309 $generated@@310) ($generated@@182 $generated@@307 $generated@@308) $generated@@311)  (and ($generated@@306 $generated@@309 $generated@@307 $generated@@311) ($generated@@306 $generated@@310 $generated@@308 $generated@@311))))
 :pattern ( ($generated@@78 ($generated@@269 $generated@@309 $generated@@310) ($generated@@182 $generated@@307 $generated@@308) $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@140) (= ($generated@@181 $generated@@312) (= ($generated@@161 $generated@@312) $generated@@61)))
 :pattern ( ($generated@@181 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@140) (= ($generated@@303 $generated@@313) (= ($generated@@161 $generated@@313) $generated@@63)))
 :pattern ( ($generated@@303 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@140) (= ($generated@@314 $generated@@315) (= ($generated@@161 $generated@@315) $generated@@65)))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@140) ($generated@@314 $generated@@316)) (exists (($generated@@317 T@U) ($generated@@318 Int) ($generated@@319 T@U) ) (!  (and (and (= (type $generated@@317) $generated@@140) (= (type $generated@@319) $generated@@140)) (= $generated@@316 ($generated@@160 $generated@@317 $generated@@318 $generated@@319)))
 :no-pattern (type $generated@@317)
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
)))
 :pattern ( ($generated@@314 $generated@@316))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@140) ($generated@@181 $generated@@320)) (exists (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (and (and (= (type $generated@@321) $generated@@191) (= (type $generated@@322) $generated@@191)) (= $generated@@320 ($generated@@269 $generated@@321 $generated@@322)))
 :no-pattern (type $generated@@321)
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
)))
 :pattern ( ($generated@@181 $generated@@320))
)))
(assert  (and (and (forall (($generated@@327 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@327)) 18)) (forall (($generated@@328 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@325 $generated@@328))
))) (forall (($generated@@329 T@T) ) (! (= (type ($generated@@323 $generated@@329)) ($generated@@325 $generated@@329))
 :pattern ( ($generated@@323 $generated@@329))
))))
(assert (forall (($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@330)) 0)
 :pattern ( ($generated@@323 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@140) ($generated@@303 $generated@@331)) (= $generated@@331 $generated@@146))
 :pattern ( ($generated@@303 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@191)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@68) (= (type $generated@@336) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@306 ($generated@@332 $generated@@334) $generated@@335 $generated@@336) ($generated@@78 $generated@@334 $generated@@335 $generated@@336)))
 :pattern ( ($generated@@306 ($generated@@332 $generated@@334) $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@339 T@T) ) (! (= (type ($generated@@338 $generated@@339)) ($generated@@80 $generated@@339 $generated@@2))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@83 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@80 $generated@@341 $generated@@2)) (and (= (= ($generated@@337 $generated@@340) 0) (= $generated@@340 ($generated@@338 $generated@@341))) (=> (not (= ($generated@@337 $generated@@340) 0)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) (< 0 ($generated ($generated@@85 $generated@@340 $generated@@342))))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 19)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@80 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@85 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@85 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert  (and (and (and (and (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (= ($generated@@1 ($generated@@363 $generated@@366 $generated@@367)) 20)) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= ($generated@@364 ($generated@@363 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@363 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@365 ($generated@@363 $generated@@370 $generated@@371)) $generated@@371)
 :pattern ( ($generated@@363 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@364 (type $generated@@372))))
(= (type ($generated@@361 $generated@@372)) ($generated@@80 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@372))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= (type ($generated@@362 $generated@@374 $generated@@375)) ($generated@@363 $generated@@374 $generated@@375))
 :pattern ( ($generated@@362 $generated@@374 $generated@@375))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@T) ) (! (let (($generated@@378 (type $generated@@376)))
 (not ($generated@@0 ($generated@@85 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376))))
 :pattern ( (let (($generated@@378 (type $generated@@376)))
($generated@@85 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376)))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@83 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@80 $generated@@380 $generated@@2)) (= ($generated@@197 $generated@@379) (forall (($generated@@381 T@U) ) (!  (=> (= (type $generated@@381) $generated@@380) (and (<= 0 ($generated ($generated@@85 $generated@@379 $generated@@381))) (<= ($generated ($generated@@85 $generated@@379 $generated@@381)) ($generated@@337 $generated@@379))))
 :pattern ( ($generated@@85 $generated@@379 $generated@@381))
)))))
 :pattern ( ($generated@@197 $generated@@379))
)))
(assert (forall (($generated@@383 T@T) ($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@383 $generated@@384)) $generated@@383)
 :pattern ( ($generated@@382 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@191) ($generated@@270 $generated@@385 $generated@@143)) (and (= ($generated@@332 ($generated@@382 $generated@@140 $generated@@385)) $generated@@385) ($generated@@142 ($generated@@382 $generated@@140 $generated@@385) $generated@@143)))
 :pattern ( ($generated@@270 $generated@@385 $generated@@143))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@347 (type $generated@@386))))
(let (($generated@@388 ($generated@@346 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@345 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@344 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@343 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@347 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@80 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@347 (type $generated@@393))))
(let (($generated@@395 ($generated@@346 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@345 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@344 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@85 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@365 (type $generated@@397))))
(let (($generated@@399 ($generated@@364 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@363 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@362 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@361 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@365 (type $generated@@402))))
(= (type ($generated@@401 $generated@@402)) ($generated@@80 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@365 (type $generated@@404))))
(let (($generated@@406 ($generated@@364 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@363 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@362 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@405) ($generated@@0 ($generated@@85 ($generated@@401 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@401 $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@80 $generated@@191 $generated@@2)) (= (type $generated@@409) $generated@@68)) (= ($generated@@142 $generated@@408 ($generated@@196 $generated@@409)) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@191) (< 0 ($generated ($generated@@85 $generated@@408 $generated@@410)))) ($generated@@270 $generated@@410 $generated@@409))
 :pattern ( ($generated@@85 $generated@@408 $generated@@410))
))))
 :pattern ( ($generated@@142 $generated@@408 ($generated@@196 $generated@@409)))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@140) ($generated@@144 $generated@@411)) (or ($generated@@303 $generated@@411) ($generated@@314 $generated@@411)))
 :pattern ( ($generated@@144 $generated@@411))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@412) $generated@@139) (= (type $generated@@413) $generated@@140)) (or ($generated@@141 ($generated@@295 $generated@@413)) (and (not (= 1 $generated@@136)) ($generated@@142 $generated@@413 $generated@@143)))) (and (and ($generated@@144 ($generated@@295 $generated@@413)) (=> (not ($generated@@145 $generated@@413 $generated@@146)) (let (($generated@@414 ($generated@@147 ($generated@@295 $generated@@413))))
(let (($generated@@415 ($generated@@148 ($generated@@295 $generated@@413))))
 (and ($generated@@141 $generated@@415) ($generated@@141 $generated@@414)))))) (= ($generated@@137 ($generated@@138 $generated@@412) ($generated@@295 $generated@@413)) (ite ($generated@@145 $generated@@413 $generated@@146) 0 (let (($generated@@416 ($generated@@147 ($generated@@295 $generated@@413))))
(let (($generated@@417 ($generated@@149 ($generated@@295 $generated@@413))))
(let (($generated@@418 ($generated@@148 ($generated@@295 $generated@@413))))
(+ (+ ($generated@@137 ($generated@@138 $generated@@412) $generated@@418) $generated@@417) ($generated@@137 ($generated@@138 $generated@@412) $generated@@416)))))))))
 :weight 3
 :pattern ( ($generated@@137 ($generated@@138 $generated@@412) ($generated@@295 $generated@@413)))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (= (type $generated@@419) ($generated@@80 $generated@@191 $generated@@4)) (= (type $generated@@420) $generated@@68)) (= (type $generated@@421) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@419 ($generated@@283 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@191) ($generated@@0 ($generated@@85 $generated@@419 $generated@@422))) ($generated@@306 $generated@@422 $generated@@420 $generated@@421))
 :pattern ( ($generated@@85 $generated@@419 $generated@@422))
))))
 :pattern ( ($generated@@78 $generated@@419 ($generated@@283 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@80 $generated@@191 $generated@@4)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@423 ($generated@@288 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@191) ($generated@@0 ($generated@@85 $generated@@423 $generated@@426))) ($generated@@306 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@85 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@78 $generated@@423 ($generated@@288 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(= ($generated ($generated@@85 ($generated@@338 $generated@@428) $generated@@427)) 0))
 :pattern ( (let (($generated@@428 (type $generated@@427)))
($generated@@85 ($generated@@338 $generated@@428) $generated@@427)))
)))
(assert  (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@431)) ($generated@@80 $generated@@191 $generated@@4))
 :pattern ( ($generated@@429 $generated@@431))
)) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@347 (type $generated@@432))))
(let (($generated@@434 ($generated@@346 (type $generated@@432))))
(= (type ($generated@@430 $generated@@432)) ($generated@@80 $generated@@434 $generated@@433))))
 :pattern ( ($generated@@430 $generated@@432))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@345 $generated@@191 $generated@@191)) (= (type $generated@@436) $generated@@191)) (= ($generated@@0 ($generated@@85 ($generated@@429 $generated@@435) $generated@@436))  (and ($generated@@0 ($generated@@85 ($generated@@343 $generated@@435) ($generated@@189 ($generated@@382 $generated@@140 $generated@@436)))) (= ($generated@@85 ($generated@@430 $generated@@435) ($generated@@189 ($generated@@382 $generated@@140 $generated@@436))) ($generated@@190 ($generated@@382 $generated@@140 $generated@@436))))))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@435) $generated@@436))
)))
(assert  (and (forall (($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@439)) ($generated@@80 $generated@@191 $generated@@4))
 :pattern ( ($generated@@437 $generated@@439))
)) (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@365 (type $generated@@440))))
(let (($generated@@442 ($generated@@364 (type $generated@@440))))
(= (type ($generated@@438 $generated@@440)) ($generated@@80 $generated@@442 $generated@@441))))
 :pattern ( ($generated@@438 $generated@@440))
))))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) ($generated@@363 $generated@@191 $generated@@191)) (= (type $generated@@444) $generated@@191)) (= ($generated@@0 ($generated@@85 ($generated@@437 $generated@@443) $generated@@444))  (and ($generated@@0 ($generated@@85 ($generated@@361 $generated@@443) ($generated@@189 ($generated@@382 $generated@@140 $generated@@444)))) (= ($generated@@85 ($generated@@438 $generated@@443) ($generated@@189 ($generated@@382 $generated@@140 $generated@@444))) ($generated@@190 ($generated@@382 $generated@@140 $generated@@444))))))
 :pattern ( ($generated@@85 ($generated@@437 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@346 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@345 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@85 ($generated@@390 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@85 ($generated@@343 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@85 ($generated@@430 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@445) $generated@@449))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (let (($generated@@452 (type $generated@@451)))
(let (($generated@@453 ($generated@@364 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@363 $generated@@453 $generated@@452)) (= ($generated@@0 ($generated@@85 ($generated@@401 $generated@@450) $generated@@451)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@453) (and ($generated@@0 ($generated@@85 ($generated@@361 $generated@@450) $generated@@454)) (= $generated@@451 ($generated@@85 ($generated@@438 $generated@@450) $generated@@454))))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@450) $generated@@454))
 :pattern ( ($generated@@85 ($generated@@438 $generated@@450) $generated@@454))
))))))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@456 $generated@@457)) $generated@@68)
 :pattern ( ($generated@@455 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (and (= (type $generated@@458) ($generated@@345 $generated@@191 $generated@@191)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) $generated@@68)) (= (type $generated@@461) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@191) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@458) $generated@@462))) (and ($generated@@306 ($generated@@85 ($generated@@430 $generated@@458) $generated@@462) $generated@@460 $generated@@461) ($generated@@306 $generated@@462 $generated@@459 $generated@@461)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@458) $generated@@462))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@458) $generated@@462))
))))
 :pattern ( ($generated@@78 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@463 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (and (= (type $generated@@466) ($generated@@363 $generated@@191 $generated@@191)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) $generated@@68)) (= (type $generated@@469) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@466 ($generated@@463 $generated@@467 $generated@@468) $generated@@469) (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@191) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@466) $generated@@470))) (and ($generated@@306 ($generated@@85 ($generated@@438 $generated@@466) $generated@@470) $generated@@468 $generated@@469) ($generated@@306 $generated@@470 $generated@@467 $generated@@469)))
 :pattern ( ($generated@@85 ($generated@@438 $generated@@466) $generated@@470))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@466) $generated@@470))
))))
 :pattern ( ($generated@@78 $generated@@466 ($generated@@463 $generated@@467 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@140) ($generated@@142 $generated@@471 $generated@@143)) (or ($generated@@303 $generated@@471) ($generated@@314 $generated@@471)))
 :pattern ( ($generated@@314 $generated@@471) ($generated@@142 $generated@@471 $generated@@143))
 :pattern ( ($generated@@303 $generated@@471) ($generated@@142 $generated@@471 $generated@@143))
)))
(assert (forall (($generated@@473 T@T) ) (! (= (type ($generated@@472 $generated@@473)) ($generated@@80 $generated@@473 $generated@@4))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@365 (type $generated@@474))))
(let (($generated@@476 ($generated@@364 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@363 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@362 $generated@@476 $generated@@475)) (= ($generated@@361 $generated@@474) ($generated@@472 $generated@@476))))))
 :pattern ( ($generated@@361 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@365 (type $generated@@477))))
(let (($generated@@479 ($generated@@364 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@363 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@362 $generated@@479 $generated@@478)) (= ($generated@@401 $generated@@477) ($generated@@472 $generated@@478))))))
 :pattern ( ($generated@@401 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@365 (type $generated@@480))))
(let (($generated@@482 ($generated@@364 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@363 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@362 $generated@@482 $generated@@481)) (= ($generated@@437 $generated@@480) ($generated@@472 $generated@@191))))))
 :pattern ( ($generated@@437 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@347 (type $generated@@483))))
(let (($generated@@485 ($generated@@346 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@345 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@344 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@191) (= (type $generated@@487) $generated@@191)) ($generated@@0 ($generated@@85 ($generated@@429 $generated@@483) ($generated@@332 ($generated@@269 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@429 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@365 (type $generated@@488))))
(let (($generated@@490 ($generated@@364 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@363 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@362 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@191) (= (type $generated@@492) $generated@@191)) ($generated@@0 ($generated@@85 ($generated@@437 $generated@@488) ($generated@@332 ($generated@@269 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@437 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@191) ($generated@@270 $generated@@493 $generated@@46)) (and (= ($generated@@332 ($generated@@382 $generated@@2 $generated@@493)) $generated@@493) ($generated@@142 ($generated@@382 $generated@@2 $generated@@493) $generated@@46)))
 :pattern ( ($generated@@270 $generated@@493 $generated@@46))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@191) ($generated@@270 $generated@@494 $generated@@47)) (and (= ($generated@@332 ($generated@@382 $generated@@3 $generated@@494)) $generated@@494) ($generated@@142 ($generated@@382 $generated@@3 $generated@@494) $generated@@47)))
 :pattern ( ($generated@@270 $generated@@494 $generated@@47))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@191) ($generated@@270 $generated@@495 $generated@@44)) (and (= ($generated@@332 ($generated@@382 $generated@@4 $generated@@495)) $generated@@495) ($generated@@142 ($generated@@382 $generated@@4 $generated@@495) $generated@@44)))
 :pattern ( ($generated@@270 $generated@@495 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@496) 21))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@191) ($generated@@270 $generated@@497 $generated@@45)) (and (= ($generated@@332 ($generated@@382 $generated@@496 $generated@@497)) $generated@@497) ($generated@@142 ($generated@@382 $generated@@496 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@270 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@68) (= ($generated@@270 ($generated@@332 $generated@@498) $generated@@499) ($generated@@142 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@270 ($generated@@332 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@83 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@80 $generated@@501 $generated@@2)) (<= 0 ($generated@@337 $generated@@500))))
 :pattern ( ($generated@@337 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@326 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@325 $generated@@503)) (<= 0 ($generated@@324 $generated@@502))))
 :pattern ( ($generated@@324 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@504 ($generated@@455 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@455 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@508 ($generated@@455 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@455 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@68) (= (type $generated@@513) $generated@@68)) (= ($generated@@76 ($generated@@455 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@455 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@68) (= (type $generated@@517) $generated@@68)) (= ($generated@@514 ($generated@@463 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@463 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= ($generated@@518 ($generated@@463 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@463 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@68) (= (type $generated@@523) $generated@@68)) (= ($generated@@76 ($generated@@463 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@463 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@191) (= (type $generated@@525) $generated@@191)) (= ($generated@@161 ($generated@@269 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@269 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@68) (= (type $generated@@529) $generated@@68)) (= ($generated@@526 ($generated@@182 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@182 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@68) (= (type $generated@@533) $generated@@68)) (= ($generated@@530 ($generated@@182 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@182 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@191) (= (type $generated@@535) $generated@@191)) (= ($generated@@189 ($generated@@269 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@269 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@191) (= (type $generated@@537) $generated@@191)) (= ($generated@@190 ($generated@@269 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@269 $generated@@536 $generated@@537))
)))
(assert  (and (forall (($generated@@540 T@U) ) (! (= (type ($generated@@538 $generated@@540)) $generated@@139)
 :pattern ( ($generated@@538 $generated@@540))
)) (= (type $generated@@539) $generated@@139)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@139) (= (type $generated@@542) $generated@@140)) (= ($generated@@137 $generated@@541 $generated@@542) ($generated@@137 $generated@@539 $generated@@542)))
 :pattern ( ($generated@@137 ($generated@@538 $generated@@541) $generated@@542))
)))
(assert  (and (forall (($generated@@545 T@U) ) (! (= (type ($generated@@543 $generated@@545)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@545))
)) (forall (($generated@@546 T@U) ($generated@@547 Int) ) (! (let (($generated@@548 ($generated@@326 (type $generated@@546))))
(= (type ($generated@@544 $generated@@546 $generated@@547)) $generated@@548))
 :pattern ( ($generated@@544 $generated@@546 $generated@@547))
))))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@325 $generated@@191)) (= (type $generated@@550) $generated@@68)) (= (type $generated@@551) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@549 ($generated@@543 $generated@@550) $generated@@551) (forall (($generated@@552 Int) ) (!  (=> (and (<= 0 $generated@@552) (< $generated@@552 ($generated@@324 $generated@@549))) ($generated@@306 ($generated@@544 $generated@@549 $generated@@552) $generated@@550 $generated@@551))
 :pattern ( ($generated@@544 $generated@@549 $generated@@552))
))))
 :pattern ( ($generated@@78 $generated@@549 ($generated@@543 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 Int) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@140) (= (type $generated@@555) $generated@@140)) (= ($generated@@160 ($generated@@295 $generated@@553) ($generated@@293 $generated@@554) ($generated@@295 $generated@@555)) ($generated@@295 ($generated@@160 $generated@@553 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@160 ($generated@@295 $generated@@553) ($generated@@293 $generated@@554) ($generated@@295 $generated@@555)))
)))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@556 ($generated@@79 $generated@@557)) $generated@@557)
 :pattern ( ($generated@@79 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@68)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@68) (= ($generated@@558 ($generated@@283 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@283 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@76 ($generated@@283 $generated@@561)) $generated@@54))
 :pattern ( ($generated@@283 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@68) (= ($generated@@562 ($generated@@288 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@288 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@76 ($generated@@288 $generated@@565)) $generated@@55))
 :pattern ( ($generated@@288 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@68)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@68) (= ($generated@@566 ($generated@@196 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@196 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@76 ($generated@@196 $generated@@569)) $generated@@56))
 :pattern ( ($generated@@196 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@68)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@570 ($generated@@543 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@543 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@68) (= ($generated@@76 ($generated@@543 $generated@@573)) $generated@@57))
 :pattern ( ($generated@@543 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@574)))
(= ($generated@@382 $generated@@575 ($generated@@332 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@332 $generated@@574))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 Int) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@140) (= (type $generated@@579) $generated@@140)) (< ($generated@@576 $generated@@577) ($generated@@576 ($generated@@160 $generated@@577 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@160 $generated@@577 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@140) (= (type $generated@@582) $generated@@140)) (< ($generated@@576 $generated@@582) ($generated@@576 ($generated@@160 $generated@@580 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@160 $generated@@580 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@345 $generated@@191 $generated@@191)) (= (type $generated@@584) $generated@@68)) (= (type $generated@@585) $generated@@68)) (= ($generated@@142 $generated@@583 ($generated@@455 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@191) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@583) $generated@@586))) (and ($generated@@270 ($generated@@85 ($generated@@430 $generated@@583) $generated@@586) $generated@@585) ($generated@@270 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@583) $generated@@586))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@142 $generated@@583 ($generated@@455 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@363 $generated@@191 $generated@@191)) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) $generated@@68)) (= ($generated@@142 $generated@@587 ($generated@@463 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@191) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@587) $generated@@590))) (and ($generated@@270 ($generated@@85 ($generated@@438 $generated@@587) $generated@@590) $generated@@589) ($generated@@270 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@85 ($generated@@438 $generated@@587) $generated@@590))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@142 $generated@@587 ($generated@@463 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@140) (= (type $generated@@592) $generated@@140)) (and ($generated@@314 $generated@@591) ($generated@@314 $generated@@592))) (= ($generated@@145 $generated@@591 $generated@@592)  (and (and ($generated@@145 ($generated@@148 $generated@@591) ($generated@@148 $generated@@592)) (= ($generated@@149 $generated@@591) ($generated@@149 $generated@@592))) ($generated@@145 ($generated@@147 $generated@@591) ($generated@@147 $generated@@592)))))
 :pattern ( ($generated@@145 $generated@@591 $generated@@592) ($generated@@314 $generated@@591))
 :pattern ( ($generated@@145 $generated@@591 $generated@@592) ($generated@@314 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@191) (= (type $generated@@595) $generated@@191)) (< ($generated@@593 $generated@@594) ($generated@@576 ($generated@@269 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@269 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@191) (= (type $generated@@597) $generated@@191)) (< ($generated@@593 $generated@@597) ($generated@@576 ($generated@@269 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@269 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@139) (= (type $generated@@599) $generated@@140)) (= ($generated@@137 ($generated@@138 $generated@@598) $generated@@599) ($generated@@137 $generated@@598 $generated@@599)))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@598) $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@191) (= (type $generated@@601) $generated@@68)) (= (type $generated@@602) $generated@@68)) ($generated@@270 $generated@@600 ($generated@@455 $generated@@601 $generated@@602))) (and (= ($generated@@332 ($generated@@382 ($generated@@345 $generated@@191 $generated@@191) $generated@@600)) $generated@@600) ($generated@@142 ($generated@@382 ($generated@@345 $generated@@191 $generated@@191) $generated@@600) ($generated@@455 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@270 $generated@@600 ($generated@@455 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@191) (= (type $generated@@604) $generated@@68)) (= (type $generated@@605) $generated@@68)) ($generated@@270 $generated@@603 ($generated@@463 $generated@@604 $generated@@605))) (and (= ($generated@@332 ($generated@@382 ($generated@@363 $generated@@191 $generated@@191) $generated@@603)) $generated@@603) ($generated@@142 ($generated@@382 ($generated@@363 $generated@@191 $generated@@191) $generated@@603) ($generated@@463 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@270 $generated@@603 ($generated@@463 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@68) (= (type $generated@@607) $generated@@68)) (= (type $generated@@608) $generated@@191)) ($generated@@270 $generated@@608 ($generated@@182 $generated@@606 $generated@@607))) (and (= ($generated@@332 ($generated@@382 $generated@@140 $generated@@608)) $generated@@608) ($generated@@142 ($generated@@382 $generated@@140 $generated@@608) ($generated@@182 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@270 $generated@@608 ($generated@@182 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (not ($generated@@0 ($generated@@85 ($generated@@472 $generated@@610) $generated@@609))))
 :pattern ( (let (($generated@@610 (type $generated@@609)))
($generated@@85 ($generated@@472 $generated@@610) $generated@@609)))
)))
(assert (forall (($generated@@612 T@U) ) (! (= (type ($generated@@611 $generated@@612)) $generated@@73)
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@68) (= (type $generated@@614) $generated@@68)) (and (= ($generated@@76 ($generated@@182 $generated@@613 $generated@@614)) $generated@@62) (= ($generated@@611 ($generated@@182 $generated@@613 $generated@@614)) $generated@@66)))
 :pattern ( ($generated@@182 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@140) (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@277 $generated@@616) (and ($generated@@314 $generated@@615) ($generated@@78 $generated@@615 $generated@@143 $generated@@616)))) ($generated@@78 ($generated@@8 ($generated@@149 $generated@@615)) $generated@@46 $generated@@616))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@149 $generated@@615)) $generated@@46 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@140) (= ($generated@@593 ($generated@@332 $generated@@617)) ($generated@@576 $generated@@617)))
 :pattern ( ($generated@@593 ($generated@@332 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@191) ($generated@@270 $generated@@618 ($generated@@79 0))) (and (= ($generated@@332 ($generated@@382 $generated@@2 $generated@@618)) $generated@@618) ($generated@@142 ($generated@@382 ($generated@@80 $generated@@191 $generated@@4) $generated@@618) ($generated@@79 0))))
 :pattern ( ($generated@@270 $generated@@618 ($generated@@79 0)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@191) (= (type $generated@@620) $generated@@68)) ($generated@@270 $generated@@619 ($generated@@283 $generated@@620))) (and (= ($generated@@332 ($generated@@382 ($generated@@80 $generated@@191 $generated@@4) $generated@@619)) $generated@@619) ($generated@@142 ($generated@@382 ($generated@@80 $generated@@191 $generated@@4) $generated@@619) ($generated@@283 $generated@@620))))
 :pattern ( ($generated@@270 $generated@@619 ($generated@@283 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@191) (= (type $generated@@622) $generated@@68)) ($generated@@270 $generated@@621 ($generated@@288 $generated@@622))) (and (= ($generated@@332 ($generated@@382 ($generated@@80 $generated@@191 $generated@@4) $generated@@621)) $generated@@621) ($generated@@142 ($generated@@382 ($generated@@80 $generated@@191 $generated@@4) $generated@@621) ($generated@@288 $generated@@622))))
 :pattern ( ($generated@@270 $generated@@621 ($generated@@288 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@191) (= (type $generated@@624) $generated@@68)) ($generated@@270 $generated@@623 ($generated@@196 $generated@@624))) (and (= ($generated@@332 ($generated@@382 ($generated@@80 $generated@@191 $generated@@2) $generated@@623)) $generated@@623) ($generated@@142 ($generated@@382 ($generated@@80 $generated@@191 $generated@@2) $generated@@623) ($generated@@196 $generated@@624))))
 :pattern ( ($generated@@270 $generated@@623 ($generated@@196 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@191) (= (type $generated@@626) $generated@@68)) ($generated@@270 $generated@@625 ($generated@@543 $generated@@626))) (and (= ($generated@@332 ($generated@@382 ($generated@@325 $generated@@191) $generated@@625)) $generated@@625) ($generated@@142 ($generated@@382 ($generated@@325 $generated@@191) $generated@@625) ($generated@@543 $generated@@626))))
 :pattern ( ($generated@@270 $generated@@625 ($generated@@543 $generated@@626)))
)))
(assert (= ($generated@@76 $generated@@143) $generated@@64))
(assert (= ($generated@@611 $generated@@143) $generated@@67))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@627) ($generated@@80 $generated@@191 $generated@@2)) (= (type $generated@@628) $generated@@68)) (= (type $generated@@629) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@627 ($generated@@196 $generated@@628) $generated@@629) (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@191) (< 0 ($generated ($generated@@85 $generated@@627 $generated@@630)))) ($generated@@306 $generated@@630 $generated@@628 $generated@@629))
 :pattern ( ($generated@@85 $generated@@627 $generated@@630))
))))
 :pattern ( ($generated@@78 $generated@@627 ($generated@@196 $generated@@628) $generated@@629))
)))
(assert (= $generated@@146 ($generated@@295 $generated@@146)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@140) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@277 $generated@@633) (and ($generated@@181 $generated@@631) (exists (($generated@@634 T@U) ) (!  (and (= (type $generated@@634) $generated@@68) ($generated@@78 $generated@@631 ($generated@@182 $generated@@632 $generated@@634) $generated@@633))
 :pattern ( ($generated@@78 $generated@@631 ($generated@@182 $generated@@632 $generated@@634) $generated@@633))
))))) ($generated@@306 ($generated@@189 $generated@@631) $generated@@632 $generated@@633))
 :pattern ( ($generated@@306 ($generated@@189 $generated@@631) $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) $generated@@140) (= (type $generated@@636) $generated@@68)) (= (type $generated@@637) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@277 $generated@@637) (and ($generated@@181 $generated@@635) (exists (($generated@@638 T@U) ) (!  (and (= (type $generated@@638) $generated@@68) ($generated@@78 $generated@@635 ($generated@@182 $generated@@638 $generated@@636) $generated@@637))
 :pattern ( ($generated@@78 $generated@@635 ($generated@@182 $generated@@638 $generated@@636) $generated@@637))
))))) ($generated@@306 ($generated@@190 $generated@@635) $generated@@636 $generated@@637))
 :pattern ( ($generated@@306 ($generated@@190 $generated@@635) $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) $generated@@140) (= (type $generated@@640) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@277 $generated@@640) (and ($generated@@314 $generated@@639) ($generated@@78 $generated@@639 $generated@@143 $generated@@640)))) ($generated@@78 ($generated@@148 $generated@@639) $generated@@143 $generated@@640))
 :pattern ( ($generated@@78 ($generated@@148 $generated@@639) $generated@@143 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) $generated@@140) (= (type $generated@@642) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@277 $generated@@642) (and ($generated@@314 $generated@@641) ($generated@@78 $generated@@641 $generated@@143 $generated@@642)))) ($generated@@78 ($generated@@147 $generated@@641) $generated@@143 $generated@@642))
 :pattern ( ($generated@@78 ($generated@@147 $generated@@641) $generated@@143 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@191) (= (type $generated@@644) $generated@@191)) (= ($generated@@269 ($generated@@295 $generated@@643) ($generated@@295 $generated@@644)) ($generated@@295 ($generated@@269 $generated@@643 $generated@@644))))
 :pattern ( ($generated@@269 ($generated@@295 $generated@@643) ($generated@@295 $generated@@644)))
)))
(assert (forall (($generated@@645 Int) ) (! (= ($generated@@332 ($generated@@8 ($generated@@293 $generated@@645))) ($generated@@295 ($generated@@332 ($generated@@8 $generated@@645))))
 :pattern ( ($generated@@332 ($generated@@8 ($generated@@293 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ) (! (= ($generated@@332 ($generated@@295 $generated@@646)) ($generated@@295 ($generated@@332 $generated@@646)))
 :pattern ( ($generated@@332 ($generated@@295 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (! (let (($generated@@648 ($generated@@326 (type $generated@@647))))
 (=> (and (= (type $generated@@647) ($generated@@325 $generated@@648)) (= ($generated@@324 $generated@@647) 0)) (= $generated@@647 ($generated@@323 $generated@@648))))
 :pattern ( ($generated@@324 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (! (let (($generated@@652 (type $generated@@650)))
 (=> (and (and (= (type $generated@@649) ($generated@@80 $generated@@652 $generated@@2)) (= (type $generated@@651) $generated@@2)) (<= 0 ($generated $generated@@651))) (= ($generated@@337 ($generated@@86 $generated@@649 $generated@@650 $generated@@651)) (+ (- ($generated@@337 $generated@@649) ($generated ($generated@@85 $generated@@649 $generated@@650))) ($generated $generated@@651)))))
 :pattern ( ($generated@@337 ($generated@@86 $generated@@649 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@654) $generated@@2)) ($generated@@78 $generated@@654 $generated@@46 $generated@@653))
 :pattern ( ($generated@@78 $generated@@654 $generated@@46 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@656) $generated@@3)) ($generated@@78 $generated@@656 $generated@@47 $generated@@655))
 :pattern ( ($generated@@78 $generated@@656 $generated@@47 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@658) $generated@@4)) ($generated@@78 $generated@@658 $generated@@44 $generated@@657))
 :pattern ( ($generated@@78 $generated@@658 $generated@@44 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@660) $generated@@496)) ($generated@@78 $generated@@660 $generated@@45 $generated@@659))
 :pattern ( ($generated@@78 $generated@@660 $generated@@45 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@662) $generated@@191)) ($generated@@78 $generated@@662 $generated@@48 $generated@@661))
 :pattern ( ($generated@@78 $generated@@662 $generated@@48 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 Int) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@140) (= (type $generated@@665) $generated@@140)) (= ($generated@@142 ($generated@@160 $generated@@663 $generated@@664 $generated@@665) $generated@@143)  (and (and ($generated@@142 $generated@@663 $generated@@143) ($generated@@142 ($generated@@8 $generated@@664) $generated@@46)) ($generated@@142 $generated@@665 $generated@@143))))
 :pattern ( ($generated@@142 ($generated@@160 $generated@@663 $generated@@664 $generated@@665) $generated@@143))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@325 $generated@@191)) (= (type $generated@@667) $generated@@68)) (= ($generated@@142 $generated@@666 ($generated@@543 $generated@@667)) (forall (($generated@@668 Int) ) (!  (=> (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@324 $generated@@666))) ($generated@@270 ($generated@@544 $generated@@666 $generated@@668) $generated@@667))
 :pattern ( ($generated@@544 $generated@@666 $generated@@668))
))))
 :pattern ( ($generated@@142 $generated@@666 ($generated@@543 $generated@@667)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 Int) ) (!  (=> (= (type $generated@@670) ($generated@@325 $generated@@191)) (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@324 $generated@@670))) (< ($generated@@576 ($generated@@382 $generated@@140 ($generated@@544 $generated@@670 $generated@@671))) ($generated@@669 $generated@@670))))
 :pattern ( ($generated@@576 ($generated@@382 $generated@@140 ($generated@@544 $generated@@670 $generated@@671))))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) ($generated@@345 $generated@@191 $generated@@191)) (= (type $generated@@673) $generated@@68)) (= (type $generated@@674) $generated@@68)) ($generated@@142 $generated@@672 ($generated@@455 $generated@@673 $generated@@674))) (and (and ($generated@@142 ($generated@@343 $generated@@672) ($generated@@283 $generated@@673)) ($generated@@142 ($generated@@390 $generated@@672) ($generated@@283 $generated@@674))) ($generated@@142 ($generated@@429 $generated@@672) ($generated@@283 ($generated@@182 $generated@@673 $generated@@674)))))
 :pattern ( ($generated@@142 $generated@@672 ($generated@@455 $generated@@673 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) ($generated@@363 $generated@@191 $generated@@191)) (= (type $generated@@676) $generated@@68)) (= (type $generated@@677) $generated@@68)) ($generated@@142 $generated@@675 ($generated@@463 $generated@@676 $generated@@677))) (and (and ($generated@@142 ($generated@@361 $generated@@675) ($generated@@288 $generated@@676)) ($generated@@142 ($generated@@401 $generated@@675) ($generated@@288 $generated@@677))) ($generated@@142 ($generated@@437 $generated@@675) ($generated@@288 ($generated@@182 $generated@@676 $generated@@677)))))
 :pattern ( ($generated@@142 $generated@@675 ($generated@@463 $generated@@676 $generated@@677)))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@2) ($generated@@142 $generated@@678 $generated@@46))
 :pattern ( ($generated@@142 $generated@@678 $generated@@46))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@3) ($generated@@142 $generated@@679 $generated@@47))
 :pattern ( ($generated@@142 $generated@@679 $generated@@47))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@4) ($generated@@142 $generated@@680 $generated@@44))
 :pattern ( ($generated@@142 $generated@@680 $generated@@44))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@496) ($generated@@142 $generated@@681 $generated@@45))
 :pattern ( ($generated@@142 $generated@@681 $generated@@45))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@191) ($generated@@142 $generated@@682 $generated@@48))
 :pattern ( ($generated@@142 $generated@@682 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@683) $generated@@140) (= (type $generated@@684) $generated@@140)) (= (type $generated@@685) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@686) $generated@@140)) (= (type $generated@@687) $generated@@140)) (= (type $generated@@689) ($generated@@203 $generated@@81 $generated@@4))) (= (type $generated@@690) $generated@@81)) (= (type $generated@@691) ($generated@@203 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@693  (=> (not ($generated@@145 $generated@@683 $generated@@146)) (=> (and (and (and ($generated@@142 $generated@@684 $generated@@143) ($generated@@78 $generated@@684 $generated@@143 $generated@@685)) (and ($generated@@142 $generated@@686 $generated@@143) ($generated@@78 $generated@@686 $generated@@143 $generated@@685))) (and (= $generated@@687 $generated@@683) ($generated@@142 $generated@@687 $generated@@143))) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@314 $generated@@687)) (=> ($generated@@314 $generated@@687) (=> (and (= ($generated@@160 $generated@@684 $generated@@688 $generated@@686) $generated@@687) ($generated@@78 $generated@@684 $generated@@143 $generated@@685)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< ($generated@@576 $generated@@684) ($generated@@576 $generated@@683))) (=> (< ($generated@@576 $generated@@684) ($generated@@576 $generated@@683)) (=> ($generated@@141 $generated@@684) (=> (and ($generated@@78 $generated@@686 $generated@@143 $generated@@685) (= (ControlFlow 0 4) (- 0 3))) (< ($generated@@576 $generated@@686) ($generated@@576 $generated@@683)))))))))))))
(let (($generated@@694 true))
(let (($generated@@695  (=> (= $generated@@689 ($generated@@257 $generated@@690 $generated@@685 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@694) (=> (= (ControlFlow 0 7) 4) $generated@@693)))))
(let (($generated@@696 true))
(let (($generated@@697  (=> (= $generated@@691 ($generated@@202 $generated@@690 $generated@@685 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@696) (=> (= (ControlFlow 0 8) 7) $generated@@695)))))
(let (($generated@@698  (=> (and (and (and ($generated@@277 $generated@@685) ($generated@@692 $generated@@685)) ($generated@@142 $generated@@683 $generated@@143)) (and (= 1 $generated@@136) (= (ControlFlow 0 9) 8))) $generated@@697)))
$generated@@698)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U Int T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@187 (T@U T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (Int) Int)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@290 (T@U) Bool)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@395 (T@U) Bool)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@441 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@T) T@U)
(declare-fun $generated@@477 () T@T)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@520 (T@U Int) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@143 T@U) ($generated@@144 Int) ($generated@@145 T@U) ) (! (= (type ($generated@@140 $generated@@143 $generated@@144 $generated@@145)) $generated@@141)
 :pattern ( ($generated@@140 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@142 $generated@@146)) $generated@@72)
 :pattern ( ($generated@@142 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 Int) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@141) (= (type $generated@@149) $generated@@141)) (= ($generated@@142 ($generated@@140 $generated@@147 $generated@@148 $generated@@149)) $generated@@65))
 :pattern ( ($generated@@140 $generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@141)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 Int) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@141) (= (type $generated@@154) $generated@@141)) (= ($generated@@150 ($generated@@140 $generated@@152 $generated@@153 $generated@@154)) $generated@@152))
 :pattern ( ($generated@@140 $generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 Int) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@141) (= (type $generated@@158) $generated@@141)) (= ($generated@@155 ($generated@@140 $generated@@156 $generated@@157 $generated@@158)) $generated@@157))
 :pattern ( ($generated@@140 $generated@@156 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@159 $generated@@160)) $generated@@141)
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 Int) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@141) (= (type $generated@@163) $generated@@141)) (= ($generated@@159 ($generated@@140 $generated@@161 $generated@@162 $generated@@163)) $generated@@163))
 :pattern ( ($generated@@140 $generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@164 $generated@@165 ($generated@@79 0)))
 :pattern ( ($generated@@164 $generated@@165 ($generated@@79 0)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@168 $generated@@169)) $generated@@68)
 :pattern ( ($generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@68) (= (type $generated@@171) $generated@@68)) (= (type $generated@@172) $generated@@141)) ($generated@@164 $generated@@172 ($generated@@167 $generated@@170 $generated@@171))) ($generated@@166 $generated@@172))
 :pattern ( ($generated@@166 $generated@@172) ($generated@@164 $generated@@172 ($generated@@167 $generated@@170 $generated@@171)))
)))
(assert  (and (and (= ($generated@@1 $generated@@176) 15) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@174 $generated@@177))
))) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@176)
 :pattern ( ($generated@@175 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@141) (= (type $generated@@180) $generated@@141)) true) (= ($generated@@173 $generated@@179 $generated@@180)  (and (= ($generated@@174 $generated@@179) ($generated@@174 $generated@@180)) (= ($generated@@175 $generated@@179) ($generated@@175 $generated@@180)))))
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
)))
(assert (= (type $generated@@181) $generated@@141))
(assert (= ($generated@@142 $generated@@181) $generated@@63))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@68)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@80 $generated@@176 $generated@@2)) (= (type $generated@@186) $generated@@68)) ($generated@@164 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@164 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (= ($generated@@1 ($generated@@189 $generated@@193 $generated@@194)) 16)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@191 ($generated@@189 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@189 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@191 (type $generated@@199))))
(= (type ($generated@@187 $generated@@199 $generated@@200 $generated@@201)) $generated@@202))
 :pattern ( ($generated@@187 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(let (($generated@@208 (type $generated@@204)))
(= (type ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@189 $generated@@208 $generated@@207))))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@191 (type $generated@@209))))
 (=> (= (type $generated@@212) $generated@@213) (= ($generated@@187 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@210 $generated@@211) $generated@@212)))
 :weight 0
))) (and (and (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@187 ($generated@@192 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@187 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@187 ($generated@@192 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@187 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or true (= ($generated@@187 ($generated@@192 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@187 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@189 $generated@@81 $generated@@4))
 :pattern ( ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@71 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@81) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@238) ($generated@@70 $generated@@4))) (= (type $generated@@240) $generated@@81)) (= (type $generated@@241) ($generated@@70 $generated@@242))) (= ($generated@@0 ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@141)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@68) (= (type $generated@@248) $generated@@68)) (= (type $generated@@249) $generated@@176)) (= (type $generated@@250) $generated@@176)) (= ($generated@@164 ($generated@@243 $generated@@249 $generated@@250) ($generated@@167 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@164 ($generated@@243 $generated@@249 $generated@@250) ($generated@@167 $generated@@247 $generated@@248)))
)))
(assert (= (type $generated@@251) $generated@@68))
(assert ($generated@@164 $generated@@181 $generated@@251))
(assert (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@252 $generated@@253)) ($generated@@78 $generated@@181 $generated@@251 $generated@@253))
 :pattern ( ($generated@@78 $generated@@181 $generated@@251 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@141) (= (type $generated@@255) $generated@@141)) (= ($generated@@173 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@173 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@141) (= (type $generated@@258) $generated@@141)) (= ($generated@@256 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@256 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@68)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@80 $generated@@176 $generated@@4)) (= (type $generated@@262) $generated@@68)) (= ($generated@@164 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@176) ($generated@@0 ($generated@@85 $generated@@261 $generated@@263))) ($generated@@244 $generated@@263 $generated@@262))
 :pattern ( ($generated@@85 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@164 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@80 $generated@@176 $generated@@4)) (= (type $generated@@267) $generated@@68)) (= ($generated@@164 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@176) ($generated@@0 ($generated@@85 $generated@@266 $generated@@268))) ($generated@@244 $generated@@268 $generated@@267))
 :pattern ( ($generated@@85 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@164 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@269 $generated@@270) $generated@@270)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 Int) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (= (type $generated@@275) $generated@@141) (= (type $generated@@277) $generated@@141)) (= (type $generated@@278) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@252 $generated@@278)) (= ($generated@@78 ($generated@@140 $generated@@275 $generated@@276 $generated@@277) $generated@@251 $generated@@278)  (and (and ($generated@@78 $generated@@275 $generated@@251 $generated@@278) ($generated@@78 ($generated@@8 $generated@@276) $generated@@46 $generated@@278)) ($generated@@78 $generated@@277 $generated@@251 $generated@@278))))
 :pattern ( ($generated@@78 ($generated@@140 $generated@@275 $generated@@276 $generated@@277) $generated@@251 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@280) $generated@@141) (= (type $generated@@281) $generated@@141)) (and ($generated@@279 $generated@@280) ($generated@@279 $generated@@281))) (= ($generated@@256 $generated@@280 $generated@@281) true))
 :pattern ( ($generated@@256 $generated@@280 $generated@@281) ($generated@@279 $generated@@280))
 :pattern ( ($generated@@256 $generated@@280 $generated@@281) ($generated@@279 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@68) (= (type $generated@@284) $generated@@68)) (= (type $generated@@285) $generated@@176)) (= (type $generated@@286) $generated@@176)) (= (type $generated@@287) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@252 $generated@@287)) (= ($generated@@78 ($generated@@243 $generated@@285 $generated@@286) ($generated@@167 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@78 ($generated@@243 $generated@@285 $generated@@286) ($generated@@167 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@141) (= ($generated@@166 $generated@@288) (= ($generated@@142 $generated@@288) $generated@@61)))
 :pattern ( ($generated@@166 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@141) (= ($generated@@279 $generated@@289) (= ($generated@@142 $generated@@289) $generated@@63)))
 :pattern ( ($generated@@279 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@141) (= ($generated@@290 $generated@@291) (= ($generated@@142 $generated@@291) $generated@@65)))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@141) ($generated@@290 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 Int) ($generated@@295 T@U) ) (!  (and (and (= (type $generated@@293) $generated@@141) (= (type $generated@@295) $generated@@141)) (= $generated@@292 ($generated@@140 $generated@@293 $generated@@294 $generated@@295)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
)))
 :pattern ( ($generated@@290 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@141) ($generated@@166 $generated@@296)) (exists (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (and (and (= (type $generated@@297) $generated@@176) (= (type $generated@@298) $generated@@176)) (= $generated@@296 ($generated@@243 $generated@@297 $generated@@298)))
 :no-pattern (type $generated@@297)
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
)))
 :pattern ( ($generated@@166 $generated@@296))
)))
(assert  (and (and (forall (($generated@@303 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@303)) 17)) (forall (($generated@@304 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@301 $generated@@304))
))) (forall (($generated@@305 T@T) ) (! (= (type ($generated@@299 $generated@@305)) ($generated@@301 $generated@@305))
 :pattern ( ($generated@@299 $generated@@305))
))))
(assert (forall (($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@306)) 0)
 :pattern ( ($generated@@299 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@141) ($generated@@279 $generated@@307)) (= $generated@@307 $generated@@181))
 :pattern ( ($generated@@279 $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@176)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@68) (= (type $generated@@312) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@282 ($generated@@308 $generated@@310) $generated@@311 $generated@@312) ($generated@@78 $generated@@310 $generated@@311 $generated@@312)))
 :pattern ( ($generated@@282 ($generated@@308 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@313) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@314) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@315) $generated@@176)) (= (type $generated@@316) $generated@@68)) ($generated@@136 $generated@@313 $generated@@314)) ($generated@@282 $generated@@315 $generated@@316 $generated@@313)) ($generated@@282 $generated@@315 $generated@@316 $generated@@314))
 :pattern ( ($generated@@136 $generated@@313 $generated@@314) ($generated@@282 $generated@@315 $generated@@316 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@318) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@320) $generated@@68)) ($generated@@136 $generated@@317 $generated@@318)) ($generated@@78 $generated@@319 $generated@@320 $generated@@317)) ($generated@@78 $generated@@319 $generated@@320 $generated@@318))
 :pattern ( ($generated@@136 $generated@@317 $generated@@318) ($generated@@78 $generated@@319 $generated@@320 $generated@@317))
)))
(assert (forall (($generated@@323 T@T) ) (! (= (type ($generated@@322 $generated@@323)) ($generated@@80 $generated@@323 $generated@@2))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@83 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@80 $generated@@325 $generated@@2)) (and (= (= ($generated@@321 $generated@@324) 0) (= $generated@@324 ($generated@@322 $generated@@325))) (=> (not (= ($generated@@321 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@85 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 18)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@80 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@85 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@85 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 19)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@85 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@85 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@83 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@80 $generated@@364 $generated@@2)) (= ($generated@@183 $generated@@363) (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@364) (and (<= 0 ($generated ($generated@@85 $generated@@363 $generated@@365))) (<= ($generated ($generated@@85 $generated@@363 $generated@@365)) ($generated@@321 $generated@@363))))
 :pattern ( ($generated@@85 $generated@@363 $generated@@365))
)))))
 :pattern ( ($generated@@183 $generated@@363))
)))
(assert (forall (($generated@@367 T@T) ($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@367 $generated@@368)) $generated@@367)
 :pattern ( ($generated@@366 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@176) ($generated@@244 $generated@@369 $generated@@251)) (and (= ($generated@@308 ($generated@@366 $generated@@141 $generated@@369)) $generated@@369) ($generated@@164 ($generated@@366 $generated@@141 $generated@@369) $generated@@251)))
 :pattern ( ($generated@@244 $generated@@369 $generated@@251))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@331 (type $generated@@370))))
(let (($generated@@372 ($generated@@330 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@329 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@328 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) ($generated@@0 ($generated@@85 ($generated@@327 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@327 $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@331 (type $generated@@375))))
(= (type ($generated@@374 $generated@@375)) ($generated@@80 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@331 (type $generated@@377))))
(let (($generated@@379 ($generated@@330 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@329 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@328 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@378) ($generated@@0 ($generated@@85 ($generated@@374 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@349 (type $generated@@381))))
(let (($generated@@383 ($generated@@348 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@347 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@346 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@345 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@349 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@80 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@349 (type $generated@@388))))
(let (($generated@@390 ($generated@@348 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@347 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@346 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@85 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@80 $generated@@176 $generated@@2)) (= (type $generated@@393) $generated@@68)) (= ($generated@@164 $generated@@392 ($generated@@182 $generated@@393)) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@176) (< 0 ($generated ($generated@@85 $generated@@392 $generated@@394)))) ($generated@@244 $generated@@394 $generated@@393))
 :pattern ( ($generated@@85 $generated@@392 $generated@@394))
))))
 :pattern ( ($generated@@164 $generated@@392 ($generated@@182 $generated@@393)))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@141) ($generated@@395 $generated@@396)) (or ($generated@@279 $generated@@396) ($generated@@290 $generated@@396)))
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@80 $generated@@176 $generated@@4)) (= (type $generated@@398) $generated@@68)) (= (type $generated@@399) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@397 ($generated@@259 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@176) ($generated@@0 ($generated@@85 $generated@@397 $generated@@400))) ($generated@@282 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@85 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@78 $generated@@397 ($generated@@259 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (= (type $generated@@401) ($generated@@80 $generated@@176 $generated@@4)) (= (type $generated@@402) $generated@@68)) (= (type $generated@@403) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@401 ($generated@@264 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@176) ($generated@@0 ($generated@@85 $generated@@401 $generated@@404))) ($generated@@282 $generated@@404 $generated@@402 $generated@@403))
 :pattern ( ($generated@@85 $generated@@401 $generated@@404))
))))
 :pattern ( ($generated@@78 $generated@@401 ($generated@@264 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(= ($generated ($generated@@85 ($generated@@322 $generated@@406) $generated@@405)) 0))
 :pattern ( (let (($generated@@406 (type $generated@@405)))
($generated@@85 ($generated@@322 $generated@@406) $generated@@405)))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@80 $generated@@176 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@331 (type $generated@@410))))
(let (($generated@@412 ($generated@@330 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@80 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@329 $generated@@176 $generated@@176)) (= (type $generated@@414) $generated@@176)) (= ($generated@@0 ($generated@@85 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@85 ($generated@@327 $generated@@413) ($generated@@174 ($generated@@366 $generated@@141 $generated@@414)))) (= ($generated@@85 ($generated@@408 $generated@@413) ($generated@@174 ($generated@@366 $generated@@141 $generated@@414))) ($generated@@175 ($generated@@366 $generated@@141 $generated@@414))))))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert  (and (forall (($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@417)) ($generated@@80 $generated@@176 $generated@@4))
 :pattern ( ($generated@@415 $generated@@417))
)) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@349 (type $generated@@418))))
(let (($generated@@420 ($generated@@348 (type $generated@@418))))
(= (type ($generated@@416 $generated@@418)) ($generated@@80 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@416 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@347 $generated@@176 $generated@@176)) (= (type $generated@@422) $generated@@176)) (= ($generated@@0 ($generated@@85 ($generated@@415 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@85 ($generated@@345 $generated@@421) ($generated@@174 ($generated@@366 $generated@@141 $generated@@422)))) (= ($generated@@85 ($generated@@416 $generated@@421) ($generated@@174 ($generated@@366 $generated@@141 $generated@@422))) ($generated@@175 ($generated@@366 $generated@@141 $generated@@422))))))
 :pattern ( ($generated@@85 ($generated@@415 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@330 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@329 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@85 ($generated@@374 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@85 ($generated@@327 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@85 ($generated@@408 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@85 ($generated@@327 $generated@@423) $generated@@427))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@85 ($generated@@374 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@348 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@347 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@85 ($generated@@385 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@85 ($generated@@345 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@85 ($generated@@416 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@428) $generated@@432))
 :pattern ( ($generated@@85 ($generated@@416 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@68)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@329 $generated@@176 $generated@@176)) (= (type $generated@@437) $generated@@68)) (= (type $generated@@438) $generated@@68)) (= (type $generated@@439) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@176) ($generated@@0 ($generated@@85 ($generated@@327 $generated@@436) $generated@@440))) (and ($generated@@282 ($generated@@85 ($generated@@408 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@282 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@436) $generated@@440))
 :pattern ( ($generated@@85 ($generated@@327 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@78 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@442 $generated@@443)) $generated@@68)
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (= (type $generated@@444) ($generated@@347 $generated@@176 $generated@@176)) (= (type $generated@@445) $generated@@68)) (= (type $generated@@446) $generated@@68)) (= (type $generated@@447) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@176) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@444) $generated@@448))) (and ($generated@@282 ($generated@@85 ($generated@@416 $generated@@444) $generated@@448) $generated@@446 $generated@@447) ($generated@@282 $generated@@448 $generated@@445 $generated@@447)))
 :pattern ( ($generated@@85 ($generated@@416 $generated@@444) $generated@@448))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@444) $generated@@448))
))))
 :pattern ( ($generated@@78 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@141) ($generated@@164 $generated@@449 $generated@@251)) (or ($generated@@279 $generated@@449) ($generated@@290 $generated@@449)))
 :pattern ( ($generated@@290 $generated@@449) ($generated@@164 $generated@@449 $generated@@251))
 :pattern ( ($generated@@279 $generated@@449) ($generated@@164 $generated@@449 $generated@@251))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@450) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@451) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@450 $generated@@452))) (and ($generated@@136 $generated@@450 $generated@@451) ($generated@@136 $generated@@451 $generated@@452))) ($generated@@136 $generated@@450 $generated@@452))
 :pattern ( ($generated@@136 $generated@@450 $generated@@451) ($generated@@136 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@T) ) (! (= (type ($generated@@453 $generated@@454)) ($generated@@80 $generated@@454 $generated@@4))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@349 (type $generated@@455))))
(let (($generated@@457 ($generated@@348 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@347 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@346 $generated@@457 $generated@@456)) (= ($generated@@345 $generated@@455) ($generated@@453 $generated@@457))))))
 :pattern ( ($generated@@345 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@349 (type $generated@@458))))
(let (($generated@@460 ($generated@@348 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@347 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@346 $generated@@460 $generated@@459)) (= ($generated@@385 $generated@@458) ($generated@@453 $generated@@459))))))
 :pattern ( ($generated@@385 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@349 (type $generated@@461))))
(let (($generated@@463 ($generated@@348 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@347 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@346 $generated@@463 $generated@@462)) (= ($generated@@415 $generated@@461) ($generated@@453 $generated@@176))))))
 :pattern ( ($generated@@415 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@331 (type $generated@@464))))
(let (($generated@@466 ($generated@@330 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@329 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@328 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@176) (= (type $generated@@468) $generated@@176)) ($generated@@0 ($generated@@85 ($generated@@407 $generated@@464) ($generated@@308 ($generated@@243 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@407 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@349 (type $generated@@469))))
(let (($generated@@471 ($generated@@348 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@347 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@346 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@176) (= (type $generated@@473) $generated@@176)) ($generated@@0 ($generated@@85 ($generated@@415 $generated@@469) ($generated@@308 ($generated@@243 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@415 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@176) ($generated@@244 $generated@@474 $generated@@46)) (and (= ($generated@@308 ($generated@@366 $generated@@2 $generated@@474)) $generated@@474) ($generated@@164 ($generated@@366 $generated@@2 $generated@@474) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@474 $generated@@46))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@176) ($generated@@244 $generated@@475 $generated@@47)) (and (= ($generated@@308 ($generated@@366 $generated@@3 $generated@@475)) $generated@@475) ($generated@@164 ($generated@@366 $generated@@3 $generated@@475) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@475 $generated@@47))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@176) ($generated@@244 $generated@@476 $generated@@44)) (and (= ($generated@@308 ($generated@@366 $generated@@4 $generated@@476)) $generated@@476) ($generated@@164 ($generated@@366 $generated@@4 $generated@@476) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@476 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@477) 20))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@176) ($generated@@244 $generated@@478 $generated@@45)) (and (= ($generated@@308 ($generated@@366 $generated@@477 $generated@@478)) $generated@@478) ($generated@@164 ($generated@@366 $generated@@477 $generated@@478) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@478 $generated@@45))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@68) (= ($generated@@244 ($generated@@308 $generated@@479) $generated@@480) ($generated@@164 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@244 ($generated@@308 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@83 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@80 $generated@@482 $generated@@2)) (<= 0 ($generated@@321 $generated@@481))))
 :pattern ( ($generated@@321 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@302 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@301 $generated@@484)) (<= 0 ($generated@@300 $generated@@483))))
 :pattern ( ($generated@@300 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@485 ($generated@@433 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@433 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@433 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@433 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@76 ($generated@@433 $generated@@493 $generated@@494)) $generated@@58))
 :pattern ( ($generated@@433 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@441 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@441 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@441 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@441 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@76 ($generated@@441 $generated@@503 $generated@@504)) $generated@@59))
 :pattern ( ($generated@@441 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@176) (= (type $generated@@506) $generated@@176)) (= ($generated@@142 ($generated@@243 $generated@@505 $generated@@506)) $generated@@61))
 :pattern ( ($generated@@243 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@68) (= (type $generated@@510) $generated@@68)) (= ($generated@@507 ($generated@@167 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@167 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@511 ($generated@@167 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@167 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@176) (= (type $generated@@516) $generated@@176)) (= ($generated@@174 ($generated@@243 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@243 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@176) (= (type $generated@@518) $generated@@176)) (= ($generated@@175 ($generated@@243 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@243 $generated@@517 $generated@@518))
)))
(assert  (and (forall (($generated@@521 T@U) ) (! (= (type ($generated@@519 $generated@@521)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@521))
)) (forall (($generated@@522 T@U) ($generated@@523 Int) ) (! (let (($generated@@524 ($generated@@302 (type $generated@@522))))
(= (type ($generated@@520 $generated@@522 $generated@@523)) $generated@@524))
 :pattern ( ($generated@@520 $generated@@522 $generated@@523))
))))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@301 $generated@@176)) (= (type $generated@@526) $generated@@68)) (= (type $generated@@527) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@525 ($generated@@519 $generated@@526) $generated@@527) (forall (($generated@@528 Int) ) (!  (=> (and (<= 0 $generated@@528) (< $generated@@528 ($generated@@300 $generated@@525))) ($generated@@282 ($generated@@520 $generated@@525 $generated@@528) $generated@@526 $generated@@527))
 :pattern ( ($generated@@520 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@78 $generated@@525 ($generated@@519 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 Int) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@141) (= (type $generated@@531) $generated@@141)) (= ($generated@@140 ($generated@@271 $generated@@529) ($generated@@269 $generated@@530) ($generated@@271 $generated@@531)) ($generated@@271 ($generated@@140 $generated@@529 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@140 ($generated@@271 $generated@@529) ($generated@@269 $generated@@530) ($generated@@271 $generated@@531)))
)))
(assert (forall (($generated@@533 Int) ) (! (= ($generated@@532 ($generated@@79 $generated@@533)) $generated@@533)
 :pattern ( ($generated@@79 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@534 ($generated@@259 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@259 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@76 ($generated@@259 $generated@@537)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@538 ($generated@@264 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@264 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@76 ($generated@@264 $generated@@541)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@542 ($generated@@182 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@182 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@76 ($generated@@182 $generated@@545)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@68)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@68) (= ($generated@@546 ($generated@@519 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@519 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@76 ($generated@@519 $generated@@549)) $generated@@57))
 :pattern ( ($generated@@519 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
(= ($generated@@366 $generated@@551 ($generated@@308 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@308 $generated@@550))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 Int) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@141) (= (type $generated@@555) $generated@@141)) (< ($generated@@552 $generated@@553) ($generated@@552 ($generated@@140 $generated@@553 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@140 $generated@@553 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 Int) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@141) (= (type $generated@@558) $generated@@141)) (< ($generated@@552 $generated@@558) ($generated@@552 ($generated@@140 $generated@@556 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@140 $generated@@556 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@329 $generated@@176 $generated@@176)) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@68)) (= ($generated@@164 $generated@@559 ($generated@@433 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@176) ($generated@@0 ($generated@@85 ($generated@@327 $generated@@559) $generated@@562))) (and ($generated@@244 ($generated@@85 ($generated@@408 $generated@@559) $generated@@562) $generated@@561) ($generated@@244 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@559) $generated@@562))
 :pattern ( ($generated@@85 ($generated@@327 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@164 $generated@@559 ($generated@@433 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@347 $generated@@176 $generated@@176)) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) $generated@@68)) (= ($generated@@164 $generated@@563 ($generated@@441 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@176) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@563) $generated@@566))) (and ($generated@@244 ($generated@@85 ($generated@@416 $generated@@563) $generated@@566) $generated@@565) ($generated@@244 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@85 ($generated@@416 $generated@@563) $generated@@566))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@164 $generated@@563 ($generated@@441 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@141) (= (type $generated@@568) $generated@@141)) (and ($generated@@290 $generated@@567) ($generated@@290 $generated@@568))) (= ($generated@@256 $generated@@567 $generated@@568)  (and (and ($generated@@256 ($generated@@150 $generated@@567) ($generated@@150 $generated@@568)) (= ($generated@@155 $generated@@567) ($generated@@155 $generated@@568))) ($generated@@256 ($generated@@159 $generated@@567) ($generated@@159 $generated@@568)))))
 :pattern ( ($generated@@256 $generated@@567 $generated@@568) ($generated@@290 $generated@@567))
 :pattern ( ($generated@@256 $generated@@567 $generated@@568) ($generated@@290 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@176) (= (type $generated@@571) $generated@@176)) (< ($generated@@569 $generated@@570) ($generated@@552 ($generated@@243 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@243 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@176) (= (type $generated@@573) $generated@@176)) (< ($generated@@569 $generated@@573) ($generated@@552 ($generated@@243 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@243 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@176) (= (type $generated@@575) $generated@@68)) (= (type $generated@@576) $generated@@68)) ($generated@@244 $generated@@574 ($generated@@433 $generated@@575 $generated@@576))) (and (= ($generated@@308 ($generated@@366 ($generated@@329 $generated@@176 $generated@@176) $generated@@574)) $generated@@574) ($generated@@164 ($generated@@366 ($generated@@329 $generated@@176 $generated@@176) $generated@@574) ($generated@@433 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@244 $generated@@574 ($generated@@433 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@176) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@68)) ($generated@@244 $generated@@577 ($generated@@441 $generated@@578 $generated@@579))) (and (= ($generated@@308 ($generated@@366 ($generated@@347 $generated@@176 $generated@@176) $generated@@577)) $generated@@577) ($generated@@164 ($generated@@366 ($generated@@347 $generated@@176 $generated@@176) $generated@@577) ($generated@@441 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@244 $generated@@577 ($generated@@441 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@68) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) $generated@@176)) ($generated@@244 $generated@@582 ($generated@@167 $generated@@580 $generated@@581))) (and (= ($generated@@308 ($generated@@366 $generated@@141 $generated@@582)) $generated@@582) ($generated@@164 ($generated@@366 $generated@@141 $generated@@582) ($generated@@167 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@244 $generated@@582 ($generated@@167 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@583)))
 (not ($generated@@0 ($generated@@85 ($generated@@453 $generated@@584) $generated@@583))))
 :pattern ( (let (($generated@@584 (type $generated@@583)))
($generated@@85 ($generated@@453 $generated@@584) $generated@@583)))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@73)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@68) (= (type $generated@@588) $generated@@68)) (and (= ($generated@@76 ($generated@@167 $generated@@587 $generated@@588)) $generated@@62) (= ($generated@@585 ($generated@@167 $generated@@587 $generated@@588)) $generated@@66)))
 :pattern ( ($generated@@167 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@141) (= (type $generated@@590) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@590) (and ($generated@@290 $generated@@589) ($generated@@78 $generated@@589 $generated@@251 $generated@@590)))) ($generated@@78 ($generated@@8 ($generated@@155 $generated@@589)) $generated@@46 $generated@@590))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@155 $generated@@589)) $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@141) (= ($generated@@569 ($generated@@308 $generated@@591)) ($generated@@552 $generated@@591)))
 :pattern ( ($generated@@569 ($generated@@308 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@176) ($generated@@244 $generated@@592 ($generated@@79 0))) (and (= ($generated@@308 ($generated@@366 $generated@@2 $generated@@592)) $generated@@592) ($generated@@164 ($generated@@366 ($generated@@80 $generated@@176 $generated@@4) $generated@@592) ($generated@@79 0))))
 :pattern ( ($generated@@244 $generated@@592 ($generated@@79 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@176) (= (type $generated@@594) $generated@@68)) ($generated@@244 $generated@@593 ($generated@@259 $generated@@594))) (and (= ($generated@@308 ($generated@@366 ($generated@@80 $generated@@176 $generated@@4) $generated@@593)) $generated@@593) ($generated@@164 ($generated@@366 ($generated@@80 $generated@@176 $generated@@4) $generated@@593) ($generated@@259 $generated@@594))))
 :pattern ( ($generated@@244 $generated@@593 ($generated@@259 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@176) (= (type $generated@@596) $generated@@68)) ($generated@@244 $generated@@595 ($generated@@264 $generated@@596))) (and (= ($generated@@308 ($generated@@366 ($generated@@80 $generated@@176 $generated@@4) $generated@@595)) $generated@@595) ($generated@@164 ($generated@@366 ($generated@@80 $generated@@176 $generated@@4) $generated@@595) ($generated@@264 $generated@@596))))
 :pattern ( ($generated@@244 $generated@@595 ($generated@@264 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@176) (= (type $generated@@598) $generated@@68)) ($generated@@244 $generated@@597 ($generated@@182 $generated@@598))) (and (= ($generated@@308 ($generated@@366 ($generated@@80 $generated@@176 $generated@@2) $generated@@597)) $generated@@597) ($generated@@164 ($generated@@366 ($generated@@80 $generated@@176 $generated@@2) $generated@@597) ($generated@@182 $generated@@598))))
 :pattern ( ($generated@@244 $generated@@597 ($generated@@182 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@176) (= (type $generated@@600) $generated@@68)) ($generated@@244 $generated@@599 ($generated@@519 $generated@@600))) (and (= ($generated@@308 ($generated@@366 ($generated@@301 $generated@@176) $generated@@599)) $generated@@599) ($generated@@164 ($generated@@366 ($generated@@301 $generated@@176) $generated@@599) ($generated@@519 $generated@@600))))
 :pattern ( ($generated@@244 $generated@@599 ($generated@@519 $generated@@600)))
)))
(assert (= ($generated@@76 $generated@@251) $generated@@64))
(assert (= ($generated@@585 $generated@@251) $generated@@67))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@601) ($generated@@80 $generated@@176 $generated@@2)) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@601 ($generated@@182 $generated@@602) $generated@@603) (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@176) (< 0 ($generated ($generated@@85 $generated@@601 $generated@@604)))) ($generated@@282 $generated@@604 $generated@@602 $generated@@603))
 :pattern ( ($generated@@85 $generated@@601 $generated@@604))
))))
 :pattern ( ($generated@@78 $generated@@601 ($generated@@182 $generated@@602) $generated@@603))
)))
(assert (= $generated@@181 ($generated@@271 $generated@@181)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@141) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@607) (and ($generated@@166 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@68) ($generated@@78 $generated@@605 ($generated@@167 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@78 $generated@@605 ($generated@@167 $generated@@606 $generated@@608) $generated@@607))
))))) ($generated@@282 ($generated@@174 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@282 ($generated@@174 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@141) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@611) (and ($generated@@166 $generated@@609) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@68) ($generated@@78 $generated@@609 ($generated@@167 $generated@@612 $generated@@610) $generated@@611))
 :pattern ( ($generated@@78 $generated@@609 ($generated@@167 $generated@@612 $generated@@610) $generated@@611))
))))) ($generated@@282 ($generated@@175 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@282 ($generated@@175 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@141) (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@614) (and ($generated@@290 $generated@@613) ($generated@@78 $generated@@613 $generated@@251 $generated@@614)))) ($generated@@78 ($generated@@150 $generated@@613) $generated@@251 $generated@@614))
 :pattern ( ($generated@@78 ($generated@@150 $generated@@613) $generated@@251 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@141) (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@616) (and ($generated@@290 $generated@@615) ($generated@@78 $generated@@615 $generated@@251 $generated@@616)))) ($generated@@78 ($generated@@159 $generated@@615) $generated@@251 $generated@@616))
 :pattern ( ($generated@@78 ($generated@@159 $generated@@615) $generated@@251 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@176) (= (type $generated@@618) $generated@@176)) (= ($generated@@243 ($generated@@271 $generated@@617) ($generated@@271 $generated@@618)) ($generated@@271 ($generated@@243 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@243 ($generated@@271 $generated@@617) ($generated@@271 $generated@@618)))
)))
(assert (forall (($generated@@619 Int) ) (! (= ($generated@@308 ($generated@@8 ($generated@@269 $generated@@619))) ($generated@@271 ($generated@@308 ($generated@@8 $generated@@619))))
 :pattern ( ($generated@@308 ($generated@@8 ($generated@@269 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ) (! (= ($generated@@308 ($generated@@271 $generated@@620)) ($generated@@271 ($generated@@308 $generated@@620)))
 :pattern ( ($generated@@308 ($generated@@271 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 ($generated@@302 (type $generated@@621))))
 (=> (and (= (type $generated@@621) ($generated@@301 $generated@@622)) (= ($generated@@300 $generated@@621) 0)) (= $generated@@621 ($generated@@299 $generated@@622))))
 :pattern ( ($generated@@300 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (! (let (($generated@@626 (type $generated@@624)))
 (=> (and (and (= (type $generated@@623) ($generated@@80 $generated@@626 $generated@@2)) (= (type $generated@@625) $generated@@2)) (<= 0 ($generated $generated@@625))) (= ($generated@@321 ($generated@@86 $generated@@623 $generated@@624 $generated@@625)) (+ (- ($generated@@321 $generated@@623) ($generated ($generated@@85 $generated@@623 $generated@@624))) ($generated $generated@@625)))))
 :pattern ( ($generated@@321 ($generated@@86 $generated@@623 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@628) $generated@@2)) ($generated@@78 $generated@@628 $generated@@46 $generated@@627))
 :pattern ( ($generated@@78 $generated@@628 $generated@@46 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@630) $generated@@3)) ($generated@@78 $generated@@630 $generated@@47 $generated@@629))
 :pattern ( ($generated@@78 $generated@@630 $generated@@47 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@632) $generated@@4)) ($generated@@78 $generated@@632 $generated@@44 $generated@@631))
 :pattern ( ($generated@@78 $generated@@632 $generated@@44 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@634) $generated@@477)) ($generated@@78 $generated@@634 $generated@@45 $generated@@633))
 :pattern ( ($generated@@78 $generated@@634 $generated@@45 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@636) $generated@@176)) ($generated@@78 $generated@@636 $generated@@48 $generated@@635))
 :pattern ( ($generated@@78 $generated@@636 $generated@@48 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 Int) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@141) (= (type $generated@@639) $generated@@141)) (= ($generated@@164 ($generated@@140 $generated@@637 $generated@@638 $generated@@639) $generated@@251)  (and (and ($generated@@164 $generated@@637 $generated@@251) ($generated@@164 ($generated@@8 $generated@@638) $generated@@46)) ($generated@@164 $generated@@639 $generated@@251))))
 :pattern ( ($generated@@164 ($generated@@140 $generated@@637 $generated@@638 $generated@@639) $generated@@251))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@301 $generated@@176)) (= (type $generated@@641) $generated@@68)) (= ($generated@@164 $generated@@640 ($generated@@519 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@300 $generated@@640))) ($generated@@244 ($generated@@520 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@520 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@164 $generated@@640 ($generated@@519 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@301 $generated@@176)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@300 $generated@@644))) (< ($generated@@552 ($generated@@366 $generated@@141 ($generated@@520 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@552 ($generated@@366 $generated@@141 ($generated@@520 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@329 $generated@@176 $generated@@176)) (= (type $generated@@647) $generated@@68)) (= (type $generated@@648) $generated@@68)) ($generated@@164 $generated@@646 ($generated@@433 $generated@@647 $generated@@648))) (and (and ($generated@@164 ($generated@@327 $generated@@646) ($generated@@259 $generated@@647)) ($generated@@164 ($generated@@374 $generated@@646) ($generated@@259 $generated@@648))) ($generated@@164 ($generated@@407 $generated@@646) ($generated@@259 ($generated@@167 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@164 $generated@@646 ($generated@@433 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@347 $generated@@176 $generated@@176)) (= (type $generated@@650) $generated@@68)) (= (type $generated@@651) $generated@@68)) ($generated@@164 $generated@@649 ($generated@@441 $generated@@650 $generated@@651))) (and (and ($generated@@164 ($generated@@345 $generated@@649) ($generated@@264 $generated@@650)) ($generated@@164 ($generated@@385 $generated@@649) ($generated@@264 $generated@@651))) ($generated@@164 ($generated@@415 $generated@@649) ($generated@@264 ($generated@@167 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@164 $generated@@649 ($generated@@441 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@164 $generated@@652 $generated@@46))
 :pattern ( ($generated@@164 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@164 $generated@@653 $generated@@47))
 :pattern ( ($generated@@164 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@164 $generated@@654 $generated@@44))
 :pattern ( ($generated@@164 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@477) ($generated@@164 $generated@@655 $generated@@45))
 :pattern ( ($generated@@164 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@176) ($generated@@164 $generated@@656 $generated@@48))
 :pattern ( ($generated@@164 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 (T@U) Bool)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@657) $generated@@141) (= (type $generated@@658) $generated@@141)) (= (type $generated@@659) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@660) $generated@@141)) (= (type $generated@@661) $generated@@141)) (= (type $generated@@663) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@665) $generated@@81)) (= (type $generated@@666) ($generated@@189 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@668 true))
(let (($generated@@669  (=> ($generated@@290 $generated@@657) (=> (and ($generated@@164 $generated@@658 $generated@@251) ($generated@@78 $generated@@658 $generated@@251 $generated@@659)) (=> (and (and ($generated@@164 $generated@@660 $generated@@251) ($generated@@78 $generated@@660 $generated@@251 $generated@@659)) (and (= $generated@@661 $generated@@657) ($generated@@164 $generated@@661 $generated@@251))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@290 $generated@@661)) (=> ($generated@@290 $generated@@661) (=> (= ($generated@@140 $generated@@658 $generated@@662 $generated@@660) $generated@@661) (and (=> (= (ControlFlow 0 2) (- 0 3)) (< ($generated@@552 $generated@@658) ($generated@@552 $generated@@657))) (=> (< ($generated@@552 $generated@@658) ($generated@@552 $generated@@657)) (=> (and (and (and ($generated@@252 $generated@@663) ($generated@@664 $generated@@663)) (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@81) (=> (and (not (= $generated@@670 $generated@@665)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@659 $generated@@670) $generated@@60))) (= ($generated@@85 $generated@@663 $generated@@670) ($generated@@85 $generated@@659 $generated@@670))))
 :pattern ( ($generated@@85 $generated@@663 $generated@@670))
))) (and ($generated@@136 $generated@@659 $generated@@663) (= (ControlFlow 0 2) (- 0 1)))) (< ($generated@@552 $generated@@660) ($generated@@552 $generated@@657)))))))))))))
(let (($generated@@671  (=> (= $generated@@666 ($generated@@188 $generated@@665 $generated@@659 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@669) (=> (= (ControlFlow 0 6) 5) $generated@@668)))))
(let (($generated@@672  (=> (and ($generated@@252 $generated@@659) ($generated@@664 $generated@@659)) (=> (and (and (and ($generated@@164 $generated@@657 $generated@@251) ($generated@@78 $generated@@657 $generated@@251 $generated@@659)) ($generated@@395 $generated@@657)) (and (= 1 $generated@@667) (= (ControlFlow 0 7) 6))) $generated@@671))))
$generated@@672)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
