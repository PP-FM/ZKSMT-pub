(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 256))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 65536))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 4294967296))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 18446744073709551616))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 (- 0 128))) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 (- 0 128)) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 (- 0 128)) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 128))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 (- 0 32768))) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 (- 0 32768)) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 (- 0 32768)) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 32768))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 (- 0 2147483648))) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 (- 0 2147483648)) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 (- 0 2147483648)) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 2147483648))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 (- 0 9223372036854775808))) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 (- 0 9223372036854775808)) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 (- 0 9223372036854775808)) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 9223372036854775808))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@T T@U) T@U)
(declare-fun $generated@@163 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(= (type ($generated@@157 $generated@@158)) $generated@@159))
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@157 $generated@@160) $generated@@160)
 :pattern ( ($generated@@157 $generated@@160))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 11) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@U) ) (! (= (type ($generated@@162 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@162 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ) (! (let (($generated@@168 (type $generated@@167)))
(= ($generated@@162 $generated@@168 ($generated@@161 $generated@@167)) $generated@@167))
 :pattern ( ($generated@@161 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@161 ($generated@@157 $generated@@169)) ($generated@@157 ($generated@@161 $generated@@169)))
 :pattern ( ($generated@@161 ($generated@@157 $generated@@169)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () (_ BitVec 4))
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 () Int)
(assert  (and (and (and (= (type $generated@@171) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@172) $generated@@47)) (= (type $generated@@173) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@174) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@178 true))
(let (($generated@@179  (=> (and (not (bvule #b0010 $generated@@170)) (= (ControlFlow 0 6) 4)) $generated@@178)))
(let (($generated@@180  (=> (and (bvule #b0010 $generated@@170) (= (ControlFlow 0 5) 4)) $generated@@178)))
(let (($generated@@181  (and (=> (= (ControlFlow 0 2) (- 0 3)) (bvule #b0010 #b0111)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@157 ($generated@@11 (bvult #b0111 #b1010))))))))
(let (($generated@@182  (=> (= $generated@@171 ($generated@@45 $generated@@172 $generated@@173 $generated@@174 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@181) (=> (= (ControlFlow 0 7) 5) $generated@@180)) (=> (= (ControlFlow 0 7) 6) $generated@@179)))))
(let (($generated@@183  (=> (and (and ($generated@@175 $generated@@173) ($generated@@176 $generated@@173)) (and (= 0 $generated@@177) (= (ControlFlow 0 8) 7))) $generated@@182)))
$generated@@183)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 (- 0 100))) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 (- 0 100)) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 (- 0 100)) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 68719476736))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 () T@T)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 () T@T)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@260 (T@T T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@334 (Int) Int)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@353 (Int) T@U)
(declare-fun $generated@@354 (T@U) Int)
(declare-fun $generated@@355 () T@T)
(declare-fun $generated@@358 (T@U) Bool)
(declare-fun $generated@@359 (T@U T@U T@U) Bool)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@371 (T@T) T@U)
(declare-fun $generated@@372 (T@U) Int)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@392 (T@U) Int)
(declare-fun $generated@@393 (T@T) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@T) T@U)
(declare-fun $generated@@400 (T@T T@T) T@T)
(declare-fun $generated@@401 (T@T) T@T)
(declare-fun $generated@@402 (T@T) T@T)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@T T@T) T@U)
(declare-fun $generated@@418 (T@T T@T) T@T)
(declare-fun $generated@@419 (T@T) T@T)
(declare-fun $generated@@420 (T@T) T@T)
(declare-fun $generated@@437 (T@U Int) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@481 (T@T T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@509 (T@U T@U) T@U)
(declare-fun $generated@@517 (T@U T@U) T@U)
(declare-fun $generated@@528 (T@T) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@597 (T@U) Int)
(declare-fun $generated@@599 (T@U) T@U)
(declare-fun $generated@@603 (T@U) T@U)
(declare-fun $generated@@607 (T@U) T@U)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@625 (T@U) Int)
(declare-fun $generated@@626 (T@U) Int)
(declare-fun $generated@@642 (T@U) T@U)
(declare-fun $generated@@646 (T@U) T@U)
(declare-fun $generated@@647 (T@U) T@U)
(declare-fun $generated@@711 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@220 $generated@@221 $generated@@222)) (forall (($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@221 $generated@@223) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60))
)))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@2) ($generated@@224 $generated@@225 ($generated@@75 0)))
 :pattern ( ($generated@@224 $generated@@225 ($generated@@75 0)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@132) ($generated@@224 $generated@@226 ($generated@@75 1)))
 :pattern ( ($generated@@224 $generated@@226 ($generated@@75 1)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@140) ($generated@@224 $generated@@227 ($generated@@75 2)))
 :pattern ( ($generated@@224 $generated@@227 ($generated@@75 2)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@148) ($generated@@224 $generated@@228 ($generated@@75 3)))
 :pattern ( ($generated@@224 $generated@@228 ($generated@@75 3)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@156) ($generated@@224 $generated@@229 ($generated@@75 4)))
 :pattern ( ($generated@@224 $generated@@229 ($generated@@75 4)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@164) ($generated@@224 $generated@@230 ($generated@@75 7)))
 :pattern ( ($generated@@224 $generated@@230 ($generated@@75 7)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@172) ($generated@@224 $generated@@231 ($generated@@75 8)))
 :pattern ( ($generated@@224 $generated@@231 ($generated@@75 8)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@180) ($generated@@224 $generated@@232 ($generated@@75 15)))
 :pattern ( ($generated@@224 $generated@@232 ($generated@@75 15)))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (= (type $generated@@233) $generated@@188) ($generated@@224 $generated@@233 ($generated@@75 16)))
 :pattern ( ($generated@@224 $generated@@233 ($generated@@75 16)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (= (type $generated@@234) $generated@@196) ($generated@@224 $generated@@234 ($generated@@75 32)))
 :pattern ( ($generated@@224 $generated@@234 ($generated@@75 32)))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@204) ($generated@@224 $generated@@235 ($generated@@75 53)))
 :pattern ( ($generated@@224 $generated@@235 ($generated@@75 53)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@212) ($generated@@224 $generated@@236 ($generated@@75 100)))
 :pattern ( ($generated@@224 $generated@@236 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@239) 25) (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@64) (= (type $generated@@243) $generated@@64)) (= (type $generated@@244) $generated@@239)) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243))) ($generated@@237 $generated@@244))
 :pattern ( ($generated@@237 $generated@@244) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243)))
)))
(assert  (and (and (= ($generated@@1 $generated@@248) 26) (forall (($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@246 $generated@@249))
))) (forall (($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@250)) $generated@@248)
 :pattern ( ($generated@@247 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@251) $generated@@239) (= (type $generated@@252) $generated@@239)) true) (= ($generated@@245 $generated@@251 $generated@@252)  (and (= ($generated@@246 $generated@@251) ($generated@@246 $generated@@252)) (= ($generated@@247 $generated@@251) ($generated@@247 $generated@@252)))))
 :pattern ( ($generated@@245 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@253 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@257) $generated@@64)) ($generated@@224 $generated@@256 ($generated@@253 $generated@@257))) ($generated@@254 $generated@@256))
 :pattern ( ($generated@@224 $generated@@256 ($generated@@253 $generated@@257)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@264 $generated@@265)) 27)) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@260 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@262 ($generated@@260 $generated@@268 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@260 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@262 (type $generated@@270))))
(= (type ($generated@@258 $generated@@270 $generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@258 $generated@@270 $generated@@271 $generated@@272))
))) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(let (($generated@@279 (type $generated@@275)))
(= (type ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277)) ($generated@@260 $generated@@279 $generated@@278))))
 :pattern ( ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277))
))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@262 (type $generated@@280))))
 (=> (= (type $generated@@283) $generated@@284) (= ($generated@@258 ($generated@@263 $generated@@280 $generated@@281 $generated@@282 $generated@@283) $generated@@281 $generated@@282) $generated@@283)))
 :weight 0
))) (and (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (or (= $generated@@287 $generated@@289) (= ($generated@@258 ($generated@@263 $generated@@286 $generated@@287 $generated@@288 $generated@@285) $generated@@289 $generated@@290) ($generated@@258 $generated@@286 $generated@@289 $generated@@290)))
 :weight 0
)) (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (or (= $generated@@294 $generated@@296) (= ($generated@@258 ($generated@@263 $generated@@292 $generated@@293 $generated@@294 $generated@@291) $generated@@295 $generated@@296) ($generated@@258 $generated@@292 $generated@@295 $generated@@296)))
 :weight 0
))) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (or true (= ($generated@@258 ($generated@@263 $generated@@298 $generated@@299 $generated@@300 $generated@@297) $generated@@301 $generated@@302) ($generated@@258 $generated@@298 $generated@@301 $generated@@302)))
 :weight 0
)))) (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ) (! (= (type ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306)) ($generated@@260 $generated@@77 $generated@@4))
 :pattern ( ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 Bool) ($generated@@311 T@U) ($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@67 (type $generated@@312))))
 (=> (and (and (and (and (= (type $generated@@307) $generated@@77) (= (type $generated@@308) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@309) ($generated@@66 $generated@@4))) (= (type $generated@@311) $generated@@77)) (= (type $generated@@312) ($generated@@66 $generated@@313))) (= ($generated@@0 ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))  (=> (and (not (= $generated@@311 $generated@@307)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@308 $generated@@311) $generated@@309))) $generated@@310))))
 :pattern ( ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) $generated@@239)
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (= (type $generated@@318) $generated@@64) (= (type $generated@@319) $generated@@64)) (= (type $generated@@320) $generated@@248)) (= (type $generated@@321) $generated@@248)) (= ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319))  (and ($generated@@315 $generated@@320 $generated@@318) ($generated@@315 $generated@@321 $generated@@319))))
 :pattern ( ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@239) (= (type $generated@@323) $generated@@239)) (= ($generated@@245 $generated@@322 $generated@@323) (= $generated@@322 $generated@@323)))
 :pattern ( ($generated@@245 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@64)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@327) $generated@@64)) (= ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@248) ($generated@@0 ($generated@@81 $generated@@326 $generated@@328))) ($generated@@315 $generated@@328 $generated@@327))
 :pattern ( ($generated@@81 $generated@@326 $generated@@328))
))))
 :pattern ( ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@64)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@248) ($generated@@0 ($generated@@81 $generated@@331 $generated@@333))) ($generated@@315 $generated@@333 $generated@@332))
 :pattern ( ($generated@@81 $generated@@331 $generated@@333))
))))
 :pattern ( ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)))
)))
(assert (forall (($generated@@335 Int) ) (! (= ($generated@@334 $generated@@335) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 (type $generated@@337)))
(= (type ($generated@@336 $generated@@337)) $generated@@338))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= ($generated@@336 $generated@@339) $generated@@339)
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert  (and (and (and (forall (($generated@@344 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@344)) 28)) (forall (($generated@@345 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@342 $generated@@345))
))) (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (! (let (($generated@@348 (type $generated@@347)))
(= (type ($generated@@340 $generated@@346 $generated@@347)) ($generated@@342 $generated@@348)))
 :pattern ( ($generated@@340 $generated@@346 $generated@@347))
))) (forall (($generated@@349 T@U) ) (! (= (type ($generated@@341 $generated@@349)) $generated@@64)
 :pattern ( ($generated@@341 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (and (= (type $generated@@350) ($generated@@342 $generated@@248)) (= (type $generated@@351) $generated@@248)) (= (type $generated@@352) $generated@@64)) (and ($generated@@224 $generated@@350 ($generated@@341 $generated@@352)) ($generated@@315 $generated@@351 $generated@@352))) ($generated@@224 ($generated@@340 $generated@@350 $generated@@351) ($generated@@341 $generated@@352)))
 :pattern ( ($generated@@224 ($generated@@340 $generated@@350 $generated@@351) ($generated@@341 $generated@@352)))
)))
(assert  (and (= ($generated@@1 $generated@@355) 29) (forall (($generated@@356 Int) ) (! (= (type ($generated@@353 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@353 $generated@@356))
))))
(assert (forall (($generated@@357 Int) ) (!  (=> (and (<= 0 $generated@@357) (< $generated@@357 65536)) (= ($generated@@354 ($generated@@353 $generated@@357)) $generated@@357))
 :pattern ( ($generated@@353 $generated@@357))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@360) $generated@@64) (= (type $generated@@361) $generated@@64)) (= (type $generated@@362) $generated@@248)) (= (type $generated@@363) $generated@@248)) (= (type $generated@@364) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@358 $generated@@364)) (= ($generated@@74 ($generated@@314 $generated@@362 $generated@@363) ($generated@@238 $generated@@360 $generated@@361) $generated@@364)  (and ($generated@@359 $generated@@362 $generated@@360 $generated@@364) ($generated@@359 $generated@@363 $generated@@361 $generated@@364))))
 :pattern ( ($generated@@74 ($generated@@314 $generated@@362 $generated@@363) ($generated@@238 $generated@@360 $generated@@361) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (= (type ($generated@@365 $generated@@366)) $generated@@68)
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@239) (= ($generated@@237 $generated@@367) (= ($generated@@365 $generated@@367) $generated@@61)))
 :pattern ( ($generated@@237 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@239) ($generated@@237 $generated@@368)) (exists (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (and (and (= (type $generated@@369) $generated@@248) (= (type $generated@@370) $generated@@248)) (= $generated@@368 ($generated@@314 $generated@@369 $generated@@370)))
 :no-pattern (type $generated@@369)
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
)))
 :pattern ( ($generated@@237 $generated@@368))
)))
(assert (forall (($generated@@373 T@T) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@342 $generated@@373))
 :pattern ( ($generated@@371 $generated@@373))
)))
(assert (forall (($generated@@374 T@T) ) (! (= ($generated@@372 ($generated@@371 $generated@@374)) 0)
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
 (=> (= (type $generated@@375) ($generated@@342 $generated@@377)) (= ($generated@@372 ($generated@@340 $generated@@375 $generated@@376)) (+ 1 ($generated@@372 $generated@@375)))))
 :pattern ( ($generated@@340 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@355) (and (and (= ($generated@@353 ($generated@@354 $generated@@378)) $generated@@378) (<= 0 ($generated@@354 $generated@@378))) (< ($generated@@354 $generated@@378) 65536)))
 :pattern ( ($generated@@354 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (= (type ($generated@@379 $generated@@380)) $generated@@248)
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@64) (= (type $generated@@383) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@359 ($generated@@379 $generated@@381) $generated@@382 $generated@@383) ($generated@@74 $generated@@381 $generated@@382 $generated@@383)))
 :pattern ( ($generated@@359 ($generated@@379 $generated@@381) $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@384) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@385) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@386) $generated@@248)) (= (type $generated@@387) $generated@@64)) ($generated@@220 $generated@@384 $generated@@385)) ($generated@@359 $generated@@386 $generated@@387 $generated@@384)) ($generated@@359 $generated@@386 $generated@@387 $generated@@385))
 :pattern ( ($generated@@220 $generated@@384 $generated@@385) ($generated@@359 $generated@@386 $generated@@387 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@389) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@391) $generated@@64)) ($generated@@220 $generated@@388 $generated@@389)) ($generated@@74 $generated@@390 $generated@@391 $generated@@388)) ($generated@@74 $generated@@390 $generated@@391 $generated@@389))
 :pattern ( ($generated@@220 $generated@@388 $generated@@389) ($generated@@74 $generated@@390 $generated@@391 $generated@@388))
)))
(assert (forall (($generated@@394 T@T) ) (! (= (type ($generated@@393 $generated@@394)) ($generated@@76 $generated@@394 $generated@@2))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@79 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@76 $generated@@396 $generated@@2)) (and (= (= ($generated@@392 $generated@@395) 0) (= $generated@@395 ($generated@@393 $generated@@396))) (=> (not (= ($generated@@392 $generated@@395) 0)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (< 0 ($generated ($generated@@81 $generated@@395 $generated@@397))))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert  (and (and (and (and (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (= ($generated@@1 ($generated@@400 $generated@@403 $generated@@404)) 30)) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= ($generated@@401 ($generated@@400 $generated@@405 $generated@@406)) $generated@@405)
 :pattern ( ($generated@@400 $generated@@405 $generated@@406))
))) (forall (($generated@@407 T@T) ($generated@@408 T@T) ) (! (= ($generated@@402 ($generated@@400 $generated@@407 $generated@@408)) $generated@@408)
 :pattern ( ($generated@@400 $generated@@407 $generated@@408))
))) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@401 (type $generated@@409))))
(= (type ($generated@@398 $generated@@409)) ($generated@@76 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@409))
))) (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (! (= (type ($generated@@399 $generated@@411 $generated@@412)) ($generated@@400 $generated@@411 $generated@@412))
 :pattern ( ($generated@@399 $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@T) ) (! (let (($generated@@415 (type $generated@@413)))
 (not ($generated@@0 ($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413))))
 :pattern ( (let (($generated@@415 (type $generated@@413)))
($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413)))
)))
(assert  (and (and (and (and (forall (($generated@@421 T@T) ($generated@@422 T@T) ) (= ($generated@@1 ($generated@@418 $generated@@421 $generated@@422)) 31)) (forall (($generated@@423 T@T) ($generated@@424 T@T) ) (! (= ($generated@@419 ($generated@@418 $generated@@423 $generated@@424)) $generated@@423)
 :pattern ( ($generated@@418 $generated@@423 $generated@@424))
))) (forall (($generated@@425 T@T) ($generated@@426 T@T) ) (! (= ($generated@@420 ($generated@@418 $generated@@425 $generated@@426)) $generated@@426)
 :pattern ( ($generated@@418 $generated@@425 $generated@@426))
))) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@419 (type $generated@@427))))
(= (type ($generated@@416 $generated@@427)) ($generated@@76 $generated@@428 $generated@@4)))
 :pattern ( ($generated@@416 $generated@@427))
))) (forall (($generated@@429 T@T) ($generated@@430 T@T) ) (! (= (type ($generated@@417 $generated@@429 $generated@@430)) ($generated@@418 $generated@@429 $generated@@430))
 :pattern ( ($generated@@417 $generated@@429 $generated@@430))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@T) ) (! (let (($generated@@433 (type $generated@@431)))
 (not ($generated@@0 ($generated@@81 ($generated@@416 ($generated@@417 $generated@@433 $generated@@432)) $generated@@431))))
 :pattern ( (let (($generated@@433 (type $generated@@431)))
($generated@@81 ($generated@@416 ($generated@@417 $generated@@433 $generated@@432)) $generated@@431)))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@79 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@76 $generated@@435 $generated@@2)) (= ($generated@@254 $generated@@434) (forall (($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@435) (and (<= 0 ($generated ($generated@@81 $generated@@434 $generated@@436))) (<= ($generated ($generated@@81 $generated@@434 $generated@@436)) ($generated@@392 $generated@@434))))
 :pattern ( ($generated@@81 $generated@@434 $generated@@436))
)))))
 :pattern ( ($generated@@254 $generated@@434))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 Int) ) (! (let (($generated@@440 ($generated@@343 (type $generated@@438))))
(= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@440))
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 Int) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
 (=> (= (type $generated@@441) ($generated@@342 $generated@@444)) (and (=> (= $generated@@442 ($generated@@372 $generated@@441)) (= ($generated@@437 ($generated@@340 $generated@@441 $generated@@443) $generated@@442) $generated@@443)) (=> (not (= $generated@@442 ($generated@@372 $generated@@441))) (= ($generated@@437 ($generated@@340 $generated@@441 $generated@@443) $generated@@442) ($generated@@437 $generated@@441 $generated@@442))))))
 :pattern ( ($generated@@437 ($generated@@340 $generated@@441 $generated@@443) $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@402 (type $generated@@445))))
(let (($generated@@447 ($generated@@401 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@400 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@399 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@445) $generated@@448)))
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@398 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@402 (type $generated@@450))))
(= (type ($generated@@449 $generated@@450)) ($generated@@76 $generated@@451 $generated@@4)))
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@402 (type $generated@@452))))
(let (($generated@@454 ($generated@@401 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@400 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@399 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ) (!  (and (= (type $generated@@455) $generated@@453) ($generated@@0 ($generated@@81 ($generated@@449 $generated@@452) $generated@@455)))
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@449 $generated@@452))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@420 (type $generated@@456))))
(let (($generated@@458 ($generated@@419 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@418 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@417 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ) (!  (and (= (type $generated@@459) $generated@@458) ($generated@@0 ($generated@@81 ($generated@@416 $generated@@456) $generated@@459)))
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@416 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@420 (type $generated@@461))))
(= (type ($generated@@460 $generated@@461)) ($generated@@76 $generated@@462 $generated@@4)))
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@420 (type $generated@@463))))
(let (($generated@@465 ($generated@@419 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@418 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@417 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ) (!  (and (= (type $generated@@466) $generated@@464) ($generated@@0 ($generated@@81 ($generated@@460 $generated@@463) $generated@@466)))
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@460 $generated@@463))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@468) $generated@@64)) (= ($generated@@224 $generated@@467 ($generated@@253 $generated@@468)) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@467 $generated@@469)))) ($generated@@315 $generated@@469 $generated@@468))
 :pattern ( ($generated@@81 $generated@@467 $generated@@469))
))))
 :pattern ( ($generated@@224 $generated@@467 ($generated@@253 $generated@@468)))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (= (type $generated@@470) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@471) $generated@@64)) (= (type $generated@@472) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@470 ($generated@@324 $generated@@471) $generated@@472) (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@248) ($generated@@0 ($generated@@81 $generated@@470 $generated@@473))) ($generated@@359 $generated@@473 $generated@@471 $generated@@472))
 :pattern ( ($generated@@81 $generated@@470 $generated@@473))
))))
 :pattern ( ($generated@@74 $generated@@470 ($generated@@324 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (= (type $generated@@474) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@475) $generated@@64)) (= (type $generated@@476) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@474 ($generated@@329 $generated@@475) $generated@@476) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@248) ($generated@@0 ($generated@@81 $generated@@474 $generated@@477))) ($generated@@359 $generated@@477 $generated@@475 $generated@@476))
 :pattern ( ($generated@@81 $generated@@474 $generated@@477))
))))
 :pattern ( ($generated@@74 $generated@@474 ($generated@@329 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 (type $generated@@478)))
(= ($generated ($generated@@81 ($generated@@393 $generated@@479) $generated@@478)) 0))
 :pattern ( (let (($generated@@479 (type $generated@@478)))
($generated@@81 ($generated@@393 $generated@@479) $generated@@478)))
)))
(assert  (and (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@480 $generated@@483)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@480 $generated@@483))
)) (forall (($generated@@484 T@T) ($generated@@485 T@U) ) (! (= (type ($generated@@481 $generated@@484 $generated@@485)) $generated@@484)
 :pattern ( ($generated@@481 $generated@@484 $generated@@485))
))) (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@402 (type $generated@@486))))
(let (($generated@@488 ($generated@@401 (type $generated@@486))))
(= (type ($generated@@482 $generated@@486)) ($generated@@76 $generated@@488 $generated@@487))))
 :pattern ( ($generated@@482 $generated@@486))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@490) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@480 $generated@@489) $generated@@490))  (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@489) ($generated@@246 ($generated@@481 $generated@@239 $generated@@490)))) (= ($generated@@81 ($generated@@482 $generated@@489) ($generated@@246 ($generated@@481 $generated@@239 $generated@@490))) ($generated@@247 ($generated@@481 $generated@@239 $generated@@490))))))
 :pattern ( ($generated@@81 ($generated@@480 $generated@@489) $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@420 (type $generated@@494))))
(let (($generated@@496 ($generated@@419 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494)) ($generated@@76 $generated@@496 $generated@@495))))
 :pattern ( ($generated@@492 $generated@@494))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) ($generated@@418 $generated@@248 $generated@@248)) (= (type $generated@@498) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@491 $generated@@497) $generated@@498))  (and ($generated@@0 ($generated@@81 ($generated@@416 $generated@@497) ($generated@@246 ($generated@@481 $generated@@239 $generated@@498)))) (= ($generated@@81 ($generated@@492 $generated@@497) ($generated@@246 ($generated@@481 $generated@@239 $generated@@498))) ($generated@@247 ($generated@@481 $generated@@239 $generated@@498))))))
 :pattern ( ($generated@@81 ($generated@@491 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (! (let (($generated@@501 (type $generated@@500)))
(let (($generated@@502 ($generated@@401 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@400 $generated@@502 $generated@@501)) (= ($generated@@0 ($generated@@81 ($generated@@449 $generated@@499) $generated@@500)) (exists (($generated@@503 T@U) ) (!  (and (= (type $generated@@503) $generated@@502) (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@499) $generated@@503)) (= $generated@@500 ($generated@@81 ($generated@@482 $generated@@499) $generated@@503))))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@499) $generated@@503))
 :pattern ( ($generated@@81 ($generated@@482 $generated@@499) $generated@@503))
))))))
 :pattern ( ($generated@@81 ($generated@@449 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(let (($generated@@507 ($generated@@419 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@418 $generated@@507 $generated@@506)) (= ($generated@@0 ($generated@@81 ($generated@@460 $generated@@504) $generated@@505)) (exists (($generated@@508 T@U) ) (!  (and (= (type $generated@@508) $generated@@507) (and ($generated@@0 ($generated@@81 ($generated@@416 $generated@@504) $generated@@508)) (= $generated@@505 ($generated@@81 ($generated@@492 $generated@@504) $generated@@508))))
 :pattern ( ($generated@@81 ($generated@@416 $generated@@504) $generated@@508))
 :pattern ( ($generated@@81 ($generated@@492 $generated@@504) $generated@@508))
))))))
 :pattern ( ($generated@@81 ($generated@@460 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@512 ($generated@@509 $generated@@513 $generated@@514) $generated@@515) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@512) $generated@@516))) (and ($generated@@359 ($generated@@81 ($generated@@482 $generated@@512) $generated@@516) $generated@@514 $generated@@515) ($generated@@359 $generated@@516 $generated@@513 $generated@@515)))
 :pattern ( ($generated@@81 ($generated@@482 $generated@@512) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@512) $generated@@516))
))))
 :pattern ( ($generated@@74 $generated@@512 ($generated@@509 $generated@@513 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (! (= (type ($generated@@517 $generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) ($generated@@418 $generated@@248 $generated@@248)) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@520 ($generated@@517 $generated@@521 $generated@@522) $generated@@523) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@416 $generated@@520) $generated@@524))) (and ($generated@@359 ($generated@@81 ($generated@@492 $generated@@520) $generated@@524) $generated@@522 $generated@@523) ($generated@@359 $generated@@524 $generated@@521 $generated@@523)))
 :pattern ( ($generated@@81 ($generated@@492 $generated@@520) $generated@@524))
 :pattern ( ($generated@@81 ($generated@@416 $generated@@520) $generated@@524))
))))
 :pattern ( ($generated@@74 $generated@@520 ($generated@@517 $generated@@521 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@525) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@526) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@527) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@525 $generated@@527))) (and ($generated@@220 $generated@@525 $generated@@526) ($generated@@220 $generated@@526 $generated@@527))) ($generated@@220 $generated@@525 $generated@@527))
 :pattern ( ($generated@@220 $generated@@525 $generated@@526) ($generated@@220 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@T) ) (! (= (type ($generated@@528 $generated@@529)) ($generated@@76 $generated@@529 $generated@@4))
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@420 (type $generated@@530))))
(let (($generated@@532 ($generated@@419 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@418 $generated@@532 $generated@@531)) (= (= $generated@@530 ($generated@@417 $generated@@532 $generated@@531)) (= ($generated@@416 $generated@@530) ($generated@@528 $generated@@532))))))
 :pattern ( ($generated@@416 $generated@@530))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@420 (type $generated@@533))))
(let (($generated@@535 ($generated@@419 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@418 $generated@@535 $generated@@534)) (= (= $generated@@533 ($generated@@417 $generated@@535 $generated@@534)) (= ($generated@@460 $generated@@533) ($generated@@528 $generated@@534))))))
 :pattern ( ($generated@@460 $generated@@533))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@420 (type $generated@@536))))
(let (($generated@@538 ($generated@@419 (type $generated@@536))))
 (=> (= (type $generated@@536) ($generated@@418 $generated@@538 $generated@@537)) (= (= $generated@@536 ($generated@@417 $generated@@538 $generated@@537)) (= ($generated@@491 $generated@@536) ($generated@@528 $generated@@248))))))
 :pattern ( ($generated@@491 $generated@@536))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@402 (type $generated@@539))))
(let (($generated@@541 ($generated@@401 (type $generated@@539))))
 (=> (= (type $generated@@539) ($generated@@400 $generated@@541 $generated@@540)) (or (= $generated@@539 ($generated@@399 $generated@@541 $generated@@540)) (exists (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (and (and (= (type $generated@@542) $generated@@248) (= (type $generated@@543) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@480 $generated@@539) ($generated@@379 ($generated@@314 $generated@@542 $generated@@543)))))
 :no-pattern (type $generated@@542)
 :no-pattern (type $generated@@543)
 :no-pattern ($generated $generated@@542)
 :no-pattern ($generated@@0 $generated@@542)
 :no-pattern ($generated $generated@@543)
 :no-pattern ($generated@@0 $generated@@543)
))))))
 :pattern ( ($generated@@480 $generated@@539))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@420 (type $generated@@544))))
(let (($generated@@546 ($generated@@419 (type $generated@@544))))
 (=> (= (type $generated@@544) ($generated@@418 $generated@@546 $generated@@545)) (or (= $generated@@544 ($generated@@417 $generated@@546 $generated@@545)) (exists (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (and (and (= (type $generated@@547) $generated@@248) (= (type $generated@@548) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@491 $generated@@544) ($generated@@379 ($generated@@314 $generated@@547 $generated@@548)))))
 :no-pattern (type $generated@@547)
 :no-pattern (type $generated@@548)
 :no-pattern ($generated $generated@@547)
 :no-pattern ($generated@@0 $generated@@547)
 :no-pattern ($generated $generated@@548)
 :no-pattern ($generated@@0 $generated@@548)
))))))
 :pattern ( ($generated@@491 $generated@@544))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@248) ($generated@@315 $generated@@549 $generated@@46)) (and (= ($generated@@379 ($generated@@481 $generated@@2 $generated@@549)) $generated@@549) ($generated@@224 ($generated@@481 $generated@@2 $generated@@549) $generated@@46)))
 :pattern ( ($generated@@315 $generated@@549 $generated@@46))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@248) ($generated@@315 $generated@@550 $generated@@47)) (and (= ($generated@@379 ($generated@@481 $generated@@3 $generated@@550)) $generated@@550) ($generated@@224 ($generated@@481 $generated@@3 $generated@@550) $generated@@47)))
 :pattern ( ($generated@@315 $generated@@550 $generated@@47))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@248) ($generated@@315 $generated@@551 $generated@@44)) (and (= ($generated@@379 ($generated@@481 $generated@@4 $generated@@551)) $generated@@551) ($generated@@224 ($generated@@481 $generated@@4 $generated@@551) $generated@@44)))
 :pattern ( ($generated@@315 $generated@@551 $generated@@44))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@248) ($generated@@315 $generated@@552 $generated@@45)) (and (= ($generated@@379 ($generated@@481 $generated@@355 $generated@@552)) $generated@@552) ($generated@@224 ($generated@@481 $generated@@355 $generated@@552) $generated@@45)))
 :pattern ( ($generated@@315 $generated@@552 $generated@@45))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@64) (= ($generated@@315 ($generated@@379 $generated@@553) $generated@@554) ($generated@@224 $generated@@553 $generated@@554)))
 :pattern ( ($generated@@315 ($generated@@379 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@79 (type $generated@@555))))
 (=> (= (type $generated@@555) ($generated@@76 $generated@@556 $generated@@2)) (<= 0 ($generated@@392 $generated@@555))))
 :pattern ( ($generated@@392 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@343 (type $generated@@557))))
 (=> (= (type $generated@@557) ($generated@@342 $generated@@558)) (<= 0 ($generated@@372 $generated@@557))))
 :pattern ( ($generated@@372 $generated@@557))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@64)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@64) (= (type $generated@@562) $generated@@64)) (= ($generated@@559 ($generated@@509 $generated@@561 $generated@@562)) $generated@@561))
 :pattern ( ($generated@@509 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@64)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@64) (= (type $generated@@566) $generated@@64)) (= ($generated@@563 ($generated@@509 $generated@@565 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@509 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@64) (= (type $generated@@568) $generated@@64)) (= ($generated@@72 ($generated@@509 $generated@@567 $generated@@568)) $generated@@58))
 :pattern ( ($generated@@509 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@64)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@64) (= (type $generated@@572) $generated@@64)) (= ($generated@@569 ($generated@@517 $generated@@571 $generated@@572)) $generated@@571))
 :pattern ( ($generated@@517 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@64)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@64) (= (type $generated@@576) $generated@@64)) (= ($generated@@573 ($generated@@517 $generated@@575 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@517 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@64) (= (type $generated@@578) $generated@@64)) (= ($generated@@72 ($generated@@517 $generated@@577 $generated@@578)) $generated@@59))
 :pattern ( ($generated@@517 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@248) (= (type $generated@@580) $generated@@248)) (= ($generated@@365 ($generated@@314 $generated@@579 $generated@@580)) $generated@@61))
 :pattern ( ($generated@@314 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@64)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@64) (= (type $generated@@584) $generated@@64)) (= ($generated@@581 ($generated@@238 $generated@@583 $generated@@584)) $generated@@583))
 :pattern ( ($generated@@238 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@64)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@64) (= (type $generated@@588) $generated@@64)) (= ($generated@@585 ($generated@@238 $generated@@587 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@238 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@248) (= (type $generated@@590) $generated@@248)) (= ($generated@@246 ($generated@@314 $generated@@589 $generated@@590)) $generated@@589))
 :pattern ( ($generated@@314 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@248) (= (type $generated@@592) $generated@@248)) (= ($generated@@247 ($generated@@314 $generated@@591 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@314 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@593) ($generated@@342 $generated@@248)) (= (type $generated@@594) $generated@@64)) (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@593 ($generated@@341 $generated@@594) $generated@@595) (forall (($generated@@596 Int) ) (!  (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@372 $generated@@593))) ($generated@@359 ($generated@@437 $generated@@593 $generated@@596) $generated@@594 $generated@@595))
 :pattern ( ($generated@@437 $generated@@593 $generated@@596))
))))
 :pattern ( ($generated@@74 $generated@@593 ($generated@@341 $generated@@594) $generated@@595))
)))
(assert (forall (($generated@@598 Int) ) (! (= ($generated@@597 ($generated@@75 $generated@@598)) $generated@@598)
 :pattern ( ($generated@@75 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ) (! (= (type ($generated@@599 $generated@@600)) $generated@@64)
 :pattern ( ($generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@64) (= ($generated@@599 ($generated@@324 $generated@@601)) $generated@@601))
 :pattern ( ($generated@@324 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@64) (= ($generated@@72 ($generated@@324 $generated@@602)) $generated@@54))
 :pattern ( ($generated@@324 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ) (! (= (type ($generated@@603 $generated@@604)) $generated@@64)
 :pattern ( ($generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@64) (= ($generated@@603 ($generated@@329 $generated@@605)) $generated@@605))
 :pattern ( ($generated@@329 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@64) (= ($generated@@72 ($generated@@329 $generated@@606)) $generated@@55))
 :pattern ( ($generated@@329 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ) (! (= (type ($generated@@607 $generated@@608)) $generated@@64)
 :pattern ( ($generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@64) (= ($generated@@607 ($generated@@253 $generated@@609)) $generated@@609))
 :pattern ( ($generated@@253 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@610)) $generated@@56))
 :pattern ( ($generated@@253 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ) (! (= (type ($generated@@611 $generated@@612)) $generated@@64)
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@64) (= ($generated@@611 ($generated@@341 $generated@@613)) $generated@@613))
 :pattern ( ($generated@@341 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@64) (= ($generated@@72 ($generated@@341 $generated@@614)) $generated@@57))
 :pattern ( ($generated@@341 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (! (let (($generated@@616 (type $generated@@615)))
(= ($generated@@481 $generated@@616 ($generated@@379 $generated@@615)) $generated@@615))
 :pattern ( ($generated@@379 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@618) $generated@@64)) (= (type $generated@@619) $generated@@64)) (= ($generated@@224 $generated@@617 ($generated@@509 $generated@@618 $generated@@619)) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@617) $generated@@620))) (and ($generated@@315 ($generated@@81 ($generated@@482 $generated@@617) $generated@@620) $generated@@619) ($generated@@315 $generated@@620 $generated@@618)))
 :pattern ( ($generated@@81 ($generated@@482 $generated@@617) $generated@@620))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@617) $generated@@620))
))))
 :pattern ( ($generated@@224 $generated@@617 ($generated@@509 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@621) ($generated@@418 $generated@@248 $generated@@248)) (= (type $generated@@622) $generated@@64)) (= (type $generated@@623) $generated@@64)) (= ($generated@@224 $generated@@621 ($generated@@517 $generated@@622 $generated@@623)) (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@416 $generated@@621) $generated@@624))) (and ($generated@@315 ($generated@@81 ($generated@@492 $generated@@621) $generated@@624) $generated@@623) ($generated@@315 $generated@@624 $generated@@622)))
 :pattern ( ($generated@@81 ($generated@@492 $generated@@621) $generated@@624))
 :pattern ( ($generated@@81 ($generated@@416 $generated@@621) $generated@@624))
))))
 :pattern ( ($generated@@224 $generated@@621 ($generated@@517 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@248) (= (type $generated@@628) $generated@@248)) (< ($generated@@625 $generated@@627) ($generated@@626 ($generated@@314 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@314 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@248) (= (type $generated@@630) $generated@@248)) (< ($generated@@625 $generated@@630) ($generated@@626 ($generated@@314 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@314 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@248) (= (type $generated@@632) $generated@@64)) (= (type $generated@@633) $generated@@64)) ($generated@@315 $generated@@631 ($generated@@509 $generated@@632 $generated@@633))) (and (= ($generated@@379 ($generated@@481 ($generated@@400 $generated@@248 $generated@@248) $generated@@631)) $generated@@631) ($generated@@224 ($generated@@481 ($generated@@400 $generated@@248 $generated@@248) $generated@@631) ($generated@@509 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@315 $generated@@631 ($generated@@509 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@248) (= (type $generated@@635) $generated@@64)) (= (type $generated@@636) $generated@@64)) ($generated@@315 $generated@@634 ($generated@@517 $generated@@635 $generated@@636))) (and (= ($generated@@379 ($generated@@481 ($generated@@418 $generated@@248 $generated@@248) $generated@@634)) $generated@@634) ($generated@@224 ($generated@@481 ($generated@@418 $generated@@248 $generated@@248) $generated@@634) ($generated@@517 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@315 $generated@@634 ($generated@@517 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@64) (= (type $generated@@638) $generated@@64)) (= (type $generated@@639) $generated@@248)) ($generated@@315 $generated@@639 ($generated@@238 $generated@@637 $generated@@638))) (and (= ($generated@@379 ($generated@@481 $generated@@239 $generated@@639)) $generated@@639) ($generated@@224 ($generated@@481 $generated@@239 $generated@@639) ($generated@@238 $generated@@637 $generated@@638))))
 :pattern ( ($generated@@315 $generated@@639 ($generated@@238 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@640 T@U) ) (! (let (($generated@@641 (type $generated@@640)))
 (not ($generated@@0 ($generated@@81 ($generated@@528 $generated@@641) $generated@@640))))
 :pattern ( (let (($generated@@641 (type $generated@@640)))
($generated@@81 ($generated@@528 $generated@@641) $generated@@640)))
)))
(assert (forall (($generated@@643 T@U) ) (! (= (type ($generated@@642 $generated@@643)) $generated@@69)
 :pattern ( ($generated@@642 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@64) (= (type $generated@@645) $generated@@64)) (and (= ($generated@@72 ($generated@@238 $generated@@644 $generated@@645)) $generated@@62) (= ($generated@@642 ($generated@@238 $generated@@644 $generated@@645)) $generated@@63)))
 :pattern ( ($generated@@238 $generated@@644 $generated@@645))
)))
(assert  (and (forall (($generated@@648 T@U) ) (! (let (($generated@@649 ($generated@@343 (type $generated@@648))))
(= (type ($generated@@646 $generated@@648)) ($generated@@342 $generated@@649)))
 :pattern ( ($generated@@646 $generated@@648))
)) (forall (($generated@@650 T@U) ) (! (let (($generated@@651 ($generated@@343 (type $generated@@650))))
(= (type ($generated@@647 $generated@@650)) $generated@@651))
 :pattern ( ($generated@@647 $generated@@650))
))))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 (type $generated@@653)))
 (=> (= (type $generated@@652) ($generated@@342 $generated@@654)) (and (= ($generated@@646 ($generated@@340 $generated@@652 $generated@@653)) $generated@@652) (= ($generated@@647 ($generated@@340 $generated@@652 $generated@@653)) $generated@@653))))
 :pattern ( ($generated@@340 $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@239) (= ($generated@@625 ($generated@@379 $generated@@655)) ($generated@@626 $generated@@655)))
 :pattern ( ($generated@@625 ($generated@@379 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@248) ($generated@@315 $generated@@656 ($generated@@75 0))) (and (= ($generated@@379 ($generated@@481 $generated@@2 $generated@@656)) $generated@@656) ($generated@@224 ($generated@@481 ($generated@@76 $generated@@248 $generated@@4) $generated@@656) ($generated@@75 0))))
 :pattern ( ($generated@@315 $generated@@656 ($generated@@75 0)))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@248) ($generated@@315 $generated@@657 ($generated@@75 1))) (and (= ($generated@@379 ($generated@@481 $generated@@132 $generated@@657)) $generated@@657) ($generated@@224 ($generated@@481 $generated@@132 $generated@@657) ($generated@@75 1))))
 :pattern ( ($generated@@315 $generated@@657 ($generated@@75 1)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (= (type $generated@@658) $generated@@248) (= (type $generated@@659) $generated@@64)) ($generated@@315 $generated@@658 ($generated@@324 $generated@@659))) (and (= ($generated@@379 ($generated@@481 ($generated@@76 $generated@@248 $generated@@4) $generated@@658)) $generated@@658) ($generated@@224 ($generated@@481 ($generated@@76 $generated@@248 $generated@@4) $generated@@658) ($generated@@324 $generated@@659))))
 :pattern ( ($generated@@315 $generated@@658 ($generated@@324 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@660) $generated@@248) (= (type $generated@@661) $generated@@64)) ($generated@@315 $generated@@660 ($generated@@329 $generated@@661))) (and (= ($generated@@379 ($generated@@481 ($generated@@76 $generated@@248 $generated@@4) $generated@@660)) $generated@@660) ($generated@@224 ($generated@@481 ($generated@@76 $generated@@248 $generated@@4) $generated@@660) ($generated@@329 $generated@@661))))
 :pattern ( ($generated@@315 $generated@@660 ($generated@@329 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@662) $generated@@248) (= (type $generated@@663) $generated@@64)) ($generated@@315 $generated@@662 ($generated@@253 $generated@@663))) (and (= ($generated@@379 ($generated@@481 ($generated@@76 $generated@@248 $generated@@2) $generated@@662)) $generated@@662) ($generated@@224 ($generated@@481 ($generated@@76 $generated@@248 $generated@@2) $generated@@662) ($generated@@253 $generated@@663))))
 :pattern ( ($generated@@315 $generated@@662 ($generated@@253 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@664) $generated@@248) (= (type $generated@@665) $generated@@64)) ($generated@@315 $generated@@664 ($generated@@341 $generated@@665))) (and (= ($generated@@379 ($generated@@481 ($generated@@342 $generated@@248) $generated@@664)) $generated@@664) ($generated@@224 ($generated@@481 ($generated@@342 $generated@@248) $generated@@664) ($generated@@341 $generated@@665))))
 :pattern ( ($generated@@315 $generated@@664 ($generated@@341 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@248) ($generated@@315 $generated@@666 ($generated@@75 2))) (and (= ($generated@@379 ($generated@@481 $generated@@140 $generated@@666)) $generated@@666) ($generated@@224 ($generated@@481 $generated@@140 $generated@@666) ($generated@@75 2))))
 :pattern ( ($generated@@315 $generated@@666 ($generated@@75 2)))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@667) $generated@@248) ($generated@@315 $generated@@667 ($generated@@75 3))) (and (= ($generated@@379 ($generated@@481 $generated@@148 $generated@@667)) $generated@@667) ($generated@@224 ($generated@@481 $generated@@148 $generated@@667) ($generated@@75 3))))
 :pattern ( ($generated@@315 $generated@@667 ($generated@@75 3)))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@248) ($generated@@315 $generated@@668 ($generated@@75 4))) (and (= ($generated@@379 ($generated@@481 $generated@@156 $generated@@668)) $generated@@668) ($generated@@224 ($generated@@481 $generated@@156 $generated@@668) ($generated@@75 4))))
 :pattern ( ($generated@@315 $generated@@668 ($generated@@75 4)))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@248) ($generated@@315 $generated@@669 ($generated@@75 7))) (and (= ($generated@@379 ($generated@@481 $generated@@164 $generated@@669)) $generated@@669) ($generated@@224 ($generated@@481 $generated@@164 $generated@@669) ($generated@@75 7))))
 :pattern ( ($generated@@315 $generated@@669 ($generated@@75 7)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@248) ($generated@@315 $generated@@670 ($generated@@75 8))) (and (= ($generated@@379 ($generated@@481 $generated@@172 $generated@@670)) $generated@@670) ($generated@@224 ($generated@@481 $generated@@172 $generated@@670) ($generated@@75 8))))
 :pattern ( ($generated@@315 $generated@@670 ($generated@@75 8)))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@248) ($generated@@315 $generated@@671 ($generated@@75 15))) (and (= ($generated@@379 ($generated@@481 $generated@@180 $generated@@671)) $generated@@671) ($generated@@224 ($generated@@481 $generated@@180 $generated@@671) ($generated@@75 15))))
 :pattern ( ($generated@@315 $generated@@671 ($generated@@75 15)))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@672) $generated@@248) ($generated@@315 $generated@@672 ($generated@@75 16))) (and (= ($generated@@379 ($generated@@481 $generated@@188 $generated@@672)) $generated@@672) ($generated@@224 ($generated@@481 $generated@@188 $generated@@672) ($generated@@75 16))))
 :pattern ( ($generated@@315 $generated@@672 ($generated@@75 16)))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@248) ($generated@@315 $generated@@673 ($generated@@75 32))) (and (= ($generated@@379 ($generated@@481 $generated@@196 $generated@@673)) $generated@@673) ($generated@@224 ($generated@@481 $generated@@196 $generated@@673) ($generated@@75 32))))
 :pattern ( ($generated@@315 $generated@@673 ($generated@@75 32)))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@674) $generated@@248) ($generated@@315 $generated@@674 ($generated@@75 53))) (and (= ($generated@@379 ($generated@@481 $generated@@204 $generated@@674)) $generated@@674) ($generated@@224 ($generated@@481 $generated@@204 $generated@@674) ($generated@@75 53))))
 :pattern ( ($generated@@315 $generated@@674 ($generated@@75 53)))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@248) ($generated@@315 $generated@@675 ($generated@@75 100))) (and (= ($generated@@379 ($generated@@481 $generated@@212 $generated@@675)) $generated@@675) ($generated@@224 ($generated@@481 $generated@@212 $generated@@675) ($generated@@75 100))))
 :pattern ( ($generated@@315 $generated@@675 ($generated@@75 100)))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@676) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@677) $generated@@64)) (= (type $generated@@678) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@676 ($generated@@253 $generated@@677) $generated@@678) (forall (($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@679) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@676 $generated@@679)))) ($generated@@359 $generated@@679 $generated@@677 $generated@@678))
 :pattern ( ($generated@@81 $generated@@676 $generated@@679))
))))
 :pattern ( ($generated@@74 $generated@@676 ($generated@@253 $generated@@677) $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) $generated@@239) (= (type $generated@@681) $generated@@64)) (= (type $generated@@682) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@358 $generated@@682) (and ($generated@@237 $generated@@680) (exists (($generated@@683 T@U) ) (!  (and (= (type $generated@@683) $generated@@64) ($generated@@74 $generated@@680 ($generated@@238 $generated@@681 $generated@@683) $generated@@682))
 :pattern ( ($generated@@74 $generated@@680 ($generated@@238 $generated@@681 $generated@@683) $generated@@682))
))))) ($generated@@359 ($generated@@246 $generated@@680) $generated@@681 $generated@@682))
 :pattern ( ($generated@@359 ($generated@@246 $generated@@680) $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (and (= (type $generated@@684) $generated@@239) (= (type $generated@@685) $generated@@64)) (= (type $generated@@686) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@358 $generated@@686) (and ($generated@@237 $generated@@684) (exists (($generated@@687 T@U) ) (!  (and (= (type $generated@@687) $generated@@64) ($generated@@74 $generated@@684 ($generated@@238 $generated@@687 $generated@@685) $generated@@686))
 :pattern ( ($generated@@74 $generated@@684 ($generated@@238 $generated@@687 $generated@@685) $generated@@686))
))))) ($generated@@359 ($generated@@247 $generated@@684) $generated@@685 $generated@@686))
 :pattern ( ($generated@@359 ($generated@@247 $generated@@684) $generated@@685 $generated@@686))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) $generated@@248) (= (type $generated@@689) $generated@@248)) (= ($generated@@314 ($generated@@336 $generated@@688) ($generated@@336 $generated@@689)) ($generated@@336 ($generated@@314 $generated@@688 $generated@@689))))
 :pattern ( ($generated@@314 ($generated@@336 $generated@@688) ($generated@@336 $generated@@689)))
)))
(assert (forall (($generated@@690 Int) ) (! (= ($generated@@379 ($generated@@8 ($generated@@334 $generated@@690))) ($generated@@336 ($generated@@379 ($generated@@8 $generated@@690))))
 :pattern ( ($generated@@379 ($generated@@8 ($generated@@334 $generated@@690))))
)))
(assert (forall (($generated@@691 T@U) ) (! (= ($generated@@379 ($generated@@336 $generated@@691)) ($generated@@336 ($generated@@379 $generated@@691)))
 :pattern ( ($generated@@379 ($generated@@336 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ) (! (let (($generated@@693 ($generated@@343 (type $generated@@692))))
 (=> (and (= (type $generated@@692) ($generated@@342 $generated@@693)) (= ($generated@@372 $generated@@692) 0)) (= $generated@@692 ($generated@@371 $generated@@693))))
 :pattern ( ($generated@@372 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ) (! (let (($generated@@697 (type $generated@@695)))
 (=> (and (and (= (type $generated@@694) ($generated@@76 $generated@@697 $generated@@2)) (= (type $generated@@696) $generated@@2)) (<= 0 ($generated $generated@@696))) (= ($generated@@392 ($generated@@82 $generated@@694 $generated@@695 $generated@@696)) (+ (- ($generated@@392 $generated@@694) ($generated ($generated@@81 $generated@@694 $generated@@695))) ($generated $generated@@696)))))
 :pattern ( ($generated@@392 ($generated@@82 $generated@@694 $generated@@695 $generated@@696)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@698) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@699) $generated@@2)) ($generated@@74 $generated@@699 $generated@@46 $generated@@698))
 :pattern ( ($generated@@74 $generated@@699 $generated@@46 $generated@@698))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@700) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@701) $generated@@3)) ($generated@@74 $generated@@701 $generated@@47 $generated@@700))
 :pattern ( ($generated@@74 $generated@@701 $generated@@47 $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@702) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@703) $generated@@4)) ($generated@@74 $generated@@703 $generated@@44 $generated@@702))
 :pattern ( ($generated@@74 $generated@@703 $generated@@44 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@704) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@705) $generated@@355)) ($generated@@74 $generated@@705 $generated@@45 $generated@@704))
 :pattern ( ($generated@@74 $generated@@705 $generated@@45 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@706) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@707) $generated@@248)) ($generated@@74 $generated@@707 $generated@@48 $generated@@706))
 :pattern ( ($generated@@74 $generated@@707 $generated@@48 $generated@@706))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@708) ($generated@@342 $generated@@248)) (= (type $generated@@709) $generated@@64)) (= ($generated@@224 $generated@@708 ($generated@@341 $generated@@709)) (forall (($generated@@710 Int) ) (!  (=> (and (<= 0 $generated@@710) (< $generated@@710 ($generated@@372 $generated@@708))) ($generated@@315 ($generated@@437 $generated@@708 $generated@@710) $generated@@709))
 :pattern ( ($generated@@437 $generated@@708 $generated@@710))
))))
 :pattern ( ($generated@@224 $generated@@708 ($generated@@341 $generated@@709)))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 Int) ) (!  (=> (= (type $generated@@712) ($generated@@342 $generated@@248)) (=> (and (<= 0 $generated@@713) (< $generated@@713 ($generated@@372 $generated@@712))) (< ($generated@@626 ($generated@@481 $generated@@239 ($generated@@437 $generated@@712 $generated@@713))) ($generated@@711 $generated@@712))))
 :pattern ( ($generated@@626 ($generated@@481 $generated@@239 ($generated@@437 $generated@@712 $generated@@713))))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (and (= (type $generated@@714) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@715) $generated@@64)) (= (type $generated@@716) $generated@@64)) ($generated@@224 $generated@@714 ($generated@@509 $generated@@715 $generated@@716))) (and (and ($generated@@224 ($generated@@398 $generated@@714) ($generated@@324 $generated@@715)) ($generated@@224 ($generated@@449 $generated@@714) ($generated@@324 $generated@@716))) ($generated@@224 ($generated@@480 $generated@@714) ($generated@@324 ($generated@@238 $generated@@715 $generated@@716)))))
 :pattern ( ($generated@@224 $generated@@714 ($generated@@509 $generated@@715 $generated@@716)))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (and (and (= (type $generated@@717) ($generated@@418 $generated@@248 $generated@@248)) (= (type $generated@@718) $generated@@64)) (= (type $generated@@719) $generated@@64)) ($generated@@224 $generated@@717 ($generated@@517 $generated@@718 $generated@@719))) (and (and ($generated@@224 ($generated@@416 $generated@@717) ($generated@@329 $generated@@718)) ($generated@@224 ($generated@@460 $generated@@717) ($generated@@329 $generated@@719))) ($generated@@224 ($generated@@491 $generated@@717) ($generated@@329 ($generated@@238 $generated@@718 $generated@@719)))))
 :pattern ( ($generated@@224 $generated@@717 ($generated@@517 $generated@@718 $generated@@719)))
)))
(assert (forall (($generated@@720 T@U) ) (!  (=> (= (type $generated@@720) $generated@@2) ($generated@@224 $generated@@720 $generated@@46))
 :pattern ( ($generated@@224 $generated@@720 $generated@@46))
)))
(assert (forall (($generated@@721 T@U) ) (!  (=> (= (type $generated@@721) $generated@@3) ($generated@@224 $generated@@721 $generated@@47))
 :pattern ( ($generated@@224 $generated@@721 $generated@@47))
)))
(assert (forall (($generated@@722 T@U) ) (!  (=> (= (type $generated@@722) $generated@@4) ($generated@@224 $generated@@722 $generated@@44))
 :pattern ( ($generated@@224 $generated@@722 $generated@@44))
)))
(assert (forall (($generated@@723 T@U) ) (!  (=> (= (type $generated@@723) $generated@@355) ($generated@@224 $generated@@723 $generated@@45))
 :pattern ( ($generated@@224 $generated@@723 $generated@@45))
)))
(assert (forall (($generated@@724 T@U) ) (!  (=> (= (type $generated@@724) $generated@@248) ($generated@@224 $generated@@724 $generated@@48))
 :pattern ( ($generated@@224 $generated@@724 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@725 () Int)
(declare-fun $generated@@726 () T@U)
(declare-fun $generated@@727 () Int)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 () Int)
(declare-fun $generated@@730 () Bool)
(declare-fun $generated@@731 () T@U)
(declare-fun $generated@@732 () T@U)
(declare-fun $generated@@733 () Int)
(declare-fun $generated@@734 () T@U)
(declare-fun $generated@@735 () T@U)
(declare-fun $generated@@736 () Int)
(declare-fun $generated@@737 () T@U)
(declare-fun $generated@@738 (T@U) Bool)
(declare-fun $generated@@739 () T@U)
(declare-fun $generated@@740 () T@U)
(declare-fun $generated@@741 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@726) ($generated@@342 $generated@@248)) (= (type $generated@@728) ($generated@@342 $generated@@248))) (= (type $generated@@731) ($generated@@342 $generated@@248))) (= (type $generated@@732) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@734) $generated@@77)) (= (type $generated@@735) ($generated@@260 $generated@@77 $generated@@4))) (= (type $generated@@737) ($generated@@342 $generated@@248))) (= (type $generated@@739) $generated@@64)) (= (type $generated@@740) ($generated@@342 $generated@@248))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@742  (=> (and (< $generated@@725 ($generated@@372 $generated@@726)) (= $generated@@727 (- ($generated@@372 $generated@@726) $generated@@725))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 $generated@@725) (< $generated@@725 ($generated@@372 $generated@@726)))) (=> (and (= $generated@@728 ($generated@@336 ($generated@@340 ($generated@@371 $generated@@248) ($generated@@379 ($generated@@353 32))))) (= $generated@@729 (+ $generated@@725 1))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@727) (= (- ($generated@@372 $generated@@726) $generated@@729) $generated@@727))) (=> (or (<= 0 $generated@@727) (= (- ($generated@@372 $generated@@726) $generated@@729) $generated@@727)) (=> (= (ControlFlow 0 5) (- 0 4)) (< (- ($generated@@372 $generated@@726) $generated@@729) $generated@@727)))))))))
(let (($generated@@743 true))
(let (($generated@@744  (=> $generated@@730 (and (=> (= (ControlFlow 0 8) 3) $generated@@743) (=> (= (ControlFlow 0 8) 5) $generated@@742)))))
(let (($generated@@745 true))
(let (($generated@@746  (and (=> (= (ControlFlow 0 9) 2) $generated@@745) (=> (= (ControlFlow 0 9) 8) $generated@@744))))
(let (($generated@@747 true))
(let (($generated@@748  (=> (and ($generated@@224 $generated@@731 ($generated@@341 $generated@@45)) ($generated@@74 $generated@@731 ($generated@@341 $generated@@45) $generated@@732)) (=> (and (and (and (and (not false) (<= 0 $generated@@725)) (= $generated@@733 0)) (forall (($generated@@749 T@U) ) (!  (=> (= (type $generated@@749) $generated@@77) (=> (and (not (= $generated@@749 $generated@@734)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@732 $generated@@749) $generated@@60))) (= ($generated@@81 $generated@@732 $generated@@749) ($generated@@81 $generated@@732 $generated@@749))))
 :pattern ( ($generated@@81 $generated@@732 $generated@@749))
))) (and (and ($generated@@220 $generated@@732 $generated@@732) (forall (($generated@@750 T@U) ($generated@@751 T@U) ) (! (let (($generated@@752 ($generated@@67 (type $generated@@751))))
 (=> (and (and (= (type $generated@@750) $generated@@77) (= (type $generated@@751) ($generated@@66 $generated@@752))) (and (not (= $generated@@750 $generated@@734)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@732 $generated@@750) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@732 $generated@@750) $generated@@751) ($generated@@83 ($generated@@81 $generated@@732 $generated@@750) $generated@@751)) ($generated@@0 ($generated@@258 $generated@@735 $generated@@750 $generated@@751)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@732 $generated@@750) $generated@@751))
))) (and (<= (- ($generated@@372 $generated@@726) $generated@@725) $generated@@736) (=> (= (- ($generated@@372 $generated@@726) $generated@@725) $generated@@736) true)))) (and (=> (= (ControlFlow 0 10) 1) $generated@@747) (=> (= (ControlFlow 0 10) 9) $generated@@746))))))
(let (($generated@@753  (=> (= $generated@@735 ($generated@@259 $generated@@734 $generated@@732 $generated@@60 false)) (=> (and (and (= $generated@@737 ($generated@@336 ($generated@@371 $generated@@248))) (= $generated@@733 ($generated@@334 0))) (and (= $generated@@736 (- ($generated@@372 $generated@@726) $generated@@733)) (= (ControlFlow 0 11) 10))) $generated@@748))))
(let (($generated@@754  (=> (and (and ($generated@@358 $generated@@732) ($generated@@738 $generated@@732)) (and ($generated@@224 $generated@@726 ($generated@@341 $generated@@739)) ($generated@@74 $generated@@726 ($generated@@341 $generated@@739) $generated@@732))) (=> (and (and (and ($generated@@224 $generated@@740 ($generated@@341 $generated@@45)) ($generated@@74 $generated@@740 ($generated@@341 $generated@@45) $generated@@732)) true) (and (= 1 $generated@@741) (= (ControlFlow 0 12) 11))) $generated@@753))))
$generated@@754))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (Real) Real)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@170 (Int) T@U)
(declare-fun $generated@@171 (T@U) Int)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@175 (T@T) T@U)
(declare-fun $generated@@176 (T@U) Int)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@T T@U) T@U)
(declare-fun $generated@@198 () T@T)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 Real) ) (! (= ($generated@@164 $generated@@165) $generated@@165)
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (let (($generated@@168 (type $generated@@167)))
(= (type ($generated@@166 $generated@@167)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@166 $generated@@169) $generated@@169)
 :pattern ( ($generated@@166 $generated@@169))
)))
(assert  (and (= ($generated@@1 $generated@@172) 11) (forall (($generated@@173 Int) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 Int) ) (!  (=> (and (<= 0 $generated@@174) (< $generated@@174 65536)) (= ($generated@@171 ($generated@@170 $generated@@174)) $generated@@174))
 :pattern ( ($generated@@170 $generated@@174))
)))
(assert  (and (and (forall (($generated@@179 T@T) ) (= ($generated@@1 ($generated@@177 $generated@@179)) 12)) (forall (($generated@@180 T@T) ) (! (= ($generated@@178 ($generated@@177 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@177 $generated@@180))
))) (forall (($generated@@181 T@T) ) (! (= (type ($generated@@175 $generated@@181)) ($generated@@177 $generated@@181))
 :pattern ( ($generated@@175 $generated@@181))
))))
(assert (forall (($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@182)) 0)
 :pattern ( ($generated@@175 $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(= (type ($generated@@183 $generated@@184 $generated@@185)) ($generated@@177 $generated@@186)))
 :pattern ( ($generated@@183 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
 (=> (= (type $generated@@187) ($generated@@177 $generated@@189)) (= ($generated@@176 ($generated@@183 $generated@@187 $generated@@188)) (+ 1 ($generated@@176 $generated@@187)))))
 :pattern ( ($generated@@183 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (!  (=> (= (type $generated@@190) $generated@@172) (and (and (= ($generated@@170 ($generated@@171 $generated@@190)) $generated@@190) (<= 0 ($generated@@171 $generated@@190))) (< ($generated@@171 $generated@@190) 65536)))
 :pattern ( ($generated@@171 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@191) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@192) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@193) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@191 $generated@@193))) (and ($generated@@44 $generated@@191 $generated@@192) ($generated@@44 $generated@@192 $generated@@193))) ($generated@@44 $generated@@191 $generated@@193))
 :pattern ( ($generated@@44 $generated@@191 $generated@@192) ($generated@@44 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@178 (type $generated@@194))))
 (=> (= (type $generated@@194) ($generated@@177 $generated@@195)) (<= 0 ($generated@@176 $generated@@194))))
 :pattern ( ($generated@@176 $generated@@194))
)))
(assert  (and (and (= ($generated@@1 $generated@@198) 13) (forall (($generated@@199 T@U) ) (! (= (type ($generated@@196 $generated@@199)) $generated@@198)
 :pattern ( ($generated@@196 $generated@@199))
))) (forall (($generated@@200 T@T) ($generated@@201 T@U) ) (! (= (type ($generated@@197 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@197 $generated@@200 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(= ($generated@@197 $generated@@203 ($generated@@196 $generated@@202)) $generated@@202))
 :pattern ( ($generated@@196 $generated@@202))
)))
(assert  (and (forall (($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@178 (type $generated@@206))))
(= (type ($generated@@204 $generated@@206)) ($generated@@177 $generated@@207)))
 :pattern ( ($generated@@204 $generated@@206))
)) (forall (($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@178 (type $generated@@208))))
(= (type ($generated@@205 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@205 $generated@@208))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 (type $generated@@211)))
 (=> (= (type $generated@@210) ($generated@@177 $generated@@212)) (and (= ($generated@@204 ($generated@@183 $generated@@210 $generated@@211)) $generated@@210) (= ($generated@@205 ($generated@@183 $generated@@210 $generated@@211)) $generated@@211))))
 :pattern ( ($generated@@183 $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@213 Int) ) (! (= ($generated@@196 ($generated@@8 ($generated@@162 $generated@@213))) ($generated@@166 ($generated@@196 ($generated@@8 $generated@@213))))
 :pattern ( ($generated@@196 ($generated@@8 ($generated@@162 $generated@@213))))
)))
(assert (forall (($generated@@214 Real) ) (! (= ($generated@@196 ($generated@@9 ($generated@@164 $generated@@214))) ($generated@@166 ($generated@@196 ($generated@@9 $generated@@214))))
 :pattern ( ($generated@@196 ($generated@@9 ($generated@@164 $generated@@214))))
)))
(assert (forall (($generated@@215 T@U) ) (! (= ($generated@@196 ($generated@@166 $generated@@215)) ($generated@@166 ($generated@@196 $generated@@215)))
 :pattern ( ($generated@@196 ($generated@@166 $generated@@215)))
)))
(assert (forall (($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@178 (type $generated@@216))))
 (=> (and (= (type $generated@@216) ($generated@@177 $generated@@217)) (= ($generated@@176 $generated@@216) 0)) (= $generated@@216 ($generated@@175 $generated@@217))))
 :pattern ( ($generated@@176 $generated@@216))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () Int)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () Int)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () Int)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () Int)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () Int)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () Int)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () Int)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () Int)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () Int)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () Int)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () Int)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () Int)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () Int)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () Int)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 () Int)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 () Int)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () Int)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 () Int)
(declare-fun $generated@@282 () T@U)
(declare-fun $generated@@283 () T@U)
(declare-fun $generated@@284 () Real)
(declare-fun $generated@@285 () T@U)
(declare-fun $generated@@286 () T@U)
(declare-fun $generated@@287 () Real)
(declare-fun $generated@@288 () T@U)
(declare-fun $generated@@289 () T@U)
(declare-fun $generated@@290 () Real)
(declare-fun $generated@@291 () T@U)
(declare-fun $generated@@292 () T@U)
(declare-fun $generated@@293 () Real)
(declare-fun $generated@@294 () T@U)
(declare-fun $generated@@295 () T@U)
(declare-fun $generated@@296 () Real)
(declare-fun $generated@@297 () T@U)
(declare-fun $generated@@298 () T@U)
(declare-fun $generated@@299 () Real)
(declare-fun $generated@@300 () T@U)
(declare-fun $generated@@301 () T@U)
(declare-fun $generated@@302 () Real)
(declare-fun $generated@@303 () T@U)
(declare-fun $generated@@304 () T@U)
(declare-fun $generated@@305 () Real)
(declare-fun $generated@@306 () T@U)
(declare-fun $generated@@307 () T@U)
(declare-fun $generated@@308 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@218) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@219) $generated@@46)) (= (type $generated@@220) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@221) ($generated@@177 $generated@@198))) (= (type $generated@@224) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@226) ($generated@@177 $generated@@198))) (= (type $generated@@228) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@229) ($generated@@177 $generated@@198))) (= (type $generated@@231) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@232) ($generated@@177 $generated@@198))) (= (type $generated@@234) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@235) ($generated@@177 $generated@@198))) (= (type $generated@@237) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@238) ($generated@@177 $generated@@198))) (= (type $generated@@240) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@241) ($generated@@177 $generated@@198))) (= (type $generated@@243) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@244) ($generated@@177 $generated@@198))) (= (type $generated@@246) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@247) ($generated@@177 $generated@@198))) (= (type $generated@@249) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@250) ($generated@@177 $generated@@198))) (= (type $generated@@252) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@253) ($generated@@177 $generated@@198))) (= (type $generated@@255) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@256) ($generated@@177 $generated@@198))) (= (type $generated@@258) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@259) ($generated@@177 $generated@@198))) (= (type $generated@@261) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@262) ($generated@@177 $generated@@198))) (= (type $generated@@264) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@265) ($generated@@177 $generated@@198))) (= (type $generated@@267) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@268) ($generated@@177 $generated@@198))) (= (type $generated@@270) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@271) ($generated@@177 $generated@@198))) (= (type $generated@@273) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@274) ($generated@@177 $generated@@198))) (= (type $generated@@276) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@277) ($generated@@177 $generated@@198))) (= (type $generated@@279) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@280) ($generated@@177 $generated@@198))) (= (type $generated@@282) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@283) ($generated@@177 $generated@@198))) (= (type $generated@@285) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@286) ($generated@@177 $generated@@198))) (= (type $generated@@288) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@289) ($generated@@177 $generated@@198))) (= (type $generated@@291) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@292) ($generated@@177 $generated@@198))) (= (type $generated@@294) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@295) ($generated@@177 $generated@@198))) (= (type $generated@@297) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@298) ($generated@@177 $generated@@198))) (= (type $generated@@300) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@301) ($generated@@177 $generated@@198))) (= (type $generated@@303) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@304) ($generated@@177 $generated@@198))) (= (type $generated@@306) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@307) ($generated@@177 $generated@@198))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@309  (=> (= $generated@@218 ($generated@@107 $generated@@219 $generated@@220 $generated@@50 false)) (=> (and (= $generated@@221 ($generated@@166 ($generated@@175 $generated@@198))) (= $generated@@222 ($generated@@162 0))) (=> (and (and (and ($generated@@223 $generated@@224) ($generated@@225 $generated@@224)) (and (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@46) (=> (and (not (= $generated@@310 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@220 $generated@@310) $generated@@50))) (= ($generated@@49 $generated@@224 $generated@@310) ($generated@@49 $generated@@220 $generated@@310))))
 :pattern ( ($generated@@49 $generated@@224 $generated@@310))
)) ($generated@@44 $generated@@220 $generated@@224))) (and (and (= $generated@@226 ($generated@@166 ($generated@@175 $generated@@198))) (= $generated@@227 ($generated@@162 0))) (and ($generated@@223 $generated@@228) ($generated@@225 $generated@@228)))) (=> (and (and (and (and (and (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@46) (=> (and (not (= $generated@@311 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@224 $generated@@311) $generated@@50))) (= ($generated@@49 $generated@@228 $generated@@311) ($generated@@49 $generated@@224 $generated@@311))))
 :pattern ( ($generated@@49 $generated@@228 $generated@@311))
)) ($generated@@44 $generated@@224 $generated@@228)) (and (= $generated@@229 ($generated@@166 ($generated@@175 $generated@@198))) (= $generated@@230 ($generated@@162 3)))) (and (and ($generated@@223 $generated@@231) ($generated@@225 $generated@@231)) (and (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@46) (=> (and (not (= $generated@@312 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@228 $generated@@312) $generated@@50))) (= ($generated@@49 $generated@@231 $generated@@312) ($generated@@49 $generated@@228 $generated@@312))))
 :pattern ( ($generated@@49 $generated@@231 $generated@@312))
)) ($generated@@44 $generated@@228 $generated@@231)))) (and (and (and (= $generated@@232 ($generated@@166 ($generated@@175 $generated@@198))) (= $generated@@233 ($generated@@162 (- 0 5)))) (and ($generated@@223 $generated@@234) ($generated@@225 $generated@@234))) (and (and (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@46) (=> (and (not (= $generated@@313 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@231 $generated@@313) $generated@@50))) (= ($generated@@49 $generated@@234 $generated@@313) ($generated@@49 $generated@@231 $generated@@313))))
 :pattern ( ($generated@@49 $generated@@234 $generated@@313))
)) ($generated@@44 $generated@@231 $generated@@234)) (and (= $generated@@235 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@198) ($generated@@196 ($generated@@170 67))) ($generated@@196 ($generated@@170 35))) ($generated@@196 ($generated@@170 32))) ($generated@@196 ($generated@@170 105))) ($generated@@196 ($generated@@170 110))) ($generated@@196 ($generated@@170 116))) ($generated@@196 ($generated@@170 46))) ($generated@@196 ($generated@@170 77))) ($generated@@196 ($generated@@170 97))) ($generated@@196 ($generated@@170 120))) ($generated@@196 ($generated@@170 86))) ($generated@@196 ($generated@@170 97))) ($generated@@196 ($generated@@170 108))) ($generated@@196 ($generated@@170 117))) ($generated@@196 ($generated@@170 101))))) (= $generated@@236 ($generated@@162 2147483647)))))) (and (and (and (and ($generated@@223 $generated@@237) ($generated@@225 $generated@@237)) (and (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@46) (=> (and (not (= $generated@@314 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@234 $generated@@314) $generated@@50))) (= ($generated@@49 $generated@@237 $generated@@314) ($generated@@49 $generated@@234 $generated@@314))))
 :pattern ( ($generated@@49 $generated@@237 $generated@@314))
)) ($generated@@44 $generated@@234 $generated@@237))) (and (and (= $generated@@238 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@198) ($generated@@196 ($generated@@170 50))) ($generated@@196 ($generated@@170 94))) ($generated@@196 ($generated@@170 51))) ($generated@@196 ($generated@@170 49))))) (= $generated@@239 ($generated@@162 2147483648))) (and ($generated@@223 $generated@@240) ($generated@@225 $generated@@240)))) (and (and (and (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@46) (=> (and (not (= $generated@@315 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@237 $generated@@315) $generated@@50))) (= ($generated@@49 $generated@@240 $generated@@315) ($generated@@49 $generated@@237 $generated@@315))))
 :pattern ( ($generated@@49 $generated@@240 $generated@@315))
)) ($generated@@44 $generated@@237 $generated@@240)) (and (= $generated@@241 ($generated@@166 ($generated@@175 $generated@@198))) (= $generated@@242 ($generated@@162 2147483649)))) (and (and ($generated@@223 $generated@@243) ($generated@@225 $generated@@243)) (and (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@46) (=> (and (not (= $generated@@316 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@240 $generated@@316) $generated@@50))) (= ($generated@@49 $generated@@243 $generated@@316) ($generated@@49 $generated@@240 $generated@@316))))
 :pattern ( ($generated@@49 $generated@@243 $generated@@316))
)) ($generated@@44 $generated@@240 $generated@@243)))))) (=> (and (and (and (and (and (and (and (= $generated@@244 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@198) ($generated@@196 ($generated@@170 67))) ($generated@@196 ($generated@@170 35))) ($generated@@196 ($generated@@170 32))) ($generated@@196 ($generated@@170 117))) ($generated@@196 ($generated@@170 105))) ($generated@@196 ($generated@@170 110))) ($generated@@196 ($generated@@170 116))) ($generated@@196 ($generated@@170 46))) ($generated@@196 ($generated@@170 77))) ($generated@@196 ($generated@@170 97))) ($generated@@196 ($generated@@170 120))) ($generated@@196 ($generated@@170 86))) ($generated@@196 ($generated@@170 97))) ($generated@@196 ($generated@@170 108))) ($generated@@196 ($generated@@170 117))) ($generated@@196 ($generated@@170 101))))) (= $generated@@245 ($generated@@162 4294967295))) (and ($generated@@223 $generated@@246) ($generated@@225 $generated@@246))) (and (and (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@46) (=> (and (not (= $generated@@317 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@243 $generated@@317) $generated@@50))) (= ($generated@@49 $generated@@246 $generated@@317) ($generated@@49 $generated@@243 $generated@@317))))
 :pattern ( ($generated@@49 $generated@@246 $generated@@317))
)) ($generated@@44 $generated@@243 $generated@@246)) (and (= $generated@@247 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@198) ($generated@@196 ($generated@@170 50))) ($generated@@196 ($generated@@170 94))) ($generated@@196 ($generated@@170 51))) ($generated@@196 ($generated@@170 50))))) (= $generated@@248 ($generated@@162 4294967296))))) (and (and (and ($generated@@223 $generated@@249) ($generated@@225 $generated@@249)) (and (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@46) (=> (and (not (= $generated@@318 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@246 $generated@@318) $generated@@50))) (= ($generated@@49 $generated@@249 $generated@@318) ($generated@@49 $generated@@246 $generated@@318))))
 :pattern ( ($generated@@49 $generated@@249 $generated@@318))
)) ($generated@@44 $generated@@246 $generated@@249))) (and (and (= $generated@@250 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@198) ($generated@@196 ($generated@@170 74))) ($generated@@196 ($generated@@170 97))) ($generated@@196 ($generated@@170 118))) ($generated@@196 ($generated@@170 97))) ($generated@@196 ($generated@@170 83))) ($generated@@196 ($generated@@170 99))) ($generated@@196 ($generated@@170 114))) ($generated@@196 ($generated@@170 105))) ($generated@@196 ($generated@@170 112))) ($generated@@196 ($generated@@170 116))) ($generated@@196 ($generated@@170 32))) ($generated@@196 ($generated@@170 78))) ($generated@@196 ($generated@@170 117))) ($generated@@196 ($generated@@170 109))) ($generated@@196 ($generated@@170 98))) ($generated@@196 ($generated@@170 101))) ($generated@@196 ($generated@@170 114))) ($generated@@196 ($generated@@170 46))) ($generated@@196 ($generated@@170 77))) ($generated@@196 ($generated@@170 65))) ($generated@@196 ($generated@@170 88))) ($generated@@196 ($generated@@170 95))) ($generated@@196 ($generated@@170 83))) ($generated@@196 ($generated@@170 65))) ($generated@@196 ($generated@@170 70))) ($generated@@196 ($generated@@170 69))) ($generated@@196 ($generated@@170 95))) ($generated@@196 ($generated@@170 73))) ($generated@@196 ($generated@@170 78))) ($generated@@196 ($generated@@170 84))) ($generated@@196 ($generated@@170 69))) ($generated@@196 ($generated@@170 71))) ($generated@@196 ($generated@@170 69))) ($generated@@196 ($generated@@170 82))))) (= $generated@@251 ($generated@@162 590295810358705651711))) (and ($generated@@223 $generated@@252) ($generated@@225 $generated@@252))))) (and (and (and (and (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@46) (=> (and (not (= $generated@@319 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@249 $generated@@319) $generated@@50))) (= ($generated@@49 $generated@@252 $generated@@319) ($generated@@49 $generated@@249 $generated@@319))))
 :pattern ( ($generated@@49 $generated@@252 $generated@@319))
)) ($generated@@44 $generated@@249 $generated@@252)) (and (= $generated@@253 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@198) ($generated@@196 ($generated@@170 50))) ($generated@@196 ($generated@@170 94))) ($generated@@196 ($generated@@170 53))) ($generated@@196 ($generated@@170 51))))) (= $generated@@254 ($generated@@162 590295810358705651712)))) (and (and ($generated@@223 $generated@@255) ($generated@@225 $generated@@255)) (and (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@46) (=> (and (not (= $generated@@320 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@252 $generated@@320) $generated@@50))) (= ($generated@@49 $generated@@255 $generated@@320) ($generated@@49 $generated@@252 $generated@@320))))
 :pattern ( ($generated@@49 $generated@@255 $generated@@320))
)) ($generated@@44 $generated@@252 $generated@@255)))) (and (and (and (= $generated@@256 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@198) ($generated@@196 ($generated@@170 74))) ($generated@@196 ($generated@@170 97))) ($generated@@196 ($generated@@170 118))) ($generated@@196 ($generated@@170 97))) ($generated@@196 ($generated@@170 83))) ($generated@@196 ($generated@@170 99))) ($generated@@196 ($generated@@170 114))) ($generated@@196 ($generated@@170 105))) ($generated@@196 ($generated@@170 112))) ($generated@@196 ($generated@@170 116))) ($generated@@196 ($generated@@170 32))) ($generated@@196 ($generated@@170 78))) ($generated@@196 ($generated@@170 117))) ($generated@@196 ($generated@@170 109))) ($generated@@196 ($generated@@170 98))) ($generated@@196 ($generated@@170 101))) ($generated@@196 ($generated@@170 114))) ($generated@@196 ($generated@@170 46))) ($generated@@196 ($generated@@170 77))) ($generated@@196 ($generated@@170 65))) ($generated@@196 ($generated@@170 88))) ($generated@@196 ($generated@@170 95))) ($generated@@196 ($generated@@170 83))) ($generated@@196 ($generated@@170 65))) ($generated@@196 ($generated@@170 70))) ($generated@@196 ($generated@@170 69))) ($generated@@196 ($generated@@170 95))) ($generated@@196 ($generated@@170 73))) ($generated@@196 ($generated@@170 78))) ($generated@@196 ($generated@@170 84))) ($generated@@196 ($generated@@170 69))) ($generated@@196 ($generated@@170 71))) ($generated@@196 ($generated@@170 69))) ($generated@@196 ($generated@@170 82))))) (= $generated@@257 ($generated@@162 (- 0 590295810358705651711)))) (and ($generated@@223 $generated@@258) ($generated@@225 $generated@@258))) (and (and (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@46) (=> (and (not (= $generated@@321 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@255 $generated@@321) $generated@@50))) (= ($generated@@49 $generated@@258 $generated@@321) ($generated@@49 $generated@@255 $generated@@321))))
 :pattern ( ($generated@@49 $generated@@258 $generated@@321))
)) ($generated@@44 $generated@@255 $generated@@258)) (and (= $generated@@259 ($generated@@166 ($generated@@175 $generated@@198))) (= $generated@@260 ($generated@@162 (- 0 590295810358705651712)))))))) (and (and (and (and (and ($generated@@223 $generated@@261) ($generated@@225 $generated@@261)) (and (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@46) (=> (and (not (= $generated@@322 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@258 $generated@@322) $generated@@50))) (= ($generated@@49 $generated@@261 $generated@@322) ($generated@@49 $generated@@258 $generated@@322))))
 :pattern ( ($generated@@49 $generated@@261 $generated@@322))
)) ($generated@@44 $generated@@258 $generated@@261))) (and (and (= $generated@@262 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@198) ($generated@@196 ($generated@@170 67))) ($generated@@196 ($generated@@170 35))) ($generated@@196 ($generated@@170 32))) ($generated@@196 ($generated@@170 108))) ($generated@@196 ($generated@@170 111))) ($generated@@196 ($generated@@170 110))) ($generated@@196 ($generated@@170 103))) ($generated@@196 ($generated@@170 46))) ($generated@@196 ($generated@@170 77))) ($generated@@196 ($generated@@170 97))) ($generated@@196 ($generated@@170 120))) ($generated@@196 ($generated@@170 86))) ($generated@@196 ($generated@@170 97))) ($generated@@196 ($generated@@170 108))) ($generated@@196 ($generated@@170 117))) ($generated@@196 ($generated@@170 101))))) (= $generated@@263 ($generated@@162 9223372036854775807))) (and ($generated@@223 $generated@@264) ($generated@@225 $generated@@264)))) (and (and (and (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@46) (=> (and (not (= $generated@@323 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@261 $generated@@323) $generated@@50))) (= ($generated@@49 $generated@@264 $generated@@323) ($generated@@49 $generated@@261 $generated@@323))))
 :pattern ( ($generated@@49 $generated@@264 $generated@@323))
)) ($generated@@44 $generated@@261 $generated@@264)) (and (= $generated@@265 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@198) ($generated@@196 ($generated@@170 50))) ($generated@@196 ($generated@@170 94))) ($generated@@196 ($generated@@170 54))) ($generated@@196 ($generated@@170 51))))) (= $generated@@266 ($generated@@162 9223372036854775808)))) (and (and ($generated@@223 $generated@@267) ($generated@@225 $generated@@267)) (and (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@46) (=> (and (not (= $generated@@324 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@264 $generated@@324) $generated@@50))) (= ($generated@@49 $generated@@267 $generated@@324) ($generated@@49 $generated@@264 $generated@@324))))
 :pattern ( ($generated@@49 $generated@@267 $generated@@324))
)) ($generated@@44 $generated@@264 $generated@@267))))) (and (and (and (and (= $generated@@268 ($generated@@166 ($generated@@175 $generated@@198))) (= $generated@@269 ($generated@@162 9223372036854775809))) (and ($generated@@223 $generated@@270) ($generated@@225 $generated@@270))) (and (and (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@46) (=> (and (not (= $generated@@325 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@267 $generated@@325) $generated@@50))) (= ($generated@@49 $generated@@270 $generated@@325) ($generated@@49 $generated@@267 $generated@@325))))
 :pattern ( ($generated@@49 $generated@@270 $generated@@325))
)) ($generated@@44 $generated@@267 $generated@@270)) (and (= $generated@@271 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@198) ($generated@@196 ($generated@@170 67))) ($generated@@196 ($generated@@170 35))) ($generated@@196 ($generated@@170 32))) ($generated@@196 ($generated@@170 117))) ($generated@@196 ($generated@@170 108))) ($generated@@196 ($generated@@170 111))) ($generated@@196 ($generated@@170 110))) ($generated@@196 ($generated@@170 103))) ($generated@@196 ($generated@@170 46))) ($generated@@196 ($generated@@170 77))) ($generated@@196 ($generated@@170 97))) ($generated@@196 ($generated@@170 120))) ($generated@@196 ($generated@@170 86))) ($generated@@196 ($generated@@170 97))) ($generated@@196 ($generated@@170 108))) ($generated@@196 ($generated@@170 117))) ($generated@@196 ($generated@@170 101))))) (= $generated@@272 ($generated@@162 18446744073709551615))))) (and (and (and ($generated@@223 $generated@@273) ($generated@@225 $generated@@273)) (and (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@46) (=> (and (not (= $generated@@326 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@270 $generated@@326) $generated@@50))) (= ($generated@@49 $generated@@273 $generated@@326) ($generated@@49 $generated@@270 $generated@@326))))
 :pattern ( ($generated@@49 $generated@@273 $generated@@326))
)) ($generated@@44 $generated@@270 $generated@@273))) (and (and (= $generated@@274 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@198) ($generated@@196 ($generated@@170 50))) ($generated@@196 ($generated@@170 94))) ($generated@@196 ($generated@@170 54))) ($generated@@196 ($generated@@170 52))))) (= $generated@@275 ($generated@@162 18446744073709551616))) (and ($generated@@223 $generated@@276) ($generated@@225 $generated@@276))))))) (and (and (and (and (and (and (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@46) (=> (and (not (= $generated@@327 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@273 $generated@@327) $generated@@50))) (= ($generated@@49 $generated@@276 $generated@@327) ($generated@@49 $generated@@273 $generated@@327))))
 :pattern ( ($generated@@49 $generated@@276 $generated@@327))
)) ($generated@@44 $generated@@273 $generated@@276)) (and (= $generated@@277 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@198) ($generated@@196 ($generated@@170 50))) ($generated@@196 ($generated@@170 94))) ($generated@@196 ($generated@@170 49))) ($generated@@196 ($generated@@170 48))) ($generated@@196 ($generated@@170 48))))) (= $generated@@278 ($generated@@162 1267650600228229401496703205376)))) (and (and ($generated@@223 $generated@@279) ($generated@@225 $generated@@279)) (and (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@46) (=> (and (not (= $generated@@328 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@276 $generated@@328) $generated@@50))) (= ($generated@@49 $generated@@279 $generated@@328) ($generated@@49 $generated@@276 $generated@@328))))
 :pattern ( ($generated@@49 $generated@@279 $generated@@328))
)) ($generated@@44 $generated@@276 $generated@@279)))) (and (and (and (= $generated@@280 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@198) ($generated@@196 ($generated@@170 77))) ($generated@@196 ($generated@@170 95))) ($generated@@196 ($generated@@170 51))) ($generated@@196 ($generated@@170 57))))) (= $generated@@281 ($generated@@162 170141183460469231731687303715884105727))) (and ($generated@@223 $generated@@282) ($generated@@225 $generated@@282))) (and (and (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@46) (=> (and (not (= $generated@@329 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@279 $generated@@329) $generated@@50))) (= ($generated@@49 $generated@@282 $generated@@329) ($generated@@49 $generated@@279 $generated@@329))))
 :pattern ( ($generated@@49 $generated@@282 $generated@@329))
)) ($generated@@44 $generated@@279 $generated@@282)) (and (= $generated@@283 ($generated@@166 ($generated@@175 $generated@@198))) (= $generated@@284 ($generated@@164 0.0)))))) (and (and (and (and ($generated@@223 $generated@@285) ($generated@@225 $generated@@285)) (and (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@46) (=> (and (not (= $generated@@330 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@282 $generated@@330) $generated@@50))) (= ($generated@@49 $generated@@285 $generated@@330) ($generated@@49 $generated@@282 $generated@@330))))
 :pattern ( ($generated@@49 $generated@@285 $generated@@330))
)) ($generated@@44 $generated@@282 $generated@@285))) (and (and (= $generated@@286 ($generated@@166 ($generated@@175 $generated@@198))) (= $generated@@287 ($generated@@164 0.0))) (and ($generated@@223 $generated@@288) ($generated@@225 $generated@@288)))) (and (and (and (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@46) (=> (and (not (= $generated@@331 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@285 $generated@@331) $generated@@50))) (= ($generated@@49 $generated@@288 $generated@@331) ($generated@@49 $generated@@285 $generated@@331))))
 :pattern ( ($generated@@49 $generated@@288 $generated@@331))
)) ($generated@@44 $generated@@285 $generated@@288)) (and (= $generated@@289 ($generated@@166 ($generated@@175 $generated@@198))) (= $generated@@290 ($generated@@164 3.0)))) (and (and ($generated@@223 $generated@@291) ($generated@@225 $generated@@291)) (and (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@46) (=> (and (not (= $generated@@332 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@288 $generated@@332) $generated@@50))) (= ($generated@@49 $generated@@291 $generated@@332) ($generated@@49 $generated@@288 $generated@@332))))
 :pattern ( ($generated@@49 $generated@@291 $generated@@332))
)) ($generated@@44 $generated@@288 $generated@@291)))))) (and (and (and (and (and (= $generated@@292 ($generated@@166 ($generated@@175 $generated@@198))) (= $generated@@293 ($generated@@164 (- 0.0 5.0)))) (and ($generated@@223 $generated@@294) ($generated@@225 $generated@@294))) (and (and (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@46) (=> (and (not (= $generated@@333 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@291 $generated@@333) $generated@@50))) (= ($generated@@49 $generated@@294 $generated@@333) ($generated@@49 $generated@@291 $generated@@333))))
 :pattern ( ($generated@@49 $generated@@294 $generated@@333))
)) ($generated@@44 $generated@@291 $generated@@294)) (and (= $generated@@295 ($generated@@166 ($generated@@175 $generated@@198))) (= $generated@@296 ($generated@@164 3.14))))) (and (and (and ($generated@@223 $generated@@297) ($generated@@225 $generated@@297)) (and (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@46) (=> (and (not (= $generated@@334 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@294 $generated@@334) $generated@@50))) (= ($generated@@49 $generated@@297 $generated@@334) ($generated@@49 $generated@@294 $generated@@334))))
 :pattern ( ($generated@@49 $generated@@297 $generated@@334))
)) ($generated@@44 $generated@@294 $generated@@297))) (and (and (= $generated@@298 ($generated@@166 ($generated@@175 $generated@@198))) (= $generated@@299 ($generated@@164 (- 0.0 2.71)))) (and ($generated@@223 $generated@@300) ($generated@@225 $generated@@300))))) (and (and (and (and (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@46) (=> (and (not (= $generated@@335 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@297 $generated@@335) $generated@@50))) (= ($generated@@49 $generated@@300 $generated@@335) ($generated@@49 $generated@@297 $generated@@335))))
 :pattern ( ($generated@@49 $generated@@300 $generated@@335))
)) ($generated@@44 $generated@@297 $generated@@300)) (and (= $generated@@301 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@198) ($generated@@196 ($generated@@170 97))) ($generated@@196 ($generated@@170 32))) ($generated@@196 ($generated@@170 98))) ($generated@@196 ($generated@@170 105))) ($generated@@196 ($generated@@170 108))) ($generated@@196 ($generated@@170 108))) ($generated@@196 ($generated@@170 105))) ($generated@@196 ($generated@@170 111))) ($generated@@196 ($generated@@170 110))))) (= $generated@@302 ($generated@@164 1000000000.0)))) (and (and ($generated@@223 $generated@@303) ($generated@@225 $generated@@303)) (and (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@46) (=> (and (not (= $generated@@336 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@300 $generated@@336) $generated@@50))) (= ($generated@@49 $generated@@303 $generated@@336) ($generated@@49 $generated@@300 $generated@@336))))
 :pattern ( ($generated@@49 $generated@@303 $generated@@336))
)) ($generated@@44 $generated@@300 $generated@@303)))) (and (and (and (= $generated@@304 ($generated@@166 ($generated@@183 ($generated@@175 $generated@@198) ($generated@@196 ($generated@@170 71))))) (= $generated@@305 ($generated@@164 0.0000000000667408))) (and ($generated@@223 $generated@@306) ($generated@@225 $generated@@306))) (and (and (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@46) (=> (and (not (= $generated@@337 $generated@@219)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@303 $generated@@337) $generated@@50))) (= ($generated@@49 $generated@@306 $generated@@337) ($generated@@49 $generated@@303 $generated@@337))))
 :pattern ( ($generated@@49 $generated@@306 $generated@@337))
)) ($generated@@44 $generated@@303 $generated@@306)) (and (= $generated@@307 ($generated@@166 ($generated@@183 ($generated@@175 $generated@@198) ($generated@@196 ($generated@@170 71))))) (= (ControlFlow 0 2) (- 0 1))))))))) (not (= ($generated@@164 100000000000.0) 0.0)))))))))
(let (($generated@@338  (=> (and (and ($generated@@223 $generated@@220) ($generated@@225 $generated@@220)) (and (= 2 $generated@@308) (= (ControlFlow 0 3) 2))) $generated@@309)))
$generated@@338)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (Real) Real)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@170 (Int) T@U)
(declare-fun $generated@@171 (T@U) Int)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@175 (T@T) T@U)
(declare-fun $generated@@176 (T@U) Int)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U) T@U)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@207 (T@T T@U) T@U)
(declare-fun $generated@@208 () T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@223 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 Real) ) (! (= ($generated@@164 $generated@@165) $generated@@165)
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (let (($generated@@168 (type $generated@@167)))
(= (type ($generated@@166 $generated@@167)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@166 $generated@@169) $generated@@169)
 :pattern ( ($generated@@166 $generated@@169))
)))
(assert  (and (= ($generated@@1 $generated@@172) 11) (forall (($generated@@173 Int) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 Int) ) (!  (=> (and (<= 0 $generated@@174) (< $generated@@174 65536)) (= ($generated@@171 ($generated@@170 $generated@@174)) $generated@@174))
 :pattern ( ($generated@@170 $generated@@174))
)))
(assert  (and (and (forall (($generated@@179 T@T) ) (= ($generated@@1 ($generated@@177 $generated@@179)) 12)) (forall (($generated@@180 T@T) ) (! (= ($generated@@178 ($generated@@177 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@177 $generated@@180))
))) (forall (($generated@@181 T@T) ) (! (= (type ($generated@@175 $generated@@181)) ($generated@@177 $generated@@181))
 :pattern ( ($generated@@175 $generated@@181))
))))
(assert (forall (($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@182)) 0)
 :pattern ( ($generated@@175 $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(= (type ($generated@@183 $generated@@184 $generated@@185)) ($generated@@177 $generated@@186)))
 :pattern ( ($generated@@183 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
 (=> (= (type $generated@@187) ($generated@@177 $generated@@189)) (= ($generated@@176 ($generated@@183 $generated@@187 $generated@@188)) (+ 1 ($generated@@176 $generated@@187)))))
 :pattern ( ($generated@@183 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (!  (=> (= (type $generated@@190) $generated@@172) (and (and (= ($generated@@170 ($generated@@171 $generated@@190)) $generated@@190) (<= 0 ($generated@@171 $generated@@190))) (< ($generated@@171 $generated@@190) 65536)))
 :pattern ( ($generated@@171 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@192 $generated@@193)) $generated@@172)
 :pattern ( ($generated@@191 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@172) (= (type $generated@@195) $generated@@172)) (= ($generated@@191 $generated@@194 $generated@@195) ($generated@@170 (- ($generated@@171 $generated@@194) ($generated@@171 $generated@@195)))))
 :pattern ( ($generated@@191 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@197 $generated@@198)) $generated@@172)
 :pattern ( ($generated@@196 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@199) $generated@@172) (= (type $generated@@200) $generated@@172)) (= ($generated@@196 $generated@@199 $generated@@200) ($generated@@170 (+ ($generated@@171 $generated@@199) ($generated@@171 $generated@@200)))))
 :pattern ( ($generated@@196 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@201) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@202) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@203) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@201 $generated@@203))) (and ($generated@@44 $generated@@201 $generated@@202) ($generated@@44 $generated@@202 $generated@@203))) ($generated@@44 $generated@@201 $generated@@203))
 :pattern ( ($generated@@44 $generated@@201 $generated@@202) ($generated@@44 $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@178 (type $generated@@204))))
 (=> (= (type $generated@@204) ($generated@@177 $generated@@205)) (<= 0 ($generated@@176 $generated@@204))))
 :pattern ( ($generated@@176 $generated@@204))
)))
(assert  (and (and (= ($generated@@1 $generated@@208) 13) (forall (($generated@@209 T@U) ) (! (= (type ($generated@@206 $generated@@209)) $generated@@208)
 :pattern ( ($generated@@206 $generated@@209))
))) (forall (($generated@@210 T@T) ($generated@@211 T@U) ) (! (= (type ($generated@@207 $generated@@210 $generated@@211)) $generated@@210)
 :pattern ( ($generated@@207 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(= ($generated@@207 $generated@@213 ($generated@@206 $generated@@212)) $generated@@212))
 :pattern ( ($generated@@206 $generated@@212))
)))
(assert  (and (forall (($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@178 (type $generated@@216))))
(= (type ($generated@@214 $generated@@216)) ($generated@@177 $generated@@217)))
 :pattern ( ($generated@@214 $generated@@216))
)) (forall (($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@178 (type $generated@@218))))
(= (type ($generated@@215 $generated@@218)) $generated@@219))
 :pattern ( ($generated@@215 $generated@@218))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 (type $generated@@221)))
 (=> (= (type $generated@@220) ($generated@@177 $generated@@222)) (and (= ($generated@@214 ($generated@@183 $generated@@220 $generated@@221)) $generated@@220) (= ($generated@@215 ($generated@@183 $generated@@220 $generated@@221)) $generated@@221))))
 :pattern ( ($generated@@183 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 Int) ($generated@@225 Int) ) (! (= ($generated@@223 $generated@@224 $generated@@225) (* $generated@@224 $generated@@225))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 Int) ) (! (= ($generated@@206 ($generated@@8 ($generated@@162 $generated@@226))) ($generated@@166 ($generated@@206 ($generated@@8 $generated@@226))))
 :pattern ( ($generated@@206 ($generated@@8 ($generated@@162 $generated@@226))))
)))
(assert (forall (($generated@@227 Real) ) (! (= ($generated@@206 ($generated@@9 ($generated@@164 $generated@@227))) ($generated@@166 ($generated@@206 ($generated@@9 $generated@@227))))
 :pattern ( ($generated@@206 ($generated@@9 ($generated@@164 $generated@@227))))
)))
(assert (forall (($generated@@228 T@U) ) (! (= ($generated@@206 ($generated@@166 $generated@@228)) ($generated@@166 ($generated@@206 $generated@@228)))
 :pattern ( ($generated@@206 ($generated@@166 $generated@@228)))
)))
(assert (forall (($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@178 (type $generated@@229))))
 (=> (and (= (type $generated@@229) ($generated@@177 $generated@@230)) (= ($generated@@176 $generated@@229) 0)) (= $generated@@229 ($generated@@175 $generated@@230))))
 :pattern ( ($generated@@176 $generated@@229))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () Int)
(declare-fun $generated@@245 () Int)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () Int)
(declare-fun $generated@@248 () Int)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () Int)
(declare-fun $generated@@251 () Int)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () Int)
(declare-fun $generated@@254 () Int)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () Int)
(declare-fun $generated@@257 () Int)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () Int)
(declare-fun $generated@@260 () Int)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () Real)
(declare-fun $generated@@272 () Real)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () Real)
(declare-fun $generated@@275 () Real)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 () Real)
(declare-fun $generated@@278 () Real)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 () Real)
(declare-fun $generated@@281 () Real)
(declare-fun $generated@@282 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@231) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@232) $generated@@46)) (= (type $generated@@233) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@234) ($generated@@177 $generated@@208))) (= (type $generated@@236) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@238) ($generated@@177 $generated@@208))) (= (type $generated@@239) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@240) ($generated@@177 $generated@@208))) (= (type $generated@@241) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@242) ($generated@@177 $generated@@208))) (= (type $generated@@243) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@246) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@249) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@252) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@255) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@258) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@261) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@262) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@263) ($generated@@177 $generated@@208))) (= (type $generated@@264) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@265) ($generated@@177 $generated@@208))) (= (type $generated@@266) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@267) ($generated@@177 $generated@@208))) (= (type $generated@@268) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@269) ($generated@@177 $generated@@208))) (= (type $generated@@270) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@273) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@276) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@279) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@283  (=> (and (= $generated@@231 ($generated@@107 $generated@@232 $generated@@233 $generated@@50 false)) (= $generated@@234 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@208) ($generated@@206 ($generated@@8 ($generated@@162 (+ 31 4))))) ($generated@@206 ($generated@@8 ($generated@@162 (- 31 4))))) ($generated@@206 ($generated@@8 ($generated@@162 (- 4 31)))))))) (=> (and (and (and ($generated@@235 $generated@@236) ($generated@@237 $generated@@236)) (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@46) (=> (and (not (= $generated@@284 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@233 $generated@@284) $generated@@50))) (= ($generated@@49 $generated@@236 $generated@@284) ($generated@@49 $generated@@233 $generated@@284))))
 :pattern ( ($generated@@49 $generated@@236 $generated@@284))
))) (and ($generated@@44 $generated@@233 $generated@@236) (= $generated@@238 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@208) ($generated@@206 ($generated@@8 ($generated@@162 ($generated@@223 ($generated@@162 31) ($generated@@162 4)))))) ($generated@@206 ($generated@@8 ($generated@@162 ($generated@@223 ($generated@@162 31) ($generated@@162 (- 0 4))))))))))) (=> (and (and (and (and ($generated@@235 $generated@@239) ($generated@@237 $generated@@239)) (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@46) (=> (and (not (= $generated@@285 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@236 $generated@@285) $generated@@50))) (= ($generated@@49 $generated@@239 $generated@@285) ($generated@@49 $generated@@236 $generated@@285))))
 :pattern ( ($generated@@49 $generated@@239 $generated@@285))
))) (and ($generated@@44 $generated@@236 $generated@@239) (= $generated@@240 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@208) ($generated@@206 ($generated@@8 ($generated@@162 ($generated@@223 ($generated@@162 (- 0 31)) ($generated@@162 4)))))) ($generated@@206 ($generated@@8 ($generated@@162 ($generated@@223 ($generated@@162 (- 0 31)) ($generated@@162 (- 0 4))))))))))) (and (and ($generated@@235 $generated@@241) ($generated@@237 $generated@@241)) (and (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@46) (=> (and (not (= $generated@@286 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@239 $generated@@286) $generated@@50))) (= ($generated@@49 $generated@@241 $generated@@286) ($generated@@49 $generated@@239 $generated@@286))))
 :pattern ( ($generated@@49 $generated@@241 $generated@@286))
)) ($generated@@44 $generated@@239 $generated@@241)))) (and (=> (= (ControlFlow 0 2) (- 0 16)) (< (+ ($generated@@171 ($generated@@166 ($generated@@170 51))) ($generated@@171 ($generated@@166 ($generated@@170 52)))) 65536)) (=> (< (+ ($generated@@171 ($generated@@166 ($generated@@170 51))) ($generated@@171 ($generated@@166 ($generated@@170 52)))) 65536) (and (=> (= (ControlFlow 0 2) (- 0 15)) (<= ($generated@@171 ($generated@@166 ($generated@@170 52))) ($generated@@171 ($generated@@166 ($generated@@170 55))))) (=> (<= ($generated@@171 ($generated@@166 ($generated@@170 52))) ($generated@@171 ($generated@@166 ($generated@@170 55)))) (and (=> (= (ControlFlow 0 2) (- 0 14)) (< (+ ($generated@@171 ($generated@@166 ($generated@@191 ($generated@@170 55) ($generated@@170 52)))) ($generated@@171 ($generated@@166 ($generated@@170 78)))) 65536)) (=> (< (+ ($generated@@171 ($generated@@166 ($generated@@191 ($generated@@170 55) ($generated@@170 52)))) ($generated@@171 ($generated@@166 ($generated@@170 78)))) 65536) (and (=> (= (ControlFlow 0 2) (- 0 13)) (<= ($generated@@171 ($generated@@166 ($generated@@170 51))) ($generated@@171 ($generated@@166 ($generated@@170 52))))) (=> (<= ($generated@@171 ($generated@@166 ($generated@@170 51))) ($generated@@171 ($generated@@166 ($generated@@170 52)))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (< (+ ($generated@@171 ($generated@@166 ($generated@@191 ($generated@@170 52) ($generated@@170 51)))) ($generated@@171 ($generated@@166 ($generated@@170 49)))) 65536)) (=> (< (+ ($generated@@171 ($generated@@166 ($generated@@191 ($generated@@170 52) ($generated@@170 51)))) ($generated@@171 ($generated@@166 ($generated@@170 49)))) 65536) (=> (= $generated@@242 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@208) ($generated@@206 ($generated@@166 ($generated@@196 ($generated@@170 51) ($generated@@170 52))))) ($generated@@206 ($generated@@166 ($generated@@196 ($generated@@191 ($generated@@170 55) ($generated@@170 52)) ($generated@@170 78))))) ($generated@@206 ($generated@@166 ($generated@@196 ($generated@@191 ($generated@@170 52) ($generated@@170 51)) ($generated@@170 49))))))) (=> (and ($generated@@235 $generated@@243) ($generated@@237 $generated@@243)) (=> (and (and (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@46) (=> (and (not (= $generated@@287 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@241 $generated@@287) $generated@@50))) (= ($generated@@49 $generated@@243 $generated@@287) ($generated@@49 $generated@@241 $generated@@287))))
 :pattern ( ($generated@@49 $generated@@243 $generated@@287))
)) ($generated@@44 $generated@@241 $generated@@243)) (and (= $generated@@244 ($generated@@162 31)) (= $generated@@245 ($generated@@162 4)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (not (= $generated@@245 0))) (=> (not (= $generated@@245 0)) (=> (and ($generated@@235 $generated@@246) ($generated@@237 $generated@@246)) (=> (and (and (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@46) (=> (and (not (= $generated@@288 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@243 $generated@@288) $generated@@50))) (= ($generated@@49 $generated@@246 $generated@@288) ($generated@@49 $generated@@243 $generated@@288))))
 :pattern ( ($generated@@49 $generated@@246 $generated@@288))
)) ($generated@@44 $generated@@243 $generated@@246)) (and (= $generated@@247 ($generated@@162 (- 0 31))) (= $generated@@248 ($generated@@162 4)))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (not (= $generated@@248 0))) (=> (not (= $generated@@248 0)) (=> (and ($generated@@235 $generated@@249) ($generated@@237 $generated@@249)) (=> (and (and (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@46) (=> (and (not (= $generated@@289 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@246 $generated@@289) $generated@@50))) (= ($generated@@49 $generated@@249 $generated@@289) ($generated@@49 $generated@@246 $generated@@289))))
 :pattern ( ($generated@@49 $generated@@249 $generated@@289))
)) ($generated@@44 $generated@@246 $generated@@249)) (and (= $generated@@250 ($generated@@162 31)) (= $generated@@251 ($generated@@162 (- 0 4))))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (not (= $generated@@251 0))) (=> (not (= $generated@@251 0)) (=> (and ($generated@@235 $generated@@252) ($generated@@237 $generated@@252)) (=> (and (and (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@46) (=> (and (not (= $generated@@290 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@249 $generated@@290) $generated@@50))) (= ($generated@@49 $generated@@252 $generated@@290) ($generated@@49 $generated@@249 $generated@@290))))
 :pattern ( ($generated@@49 $generated@@252 $generated@@290))
)) ($generated@@44 $generated@@249 $generated@@252)) (and (= $generated@@253 ($generated@@162 (- 0 31))) (= $generated@@254 ($generated@@162 (- 0 4))))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@254 0))) (=> (not (= $generated@@254 0)) (=> (and ($generated@@235 $generated@@255) ($generated@@237 $generated@@255)) (=> (and (and (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@46) (=> (and (not (= $generated@@291 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@252 $generated@@291) $generated@@50))) (= ($generated@@49 $generated@@255 $generated@@291) ($generated@@49 $generated@@252 $generated@@291))))
 :pattern ( ($generated@@49 $generated@@255 $generated@@291))
)) ($generated@@44 $generated@@252 $generated@@255)) (and (= $generated@@256 ($generated@@162 0)) (= $generated@@257 ($generated@@162 4)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (not (= $generated@@257 0))) (=> (not (= $generated@@257 0)) (=> (and ($generated@@235 $generated@@258) ($generated@@237 $generated@@258)) (=> (and (and (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@46) (=> (and (not (= $generated@@292 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@255 $generated@@292) $generated@@50))) (= ($generated@@49 $generated@@258 $generated@@292) ($generated@@49 $generated@@255 $generated@@292))))
 :pattern ( ($generated@@49 $generated@@258 $generated@@292))
)) ($generated@@44 $generated@@255 $generated@@258)) (and (= $generated@@259 ($generated@@162 0)) (= $generated@@260 ($generated@@162 (- 0 4))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= $generated@@260 0))) (=> (not (= $generated@@260 0)) (=> (and (and ($generated@@235 $generated@@261) ($generated@@237 $generated@@261)) (and (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@46) (=> (and (not (= $generated@@293 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@258 $generated@@293) $generated@@50))) (= ($generated@@49 $generated@@261 $generated@@293) ($generated@@49 $generated@@258 $generated@@293))))
 :pattern ( ($generated@@49 $generated@@261 $generated@@293))
)) ($generated@@44 $generated@@258 $generated@@261))) (=> (and (and (and (and ($generated@@235 $generated@@262) ($generated@@237 $generated@@262)) (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@46) (=> (and (not (= $generated@@294 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@261 $generated@@294) $generated@@50))) (= ($generated@@49 $generated@@262 $generated@@294) ($generated@@49 $generated@@261 $generated@@294))))
 :pattern ( ($generated@@49 $generated@@262 $generated@@294))
))) (and ($generated@@44 $generated@@261 $generated@@262) (= $generated@@263 ($generated@@166 ($generated@@183 ($generated@@175 $generated@@208) ($generated@@206 ($generated@@9 ($generated@@164 (- 0.3 0.1))))))))) (and (and (and ($generated@@235 $generated@@264) ($generated@@237 $generated@@264)) (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@46) (=> (and (not (= $generated@@295 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@262 $generated@@295) $generated@@50))) (= ($generated@@49 $generated@@264 $generated@@295) ($generated@@49 $generated@@262 $generated@@295))))
 :pattern ( ($generated@@49 $generated@@264 $generated@@295))
))) (and ($generated@@44 $generated@@262 $generated@@264) (= $generated@@265 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@208) ($generated@@206 ($generated@@9 ($generated@@164 (+ 31.2 4.0))))) ($generated@@206 ($generated@@9 ($generated@@164 (- 31.2 4.0))))) ($generated@@206 ($generated@@9 ($generated@@164 (- 4.0 31.2)))))))))) (=> (and (and (and (and (and ($generated@@235 $generated@@266) ($generated@@237 $generated@@266)) (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@46) (=> (and (not (= $generated@@296 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@264 $generated@@296) $generated@@50))) (= ($generated@@49 $generated@@266 $generated@@296) ($generated@@49 $generated@@264 $generated@@296))))
 :pattern ( ($generated@@49 $generated@@266 $generated@@296))
))) (and ($generated@@44 $generated@@264 $generated@@266) (= $generated@@267 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@208) ($generated@@206 ($generated@@9 ($generated@@164 (* 31.2 4.0))))) ($generated@@206 ($generated@@9 ($generated@@164 (* 31.2 (- 0.0 4.0)))))))))) (and (and ($generated@@235 $generated@@268) ($generated@@237 $generated@@268)) (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@46) (=> (and (not (= $generated@@297 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@266 $generated@@297) $generated@@50))) (= ($generated@@49 $generated@@268 $generated@@297) ($generated@@49 $generated@@266 $generated@@297))))
 :pattern ( ($generated@@49 $generated@@268 $generated@@297))
)))) (and (and (and ($generated@@44 $generated@@266 $generated@@268) (= $generated@@269 ($generated@@166 ($generated@@183 ($generated@@183 ($generated@@175 $generated@@208) ($generated@@206 ($generated@@9 ($generated@@164 (* (- 0.0 31.2) 4.0))))) ($generated@@206 ($generated@@9 ($generated@@164 (* (- 0.0 31.2) (- 0.0 4.0))))))))) (and ($generated@@235 $generated@@270) ($generated@@237 $generated@@270))) (and (and (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@46) (=> (and (not (= $generated@@298 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@268 $generated@@298) $generated@@50))) (= ($generated@@49 $generated@@270 $generated@@298) ($generated@@49 $generated@@268 $generated@@298))))
 :pattern ( ($generated@@49 $generated@@270 $generated@@298))
)) ($generated@@44 $generated@@268 $generated@@270)) (and (= $generated@@271 ($generated@@164 31.2)) (= $generated@@272 ($generated@@164 4.0)))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@272 0.0))) (=> (not (= $generated@@272 0.0)) (=> (and ($generated@@235 $generated@@273) ($generated@@237 $generated@@273)) (=> (and (and (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@46) (=> (and (not (= $generated@@299 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@270 $generated@@299) $generated@@50))) (= ($generated@@49 $generated@@273 $generated@@299) ($generated@@49 $generated@@270 $generated@@299))))
 :pattern ( ($generated@@49 $generated@@273 $generated@@299))
)) ($generated@@44 $generated@@270 $generated@@273)) (and (= $generated@@274 ($generated@@164 (- 0.0 31.2))) (= $generated@@275 ($generated@@164 4.0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@275 0.0))) (=> (not (= $generated@@275 0.0)) (=> (and ($generated@@235 $generated@@276) ($generated@@237 $generated@@276)) (=> (and (and (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@46) (=> (and (not (= $generated@@300 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@273 $generated@@300) $generated@@50))) (= ($generated@@49 $generated@@276 $generated@@300) ($generated@@49 $generated@@273 $generated@@300))))
 :pattern ( ($generated@@49 $generated@@276 $generated@@300))
)) ($generated@@44 $generated@@273 $generated@@276)) (and (= $generated@@277 ($generated@@164 31.2)) (= $generated@@278 ($generated@@164 (- 0.0 4.0))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@278 0.0))) (=> (not (= $generated@@278 0.0)) (=> (and (and (and ($generated@@235 $generated@@279) ($generated@@237 $generated@@279)) (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@46) (=> (and (not (= $generated@@301 $generated@@232)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@276 $generated@@301) $generated@@50))) (= ($generated@@49 $generated@@279 $generated@@301) ($generated@@49 $generated@@276 $generated@@301))))
 :pattern ( ($generated@@49 $generated@@279 $generated@@301))
))) (and (and ($generated@@44 $generated@@276 $generated@@279) (= $generated@@280 ($generated@@164 (- 0.0 31.2)))) (and (= $generated@@281 ($generated@@164 (- 0.0 4.0))) (= (ControlFlow 0 2) (- 0 1))))) (not (= $generated@@281 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@302  (=> (and (and ($generated@@235 $generated@@233) ($generated@@237 $generated@@233)) (and (= 4 $generated@@282) (= (ControlFlow 0 17) 2))) $generated@@283)))
$generated@@302)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (Int Int) Int)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@T T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (Int Int) Int)
(declare-fun $generated@@177 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 Int) ) (! (= ($generated@@163 $generated@@164 $generated@@165) (div $generated@@164 $generated@@165))
 :pattern ( ($generated@@163 $generated@@164 $generated@@165))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 11) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@U) ) (! (= (type ($generated@@167 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(= ($generated@@167 $generated@@173 ($generated@@166 $generated@@172)) $generated@@172))
 :pattern ( ($generated@@166 $generated@@172))
)))
(assert (forall (($generated@@175 Int) ($generated@@176 Int) ) (! (= ($generated@@174 $generated@@175 $generated@@176) (mod $generated@@175 $generated@@176))
 :pattern ( ($generated@@174 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@178 Int) ($generated@@179 Int) ) (! (= ($generated@@177 $generated@@178 $generated@@179) (* $generated@@178 $generated@@179))
 :pattern ( ($generated@@177 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 Int) ) (! (= ($generated@@166 ($generated@@8 ($generated@@157 $generated@@180))) ($generated@@159 ($generated@@166 ($generated@@8 $generated@@180))))
 :pattern ( ($generated@@166 ($generated@@8 ($generated@@157 $generated@@180))))
)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@166 ($generated@@159 $generated@@181)) ($generated@@159 ($generated@@166 $generated@@181)))
 :pattern ( ($generated@@166 ($generated@@159 $generated@@181)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 () Int)
(assert  (and (and (and (= (type $generated@@182) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@183) $generated@@47)) (= (type $generated@@184) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@185) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@193  (=> (= $generated@@182 ($generated@@45 $generated@@183 $generated@@184 $generated@@185 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@186 0))) (=> (not (= $generated@@186 0)) (=> (= $generated@@187 ($generated@@163 $generated@@188 $generated@@186)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@186 0))) (=> (not (= $generated@@186 0)) (=> (= $generated@@189 ($generated@@174 $generated@@188 $generated@@186)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) $generated@@189)) (=> (<= ($generated@@157 0) $generated@@189) (=> (= (ControlFlow 0 2) (- 0 1)) (= (+ ($generated@@177 $generated@@187 $generated@@186) $generated@@189) $generated@@188)))))))))))))
(let (($generated@@194  (=> (and (and (and ($generated@@190 $generated@@184) ($generated@@191 $generated@@184)) (= 1 $generated@@192)) (and (not (= $generated@@186 0)) (= (ControlFlow 0 6) 2))) $generated@@193)))
$generated@@194)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@168 (Int) T@U)
(declare-fun $generated@@169 (T@U) Int)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@173 (T@T) T@U)
(declare-fun $generated@@174 (T@U) Int)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U) T@U)
(declare-fun $generated@@189 (Int Int) Int)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@198 (T@T T@U) T@U)
(declare-fun $generated@@199 () T@T)
(declare-fun $generated@@205 (Int Int) Int)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert  (and (= ($generated@@1 $generated@@170) 11) (forall (($generated@@171 Int) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 Int) ) (!  (=> (and (<= 0 $generated@@172) (< $generated@@172 65536)) (= ($generated@@169 ($generated@@168 $generated@@172)) $generated@@172))
 :pattern ( ($generated@@168 $generated@@172))
)))
(assert  (and (and (forall (($generated@@177 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@177)) 12)) (forall (($generated@@178 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@T) ) (! (= (type ($generated@@173 $generated@@179)) ($generated@@175 $generated@@179))
 :pattern ( ($generated@@173 $generated@@179))
))))
(assert (forall (($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@180)) 0)
 :pattern ( ($generated@@173 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(= (type ($generated@@181 $generated@@182 $generated@@183)) ($generated@@175 $generated@@184)))
 :pattern ( ($generated@@181 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
 (=> (= (type $generated@@185) ($generated@@175 $generated@@187)) (= ($generated@@174 ($generated@@181 $generated@@185 $generated@@186)) (+ 1 ($generated@@174 $generated@@185)))))
 :pattern ( ($generated@@181 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (!  (=> (= (type $generated@@188) $generated@@170) (and (and (= ($generated@@168 ($generated@@169 $generated@@188)) $generated@@188) (<= 0 ($generated@@169 $generated@@188))) (< ($generated@@169 $generated@@188) 65536)))
 :pattern ( ($generated@@169 $generated@@188))
)))
(assert (forall (($generated@@190 Int) ($generated@@191 Int) ) (! (= ($generated@@189 $generated@@190 $generated@@191) (div $generated@@190 $generated@@191))
 :pattern ( ($generated@@189 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@192) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@193) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@194) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@192 $generated@@194))) (and ($generated@@44 $generated@@192 $generated@@193) ($generated@@44 $generated@@193 $generated@@194))) ($generated@@44 $generated@@192 $generated@@194))
 :pattern ( ($generated@@44 $generated@@192 $generated@@193) ($generated@@44 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@176 (type $generated@@195))))
 (=> (= (type $generated@@195) ($generated@@175 $generated@@196)) (<= 0 ($generated@@174 $generated@@195))))
 :pattern ( ($generated@@174 $generated@@195))
)))
(assert  (and (and (= ($generated@@1 $generated@@199) 13) (forall (($generated@@200 T@U) ) (! (= (type ($generated@@197 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@U) ) (! (= (type ($generated@@198 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@198 $generated@@201 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
(= ($generated@@198 $generated@@204 ($generated@@197 $generated@@203)) $generated@@203))
 :pattern ( ($generated@@197 $generated@@203))
)))
(assert (forall (($generated@@206 Int) ($generated@@207 Int) ) (! (= ($generated@@205 $generated@@206 $generated@@207) (mod $generated@@206 $generated@@207))
 :pattern ( ($generated@@205 $generated@@206 $generated@@207))
)))
(assert  (and (forall (($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@176 (type $generated@@210))))
(= (type ($generated@@208 $generated@@210)) ($generated@@175 $generated@@211)))
 :pattern ( ($generated@@208 $generated@@210))
)) (forall (($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@176 (type $generated@@212))))
(= (type ($generated@@209 $generated@@212)) $generated@@213))
 :pattern ( ($generated@@209 $generated@@212))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 (type $generated@@215)))
 (=> (= (type $generated@@214) ($generated@@175 $generated@@216)) (and (= ($generated@@208 ($generated@@181 $generated@@214 $generated@@215)) $generated@@214) (= ($generated@@209 ($generated@@181 $generated@@214 $generated@@215)) $generated@@215))))
 :pattern ( ($generated@@181 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@217 Int) ) (! (= ($generated@@197 ($generated@@8 ($generated@@162 $generated@@217))) ($generated@@164 ($generated@@197 ($generated@@8 $generated@@217))))
 :pattern ( ($generated@@197 ($generated@@8 ($generated@@162 $generated@@217))))
)))
(assert (forall (($generated@@218 T@U) ) (! (= ($generated@@197 ($generated@@164 $generated@@218)) ($generated@@164 ($generated@@197 $generated@@218)))
 :pattern ( ($generated@@197 ($generated@@164 $generated@@218)))
)))
(assert (forall (($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@176 (type $generated@@219))))
 (=> (and (= (type $generated@@219) ($generated@@175 $generated@@220)) (= ($generated@@174 $generated@@219) 0)) (= $generated@@219 ($generated@@173 $generated@@220))))
 :pattern ( ($generated@@174 $generated@@219))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 () Int)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 (T@U) Bool)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () Int)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () Int)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () Int)
(declare-fun $generated@@240 () Int)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 () Int)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () Int)
(declare-fun $generated@@248 () Int)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 () Int)
(declare-fun $generated@@251 () Int)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 () Int)
(declare-fun $generated@@254 () Int)
(declare-fun $generated@@255 () Int)
(declare-fun $generated@@256 () Int)
(declare-fun $generated@@257 () Int)
(declare-fun $generated@@258 () Int)
(declare-fun $generated@@259 () Int)
(declare-fun $generated@@260 () Int)
(declare-fun $generated@@261 () Int)
(declare-fun $generated@@262 () Int)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () Int)
(declare-fun $generated@@266 () Int)
(declare-fun $generated@@267 () Int)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 () Int)
(declare-fun $generated@@271 () Int)
(declare-fun $generated@@272 () Int)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 () Int)
(declare-fun $generated@@276 () Int)
(declare-fun $generated@@277 () Int)
(declare-fun $generated@@278 () Int)
(declare-fun $generated@@279 () Int)
(declare-fun $generated@@280 () Int)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 () T@U)
(declare-fun $generated@@283 () Int)
(declare-fun $generated@@284 () Int)
(declare-fun $generated@@285 () Int)
(declare-fun $generated@@286 () Int)
(declare-fun $generated@@287 () T@U)
(declare-fun $generated@@288 () T@U)
(declare-fun $generated@@289 () Int)
(declare-fun $generated@@290 () Int)
(declare-fun $generated@@291 () Int)
(declare-fun $generated@@292 () Int)
(declare-fun $generated@@293 () T@U)
(declare-fun $generated@@294 () T@U)
(declare-fun $generated@@295 () T@U)
(declare-fun $generated@@296 () T@U)
(declare-fun $generated@@297 () Int)
(declare-fun $generated@@298 () Int)
(declare-fun $generated@@299 () Int)
(declare-fun $generated@@300 () T@U)
(declare-fun $generated@@301 () T@U)
(declare-fun $generated@@302 () Int)
(declare-fun $generated@@303 () Int)
(declare-fun $generated@@304 () Int)
(declare-fun $generated@@305 () T@U)
(declare-fun $generated@@306 () T@U)
(declare-fun $generated@@307 () Int)
(declare-fun $generated@@308 () Int)
(declare-fun $generated@@309 () Int)
(declare-fun $generated@@310 () Int)
(declare-fun $generated@@311 () Int)
(declare-fun $generated@@312 () Int)
(declare-fun $generated@@313 () T@U)
(declare-fun $generated@@314 () T@U)
(declare-fun $generated@@315 () Int)
(declare-fun $generated@@316 () Int)
(declare-fun $generated@@317 () Int)
(declare-fun $generated@@318 () Int)
(declare-fun $generated@@319 () T@U)
(declare-fun $generated@@320 () T@U)
(declare-fun $generated@@321 () Int)
(declare-fun $generated@@322 () Int)
(declare-fun $generated@@323 () Int)
(declare-fun $generated@@324 () Int)
(declare-fun $generated@@325 () T@U)
(declare-fun $generated@@326 () T@U)
(declare-fun $generated@@327 () T@U)
(declare-fun $generated@@328 () T@U)
(declare-fun $generated@@329 () Int)
(declare-fun $generated@@330 () Int)
(declare-fun $generated@@331 () Int)
(declare-fun $generated@@332 () T@U)
(declare-fun $generated@@333 () T@U)
(declare-fun $generated@@334 () Int)
(declare-fun $generated@@335 () Int)
(declare-fun $generated@@336 () Int)
(declare-fun $generated@@337 () T@U)
(declare-fun $generated@@338 () T@U)
(declare-fun $generated@@339 () Int)
(declare-fun $generated@@340 () Int)
(declare-fun $generated@@341 () Int)
(declare-fun $generated@@342 () Int)
(declare-fun $generated@@343 () Int)
(declare-fun $generated@@344 () Int)
(declare-fun $generated@@345 () T@U)
(declare-fun $generated@@346 () T@U)
(declare-fun $generated@@347 () Int)
(declare-fun $generated@@348 () Int)
(declare-fun $generated@@349 () Int)
(declare-fun $generated@@350 () Int)
(declare-fun $generated@@351 () T@U)
(declare-fun $generated@@352 () T@U)
(declare-fun $generated@@353 () Int)
(declare-fun $generated@@354 () Int)
(declare-fun $generated@@355 () Int)
(declare-fun $generated@@356 () Int)
(declare-fun $generated@@357 () T@U)
(declare-fun $generated@@358 () T@U)
(declare-fun $generated@@359 () T@U)
(declare-fun $generated@@360 () T@U)
(declare-fun $generated@@361 () Int)
(declare-fun $generated@@362 () Int)
(declare-fun $generated@@363 () Int)
(declare-fun $generated@@364 () T@U)
(declare-fun $generated@@365 () T@U)
(declare-fun $generated@@366 () Int)
(declare-fun $generated@@367 () Int)
(declare-fun $generated@@368 () Int)
(declare-fun $generated@@369 () T@U)
(declare-fun $generated@@370 () T@U)
(declare-fun $generated@@371 () Int)
(declare-fun $generated@@372 () Int)
(declare-fun $generated@@373 () Int)
(declare-fun $generated@@374 () Int)
(declare-fun $generated@@375 () Int)
(declare-fun $generated@@376 () Int)
(declare-fun $generated@@377 () T@U)
(declare-fun $generated@@378 () T@U)
(declare-fun $generated@@379 () Int)
(declare-fun $generated@@380 () Int)
(declare-fun $generated@@381 () Int)
(declare-fun $generated@@382 () Int)
(declare-fun $generated@@383 () T@U)
(declare-fun $generated@@384 () T@U)
(declare-fun $generated@@385 () Int)
(declare-fun $generated@@386 () Int)
(declare-fun $generated@@387 () Int)
(declare-fun $generated@@388 () Int)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () T@U)
(declare-fun $generated@@392 () Int)
(declare-fun $generated@@393 () Int)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 () Int)
(declare-fun $generated@@396 () T@U)
(declare-fun $generated@@397 () T@U)
(declare-fun $generated@@398 () Int)
(declare-fun $generated@@399 () Int)
(declare-fun $generated@@400 () Int)
(declare-fun $generated@@401 () Int)
(declare-fun $generated@@402 () T@U)
(declare-fun $generated@@403 () T@U)
(declare-fun $generated@@404 () Int)
(declare-fun $generated@@405 () Int)
(declare-fun $generated@@406 () Int)
(declare-fun $generated@@407 () Int)
(declare-fun $generated@@408 () T@U)
(declare-fun $generated@@409 () T@U)
(declare-fun $generated@@410 () Int)
(declare-fun $generated@@411 () Int)
(declare-fun $generated@@412 () Int)
(declare-fun $generated@@413 () Int)
(declare-fun $generated@@414 () T@U)
(declare-fun $generated@@415 () T@U)
(declare-fun $generated@@416 () Int)
(declare-fun $generated@@417 () Int)
(declare-fun $generated@@418 () Int)
(declare-fun $generated@@419 () Int)
(declare-fun $generated@@420 () T@U)
(declare-fun $generated@@421 () T@U)
(declare-fun $generated@@422 () Int)
(declare-fun $generated@@423 () Int)
(declare-fun $generated@@424 () Int)
(declare-fun $generated@@425 () Int)
(declare-fun $generated@@426 () T@U)
(declare-fun $generated@@427 () T@U)
(declare-fun $generated@@428 () Int)
(declare-fun $generated@@429 () Int)
(declare-fun $generated@@430 () Int)
(declare-fun $generated@@431 () Int)
(declare-fun $generated@@432 () T@U)
(declare-fun $generated@@433 () T@U)
(declare-fun $generated@@434 () Int)
(declare-fun $generated@@435 () Int)
(declare-fun $generated@@436 () Int)
(declare-fun $generated@@437 () Int)
(declare-fun $generated@@438 () T@U)
(declare-fun $generated@@439 () T@U)
(declare-fun $generated@@440 () T@U)
(declare-fun $generated@@441 () T@U)
(declare-fun $generated@@442 () Int)
(declare-fun $generated@@443 () T@U)
(declare-fun $generated@@444 () T@U)
(declare-fun $generated@@445 () Int)
(declare-fun $generated@@446 () T@U)
(declare-fun $generated@@447 () T@U)
(declare-fun $generated@@448 () Int)
(declare-fun $generated@@449 () Int)
(declare-fun $generated@@450 () T@U)
(declare-fun $generated@@451 () Int)
(declare-fun $generated@@452 () Int)
(declare-fun $generated@@453 () Int)
(declare-fun $generated@@454 () Int)
(declare-fun $generated@@455 () Int)
(declare-fun $generated@@456 () Int)
(declare-fun $generated@@457 () Int)
(declare-fun $generated@@458 () Int)
(declare-fun $generated@@459 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@223) ($generated@@175 $generated@@199)) (= (type $generated@@225) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@227) $generated@@46)) (= (type $generated@@228) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@230) ($generated@@175 $generated@@199))) (= (type $generated@@231) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@233) ($generated@@175 $generated@@199))) (= (type $generated@@234) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@237) ($generated@@175 $generated@@199))) (= (type $generated@@238) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@241) ($generated@@175 $generated@@199))) (= (type $generated@@242) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@245) ($generated@@175 $generated@@199))) (= (type $generated@@246) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@263) ($generated@@175 $generated@@199))) (= (type $generated@@264) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@268) ($generated@@175 $generated@@199))) (= (type $generated@@269) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@273) ($generated@@175 $generated@@199))) (= (type $generated@@274) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@281) ($generated@@175 $generated@@199))) (= (type $generated@@282) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@287) ($generated@@175 $generated@@199))) (= (type $generated@@288) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@293) ($generated@@175 $generated@@199))) (= (type $generated@@294) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@295) ($generated@@175 $generated@@199))) (= (type $generated@@296) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@300) ($generated@@175 $generated@@199))) (= (type $generated@@301) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@305) ($generated@@175 $generated@@199))) (= (type $generated@@306) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@313) ($generated@@175 $generated@@199))) (= (type $generated@@314) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@319) ($generated@@175 $generated@@199))) (= (type $generated@@320) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@325) ($generated@@175 $generated@@199))) (= (type $generated@@326) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@327) ($generated@@175 $generated@@199))) (= (type $generated@@328) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@332) ($generated@@175 $generated@@199))) (= (type $generated@@333) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@337) ($generated@@175 $generated@@199))) (= (type $generated@@338) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@345) ($generated@@175 $generated@@199))) (= (type $generated@@346) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@351) ($generated@@175 $generated@@199))) (= (type $generated@@352) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@357) ($generated@@175 $generated@@199))) (= (type $generated@@358) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@359) ($generated@@175 $generated@@199))) (= (type $generated@@360) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@364) ($generated@@175 $generated@@199))) (= (type $generated@@365) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@369) ($generated@@175 $generated@@199))) (= (type $generated@@370) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@377) ($generated@@175 $generated@@199))) (= (type $generated@@378) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@383) ($generated@@175 $generated@@199))) (= (type $generated@@384) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@389) ($generated@@175 $generated@@199))) (= (type $generated@@390) ($generated@@108 $generated@@46 $generated@@4))) (= (type $generated@@391) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@396) ($generated@@175 $generated@@199))) (= (type $generated@@397) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@402) ($generated@@175 $generated@@199))) (= (type $generated@@403) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@408) ($generated@@175 $generated@@199))) (= (type $generated@@409) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@414) ($generated@@175 $generated@@199))) (= (type $generated@@415) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@420) ($generated@@175 $generated@@199))) (= (type $generated@@421) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@426) ($generated@@175 $generated@@199))) (= (type $generated@@427) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@432) ($generated@@175 $generated@@199))) (= (type $generated@@433) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@438) ($generated@@175 $generated@@199))) (= (type $generated@@439) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@440) ($generated@@175 $generated@@199))) (= (type $generated@@441) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@443) ($generated@@175 $generated@@199))) (= (type $generated@@444) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@446) ($generated@@175 $generated@@199))) (= (type $generated@@447) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@450) ($generated@@175 $generated@@199))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 168) (let (($generated@@460  (and (=> (= (ControlFlow 0 2) (- 0 113)) (= ($generated@@189 (- 0 103) (- 0 $generated@@221)) ($generated@@162 8))) (and (=> (= (ControlFlow 0 2) (- 0 112)) (= ($generated@@205 (- 0 $generated@@222) (- 0 $generated@@221)) ($generated@@162 1))) (=> (and (and (= ($generated@@189 (- 0 103) (- 0 $generated@@221)) ($generated@@162 8)) (= ($generated@@205 (- 0 $generated@@222) (- 0 $generated@@221)) ($generated@@162 1))) (= $generated@@223 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 111)) (not (= $generated@@221 0))) (=> (not (= $generated@@221 0)) (=> (and ($generated@@224 $generated@@225) ($generated@@226 $generated@@225)) (=> (and (and (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@46) (=> (and (not (= $generated@@461 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@228 $generated@@461) $generated@@50))) (= ($generated@@49 $generated@@225 $generated@@461) ($generated@@49 $generated@@228 $generated@@461))))
 :pattern ( ($generated@@49 $generated@@225 $generated@@461))
)) ($generated@@44 $generated@@228 $generated@@225)) (and (= $generated@@229 (- 0 $generated@@222)) (= $generated@@230 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32))))))) (and (=> (= (ControlFlow 0 2) (- 0 110)) (not (= $generated@@221 0))) (=> (not (= $generated@@221 0)) (=> (and ($generated@@224 $generated@@231) ($generated@@226 $generated@@231)) (=> (and (and (forall (($generated@@462 T@U) ) (!  (=> (= (type $generated@@462) $generated@@46) (=> (and (not (= $generated@@462 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@225 $generated@@462) $generated@@50))) (= ($generated@@49 $generated@@231 $generated@@462) ($generated@@49 $generated@@225 $generated@@462))))
 :pattern ( ($generated@@49 $generated@@231 $generated@@462))
)) ($generated@@44 $generated@@225 $generated@@231)) (and (= $generated@@232 (- 0 $generated@@221)) (= $generated@@233 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32))))))) (and (=> (= (ControlFlow 0 2) (- 0 109)) (not (= $generated@@232 0))) (=> (not (= $generated@@232 0)) (=> (and (and (and ($generated@@224 $generated@@234) ($generated@@226 $generated@@234)) (forall (($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@46) (=> (and (not (= $generated@@463 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@231 $generated@@463) $generated@@50))) (= ($generated@@49 $generated@@234 $generated@@463) ($generated@@49 $generated@@231 $generated@@463))))
 :pattern ( ($generated@@49 $generated@@234 $generated@@463))
))) (and (and ($generated@@44 $generated@@231 $generated@@234) (= $generated@@235 (- 0 $generated@@222))) (and (= $generated@@236 (- 0 $generated@@221)) (= $generated@@237 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))))) (and (=> (= (ControlFlow 0 2) (- 0 108)) (not (= $generated@@236 0))) (=> (not (= $generated@@236 0)) (=> (and (and (and ($generated@@224 $generated@@238) ($generated@@226 $generated@@238)) (forall (($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@46) (=> (and (not (= $generated@@464 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@234 $generated@@464) $generated@@50))) (= ($generated@@49 $generated@@238 $generated@@464) ($generated@@49 $generated@@234 $generated@@464))))
 :pattern ( ($generated@@49 $generated@@238 $generated@@464))
))) (and (and ($generated@@44 $generated@@234 $generated@@238) (= $generated@@239 ($generated@@162 (- 0 108)))) (and (= $generated@@240 ($generated@@162 9)) (= $generated@@241 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))))) (and (=> (= (ControlFlow 0 2) (- 0 107)) (not (= $generated@@240 0))) (=> (not (= $generated@@240 0)) (=> (and (and (and ($generated@@224 $generated@@242) ($generated@@226 $generated@@242)) (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@46) (=> (and (not (= $generated@@465 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@238 $generated@@465) $generated@@50))) (= ($generated@@49 $generated@@242 $generated@@465) ($generated@@49 $generated@@238 $generated@@465))))
 :pattern ( ($generated@@49 $generated@@242 $generated@@465))
))) (and (and ($generated@@44 $generated@@238 $generated@@242) (= $generated@@243 ($generated@@162 (- 0 108)))) (and (= $generated@@244 ($generated@@162 (- 0 9))) (= $generated@@245 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 10)))))))) (and (=> (= (ControlFlow 0 2) (- 0 106)) (not (= $generated@@244 0))) (=> (not (= $generated@@244 0)) (=> (and (and (and ($generated@@224 $generated@@246) ($generated@@226 $generated@@246)) (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@46) (=> (and (not (= $generated@@466 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@242 $generated@@466) $generated@@50))) (= ($generated@@49 $generated@@246 $generated@@466) ($generated@@49 $generated@@242 $generated@@466))))
 :pattern ( ($generated@@49 $generated@@246 $generated@@466))
))) (and ($generated@@44 $generated@@242 $generated@@246) (= $generated@@247 ($generated@@162 103)))) (and (=> (= (ControlFlow 0 2) (- 0 105)) (and (<= ($generated@@162 (- 0 128)) $generated@@247) (< $generated@@247 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@247) (< $generated@@247 128)) (=> (and (= $generated@@248 ($generated@@162 103)) (= $generated@@249 ($generated@@162 13))) (and (=> (= (ControlFlow 0 2) (- 0 104)) (and (<= ($generated@@162 (- 0 128)) $generated@@249) (< $generated@@249 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@249) (< $generated@@249 128)) (=> (and (= $generated@@250 ($generated@@162 13)) (= $generated@@251 ($generated@@162 103))) (and (=> (= (ControlFlow 0 2) (- 0 103)) (and (<= ($generated@@162 (- 0 32768)) $generated@@251) (< $generated@@251 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@251) (< $generated@@251 32768)) (=> (and (= $generated@@252 ($generated@@162 103)) (= $generated@@253 ($generated@@162 13))) (and (=> (= (ControlFlow 0 2) (- 0 102)) (and (<= ($generated@@162 (- 0 32768)) $generated@@253) (< $generated@@253 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@253) (< $generated@@253 32768)) (=> (and (= $generated@@254 ($generated@@162 13)) (= $generated@@255 ($generated@@162 103))) (and (=> (= (ControlFlow 0 2) (- 0 101)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@255) (< $generated@@255 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@255) (< $generated@@255 2147483648)) (=> (and (= $generated@@256 ($generated@@162 103)) (= $generated@@257 ($generated@@162 13))) (and (=> (= (ControlFlow 0 2) (- 0 100)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@257) (< $generated@@257 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@257) (< $generated@@257 2147483648)) (=> (and (= $generated@@258 ($generated@@162 13)) (= $generated@@259 ($generated@@162 103))) (and (=> (= (ControlFlow 0 2) (- 0 99)) (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@259) (< $generated@@259 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@259) (< $generated@@259 9223372036854775808)) (=> (and (= $generated@@260 ($generated@@162 103)) (= $generated@@261 ($generated@@162 13))) (and (=> (= (ControlFlow 0 2) (- 0 98)) (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@261) (< $generated@@261 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@261) (< $generated@@261 9223372036854775808)) (=> (and (= $generated@@262 ($generated@@162 13)) (= $generated@@263 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 97)) (not (= $generated@@250 0))) (=> (not (= $generated@@250 0)) (and (=> (= (ControlFlow 0 2) (- 0 96)) (<= ($generated@@162 (- 0 127)) $generated@@248)) (=> (<= ($generated@@162 (- 0 127)) $generated@@248) (=> (and (and (and ($generated@@224 $generated@@264) ($generated@@226 $generated@@264)) (forall (($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@46) (=> (and (not (= $generated@@467 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@246 $generated@@467) $generated@@50))) (= ($generated@@49 $generated@@264 $generated@@467) ($generated@@49 $generated@@246 $generated@@467))))
 :pattern ( ($generated@@49 $generated@@264 $generated@@467))
))) (and ($generated@@44 $generated@@246 $generated@@264) (= $generated@@265 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 95)) (and (<= ($generated@@162 (- 0 128)) $generated@@265) (< $generated@@265 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@265) (< $generated@@265 128)) (=> (= $generated@@266 (- 0 $generated@@248)) (and (=> (= (ControlFlow 0 2) (- 0 94)) (and (<= ($generated@@162 (- 0 128)) $generated@@266) (< $generated@@266 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@266) (< $generated@@266 128)) (=> (and (= $generated@@267 (- 0 $generated@@248)) (= $generated@@268 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 93)) (not (= $generated@@250 0))) (=> (not (= $generated@@250 0)) (and (=> (= (ControlFlow 0 2) (- 0 92)) (<= ($generated@@162 (- 0 127)) $generated@@267)) (=> (<= ($generated@@162 (- 0 127)) $generated@@267) (=> (and (and (and ($generated@@224 $generated@@269) ($generated@@226 $generated@@269)) (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@46) (=> (and (not (= $generated@@468 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@264 $generated@@468) $generated@@50))) (= ($generated@@49 $generated@@269 $generated@@468) ($generated@@49 $generated@@264 $generated@@468))))
 :pattern ( ($generated@@49 $generated@@269 $generated@@468))
))) (and ($generated@@44 $generated@@264 $generated@@269) (= $generated@@270 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 91)) (and (<= ($generated@@162 (- 0 128)) $generated@@270) (< $generated@@270 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@270) (< $generated@@270 128)) (=> (= $generated@@271 (- 0 $generated@@250)) (and (=> (= (ControlFlow 0 2) (- 0 90)) (and (<= ($generated@@162 (- 0 128)) $generated@@271) (< $generated@@271 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@271) (< $generated@@271 128)) (=> (and (= $generated@@272 (- 0 $generated@@250)) (= $generated@@273 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 89)) (not (= $generated@@272 0))) (=> (not (= $generated@@272 0)) (and (=> (= (ControlFlow 0 2) (- 0 88)) (<= ($generated@@162 (- 0 127)) $generated@@248)) (=> (<= ($generated@@162 (- 0 127)) $generated@@248) (=> (and (and (and ($generated@@224 $generated@@274) ($generated@@226 $generated@@274)) (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@46) (=> (and (not (= $generated@@469 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@269 $generated@@469) $generated@@50))) (= ($generated@@49 $generated@@274 $generated@@469) ($generated@@49 $generated@@269 $generated@@469))))
 :pattern ( ($generated@@49 $generated@@274 $generated@@469))
))) (and ($generated@@44 $generated@@269 $generated@@274) (= $generated@@275 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 87)) (and (<= ($generated@@162 (- 0 128)) $generated@@275) (< $generated@@275 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@275) (< $generated@@275 128)) (=> (= $generated@@276 (- 0 $generated@@248)) (and (=> (= (ControlFlow 0 2) (- 0 86)) (and (<= ($generated@@162 (- 0 128)) $generated@@276) (< $generated@@276 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@276) (< $generated@@276 128)) (=> (and (= $generated@@277 (- 0 $generated@@248)) (= $generated@@278 ($generated@@162 0))) (and (=> (= (ControlFlow 0 2) (- 0 85)) (and (<= ($generated@@162 (- 0 128)) $generated@@278) (< $generated@@278 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@278) (< $generated@@278 128)) (=> (= $generated@@279 (- 0 $generated@@250)) (and (=> (= (ControlFlow 0 2) (- 0 84)) (and (<= ($generated@@162 (- 0 128)) $generated@@279) (< $generated@@279 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@279) (< $generated@@279 128)) (=> (and (= $generated@@280 (- 0 $generated@@250)) (= $generated@@281 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 83)) (not (= $generated@@280 0))) (=> (not (= $generated@@280 0)) (and (=> (= (ControlFlow 0 2) (- 0 82)) (<= ($generated@@162 (- 0 127)) $generated@@277)) (=> (<= ($generated@@162 (- 0 127)) $generated@@277) (=> (and (and (and ($generated@@224 $generated@@282) ($generated@@226 $generated@@282)) (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@46) (=> (and (not (= $generated@@470 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@274 $generated@@470) $generated@@50))) (= ($generated@@49 $generated@@282 $generated@@470) ($generated@@49 $generated@@274 $generated@@470))))
 :pattern ( ($generated@@49 $generated@@282 $generated@@470))
))) (and ($generated@@44 $generated@@274 $generated@@282) (= $generated@@283 ($generated@@162 (- 0 108))))) (and (=> (= (ControlFlow 0 2) (- 0 81)) (and (<= ($generated@@162 (- 0 128)) $generated@@283) (< $generated@@283 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@283) (< $generated@@283 128)) (=> (and (= $generated@@284 ($generated@@162 (- 0 108))) (= $generated@@285 ($generated@@162 9))) (and (=> (= (ControlFlow 0 2) (- 0 80)) (and (<= ($generated@@162 (- 0 128)) $generated@@285) (< $generated@@285 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@285) (< $generated@@285 128)) (=> (and (= $generated@@286 ($generated@@162 9)) (= $generated@@287 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 79)) (not (= $generated@@286 0))) (=> (not (= $generated@@286 0)) (and (=> (= (ControlFlow 0 2) (- 0 78)) (<= ($generated@@162 (- 0 127)) $generated@@284)) (=> (<= ($generated@@162 (- 0 127)) $generated@@284) (=> (and (and (and ($generated@@224 $generated@@288) ($generated@@226 $generated@@288)) (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@46) (=> (and (not (= $generated@@471 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@282 $generated@@471) $generated@@50))) (= ($generated@@49 $generated@@288 $generated@@471) ($generated@@49 $generated@@282 $generated@@471))))
 :pattern ( ($generated@@49 $generated@@288 $generated@@471))
))) (and ($generated@@44 $generated@@282 $generated@@288) (= $generated@@289 ($generated@@162 (- 0 108))))) (and (=> (= (ControlFlow 0 2) (- 0 77)) (and (<= ($generated@@162 (- 0 128)) $generated@@289) (< $generated@@289 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@289) (< $generated@@289 128)) (=> (and (= $generated@@290 ($generated@@162 (- 0 108))) (= $generated@@291 ($generated@@162 (- 0 9)))) (and (=> (= (ControlFlow 0 2) (- 0 76)) (and (<= ($generated@@162 (- 0 128)) $generated@@291) (< $generated@@291 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@291) (< $generated@@291 128)) (=> (and (= $generated@@292 ($generated@@162 (- 0 9))) (= $generated@@293 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 10)))))) (and (=> (= (ControlFlow 0 2) (- 0 75)) (not (= $generated@@292 0))) (=> (not (= $generated@@292 0)) (and (=> (= (ControlFlow 0 2) (- 0 74)) (<= ($generated@@162 (- 0 127)) $generated@@290)) (=> (<= ($generated@@162 (- 0 127)) $generated@@290) (=> (and (and (and ($generated@@224 $generated@@294) ($generated@@226 $generated@@294)) (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@46) (=> (and (not (= $generated@@472 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@288 $generated@@472) $generated@@50))) (= ($generated@@49 $generated@@294 $generated@@472) ($generated@@49 $generated@@288 $generated@@472))))
 :pattern ( ($generated@@49 $generated@@294 $generated@@472))
))) (and ($generated@@44 $generated@@288 $generated@@294) (= $generated@@295 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32))))))) (and (=> (= (ControlFlow 0 2) (- 0 73)) (not (= $generated@@254 0))) (=> (not (= $generated@@254 0)) (and (=> (= (ControlFlow 0 2) (- 0 72)) (<= ($generated@@162 (- 0 32767)) $generated@@252)) (=> (<= ($generated@@162 (- 0 32767)) $generated@@252) (=> (and (and (and ($generated@@224 $generated@@296) ($generated@@226 $generated@@296)) (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@46) (=> (and (not (= $generated@@473 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@294 $generated@@473) $generated@@50))) (= ($generated@@49 $generated@@296 $generated@@473) ($generated@@49 $generated@@294 $generated@@473))))
 :pattern ( ($generated@@49 $generated@@296 $generated@@473))
))) (and ($generated@@44 $generated@@294 $generated@@296) (= $generated@@297 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 71)) (and (<= ($generated@@162 (- 0 32768)) $generated@@297) (< $generated@@297 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@297) (< $generated@@297 32768)) (=> (= $generated@@298 (- 0 $generated@@252)) (and (=> (= (ControlFlow 0 2) (- 0 70)) (and (<= ($generated@@162 (- 0 32768)) $generated@@298) (< $generated@@298 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@298) (< $generated@@298 32768)) (=> (and (= $generated@@299 (- 0 $generated@@252)) (= $generated@@300 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 69)) (not (= $generated@@254 0))) (=> (not (= $generated@@254 0)) (and (=> (= (ControlFlow 0 2) (- 0 68)) (<= ($generated@@162 (- 0 32767)) $generated@@299)) (=> (<= ($generated@@162 (- 0 32767)) $generated@@299) (=> (and (and (and ($generated@@224 $generated@@301) ($generated@@226 $generated@@301)) (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@46) (=> (and (not (= $generated@@474 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@296 $generated@@474) $generated@@50))) (= ($generated@@49 $generated@@301 $generated@@474) ($generated@@49 $generated@@296 $generated@@474))))
 :pattern ( ($generated@@49 $generated@@301 $generated@@474))
))) (and ($generated@@44 $generated@@296 $generated@@301) (= $generated@@302 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 67)) (and (<= ($generated@@162 (- 0 32768)) $generated@@302) (< $generated@@302 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@302) (< $generated@@302 32768)) (=> (= $generated@@303 (- 0 $generated@@254)) (and (=> (= (ControlFlow 0 2) (- 0 66)) (and (<= ($generated@@162 (- 0 32768)) $generated@@303) (< $generated@@303 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@303) (< $generated@@303 32768)) (=> (and (= $generated@@304 (- 0 $generated@@254)) (= $generated@@305 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 65)) (not (= $generated@@304 0))) (=> (not (= $generated@@304 0)) (and (=> (= (ControlFlow 0 2) (- 0 64)) (<= ($generated@@162 (- 0 32767)) $generated@@252)) (=> (<= ($generated@@162 (- 0 32767)) $generated@@252) (=> (and (and (and ($generated@@224 $generated@@306) ($generated@@226 $generated@@306)) (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@46) (=> (and (not (= $generated@@475 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@301 $generated@@475) $generated@@50))) (= ($generated@@49 $generated@@306 $generated@@475) ($generated@@49 $generated@@301 $generated@@475))))
 :pattern ( ($generated@@49 $generated@@306 $generated@@475))
))) (and ($generated@@44 $generated@@301 $generated@@306) (= $generated@@307 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 63)) (and (<= ($generated@@162 (- 0 32768)) $generated@@307) (< $generated@@307 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@307) (< $generated@@307 32768)) (=> (= $generated@@308 (- 0 $generated@@252)) (and (=> (= (ControlFlow 0 2) (- 0 62)) (and (<= ($generated@@162 (- 0 32768)) $generated@@308) (< $generated@@308 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@308) (< $generated@@308 32768)) (=> (and (= $generated@@309 (- 0 $generated@@252)) (= $generated@@310 ($generated@@162 0))) (and (=> (= (ControlFlow 0 2) (- 0 61)) (and (<= ($generated@@162 (- 0 32768)) $generated@@310) (< $generated@@310 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@310) (< $generated@@310 32768)) (=> (= $generated@@311 (- 0 $generated@@254)) (and (=> (= (ControlFlow 0 2) (- 0 60)) (and (<= ($generated@@162 (- 0 32768)) $generated@@311) (< $generated@@311 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@311) (< $generated@@311 32768)) (=> (and (= $generated@@312 (- 0 $generated@@254)) (= $generated@@313 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 59)) (not (= $generated@@312 0))) (=> (not (= $generated@@312 0)) (and (=> (= (ControlFlow 0 2) (- 0 58)) (<= ($generated@@162 (- 0 32767)) $generated@@309)) (=> (<= ($generated@@162 (- 0 32767)) $generated@@309) (=> (and (and (and ($generated@@224 $generated@@314) ($generated@@226 $generated@@314)) (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@46) (=> (and (not (= $generated@@476 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@306 $generated@@476) $generated@@50))) (= ($generated@@49 $generated@@314 $generated@@476) ($generated@@49 $generated@@306 $generated@@476))))
 :pattern ( ($generated@@49 $generated@@314 $generated@@476))
))) (and ($generated@@44 $generated@@306 $generated@@314) (= $generated@@315 ($generated@@162 (- 0 108))))) (and (=> (= (ControlFlow 0 2) (- 0 57)) (and (<= ($generated@@162 (- 0 32768)) $generated@@315) (< $generated@@315 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@315) (< $generated@@315 32768)) (=> (and (= $generated@@316 ($generated@@162 (- 0 108))) (= $generated@@317 ($generated@@162 9))) (and (=> (= (ControlFlow 0 2) (- 0 56)) (and (<= ($generated@@162 (- 0 32768)) $generated@@317) (< $generated@@317 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@317) (< $generated@@317 32768)) (=> (and (= $generated@@318 ($generated@@162 9)) (= $generated@@319 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 55)) (not (= $generated@@318 0))) (=> (not (= $generated@@318 0)) (and (=> (= (ControlFlow 0 2) (- 0 54)) (<= ($generated@@162 (- 0 32767)) $generated@@316)) (=> (<= ($generated@@162 (- 0 32767)) $generated@@316) (=> (and (and (and ($generated@@224 $generated@@320) ($generated@@226 $generated@@320)) (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@46) (=> (and (not (= $generated@@477 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@314 $generated@@477) $generated@@50))) (= ($generated@@49 $generated@@320 $generated@@477) ($generated@@49 $generated@@314 $generated@@477))))
 :pattern ( ($generated@@49 $generated@@320 $generated@@477))
))) (and ($generated@@44 $generated@@314 $generated@@320) (= $generated@@321 ($generated@@162 (- 0 108))))) (and (=> (= (ControlFlow 0 2) (- 0 53)) (and (<= ($generated@@162 (- 0 32768)) $generated@@321) (< $generated@@321 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@321) (< $generated@@321 32768)) (=> (and (= $generated@@322 ($generated@@162 (- 0 108))) (= $generated@@323 ($generated@@162 (- 0 9)))) (and (=> (= (ControlFlow 0 2) (- 0 52)) (and (<= ($generated@@162 (- 0 32768)) $generated@@323) (< $generated@@323 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@323) (< $generated@@323 32768)) (=> (and (= $generated@@324 ($generated@@162 (- 0 9))) (= $generated@@325 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 10)))))) (and (=> (= (ControlFlow 0 2) (- 0 51)) (not (= $generated@@324 0))) (=> (not (= $generated@@324 0)) (and (=> (= (ControlFlow 0 2) (- 0 50)) (<= ($generated@@162 (- 0 32767)) $generated@@322)) (=> (<= ($generated@@162 (- 0 32767)) $generated@@322) (=> (and (and (and ($generated@@224 $generated@@326) ($generated@@226 $generated@@326)) (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@46) (=> (and (not (= $generated@@478 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@320 $generated@@478) $generated@@50))) (= ($generated@@49 $generated@@326 $generated@@478) ($generated@@49 $generated@@320 $generated@@478))))
 :pattern ( ($generated@@49 $generated@@326 $generated@@478))
))) (and ($generated@@44 $generated@@320 $generated@@326) (= $generated@@327 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32))))))) (and (=> (= (ControlFlow 0 2) (- 0 49)) (not (= $generated@@258 0))) (=> (not (= $generated@@258 0)) (and (=> (= (ControlFlow 0 2) (- 0 48)) (<= ($generated@@162 (- 0 2147483647)) $generated@@256)) (=> (<= ($generated@@162 (- 0 2147483647)) $generated@@256) (=> (and (and (and ($generated@@224 $generated@@328) ($generated@@226 $generated@@328)) (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@46) (=> (and (not (= $generated@@479 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@326 $generated@@479) $generated@@50))) (= ($generated@@49 $generated@@328 $generated@@479) ($generated@@49 $generated@@326 $generated@@479))))
 :pattern ( ($generated@@49 $generated@@328 $generated@@479))
))) (and ($generated@@44 $generated@@326 $generated@@328) (= $generated@@329 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 47)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@329) (< $generated@@329 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@329) (< $generated@@329 2147483648)) (=> (= $generated@@330 (- 0 $generated@@256)) (and (=> (= (ControlFlow 0 2) (- 0 46)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@330) (< $generated@@330 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@330) (< $generated@@330 2147483648)) (=> (and (= $generated@@331 (- 0 $generated@@256)) (= $generated@@332 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 45)) (not (= $generated@@258 0))) (=> (not (= $generated@@258 0)) (and (=> (= (ControlFlow 0 2) (- 0 44)) (<= ($generated@@162 (- 0 2147483647)) $generated@@331)) (=> (<= ($generated@@162 (- 0 2147483647)) $generated@@331) (=> (and (and (and ($generated@@224 $generated@@333) ($generated@@226 $generated@@333)) (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@46) (=> (and (not (= $generated@@480 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@328 $generated@@480) $generated@@50))) (= ($generated@@49 $generated@@333 $generated@@480) ($generated@@49 $generated@@328 $generated@@480))))
 :pattern ( ($generated@@49 $generated@@333 $generated@@480))
))) (and ($generated@@44 $generated@@328 $generated@@333) (= $generated@@334 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 43)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@334) (< $generated@@334 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@334) (< $generated@@334 2147483648)) (=> (= $generated@@335 (- 0 $generated@@258)) (and (=> (= (ControlFlow 0 2) (- 0 42)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@335) (< $generated@@335 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@335) (< $generated@@335 2147483648)) (=> (and (= $generated@@336 (- 0 $generated@@258)) (= $generated@@337 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 41)) (not (= $generated@@336 0))) (=> (not (= $generated@@336 0)) (and (=> (= (ControlFlow 0 2) (- 0 40)) (<= ($generated@@162 (- 0 2147483647)) $generated@@256)) (=> (<= ($generated@@162 (- 0 2147483647)) $generated@@256) (=> (and (and (and ($generated@@224 $generated@@338) ($generated@@226 $generated@@338)) (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@46) (=> (and (not (= $generated@@481 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@333 $generated@@481) $generated@@50))) (= ($generated@@49 $generated@@338 $generated@@481) ($generated@@49 $generated@@333 $generated@@481))))
 :pattern ( ($generated@@49 $generated@@338 $generated@@481))
))) (and ($generated@@44 $generated@@333 $generated@@338) (= $generated@@339 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 39)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@339) (< $generated@@339 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@339) (< $generated@@339 2147483648)) (=> (= $generated@@340 (- 0 $generated@@256)) (and (=> (= (ControlFlow 0 2) (- 0 38)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@340) (< $generated@@340 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@340) (< $generated@@340 2147483648)) (=> (and (= $generated@@341 (- 0 $generated@@256)) (= $generated@@342 ($generated@@162 0))) (and (=> (= (ControlFlow 0 2) (- 0 37)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@342) (< $generated@@342 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@342) (< $generated@@342 2147483648)) (=> (= $generated@@343 (- 0 $generated@@258)) (and (=> (= (ControlFlow 0 2) (- 0 36)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@343) (< $generated@@343 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@343) (< $generated@@343 2147483648)) (=> (and (= $generated@@344 (- 0 $generated@@258)) (= $generated@@345 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 35)) (not (= $generated@@344 0))) (=> (not (= $generated@@344 0)) (and (=> (= (ControlFlow 0 2) (- 0 34)) (<= ($generated@@162 (- 0 2147483647)) $generated@@341)) (=> (<= ($generated@@162 (- 0 2147483647)) $generated@@341) (=> (and (and (and ($generated@@224 $generated@@346) ($generated@@226 $generated@@346)) (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@46) (=> (and (not (= $generated@@482 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@338 $generated@@482) $generated@@50))) (= ($generated@@49 $generated@@346 $generated@@482) ($generated@@49 $generated@@338 $generated@@482))))
 :pattern ( ($generated@@49 $generated@@346 $generated@@482))
))) (and ($generated@@44 $generated@@338 $generated@@346) (= $generated@@347 ($generated@@162 (- 0 108))))) (and (=> (= (ControlFlow 0 2) (- 0 33)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@347) (< $generated@@347 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@347) (< $generated@@347 2147483648)) (=> (and (= $generated@@348 ($generated@@162 (- 0 108))) (= $generated@@349 ($generated@@162 9))) (and (=> (= (ControlFlow 0 2) (- 0 32)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@349) (< $generated@@349 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@349) (< $generated@@349 2147483648)) (=> (and (= $generated@@350 ($generated@@162 9)) (= $generated@@351 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 31)) (not (= $generated@@350 0))) (=> (not (= $generated@@350 0)) (and (=> (= (ControlFlow 0 2) (- 0 30)) (<= ($generated@@162 (- 0 2147483647)) $generated@@348)) (=> (<= ($generated@@162 (- 0 2147483647)) $generated@@348) (=> (and (and (and ($generated@@224 $generated@@352) ($generated@@226 $generated@@352)) (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@46) (=> (and (not (= $generated@@483 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@346 $generated@@483) $generated@@50))) (= ($generated@@49 $generated@@352 $generated@@483) ($generated@@49 $generated@@346 $generated@@483))))
 :pattern ( ($generated@@49 $generated@@352 $generated@@483))
))) (and ($generated@@44 $generated@@346 $generated@@352) (= $generated@@353 ($generated@@162 (- 0 108))))) (and (=> (= (ControlFlow 0 2) (- 0 29)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@353) (< $generated@@353 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@353) (< $generated@@353 2147483648)) (=> (and (= $generated@@354 ($generated@@162 (- 0 108))) (= $generated@@355 ($generated@@162 (- 0 9)))) (and (=> (= (ControlFlow 0 2) (- 0 28)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@355) (< $generated@@355 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@355) (< $generated@@355 2147483648)) (=> (and (= $generated@@356 ($generated@@162 (- 0 9))) (= $generated@@357 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 10)))))) (and (=> (= (ControlFlow 0 2) (- 0 27)) (not (= $generated@@356 0))) (=> (not (= $generated@@356 0)) (and (=> (= (ControlFlow 0 2) (- 0 26)) (<= ($generated@@162 (- 0 2147483647)) $generated@@354)) (=> (<= ($generated@@162 (- 0 2147483647)) $generated@@354) (=> (and (and (and ($generated@@224 $generated@@358) ($generated@@226 $generated@@358)) (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@46) (=> (and (not (= $generated@@484 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@352 $generated@@484) $generated@@50))) (= ($generated@@49 $generated@@358 $generated@@484) ($generated@@49 $generated@@352 $generated@@484))))
 :pattern ( ($generated@@49 $generated@@358 $generated@@484))
))) (and ($generated@@44 $generated@@352 $generated@@358) (= $generated@@359 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32))))))) (and (=> (= (ControlFlow 0 2) (- 0 25)) (not (= $generated@@262 0))) (=> (not (= $generated@@262 0)) (and (=> (= (ControlFlow 0 2) (- 0 24)) (<= ($generated@@162 (- 0 9223372036854775807)) $generated@@260)) (=> (<= ($generated@@162 (- 0 9223372036854775807)) $generated@@260) (=> (and (and (and ($generated@@224 $generated@@360) ($generated@@226 $generated@@360)) (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@46) (=> (and (not (= $generated@@485 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@358 $generated@@485) $generated@@50))) (= ($generated@@49 $generated@@360 $generated@@485) ($generated@@49 $generated@@358 $generated@@485))))
 :pattern ( ($generated@@49 $generated@@360 $generated@@485))
))) (and ($generated@@44 $generated@@358 $generated@@360) (= $generated@@361 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 23)) (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@361) (< $generated@@361 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@361) (< $generated@@361 9223372036854775808)) (=> (= $generated@@362 (- 0 $generated@@260)) (and (=> (= (ControlFlow 0 2) (- 0 22)) (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@362) (< $generated@@362 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@362) (< $generated@@362 9223372036854775808)) (=> (and (= $generated@@363 (- 0 $generated@@260)) (= $generated@@364 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 21)) (not (= $generated@@262 0))) (=> (not (= $generated@@262 0)) (and (=> (= (ControlFlow 0 2) (- 0 20)) (<= ($generated@@162 (- 0 9223372036854775807)) $generated@@363)) (=> (<= ($generated@@162 (- 0 9223372036854775807)) $generated@@363) (=> (and (and (and ($generated@@224 $generated@@365) ($generated@@226 $generated@@365)) (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@46) (=> (and (not (= $generated@@486 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@360 $generated@@486) $generated@@50))) (= ($generated@@49 $generated@@365 $generated@@486) ($generated@@49 $generated@@360 $generated@@486))))
 :pattern ( ($generated@@49 $generated@@365 $generated@@486))
))) (and ($generated@@44 $generated@@360 $generated@@365) (= $generated@@366 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 19)) (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@366) (< $generated@@366 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@366) (< $generated@@366 9223372036854775808)) (=> (= $generated@@367 (- 0 $generated@@262)) (and (=> (= (ControlFlow 0 2) (- 0 18)) (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@367) (< $generated@@367 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@367) (< $generated@@367 9223372036854775808)) (=> (and (= $generated@@368 (- 0 $generated@@262)) (= $generated@@369 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 17)) (not (= $generated@@368 0))) (=> (not (= $generated@@368 0)) (and (=> (= (ControlFlow 0 2) (- 0 16)) (<= ($generated@@162 (- 0 9223372036854775807)) $generated@@260)) (=> (<= ($generated@@162 (- 0 9223372036854775807)) $generated@@260) (=> (and (and (and ($generated@@224 $generated@@370) ($generated@@226 $generated@@370)) (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@46) (=> (and (not (= $generated@@487 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@365 $generated@@487) $generated@@50))) (= ($generated@@49 $generated@@370 $generated@@487) ($generated@@49 $generated@@365 $generated@@487))))
 :pattern ( ($generated@@49 $generated@@370 $generated@@487))
))) (and ($generated@@44 $generated@@365 $generated@@370) (= $generated@@371 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 15)) (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@371) (< $generated@@371 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@371) (< $generated@@371 9223372036854775808)) (=> (= $generated@@372 (- 0 $generated@@260)) (and (=> (= (ControlFlow 0 2) (- 0 14)) (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@372) (< $generated@@372 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@372) (< $generated@@372 9223372036854775808)) (=> (and (= $generated@@373 (- 0 $generated@@260)) (= $generated@@374 ($generated@@162 0))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@374) (< $generated@@374 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@374) (< $generated@@374 9223372036854775808)) (=> (= $generated@@375 (- 0 $generated@@262)) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@375) (< $generated@@375 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@375) (< $generated@@375 9223372036854775808)) (=> (and (= $generated@@376 (- 0 $generated@@262)) (= $generated@@377 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (not (= $generated@@376 0))) (=> (not (= $generated@@376 0)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (<= ($generated@@162 (- 0 9223372036854775807)) $generated@@373)) (=> (<= ($generated@@162 (- 0 9223372036854775807)) $generated@@373) (=> (and (and (and ($generated@@224 $generated@@378) ($generated@@226 $generated@@378)) (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@46) (=> (and (not (= $generated@@488 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@370 $generated@@488) $generated@@50))) (= ($generated@@49 $generated@@378 $generated@@488) ($generated@@49 $generated@@370 $generated@@488))))
 :pattern ( ($generated@@49 $generated@@378 $generated@@488))
))) (and ($generated@@44 $generated@@370 $generated@@378) (= $generated@@379 ($generated@@162 (- 0 108))))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@379) (< $generated@@379 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@379) (< $generated@@379 9223372036854775808)) (=> (and (= $generated@@380 ($generated@@162 (- 0 108))) (= $generated@@381 ($generated@@162 9))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@381) (< $generated@@381 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@381) (< $generated@@381 9223372036854775808)) (=> (and (= $generated@@382 ($generated@@162 9)) (= $generated@@383 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (not (= $generated@@382 0))) (=> (not (= $generated@@382 0)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (<= ($generated@@162 (- 0 9223372036854775807)) $generated@@380)) (=> (<= ($generated@@162 (- 0 9223372036854775807)) $generated@@380) (=> (and (and (and ($generated@@224 $generated@@384) ($generated@@226 $generated@@384)) (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@46) (=> (and (not (= $generated@@489 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@378 $generated@@489) $generated@@50))) (= ($generated@@49 $generated@@384 $generated@@489) ($generated@@49 $generated@@378 $generated@@489))))
 :pattern ( ($generated@@49 $generated@@384 $generated@@489))
))) (and ($generated@@44 $generated@@378 $generated@@384) (= $generated@@385 ($generated@@162 (- 0 108))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@385) (< $generated@@385 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@385) (< $generated@@385 9223372036854775808)) (=> (and (= $generated@@386 ($generated@@162 (- 0 108))) (= $generated@@387 ($generated@@162 (- 0 9)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@387) (< $generated@@387 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@387) (< $generated@@387 9223372036854775808)) (=> (and (= $generated@@388 ($generated@@162 (- 0 9))) (= $generated@@389 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 10)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@388 0))) (=> (not (= $generated@@388 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= ($generated@@162 (- 0 9223372036854775807)) $generated@@386))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@490  (=> (and (not (= ($generated@@189 (- 0 103) (- 0 $generated@@221)) ($generated@@162 8))) (= (ControlFlow 0 116) 2)) $generated@@460)))
(let (($generated@@491  (=> (= ($generated@@189 (- 0 103) (- 0 $generated@@221)) ($generated@@162 8)) (and (=> (= (ControlFlow 0 114) (- 0 115)) (not (= (- 0 $generated@@221) 0))) (=> (= (ControlFlow 0 114) 2) $generated@@460)))))
(let (($generated@@492  (and (=> (= (ControlFlow 0 117) (- 0 120)) (= ($generated@@189 $generated@@222 (- 0 $generated@@221)) ($generated@@162 (- 0 7)))) (and (=> (= (ControlFlow 0 117) (- 0 119)) (= ($generated@@205 $generated@@222 (- 0 $generated@@221)) ($generated@@162 12))) (=> (and (= ($generated@@189 $generated@@222 (- 0 $generated@@221)) ($generated@@162 (- 0 7))) (= ($generated@@205 $generated@@222 (- 0 $generated@@221)) ($generated@@162 12))) (and (=> (= (ControlFlow 0 117) (- 0 118)) (not (= (- 0 $generated@@221) 0))) (and (=> (= (ControlFlow 0 117) 114) $generated@@491) (=> (= (ControlFlow 0 117) 116) $generated@@490))))))))
(let (($generated@@493  (=> (and (not (= ($generated@@189 $generated@@222 (- 0 $generated@@221)) ($generated@@162 (- 0 7)))) (= (ControlFlow 0 123) 117)) $generated@@492)))
(let (($generated@@494  (=> (= ($generated@@189 $generated@@222 (- 0 $generated@@221)) ($generated@@162 (- 0 7))) (and (=> (= (ControlFlow 0 121) (- 0 122)) (not (= (- 0 $generated@@221) 0))) (=> (= (ControlFlow 0 121) 117) $generated@@492)))))
(let (($generated@@495  (and (=> (= (ControlFlow 0 124) (- 0 127)) (= ($generated@@189 (- 0 $generated@@222) $generated@@221) ($generated@@162 (- 0 8)))) (and (=> (= (ControlFlow 0 124) (- 0 126)) (= ($generated@@205 (- 0 $generated@@222) $generated@@221) ($generated@@162 1))) (=> (and (= ($generated@@189 (- 0 $generated@@222) $generated@@221) ($generated@@162 (- 0 8))) (= ($generated@@205 (- 0 $generated@@222) $generated@@221) ($generated@@162 1))) (and (=> (= (ControlFlow 0 124) (- 0 125)) (not (= (- 0 $generated@@221) 0))) (and (=> (= (ControlFlow 0 124) 121) $generated@@494) (=> (= (ControlFlow 0 124) 123) $generated@@493))))))))
(let (($generated@@496  (=> (and (not (= ($generated@@189 (- 0 $generated@@222) $generated@@221) ($generated@@162 (- 0 8)))) (= (ControlFlow 0 130) 124)) $generated@@495)))
(let (($generated@@497  (=> (= ($generated@@189 (- 0 $generated@@222) $generated@@221) ($generated@@162 (- 0 8))) (and (=> (= (ControlFlow 0 128) (- 0 129)) (not (= $generated@@221 0))) (=> (= (ControlFlow 0 128) 124) $generated@@495)))))
(let (($generated@@498  (and (=> (= (ControlFlow 0 131) (- 0 134)) (= ($generated@@189 $generated@@222 $generated@@221) ($generated@@162 7))) (and (=> (= (ControlFlow 0 131) (- 0 133)) (= ($generated@@205 $generated@@222 $generated@@221) ($generated@@162 12))) (=> (and (= ($generated@@189 $generated@@222 $generated@@221) ($generated@@162 7)) (= ($generated@@205 $generated@@222 $generated@@221) ($generated@@162 12))) (and (=> (= (ControlFlow 0 131) (- 0 132)) (not (= $generated@@221 0))) (and (=> (= (ControlFlow 0 131) 128) $generated@@497) (=> (= (ControlFlow 0 131) 130) $generated@@496))))))))
(let (($generated@@499  (=> (and (not (= ($generated@@189 $generated@@222 $generated@@221) ($generated@@162 7))) (= (ControlFlow 0 137) 131)) $generated@@498)))
(let (($generated@@500  (=> (= ($generated@@189 $generated@@222 $generated@@221) ($generated@@162 7)) (and (=> (= (ControlFlow 0 135) (- 0 136)) (not (= $generated@@221 0))) (=> (= (ControlFlow 0 135) 131) $generated@@498)))))
(let (($generated@@501  (=> (and (= $generated@@390 ($generated@@107 $generated@@227 $generated@@391 $generated@@50 false)) (= $generated@@392 ($generated@@162 231))) (and (=> (= (ControlFlow 0 138) (- 0 167)) (and (<= ($generated@@162 0) $generated@@392) (< $generated@@392 256))) (=> (and (<= ($generated@@162 0) $generated@@392) (< $generated@@392 256)) (=> (and (= $generated@@393 ($generated@@162 231)) (= $generated@@394 ($generated@@162 23))) (and (=> (= (ControlFlow 0 138) (- 0 166)) (and (<= ($generated@@162 0) $generated@@394) (< $generated@@394 256))) (=> (and (<= ($generated@@162 0) $generated@@394) (< $generated@@394 256)) (=> (and (= $generated@@395 ($generated@@162 23)) (= $generated@@396 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 138) (- 0 165)) (not (= $generated@@395 0))) (=> (not (= $generated@@395 0)) (=> (and (and (and ($generated@@224 $generated@@397) ($generated@@226 $generated@@397)) (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@46) (=> (and (not (= $generated@@502 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@391 $generated@@502) $generated@@50))) (= ($generated@@49 $generated@@397 $generated@@502) ($generated@@49 $generated@@391 $generated@@502))))
 :pattern ( ($generated@@49 $generated@@397 $generated@@502))
))) (and ($generated@@44 $generated@@391 $generated@@397) (= $generated@@398 ($generated@@162 231)))) (and (=> (= (ControlFlow 0 138) (- 0 164)) (and (<= ($generated@@162 0) $generated@@398) (< $generated@@398 256))) (=> (and (<= ($generated@@162 0) $generated@@398) (< $generated@@398 256)) (=> (and (= $generated@@399 ($generated@@162 231)) (= $generated@@400 ($generated@@162 255))) (and (=> (= (ControlFlow 0 138) (- 0 163)) (and (<= ($generated@@162 0) $generated@@400) (< $generated@@400 256))) (=> (and (<= ($generated@@162 0) $generated@@400) (< $generated@@400 256)) (=> (and (= $generated@@401 ($generated@@162 255)) (= $generated@@402 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 10)))))) (and (=> (= (ControlFlow 0 138) (- 0 162)) (not (= $generated@@401 0))) (=> (not (= $generated@@401 0)) (=> (and (and (and ($generated@@224 $generated@@403) ($generated@@226 $generated@@403)) (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@46) (=> (and (not (= $generated@@503 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@397 $generated@@503) $generated@@50))) (= ($generated@@49 $generated@@403 $generated@@503) ($generated@@49 $generated@@397 $generated@@503))))
 :pattern ( ($generated@@49 $generated@@403 $generated@@503))
))) (and ($generated@@44 $generated@@397 $generated@@403) (= $generated@@404 ($generated@@162 65511)))) (and (=> (= (ControlFlow 0 138) (- 0 161)) (and (<= ($generated@@162 0) $generated@@404) (< $generated@@404 65536))) (=> (and (<= ($generated@@162 0) $generated@@404) (< $generated@@404 65536)) (=> (and (= $generated@@405 ($generated@@162 65511)) (= $generated@@406 ($generated@@162 23))) (and (=> (= (ControlFlow 0 138) (- 0 160)) (and (<= ($generated@@162 0) $generated@@406) (< $generated@@406 65536))) (=> (and (<= ($generated@@162 0) $generated@@406) (< $generated@@406 65536)) (=> (and (= $generated@@407 ($generated@@162 23)) (= $generated@@408 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 138) (- 0 159)) (not (= $generated@@407 0))) (=> (not (= $generated@@407 0)) (=> (and (and (and ($generated@@224 $generated@@409) ($generated@@226 $generated@@409)) (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@46) (=> (and (not (= $generated@@504 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@403 $generated@@504) $generated@@50))) (= ($generated@@49 $generated@@409 $generated@@504) ($generated@@49 $generated@@403 $generated@@504))))
 :pattern ( ($generated@@49 $generated@@409 $generated@@504))
))) (and ($generated@@44 $generated@@403 $generated@@409) (= $generated@@410 ($generated@@162 65511)))) (and (=> (= (ControlFlow 0 138) (- 0 158)) (and (<= ($generated@@162 0) $generated@@410) (< $generated@@410 65536))) (=> (and (<= ($generated@@162 0) $generated@@410) (< $generated@@410 65536)) (=> (and (= $generated@@411 ($generated@@162 65511)) (= $generated@@412 ($generated@@162 65535))) (and (=> (= (ControlFlow 0 138) (- 0 157)) (and (<= ($generated@@162 0) $generated@@412) (< $generated@@412 65536))) (=> (and (<= ($generated@@162 0) $generated@@412) (< $generated@@412 65536)) (=> (and (= $generated@@413 ($generated@@162 65535)) (= $generated@@414 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 10)))))) (and (=> (= (ControlFlow 0 138) (- 0 156)) (not (= $generated@@413 0))) (=> (not (= $generated@@413 0)) (=> (and (and (and ($generated@@224 $generated@@415) ($generated@@226 $generated@@415)) (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@46) (=> (and (not (= $generated@@505 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@409 $generated@@505) $generated@@50))) (= ($generated@@49 $generated@@415 $generated@@505) ($generated@@49 $generated@@409 $generated@@505))))
 :pattern ( ($generated@@49 $generated@@415 $generated@@505))
))) (and ($generated@@44 $generated@@409 $generated@@415) (= $generated@@416 ($generated@@162 4294967271)))) (and (=> (= (ControlFlow 0 138) (- 0 155)) (and (<= ($generated@@162 0) $generated@@416) (< $generated@@416 4294967296))) (=> (and (<= ($generated@@162 0) $generated@@416) (< $generated@@416 4294967296)) (=> (and (= $generated@@417 ($generated@@162 4294967271)) (= $generated@@418 ($generated@@162 23))) (and (=> (= (ControlFlow 0 138) (- 0 154)) (and (<= ($generated@@162 0) $generated@@418) (< $generated@@418 4294967296))) (=> (and (<= ($generated@@162 0) $generated@@418) (< $generated@@418 4294967296)) (=> (and (= $generated@@419 ($generated@@162 23)) (= $generated@@420 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 138) (- 0 153)) (not (= $generated@@419 0))) (=> (not (= $generated@@419 0)) (=> (and (and (and ($generated@@224 $generated@@421) ($generated@@226 $generated@@421)) (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@46) (=> (and (not (= $generated@@506 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@415 $generated@@506) $generated@@50))) (= ($generated@@49 $generated@@421 $generated@@506) ($generated@@49 $generated@@415 $generated@@506))))
 :pattern ( ($generated@@49 $generated@@421 $generated@@506))
))) (and ($generated@@44 $generated@@415 $generated@@421) (= $generated@@422 ($generated@@162 4294967271)))) (and (=> (= (ControlFlow 0 138) (- 0 152)) (and (<= ($generated@@162 0) $generated@@422) (< $generated@@422 4294967296))) (=> (and (<= ($generated@@162 0) $generated@@422) (< $generated@@422 4294967296)) (=> (and (= $generated@@423 ($generated@@162 4294967271)) (= $generated@@424 ($generated@@162 4294967295))) (and (=> (= (ControlFlow 0 138) (- 0 151)) (and (<= ($generated@@162 0) $generated@@424) (< $generated@@424 4294967296))) (=> (and (<= ($generated@@162 0) $generated@@424) (< $generated@@424 4294967296)) (=> (and (= $generated@@425 ($generated@@162 4294967295)) (= $generated@@426 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 10)))))) (and (=> (= (ControlFlow 0 138) (- 0 150)) (not (= $generated@@425 0))) (=> (not (= $generated@@425 0)) (=> (and (and (and ($generated@@224 $generated@@427) ($generated@@226 $generated@@427)) (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@46) (=> (and (not (= $generated@@507 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@421 $generated@@507) $generated@@50))) (= ($generated@@49 $generated@@427 $generated@@507) ($generated@@49 $generated@@421 $generated@@507))))
 :pattern ( ($generated@@49 $generated@@427 $generated@@507))
))) (and ($generated@@44 $generated@@421 $generated@@427) (= $generated@@428 ($generated@@162 18446744073709551591)))) (and (=> (= (ControlFlow 0 138) (- 0 149)) (and (<= ($generated@@162 0) $generated@@428) (< $generated@@428 18446744073709551616))) (=> (and (<= ($generated@@162 0) $generated@@428) (< $generated@@428 18446744073709551616)) (=> (and (= $generated@@429 ($generated@@162 18446744073709551591)) (= $generated@@430 ($generated@@162 23))) (and (=> (= (ControlFlow 0 138) (- 0 148)) (and (<= ($generated@@162 0) $generated@@430) (< $generated@@430 18446744073709551616))) (=> (and (<= ($generated@@162 0) $generated@@430) (< $generated@@430 18446744073709551616)) (=> (and (= $generated@@431 ($generated@@162 23)) (= $generated@@432 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))) (and (=> (= (ControlFlow 0 138) (- 0 147)) (not (= $generated@@431 0))) (=> (not (= $generated@@431 0)) (=> (and (and (and ($generated@@224 $generated@@433) ($generated@@226 $generated@@433)) (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@46) (=> (and (not (= $generated@@508 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@427 $generated@@508) $generated@@50))) (= ($generated@@49 $generated@@433 $generated@@508) ($generated@@49 $generated@@427 $generated@@508))))
 :pattern ( ($generated@@49 $generated@@433 $generated@@508))
))) (and ($generated@@44 $generated@@427 $generated@@433) (= $generated@@434 ($generated@@162 18446744073709551591)))) (and (=> (= (ControlFlow 0 138) (- 0 146)) (and (<= ($generated@@162 0) $generated@@434) (< $generated@@434 18446744073709551616))) (=> (and (<= ($generated@@162 0) $generated@@434) (< $generated@@434 18446744073709551616)) (=> (and (= $generated@@435 ($generated@@162 18446744073709551591)) (= $generated@@436 ($generated@@162 18446744073709551615))) (and (=> (= (ControlFlow 0 138) (- 0 145)) (and (<= ($generated@@162 0) $generated@@436) (< $generated@@436 18446744073709551616))) (=> (and (<= ($generated@@162 0) $generated@@436) (< $generated@@436 18446744073709551616)) (=> (and (= $generated@@437 ($generated@@162 18446744073709551615)) (= $generated@@438 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 10)))))) (and (=> (= (ControlFlow 0 138) (- 0 144)) (not (= $generated@@437 0))) (=> (not (= $generated@@437 0)) (=> (and (and (and ($generated@@224 $generated@@439) ($generated@@226 $generated@@439)) (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@46) (=> (and (not (= $generated@@509 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@433 $generated@@509) $generated@@50))) (= ($generated@@49 $generated@@439 $generated@@509) ($generated@@49 $generated@@433 $generated@@509))))
 :pattern ( ($generated@@49 $generated@@439 $generated@@509))
))) (and (and ($generated@@44 $generated@@433 $generated@@439) (= $generated@@222 ($generated@@162 103))) (and (= $generated@@221 ($generated@@162 13)) (= $generated@@440 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32)))))))) (and (=> (= (ControlFlow 0 138) (- 0 143)) (not (= $generated@@221 0))) (=> (not (= $generated@@221 0)) (=> (and ($generated@@224 $generated@@441) ($generated@@226 $generated@@441)) (=> (and (and (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@46) (=> (and (not (= $generated@@510 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@439 $generated@@510) $generated@@50))) (= ($generated@@49 $generated@@441 $generated@@510) ($generated@@49 $generated@@439 $generated@@510))))
 :pattern ( ($generated@@49 $generated@@441 $generated@@510))
)) ($generated@@44 $generated@@439 $generated@@441)) (and (= $generated@@442 (- 0 $generated@@222)) (= $generated@@443 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32))))))) (and (=> (= (ControlFlow 0 138) (- 0 142)) (not (= $generated@@221 0))) (=> (not (= $generated@@221 0)) (=> (and ($generated@@224 $generated@@444) ($generated@@226 $generated@@444)) (=> (and (and (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@46) (=> (and (not (= $generated@@511 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@441 $generated@@511) $generated@@50))) (= ($generated@@49 $generated@@444 $generated@@511) ($generated@@49 $generated@@441 $generated@@511))))
 :pattern ( ($generated@@49 $generated@@444 $generated@@511))
)) ($generated@@44 $generated@@441 $generated@@444)) (and (= $generated@@445 (- 0 $generated@@221)) (= $generated@@446 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 32))))))) (and (=> (= (ControlFlow 0 138) (- 0 141)) (not (= $generated@@445 0))) (=> (not (= $generated@@445 0)) (=> (and (and (and ($generated@@224 $generated@@447) ($generated@@226 $generated@@447)) (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@46) (=> (and (not (= $generated@@512 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@444 $generated@@512) $generated@@50))) (= ($generated@@49 $generated@@447 $generated@@512) ($generated@@49 $generated@@444 $generated@@512))))
 :pattern ( ($generated@@49 $generated@@447 $generated@@512))
))) (and (and ($generated@@44 $generated@@444 $generated@@447) (= $generated@@448 (- 0 $generated@@222))) (and (= $generated@@449 (- 0 $generated@@221)) (= $generated@@450 ($generated@@164 ($generated@@181 ($generated@@173 $generated@@199) ($generated@@197 ($generated@@168 10)))))))) (and (=> (= (ControlFlow 0 138) (- 0 140)) (not (= $generated@@449 0))) (=> (not (= $generated@@449 0)) (=> (and (and ($generated@@224 $generated@@228) ($generated@@226 $generated@@228)) (and (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@46) (=> (and (not (= $generated@@513 $generated@@227)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@447 $generated@@513) $generated@@50))) (= ($generated@@49 $generated@@228 $generated@@513) ($generated@@49 $generated@@447 $generated@@513))))
 :pattern ( ($generated@@49 $generated@@228 $generated@@513))
)) ($generated@@44 $generated@@447 $generated@@228))) (and (=> (= (ControlFlow 0 138) (- 0 139)) (not (= $generated@@221 0))) (and (=> (= (ControlFlow 0 138) 135) $generated@@500) (=> (= (ControlFlow 0 138) 137) $generated@@499))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@514  (=> (and ($generated@@224 $generated@@391) ($generated@@226 $generated@@391)) (=> (and (and (<= ($generated@@162 (- 0 128)) $generated@@451) (< $generated@@451 128)) true) (=> (and (and (and (and (and (<= ($generated@@162 (- 0 128)) $generated@@452) (< $generated@@452 128)) true) (and (and (<= ($generated@@162 (- 0 32768)) $generated@@453) (< $generated@@453 32768)) true)) (and (and (and (<= ($generated@@162 (- 0 32768)) $generated@@454) (< $generated@@454 32768)) true) (and (and (<= ($generated@@162 (- 0 2147483648)) $generated@@455) (< $generated@@455 2147483648)) true))) (and (and (and (and (<= ($generated@@162 (- 0 2147483648)) $generated@@456) (< $generated@@456 2147483648)) true) (and (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@457) (< $generated@@457 9223372036854775808)) true)) (and (and (and (<= ($generated@@162 (- 0 9223372036854775808)) $generated@@458) (< $generated@@458 9223372036854775808)) true) (and (= 3 $generated@@459) (= (ControlFlow 0 168) 138))))) $generated@@501)))))
$generated@@514)))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 ((_ BitVec 1)) T@U)
(declare-fun $generated@@136 (T@U) (_ BitVec 1))
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 ((_ BitVec 2)) T@U)
(declare-fun $generated@@144 (T@U) (_ BitVec 2))
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 ((_ BitVec 3)) T@U)
(declare-fun $generated@@152 (T@U) (_ BitVec 3))
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@159 ((_ BitVec 4)) T@U)
(declare-fun $generated@@160 (T@U) (_ BitVec 4))
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@167 ((_ BitVec 7)) T@U)
(declare-fun $generated@@168 (T@U) (_ BitVec 7))
(declare-fun $generated@@174 () T@T)
(declare-fun $generated@@175 ((_ BitVec 8)) T@U)
(declare-fun $generated@@176 (T@U) (_ BitVec 8))
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@183 ((_ BitVec 15)) T@U)
(declare-fun $generated@@184 (T@U) (_ BitVec 15))
(declare-fun $generated@@190 () T@T)
(declare-fun $generated@@191 ((_ BitVec 16)) T@U)
(declare-fun $generated@@192 (T@U) (_ BitVec 16))
(declare-fun $generated@@198 () T@T)
(declare-fun $generated@@199 ((_ BitVec 32)) T@U)
(declare-fun $generated@@200 (T@U) (_ BitVec 32))
(declare-fun $generated@@206 () T@T)
(declare-fun $generated@@207 ((_ BitVec 53)) T@U)
(declare-fun $generated@@208 (T@U) (_ BitVec 53))
(declare-fun $generated@@214 () T@T)
(declare-fun $generated@@215 ((_ BitVec 100)) T@U)
(declare-fun $generated@@216 (T@U) (_ BitVec 100))
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@238 () Int)
(declare-fun $generated@@239 (Int) Int)
(declare-fun $generated@@240 (Int) Bool)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 () T@T)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 () T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@267 (T@T T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@321 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@333 (T@U T@U) T@U)
(declare-fun $generated@@334 (T@U T@U) Bool)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) Bool)
(declare-fun $generated@@360 (T@U T@U T@U) Bool)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@372 (T@T) T@U)
(declare-fun $generated@@373 (T@U) Int)
(declare-fun $generated@@374 (T@T) T@T)
(declare-fun $generated@@375 (T@T) T@T)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@386 (T@U) Int)
(declare-fun $generated@@387 (T@T) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@T T@T) T@U)
(declare-fun $generated@@394 (T@T T@T) T@T)
(declare-fun $generated@@395 (T@T) T@T)
(declare-fun $generated@@396 (T@T) T@T)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@T T@T) T@U)
(declare-fun $generated@@412 (T@T T@T) T@T)
(declare-fun $generated@@413 (T@T) T@T)
(declare-fun $generated@@414 (T@T) T@T)
(declare-fun $generated@@431 (T@T T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@496 (T@U T@U) T@U)
(declare-fun $generated@@504 (T@U T@U) T@U)
(declare-fun $generated@@512 (T@T) T@U)
(declare-fun $generated@@536 () T@T)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@579 (T@U Int) T@U)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@616 (T@U) Int)
(declare-fun $generated@@617 (T@U) Int)
(declare-fun $generated@@633 (T@U) T@U)
(declare-fun $generated@@693 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (and (forall (($generated@@137 (_ BitVec 1)) ) (! (= ($generated@@136 ($generated@@135 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@135 $generated@@137))
)) (= ($generated@@1 $generated@@134) 14)) (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@134) (= ($generated@@135 ($generated@@136 $generated@@138)) $generated@@138))
 :pattern ( ($generated@@136 $generated@@138))
))) (forall (($generated@@139 (_ BitVec 1)) ) (! (= (type ($generated@@135 $generated@@139)) $generated@@134)
 :pattern ( ($generated@@135 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@134) (= (type $generated@@141) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@140 ($generated@@77 1) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140 ($generated@@77 1) $generated@@141))
)))
(assert  (and (and (and (forall (($generated@@145 (_ BitVec 2)) ) (! (= ($generated@@144 ($generated@@143 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@145))
)) (= ($generated@@1 $generated@@142) 15)) (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@142) (= ($generated@@143 ($generated@@144 $generated@@146)) $generated@@146))
 :pattern ( ($generated@@144 $generated@@146))
))) (forall (($generated@@147 (_ BitVec 2)) ) (! (= (type ($generated@@143 $generated@@147)) $generated@@142)
 :pattern ( ($generated@@143 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@142) (= (type $generated@@149) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@148 ($generated@@77 2) $generated@@149))
 :pattern ( ($generated@@76 $generated@@148 ($generated@@77 2) $generated@@149))
)))
(assert  (and (and (and (forall (($generated@@153 (_ BitVec 3)) ) (! (= ($generated@@152 ($generated@@151 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@153))
)) (= ($generated@@1 $generated@@150) 16)) (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@150) (= ($generated@@151 ($generated@@152 $generated@@154)) $generated@@154))
 :pattern ( ($generated@@152 $generated@@154))
))) (forall (($generated@@155 (_ BitVec 3)) ) (! (= (type ($generated@@151 $generated@@155)) $generated@@150)
 :pattern ( ($generated@@151 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@150) (= (type $generated@@157) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@156 ($generated@@77 3) $generated@@157))
 :pattern ( ($generated@@76 $generated@@156 ($generated@@77 3) $generated@@157))
)))
(assert  (and (and (and (forall (($generated@@161 (_ BitVec 4)) ) (! (= ($generated@@160 ($generated@@159 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@161))
)) (= ($generated@@1 $generated@@158) 17)) (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@158) (= ($generated@@159 ($generated@@160 $generated@@162)) $generated@@162))
 :pattern ( ($generated@@160 $generated@@162))
))) (forall (($generated@@163 (_ BitVec 4)) ) (! (= (type ($generated@@159 $generated@@163)) $generated@@158)
 :pattern ( ($generated@@159 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@158) (= (type $generated@@165) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@164 ($generated@@77 4) $generated@@165))
 :pattern ( ($generated@@76 $generated@@164 ($generated@@77 4) $generated@@165))
)))
(assert  (and (and (and (forall (($generated@@169 (_ BitVec 7)) ) (! (= ($generated@@168 ($generated@@167 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@169))
)) (= ($generated@@1 $generated@@166) 18)) (forall (($generated@@170 T@U) ) (!  (=> (= (type $generated@@170) $generated@@166) (= ($generated@@167 ($generated@@168 $generated@@170)) $generated@@170))
 :pattern ( ($generated@@168 $generated@@170))
))) (forall (($generated@@171 (_ BitVec 7)) ) (! (= (type ($generated@@167 $generated@@171)) $generated@@166)
 :pattern ( ($generated@@167 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (= (type $generated@@172) $generated@@166) (= (type $generated@@173) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@172 ($generated@@77 7) $generated@@173))
 :pattern ( ($generated@@76 $generated@@172 ($generated@@77 7) $generated@@173))
)))
(assert  (and (and (and (forall (($generated@@177 (_ BitVec 8)) ) (! (= ($generated@@176 ($generated@@175 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@177))
)) (= ($generated@@1 $generated@@174) 19)) (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@174) (= ($generated@@175 ($generated@@176 $generated@@178)) $generated@@178))
 :pattern ( ($generated@@176 $generated@@178))
))) (forall (($generated@@179 (_ BitVec 8)) ) (! (= (type ($generated@@175 $generated@@179)) $generated@@174)
 :pattern ( ($generated@@175 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (= (type $generated@@180) $generated@@174) (= (type $generated@@181) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@180 ($generated@@77 8) $generated@@181))
 :pattern ( ($generated@@76 $generated@@180 ($generated@@77 8) $generated@@181))
)))
(assert  (and (and (and (forall (($generated@@185 (_ BitVec 15)) ) (! (= ($generated@@184 ($generated@@183 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@185))
)) (= ($generated@@1 $generated@@182) 20)) (forall (($generated@@186 T@U) ) (!  (=> (= (type $generated@@186) $generated@@182) (= ($generated@@183 ($generated@@184 $generated@@186)) $generated@@186))
 :pattern ( ($generated@@184 $generated@@186))
))) (forall (($generated@@187 (_ BitVec 15)) ) (! (= (type ($generated@@183 $generated@@187)) $generated@@182)
 :pattern ( ($generated@@183 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (= (type $generated@@188) $generated@@182) (= (type $generated@@189) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@188 ($generated@@77 15) $generated@@189))
 :pattern ( ($generated@@76 $generated@@188 ($generated@@77 15) $generated@@189))
)))
(assert  (and (and (and (forall (($generated@@193 (_ BitVec 16)) ) (! (= ($generated@@192 ($generated@@191 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@191 $generated@@193))
)) (= ($generated@@1 $generated@@190) 21)) (forall (($generated@@194 T@U) ) (!  (=> (= (type $generated@@194) $generated@@190) (= ($generated@@191 ($generated@@192 $generated@@194)) $generated@@194))
 :pattern ( ($generated@@192 $generated@@194))
))) (forall (($generated@@195 (_ BitVec 16)) ) (! (= (type ($generated@@191 $generated@@195)) $generated@@190)
 :pattern ( ($generated@@191 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (= (type $generated@@196) $generated@@190) (= (type $generated@@197) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@196 ($generated@@77 16) $generated@@197))
 :pattern ( ($generated@@76 $generated@@196 ($generated@@77 16) $generated@@197))
)))
(assert  (and (and (and (forall (($generated@@201 (_ BitVec 32)) ) (! (= ($generated@@200 ($generated@@199 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@199 $generated@@201))
)) (= ($generated@@1 $generated@@198) 22)) (forall (($generated@@202 T@U) ) (!  (=> (= (type $generated@@202) $generated@@198) (= ($generated@@199 ($generated@@200 $generated@@202)) $generated@@202))
 :pattern ( ($generated@@200 $generated@@202))
))) (forall (($generated@@203 (_ BitVec 32)) ) (! (= (type ($generated@@199 $generated@@203)) $generated@@198)
 :pattern ( ($generated@@199 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (= (type $generated@@204) $generated@@198) (= (type $generated@@205) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@204 ($generated@@77 32) $generated@@205))
 :pattern ( ($generated@@76 $generated@@204 ($generated@@77 32) $generated@@205))
)))
(assert  (and (and (and (forall (($generated@@209 (_ BitVec 53)) ) (! (= ($generated@@208 ($generated@@207 $generated@@209)) $generated@@209)
 :pattern ( ($generated@@207 $generated@@209))
)) (= ($generated@@1 $generated@@206) 23)) (forall (($generated@@210 T@U) ) (!  (=> (= (type $generated@@210) $generated@@206) (= ($generated@@207 ($generated@@208 $generated@@210)) $generated@@210))
 :pattern ( ($generated@@208 $generated@@210))
))) (forall (($generated@@211 (_ BitVec 53)) ) (! (= (type ($generated@@207 $generated@@211)) $generated@@206)
 :pattern ( ($generated@@207 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) $generated@@206) (= (type $generated@@213) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@212 ($generated@@77 53) $generated@@213))
 :pattern ( ($generated@@76 $generated@@212 ($generated@@77 53) $generated@@213))
)))
(assert  (and (and (and (forall (($generated@@217 (_ BitVec 100)) ) (! (= ($generated@@216 ($generated@@215 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@215 $generated@@217))
)) (= ($generated@@1 $generated@@214) 24)) (forall (($generated@@218 T@U) ) (!  (=> (= (type $generated@@218) $generated@@214) (= ($generated@@215 ($generated@@216 $generated@@218)) $generated@@218))
 :pattern ( ($generated@@216 $generated@@218))
))) (forall (($generated@@219 (_ BitVec 100)) ) (! (= (type ($generated@@215 $generated@@219)) $generated@@214)
 :pattern ( ($generated@@215 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (= (type $generated@@220) $generated@@214) (= (type $generated@@221) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@220 ($generated@@77 100) $generated@@221))
 :pattern ( ($generated@@76 $generated@@220 ($generated@@77 100) $generated@@221))
)))
(assert (= (type $generated@@222) $generated@@66))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@2) (= (type $generated@@224) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@223 $generated@@222 $generated@@224))
 :pattern ( ($generated@@76 $generated@@223 $generated@@222 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@2) ($generated@@225 $generated@@226 ($generated@@77 0)))
 :pattern ( ($generated@@225 $generated@@226 ($generated@@77 0)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@134) ($generated@@225 $generated@@227 ($generated@@77 1)))
 :pattern ( ($generated@@225 $generated@@227 ($generated@@77 1)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@142) ($generated@@225 $generated@@228 ($generated@@77 2)))
 :pattern ( ($generated@@225 $generated@@228 ($generated@@77 2)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@150) ($generated@@225 $generated@@229 ($generated@@77 3)))
 :pattern ( ($generated@@225 $generated@@229 ($generated@@77 3)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@158) ($generated@@225 $generated@@230 ($generated@@77 4)))
 :pattern ( ($generated@@225 $generated@@230 ($generated@@77 4)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@166) ($generated@@225 $generated@@231 ($generated@@77 7)))
 :pattern ( ($generated@@225 $generated@@231 ($generated@@77 7)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@174) ($generated@@225 $generated@@232 ($generated@@77 8)))
 :pattern ( ($generated@@225 $generated@@232 ($generated@@77 8)))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (= (type $generated@@233) $generated@@182) ($generated@@225 $generated@@233 ($generated@@77 15)))
 :pattern ( ($generated@@225 $generated@@233 ($generated@@77 15)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (= (type $generated@@234) $generated@@190) ($generated@@225 $generated@@234 ($generated@@77 16)))
 :pattern ( ($generated@@225 $generated@@234 ($generated@@77 16)))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@198) ($generated@@225 $generated@@235 ($generated@@77 32)))
 :pattern ( ($generated@@225 $generated@@235 ($generated@@77 32)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@206) ($generated@@225 $generated@@236 ($generated@@77 53)))
 :pattern ( ($generated@@225 $generated@@236 ($generated@@77 53)))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (= (type $generated@@237) $generated@@214) ($generated@@225 $generated@@237 ($generated@@77 100)))
 :pattern ( ($generated@@225 $generated@@237 ($generated@@77 100)))
)))
(assert  (=> (<= 1 $generated@@238) (forall (($generated@@242 Int) ) (!  (=> (or ($generated@@240 $generated@@242) (not (= 1 $generated@@238))) (<= ($generated@@241 0) ($generated@@239 $generated@@242)))
 :pattern ( ($generated@@239 $generated@@242))
))))
(assert  (=> (<= 1 $generated@@238) (forall (($generated@@243 Int) ) (!  (=> (or ($generated@@240 $generated@@243) (not (= 1 $generated@@238))) (= ($generated@@239 $generated@@243) (ite (< $generated@@243 0) (- 0 $generated@@243) $generated@@243)))
 :pattern ( ($generated@@239 $generated@@243))
))))
(assert  (and (= ($generated@@1 $generated@@246) 25) (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@66)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
))))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@66) (= (type $generated@@250) $generated@@66)) (= (type $generated@@251) $generated@@246)) ($generated@@225 $generated@@251 ($generated@@245 $generated@@249 $generated@@250))) ($generated@@244 $generated@@251))
 :pattern ( ($generated@@244 $generated@@251) ($generated@@225 $generated@@251 ($generated@@245 $generated@@249 $generated@@250)))
)))
(assert  (and (and (= ($generated@@1 $generated@@255) 26) (forall (($generated@@256 T@U) ) (! (= (type ($generated@@253 $generated@@256)) $generated@@255)
 :pattern ( ($generated@@253 $generated@@256))
))) (forall (($generated@@257 T@U) ) (! (= (type ($generated@@254 $generated@@257)) $generated@@255)
 :pattern ( ($generated@@254 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@258) $generated@@246) (= (type $generated@@259) $generated@@246)) true) (= ($generated@@252 $generated@@258 $generated@@259)  (and (= ($generated@@253 $generated@@258) ($generated@@253 $generated@@259)) (= ($generated@@254 $generated@@258) ($generated@@254 $generated@@259)))))
 :pattern ( ($generated@@252 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@260 $generated@@262)) $generated@@66)
 :pattern ( ($generated@@260 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) ($generated@@78 $generated@@255 $generated@@2)) (= (type $generated@@264) $generated@@66)) ($generated@@225 $generated@@263 ($generated@@260 $generated@@264))) ($generated@@261 $generated@@263))
 :pattern ( ($generated@@225 $generated@@263 ($generated@@260 $generated@@264)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@271 T@T) ($generated@@272 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@271 $generated@@272)) 27)) (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@273 $generated@@274)) $generated@@273)
 :pattern ( ($generated@@267 $generated@@273 $generated@@274))
))) (forall (($generated@@275 T@T) ($generated@@276 T@T) ) (! (= ($generated@@269 ($generated@@267 $generated@@275 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@267 $generated@@275 $generated@@276))
))) (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@269 (type $generated@@277))))
(= (type ($generated@@265 $generated@@277 $generated@@278 $generated@@279)) $generated@@280))
 :pattern ( ($generated@@265 $generated@@277 $generated@@278 $generated@@279))
))) (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (! (let (($generated@@285 (type $generated@@284)))
(let (($generated@@286 (type $generated@@282)))
(= (type ($generated@@270 $generated@@281 $generated@@282 $generated@@283 $generated@@284)) ($generated@@267 $generated@@286 $generated@@285))))
 :pattern ( ($generated@@270 $generated@@281 $generated@@282 $generated@@283 $generated@@284))
))) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@269 (type $generated@@287))))
 (=> (= (type $generated@@290) $generated@@291) (= ($generated@@265 ($generated@@270 $generated@@287 $generated@@288 $generated@@289 $generated@@290) $generated@@288 $generated@@289) $generated@@290)))
 :weight 0
))) (and (and (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (or (= $generated@@294 $generated@@296) (= ($generated@@265 ($generated@@270 $generated@@293 $generated@@294 $generated@@295 $generated@@292) $generated@@296 $generated@@297) ($generated@@265 $generated@@293 $generated@@296 $generated@@297)))
 :weight 0
)) (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (or (= $generated@@301 $generated@@303) (= ($generated@@265 ($generated@@270 $generated@@299 $generated@@300 $generated@@301 $generated@@298) $generated@@302 $generated@@303) ($generated@@265 $generated@@299 $generated@@302 $generated@@303)))
 :weight 0
))) (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (or true (= ($generated@@265 ($generated@@270 $generated@@305 $generated@@306 $generated@@307 $generated@@304) $generated@@308 $generated@@309) ($generated@@265 $generated@@305 $generated@@308 $generated@@309)))
 :weight 0
)))) (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 Bool) ) (! (= (type ($generated@@266 $generated@@310 $generated@@311 $generated@@312 $generated@@313)) ($generated@@267 $generated@@79 $generated@@4))
 :pattern ( ($generated@@266 $generated@@310 $generated@@311 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 Bool) ($generated@@318 T@U) ($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@69 (type $generated@@319))))
 (=> (and (and (and (and (= (type $generated@@314) $generated@@79) (= (type $generated@@315) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@316) ($generated@@68 $generated@@4))) (= (type $generated@@318) $generated@@79)) (= (type $generated@@319) ($generated@@68 $generated@@320))) (= ($generated@@0 ($generated@@265 ($generated@@266 $generated@@314 $generated@@315 $generated@@316 $generated@@317) $generated@@318 $generated@@319))  (=> (and (not (= $generated@@318 $generated@@314)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@315 $generated@@318) $generated@@316))) $generated@@317))))
 :pattern ( ($generated@@265 ($generated@@266 $generated@@314 $generated@@315 $generated@@316 $generated@@317) $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 Bool) ) (! (= (type ($generated@@321 $generated@@322 $generated@@323 $generated@@324 $generated@@325)) ($generated@@267 $generated@@79 $generated@@4))
 :pattern ( ($generated@@321 $generated@@322 $generated@@323 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 Bool) ($generated@@330 T@U) ($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@69 (type $generated@@331))))
 (=> (and (and (and (and (= (type $generated@@326) $generated@@79) (= (type $generated@@327) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@328) ($generated@@68 $generated@@4))) (= (type $generated@@330) $generated@@79)) (= (type $generated@@331) ($generated@@68 $generated@@332))) (= ($generated@@0 ($generated@@265 ($generated@@321 $generated@@326 $generated@@327 $generated@@328 $generated@@329) $generated@@330 $generated@@331))  (=> (and (not (= $generated@@330 $generated@@326)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@327 $generated@@330) $generated@@328))) $generated@@329))))
 :pattern ( ($generated@@265 ($generated@@321 $generated@@326 $generated@@327 $generated@@328 $generated@@329) $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (! (= (type ($generated@@333 $generated@@335 $generated@@336)) $generated@@246)
 :pattern ( ($generated@@333 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (and (= (type $generated@@337) $generated@@66) (= (type $generated@@338) $generated@@66)) (= (type $generated@@339) $generated@@255)) (= (type $generated@@340) $generated@@255)) (= ($generated@@225 ($generated@@333 $generated@@339 $generated@@340) ($generated@@245 $generated@@337 $generated@@338))  (and ($generated@@334 $generated@@339 $generated@@337) ($generated@@334 $generated@@340 $generated@@338))))
 :pattern ( ($generated@@225 ($generated@@333 $generated@@339 $generated@@340) ($generated@@245 $generated@@337 $generated@@338)))
)))
(assert  (=> (<= 1 $generated@@238) (forall (($generated@@341 Int) ) (!  (=> (or ($generated@@240 ($generated@@241 $generated@@341)) (not (= 1 $generated@@238))) (= ($generated@@239 ($generated@@241 $generated@@341)) (ite (< $generated@@341 0) (- 0 $generated@@341) $generated@@341)))
 :weight 3
 :pattern ( ($generated@@239 ($generated@@241 $generated@@341)))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@246) (= (type $generated@@343) $generated@@246)) (= ($generated@@252 $generated@@342 $generated@@343) (= $generated@@342 $generated@@343)))
 :pattern ( ($generated@@252 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@66)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@78 $generated@@255 $generated@@4)) (= (type $generated@@347) $generated@@66)) (= ($generated@@225 $generated@@346 ($generated@@344 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@255) ($generated@@0 ($generated@@83 $generated@@346 $generated@@348))) ($generated@@334 $generated@@348 $generated@@347))
 :pattern ( ($generated@@83 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@225 $generated@@346 ($generated@@344 $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@66)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@78 $generated@@255 $generated@@4)) (= (type $generated@@352) $generated@@66)) (= ($generated@@225 $generated@@351 ($generated@@349 $generated@@352)) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@255) ($generated@@0 ($generated@@83 $generated@@351 $generated@@353))) ($generated@@334 $generated@@353 $generated@@352))
 :pattern ( ($generated@@83 $generated@@351 $generated@@353))
))))
 :pattern ( ($generated@@225 $generated@@351 ($generated@@349 $generated@@352)))
)))
(assert (forall (($generated@@354 Int) ) (! (= ($generated@@241 $generated@@354) $generated@@354)
 :pattern ( ($generated@@241 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 (type $generated@@356)))
(= (type ($generated@@355 $generated@@356)) $generated@@357))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (= ($generated@@355 $generated@@358) $generated@@358)
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@361) $generated@@66) (= (type $generated@@362) $generated@@66)) (= (type $generated@@363) $generated@@255)) (= (type $generated@@364) $generated@@255)) (= (type $generated@@365) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@359 $generated@@365)) (= ($generated@@76 ($generated@@333 $generated@@363 $generated@@364) ($generated@@245 $generated@@361 $generated@@362) $generated@@365)  (and ($generated@@360 $generated@@363 $generated@@361 $generated@@365) ($generated@@360 $generated@@364 $generated@@362 $generated@@365))))
 :pattern ( ($generated@@76 ($generated@@333 $generated@@363 $generated@@364) ($generated@@245 $generated@@361 $generated@@362) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (= (type ($generated@@366 $generated@@367)) $generated@@70)
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@246) (= ($generated@@244 $generated@@368) (= ($generated@@366 $generated@@368) $generated@@62)))
 :pattern ( ($generated@@244 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@246) ($generated@@244 $generated@@369)) (exists (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (and (and (= (type $generated@@370) $generated@@255) (= (type $generated@@371) $generated@@255)) (= $generated@@369 ($generated@@333 $generated@@370 $generated@@371)))
 :no-pattern (type $generated@@370)
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
)))
 :pattern ( ($generated@@244 $generated@@369))
)))
(assert  (and (and (forall (($generated@@376 T@T) ) (= ($generated@@1 ($generated@@374 $generated@@376)) 28)) (forall (($generated@@377 T@T) ) (! (= ($generated@@375 ($generated@@374 $generated@@377)) $generated@@377)
 :pattern ( ($generated@@374 $generated@@377))
))) (forall (($generated@@378 T@T) ) (! (= (type ($generated@@372 $generated@@378)) ($generated@@374 $generated@@378))
 :pattern ( ($generated@@372 $generated@@378))
))))
(assert (forall (($generated@@379 T@T) ) (! (= ($generated@@373 ($generated@@372 $generated@@379)) 0)
 :pattern ( ($generated@@372 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@2) (= ($generated@@225 $generated@@380 $generated@@222) (<= ($generated@@241 0) ($generated $generated@@380))))
 :pattern ( ($generated@@225 $generated@@380 $generated@@222))
)))
(assert (forall (($generated@@382 T@U) ) (! (= (type ($generated@@381 $generated@@382)) $generated@@255)
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@66) (= (type $generated@@385) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@360 ($generated@@381 $generated@@383) $generated@@384 $generated@@385) ($generated@@76 $generated@@383 $generated@@384 $generated@@385)))
 :pattern ( ($generated@@360 ($generated@@381 $generated@@383) $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@388 T@T) ) (! (= (type ($generated@@387 $generated@@388)) ($generated@@78 $generated@@388 $generated@@2))
 :pattern ( ($generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@81 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@78 $generated@@390 $generated@@2)) (and (= (= ($generated@@386 $generated@@389) 0) (= $generated@@389 ($generated@@387 $generated@@390))) (=> (not (= ($generated@@386 $generated@@389) 0)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (< 0 ($generated ($generated@@83 $generated@@389 $generated@@391))))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert  (and (and (and (and (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (= ($generated@@1 ($generated@@394 $generated@@397 $generated@@398)) 29)) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= ($generated@@395 ($generated@@394 $generated@@399 $generated@@400)) $generated@@399)
 :pattern ( ($generated@@394 $generated@@399 $generated@@400))
))) (forall (($generated@@401 T@T) ($generated@@402 T@T) ) (! (= ($generated@@396 ($generated@@394 $generated@@401 $generated@@402)) $generated@@402)
 :pattern ( ($generated@@394 $generated@@401 $generated@@402))
))) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@395 (type $generated@@403))))
(= (type ($generated@@392 $generated@@403)) ($generated@@78 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@403))
))) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= (type ($generated@@393 $generated@@405 $generated@@406)) ($generated@@394 $generated@@405 $generated@@406))
 :pattern ( ($generated@@393 $generated@@405 $generated@@406))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@T) ) (! (let (($generated@@409 (type $generated@@407)))
 (not ($generated@@0 ($generated@@83 ($generated@@392 ($generated@@393 $generated@@409 $generated@@408)) $generated@@407))))
 :pattern ( (let (($generated@@409 (type $generated@@407)))
($generated@@83 ($generated@@392 ($generated@@393 $generated@@409 $generated@@408)) $generated@@407)))
)))
(assert  (and (and (and (and (forall (($generated@@415 T@T) ($generated@@416 T@T) ) (= ($generated@@1 ($generated@@412 $generated@@415 $generated@@416)) 30)) (forall (($generated@@417 T@T) ($generated@@418 T@T) ) (! (= ($generated@@413 ($generated@@412 $generated@@417 $generated@@418)) $generated@@417)
 :pattern ( ($generated@@412 $generated@@417 $generated@@418))
))) (forall (($generated@@419 T@T) ($generated@@420 T@T) ) (! (= ($generated@@414 ($generated@@412 $generated@@419 $generated@@420)) $generated@@420)
 :pattern ( ($generated@@412 $generated@@419 $generated@@420))
))) (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@413 (type $generated@@421))))
(= (type ($generated@@410 $generated@@421)) ($generated@@78 $generated@@422 $generated@@4)))
 :pattern ( ($generated@@410 $generated@@421))
))) (forall (($generated@@423 T@T) ($generated@@424 T@T) ) (! (= (type ($generated@@411 $generated@@423 $generated@@424)) ($generated@@412 $generated@@423 $generated@@424))
 :pattern ( ($generated@@411 $generated@@423 $generated@@424))
))))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@T) ) (! (let (($generated@@427 (type $generated@@425)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 ($generated@@411 $generated@@427 $generated@@426)) $generated@@425))))
 :pattern ( (let (($generated@@427 (type $generated@@425)))
($generated@@83 ($generated@@410 ($generated@@411 $generated@@427 $generated@@426)) $generated@@425)))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@81 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@78 $generated@@429 $generated@@2)) (= ($generated@@261 $generated@@428) (forall (($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@429) (and (<= 0 ($generated ($generated@@83 $generated@@428 $generated@@430))) (<= ($generated ($generated@@83 $generated@@428 $generated@@430)) ($generated@@386 $generated@@428))))
 :pattern ( ($generated@@83 $generated@@428 $generated@@430))
)))))
 :pattern ( ($generated@@261 $generated@@428))
)))
(assert (forall (($generated@@432 T@T) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@432)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@255) ($generated@@334 $generated@@434 $generated@@222)) (and (= ($generated@@381 ($generated@@431 $generated@@2 $generated@@434)) $generated@@434) ($generated@@225 ($generated@@431 $generated@@2 $generated@@434) $generated@@222)))
 :pattern ( ($generated@@334 $generated@@434 $generated@@222))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@396 (type $generated@@435))))
(let (($generated@@437 ($generated@@395 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@394 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@393 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ) (!  (and (= (type $generated@@438) $generated@@437) ($generated@@0 ($generated@@83 ($generated@@392 $generated@@435) $generated@@438)))
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@392 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@396 (type $generated@@440))))
(= (type ($generated@@439 $generated@@440)) ($generated@@78 $generated@@441 $generated@@4)))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@396 (type $generated@@442))))
(let (($generated@@444 ($generated@@395 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@394 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@393 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@443) ($generated@@0 ($generated@@83 ($generated@@439 $generated@@442) $generated@@445)))
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@439 $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@414 (type $generated@@446))))
(let (($generated@@448 ($generated@@413 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@412 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@411 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) ($generated@@0 ($generated@@83 ($generated@@410 $generated@@446) $generated@@449)))
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@410 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@414 (type $generated@@451))))
(= (type ($generated@@450 $generated@@451)) ($generated@@78 $generated@@452 $generated@@4)))
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@414 (type $generated@@453))))
(let (($generated@@455 ($generated@@413 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@412 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@411 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@454) ($generated@@0 ($generated@@83 ($generated@@450 $generated@@453) $generated@@456)))
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@450 $generated@@453))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) ($generated@@78 $generated@@255 $generated@@2)) (= (type $generated@@458) $generated@@66)) (= ($generated@@225 $generated@@457 ($generated@@260 $generated@@458)) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@255) (< 0 ($generated ($generated@@83 $generated@@457 $generated@@459)))) ($generated@@334 $generated@@459 $generated@@458))
 :pattern ( ($generated@@83 $generated@@457 $generated@@459))
))))
 :pattern ( ($generated@@225 $generated@@457 ($generated@@260 $generated@@458)))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@78 $generated@@255 $generated@@4)) (= (type $generated@@461) $generated@@66)) (= (type $generated@@462) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@460 ($generated@@344 $generated@@461) $generated@@462) (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@255) ($generated@@0 ($generated@@83 $generated@@460 $generated@@463))) ($generated@@360 $generated@@463 $generated@@461 $generated@@462))
 :pattern ( ($generated@@83 $generated@@460 $generated@@463))
))))
 :pattern ( ($generated@@76 $generated@@460 ($generated@@344 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@464) ($generated@@78 $generated@@255 $generated@@4)) (= (type $generated@@465) $generated@@66)) (= (type $generated@@466) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@464 ($generated@@349 $generated@@465) $generated@@466) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@255) ($generated@@0 ($generated@@83 $generated@@464 $generated@@467))) ($generated@@360 $generated@@467 $generated@@465 $generated@@466))
 :pattern ( ($generated@@83 $generated@@464 $generated@@467))
))))
 :pattern ( ($generated@@76 $generated@@464 ($generated@@349 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 (type $generated@@468)))
(= ($generated ($generated@@83 ($generated@@387 $generated@@469) $generated@@468)) 0))
 :pattern ( (let (($generated@@469 (type $generated@@468)))
($generated@@83 ($generated@@387 $generated@@469) $generated@@468)))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) ($generated@@78 $generated@@255 $generated@@4))
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@396 (type $generated@@473))))
(let (($generated@@475 ($generated@@395 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473)) ($generated@@78 $generated@@475 $generated@@474))))
 :pattern ( ($generated@@471 $generated@@473))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) ($generated@@394 $generated@@255 $generated@@255)) (= (type $generated@@477) $generated@@255)) (= ($generated@@0 ($generated@@83 ($generated@@470 $generated@@476) $generated@@477))  (and ($generated@@0 ($generated@@83 ($generated@@392 $generated@@476) ($generated@@253 ($generated@@431 $generated@@246 $generated@@477)))) (= ($generated@@83 ($generated@@471 $generated@@476) ($generated@@253 ($generated@@431 $generated@@246 $generated@@477))) ($generated@@254 ($generated@@431 $generated@@246 $generated@@477))))))
 :pattern ( ($generated@@83 ($generated@@470 $generated@@476) $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) ($generated@@78 $generated@@255 $generated@@4))
 :pattern ( ($generated@@478 $generated@@480))
)) (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@414 (type $generated@@481))))
(let (($generated@@483 ($generated@@413 (type $generated@@481))))
(= (type ($generated@@479 $generated@@481)) ($generated@@78 $generated@@483 $generated@@482))))
 :pattern ( ($generated@@479 $generated@@481))
))))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) ($generated@@412 $generated@@255 $generated@@255)) (= (type $generated@@485) $generated@@255)) (= ($generated@@0 ($generated@@83 ($generated@@478 $generated@@484) $generated@@485))  (and ($generated@@0 ($generated@@83 ($generated@@410 $generated@@484) ($generated@@253 ($generated@@431 $generated@@246 $generated@@485)))) (= ($generated@@83 ($generated@@479 $generated@@484) ($generated@@253 ($generated@@431 $generated@@246 $generated@@485))) ($generated@@254 ($generated@@431 $generated@@246 $generated@@485))))))
 :pattern ( ($generated@@83 ($generated@@478 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (! (let (($generated@@488 (type $generated@@487)))
(let (($generated@@489 ($generated@@395 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@394 $generated@@489 $generated@@488)) (= ($generated@@0 ($generated@@83 ($generated@@439 $generated@@486) $generated@@487)) (exists (($generated@@490 T@U) ) (!  (and (= (type $generated@@490) $generated@@489) (and ($generated@@0 ($generated@@83 ($generated@@392 $generated@@486) $generated@@490)) (= $generated@@487 ($generated@@83 ($generated@@471 $generated@@486) $generated@@490))))
 :pattern ( ($generated@@83 ($generated@@392 $generated@@486) $generated@@490))
 :pattern ( ($generated@@83 ($generated@@471 $generated@@486) $generated@@490))
))))))
 :pattern ( ($generated@@83 ($generated@@439 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (! (let (($generated@@493 (type $generated@@492)))
(let (($generated@@494 ($generated@@413 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@412 $generated@@494 $generated@@493)) (= ($generated@@0 ($generated@@83 ($generated@@450 $generated@@491) $generated@@492)) (exists (($generated@@495 T@U) ) (!  (and (= (type $generated@@495) $generated@@494) (and ($generated@@0 ($generated@@83 ($generated@@410 $generated@@491) $generated@@495)) (= $generated@@492 ($generated@@83 ($generated@@479 $generated@@491) $generated@@495))))
 :pattern ( ($generated@@83 ($generated@@410 $generated@@491) $generated@@495))
 :pattern ( ($generated@@83 ($generated@@479 $generated@@491) $generated@@495))
))))))
 :pattern ( ($generated@@83 ($generated@@450 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@499) ($generated@@394 $generated@@255 $generated@@255)) (= (type $generated@@500) $generated@@66)) (= (type $generated@@501) $generated@@66)) (= (type $generated@@502) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@499 ($generated@@496 $generated@@500 $generated@@501) $generated@@502) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@255) ($generated@@0 ($generated@@83 ($generated@@392 $generated@@499) $generated@@503))) (and ($generated@@360 ($generated@@83 ($generated@@471 $generated@@499) $generated@@503) $generated@@501 $generated@@502) ($generated@@360 $generated@@503 $generated@@500 $generated@@502)))
 :pattern ( ($generated@@83 ($generated@@471 $generated@@499) $generated@@503))
 :pattern ( ($generated@@83 ($generated@@392 $generated@@499) $generated@@503))
))))
 :pattern ( ($generated@@76 $generated@@499 ($generated@@496 $generated@@500 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) ($generated@@412 $generated@@255 $generated@@255)) (= (type $generated@@508) $generated@@66)) (= (type $generated@@509) $generated@@66)) (= (type $generated@@510) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@507 ($generated@@504 $generated@@508 $generated@@509) $generated@@510) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@255) ($generated@@0 ($generated@@83 ($generated@@410 $generated@@507) $generated@@511))) (and ($generated@@360 ($generated@@83 ($generated@@479 $generated@@507) $generated@@511) $generated@@509 $generated@@510) ($generated@@360 $generated@@511 $generated@@508 $generated@@510)))
 :pattern ( ($generated@@83 ($generated@@479 $generated@@507) $generated@@511))
 :pattern ( ($generated@@83 ($generated@@410 $generated@@507) $generated@@511))
))))
 :pattern ( ($generated@@76 $generated@@507 ($generated@@504 $generated@@508 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 T@T) ) (! (= (type ($generated@@512 $generated@@513)) ($generated@@78 $generated@@513 $generated@@4))
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@414 (type $generated@@514))))
(let (($generated@@516 ($generated@@413 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@412 $generated@@516 $generated@@515)) (= (= $generated@@514 ($generated@@411 $generated@@516 $generated@@515)) (= ($generated@@410 $generated@@514) ($generated@@512 $generated@@516))))))
 :pattern ( ($generated@@410 $generated@@514))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@414 (type $generated@@517))))
(let (($generated@@519 ($generated@@413 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@412 $generated@@519 $generated@@518)) (= (= $generated@@517 ($generated@@411 $generated@@519 $generated@@518)) (= ($generated@@450 $generated@@517) ($generated@@512 $generated@@518))))))
 :pattern ( ($generated@@450 $generated@@517))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@414 (type $generated@@520))))
(let (($generated@@522 ($generated@@413 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@412 $generated@@522 $generated@@521)) (= (= $generated@@520 ($generated@@411 $generated@@522 $generated@@521)) (= ($generated@@478 $generated@@520) ($generated@@512 $generated@@255))))))
 :pattern ( ($generated@@478 $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@396 (type $generated@@523))))
(let (($generated@@525 ($generated@@395 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@394 $generated@@525 $generated@@524)) (or (= $generated@@523 ($generated@@393 $generated@@525 $generated@@524)) (exists (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (and (and (= (type $generated@@526) $generated@@255) (= (type $generated@@527) $generated@@255)) ($generated@@0 ($generated@@83 ($generated@@470 $generated@@523) ($generated@@381 ($generated@@333 $generated@@526 $generated@@527)))))
 :no-pattern (type $generated@@526)
 :no-pattern (type $generated@@527)
 :no-pattern ($generated $generated@@526)
 :no-pattern ($generated@@0 $generated@@526)
 :no-pattern ($generated $generated@@527)
 :no-pattern ($generated@@0 $generated@@527)
))))))
 :pattern ( ($generated@@470 $generated@@523))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@414 (type $generated@@528))))
(let (($generated@@530 ($generated@@413 (type $generated@@528))))
 (=> (= (type $generated@@528) ($generated@@412 $generated@@530 $generated@@529)) (or (= $generated@@528 ($generated@@411 $generated@@530 $generated@@529)) (exists (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (and (and (= (type $generated@@531) $generated@@255) (= (type $generated@@532) $generated@@255)) ($generated@@0 ($generated@@83 ($generated@@478 $generated@@528) ($generated@@381 ($generated@@333 $generated@@531 $generated@@532)))))
 :no-pattern (type $generated@@531)
 :no-pattern (type $generated@@532)
 :no-pattern ($generated $generated@@531)
 :no-pattern ($generated@@0 $generated@@531)
 :no-pattern ($generated $generated@@532)
 :no-pattern ($generated@@0 $generated@@532)
))))))
 :pattern ( ($generated@@478 $generated@@528))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@255) ($generated@@334 $generated@@533 $generated@@46)) (and (= ($generated@@381 ($generated@@431 $generated@@2 $generated@@533)) $generated@@533) ($generated@@225 ($generated@@431 $generated@@2 $generated@@533) $generated@@46)))
 :pattern ( ($generated@@334 $generated@@533 $generated@@46))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@255) ($generated@@334 $generated@@534 $generated@@47)) (and (= ($generated@@381 ($generated@@431 $generated@@3 $generated@@534)) $generated@@534) ($generated@@225 ($generated@@431 $generated@@3 $generated@@534) $generated@@47)))
 :pattern ( ($generated@@334 $generated@@534 $generated@@47))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@255) ($generated@@334 $generated@@535 $generated@@44)) (and (= ($generated@@381 ($generated@@431 $generated@@4 $generated@@535)) $generated@@535) ($generated@@225 ($generated@@431 $generated@@4 $generated@@535) $generated@@44)))
 :pattern ( ($generated@@334 $generated@@535 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@536) 31))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@255) ($generated@@334 $generated@@537 $generated@@45)) (and (= ($generated@@381 ($generated@@431 $generated@@536 $generated@@537)) $generated@@537) ($generated@@225 ($generated@@431 $generated@@536 $generated@@537) $generated@@45)))
 :pattern ( ($generated@@334 $generated@@537 $generated@@45))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@66) (= ($generated@@334 ($generated@@381 $generated@@538) $generated@@539) ($generated@@225 $generated@@538 $generated@@539)))
 :pattern ( ($generated@@334 ($generated@@381 $generated@@538) $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@81 (type $generated@@540))))
 (=> (= (type $generated@@540) ($generated@@78 $generated@@541 $generated@@2)) (<= 0 ($generated@@386 $generated@@540))))
 :pattern ( ($generated@@386 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@375 (type $generated@@542))))
 (=> (= (type $generated@@542) ($generated@@374 $generated@@543)) (<= 0 ($generated@@373 $generated@@542))))
 :pattern ( ($generated@@373 $generated@@542))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@66)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@66) (= (type $generated@@547) $generated@@66)) (= ($generated@@544 ($generated@@496 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@496 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@66)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@66) (= (type $generated@@551) $generated@@66)) (= ($generated@@548 ($generated@@496 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@496 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@66) (= (type $generated@@553) $generated@@66)) (= ($generated@@74 ($generated@@496 $generated@@552 $generated@@553)) $generated@@58))
 :pattern ( ($generated@@496 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@66)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@66) (= (type $generated@@557) $generated@@66)) (= ($generated@@554 ($generated@@504 $generated@@556 $generated@@557)) $generated@@556))
 :pattern ( ($generated@@504 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@66)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@66) (= (type $generated@@561) $generated@@66)) (= ($generated@@558 ($generated@@504 $generated@@560 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@504 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@66) (= (type $generated@@563) $generated@@66)) (= ($generated@@74 ($generated@@504 $generated@@562 $generated@@563)) $generated@@59))
 :pattern ( ($generated@@504 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@255) (= (type $generated@@565) $generated@@255)) (= ($generated@@366 ($generated@@333 $generated@@564 $generated@@565)) $generated@@62))
 :pattern ( ($generated@@333 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@66)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@66) (= (type $generated@@569) $generated@@66)) (= ($generated@@566 ($generated@@245 $generated@@568 $generated@@569)) $generated@@568))
 :pattern ( ($generated@@245 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@66)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@66) (= (type $generated@@573) $generated@@66)) (= ($generated@@570 ($generated@@245 $generated@@572 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@245 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@255) (= (type $generated@@575) $generated@@255)) (= ($generated@@253 ($generated@@333 $generated@@574 $generated@@575)) $generated@@574))
 :pattern ( ($generated@@333 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@255) (= (type $generated@@577) $generated@@255)) (= ($generated@@254 ($generated@@333 $generated@@576 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@333 $generated@@576 $generated@@577))
)))
(assert  (and (forall (($generated@@580 T@U) ) (! (= (type ($generated@@578 $generated@@580)) $generated@@66)
 :pattern ( ($generated@@578 $generated@@580))
)) (forall (($generated@@581 T@U) ($generated@@582 Int) ) (! (let (($generated@@583 ($generated@@375 (type $generated@@581))))
(= (type ($generated@@579 $generated@@581 $generated@@582)) $generated@@583))
 :pattern ( ($generated@@579 $generated@@581 $generated@@582))
))))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@374 $generated@@255)) (= (type $generated@@585) $generated@@66)) (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@584 ($generated@@578 $generated@@585) $generated@@586) (forall (($generated@@587 Int) ) (!  (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@373 $generated@@584))) ($generated@@360 ($generated@@579 $generated@@584 $generated@@587) $generated@@585 $generated@@586))
 :pattern ( ($generated@@579 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@76 $generated@@584 ($generated@@578 $generated@@585) $generated@@586))
)))
(assert (forall (($generated@@589 Int) ) (! (= ($generated@@588 ($generated@@77 $generated@@589)) $generated@@589)
 :pattern ( ($generated@@77 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@66)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@66) (= ($generated@@590 ($generated@@344 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@344 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@66) (= ($generated@@74 ($generated@@344 $generated@@593)) $generated@@54))
 :pattern ( ($generated@@344 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@66)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@66) (= ($generated@@594 ($generated@@349 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@349 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@66) (= ($generated@@74 ($generated@@349 $generated@@597)) $generated@@55))
 :pattern ( ($generated@@349 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@66)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@66) (= ($generated@@598 ($generated@@260 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@260 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@66) (= ($generated@@74 ($generated@@260 $generated@@601)) $generated@@56))
 :pattern ( ($generated@@260 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@66)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@66) (= ($generated@@602 ($generated@@578 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@578 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@66) (= ($generated@@74 ($generated@@578 $generated@@605)) $generated@@57))
 :pattern ( ($generated@@578 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
(= ($generated@@431 $generated@@607 ($generated@@381 $generated@@606)) $generated@@606))
 :pattern ( ($generated@@381 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@394 $generated@@255 $generated@@255)) (= (type $generated@@609) $generated@@66)) (= (type $generated@@610) $generated@@66)) (= ($generated@@225 $generated@@608 ($generated@@496 $generated@@609 $generated@@610)) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@255) ($generated@@0 ($generated@@83 ($generated@@392 $generated@@608) $generated@@611))) (and ($generated@@334 ($generated@@83 ($generated@@471 $generated@@608) $generated@@611) $generated@@610) ($generated@@334 $generated@@611 $generated@@609)))
 :pattern ( ($generated@@83 ($generated@@471 $generated@@608) $generated@@611))
 :pattern ( ($generated@@83 ($generated@@392 $generated@@608) $generated@@611))
))))
 :pattern ( ($generated@@225 $generated@@608 ($generated@@496 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@612) ($generated@@412 $generated@@255 $generated@@255)) (= (type $generated@@613) $generated@@66)) (= (type $generated@@614) $generated@@66)) (= ($generated@@225 $generated@@612 ($generated@@504 $generated@@613 $generated@@614)) (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@255) ($generated@@0 ($generated@@83 ($generated@@410 $generated@@612) $generated@@615))) (and ($generated@@334 ($generated@@83 ($generated@@479 $generated@@612) $generated@@615) $generated@@614) ($generated@@334 $generated@@615 $generated@@613)))
 :pattern ( ($generated@@83 ($generated@@479 $generated@@612) $generated@@615))
 :pattern ( ($generated@@83 ($generated@@410 $generated@@612) $generated@@615))
))))
 :pattern ( ($generated@@225 $generated@@612 ($generated@@504 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@255) (= (type $generated@@619) $generated@@255)) (< ($generated@@616 $generated@@618) ($generated@@617 ($generated@@333 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@333 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@255) (= (type $generated@@621) $generated@@255)) (< ($generated@@616 $generated@@621) ($generated@@617 ($generated@@333 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@333 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@255) (= (type $generated@@623) $generated@@66)) (= (type $generated@@624) $generated@@66)) ($generated@@334 $generated@@622 ($generated@@496 $generated@@623 $generated@@624))) (and (= ($generated@@381 ($generated@@431 ($generated@@394 $generated@@255 $generated@@255) $generated@@622)) $generated@@622) ($generated@@225 ($generated@@431 ($generated@@394 $generated@@255 $generated@@255) $generated@@622) ($generated@@496 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@334 $generated@@622 ($generated@@496 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@255) (= (type $generated@@626) $generated@@66)) (= (type $generated@@627) $generated@@66)) ($generated@@334 $generated@@625 ($generated@@504 $generated@@626 $generated@@627))) (and (= ($generated@@381 ($generated@@431 ($generated@@412 $generated@@255 $generated@@255) $generated@@625)) $generated@@625) ($generated@@225 ($generated@@431 ($generated@@412 $generated@@255 $generated@@255) $generated@@625) ($generated@@504 $generated@@626 $generated@@627))))
 :pattern ( ($generated@@334 $generated@@625 ($generated@@504 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@66) (= (type $generated@@629) $generated@@66)) (= (type $generated@@630) $generated@@255)) ($generated@@334 $generated@@630 ($generated@@245 $generated@@628 $generated@@629))) (and (= ($generated@@381 ($generated@@431 $generated@@246 $generated@@630)) $generated@@630) ($generated@@225 ($generated@@431 $generated@@246 $generated@@630) ($generated@@245 $generated@@628 $generated@@629))))
 :pattern ( ($generated@@334 $generated@@630 ($generated@@245 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@631)))
 (not ($generated@@0 ($generated@@83 ($generated@@512 $generated@@632) $generated@@631))))
 :pattern ( (let (($generated@@632 (type $generated@@631)))
($generated@@83 ($generated@@512 $generated@@632) $generated@@631)))
)))
(assert (forall (($generated@@634 T@U) ) (! (= (type ($generated@@633 $generated@@634)) $generated@@71)
 :pattern ( ($generated@@633 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@66) (= (type $generated@@636) $generated@@66)) (and (= ($generated@@74 ($generated@@245 $generated@@635 $generated@@636)) $generated@@63) (= ($generated@@633 ($generated@@245 $generated@@635 $generated@@636)) $generated@@65)))
 :pattern ( ($generated@@245 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@246) (= ($generated@@616 ($generated@@381 $generated@@637)) ($generated@@617 $generated@@637)))
 :pattern ( ($generated@@616 ($generated@@381 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@255) ($generated@@334 $generated@@638 ($generated@@77 0))) (and (= ($generated@@381 ($generated@@431 $generated@@2 $generated@@638)) $generated@@638) ($generated@@225 ($generated@@431 ($generated@@78 $generated@@255 $generated@@4) $generated@@638) ($generated@@77 0))))
 :pattern ( ($generated@@334 $generated@@638 ($generated@@77 0)))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@255) ($generated@@334 $generated@@639 ($generated@@77 1))) (and (= ($generated@@381 ($generated@@431 $generated@@134 $generated@@639)) $generated@@639) ($generated@@225 ($generated@@431 $generated@@134 $generated@@639) ($generated@@77 1))))
 :pattern ( ($generated@@334 $generated@@639 ($generated@@77 1)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) $generated@@255) (= (type $generated@@641) $generated@@66)) ($generated@@334 $generated@@640 ($generated@@344 $generated@@641))) (and (= ($generated@@381 ($generated@@431 ($generated@@78 $generated@@255 $generated@@4) $generated@@640)) $generated@@640) ($generated@@225 ($generated@@431 ($generated@@78 $generated@@255 $generated@@4) $generated@@640) ($generated@@344 $generated@@641))))
 :pattern ( ($generated@@334 $generated@@640 ($generated@@344 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@642) $generated@@255) (= (type $generated@@643) $generated@@66)) ($generated@@334 $generated@@642 ($generated@@349 $generated@@643))) (and (= ($generated@@381 ($generated@@431 ($generated@@78 $generated@@255 $generated@@4) $generated@@642)) $generated@@642) ($generated@@225 ($generated@@431 ($generated@@78 $generated@@255 $generated@@4) $generated@@642) ($generated@@349 $generated@@643))))
 :pattern ( ($generated@@334 $generated@@642 ($generated@@349 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@644) $generated@@255) (= (type $generated@@645) $generated@@66)) ($generated@@334 $generated@@644 ($generated@@260 $generated@@645))) (and (= ($generated@@381 ($generated@@431 ($generated@@78 $generated@@255 $generated@@2) $generated@@644)) $generated@@644) ($generated@@225 ($generated@@431 ($generated@@78 $generated@@255 $generated@@2) $generated@@644) ($generated@@260 $generated@@645))))
 :pattern ( ($generated@@334 $generated@@644 ($generated@@260 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@646) $generated@@255) (= (type $generated@@647) $generated@@66)) ($generated@@334 $generated@@646 ($generated@@578 $generated@@647))) (and (= ($generated@@381 ($generated@@431 ($generated@@374 $generated@@255) $generated@@646)) $generated@@646) ($generated@@225 ($generated@@431 ($generated@@374 $generated@@255) $generated@@646) ($generated@@578 $generated@@647))))
 :pattern ( ($generated@@334 $generated@@646 ($generated@@578 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@255) ($generated@@334 $generated@@648 ($generated@@77 2))) (and (= ($generated@@381 ($generated@@431 $generated@@142 $generated@@648)) $generated@@648) ($generated@@225 ($generated@@431 $generated@@142 $generated@@648) ($generated@@77 2))))
 :pattern ( ($generated@@334 $generated@@648 ($generated@@77 2)))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@255) ($generated@@334 $generated@@649 ($generated@@77 3))) (and (= ($generated@@381 ($generated@@431 $generated@@150 $generated@@649)) $generated@@649) ($generated@@225 ($generated@@431 $generated@@150 $generated@@649) ($generated@@77 3))))
 :pattern ( ($generated@@334 $generated@@649 ($generated@@77 3)))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@255) ($generated@@334 $generated@@650 ($generated@@77 4))) (and (= ($generated@@381 ($generated@@431 $generated@@158 $generated@@650)) $generated@@650) ($generated@@225 ($generated@@431 $generated@@158 $generated@@650) ($generated@@77 4))))
 :pattern ( ($generated@@334 $generated@@650 ($generated@@77 4)))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@255) ($generated@@334 $generated@@651 ($generated@@77 7))) (and (= ($generated@@381 ($generated@@431 $generated@@166 $generated@@651)) $generated@@651) ($generated@@225 ($generated@@431 $generated@@166 $generated@@651) ($generated@@77 7))))
 :pattern ( ($generated@@334 $generated@@651 ($generated@@77 7)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@255) ($generated@@334 $generated@@652 ($generated@@77 8))) (and (= ($generated@@381 ($generated@@431 $generated@@174 $generated@@652)) $generated@@652) ($generated@@225 ($generated@@431 $generated@@174 $generated@@652) ($generated@@77 8))))
 :pattern ( ($generated@@334 $generated@@652 ($generated@@77 8)))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@255) ($generated@@334 $generated@@653 ($generated@@77 15))) (and (= ($generated@@381 ($generated@@431 $generated@@182 $generated@@653)) $generated@@653) ($generated@@225 ($generated@@431 $generated@@182 $generated@@653) ($generated@@77 15))))
 :pattern ( ($generated@@334 $generated@@653 ($generated@@77 15)))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@255) ($generated@@334 $generated@@654 ($generated@@77 16))) (and (= ($generated@@381 ($generated@@431 $generated@@190 $generated@@654)) $generated@@654) ($generated@@225 ($generated@@431 $generated@@190 $generated@@654) ($generated@@77 16))))
 :pattern ( ($generated@@334 $generated@@654 ($generated@@77 16)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@255) ($generated@@334 $generated@@655 ($generated@@77 32))) (and (= ($generated@@381 ($generated@@431 $generated@@198 $generated@@655)) $generated@@655) ($generated@@225 ($generated@@431 $generated@@198 $generated@@655) ($generated@@77 32))))
 :pattern ( ($generated@@334 $generated@@655 ($generated@@77 32)))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@255) ($generated@@334 $generated@@656 ($generated@@77 53))) (and (= ($generated@@381 ($generated@@431 $generated@@206 $generated@@656)) $generated@@656) ($generated@@225 ($generated@@431 $generated@@206 $generated@@656) ($generated@@77 53))))
 :pattern ( ($generated@@334 $generated@@656 ($generated@@77 53)))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@255) ($generated@@334 $generated@@657 ($generated@@77 100))) (and (= ($generated@@381 ($generated@@431 $generated@@214 $generated@@657)) $generated@@657) ($generated@@225 ($generated@@431 $generated@@214 $generated@@657) ($generated@@77 100))))
 :pattern ( ($generated@@334 $generated@@657 ($generated@@77 100)))
)))
(assert (= ($generated@@74 $generated@@222) $generated@@61))
(assert (= ($generated@@633 $generated@@222) $generated@@64))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (= (type $generated@@658) ($generated@@78 $generated@@255 $generated@@2)) (= (type $generated@@659) $generated@@66)) (= (type $generated@@660) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@658 ($generated@@260 $generated@@659) $generated@@660) (forall (($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@661) $generated@@255) (< 0 ($generated ($generated@@83 $generated@@658 $generated@@661)))) ($generated@@360 $generated@@661 $generated@@659 $generated@@660))
 :pattern ( ($generated@@83 $generated@@658 $generated@@661))
))))
 :pattern ( ($generated@@76 $generated@@658 ($generated@@260 $generated@@659) $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) $generated@@246) (= (type $generated@@663) $generated@@66)) (= (type $generated@@664) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@359 $generated@@664) (and ($generated@@244 $generated@@662) (exists (($generated@@665 T@U) ) (!  (and (= (type $generated@@665) $generated@@66) ($generated@@76 $generated@@662 ($generated@@245 $generated@@663 $generated@@665) $generated@@664))
 :pattern ( ($generated@@76 $generated@@662 ($generated@@245 $generated@@663 $generated@@665) $generated@@664))
))))) ($generated@@360 ($generated@@253 $generated@@662) $generated@@663 $generated@@664))
 :pattern ( ($generated@@360 ($generated@@253 $generated@@662) $generated@@663 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) $generated@@246) (= (type $generated@@667) $generated@@66)) (= (type $generated@@668) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@359 $generated@@668) (and ($generated@@244 $generated@@666) (exists (($generated@@669 T@U) ) (!  (and (= (type $generated@@669) $generated@@66) ($generated@@76 $generated@@666 ($generated@@245 $generated@@669 $generated@@667) $generated@@668))
 :pattern ( ($generated@@76 $generated@@666 ($generated@@245 $generated@@669 $generated@@667) $generated@@668))
))))) ($generated@@360 ($generated@@254 $generated@@666) $generated@@667 $generated@@668))
 :pattern ( ($generated@@360 ($generated@@254 $generated@@666) $generated@@667 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@255) (= (type $generated@@671) $generated@@255)) (= ($generated@@333 ($generated@@355 $generated@@670) ($generated@@355 $generated@@671)) ($generated@@355 ($generated@@333 $generated@@670 $generated@@671))))
 :pattern ( ($generated@@333 ($generated@@355 $generated@@670) ($generated@@355 $generated@@671)))
)))
(assert (forall (($generated@@672 Int) ) (! (= ($generated@@381 ($generated@@8 ($generated@@241 $generated@@672))) ($generated@@355 ($generated@@381 ($generated@@8 $generated@@672))))
 :pattern ( ($generated@@381 ($generated@@8 ($generated@@241 $generated@@672))))
)))
(assert (forall (($generated@@673 T@U) ) (! (= ($generated@@381 ($generated@@355 $generated@@673)) ($generated@@355 ($generated@@381 $generated@@673)))
 :pattern ( ($generated@@381 ($generated@@355 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ) (! (let (($generated@@675 ($generated@@375 (type $generated@@674))))
 (=> (and (= (type $generated@@674) ($generated@@374 $generated@@675)) (= ($generated@@373 $generated@@674) 0)) (= $generated@@674 ($generated@@372 $generated@@675))))
 :pattern ( ($generated@@373 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (! (let (($generated@@679 (type $generated@@677)))
 (=> (and (and (= (type $generated@@676) ($generated@@78 $generated@@679 $generated@@2)) (= (type $generated@@678) $generated@@2)) (<= 0 ($generated $generated@@678))) (= ($generated@@386 ($generated@@84 $generated@@676 $generated@@677 $generated@@678)) (+ (- ($generated@@386 $generated@@676) ($generated ($generated@@83 $generated@@676 $generated@@677))) ($generated $generated@@678)))))
 :pattern ( ($generated@@386 ($generated@@84 $generated@@676 $generated@@677 $generated@@678)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@681) $generated@@2)) ($generated@@76 $generated@@681 $generated@@46 $generated@@680))
 :pattern ( ($generated@@76 $generated@@681 $generated@@46 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@683) $generated@@3)) ($generated@@76 $generated@@683 $generated@@47 $generated@@682))
 :pattern ( ($generated@@76 $generated@@683 $generated@@47 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@685) $generated@@4)) ($generated@@76 $generated@@685 $generated@@44 $generated@@684))
 :pattern ( ($generated@@76 $generated@@685 $generated@@44 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@686) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@687) $generated@@536)) ($generated@@76 $generated@@687 $generated@@45 $generated@@686))
 :pattern ( ($generated@@76 $generated@@687 $generated@@45 $generated@@686))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@689) $generated@@255)) ($generated@@76 $generated@@689 $generated@@48 $generated@@688))
 :pattern ( ($generated@@76 $generated@@689 $generated@@48 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) ($generated@@374 $generated@@255)) (= (type $generated@@691) $generated@@66)) (= ($generated@@225 $generated@@690 ($generated@@578 $generated@@691)) (forall (($generated@@692 Int) ) (!  (=> (and (<= 0 $generated@@692) (< $generated@@692 ($generated@@373 $generated@@690))) ($generated@@334 ($generated@@579 $generated@@690 $generated@@692) $generated@@691))
 :pattern ( ($generated@@579 $generated@@690 $generated@@692))
))))
 :pattern ( ($generated@@225 $generated@@690 ($generated@@578 $generated@@691)))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 Int) ) (!  (=> (= (type $generated@@694) ($generated@@374 $generated@@255)) (=> (and (<= 0 $generated@@695) (< $generated@@695 ($generated@@373 $generated@@694))) (< ($generated@@617 ($generated@@431 $generated@@246 ($generated@@579 $generated@@694 $generated@@695))) ($generated@@693 $generated@@694))))
 :pattern ( ($generated@@617 ($generated@@431 $generated@@246 ($generated@@579 $generated@@694 $generated@@695))))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (and (= (type $generated@@696) ($generated@@394 $generated@@255 $generated@@255)) (= (type $generated@@697) $generated@@66)) (= (type $generated@@698) $generated@@66)) ($generated@@225 $generated@@696 ($generated@@496 $generated@@697 $generated@@698))) (and (and ($generated@@225 ($generated@@392 $generated@@696) ($generated@@344 $generated@@697)) ($generated@@225 ($generated@@439 $generated@@696) ($generated@@344 $generated@@698))) ($generated@@225 ($generated@@470 $generated@@696) ($generated@@344 ($generated@@245 $generated@@697 $generated@@698)))))
 :pattern ( ($generated@@225 $generated@@696 ($generated@@496 $generated@@697 $generated@@698)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (and (and (= (type $generated@@699) ($generated@@412 $generated@@255 $generated@@255)) (= (type $generated@@700) $generated@@66)) (= (type $generated@@701) $generated@@66)) ($generated@@225 $generated@@699 ($generated@@504 $generated@@700 $generated@@701))) (and (and ($generated@@225 ($generated@@410 $generated@@699) ($generated@@349 $generated@@700)) ($generated@@225 ($generated@@450 $generated@@699) ($generated@@349 $generated@@701))) ($generated@@225 ($generated@@478 $generated@@699) ($generated@@349 ($generated@@245 $generated@@700 $generated@@701)))))
 :pattern ( ($generated@@225 $generated@@699 ($generated@@504 $generated@@700 $generated@@701)))
)))
(assert (forall (($generated@@702 T@U) ) (!  (=> (= (type $generated@@702) $generated@@2) ($generated@@225 $generated@@702 $generated@@46))
 :pattern ( ($generated@@225 $generated@@702 $generated@@46))
)))
(assert (forall (($generated@@703 T@U) ) (!  (=> (= (type $generated@@703) $generated@@3) ($generated@@225 $generated@@703 $generated@@47))
 :pattern ( ($generated@@225 $generated@@703 $generated@@47))
)))
(assert (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@4) ($generated@@225 $generated@@704 $generated@@44))
 :pattern ( ($generated@@225 $generated@@704 $generated@@44))
)))
(assert (forall (($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@536) ($generated@@225 $generated@@705 $generated@@45))
 :pattern ( ($generated@@225 $generated@@705 $generated@@45))
)))
(assert (forall (($generated@@706 T@U) ) (!  (=> (= (type $generated@@706) $generated@@255) ($generated@@225 $generated@@706 $generated@@48))
 :pattern ( ($generated@@225 $generated@@706 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@707 () Int)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () T@U)
(declare-fun $generated@@712 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@708) ($generated@@267 $generated@@79 $generated@@4)) (= (type $generated@@709) $generated@@79)) (= (type $generated@@710) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@711) ($generated@@267 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@713  (=> (and (<= 0 $generated@@707) (= (ControlFlow 0 5) (- 0 4))) ($generated@@225 ($generated@@8 $generated@@707) $generated@@222))))
(let (($generated@@714  (=> (and (< $generated@@707 0) (= (ControlFlow 0 3) (- 0 2))) ($generated@@225 ($generated@@8 (- 0 $generated@@707)) $generated@@222))))
(let (($generated@@715  (=> (= $generated@@708 ($generated@@321 $generated@@709 $generated@@710 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@714) (=> (= (ControlFlow 0 6) 5) $generated@@713)))))
(let (($generated@@716 true))
(let (($generated@@717  (=> (= $generated@@711 ($generated@@266 $generated@@709 $generated@@710 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@716) (=> (= (ControlFlow 0 7) 6) $generated@@715)))))
(let (($generated@@718  (=> (and (and ($generated@@359 $generated@@710) ($generated@@712 $generated@@710)) (and (= 1 $generated@@238) (= (ControlFlow 0 8) 7))) $generated@@717)))
$generated@@718)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (Int) Int)
(declare-fun $generated@@74 (Int) Bool)
(declare-fun $generated@@75 (Int) Int)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 ((_ BitVec 1)) T@U)
(declare-fun $generated@@139 (T@U) (_ BitVec 1))
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@146 ((_ BitVec 2)) T@U)
(declare-fun $generated@@147 (T@U) (_ BitVec 2))
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@154 ((_ BitVec 3)) T@U)
(declare-fun $generated@@155 (T@U) (_ BitVec 3))
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@162 ((_ BitVec 4)) T@U)
(declare-fun $generated@@163 (T@U) (_ BitVec 4))
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@170 ((_ BitVec 7)) T@U)
(declare-fun $generated@@171 (T@U) (_ BitVec 7))
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@178 ((_ BitVec 8)) T@U)
(declare-fun $generated@@179 (T@U) (_ BitVec 8))
(declare-fun $generated@@185 () T@T)
(declare-fun $generated@@186 ((_ BitVec 15)) T@U)
(declare-fun $generated@@187 (T@U) (_ BitVec 15))
(declare-fun $generated@@193 () T@T)
(declare-fun $generated@@194 ((_ BitVec 16)) T@U)
(declare-fun $generated@@195 (T@U) (_ BitVec 16))
(declare-fun $generated@@201 () T@T)
(declare-fun $generated@@202 ((_ BitVec 32)) T@U)
(declare-fun $generated@@203 (T@U) (_ BitVec 32))
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@210 ((_ BitVec 53)) T@U)
(declare-fun $generated@@211 (T@U) (_ BitVec 53))
(declare-fun $generated@@217 () T@T)
(declare-fun $generated@@218 ((_ BitVec 100)) T@U)
(declare-fun $generated@@219 (T@U) (_ BitVec 100))
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@238 (Int) Int)
(declare-fun $generated@@239 (Int) Bool)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 () T@T)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@253 () T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U T@U) T@U)
(declare-fun $generated@@264 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@265 (T@T T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@319 (T@U T@U) T@U)
(declare-fun $generated@@320 (T@U T@U) Bool)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@340 (Real) Int)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@348 (T@U) Bool)
(declare-fun $generated@@349 (T@U T@U T@U) Bool)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@361 (T@T) T@U)
(declare-fun $generated@@362 (T@U) Int)
(declare-fun $generated@@363 (T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@374 (T@U) Int)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@T T@T) T@U)
(declare-fun $generated@@382 (T@T T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@T) T@U)
(declare-fun $generated@@400 (T@T T@T) T@T)
(declare-fun $generated@@401 (T@T) T@T)
(declare-fun $generated@@402 (T@T) T@T)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@456 (T@T T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@484 (T@U T@U) T@U)
(declare-fun $generated@@492 (T@U T@U) T@U)
(declare-fun $generated@@500 (Int) Real)
(declare-fun $generated@@502 (T@T) T@U)
(declare-fun $generated@@526 () T@T)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@569 (T@U Int) T@U)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@608 (T@U) Int)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@628 (Int Int) Int)
(declare-fun $generated@@687 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@76 Int) ) (!  (=> (or ($generated@@74 $generated@@76) (not (= 0 $generated@@72))) (= ($generated@@73 $generated@@76) (ite (< $generated@@76 0) (- 0 1) (ite (= $generated@@76 ($generated@@75 0)) 0 1))))
 :pattern ( ($generated@@73 $generated@@76))
))))
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@65)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@67 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@67 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@64)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert  (and (and (and (forall (($generated@@140 (_ BitVec 1)) ) (! (= ($generated@@139 ($generated@@138 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@138 $generated@@140))
)) (= ($generated@@1 $generated@@137) 14)) (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@137) (= ($generated@@138 ($generated@@139 $generated@@141)) $generated@@141))
 :pattern ( ($generated@@139 $generated@@141))
))) (forall (($generated@@142 (_ BitVec 1)) ) (! (= (type ($generated@@138 $generated@@142)) $generated@@137)
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@137) (= (type $generated@@144) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@143 ($generated@@80 1) $generated@@144))
 :pattern ( ($generated@@79 $generated@@143 ($generated@@80 1) $generated@@144))
)))
(assert  (and (and (and (forall (($generated@@148 (_ BitVec 2)) ) (! (= ($generated@@147 ($generated@@146 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@146 $generated@@148))
)) (= ($generated@@1 $generated@@145) 15)) (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@145) (= ($generated@@146 ($generated@@147 $generated@@149)) $generated@@149))
 :pattern ( ($generated@@147 $generated@@149))
))) (forall (($generated@@150 (_ BitVec 2)) ) (! (= (type ($generated@@146 $generated@@150)) $generated@@145)
 :pattern ( ($generated@@146 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@145) (= (type $generated@@152) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@151 ($generated@@80 2) $generated@@152))
 :pattern ( ($generated@@79 $generated@@151 ($generated@@80 2) $generated@@152))
)))
(assert  (and (and (and (forall (($generated@@156 (_ BitVec 3)) ) (! (= ($generated@@155 ($generated@@154 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@156))
)) (= ($generated@@1 $generated@@153) 16)) (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@153) (= ($generated@@154 ($generated@@155 $generated@@157)) $generated@@157))
 :pattern ( ($generated@@155 $generated@@157))
))) (forall (($generated@@158 (_ BitVec 3)) ) (! (= (type ($generated@@154 $generated@@158)) $generated@@153)
 :pattern ( ($generated@@154 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@153) (= (type $generated@@160) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@159 ($generated@@80 3) $generated@@160))
 :pattern ( ($generated@@79 $generated@@159 ($generated@@80 3) $generated@@160))
)))
(assert  (and (and (and (forall (($generated@@164 (_ BitVec 4)) ) (! (= ($generated@@163 ($generated@@162 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@162 $generated@@164))
)) (= ($generated@@1 $generated@@161) 17)) (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@161) (= ($generated@@162 ($generated@@163 $generated@@165)) $generated@@165))
 :pattern ( ($generated@@163 $generated@@165))
))) (forall (($generated@@166 (_ BitVec 4)) ) (! (= (type ($generated@@162 $generated@@166)) $generated@@161)
 :pattern ( ($generated@@162 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (= (type $generated@@167) $generated@@161) (= (type $generated@@168) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@167 ($generated@@80 4) $generated@@168))
 :pattern ( ($generated@@79 $generated@@167 ($generated@@80 4) $generated@@168))
)))
(assert  (and (and (and (forall (($generated@@172 (_ BitVec 7)) ) (! (= ($generated@@171 ($generated@@170 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@172))
)) (= ($generated@@1 $generated@@169) 18)) (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@169) (= ($generated@@170 ($generated@@171 $generated@@173)) $generated@@173))
 :pattern ( ($generated@@171 $generated@@173))
))) (forall (($generated@@174 (_ BitVec 7)) ) (! (= (type ($generated@@170 $generated@@174)) $generated@@169)
 :pattern ( ($generated@@170 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (= (type $generated@@175) $generated@@169) (= (type $generated@@176) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@175 ($generated@@80 7) $generated@@176))
 :pattern ( ($generated@@79 $generated@@175 ($generated@@80 7) $generated@@176))
)))
(assert  (and (and (and (forall (($generated@@180 (_ BitVec 8)) ) (! (= ($generated@@179 ($generated@@178 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@178 $generated@@180))
)) (= ($generated@@1 $generated@@177) 19)) (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@177) (= ($generated@@178 ($generated@@179 $generated@@181)) $generated@@181))
 :pattern ( ($generated@@179 $generated@@181))
))) (forall (($generated@@182 (_ BitVec 8)) ) (! (= (type ($generated@@178 $generated@@182)) $generated@@177)
 :pattern ( ($generated@@178 $generated@@182))
))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (= (type $generated@@183) $generated@@177) (= (type $generated@@184) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@183 ($generated@@80 8) $generated@@184))
 :pattern ( ($generated@@79 $generated@@183 ($generated@@80 8) $generated@@184))
)))
(assert  (and (and (and (forall (($generated@@188 (_ BitVec 15)) ) (! (= ($generated@@187 ($generated@@186 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@186 $generated@@188))
)) (= ($generated@@1 $generated@@185) 20)) (forall (($generated@@189 T@U) ) (!  (=> (= (type $generated@@189) $generated@@185) (= ($generated@@186 ($generated@@187 $generated@@189)) $generated@@189))
 :pattern ( ($generated@@187 $generated@@189))
))) (forall (($generated@@190 (_ BitVec 15)) ) (! (= (type ($generated@@186 $generated@@190)) $generated@@185)
 :pattern ( ($generated@@186 $generated@@190))
))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@185) (= (type $generated@@192) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@191 ($generated@@80 15) $generated@@192))
 :pattern ( ($generated@@79 $generated@@191 ($generated@@80 15) $generated@@192))
)))
(assert  (and (and (and (forall (($generated@@196 (_ BitVec 16)) ) (! (= ($generated@@195 ($generated@@194 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@194 $generated@@196))
)) (= ($generated@@1 $generated@@193) 21)) (forall (($generated@@197 T@U) ) (!  (=> (= (type $generated@@197) $generated@@193) (= ($generated@@194 ($generated@@195 $generated@@197)) $generated@@197))
 :pattern ( ($generated@@195 $generated@@197))
))) (forall (($generated@@198 (_ BitVec 16)) ) (! (= (type ($generated@@194 $generated@@198)) $generated@@193)
 :pattern ( ($generated@@194 $generated@@198))
))))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@199) $generated@@193) (= (type $generated@@200) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@199 ($generated@@80 16) $generated@@200))
 :pattern ( ($generated@@79 $generated@@199 ($generated@@80 16) $generated@@200))
)))
(assert  (and (and (and (forall (($generated@@204 (_ BitVec 32)) ) (! (= ($generated@@203 ($generated@@202 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@202 $generated@@204))
)) (= ($generated@@1 $generated@@201) 22)) (forall (($generated@@205 T@U) ) (!  (=> (= (type $generated@@205) $generated@@201) (= ($generated@@202 ($generated@@203 $generated@@205)) $generated@@205))
 :pattern ( ($generated@@203 $generated@@205))
))) (forall (($generated@@206 (_ BitVec 32)) ) (! (= (type ($generated@@202 $generated@@206)) $generated@@201)
 :pattern ( ($generated@@202 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@207) $generated@@201) (= (type $generated@@208) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@207 ($generated@@80 32) $generated@@208))
 :pattern ( ($generated@@79 $generated@@207 ($generated@@80 32) $generated@@208))
)))
(assert  (and (and (and (forall (($generated@@212 (_ BitVec 53)) ) (! (= ($generated@@211 ($generated@@210 $generated@@212)) $generated@@212)
 :pattern ( ($generated@@210 $generated@@212))
)) (= ($generated@@1 $generated@@209) 23)) (forall (($generated@@213 T@U) ) (!  (=> (= (type $generated@@213) $generated@@209) (= ($generated@@210 ($generated@@211 $generated@@213)) $generated@@213))
 :pattern ( ($generated@@211 $generated@@213))
))) (forall (($generated@@214 (_ BitVec 53)) ) (! (= (type ($generated@@210 $generated@@214)) $generated@@209)
 :pattern ( ($generated@@210 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (= (type $generated@@215) $generated@@209) (= (type $generated@@216) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@215 ($generated@@80 53) $generated@@216))
 :pattern ( ($generated@@79 $generated@@215 ($generated@@80 53) $generated@@216))
)))
(assert  (and (and (and (forall (($generated@@220 (_ BitVec 100)) ) (! (= ($generated@@219 ($generated@@218 $generated@@220)) $generated@@220)
 :pattern ( ($generated@@218 $generated@@220))
)) (= ($generated@@1 $generated@@217) 24)) (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@217) (= ($generated@@218 ($generated@@219 $generated@@221)) $generated@@221))
 :pattern ( ($generated@@219 $generated@@221))
))) (forall (($generated@@222 (_ BitVec 100)) ) (! (= (type ($generated@@218 $generated@@222)) $generated@@217)
 :pattern ( ($generated@@218 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@217) (= (type $generated@@224) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@223 ($generated@@80 100) $generated@@224))
 :pattern ( ($generated@@79 $generated@@223 ($generated@@80 100) $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@2) ($generated@@225 $generated@@226 ($generated@@80 0)))
 :pattern ( ($generated@@225 $generated@@226 ($generated@@80 0)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@137) ($generated@@225 $generated@@227 ($generated@@80 1)))
 :pattern ( ($generated@@225 $generated@@227 ($generated@@80 1)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@145) ($generated@@225 $generated@@228 ($generated@@80 2)))
 :pattern ( ($generated@@225 $generated@@228 ($generated@@80 2)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@153) ($generated@@225 $generated@@229 ($generated@@80 3)))
 :pattern ( ($generated@@225 $generated@@229 ($generated@@80 3)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@161) ($generated@@225 $generated@@230 ($generated@@80 4)))
 :pattern ( ($generated@@225 $generated@@230 ($generated@@80 4)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@169) ($generated@@225 $generated@@231 ($generated@@80 7)))
 :pattern ( ($generated@@225 $generated@@231 ($generated@@80 7)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@177) ($generated@@225 $generated@@232 ($generated@@80 8)))
 :pattern ( ($generated@@225 $generated@@232 ($generated@@80 8)))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (= (type $generated@@233) $generated@@185) ($generated@@225 $generated@@233 ($generated@@80 15)))
 :pattern ( ($generated@@225 $generated@@233 ($generated@@80 15)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (= (type $generated@@234) $generated@@193) ($generated@@225 $generated@@234 ($generated@@80 16)))
 :pattern ( ($generated@@225 $generated@@234 ($generated@@80 16)))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@201) ($generated@@225 $generated@@235 ($generated@@80 32)))
 :pattern ( ($generated@@225 $generated@@235 ($generated@@80 32)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@209) ($generated@@225 $generated@@236 ($generated@@80 53)))
 :pattern ( ($generated@@225 $generated@@236 ($generated@@80 53)))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (= (type $generated@@237) $generated@@217) ($generated@@225 $generated@@237 ($generated@@80 100)))
 :pattern ( ($generated@@225 $generated@@237 ($generated@@80 100)))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@240 Int) ) (!  (=> (or ($generated@@239 $generated@@240) (not (= 1 $generated@@72))) (<= ($generated@@75 0) ($generated@@238 $generated@@240)))
 :pattern ( ($generated@@238 $generated@@240))
))))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@241 Int) ) (!  (=> (or ($generated@@239 $generated@@241) (not (= 1 $generated@@72))) (= ($generated@@238 $generated@@241) (ite (< $generated@@241 0) (- 0 $generated@@241) $generated@@241)))
 :pattern ( ($generated@@238 $generated@@241))
))))
(assert  (and (= ($generated@@1 $generated@@244) 25) (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@64) (= (type $generated@@248) $generated@@64)) (= (type $generated@@249) $generated@@244)) ($generated@@225 $generated@@249 ($generated@@243 $generated@@247 $generated@@248))) ($generated@@242 $generated@@249))
 :pattern ( ($generated@@242 $generated@@249) ($generated@@225 $generated@@249 ($generated@@243 $generated@@247 $generated@@248)))
)))
(assert  (and (and (= ($generated@@1 $generated@@253) 26) (forall (($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@254)) $generated@@253)
 :pattern ( ($generated@@251 $generated@@254))
))) (forall (($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@255)) $generated@@253)
 :pattern ( ($generated@@252 $generated@@255))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) $generated@@244) (= (type $generated@@257) $generated@@244)) true) (= ($generated@@250 $generated@@256 $generated@@257)  (and (= ($generated@@251 $generated@@256) ($generated@@251 $generated@@257)) (= ($generated@@252 $generated@@256) ($generated@@252 $generated@@257)))))
 :pattern ( ($generated@@250 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@258 $generated@@260)) $generated@@64)
 :pattern ( ($generated@@258 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) ($generated@@81 $generated@@253 $generated@@2)) (= (type $generated@@262) $generated@@64)) ($generated@@225 $generated@@261 ($generated@@258 $generated@@262))) ($generated@@259 $generated@@261))
 :pattern ( ($generated@@225 $generated@@261 ($generated@@258 $generated@@262)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@269 $generated@@270)) 27)) (forall (($generated@@271 T@T) ($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@271 $generated@@272)) $generated@@271)
 :pattern ( ($generated@@265 $generated@@271 $generated@@272))
))) (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (! (= ($generated@@267 ($generated@@265 $generated@@273 $generated@@274)) $generated@@274)
 :pattern ( ($generated@@265 $generated@@273 $generated@@274))
))) (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@267 (type $generated@@275))))
(= (type ($generated@@263 $generated@@275 $generated@@276 $generated@@277)) $generated@@278))
 :pattern ( ($generated@@263 $generated@@275 $generated@@276 $generated@@277))
))) (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (! (let (($generated@@283 (type $generated@@282)))
(let (($generated@@284 (type $generated@@280)))
(= (type ($generated@@268 $generated@@279 $generated@@280 $generated@@281 $generated@@282)) ($generated@@265 $generated@@284 $generated@@283))))
 :pattern ( ($generated@@268 $generated@@279 $generated@@280 $generated@@281 $generated@@282))
))) (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@267 (type $generated@@285))))
 (=> (= (type $generated@@288) $generated@@289) (= ($generated@@263 ($generated@@268 $generated@@285 $generated@@286 $generated@@287 $generated@@288) $generated@@286 $generated@@287) $generated@@288)))
 :weight 0
))) (and (and (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (or (= $generated@@292 $generated@@294) (= ($generated@@263 ($generated@@268 $generated@@291 $generated@@292 $generated@@293 $generated@@290) $generated@@294 $generated@@295) ($generated@@263 $generated@@291 $generated@@294 $generated@@295)))
 :weight 0
)) (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (or (= $generated@@299 $generated@@301) (= ($generated@@263 ($generated@@268 $generated@@297 $generated@@298 $generated@@299 $generated@@296) $generated@@300 $generated@@301) ($generated@@263 $generated@@297 $generated@@300 $generated@@301)))
 :weight 0
))) (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (or true (= ($generated@@263 ($generated@@268 $generated@@303 $generated@@304 $generated@@305 $generated@@302) $generated@@306 $generated@@307) ($generated@@263 $generated@@303 $generated@@306 $generated@@307)))
 :weight 0
)))) (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 Bool) ) (! (= (type ($generated@@264 $generated@@308 $generated@@309 $generated@@310 $generated@@311)) ($generated@@265 $generated@@82 $generated@@4))
 :pattern ( ($generated@@264 $generated@@308 $generated@@309 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 Bool) ($generated@@316 T@U) ($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@67 (type $generated@@317))))
 (=> (and (and (and (and (= (type $generated@@312) $generated@@82) (= (type $generated@@313) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@314) ($generated@@66 $generated@@4))) (= (type $generated@@316) $generated@@82)) (= (type $generated@@317) ($generated@@66 $generated@@318))) (= ($generated@@0 ($generated@@263 ($generated@@264 $generated@@312 $generated@@313 $generated@@314 $generated@@315) $generated@@316 $generated@@317))  (=> (and (not (= $generated@@316 $generated@@312)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@313 $generated@@316) $generated@@314))) $generated@@315))))
 :pattern ( ($generated@@263 ($generated@@264 $generated@@312 $generated@@313 $generated@@314 $generated@@315) $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (! (= (type ($generated@@319 $generated@@321 $generated@@322)) $generated@@244)
 :pattern ( ($generated@@319 $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (and (= (type $generated@@323) $generated@@64) (= (type $generated@@324) $generated@@64)) (= (type $generated@@325) $generated@@253)) (= (type $generated@@326) $generated@@253)) (= ($generated@@225 ($generated@@319 $generated@@325 $generated@@326) ($generated@@243 $generated@@323 $generated@@324))  (and ($generated@@320 $generated@@325 $generated@@323) ($generated@@320 $generated@@326 $generated@@324))))
 :pattern ( ($generated@@225 ($generated@@319 $generated@@325 $generated@@326) ($generated@@243 $generated@@323 $generated@@324)))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@327 Int) ) (!  (=> (or ($generated@@239 ($generated@@75 $generated@@327)) (not (= 1 $generated@@72))) (= ($generated@@238 ($generated@@75 $generated@@327)) (ite (< $generated@@327 0) (- 0 $generated@@327) $generated@@327)))
 :weight 3
 :pattern ( ($generated@@238 ($generated@@75 $generated@@327)))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@244) (= (type $generated@@329) $generated@@244)) (= ($generated@@250 $generated@@328 $generated@@329) (= $generated@@328 $generated@@329)))
 :pattern ( ($generated@@250 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (= (type ($generated@@330 $generated@@331)) $generated@@64)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@332) ($generated@@81 $generated@@253 $generated@@4)) (= (type $generated@@333) $generated@@64)) (= ($generated@@225 $generated@@332 ($generated@@330 $generated@@333)) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@253) ($generated@@0 ($generated@@86 $generated@@332 $generated@@334))) ($generated@@320 $generated@@334 $generated@@333))
 :pattern ( ($generated@@86 $generated@@332 $generated@@334))
))))
 :pattern ( ($generated@@225 $generated@@332 ($generated@@330 $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (= (type ($generated@@335 $generated@@336)) $generated@@64)
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@337) ($generated@@81 $generated@@253 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= ($generated@@225 $generated@@337 ($generated@@335 $generated@@338)) (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@253) ($generated@@0 ($generated@@86 $generated@@337 $generated@@339))) ($generated@@320 $generated@@339 $generated@@338))
 :pattern ( ($generated@@86 $generated@@337 $generated@@339))
))))
 :pattern ( ($generated@@225 $generated@@337 ($generated@@335 $generated@@338)))
)))
(assert (forall (($generated@@341 Real) ) (! (= ($generated@@340 $generated@@341) (to_int $generated@@341))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 Int) ) (! (= ($generated@@75 $generated@@342) $generated@@342)
 :pattern ( ($generated@@75 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 (type $generated@@344)))
(= (type ($generated@@343 $generated@@344)) $generated@@345))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (= ($generated@@343 $generated@@346) $generated@@346)
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@347 Int) ) (!  (=> (or ($generated@@74 $generated@@347) (not (= 0 $generated@@72))) true)
 :pattern ( ($generated@@73 $generated@@347))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@350) $generated@@64) (= (type $generated@@351) $generated@@64)) (= (type $generated@@352) $generated@@253)) (= (type $generated@@353) $generated@@253)) (= (type $generated@@354) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@348 $generated@@354)) (= ($generated@@79 ($generated@@319 $generated@@352 $generated@@353) ($generated@@243 $generated@@350 $generated@@351) $generated@@354)  (and ($generated@@349 $generated@@352 $generated@@350 $generated@@354) ($generated@@349 $generated@@353 $generated@@351 $generated@@354))))
 :pattern ( ($generated@@79 ($generated@@319 $generated@@352 $generated@@353) ($generated@@243 $generated@@350 $generated@@351) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@68)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@244) (= ($generated@@242 $generated@@357) (= ($generated@@355 $generated@@357) $generated@@61)))
 :pattern ( ($generated@@242 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@244) ($generated@@242 $generated@@358)) (exists (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (and (and (= (type $generated@@359) $generated@@253) (= (type $generated@@360) $generated@@253)) (= $generated@@358 ($generated@@319 $generated@@359 $generated@@360)))
 :no-pattern (type $generated@@359)
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
)))
 :pattern ( ($generated@@242 $generated@@358))
)))
(assert  (and (and (forall (($generated@@365 T@T) ) (= ($generated@@1 ($generated@@363 $generated@@365)) 28)) (forall (($generated@@366 T@T) ) (! (= ($generated@@364 ($generated@@363 $generated@@366)) $generated@@366)
 :pattern ( ($generated@@363 $generated@@366))
))) (forall (($generated@@367 T@T) ) (! (= (type ($generated@@361 $generated@@367)) ($generated@@363 $generated@@367))
 :pattern ( ($generated@@361 $generated@@367))
))))
(assert (forall (($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@361 $generated@@368)) 0)
 :pattern ( ($generated@@361 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (= (type ($generated@@369 $generated@@370)) $generated@@253)
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@64) (= (type $generated@@373) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@349 ($generated@@369 $generated@@371) $generated@@372 $generated@@373) ($generated@@79 $generated@@371 $generated@@372 $generated@@373)))
 :pattern ( ($generated@@349 ($generated@@369 $generated@@371) $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@376 T@T) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@81 $generated@@376 $generated@@2))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@84 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@81 $generated@@378 $generated@@2)) (and (= (= ($generated@@374 $generated@@377) 0) (= $generated@@377 ($generated@@375 $generated@@378))) (=> (not (= ($generated@@374 $generated@@377) 0)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (< 0 ($generated ($generated@@86 $generated@@377 $generated@@379))))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert  (and (and (and (and (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (= ($generated@@1 ($generated@@382 $generated@@385 $generated@@386)) 29)) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= ($generated@@383 ($generated@@382 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@382 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= ($generated@@384 ($generated@@382 $generated@@389 $generated@@390)) $generated@@390)
 :pattern ( ($generated@@382 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@383 (type $generated@@391))))
(= (type ($generated@@380 $generated@@391)) ($generated@@81 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@391))
))) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= (type ($generated@@381 $generated@@393 $generated@@394)) ($generated@@382 $generated@@393 $generated@@394))
 :pattern ( ($generated@@381 $generated@@393 $generated@@394))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@T) ) (! (let (($generated@@397 (type $generated@@395)))
 (not ($generated@@0 ($generated@@86 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395))))
 :pattern ( (let (($generated@@397 (type $generated@@395)))
($generated@@86 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395)))
)))
(assert  (and (and (and (and (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (= ($generated@@1 ($generated@@400 $generated@@403 $generated@@404)) 30)) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= ($generated@@401 ($generated@@400 $generated@@405 $generated@@406)) $generated@@405)
 :pattern ( ($generated@@400 $generated@@405 $generated@@406))
))) (forall (($generated@@407 T@T) ($generated@@408 T@T) ) (! (= ($generated@@402 ($generated@@400 $generated@@407 $generated@@408)) $generated@@408)
 :pattern ( ($generated@@400 $generated@@407 $generated@@408))
))) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@401 (type $generated@@409))))
(= (type ($generated@@398 $generated@@409)) ($generated@@81 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@409))
))) (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (! (= (type ($generated@@399 $generated@@411 $generated@@412)) ($generated@@400 $generated@@411 $generated@@412))
 :pattern ( ($generated@@399 $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@T) ) (! (let (($generated@@415 (type $generated@@413)))
 (not ($generated@@0 ($generated@@86 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413))))
 :pattern ( (let (($generated@@415 (type $generated@@413)))
($generated@@86 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413)))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@84 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@81 $generated@@417 $generated@@2)) (= ($generated@@259 $generated@@416) (forall (($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@417) (and (<= 0 ($generated ($generated@@86 $generated@@416 $generated@@418))) (<= ($generated ($generated@@86 $generated@@416 $generated@@418)) ($generated@@374 $generated@@416))))
 :pattern ( ($generated@@86 $generated@@416 $generated@@418))
)))))
 :pattern ( ($generated@@259 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@384 (type $generated@@419))))
(let (($generated@@421 ($generated@@383 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@382 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@381 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) ($generated@@0 ($generated@@86 ($generated@@380 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@380 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@384 (type $generated@@424))))
(= (type ($generated@@423 $generated@@424)) ($generated@@81 $generated@@425 $generated@@4)))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@384 (type $generated@@426))))
(let (($generated@@428 ($generated@@383 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@382 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@381 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@427) ($generated@@0 ($generated@@86 ($generated@@423 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@423 $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@402 (type $generated@@430))))
(let (($generated@@432 ($generated@@401 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@400 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@399 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) ($generated@@0 ($generated@@86 ($generated@@398 $generated@@430) $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@398 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@402 (type $generated@@435))))
(= (type ($generated@@434 $generated@@435)) ($generated@@81 $generated@@436 $generated@@4)))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@402 (type $generated@@437))))
(let (($generated@@439 ($generated@@401 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@400 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@399 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@438) ($generated@@0 ($generated@@86 ($generated@@434 $generated@@437) $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@434 $generated@@437))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@81 $generated@@253 $generated@@2)) (= (type $generated@@442) $generated@@64)) (= ($generated@@225 $generated@@441 ($generated@@258 $generated@@442)) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@253) (< 0 ($generated ($generated@@86 $generated@@441 $generated@@443)))) ($generated@@320 $generated@@443 $generated@@442))
 :pattern ( ($generated@@86 $generated@@441 $generated@@443))
))))
 :pattern ( ($generated@@225 $generated@@441 ($generated@@258 $generated@@442)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@444 Int) ) (!  (=> (or ($generated@@74 ($generated@@75 $generated@@444)) (not (= 0 $generated@@72))) (= ($generated@@73 ($generated@@75 $generated@@444)) (ite (< $generated@@444 0) (- 0 1) (ite (= ($generated@@75 $generated@@444) ($generated@@75 0)) 0 1))))
 :weight 3
 :pattern ( ($generated@@73 ($generated@@75 $generated@@444)))
))))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (= (type $generated@@445) ($generated@@81 $generated@@253 $generated@@4)) (= (type $generated@@446) $generated@@64)) (= (type $generated@@447) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@445 ($generated@@330 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@253) ($generated@@0 ($generated@@86 $generated@@445 $generated@@448))) ($generated@@349 $generated@@448 $generated@@446 $generated@@447))
 :pattern ( ($generated@@86 $generated@@445 $generated@@448))
))))
 :pattern ( ($generated@@79 $generated@@445 ($generated@@330 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (= (type $generated@@449) ($generated@@81 $generated@@253 $generated@@4)) (= (type $generated@@450) $generated@@64)) (= (type $generated@@451) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@449 ($generated@@335 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@253) ($generated@@0 ($generated@@86 $generated@@449 $generated@@452))) ($generated@@349 $generated@@452 $generated@@450 $generated@@451))
 :pattern ( ($generated@@86 $generated@@449 $generated@@452))
))))
 :pattern ( ($generated@@79 $generated@@449 ($generated@@335 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(= ($generated ($generated@@86 ($generated@@375 $generated@@454) $generated@@453)) 0))
 :pattern ( (let (($generated@@454 (type $generated@@453)))
($generated@@86 ($generated@@375 $generated@@454) $generated@@453)))
)))
(assert  (and (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@455 $generated@@458)) ($generated@@81 $generated@@253 $generated@@4))
 :pattern ( ($generated@@455 $generated@@458))
)) (forall (($generated@@459 T@T) ($generated@@460 T@U) ) (! (= (type ($generated@@456 $generated@@459 $generated@@460)) $generated@@459)
 :pattern ( ($generated@@456 $generated@@459 $generated@@460))
))) (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@384 (type $generated@@461))))
(let (($generated@@463 ($generated@@383 (type $generated@@461))))
(= (type ($generated@@457 $generated@@461)) ($generated@@81 $generated@@463 $generated@@462))))
 :pattern ( ($generated@@457 $generated@@461))
))))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) ($generated@@382 $generated@@253 $generated@@253)) (= (type $generated@@465) $generated@@253)) (= ($generated@@0 ($generated@@86 ($generated@@455 $generated@@464) $generated@@465))  (and ($generated@@0 ($generated@@86 ($generated@@380 $generated@@464) ($generated@@251 ($generated@@456 $generated@@244 $generated@@465)))) (= ($generated@@86 ($generated@@457 $generated@@464) ($generated@@251 ($generated@@456 $generated@@244 $generated@@465))) ($generated@@252 ($generated@@456 $generated@@244 $generated@@465))))))
 :pattern ( ($generated@@86 ($generated@@455 $generated@@464) $generated@@465))
)))
(assert  (and (forall (($generated@@468 T@U) ) (! (= (type ($generated@@466 $generated@@468)) ($generated@@81 $generated@@253 $generated@@4))
 :pattern ( ($generated@@466 $generated@@468))
)) (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@402 (type $generated@@469))))
(let (($generated@@471 ($generated@@401 (type $generated@@469))))
(= (type ($generated@@467 $generated@@469)) ($generated@@81 $generated@@471 $generated@@470))))
 :pattern ( ($generated@@467 $generated@@469))
))))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) ($generated@@400 $generated@@253 $generated@@253)) (= (type $generated@@473) $generated@@253)) (= ($generated@@0 ($generated@@86 ($generated@@466 $generated@@472) $generated@@473))  (and ($generated@@0 ($generated@@86 ($generated@@398 $generated@@472) ($generated@@251 ($generated@@456 $generated@@244 $generated@@473)))) (= ($generated@@86 ($generated@@467 $generated@@472) ($generated@@251 ($generated@@456 $generated@@244 $generated@@473))) ($generated@@252 ($generated@@456 $generated@@244 $generated@@473))))))
 :pattern ( ($generated@@86 ($generated@@466 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (! (let (($generated@@476 (type $generated@@475)))
(let (($generated@@477 ($generated@@383 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@382 $generated@@477 $generated@@476)) (= ($generated@@0 ($generated@@86 ($generated@@423 $generated@@474) $generated@@475)) (exists (($generated@@478 T@U) ) (!  (and (= (type $generated@@478) $generated@@477) (and ($generated@@0 ($generated@@86 ($generated@@380 $generated@@474) $generated@@478)) (= $generated@@475 ($generated@@86 ($generated@@457 $generated@@474) $generated@@478))))
 :pattern ( ($generated@@86 ($generated@@380 $generated@@474) $generated@@478))
 :pattern ( ($generated@@86 ($generated@@457 $generated@@474) $generated@@478))
))))))
 :pattern ( ($generated@@86 ($generated@@423 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
(let (($generated@@482 ($generated@@401 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@400 $generated@@482 $generated@@481)) (= ($generated@@0 ($generated@@86 ($generated@@434 $generated@@479) $generated@@480)) (exists (($generated@@483 T@U) ) (!  (and (= (type $generated@@483) $generated@@482) (and ($generated@@0 ($generated@@86 ($generated@@398 $generated@@479) $generated@@483)) (= $generated@@480 ($generated@@86 ($generated@@467 $generated@@479) $generated@@483))))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@479) $generated@@483))
 :pattern ( ($generated@@86 ($generated@@467 $generated@@479) $generated@@483))
))))))
 :pattern ( ($generated@@86 ($generated@@434 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (and (= (type $generated@@487) ($generated@@382 $generated@@253 $generated@@253)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@487 ($generated@@484 $generated@@488 $generated@@489) $generated@@490) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@253) ($generated@@0 ($generated@@86 ($generated@@380 $generated@@487) $generated@@491))) (and ($generated@@349 ($generated@@86 ($generated@@457 $generated@@487) $generated@@491) $generated@@489 $generated@@490) ($generated@@349 $generated@@491 $generated@@488 $generated@@490)))
 :pattern ( ($generated@@86 ($generated@@457 $generated@@487) $generated@@491))
 :pattern ( ($generated@@86 ($generated@@380 $generated@@487) $generated@@491))
))))
 :pattern ( ($generated@@79 $generated@@487 ($generated@@484 $generated@@488 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (! (= (type ($generated@@492 $generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (and (= (type $generated@@495) ($generated@@400 $generated@@253 $generated@@253)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@495 ($generated@@492 $generated@@496 $generated@@497) $generated@@498) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@253) ($generated@@0 ($generated@@86 ($generated@@398 $generated@@495) $generated@@499))) (and ($generated@@349 ($generated@@86 ($generated@@467 $generated@@495) $generated@@499) $generated@@497 $generated@@498) ($generated@@349 $generated@@499 $generated@@496 $generated@@498)))
 :pattern ( ($generated@@86 ($generated@@467 $generated@@495) $generated@@499))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@495) $generated@@499))
))))
 :pattern ( ($generated@@79 $generated@@495 ($generated@@492 $generated@@496 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 $generated@@501) (to_real $generated@@501))
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@T) ) (! (= (type ($generated@@502 $generated@@503)) ($generated@@81 $generated@@503 $generated@@4))
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@402 (type $generated@@504))))
(let (($generated@@506 ($generated@@401 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@400 $generated@@506 $generated@@505)) (= (= $generated@@504 ($generated@@399 $generated@@506 $generated@@505)) (= ($generated@@398 $generated@@504) ($generated@@502 $generated@@506))))))
 :pattern ( ($generated@@398 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@402 (type $generated@@507))))
(let (($generated@@509 ($generated@@401 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@400 $generated@@509 $generated@@508)) (= (= $generated@@507 ($generated@@399 $generated@@509 $generated@@508)) (= ($generated@@434 $generated@@507) ($generated@@502 $generated@@508))))))
 :pattern ( ($generated@@434 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@402 (type $generated@@510))))
(let (($generated@@512 ($generated@@401 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@400 $generated@@512 $generated@@511)) (= (= $generated@@510 ($generated@@399 $generated@@512 $generated@@511)) (= ($generated@@466 $generated@@510) ($generated@@502 $generated@@253))))))
 :pattern ( ($generated@@466 $generated@@510))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@384 (type $generated@@513))))
(let (($generated@@515 ($generated@@383 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@382 $generated@@515 $generated@@514)) (or (= $generated@@513 ($generated@@381 $generated@@515 $generated@@514)) (exists (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (and (and (= (type $generated@@516) $generated@@253) (= (type $generated@@517) $generated@@253)) ($generated@@0 ($generated@@86 ($generated@@455 $generated@@513) ($generated@@369 ($generated@@319 $generated@@516 $generated@@517)))))
 :no-pattern (type $generated@@516)
 :no-pattern (type $generated@@517)
 :no-pattern ($generated $generated@@516)
 :no-pattern ($generated@@0 $generated@@516)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
))))))
 :pattern ( ($generated@@455 $generated@@513))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@402 (type $generated@@518))))
(let (($generated@@520 ($generated@@401 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@400 $generated@@520 $generated@@519)) (or (= $generated@@518 ($generated@@399 $generated@@520 $generated@@519)) (exists (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (and (and (= (type $generated@@521) $generated@@253) (= (type $generated@@522) $generated@@253)) ($generated@@0 ($generated@@86 ($generated@@466 $generated@@518) ($generated@@369 ($generated@@319 $generated@@521 $generated@@522)))))
 :no-pattern (type $generated@@521)
 :no-pattern (type $generated@@522)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
))))))
 :pattern ( ($generated@@466 $generated@@518))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@253) ($generated@@320 $generated@@523 $generated@@46)) (and (= ($generated@@369 ($generated@@456 $generated@@2 $generated@@523)) $generated@@523) ($generated@@225 ($generated@@456 $generated@@2 $generated@@523) $generated@@46)))
 :pattern ( ($generated@@320 $generated@@523 $generated@@46))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@253) ($generated@@320 $generated@@524 $generated@@47)) (and (= ($generated@@369 ($generated@@456 $generated@@3 $generated@@524)) $generated@@524) ($generated@@225 ($generated@@456 $generated@@3 $generated@@524) $generated@@47)))
 :pattern ( ($generated@@320 $generated@@524 $generated@@47))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@253) ($generated@@320 $generated@@525 $generated@@44)) (and (= ($generated@@369 ($generated@@456 $generated@@4 $generated@@525)) $generated@@525) ($generated@@225 ($generated@@456 $generated@@4 $generated@@525) $generated@@44)))
 :pattern ( ($generated@@320 $generated@@525 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@526) 31))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@253) ($generated@@320 $generated@@527 $generated@@45)) (and (= ($generated@@369 ($generated@@456 $generated@@526 $generated@@527)) $generated@@527) ($generated@@225 ($generated@@456 $generated@@526 $generated@@527) $generated@@45)))
 :pattern ( ($generated@@320 $generated@@527 $generated@@45))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@320 ($generated@@369 $generated@@528) $generated@@529) ($generated@@225 $generated@@528 $generated@@529)))
 :pattern ( ($generated@@320 ($generated@@369 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@84 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@81 $generated@@531 $generated@@2)) (<= 0 ($generated@@374 $generated@@530))))
 :pattern ( ($generated@@374 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@364 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@363 $generated@@533)) (<= 0 ($generated@@362 $generated@@532))))
 :pattern ( ($generated@@362 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= ($generated@@534 ($generated@@484 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@484 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@538 ($generated@@484 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@484 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= ($generated@@77 ($generated@@484 $generated@@542 $generated@@543)) $generated@@58))
 :pattern ( ($generated@@484 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@492 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@492 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@492 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@492 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@64) (= (type $generated@@553) $generated@@64)) (= ($generated@@77 ($generated@@492 $generated@@552 $generated@@553)) $generated@@59))
 :pattern ( ($generated@@492 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@253) (= (type $generated@@555) $generated@@253)) (= ($generated@@355 ($generated@@319 $generated@@554 $generated@@555)) $generated@@61))
 :pattern ( ($generated@@319 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@64) (= (type $generated@@559) $generated@@64)) (= ($generated@@556 ($generated@@243 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@243 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@64)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@64) (= (type $generated@@563) $generated@@64)) (= ($generated@@560 ($generated@@243 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@243 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@253) (= (type $generated@@565) $generated@@253)) (= ($generated@@251 ($generated@@319 $generated@@564 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@319 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@253) (= (type $generated@@567) $generated@@253)) (= ($generated@@252 ($generated@@319 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@319 $generated@@566 $generated@@567))
)))
(assert  (and (forall (($generated@@570 T@U) ) (! (= (type ($generated@@568 $generated@@570)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@570))
)) (forall (($generated@@571 T@U) ($generated@@572 Int) ) (! (let (($generated@@573 ($generated@@364 (type $generated@@571))))
(= (type ($generated@@569 $generated@@571 $generated@@572)) $generated@@573))
 :pattern ( ($generated@@569 $generated@@571 $generated@@572))
))))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@363 $generated@@253)) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@574 ($generated@@568 $generated@@575) $generated@@576) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@362 $generated@@574))) ($generated@@349 ($generated@@569 $generated@@574 $generated@@577) $generated@@575 $generated@@576))
 :pattern ( ($generated@@569 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@79 $generated@@574 ($generated@@568 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@578 ($generated@@80 $generated@@579)) $generated@@579)
 :pattern ( ($generated@@80 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@330 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@330 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@77 ($generated@@330 $generated@@583)) $generated@@54))
 :pattern ( ($generated@@330 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@64)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@64) (= ($generated@@584 ($generated@@335 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@335 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@64) (= ($generated@@77 ($generated@@335 $generated@@587)) $generated@@55))
 :pattern ( ($generated@@335 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@64)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@64) (= ($generated@@588 ($generated@@258 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@258 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@64) (= ($generated@@77 ($generated@@258 $generated@@591)) $generated@@56))
 :pattern ( ($generated@@258 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@64)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@64) (= ($generated@@592 ($generated@@568 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@568 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@64) (= ($generated@@77 ($generated@@568 $generated@@595)) $generated@@57))
 :pattern ( ($generated@@568 $generated@@595))
)))
(assert (forall (($generated@@596 Int) ) (! (= ($generated@@340 ($generated@@500 $generated@@596)) $generated@@596)
 :pattern ( ($generated@@340 ($generated@@500 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@597)))
(= ($generated@@456 $generated@@598 ($generated@@369 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@369 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@382 $generated@@253 $generated@@253)) (= (type $generated@@600) $generated@@64)) (= (type $generated@@601) $generated@@64)) (= ($generated@@225 $generated@@599 ($generated@@484 $generated@@600 $generated@@601)) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@253) ($generated@@0 ($generated@@86 ($generated@@380 $generated@@599) $generated@@602))) (and ($generated@@320 ($generated@@86 ($generated@@457 $generated@@599) $generated@@602) $generated@@601) ($generated@@320 $generated@@602 $generated@@600)))
 :pattern ( ($generated@@86 ($generated@@457 $generated@@599) $generated@@602))
 :pattern ( ($generated@@86 ($generated@@380 $generated@@599) $generated@@602))
))))
 :pattern ( ($generated@@225 $generated@@599 ($generated@@484 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@400 $generated@@253 $generated@@253)) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) (= ($generated@@225 $generated@@603 ($generated@@492 $generated@@604 $generated@@605)) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@253) ($generated@@0 ($generated@@86 ($generated@@398 $generated@@603) $generated@@606))) (and ($generated@@320 ($generated@@86 ($generated@@467 $generated@@603) $generated@@606) $generated@@605) ($generated@@320 $generated@@606 $generated@@604)))
 :pattern ( ($generated@@86 ($generated@@467 $generated@@603) $generated@@606))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@603) $generated@@606))
))))
 :pattern ( ($generated@@225 $generated@@603 ($generated@@492 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@253) (= (type $generated@@610) $generated@@253)) (< ($generated@@607 $generated@@609) ($generated@@608 ($generated@@319 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@319 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@253) (= (type $generated@@612) $generated@@253)) (< ($generated@@607 $generated@@612) ($generated@@608 ($generated@@319 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@319 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@253) (= (type $generated@@614) $generated@@64)) (= (type $generated@@615) $generated@@64)) ($generated@@320 $generated@@613 ($generated@@484 $generated@@614 $generated@@615))) (and (= ($generated@@369 ($generated@@456 ($generated@@382 $generated@@253 $generated@@253) $generated@@613)) $generated@@613) ($generated@@225 ($generated@@456 ($generated@@382 $generated@@253 $generated@@253) $generated@@613) ($generated@@484 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@320 $generated@@613 ($generated@@484 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@253) (= (type $generated@@617) $generated@@64)) (= (type $generated@@618) $generated@@64)) ($generated@@320 $generated@@616 ($generated@@492 $generated@@617 $generated@@618))) (and (= ($generated@@369 ($generated@@456 ($generated@@400 $generated@@253 $generated@@253) $generated@@616)) $generated@@616) ($generated@@225 ($generated@@456 ($generated@@400 $generated@@253 $generated@@253) $generated@@616) ($generated@@492 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@320 $generated@@616 ($generated@@492 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@64) (= (type $generated@@620) $generated@@64)) (= (type $generated@@621) $generated@@253)) ($generated@@320 $generated@@621 ($generated@@243 $generated@@619 $generated@@620))) (and (= ($generated@@369 ($generated@@456 $generated@@244 $generated@@621)) $generated@@621) ($generated@@225 ($generated@@456 $generated@@244 $generated@@621) ($generated@@243 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@320 $generated@@621 ($generated@@243 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ) (! (let (($generated@@623 (type $generated@@622)))
 (not ($generated@@0 ($generated@@86 ($generated@@502 $generated@@623) $generated@@622))))
 :pattern ( (let (($generated@@623 (type $generated@@622)))
($generated@@86 ($generated@@502 $generated@@623) $generated@@622)))
)))
(assert (forall (($generated@@625 T@U) ) (! (= (type ($generated@@624 $generated@@625)) $generated@@69)
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@64) (= (type $generated@@627) $generated@@64)) (and (= ($generated@@77 ($generated@@243 $generated@@626 $generated@@627)) $generated@@62) (= ($generated@@624 ($generated@@243 $generated@@626 $generated@@627)) $generated@@63)))
 :pattern ( ($generated@@243 $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 Int) ($generated@@630 Int) ) (! (= ($generated@@628 $generated@@629 $generated@@630) (* $generated@@629 $generated@@630))
 :pattern ( ($generated@@628 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@244) (= ($generated@@607 ($generated@@369 $generated@@631)) ($generated@@608 $generated@@631)))
 :pattern ( ($generated@@607 ($generated@@369 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@253) ($generated@@320 $generated@@632 ($generated@@80 0))) (and (= ($generated@@369 ($generated@@456 $generated@@2 $generated@@632)) $generated@@632) ($generated@@225 ($generated@@456 ($generated@@81 $generated@@253 $generated@@4) $generated@@632) ($generated@@80 0))))
 :pattern ( ($generated@@320 $generated@@632 ($generated@@80 0)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@253) ($generated@@320 $generated@@633 ($generated@@80 1))) (and (= ($generated@@369 ($generated@@456 $generated@@137 $generated@@633)) $generated@@633) ($generated@@225 ($generated@@456 $generated@@137 $generated@@633) ($generated@@80 1))))
 :pattern ( ($generated@@320 $generated@@633 ($generated@@80 1)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@253) (= (type $generated@@635) $generated@@64)) ($generated@@320 $generated@@634 ($generated@@330 $generated@@635))) (and (= ($generated@@369 ($generated@@456 ($generated@@81 $generated@@253 $generated@@4) $generated@@634)) $generated@@634) ($generated@@225 ($generated@@456 ($generated@@81 $generated@@253 $generated@@4) $generated@@634) ($generated@@330 $generated@@635))))
 :pattern ( ($generated@@320 $generated@@634 ($generated@@330 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@253) (= (type $generated@@637) $generated@@64)) ($generated@@320 $generated@@636 ($generated@@335 $generated@@637))) (and (= ($generated@@369 ($generated@@456 ($generated@@81 $generated@@253 $generated@@4) $generated@@636)) $generated@@636) ($generated@@225 ($generated@@456 ($generated@@81 $generated@@253 $generated@@4) $generated@@636) ($generated@@335 $generated@@637))))
 :pattern ( ($generated@@320 $generated@@636 ($generated@@335 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@253) (= (type $generated@@639) $generated@@64)) ($generated@@320 $generated@@638 ($generated@@258 $generated@@639))) (and (= ($generated@@369 ($generated@@456 ($generated@@81 $generated@@253 $generated@@2) $generated@@638)) $generated@@638) ($generated@@225 ($generated@@456 ($generated@@81 $generated@@253 $generated@@2) $generated@@638) ($generated@@258 $generated@@639))))
 :pattern ( ($generated@@320 $generated@@638 ($generated@@258 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) $generated@@253) (= (type $generated@@641) $generated@@64)) ($generated@@320 $generated@@640 ($generated@@568 $generated@@641))) (and (= ($generated@@369 ($generated@@456 ($generated@@363 $generated@@253) $generated@@640)) $generated@@640) ($generated@@225 ($generated@@456 ($generated@@363 $generated@@253) $generated@@640) ($generated@@568 $generated@@641))))
 :pattern ( ($generated@@320 $generated@@640 ($generated@@568 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@253) ($generated@@320 $generated@@642 ($generated@@80 2))) (and (= ($generated@@369 ($generated@@456 $generated@@145 $generated@@642)) $generated@@642) ($generated@@225 ($generated@@456 $generated@@145 $generated@@642) ($generated@@80 2))))
 :pattern ( ($generated@@320 $generated@@642 ($generated@@80 2)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@253) ($generated@@320 $generated@@643 ($generated@@80 3))) (and (= ($generated@@369 ($generated@@456 $generated@@153 $generated@@643)) $generated@@643) ($generated@@225 ($generated@@456 $generated@@153 $generated@@643) ($generated@@80 3))))
 :pattern ( ($generated@@320 $generated@@643 ($generated@@80 3)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@253) ($generated@@320 $generated@@644 ($generated@@80 4))) (and (= ($generated@@369 ($generated@@456 $generated@@161 $generated@@644)) $generated@@644) ($generated@@225 ($generated@@456 $generated@@161 $generated@@644) ($generated@@80 4))))
 :pattern ( ($generated@@320 $generated@@644 ($generated@@80 4)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@253) ($generated@@320 $generated@@645 ($generated@@80 7))) (and (= ($generated@@369 ($generated@@456 $generated@@169 $generated@@645)) $generated@@645) ($generated@@225 ($generated@@456 $generated@@169 $generated@@645) ($generated@@80 7))))
 :pattern ( ($generated@@320 $generated@@645 ($generated@@80 7)))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@253) ($generated@@320 $generated@@646 ($generated@@80 8))) (and (= ($generated@@369 ($generated@@456 $generated@@177 $generated@@646)) $generated@@646) ($generated@@225 ($generated@@456 $generated@@177 $generated@@646) ($generated@@80 8))))
 :pattern ( ($generated@@320 $generated@@646 ($generated@@80 8)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@253) ($generated@@320 $generated@@647 ($generated@@80 15))) (and (= ($generated@@369 ($generated@@456 $generated@@185 $generated@@647)) $generated@@647) ($generated@@225 ($generated@@456 $generated@@185 $generated@@647) ($generated@@80 15))))
 :pattern ( ($generated@@320 $generated@@647 ($generated@@80 15)))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@253) ($generated@@320 $generated@@648 ($generated@@80 16))) (and (= ($generated@@369 ($generated@@456 $generated@@193 $generated@@648)) $generated@@648) ($generated@@225 ($generated@@456 $generated@@193 $generated@@648) ($generated@@80 16))))
 :pattern ( ($generated@@320 $generated@@648 ($generated@@80 16)))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@253) ($generated@@320 $generated@@649 ($generated@@80 32))) (and (= ($generated@@369 ($generated@@456 $generated@@201 $generated@@649)) $generated@@649) ($generated@@225 ($generated@@456 $generated@@201 $generated@@649) ($generated@@80 32))))
 :pattern ( ($generated@@320 $generated@@649 ($generated@@80 32)))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@253) ($generated@@320 $generated@@650 ($generated@@80 53))) (and (= ($generated@@369 ($generated@@456 $generated@@209 $generated@@650)) $generated@@650) ($generated@@225 ($generated@@456 $generated@@209 $generated@@650) ($generated@@80 53))))
 :pattern ( ($generated@@320 $generated@@650 ($generated@@80 53)))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@253) ($generated@@320 $generated@@651 ($generated@@80 100))) (and (= ($generated@@369 ($generated@@456 $generated@@217 $generated@@651)) $generated@@651) ($generated@@225 ($generated@@456 $generated@@217 $generated@@651) ($generated@@80 100))))
 :pattern ( ($generated@@320 $generated@@651 ($generated@@80 100)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@652) ($generated@@81 $generated@@253 $generated@@2)) (= (type $generated@@653) $generated@@64)) (= (type $generated@@654) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@652 ($generated@@258 $generated@@653) $generated@@654) (forall (($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@253) (< 0 ($generated ($generated@@86 $generated@@652 $generated@@655)))) ($generated@@349 $generated@@655 $generated@@653 $generated@@654))
 :pattern ( ($generated@@86 $generated@@652 $generated@@655))
))))
 :pattern ( ($generated@@79 $generated@@652 ($generated@@258 $generated@@653) $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@244) (= (type $generated@@657) $generated@@64)) (= (type $generated@@658) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@348 $generated@@658) (and ($generated@@242 $generated@@656) (exists (($generated@@659 T@U) ) (!  (and (= (type $generated@@659) $generated@@64) ($generated@@79 $generated@@656 ($generated@@243 $generated@@657 $generated@@659) $generated@@658))
 :pattern ( ($generated@@79 $generated@@656 ($generated@@243 $generated@@657 $generated@@659) $generated@@658))
))))) ($generated@@349 ($generated@@251 $generated@@656) $generated@@657 $generated@@658))
 :pattern ( ($generated@@349 ($generated@@251 $generated@@656) $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) $generated@@244) (= (type $generated@@661) $generated@@64)) (= (type $generated@@662) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@348 $generated@@662) (and ($generated@@242 $generated@@660) (exists (($generated@@663 T@U) ) (!  (and (= (type $generated@@663) $generated@@64) ($generated@@79 $generated@@660 ($generated@@243 $generated@@663 $generated@@661) $generated@@662))
 :pattern ( ($generated@@79 $generated@@660 ($generated@@243 $generated@@663 $generated@@661) $generated@@662))
))))) ($generated@@349 ($generated@@252 $generated@@660) $generated@@661 $generated@@662))
 :pattern ( ($generated@@349 ($generated@@252 $generated@@660) $generated@@661 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@253) (= (type $generated@@665) $generated@@253)) (= ($generated@@319 ($generated@@343 $generated@@664) ($generated@@343 $generated@@665)) ($generated@@343 ($generated@@319 $generated@@664 $generated@@665))))
 :pattern ( ($generated@@319 ($generated@@343 $generated@@664) ($generated@@343 $generated@@665)))
)))
(assert (forall (($generated@@666 Int) ) (! (= ($generated@@369 ($generated@@8 ($generated@@75 $generated@@666))) ($generated@@343 ($generated@@369 ($generated@@8 $generated@@666))))
 :pattern ( ($generated@@369 ($generated@@8 ($generated@@75 $generated@@666))))
)))
(assert (forall (($generated@@667 T@U) ) (! (= ($generated@@369 ($generated@@343 $generated@@667)) ($generated@@343 ($generated@@369 $generated@@667)))
 :pattern ( ($generated@@369 ($generated@@343 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ) (! (let (($generated@@669 ($generated@@364 (type $generated@@668))))
 (=> (and (= (type $generated@@668) ($generated@@363 $generated@@669)) (= ($generated@@362 $generated@@668) 0)) (= $generated@@668 ($generated@@361 $generated@@669))))
 :pattern ( ($generated@@362 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (! (let (($generated@@673 (type $generated@@671)))
 (=> (and (and (= (type $generated@@670) ($generated@@81 $generated@@673 $generated@@2)) (= (type $generated@@672) $generated@@2)) (<= 0 ($generated $generated@@672))) (= ($generated@@374 ($generated@@87 $generated@@670 $generated@@671 $generated@@672)) (+ (- ($generated@@374 $generated@@670) ($generated ($generated@@86 $generated@@670 $generated@@671))) ($generated $generated@@672)))))
 :pattern ( ($generated@@374 ($generated@@87 $generated@@670 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@675) $generated@@2)) ($generated@@79 $generated@@675 $generated@@46 $generated@@674))
 :pattern ( ($generated@@79 $generated@@675 $generated@@46 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@677) $generated@@3)) ($generated@@79 $generated@@677 $generated@@47 $generated@@676))
 :pattern ( ($generated@@79 $generated@@677 $generated@@47 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@679) $generated@@4)) ($generated@@79 $generated@@679 $generated@@44 $generated@@678))
 :pattern ( ($generated@@79 $generated@@679 $generated@@44 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@681) $generated@@526)) ($generated@@79 $generated@@681 $generated@@45 $generated@@680))
 :pattern ( ($generated@@79 $generated@@681 $generated@@45 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@683) $generated@@253)) ($generated@@79 $generated@@683 $generated@@48 $generated@@682))
 :pattern ( ($generated@@79 $generated@@683 $generated@@48 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) ($generated@@363 $generated@@253)) (= (type $generated@@685) $generated@@64)) (= ($generated@@225 $generated@@684 ($generated@@568 $generated@@685)) (forall (($generated@@686 Int) ) (!  (=> (and (<= 0 $generated@@686) (< $generated@@686 ($generated@@362 $generated@@684))) ($generated@@320 ($generated@@569 $generated@@684 $generated@@686) $generated@@685))
 :pattern ( ($generated@@569 $generated@@684 $generated@@686))
))))
 :pattern ( ($generated@@225 $generated@@684 ($generated@@568 $generated@@685)))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 Int) ) (!  (=> (= (type $generated@@688) ($generated@@363 $generated@@253)) (=> (and (<= 0 $generated@@689) (< $generated@@689 ($generated@@362 $generated@@688))) (< ($generated@@608 ($generated@@456 $generated@@244 ($generated@@569 $generated@@688 $generated@@689))) ($generated@@687 $generated@@688))))
 :pattern ( ($generated@@608 ($generated@@456 $generated@@244 ($generated@@569 $generated@@688 $generated@@689))))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) ($generated@@382 $generated@@253 $generated@@253)) (= (type $generated@@691) $generated@@64)) (= (type $generated@@692) $generated@@64)) ($generated@@225 $generated@@690 ($generated@@484 $generated@@691 $generated@@692))) (and (and ($generated@@225 ($generated@@380 $generated@@690) ($generated@@330 $generated@@691)) ($generated@@225 ($generated@@423 $generated@@690) ($generated@@330 $generated@@692))) ($generated@@225 ($generated@@455 $generated@@690) ($generated@@330 ($generated@@243 $generated@@691 $generated@@692)))))
 :pattern ( ($generated@@225 $generated@@690 ($generated@@484 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) ($generated@@400 $generated@@253 $generated@@253)) (= (type $generated@@694) $generated@@64)) (= (type $generated@@695) $generated@@64)) ($generated@@225 $generated@@693 ($generated@@492 $generated@@694 $generated@@695))) (and (and ($generated@@225 ($generated@@398 $generated@@693) ($generated@@335 $generated@@694)) ($generated@@225 ($generated@@434 $generated@@693) ($generated@@335 $generated@@695))) ($generated@@225 ($generated@@466 $generated@@693) ($generated@@335 ($generated@@243 $generated@@694 $generated@@695)))))
 :pattern ( ($generated@@225 $generated@@693 ($generated@@492 $generated@@694 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@2) ($generated@@225 $generated@@696 $generated@@46))
 :pattern ( ($generated@@225 $generated@@696 $generated@@46))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@3) ($generated@@225 $generated@@697 $generated@@47))
 :pattern ( ($generated@@225 $generated@@697 $generated@@47))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@4) ($generated@@225 $generated@@698 $generated@@44))
 :pattern ( ($generated@@225 $generated@@698 $generated@@44))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@526) ($generated@@225 $generated@@699 $generated@@45))
 :pattern ( ($generated@@225 $generated@@699 $generated@@45))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (= (type $generated@@700) $generated@@253) ($generated@@225 $generated@@700 $generated@@48))
 :pattern ( ($generated@@225 $generated@@700 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () Int)
(declare-fun $generated@@705 () Int)
(declare-fun $generated@@706 () Int)
(declare-fun $generated@@707 (T@U) Bool)
(declare-fun $generated@@708 () T@U)
(assert  (and (and (and (= (type $generated@@701) ($generated@@265 $generated@@82 $generated@@4)) (= (type $generated@@702) $generated@@82)) (= (type $generated@@703) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@708) ($generated@@363 $generated@@253))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@709  (=> (= $generated@@701 ($generated@@264 $generated@@702 $generated@@703 $generated@@60 false)) (=> (and (and ($generated@@79 ($generated@@8 $generated@@704) $generated@@46 $generated@@703) ($generated@@74 $generated@@704)) (and ($generated@@79 ($generated@@8 $generated@@704) $generated@@46 $generated@@703) ($generated@@239 $generated@@704))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= ($generated@@500 ($generated@@238 $generated@@704)) 0.0))) (=> (not (= ($generated@@500 ($generated@@238 $generated@@704)) 0.0)) (=> (and (and (and ($generated@@74 $generated@@704) ($generated@@239 $generated@@704)) (and (= $generated@@705 ($generated@@628 ($generated@@73 $generated@@704) ($generated@@340 (/ ($generated@@500 $generated@@706) ($generated@@500 ($generated@@238 $generated@@704)))))) ($generated@@79 ($generated@@8 $generated@@704) $generated@@46 $generated@@703))) (and (and ($generated@@239 $generated@@704) ($generated@@79 ($generated@@8 $generated@@704) $generated@@46 $generated@@703)) (and ($generated@@239 $generated@@704) (= (ControlFlow 0 2) (- 0 1))))) (not (= ($generated@@500 ($generated@@238 $generated@@704)) 0.0)))))))))
(let (($generated@@710  (=> (and ($generated@@348 $generated@@703) ($generated@@707 $generated@@703)) (=> (and (and (and ($generated@@225 $generated@@708 ($generated@@568 $generated@@45)) ($generated@@79 $generated@@708 ($generated@@568 $generated@@45) $generated@@703)) (= 2 $generated@@72)) (and (not (= $generated@@704 0)) (= (ControlFlow 0 4) 2))) $generated@@709))))
$generated@@710)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 () T@T)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 () T@T)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@259 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U T@U) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@334 (T@U) Bool)
(declare-fun $generated@@335 (T@U T@U T@U) Bool)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@347 (T@T) T@U)
(declare-fun $generated@@348 (T@U) Int)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@360 (T@U) Int)
(declare-fun $generated@@361 (T@T) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@T T@T) T@U)
(declare-fun $generated@@368 (T@T T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@370 (T@T) T@T)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@T T@T) T@U)
(declare-fun $generated@@386 (T@T T@T) T@T)
(declare-fun $generated@@387 (T@T) T@T)
(declare-fun $generated@@388 (T@T) T@T)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@441 (T@T T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@469 (T@U T@U) T@U)
(declare-fun $generated@@477 (T@U T@U) T@U)
(declare-fun $generated@@485 (T@T) T@U)
(declare-fun $generated@@509 () T@T)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@552 (T@U Int) T@U)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(declare-fun $generated@@590 (T@U) Int)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@665 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@2) ($generated@@220 $generated@@221 ($generated@@75 0)))
 :pattern ( ($generated@@220 $generated@@221 ($generated@@75 0)))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (= (type $generated@@222) $generated@@132) ($generated@@220 $generated@@222 ($generated@@75 1)))
 :pattern ( ($generated@@220 $generated@@222 ($generated@@75 1)))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@140) ($generated@@220 $generated@@223 ($generated@@75 2)))
 :pattern ( ($generated@@220 $generated@@223 ($generated@@75 2)))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (= (type $generated@@224) $generated@@148) ($generated@@220 $generated@@224 ($generated@@75 3)))
 :pattern ( ($generated@@220 $generated@@224 ($generated@@75 3)))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@156) ($generated@@220 $generated@@225 ($generated@@75 4)))
 :pattern ( ($generated@@220 $generated@@225 ($generated@@75 4)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@164) ($generated@@220 $generated@@226 ($generated@@75 7)))
 :pattern ( ($generated@@220 $generated@@226 ($generated@@75 7)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@172) ($generated@@220 $generated@@227 ($generated@@75 8)))
 :pattern ( ($generated@@220 $generated@@227 ($generated@@75 8)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@180) ($generated@@220 $generated@@228 ($generated@@75 15)))
 :pattern ( ($generated@@220 $generated@@228 ($generated@@75 15)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@188) ($generated@@220 $generated@@229 ($generated@@75 16)))
 :pattern ( ($generated@@220 $generated@@229 ($generated@@75 16)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@196) ($generated@@220 $generated@@230 ($generated@@75 32)))
 :pattern ( ($generated@@220 $generated@@230 ($generated@@75 32)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@204) ($generated@@220 $generated@@231 ($generated@@75 53)))
 :pattern ( ($generated@@220 $generated@@231 ($generated@@75 53)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@212) ($generated@@220 $generated@@232 ($generated@@75 100)))
 :pattern ( ($generated@@220 $generated@@232 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@235) 25) (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@64) (= (type $generated@@239) $generated@@64)) (= (type $generated@@240) $generated@@235)) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239))) ($generated@@233 $generated@@240))
 :pattern ( ($generated@@233 $generated@@240) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239)))
)))
(assert  (and (and (= ($generated@@1 $generated@@244) 26) (forall (($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@242 $generated@@245))
))) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@246)) $generated@@244)
 :pattern ( ($generated@@243 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@235) (= (type $generated@@248) $generated@@235)) true) (= ($generated@@241 $generated@@247 $generated@@248)  (and (= ($generated@@242 $generated@@247) ($generated@@242 $generated@@248)) (= ($generated@@243 $generated@@247) ($generated@@243 $generated@@248)))))
 :pattern ( ($generated@@241 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@249 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@253) $generated@@64)) ($generated@@220 $generated@@252 ($generated@@249 $generated@@253))) ($generated@@250 $generated@@252))
 :pattern ( ($generated@@220 $generated@@252 ($generated@@249 $generated@@253)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@260 $generated@@261)) 27)) (forall (($generated@@262 T@T) ($generated@@263 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@262 $generated@@263)) $generated@@262)
 :pattern ( ($generated@@256 $generated@@262 $generated@@263))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@264 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@256 $generated@@264 $generated@@265))
))) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@258 (type $generated@@266))))
(= (type ($generated@@254 $generated@@266 $generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@254 $generated@@266 $generated@@267 $generated@@268))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(let (($generated@@275 (type $generated@@271)))
(= (type ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273)) ($generated@@256 $generated@@275 $generated@@274))))
 :pattern ( ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273))
))) (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@258 (type $generated@@276))))
 (=> (= (type $generated@@279) $generated@@280) (= ($generated@@254 ($generated@@259 $generated@@276 $generated@@277 $generated@@278 $generated@@279) $generated@@277 $generated@@278) $generated@@279)))
 :weight 0
))) (and (and (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (or (= $generated@@283 $generated@@285) (= ($generated@@254 ($generated@@259 $generated@@282 $generated@@283 $generated@@284 $generated@@281) $generated@@285 $generated@@286) ($generated@@254 $generated@@282 $generated@@285 $generated@@286)))
 :weight 0
)) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (or (= $generated@@290 $generated@@292) (= ($generated@@254 ($generated@@259 $generated@@288 $generated@@289 $generated@@290 $generated@@287) $generated@@291 $generated@@292) ($generated@@254 $generated@@288 $generated@@291 $generated@@292)))
 :weight 0
))) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (or true (= ($generated@@254 ($generated@@259 $generated@@294 $generated@@295 $generated@@296 $generated@@293) $generated@@297 $generated@@298) ($generated@@254 $generated@@294 $generated@@297 $generated@@298)))
 :weight 0
)))) (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Bool) ) (! (= (type ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302)) ($generated@@256 $generated@@77 $generated@@4))
 :pattern ( ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ($generated@@307 T@U) ($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@67 (type $generated@@308))))
 (=> (and (and (and (and (= (type $generated@@303) $generated@@77) (= (type $generated@@304) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@305) ($generated@@66 $generated@@4))) (= (type $generated@@307) $generated@@77)) (= (type $generated@@308) ($generated@@66 $generated@@309))) (= ($generated@@0 ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))  (=> (and (not (= $generated@@307 $generated@@303)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@304 $generated@@307) $generated@@305))) $generated@@306))))
 :pattern ( ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (= (type ($generated@@310 $generated@@312 $generated@@313)) $generated@@235)
 :pattern ( ($generated@@310 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@64) (= (type $generated@@315) $generated@@64)) (= (type $generated@@316) $generated@@244)) (= (type $generated@@317) $generated@@244)) (= ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315))  (and ($generated@@311 $generated@@316 $generated@@314) ($generated@@311 $generated@@317 $generated@@315))))
 :pattern ( ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@235) (= (type $generated@@319) $generated@@235)) (= ($generated@@241 $generated@@318 $generated@@319) (= $generated@@318 $generated@@319)))
 :pattern ( ($generated@@241 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@64)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@323) $generated@@64)) (= ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@244) ($generated@@0 ($generated@@81 $generated@@322 $generated@@324))) ($generated@@311 $generated@@324 $generated@@323))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
))))
 :pattern ( ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@64)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@328) $generated@@64)) (= ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@244) ($generated@@0 ($generated@@81 $generated@@327 $generated@@329))) ($generated@@311 $generated@@329 $generated@@328))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 (type $generated@@331)))
(= (type ($generated@@330 $generated@@331)) $generated@@332))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= ($generated@@330 $generated@@333) $generated@@333)
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@336) $generated@@64) (= (type $generated@@337) $generated@@64)) (= (type $generated@@338) $generated@@244)) (= (type $generated@@339) $generated@@244)) (= (type $generated@@340) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@334 $generated@@340)) (= ($generated@@74 ($generated@@310 $generated@@338 $generated@@339) ($generated@@234 $generated@@336 $generated@@337) $generated@@340)  (and ($generated@@335 $generated@@338 $generated@@336 $generated@@340) ($generated@@335 $generated@@339 $generated@@337 $generated@@340))))
 :pattern ( ($generated@@74 ($generated@@310 $generated@@338 $generated@@339) ($generated@@234 $generated@@336 $generated@@337) $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@68)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@235) (= ($generated@@233 $generated@@343) (= ($generated@@341 $generated@@343) $generated@@61)))
 :pattern ( ($generated@@233 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@235) ($generated@@233 $generated@@344)) (exists (($generated@@345 T@U) ($generated@@346 T@U) ) (!  (and (and (= (type $generated@@345) $generated@@244) (= (type $generated@@346) $generated@@244)) (= $generated@@344 ($generated@@310 $generated@@345 $generated@@346)))
 :no-pattern (type $generated@@345)
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
)))
 :pattern ( ($generated@@233 $generated@@344))
)))
(assert  (and (and (forall (($generated@@351 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@351)) 28)) (forall (($generated@@352 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@352)) $generated@@352)
 :pattern ( ($generated@@349 $generated@@352))
))) (forall (($generated@@353 T@T) ) (! (= (type ($generated@@347 $generated@@353)) ($generated@@349 $generated@@353))
 :pattern ( ($generated@@347 $generated@@353))
))))
(assert (forall (($generated@@354 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@354)) 0)
 :pattern ( ($generated@@347 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@244)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@64) (= (type $generated@@359) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@335 ($generated@@355 $generated@@357) $generated@@358 $generated@@359) ($generated@@74 $generated@@357 $generated@@358 $generated@@359)))
 :pattern ( ($generated@@335 ($generated@@355 $generated@@357) $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@362 T@T) ) (! (= (type ($generated@@361 $generated@@362)) ($generated@@76 $generated@@362 $generated@@2))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@79 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@76 $generated@@364 $generated@@2)) (and (= (= ($generated@@360 $generated@@363) 0) (= $generated@@363 ($generated@@361 $generated@@364))) (=> (not (= ($generated@@360 $generated@@363) 0)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) (< 0 ($generated ($generated@@81 $generated@@363 $generated@@365))))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert  (and (and (and (and (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (= ($generated@@1 ($generated@@368 $generated@@371 $generated@@372)) 29)) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= ($generated@@369 ($generated@@368 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@368 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@370 ($generated@@368 $generated@@375 $generated@@376)) $generated@@376)
 :pattern ( ($generated@@368 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@369 (type $generated@@377))))
(= (type ($generated@@366 $generated@@377)) ($generated@@76 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@377))
))) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= (type ($generated@@367 $generated@@379 $generated@@380)) ($generated@@368 $generated@@379 $generated@@380))
 :pattern ( ($generated@@367 $generated@@379 $generated@@380))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@T) ) (! (let (($generated@@383 (type $generated@@381)))
 (not ($generated@@0 ($generated@@81 ($generated@@366 ($generated@@367 $generated@@383 $generated@@382)) $generated@@381))))
 :pattern ( (let (($generated@@383 (type $generated@@381)))
($generated@@81 ($generated@@366 ($generated@@367 $generated@@383 $generated@@382)) $generated@@381)))
)))
(assert  (and (and (and (and (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (= ($generated@@1 ($generated@@386 $generated@@389 $generated@@390)) 30)) (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (! (= ($generated@@387 ($generated@@386 $generated@@391 $generated@@392)) $generated@@391)
 :pattern ( ($generated@@386 $generated@@391 $generated@@392))
))) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@388 ($generated@@386 $generated@@393 $generated@@394)) $generated@@394)
 :pattern ( ($generated@@386 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@387 (type $generated@@395))))
(= (type ($generated@@384 $generated@@395)) ($generated@@76 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@384 $generated@@395))
))) (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (! (= (type ($generated@@385 $generated@@397 $generated@@398)) ($generated@@386 $generated@@397 $generated@@398))
 :pattern ( ($generated@@385 $generated@@397 $generated@@398))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@T) ) (! (let (($generated@@401 (type $generated@@399)))
 (not ($generated@@0 ($generated@@81 ($generated@@384 ($generated@@385 $generated@@401 $generated@@400)) $generated@@399))))
 :pattern ( (let (($generated@@401 (type $generated@@399)))
($generated@@81 ($generated@@384 ($generated@@385 $generated@@401 $generated@@400)) $generated@@399)))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@79 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@76 $generated@@403 $generated@@2)) (= ($generated@@250 $generated@@402) (forall (($generated@@404 T@U) ) (!  (=> (= (type $generated@@404) $generated@@403) (and (<= 0 ($generated ($generated@@81 $generated@@402 $generated@@404))) (<= ($generated ($generated@@81 $generated@@402 $generated@@404)) ($generated@@360 $generated@@402))))
 :pattern ( ($generated@@81 $generated@@402 $generated@@404))
)))))
 :pattern ( ($generated@@250 $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@370 (type $generated@@405))))
(let (($generated@@407 ($generated@@369 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@368 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@367 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@366 $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@370 (type $generated@@410))))
(= (type ($generated@@409 $generated@@410)) ($generated@@76 $generated@@411 $generated@@4)))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@370 (type $generated@@412))))
(let (($generated@@414 ($generated@@369 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@368 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@367 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@413) ($generated@@0 ($generated@@81 ($generated@@409 $generated@@412) $generated@@415)))
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@409 $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@388 (type $generated@@416))))
(let (($generated@@418 ($generated@@387 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@386 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@385 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) ($generated@@0 ($generated@@81 ($generated@@384 $generated@@416) $generated@@419)))
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@384 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@388 (type $generated@@421))))
(= (type ($generated@@420 $generated@@421)) ($generated@@76 $generated@@422 $generated@@4)))
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@388 (type $generated@@423))))
(let (($generated@@425 ($generated@@387 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@386 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@385 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@424) ($generated@@0 ($generated@@81 ($generated@@420 $generated@@423) $generated@@426)))
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@420 $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@428) $generated@@64)) (= ($generated@@220 $generated@@427 ($generated@@249 $generated@@428)) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@427 $generated@@429)))) ($generated@@311 $generated@@429 $generated@@428))
 :pattern ( ($generated@@81 $generated@@427 $generated@@429))
))))
 :pattern ( ($generated@@220 $generated@@427 ($generated@@249 $generated@@428)))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (= (type $generated@@430) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@431) $generated@@64)) (= (type $generated@@432) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@430 ($generated@@320 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@244) ($generated@@0 ($generated@@81 $generated@@430 $generated@@433))) ($generated@@335 $generated@@433 $generated@@431 $generated@@432))
 :pattern ( ($generated@@81 $generated@@430 $generated@@433))
))))
 :pattern ( ($generated@@74 $generated@@430 ($generated@@320 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (= (type $generated@@434) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@435) $generated@@64)) (= (type $generated@@436) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@434 ($generated@@325 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@244) ($generated@@0 ($generated@@81 $generated@@434 $generated@@437))) ($generated@@335 $generated@@437 $generated@@435 $generated@@436))
 :pattern ( ($generated@@81 $generated@@434 $generated@@437))
))))
 :pattern ( ($generated@@74 $generated@@434 ($generated@@325 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(= ($generated ($generated@@81 ($generated@@361 $generated@@439) $generated@@438)) 0))
 :pattern ( (let (($generated@@439 (type $generated@@438)))
($generated@@81 ($generated@@361 $generated@@439) $generated@@438)))
)))
(assert  (and (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@440 $generated@@443)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@440 $generated@@443))
)) (forall (($generated@@444 T@T) ($generated@@445 T@U) ) (! (= (type ($generated@@441 $generated@@444 $generated@@445)) $generated@@444)
 :pattern ( ($generated@@441 $generated@@444 $generated@@445))
))) (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@370 (type $generated@@446))))
(let (($generated@@448 ($generated@@369 (type $generated@@446))))
(= (type ($generated@@442 $generated@@446)) ($generated@@76 $generated@@448 $generated@@447))))
 :pattern ( ($generated@@442 $generated@@446))
))))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) ($generated@@368 $generated@@244 $generated@@244)) (= (type $generated@@450) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@440 $generated@@449) $generated@@450))  (and ($generated@@0 ($generated@@81 ($generated@@366 $generated@@449) ($generated@@242 ($generated@@441 $generated@@235 $generated@@450)))) (= ($generated@@81 ($generated@@442 $generated@@449) ($generated@@242 ($generated@@441 $generated@@235 $generated@@450))) ($generated@@243 ($generated@@441 $generated@@235 $generated@@450))))))
 :pattern ( ($generated@@81 ($generated@@440 $generated@@449) $generated@@450))
)))
(assert  (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@453)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@451 $generated@@453))
)) (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@388 (type $generated@@454))))
(let (($generated@@456 ($generated@@387 (type $generated@@454))))
(= (type ($generated@@452 $generated@@454)) ($generated@@76 $generated@@456 $generated@@455))))
 :pattern ( ($generated@@452 $generated@@454))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) ($generated@@386 $generated@@244 $generated@@244)) (= (type $generated@@458) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@451 $generated@@457) $generated@@458))  (and ($generated@@0 ($generated@@81 ($generated@@384 $generated@@457) ($generated@@242 ($generated@@441 $generated@@235 $generated@@458)))) (= ($generated@@81 ($generated@@452 $generated@@457) ($generated@@242 ($generated@@441 $generated@@235 $generated@@458))) ($generated@@243 ($generated@@441 $generated@@235 $generated@@458))))))
 :pattern ( ($generated@@81 ($generated@@451 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (let (($generated@@461 (type $generated@@460)))
(let (($generated@@462 ($generated@@369 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@368 $generated@@462 $generated@@461)) (= ($generated@@0 ($generated@@81 ($generated@@409 $generated@@459) $generated@@460)) (exists (($generated@@463 T@U) ) (!  (and (= (type $generated@@463) $generated@@462) (and ($generated@@0 ($generated@@81 ($generated@@366 $generated@@459) $generated@@463)) (= $generated@@460 ($generated@@81 ($generated@@442 $generated@@459) $generated@@463))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@459) $generated@@463))
 :pattern ( ($generated@@81 ($generated@@442 $generated@@459) $generated@@463))
))))))
 :pattern ( ($generated@@81 ($generated@@409 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (! (let (($generated@@466 (type $generated@@465)))
(let (($generated@@467 ($generated@@387 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@386 $generated@@467 $generated@@466)) (= ($generated@@0 ($generated@@81 ($generated@@420 $generated@@464) $generated@@465)) (exists (($generated@@468 T@U) ) (!  (and (= (type $generated@@468) $generated@@467) (and ($generated@@0 ($generated@@81 ($generated@@384 $generated@@464) $generated@@468)) (= $generated@@465 ($generated@@81 ($generated@@452 $generated@@464) $generated@@468))))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@464) $generated@@468))
 :pattern ( ($generated@@81 ($generated@@452 $generated@@464) $generated@@468))
))))))
 :pattern ( ($generated@@81 ($generated@@420 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (and (= (type $generated@@472) ($generated@@368 $generated@@244 $generated@@244)) (= (type $generated@@473) $generated@@64)) (= (type $generated@@474) $generated@@64)) (= (type $generated@@475) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@472 ($generated@@469 $generated@@473 $generated@@474) $generated@@475) (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@472) $generated@@476))) (and ($generated@@335 ($generated@@81 ($generated@@442 $generated@@472) $generated@@476) $generated@@474 $generated@@475) ($generated@@335 $generated@@476 $generated@@473 $generated@@475)))
 :pattern ( ($generated@@81 ($generated@@442 $generated@@472) $generated@@476))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@472) $generated@@476))
))))
 :pattern ( ($generated@@74 $generated@@472 ($generated@@469 $generated@@473 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (and (= (type $generated@@480) ($generated@@386 $generated@@244 $generated@@244)) (= (type $generated@@481) $generated@@64)) (= (type $generated@@482) $generated@@64)) (= (type $generated@@483) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@480 ($generated@@477 $generated@@481 $generated@@482) $generated@@483) (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@384 $generated@@480) $generated@@484))) (and ($generated@@335 ($generated@@81 ($generated@@452 $generated@@480) $generated@@484) $generated@@482 $generated@@483) ($generated@@335 $generated@@484 $generated@@481 $generated@@483)))
 :pattern ( ($generated@@81 ($generated@@452 $generated@@480) $generated@@484))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@480) $generated@@484))
))))
 :pattern ( ($generated@@74 $generated@@480 ($generated@@477 $generated@@481 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 T@T) ) (! (= (type ($generated@@485 $generated@@486)) ($generated@@76 $generated@@486 $generated@@4))
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@388 (type $generated@@487))))
(let (($generated@@489 ($generated@@387 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@386 $generated@@489 $generated@@488)) (= (= $generated@@487 ($generated@@385 $generated@@489 $generated@@488)) (= ($generated@@384 $generated@@487) ($generated@@485 $generated@@489))))))
 :pattern ( ($generated@@384 $generated@@487))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@388 (type $generated@@490))))
(let (($generated@@492 ($generated@@387 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@386 $generated@@492 $generated@@491)) (= (= $generated@@490 ($generated@@385 $generated@@492 $generated@@491)) (= ($generated@@420 $generated@@490) ($generated@@485 $generated@@491))))))
 :pattern ( ($generated@@420 $generated@@490))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@388 (type $generated@@493))))
(let (($generated@@495 ($generated@@387 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@386 $generated@@495 $generated@@494)) (= (= $generated@@493 ($generated@@385 $generated@@495 $generated@@494)) (= ($generated@@451 $generated@@493) ($generated@@485 $generated@@244))))))
 :pattern ( ($generated@@451 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@370 (type $generated@@496))))
(let (($generated@@498 ($generated@@369 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@368 $generated@@498 $generated@@497)) (or (= $generated@@496 ($generated@@367 $generated@@498 $generated@@497)) (exists (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (and (and (= (type $generated@@499) $generated@@244) (= (type $generated@@500) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@440 $generated@@496) ($generated@@355 ($generated@@310 $generated@@499 $generated@@500)))))
 :no-pattern (type $generated@@499)
 :no-pattern (type $generated@@500)
 :no-pattern ($generated $generated@@499)
 :no-pattern ($generated@@0 $generated@@499)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
))))))
 :pattern ( ($generated@@440 $generated@@496))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@388 (type $generated@@501))))
(let (($generated@@503 ($generated@@387 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@386 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@385 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@244) (= (type $generated@@505) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@451 $generated@@501) ($generated@@355 ($generated@@310 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@451 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@244) ($generated@@311 $generated@@506 $generated@@46)) (and (= ($generated@@355 ($generated@@441 $generated@@2 $generated@@506)) $generated@@506) ($generated@@220 ($generated@@441 $generated@@2 $generated@@506) $generated@@46)))
 :pattern ( ($generated@@311 $generated@@506 $generated@@46))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@244) ($generated@@311 $generated@@507 $generated@@47)) (and (= ($generated@@355 ($generated@@441 $generated@@3 $generated@@507)) $generated@@507) ($generated@@220 ($generated@@441 $generated@@3 $generated@@507) $generated@@47)))
 :pattern ( ($generated@@311 $generated@@507 $generated@@47))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@244) ($generated@@311 $generated@@508 $generated@@44)) (and (= ($generated@@355 ($generated@@441 $generated@@4 $generated@@508)) $generated@@508) ($generated@@220 ($generated@@441 $generated@@4 $generated@@508) $generated@@44)))
 :pattern ( ($generated@@311 $generated@@508 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@509) 31))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@244) ($generated@@311 $generated@@510 $generated@@45)) (and (= ($generated@@355 ($generated@@441 $generated@@509 $generated@@510)) $generated@@510) ($generated@@220 ($generated@@441 $generated@@509 $generated@@510) $generated@@45)))
 :pattern ( ($generated@@311 $generated@@510 $generated@@45))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@311 ($generated@@355 $generated@@511) $generated@@512) ($generated@@220 $generated@@511 $generated@@512)))
 :pattern ( ($generated@@311 ($generated@@355 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@79 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@76 $generated@@514 $generated@@2)) (<= 0 ($generated@@360 $generated@@513))))
 :pattern ( ($generated@@360 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@350 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@349 $generated@@516)) (<= 0 ($generated@@348 $generated@@515))))
 :pattern ( ($generated@@348 $generated@@515))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= ($generated@@517 ($generated@@469 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@469 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@64)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (= ($generated@@521 ($generated@@469 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@469 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@64) (= (type $generated@@526) $generated@@64)) (= ($generated@@72 ($generated@@469 $generated@@525 $generated@@526)) $generated@@58))
 :pattern ( ($generated@@469 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@64)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (= ($generated@@527 ($generated@@477 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@477 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@64)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@64) (= (type $generated@@534) $generated@@64)) (= ($generated@@531 ($generated@@477 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@477 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= ($generated@@72 ($generated@@477 $generated@@535 $generated@@536)) $generated@@59))
 :pattern ( ($generated@@477 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@244) (= (type $generated@@538) $generated@@244)) (= ($generated@@341 ($generated@@310 $generated@@537 $generated@@538)) $generated@@61))
 :pattern ( ($generated@@310 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@64)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (= ($generated@@539 ($generated@@234 $generated@@541 $generated@@542)) $generated@@541))
 :pattern ( ($generated@@234 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@64)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@64) (= (type $generated@@546) $generated@@64)) (= ($generated@@543 ($generated@@234 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@234 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@244) (= (type $generated@@548) $generated@@244)) (= ($generated@@242 ($generated@@310 $generated@@547 $generated@@548)) $generated@@547))
 :pattern ( ($generated@@310 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@244) (= (type $generated@@550) $generated@@244)) (= ($generated@@243 ($generated@@310 $generated@@549 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@310 $generated@@549 $generated@@550))
)))
(assert  (and (forall (($generated@@553 T@U) ) (! (= (type ($generated@@551 $generated@@553)) $generated@@64)
 :pattern ( ($generated@@551 $generated@@553))
)) (forall (($generated@@554 T@U) ($generated@@555 Int) ) (! (let (($generated@@556 ($generated@@350 (type $generated@@554))))
(= (type ($generated@@552 $generated@@554 $generated@@555)) $generated@@556))
 :pattern ( ($generated@@552 $generated@@554 $generated@@555))
))))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@349 $generated@@244)) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@557 ($generated@@551 $generated@@558) $generated@@559) (forall (($generated@@560 Int) ) (!  (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@348 $generated@@557))) ($generated@@335 ($generated@@552 $generated@@557 $generated@@560) $generated@@558 $generated@@559))
 :pattern ( ($generated@@552 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@551 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@561 ($generated@@75 $generated@@562)) $generated@@562)
 :pattern ( ($generated@@75 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@64)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@64) (= ($generated@@563 ($generated@@320 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@320 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@64) (= ($generated@@72 ($generated@@320 $generated@@566)) $generated@@54))
 :pattern ( ($generated@@320 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@64)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@64) (= ($generated@@567 ($generated@@325 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@325 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@64) (= ($generated@@72 ($generated@@325 $generated@@570)) $generated@@55))
 :pattern ( ($generated@@325 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@64)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@64) (= ($generated@@571 ($generated@@249 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@249 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@574)) $generated@@56))
 :pattern ( ($generated@@249 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@64)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@64) (= ($generated@@575 ($generated@@551 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@551 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@64) (= ($generated@@72 ($generated@@551 $generated@@578)) $generated@@57))
 :pattern ( ($generated@@551 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
(= ($generated@@441 $generated@@580 ($generated@@355 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@355 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@368 $generated@@244 $generated@@244)) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) $generated@@64)) (= ($generated@@220 $generated@@581 ($generated@@469 $generated@@582 $generated@@583)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@581) $generated@@584))) (and ($generated@@311 ($generated@@81 ($generated@@442 $generated@@581) $generated@@584) $generated@@583) ($generated@@311 $generated@@584 $generated@@582)))
 :pattern ( ($generated@@81 ($generated@@442 $generated@@581) $generated@@584))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@581) $generated@@584))
))))
 :pattern ( ($generated@@220 $generated@@581 ($generated@@469 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@386 $generated@@244 $generated@@244)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) (= ($generated@@220 $generated@@585 ($generated@@477 $generated@@586 $generated@@587)) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@384 $generated@@585) $generated@@588))) (and ($generated@@311 ($generated@@81 ($generated@@452 $generated@@585) $generated@@588) $generated@@587) ($generated@@311 $generated@@588 $generated@@586)))
 :pattern ( ($generated@@81 ($generated@@452 $generated@@585) $generated@@588))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@585) $generated@@588))
))))
 :pattern ( ($generated@@220 $generated@@585 ($generated@@477 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@244) (= (type $generated@@592) $generated@@244)) (< ($generated@@589 $generated@@591) ($generated@@590 ($generated@@310 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@310 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@244) (= (type $generated@@594) $generated@@244)) (< ($generated@@589 $generated@@594) ($generated@@590 ($generated@@310 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@310 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@244) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@311 $generated@@595 ($generated@@469 $generated@@596 $generated@@597))) (and (= ($generated@@355 ($generated@@441 ($generated@@368 $generated@@244 $generated@@244) $generated@@595)) $generated@@595) ($generated@@220 ($generated@@441 ($generated@@368 $generated@@244 $generated@@244) $generated@@595) ($generated@@469 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@311 $generated@@595 ($generated@@469 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@244) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@311 $generated@@598 ($generated@@477 $generated@@599 $generated@@600))) (and (= ($generated@@355 ($generated@@441 ($generated@@386 $generated@@244 $generated@@244) $generated@@598)) $generated@@598) ($generated@@220 ($generated@@441 ($generated@@386 $generated@@244 $generated@@244) $generated@@598) ($generated@@477 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@311 $generated@@598 ($generated@@477 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@64) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) $generated@@244)) ($generated@@311 $generated@@603 ($generated@@234 $generated@@601 $generated@@602))) (and (= ($generated@@355 ($generated@@441 $generated@@235 $generated@@603)) $generated@@603) ($generated@@220 ($generated@@441 $generated@@235 $generated@@603) ($generated@@234 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@311 $generated@@603 ($generated@@234 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@604)))
 (not ($generated@@0 ($generated@@81 ($generated@@485 $generated@@605) $generated@@604))))
 :pattern ( (let (($generated@@605 (type $generated@@604)))
($generated@@81 ($generated@@485 $generated@@605) $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@69)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@64) (= (type $generated@@609) $generated@@64)) (and (= ($generated@@72 ($generated@@234 $generated@@608 $generated@@609)) $generated@@62) (= ($generated@@606 ($generated@@234 $generated@@608 $generated@@609)) $generated@@63)))
 :pattern ( ($generated@@234 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@235) (= ($generated@@589 ($generated@@355 $generated@@610)) ($generated@@590 $generated@@610)))
 :pattern ( ($generated@@589 ($generated@@355 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@244) ($generated@@311 $generated@@611 ($generated@@75 0))) (and (= ($generated@@355 ($generated@@441 $generated@@2 $generated@@611)) $generated@@611) ($generated@@220 ($generated@@441 ($generated@@76 $generated@@244 $generated@@4) $generated@@611) ($generated@@75 0))))
 :pattern ( ($generated@@311 $generated@@611 ($generated@@75 0)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@244) ($generated@@311 $generated@@612 ($generated@@75 1))) (and (= ($generated@@355 ($generated@@441 $generated@@132 $generated@@612)) $generated@@612) ($generated@@220 ($generated@@441 $generated@@132 $generated@@612) ($generated@@75 1))))
 :pattern ( ($generated@@311 $generated@@612 ($generated@@75 1)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@244) (= (type $generated@@614) $generated@@64)) ($generated@@311 $generated@@613 ($generated@@320 $generated@@614))) (and (= ($generated@@355 ($generated@@441 ($generated@@76 $generated@@244 $generated@@4) $generated@@613)) $generated@@613) ($generated@@220 ($generated@@441 ($generated@@76 $generated@@244 $generated@@4) $generated@@613) ($generated@@320 $generated@@614))))
 :pattern ( ($generated@@311 $generated@@613 ($generated@@320 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@244) (= (type $generated@@616) $generated@@64)) ($generated@@311 $generated@@615 ($generated@@325 $generated@@616))) (and (= ($generated@@355 ($generated@@441 ($generated@@76 $generated@@244 $generated@@4) $generated@@615)) $generated@@615) ($generated@@220 ($generated@@441 ($generated@@76 $generated@@244 $generated@@4) $generated@@615) ($generated@@325 $generated@@616))))
 :pattern ( ($generated@@311 $generated@@615 ($generated@@325 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@244) (= (type $generated@@618) $generated@@64)) ($generated@@311 $generated@@617 ($generated@@249 $generated@@618))) (and (= ($generated@@355 ($generated@@441 ($generated@@76 $generated@@244 $generated@@2) $generated@@617)) $generated@@617) ($generated@@220 ($generated@@441 ($generated@@76 $generated@@244 $generated@@2) $generated@@617) ($generated@@249 $generated@@618))))
 :pattern ( ($generated@@311 $generated@@617 ($generated@@249 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@244) (= (type $generated@@620) $generated@@64)) ($generated@@311 $generated@@619 ($generated@@551 $generated@@620))) (and (= ($generated@@355 ($generated@@441 ($generated@@349 $generated@@244) $generated@@619)) $generated@@619) ($generated@@220 ($generated@@441 ($generated@@349 $generated@@244) $generated@@619) ($generated@@551 $generated@@620))))
 :pattern ( ($generated@@311 $generated@@619 ($generated@@551 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@244) ($generated@@311 $generated@@621 ($generated@@75 2))) (and (= ($generated@@355 ($generated@@441 $generated@@140 $generated@@621)) $generated@@621) ($generated@@220 ($generated@@441 $generated@@140 $generated@@621) ($generated@@75 2))))
 :pattern ( ($generated@@311 $generated@@621 ($generated@@75 2)))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@244) ($generated@@311 $generated@@622 ($generated@@75 3))) (and (= ($generated@@355 ($generated@@441 $generated@@148 $generated@@622)) $generated@@622) ($generated@@220 ($generated@@441 $generated@@148 $generated@@622) ($generated@@75 3))))
 :pattern ( ($generated@@311 $generated@@622 ($generated@@75 3)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@244) ($generated@@311 $generated@@623 ($generated@@75 4))) (and (= ($generated@@355 ($generated@@441 $generated@@156 $generated@@623)) $generated@@623) ($generated@@220 ($generated@@441 $generated@@156 $generated@@623) ($generated@@75 4))))
 :pattern ( ($generated@@311 $generated@@623 ($generated@@75 4)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@244) ($generated@@311 $generated@@624 ($generated@@75 7))) (and (= ($generated@@355 ($generated@@441 $generated@@164 $generated@@624)) $generated@@624) ($generated@@220 ($generated@@441 $generated@@164 $generated@@624) ($generated@@75 7))))
 :pattern ( ($generated@@311 $generated@@624 ($generated@@75 7)))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@244) ($generated@@311 $generated@@625 ($generated@@75 8))) (and (= ($generated@@355 ($generated@@441 $generated@@172 $generated@@625)) $generated@@625) ($generated@@220 ($generated@@441 $generated@@172 $generated@@625) ($generated@@75 8))))
 :pattern ( ($generated@@311 $generated@@625 ($generated@@75 8)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@244) ($generated@@311 $generated@@626 ($generated@@75 15))) (and (= ($generated@@355 ($generated@@441 $generated@@180 $generated@@626)) $generated@@626) ($generated@@220 ($generated@@441 $generated@@180 $generated@@626) ($generated@@75 15))))
 :pattern ( ($generated@@311 $generated@@626 ($generated@@75 15)))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@244) ($generated@@311 $generated@@627 ($generated@@75 16))) (and (= ($generated@@355 ($generated@@441 $generated@@188 $generated@@627)) $generated@@627) ($generated@@220 ($generated@@441 $generated@@188 $generated@@627) ($generated@@75 16))))
 :pattern ( ($generated@@311 $generated@@627 ($generated@@75 16)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@244) ($generated@@311 $generated@@628 ($generated@@75 32))) (and (= ($generated@@355 ($generated@@441 $generated@@196 $generated@@628)) $generated@@628) ($generated@@220 ($generated@@441 $generated@@196 $generated@@628) ($generated@@75 32))))
 :pattern ( ($generated@@311 $generated@@628 ($generated@@75 32)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@244) ($generated@@311 $generated@@629 ($generated@@75 53))) (and (= ($generated@@355 ($generated@@441 $generated@@204 $generated@@629)) $generated@@629) ($generated@@220 ($generated@@441 $generated@@204 $generated@@629) ($generated@@75 53))))
 :pattern ( ($generated@@311 $generated@@629 ($generated@@75 53)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@244) ($generated@@311 $generated@@630 ($generated@@75 100))) (and (= ($generated@@355 ($generated@@441 $generated@@212 $generated@@630)) $generated@@630) ($generated@@220 ($generated@@441 $generated@@212 $generated@@630) ($generated@@75 100))))
 :pattern ( ($generated@@311 $generated@@630 ($generated@@75 100)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@631) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@632) $generated@@64)) (= (type $generated@@633) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@631 ($generated@@249 $generated@@632) $generated@@633) (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@631 $generated@@634)))) ($generated@@335 $generated@@634 $generated@@632 $generated@@633))
 :pattern ( ($generated@@81 $generated@@631 $generated@@634))
))))
 :pattern ( ($generated@@74 $generated@@631 ($generated@@249 $generated@@632) $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) $generated@@235) (= (type $generated@@636) $generated@@64)) (= (type $generated@@637) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@334 $generated@@637) (and ($generated@@233 $generated@@635) (exists (($generated@@638 T@U) ) (!  (and (= (type $generated@@638) $generated@@64) ($generated@@74 $generated@@635 ($generated@@234 $generated@@636 $generated@@638) $generated@@637))
 :pattern ( ($generated@@74 $generated@@635 ($generated@@234 $generated@@636 $generated@@638) $generated@@637))
))))) ($generated@@335 ($generated@@242 $generated@@635) $generated@@636 $generated@@637))
 :pattern ( ($generated@@335 ($generated@@242 $generated@@635) $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) $generated@@235) (= (type $generated@@640) $generated@@64)) (= (type $generated@@641) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@334 $generated@@641) (and ($generated@@233 $generated@@639) (exists (($generated@@642 T@U) ) (!  (and (= (type $generated@@642) $generated@@64) ($generated@@74 $generated@@639 ($generated@@234 $generated@@642 $generated@@640) $generated@@641))
 :pattern ( ($generated@@74 $generated@@639 ($generated@@234 $generated@@642 $generated@@640) $generated@@641))
))))) ($generated@@335 ($generated@@243 $generated@@639) $generated@@640 $generated@@641))
 :pattern ( ($generated@@335 ($generated@@243 $generated@@639) $generated@@640 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@244) (= (type $generated@@644) $generated@@244)) (= ($generated@@310 ($generated@@330 $generated@@643) ($generated@@330 $generated@@644)) ($generated@@330 ($generated@@310 $generated@@643 $generated@@644))))
 :pattern ( ($generated@@310 ($generated@@330 $generated@@643) ($generated@@330 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ) (! (= ($generated@@355 ($generated@@330 $generated@@645)) ($generated@@330 ($generated@@355 $generated@@645)))
 :pattern ( ($generated@@355 ($generated@@330 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ) (! (let (($generated@@647 ($generated@@350 (type $generated@@646))))
 (=> (and (= (type $generated@@646) ($generated@@349 $generated@@647)) (= ($generated@@348 $generated@@646) 0)) (= $generated@@646 ($generated@@347 $generated@@647))))
 :pattern ( ($generated@@348 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (! (let (($generated@@651 (type $generated@@649)))
 (=> (and (and (= (type $generated@@648) ($generated@@76 $generated@@651 $generated@@2)) (= (type $generated@@650) $generated@@2)) (<= 0 ($generated $generated@@650))) (= ($generated@@360 ($generated@@82 $generated@@648 $generated@@649 $generated@@650)) (+ (- ($generated@@360 $generated@@648) ($generated ($generated@@81 $generated@@648 $generated@@649))) ($generated $generated@@650)))))
 :pattern ( ($generated@@360 ($generated@@82 $generated@@648 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@653) $generated@@2)) ($generated@@74 $generated@@653 $generated@@46 $generated@@652))
 :pattern ( ($generated@@74 $generated@@653 $generated@@46 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@655) $generated@@3)) ($generated@@74 $generated@@655 $generated@@47 $generated@@654))
 :pattern ( ($generated@@74 $generated@@655 $generated@@47 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@657) $generated@@4)) ($generated@@74 $generated@@657 $generated@@44 $generated@@656))
 :pattern ( ($generated@@74 $generated@@657 $generated@@44 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@659) $generated@@509)) ($generated@@74 $generated@@659 $generated@@45 $generated@@658))
 :pattern ( ($generated@@74 $generated@@659 $generated@@45 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@661) $generated@@244)) ($generated@@74 $generated@@661 $generated@@48 $generated@@660))
 :pattern ( ($generated@@74 $generated@@661 $generated@@48 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@349 $generated@@244)) (= (type $generated@@663) $generated@@64)) (= ($generated@@220 $generated@@662 ($generated@@551 $generated@@663)) (forall (($generated@@664 Int) ) (!  (=> (and (<= 0 $generated@@664) (< $generated@@664 ($generated@@348 $generated@@662))) ($generated@@311 ($generated@@552 $generated@@662 $generated@@664) $generated@@663))
 :pattern ( ($generated@@552 $generated@@662 $generated@@664))
))))
 :pattern ( ($generated@@220 $generated@@662 ($generated@@551 $generated@@663)))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 Int) ) (!  (=> (= (type $generated@@666) ($generated@@349 $generated@@244)) (=> (and (<= 0 $generated@@667) (< $generated@@667 ($generated@@348 $generated@@666))) (< ($generated@@590 ($generated@@441 $generated@@235 ($generated@@552 $generated@@666 $generated@@667))) ($generated@@665 $generated@@666))))
 :pattern ( ($generated@@590 ($generated@@441 $generated@@235 ($generated@@552 $generated@@666 $generated@@667))))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (and (= (type $generated@@668) ($generated@@368 $generated@@244 $generated@@244)) (= (type $generated@@669) $generated@@64)) (= (type $generated@@670) $generated@@64)) ($generated@@220 $generated@@668 ($generated@@469 $generated@@669 $generated@@670))) (and (and ($generated@@220 ($generated@@366 $generated@@668) ($generated@@320 $generated@@669)) ($generated@@220 ($generated@@409 $generated@@668) ($generated@@320 $generated@@670))) ($generated@@220 ($generated@@440 $generated@@668) ($generated@@320 ($generated@@234 $generated@@669 $generated@@670)))))
 :pattern ( ($generated@@220 $generated@@668 ($generated@@469 $generated@@669 $generated@@670)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) ($generated@@386 $generated@@244 $generated@@244)) (= (type $generated@@672) $generated@@64)) (= (type $generated@@673) $generated@@64)) ($generated@@220 $generated@@671 ($generated@@477 $generated@@672 $generated@@673))) (and (and ($generated@@220 ($generated@@384 $generated@@671) ($generated@@325 $generated@@672)) ($generated@@220 ($generated@@420 $generated@@671) ($generated@@325 $generated@@673))) ($generated@@220 ($generated@@451 $generated@@671) ($generated@@325 ($generated@@234 $generated@@672 $generated@@673)))))
 :pattern ( ($generated@@220 $generated@@671 ($generated@@477 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@2) ($generated@@220 $generated@@674 $generated@@46))
 :pattern ( ($generated@@220 $generated@@674 $generated@@46))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@3) ($generated@@220 $generated@@675 $generated@@47))
 :pattern ( ($generated@@220 $generated@@675 $generated@@47))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@4) ($generated@@220 $generated@@676 $generated@@44))
 :pattern ( ($generated@@220 $generated@@676 $generated@@44))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@509) ($generated@@220 $generated@@677 $generated@@45))
 :pattern ( ($generated@@220 $generated@@677 $generated@@45))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@244) ($generated@@220 $generated@@678 $generated@@48))
 :pattern ( ($generated@@220 $generated@@678 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 (T@U) Bool)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () Int)
(assert  (and (and (and (= (type $generated@@679) ($generated@@256 $generated@@77 $generated@@4)) (= (type $generated@@680) $generated@@77)) (= (type $generated@@681) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@684) ($generated@@349 $generated@@244))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@686  (=> (= $generated@@679 ($generated@@255 $generated@@680 $generated@@681 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@682 0))) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@682 0)))))))
(let (($generated@@687  (=> (and ($generated@@334 $generated@@681) ($generated@@683 $generated@@681)) (=> (and (and (and ($generated@@220 $generated@@684 ($generated@@551 $generated@@45)) ($generated@@74 $generated@@684 ($generated@@551 $generated@@45) $generated@@681)) (= 1 $generated@@685)) (and (not (= $generated@@682 0)) (= (ControlFlow 0 4) 2))) $generated@@686))))
$generated@@687)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 () T@T)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 () T@T)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@260 (T@T T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@334 (Int) Int)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@341 (T@U T@U T@U) Bool)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@354 (T@U) Int)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@374 (T@U) Int)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@T T@T) T@U)
(declare-fun $generated@@382 (T@T T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@T) T@U)
(declare-fun $generated@@400 (T@T T@T) T@T)
(declare-fun $generated@@401 (T@T) T@T)
(declare-fun $generated@@402 (T@T) T@T)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@T T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@483 (T@U T@U) T@U)
(declare-fun $generated@@491 (T@U T@U) T@U)
(declare-fun $generated@@502 (T@T) T@U)
(declare-fun $generated@@526 () T@T)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@569 (T@U Int) T@U)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@683 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@220 $generated@@221 $generated@@222)) (forall (($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@221 $generated@@223) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60))
)))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@2) ($generated@@224 $generated@@225 ($generated@@75 0)))
 :pattern ( ($generated@@224 $generated@@225 ($generated@@75 0)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@132) ($generated@@224 $generated@@226 ($generated@@75 1)))
 :pattern ( ($generated@@224 $generated@@226 ($generated@@75 1)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@140) ($generated@@224 $generated@@227 ($generated@@75 2)))
 :pattern ( ($generated@@224 $generated@@227 ($generated@@75 2)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@148) ($generated@@224 $generated@@228 ($generated@@75 3)))
 :pattern ( ($generated@@224 $generated@@228 ($generated@@75 3)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@156) ($generated@@224 $generated@@229 ($generated@@75 4)))
 :pattern ( ($generated@@224 $generated@@229 ($generated@@75 4)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@164) ($generated@@224 $generated@@230 ($generated@@75 7)))
 :pattern ( ($generated@@224 $generated@@230 ($generated@@75 7)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@172) ($generated@@224 $generated@@231 ($generated@@75 8)))
 :pattern ( ($generated@@224 $generated@@231 ($generated@@75 8)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@180) ($generated@@224 $generated@@232 ($generated@@75 15)))
 :pattern ( ($generated@@224 $generated@@232 ($generated@@75 15)))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (= (type $generated@@233) $generated@@188) ($generated@@224 $generated@@233 ($generated@@75 16)))
 :pattern ( ($generated@@224 $generated@@233 ($generated@@75 16)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (= (type $generated@@234) $generated@@196) ($generated@@224 $generated@@234 ($generated@@75 32)))
 :pattern ( ($generated@@224 $generated@@234 ($generated@@75 32)))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@204) ($generated@@224 $generated@@235 ($generated@@75 53)))
 :pattern ( ($generated@@224 $generated@@235 ($generated@@75 53)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@212) ($generated@@224 $generated@@236 ($generated@@75 100)))
 :pattern ( ($generated@@224 $generated@@236 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@239) 25) (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@64) (= (type $generated@@243) $generated@@64)) (= (type $generated@@244) $generated@@239)) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243))) ($generated@@237 $generated@@244))
 :pattern ( ($generated@@237 $generated@@244) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243)))
)))
(assert  (and (and (= ($generated@@1 $generated@@248) 26) (forall (($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@246 $generated@@249))
))) (forall (($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@250)) $generated@@248)
 :pattern ( ($generated@@247 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@251) $generated@@239) (= (type $generated@@252) $generated@@239)) true) (= ($generated@@245 $generated@@251 $generated@@252)  (and (= ($generated@@246 $generated@@251) ($generated@@246 $generated@@252)) (= ($generated@@247 $generated@@251) ($generated@@247 $generated@@252)))))
 :pattern ( ($generated@@245 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@253 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@257) $generated@@64)) ($generated@@224 $generated@@256 ($generated@@253 $generated@@257))) ($generated@@254 $generated@@256))
 :pattern ( ($generated@@224 $generated@@256 ($generated@@253 $generated@@257)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@264 $generated@@265)) 27)) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@260 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@262 ($generated@@260 $generated@@268 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@260 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@262 (type $generated@@270))))
(= (type ($generated@@258 $generated@@270 $generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@258 $generated@@270 $generated@@271 $generated@@272))
))) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(let (($generated@@279 (type $generated@@275)))
(= (type ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277)) ($generated@@260 $generated@@279 $generated@@278))))
 :pattern ( ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277))
))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@262 (type $generated@@280))))
 (=> (= (type $generated@@283) $generated@@284) (= ($generated@@258 ($generated@@263 $generated@@280 $generated@@281 $generated@@282 $generated@@283) $generated@@281 $generated@@282) $generated@@283)))
 :weight 0
))) (and (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (or (= $generated@@287 $generated@@289) (= ($generated@@258 ($generated@@263 $generated@@286 $generated@@287 $generated@@288 $generated@@285) $generated@@289 $generated@@290) ($generated@@258 $generated@@286 $generated@@289 $generated@@290)))
 :weight 0
)) (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (or (= $generated@@294 $generated@@296) (= ($generated@@258 ($generated@@263 $generated@@292 $generated@@293 $generated@@294 $generated@@291) $generated@@295 $generated@@296) ($generated@@258 $generated@@292 $generated@@295 $generated@@296)))
 :weight 0
))) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (or true (= ($generated@@258 ($generated@@263 $generated@@298 $generated@@299 $generated@@300 $generated@@297) $generated@@301 $generated@@302) ($generated@@258 $generated@@298 $generated@@301 $generated@@302)))
 :weight 0
)))) (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ) (! (= (type ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306)) ($generated@@260 $generated@@77 $generated@@4))
 :pattern ( ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 Bool) ($generated@@311 T@U) ($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@67 (type $generated@@312))))
 (=> (and (and (and (and (= (type $generated@@307) $generated@@77) (= (type $generated@@308) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@309) ($generated@@66 $generated@@4))) (= (type $generated@@311) $generated@@77)) (= (type $generated@@312) ($generated@@66 $generated@@313))) (= ($generated@@0 ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))  (=> (and (not (= $generated@@311 $generated@@307)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@308 $generated@@311) $generated@@309))) $generated@@310))))
 :pattern ( ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) $generated@@239)
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (= (type $generated@@318) $generated@@64) (= (type $generated@@319) $generated@@64)) (= (type $generated@@320) $generated@@248)) (= (type $generated@@321) $generated@@248)) (= ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319))  (and ($generated@@315 $generated@@320 $generated@@318) ($generated@@315 $generated@@321 $generated@@319))))
 :pattern ( ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@239) (= (type $generated@@323) $generated@@239)) (= ($generated@@245 $generated@@322 $generated@@323) (= $generated@@322 $generated@@323)))
 :pattern ( ($generated@@245 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@64)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@327) $generated@@64)) (= ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@248) ($generated@@0 ($generated@@81 $generated@@326 $generated@@328))) ($generated@@315 $generated@@328 $generated@@327))
 :pattern ( ($generated@@81 $generated@@326 $generated@@328))
))))
 :pattern ( ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@64)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@248) ($generated@@0 ($generated@@81 $generated@@331 $generated@@333))) ($generated@@315 $generated@@333 $generated@@332))
 :pattern ( ($generated@@81 $generated@@331 $generated@@333))
))))
 :pattern ( ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)))
)))
(assert (forall (($generated@@335 Int) ) (! (= ($generated@@334 $generated@@335) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 (type $generated@@337)))
(= (type ($generated@@336 $generated@@337)) $generated@@338))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= ($generated@@336 $generated@@339) $generated@@339)
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@342) $generated@@64) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) $generated@@248)) (= (type $generated@@345) $generated@@248)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@340 $generated@@346)) (= ($generated@@74 ($generated@@314 $generated@@344 $generated@@345) ($generated@@238 $generated@@342 $generated@@343) $generated@@346)  (and ($generated@@341 $generated@@344 $generated@@342 $generated@@346) ($generated@@341 $generated@@345 $generated@@343 $generated@@346))))
 :pattern ( ($generated@@74 ($generated@@314 $generated@@344 $generated@@345) ($generated@@238 $generated@@342 $generated@@343) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (= (type ($generated@@347 $generated@@348)) $generated@@68)
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@239) (= ($generated@@237 $generated@@349) (= ($generated@@347 $generated@@349) $generated@@61)))
 :pattern ( ($generated@@237 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@239) ($generated@@237 $generated@@350)) (exists (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (and (and (= (type $generated@@351) $generated@@248) (= (type $generated@@352) $generated@@248)) (= $generated@@350 ($generated@@314 $generated@@351 $generated@@352)))
 :no-pattern (type $generated@@351)
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
)))
 :pattern ( ($generated@@237 $generated@@350))
)))
(assert  (and (and (forall (($generated@@357 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@357)) 28)) (forall (($generated@@358 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@355 $generated@@358))
))) (forall (($generated@@359 T@T) ) (! (= (type ($generated@@353 $generated@@359)) ($generated@@355 $generated@@359))
 :pattern ( ($generated@@353 $generated@@359))
))))
(assert (forall (($generated@@360 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@360)) 0)
 :pattern ( ($generated@@353 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@248)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@64) (= (type $generated@@365) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@341 ($generated@@361 $generated@@363) $generated@@364 $generated@@365) ($generated@@74 $generated@@363 $generated@@364 $generated@@365)))
 :pattern ( ($generated@@341 ($generated@@361 $generated@@363) $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@368) $generated@@248)) (= (type $generated@@369) $generated@@64)) ($generated@@220 $generated@@366 $generated@@367)) ($generated@@341 $generated@@368 $generated@@369 $generated@@366)) ($generated@@341 $generated@@368 $generated@@369 $generated@@367))
 :pattern ( ($generated@@220 $generated@@366 $generated@@367) ($generated@@341 $generated@@368 $generated@@369 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@371) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@373) $generated@@64)) ($generated@@220 $generated@@370 $generated@@371)) ($generated@@74 $generated@@372 $generated@@373 $generated@@370)) ($generated@@74 $generated@@372 $generated@@373 $generated@@371))
 :pattern ( ($generated@@220 $generated@@370 $generated@@371) ($generated@@74 $generated@@372 $generated@@373 $generated@@370))
)))
(assert (forall (($generated@@376 T@T) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@76 $generated@@376 $generated@@2))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@79 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@76 $generated@@378 $generated@@2)) (and (= (= ($generated@@374 $generated@@377) 0) (= $generated@@377 ($generated@@375 $generated@@378))) (=> (not (= ($generated@@374 $generated@@377) 0)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (< 0 ($generated ($generated@@81 $generated@@377 $generated@@379))))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert  (and (and (and (and (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (= ($generated@@1 ($generated@@382 $generated@@385 $generated@@386)) 29)) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= ($generated@@383 ($generated@@382 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@382 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= ($generated@@384 ($generated@@382 $generated@@389 $generated@@390)) $generated@@390)
 :pattern ( ($generated@@382 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@383 (type $generated@@391))))
(= (type ($generated@@380 $generated@@391)) ($generated@@76 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@391))
))) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= (type ($generated@@381 $generated@@393 $generated@@394)) ($generated@@382 $generated@@393 $generated@@394))
 :pattern ( ($generated@@381 $generated@@393 $generated@@394))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@T) ) (! (let (($generated@@397 (type $generated@@395)))
 (not ($generated@@0 ($generated@@81 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395))))
 :pattern ( (let (($generated@@397 (type $generated@@395)))
($generated@@81 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395)))
)))
(assert  (and (and (and (and (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (= ($generated@@1 ($generated@@400 $generated@@403 $generated@@404)) 30)) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= ($generated@@401 ($generated@@400 $generated@@405 $generated@@406)) $generated@@405)
 :pattern ( ($generated@@400 $generated@@405 $generated@@406))
))) (forall (($generated@@407 T@T) ($generated@@408 T@T) ) (! (= ($generated@@402 ($generated@@400 $generated@@407 $generated@@408)) $generated@@408)
 :pattern ( ($generated@@400 $generated@@407 $generated@@408))
))) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@401 (type $generated@@409))))
(= (type ($generated@@398 $generated@@409)) ($generated@@76 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@409))
))) (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (! (= (type ($generated@@399 $generated@@411 $generated@@412)) ($generated@@400 $generated@@411 $generated@@412))
 :pattern ( ($generated@@399 $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@T) ) (! (let (($generated@@415 (type $generated@@413)))
 (not ($generated@@0 ($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413))))
 :pattern ( (let (($generated@@415 (type $generated@@413)))
($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413)))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (= ($generated@@254 $generated@@416) (forall (($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@417) (and (<= 0 ($generated ($generated@@81 $generated@@416 $generated@@418))) (<= ($generated ($generated@@81 $generated@@416 $generated@@418)) ($generated@@374 $generated@@416))))
 :pattern ( ($generated@@81 $generated@@416 $generated@@418))
)))))
 :pattern ( ($generated@@254 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@384 (type $generated@@419))))
(let (($generated@@421 ($generated@@383 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@382 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@381 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@380 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@384 (type $generated@@424))))
(= (type ($generated@@423 $generated@@424)) ($generated@@76 $generated@@425 $generated@@4)))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@384 (type $generated@@426))))
(let (($generated@@428 ($generated@@383 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@382 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@381 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@427) ($generated@@0 ($generated@@81 ($generated@@423 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@423 $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@402 (type $generated@@430))))
(let (($generated@@432 ($generated@@401 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@400 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@399 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@430) $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@398 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@402 (type $generated@@435))))
(= (type ($generated@@434 $generated@@435)) ($generated@@76 $generated@@436 $generated@@4)))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@402 (type $generated@@437))))
(let (($generated@@439 ($generated@@401 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@400 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@399 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@438) ($generated@@0 ($generated@@81 ($generated@@434 $generated@@437) $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@434 $generated@@437))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@442) $generated@@64)) (= ($generated@@224 $generated@@441 ($generated@@253 $generated@@442)) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@441 $generated@@443)))) ($generated@@315 $generated@@443 $generated@@442))
 :pattern ( ($generated@@81 $generated@@441 $generated@@443))
))))
 :pattern ( ($generated@@224 $generated@@441 ($generated@@253 $generated@@442)))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (= (type $generated@@444) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@444 ($generated@@324 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@248) ($generated@@0 ($generated@@81 $generated@@444 $generated@@447))) ($generated@@341 $generated@@447 $generated@@445 $generated@@446))
 :pattern ( ($generated@@81 $generated@@444 $generated@@447))
))))
 :pattern ( ($generated@@74 $generated@@444 ($generated@@324 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@448) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@449) $generated@@64)) (= (type $generated@@450) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@448 ($generated@@329 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@248) ($generated@@0 ($generated@@81 $generated@@448 $generated@@451))) ($generated@@341 $generated@@451 $generated@@449 $generated@@450))
 :pattern ( ($generated@@81 $generated@@448 $generated@@451))
))))
 :pattern ( ($generated@@74 $generated@@448 ($generated@@329 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
(= ($generated ($generated@@81 ($generated@@375 $generated@@453) $generated@@452)) 0))
 :pattern ( (let (($generated@@453 (type $generated@@452)))
($generated@@81 ($generated@@375 $generated@@453) $generated@@452)))
)))
(assert  (and (and (forall (($generated@@457 T@U) ) (! (= (type ($generated@@454 $generated@@457)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@454 $generated@@457))
)) (forall (($generated@@458 T@T) ($generated@@459 T@U) ) (! (= (type ($generated@@455 $generated@@458 $generated@@459)) $generated@@458)
 :pattern ( ($generated@@455 $generated@@458 $generated@@459))
))) (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@384 (type $generated@@460))))
(let (($generated@@462 ($generated@@383 (type $generated@@460))))
(= (type ($generated@@456 $generated@@460)) ($generated@@76 $generated@@462 $generated@@461))))
 :pattern ( ($generated@@456 $generated@@460))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@464) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@454 $generated@@463) $generated@@464))  (and ($generated@@0 ($generated@@81 ($generated@@380 $generated@@463) ($generated@@246 ($generated@@455 $generated@@239 $generated@@464)))) (= ($generated@@81 ($generated@@456 $generated@@463) ($generated@@246 ($generated@@455 $generated@@239 $generated@@464))) ($generated@@247 ($generated@@455 $generated@@239 $generated@@464))))))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@463) $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@402 (type $generated@@468))))
(let (($generated@@470 ($generated@@401 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468)) ($generated@@76 $generated@@470 $generated@@469))))
 :pattern ( ($generated@@466 $generated@@468))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@472) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@465 $generated@@471) $generated@@472))  (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@471) ($generated@@246 ($generated@@455 $generated@@239 $generated@@472)))) (= ($generated@@81 ($generated@@466 $generated@@471) ($generated@@246 ($generated@@455 $generated@@239 $generated@@472))) ($generated@@247 ($generated@@455 $generated@@239 $generated@@472))))))
 :pattern ( ($generated@@81 ($generated@@465 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
(let (($generated@@476 ($generated@@383 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@382 $generated@@476 $generated@@475)) (= ($generated@@0 ($generated@@81 ($generated@@423 $generated@@473) $generated@@474)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@476) (and ($generated@@0 ($generated@@81 ($generated@@380 $generated@@473) $generated@@477)) (= $generated@@474 ($generated@@81 ($generated@@456 $generated@@473) $generated@@477))))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@473) $generated@@477))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@473) $generated@@477))
))))))
 :pattern ( ($generated@@81 ($generated@@423 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
(let (($generated@@481 ($generated@@401 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@400 $generated@@481 $generated@@480)) (= ($generated@@0 ($generated@@81 ($generated@@434 $generated@@478) $generated@@479)) (exists (($generated@@482 T@U) ) (!  (and (= (type $generated@@482) $generated@@481) (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@478) $generated@@482)) (= $generated@@479 ($generated@@81 ($generated@@466 $generated@@478) $generated@@482))))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@478) $generated@@482))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@478) $generated@@482))
))))))
 :pattern ( ($generated@@81 ($generated@@434 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@486) $generated@@490))) (and ($generated@@341 ($generated@@81 ($generated@@456 $generated@@486) $generated@@490) $generated@@488 $generated@@489) ($generated@@341 $generated@@490 $generated@@487 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@486) $generated@@490))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@486) $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@494) $generated@@498))) (and ($generated@@341 ($generated@@81 ($generated@@466 $generated@@494) $generated@@498) $generated@@496 $generated@@497) ($generated@@341 $generated@@498 $generated@@495 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@494) $generated@@498))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@494) $generated@@498))
))))
 :pattern ( ($generated@@74 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@499) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@500) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@501) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@499 $generated@@501))) (and ($generated@@220 $generated@@499 $generated@@500) ($generated@@220 $generated@@500 $generated@@501))) ($generated@@220 $generated@@499 $generated@@501))
 :pattern ( ($generated@@220 $generated@@499 $generated@@500) ($generated@@220 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@T) ) (! (= (type ($generated@@502 $generated@@503)) ($generated@@76 $generated@@503 $generated@@4))
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@402 (type $generated@@504))))
(let (($generated@@506 ($generated@@401 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@400 $generated@@506 $generated@@505)) (= (= $generated@@504 ($generated@@399 $generated@@506 $generated@@505)) (= ($generated@@398 $generated@@504) ($generated@@502 $generated@@506))))))
 :pattern ( ($generated@@398 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@402 (type $generated@@507))))
(let (($generated@@509 ($generated@@401 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@400 $generated@@509 $generated@@508)) (= (= $generated@@507 ($generated@@399 $generated@@509 $generated@@508)) (= ($generated@@434 $generated@@507) ($generated@@502 $generated@@508))))))
 :pattern ( ($generated@@434 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@402 (type $generated@@510))))
(let (($generated@@512 ($generated@@401 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@400 $generated@@512 $generated@@511)) (= (= $generated@@510 ($generated@@399 $generated@@512 $generated@@511)) (= ($generated@@465 $generated@@510) ($generated@@502 $generated@@248))))))
 :pattern ( ($generated@@465 $generated@@510))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@384 (type $generated@@513))))
(let (($generated@@515 ($generated@@383 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@382 $generated@@515 $generated@@514)) (or (= $generated@@513 ($generated@@381 $generated@@515 $generated@@514)) (exists (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (and (and (= (type $generated@@516) $generated@@248) (= (type $generated@@517) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@454 $generated@@513) ($generated@@361 ($generated@@314 $generated@@516 $generated@@517)))))
 :no-pattern (type $generated@@516)
 :no-pattern (type $generated@@517)
 :no-pattern ($generated $generated@@516)
 :no-pattern ($generated@@0 $generated@@516)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
))))))
 :pattern ( ($generated@@454 $generated@@513))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@402 (type $generated@@518))))
(let (($generated@@520 ($generated@@401 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@400 $generated@@520 $generated@@519)) (or (= $generated@@518 ($generated@@399 $generated@@520 $generated@@519)) (exists (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (and (and (= (type $generated@@521) $generated@@248) (= (type $generated@@522) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@465 $generated@@518) ($generated@@361 ($generated@@314 $generated@@521 $generated@@522)))))
 :no-pattern (type $generated@@521)
 :no-pattern (type $generated@@522)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
))))))
 :pattern ( ($generated@@465 $generated@@518))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@248) ($generated@@315 $generated@@523 $generated@@46)) (and (= ($generated@@361 ($generated@@455 $generated@@2 $generated@@523)) $generated@@523) ($generated@@224 ($generated@@455 $generated@@2 $generated@@523) $generated@@46)))
 :pattern ( ($generated@@315 $generated@@523 $generated@@46))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@248) ($generated@@315 $generated@@524 $generated@@47)) (and (= ($generated@@361 ($generated@@455 $generated@@3 $generated@@524)) $generated@@524) ($generated@@224 ($generated@@455 $generated@@3 $generated@@524) $generated@@47)))
 :pattern ( ($generated@@315 $generated@@524 $generated@@47))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@248) ($generated@@315 $generated@@525 $generated@@44)) (and (= ($generated@@361 ($generated@@455 $generated@@4 $generated@@525)) $generated@@525) ($generated@@224 ($generated@@455 $generated@@4 $generated@@525) $generated@@44)))
 :pattern ( ($generated@@315 $generated@@525 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@526) 31))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@248) ($generated@@315 $generated@@527 $generated@@45)) (and (= ($generated@@361 ($generated@@455 $generated@@526 $generated@@527)) $generated@@527) ($generated@@224 ($generated@@455 $generated@@526 $generated@@527) $generated@@45)))
 :pattern ( ($generated@@315 $generated@@527 $generated@@45))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@315 ($generated@@361 $generated@@528) $generated@@529) ($generated@@224 $generated@@528 $generated@@529)))
 :pattern ( ($generated@@315 ($generated@@361 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@79 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@76 $generated@@531 $generated@@2)) (<= 0 ($generated@@374 $generated@@530))))
 :pattern ( ($generated@@374 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@356 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@355 $generated@@533)) (<= 0 ($generated@@354 $generated@@532))))
 :pattern ( ($generated@@354 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= ($generated@@534 ($generated@@483 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@483 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@538 ($generated@@483 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@483 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= ($generated@@72 ($generated@@483 $generated@@542 $generated@@543)) $generated@@58))
 :pattern ( ($generated@@483 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@491 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@491 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@491 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@491 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@64) (= (type $generated@@553) $generated@@64)) (= ($generated@@72 ($generated@@491 $generated@@552 $generated@@553)) $generated@@59))
 :pattern ( ($generated@@491 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@248) (= (type $generated@@555) $generated@@248)) (= ($generated@@347 ($generated@@314 $generated@@554 $generated@@555)) $generated@@61))
 :pattern ( ($generated@@314 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@64) (= (type $generated@@559) $generated@@64)) (= ($generated@@556 ($generated@@238 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@238 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@64)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@64) (= (type $generated@@563) $generated@@64)) (= ($generated@@560 ($generated@@238 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@238 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@248) (= (type $generated@@565) $generated@@248)) (= ($generated@@246 ($generated@@314 $generated@@564 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@314 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@248) (= (type $generated@@567) $generated@@248)) (= ($generated@@247 ($generated@@314 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@314 $generated@@566 $generated@@567))
)))
(assert  (and (forall (($generated@@570 T@U) ) (! (= (type ($generated@@568 $generated@@570)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@570))
)) (forall (($generated@@571 T@U) ($generated@@572 Int) ) (! (let (($generated@@573 ($generated@@356 (type $generated@@571))))
(= (type ($generated@@569 $generated@@571 $generated@@572)) $generated@@573))
 :pattern ( ($generated@@569 $generated@@571 $generated@@572))
))))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@355 $generated@@248)) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@574 ($generated@@568 $generated@@575) $generated@@576) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@354 $generated@@574))) ($generated@@341 ($generated@@569 $generated@@574 $generated@@577) $generated@@575 $generated@@576))
 :pattern ( ($generated@@569 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@74 $generated@@574 ($generated@@568 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@578 ($generated@@75 $generated@@579)) $generated@@579)
 :pattern ( ($generated@@75 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@324 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@324 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@324 $generated@@583)) $generated@@54))
 :pattern ( ($generated@@324 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@64)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@64) (= ($generated@@584 ($generated@@329 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@329 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@64) (= ($generated@@72 ($generated@@329 $generated@@587)) $generated@@55))
 :pattern ( ($generated@@329 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@64)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@64) (= ($generated@@588 ($generated@@253 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@253 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@591)) $generated@@56))
 :pattern ( ($generated@@253 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@64)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@64) (= ($generated@@592 ($generated@@568 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@568 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@64) (= ($generated@@72 ($generated@@568 $generated@@595)) $generated@@57))
 :pattern ( ($generated@@568 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
(= ($generated@@455 $generated@@597 ($generated@@361 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@361 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) (= ($generated@@224 $generated@@598 ($generated@@483 $generated@@599 $generated@@600)) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@598) $generated@@601))) (and ($generated@@315 ($generated@@81 ($generated@@456 $generated@@598) $generated@@601) $generated@@600) ($generated@@315 $generated@@601 $generated@@599)))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@598) $generated@@601))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@598) $generated@@601))
))))
 :pattern ( ($generated@@224 $generated@@598 ($generated@@483 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) (= ($generated@@224 $generated@@602 ($generated@@491 $generated@@603 $generated@@604)) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@602) $generated@@605))) (and ($generated@@315 ($generated@@81 ($generated@@466 $generated@@602) $generated@@605) $generated@@604) ($generated@@315 $generated@@605 $generated@@603)))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@602) $generated@@605))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@602) $generated@@605))
))))
 :pattern ( ($generated@@224 $generated@@602 ($generated@@491 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@248) (= (type $generated@@609) $generated@@248)) (< ($generated@@606 $generated@@608) ($generated@@607 ($generated@@314 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@314 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@248) (= (type $generated@@611) $generated@@248)) (< ($generated@@606 $generated@@611) ($generated@@607 ($generated@@314 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@314 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@248) (= (type $generated@@613) $generated@@64)) (= (type $generated@@614) $generated@@64)) ($generated@@315 $generated@@612 ($generated@@483 $generated@@613 $generated@@614))) (and (= ($generated@@361 ($generated@@455 ($generated@@382 $generated@@248 $generated@@248) $generated@@612)) $generated@@612) ($generated@@224 ($generated@@455 ($generated@@382 $generated@@248 $generated@@248) $generated@@612) ($generated@@483 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@315 $generated@@612 ($generated@@483 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@248) (= (type $generated@@616) $generated@@64)) (= (type $generated@@617) $generated@@64)) ($generated@@315 $generated@@615 ($generated@@491 $generated@@616 $generated@@617))) (and (= ($generated@@361 ($generated@@455 ($generated@@400 $generated@@248 $generated@@248) $generated@@615)) $generated@@615) ($generated@@224 ($generated@@455 ($generated@@400 $generated@@248 $generated@@248) $generated@@615) ($generated@@491 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@315 $generated@@615 ($generated@@491 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@64) (= (type $generated@@619) $generated@@64)) (= (type $generated@@620) $generated@@248)) ($generated@@315 $generated@@620 ($generated@@238 $generated@@618 $generated@@619))) (and (= ($generated@@361 ($generated@@455 $generated@@239 $generated@@620)) $generated@@620) ($generated@@224 ($generated@@455 $generated@@239 $generated@@620) ($generated@@238 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@315 $generated@@620 ($generated@@238 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
 (not ($generated@@0 ($generated@@81 ($generated@@502 $generated@@622) $generated@@621))))
 :pattern ( (let (($generated@@622 (type $generated@@621)))
($generated@@81 ($generated@@502 $generated@@622) $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@69)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) $generated@@64)) (and (= ($generated@@72 ($generated@@238 $generated@@625 $generated@@626)) $generated@@62) (= ($generated@@623 ($generated@@238 $generated@@625 $generated@@626)) $generated@@63)))
 :pattern ( ($generated@@238 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@239) (= ($generated@@606 ($generated@@361 $generated@@627)) ($generated@@607 $generated@@627)))
 :pattern ( ($generated@@606 ($generated@@361 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@248) ($generated@@315 $generated@@628 ($generated@@75 0))) (and (= ($generated@@361 ($generated@@455 $generated@@2 $generated@@628)) $generated@@628) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@628) ($generated@@75 0))))
 :pattern ( ($generated@@315 $generated@@628 ($generated@@75 0)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@248) ($generated@@315 $generated@@629 ($generated@@75 1))) (and (= ($generated@@361 ($generated@@455 $generated@@132 $generated@@629)) $generated@@629) ($generated@@224 ($generated@@455 $generated@@132 $generated@@629) ($generated@@75 1))))
 :pattern ( ($generated@@315 $generated@@629 ($generated@@75 1)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@248) (= (type $generated@@631) $generated@@64)) ($generated@@315 $generated@@630 ($generated@@324 $generated@@631))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@630)) $generated@@630) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@630) ($generated@@324 $generated@@631))))
 :pattern ( ($generated@@315 $generated@@630 ($generated@@324 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@248) (= (type $generated@@633) $generated@@64)) ($generated@@315 $generated@@632 ($generated@@329 $generated@@633))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@632)) $generated@@632) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@632) ($generated@@329 $generated@@633))))
 :pattern ( ($generated@@315 $generated@@632 ($generated@@329 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@248) (= (type $generated@@635) $generated@@64)) ($generated@@315 $generated@@634 ($generated@@253 $generated@@635))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@2) $generated@@634)) $generated@@634) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@2) $generated@@634) ($generated@@253 $generated@@635))))
 :pattern ( ($generated@@315 $generated@@634 ($generated@@253 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@248) (= (type $generated@@637) $generated@@64)) ($generated@@315 $generated@@636 ($generated@@568 $generated@@637))) (and (= ($generated@@361 ($generated@@455 ($generated@@355 $generated@@248) $generated@@636)) $generated@@636) ($generated@@224 ($generated@@455 ($generated@@355 $generated@@248) $generated@@636) ($generated@@568 $generated@@637))))
 :pattern ( ($generated@@315 $generated@@636 ($generated@@568 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@248) ($generated@@315 $generated@@638 ($generated@@75 2))) (and (= ($generated@@361 ($generated@@455 $generated@@140 $generated@@638)) $generated@@638) ($generated@@224 ($generated@@455 $generated@@140 $generated@@638) ($generated@@75 2))))
 :pattern ( ($generated@@315 $generated@@638 ($generated@@75 2)))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@248) ($generated@@315 $generated@@639 ($generated@@75 3))) (and (= ($generated@@361 ($generated@@455 $generated@@148 $generated@@639)) $generated@@639) ($generated@@224 ($generated@@455 $generated@@148 $generated@@639) ($generated@@75 3))))
 :pattern ( ($generated@@315 $generated@@639 ($generated@@75 3)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@248) ($generated@@315 $generated@@640 ($generated@@75 4))) (and (= ($generated@@361 ($generated@@455 $generated@@156 $generated@@640)) $generated@@640) ($generated@@224 ($generated@@455 $generated@@156 $generated@@640) ($generated@@75 4))))
 :pattern ( ($generated@@315 $generated@@640 ($generated@@75 4)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@248) ($generated@@315 $generated@@641 ($generated@@75 7))) (and (= ($generated@@361 ($generated@@455 $generated@@164 $generated@@641)) $generated@@641) ($generated@@224 ($generated@@455 $generated@@164 $generated@@641) ($generated@@75 7))))
 :pattern ( ($generated@@315 $generated@@641 ($generated@@75 7)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@248) ($generated@@315 $generated@@642 ($generated@@75 8))) (and (= ($generated@@361 ($generated@@455 $generated@@172 $generated@@642)) $generated@@642) ($generated@@224 ($generated@@455 $generated@@172 $generated@@642) ($generated@@75 8))))
 :pattern ( ($generated@@315 $generated@@642 ($generated@@75 8)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@248) ($generated@@315 $generated@@643 ($generated@@75 15))) (and (= ($generated@@361 ($generated@@455 $generated@@180 $generated@@643)) $generated@@643) ($generated@@224 ($generated@@455 $generated@@180 $generated@@643) ($generated@@75 15))))
 :pattern ( ($generated@@315 $generated@@643 ($generated@@75 15)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@248) ($generated@@315 $generated@@644 ($generated@@75 16))) (and (= ($generated@@361 ($generated@@455 $generated@@188 $generated@@644)) $generated@@644) ($generated@@224 ($generated@@455 $generated@@188 $generated@@644) ($generated@@75 16))))
 :pattern ( ($generated@@315 $generated@@644 ($generated@@75 16)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@248) ($generated@@315 $generated@@645 ($generated@@75 32))) (and (= ($generated@@361 ($generated@@455 $generated@@196 $generated@@645)) $generated@@645) ($generated@@224 ($generated@@455 $generated@@196 $generated@@645) ($generated@@75 32))))
 :pattern ( ($generated@@315 $generated@@645 ($generated@@75 32)))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@248) ($generated@@315 $generated@@646 ($generated@@75 53))) (and (= ($generated@@361 ($generated@@455 $generated@@204 $generated@@646)) $generated@@646) ($generated@@224 ($generated@@455 $generated@@204 $generated@@646) ($generated@@75 53))))
 :pattern ( ($generated@@315 $generated@@646 ($generated@@75 53)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@248) ($generated@@315 $generated@@647 ($generated@@75 100))) (and (= ($generated@@361 ($generated@@455 $generated@@212 $generated@@647)) $generated@@647) ($generated@@224 ($generated@@455 $generated@@212 $generated@@647) ($generated@@75 100))))
 :pattern ( ($generated@@315 $generated@@647 ($generated@@75 100)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@649) $generated@@64)) (= (type $generated@@650) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@648 ($generated@@253 $generated@@649) $generated@@650) (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@648 $generated@@651)))) ($generated@@341 $generated@@651 $generated@@649 $generated@@650))
 :pattern ( ($generated@@81 $generated@@648 $generated@@651))
))))
 :pattern ( ($generated@@74 $generated@@648 ($generated@@253 $generated@@649) $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@239) (= (type $generated@@653) $generated@@64)) (= (type $generated@@654) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@340 $generated@@654) (and ($generated@@237 $generated@@652) (exists (($generated@@655 T@U) ) (!  (and (= (type $generated@@655) $generated@@64) ($generated@@74 $generated@@652 ($generated@@238 $generated@@653 $generated@@655) $generated@@654))
 :pattern ( ($generated@@74 $generated@@652 ($generated@@238 $generated@@653 $generated@@655) $generated@@654))
))))) ($generated@@341 ($generated@@246 $generated@@652) $generated@@653 $generated@@654))
 :pattern ( ($generated@@341 ($generated@@246 $generated@@652) $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@239) (= (type $generated@@657) $generated@@64)) (= (type $generated@@658) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@340 $generated@@658) (and ($generated@@237 $generated@@656) (exists (($generated@@659 T@U) ) (!  (and (= (type $generated@@659) $generated@@64) ($generated@@74 $generated@@656 ($generated@@238 $generated@@659 $generated@@657) $generated@@658))
 :pattern ( ($generated@@74 $generated@@656 ($generated@@238 $generated@@659 $generated@@657) $generated@@658))
))))) ($generated@@341 ($generated@@247 $generated@@656) $generated@@657 $generated@@658))
 :pattern ( ($generated@@341 ($generated@@247 $generated@@656) $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@248) (= (type $generated@@661) $generated@@248)) (= ($generated@@314 ($generated@@336 $generated@@660) ($generated@@336 $generated@@661)) ($generated@@336 ($generated@@314 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@314 ($generated@@336 $generated@@660) ($generated@@336 $generated@@661)))
)))
(assert (forall (($generated@@662 Int) ) (! (= ($generated@@361 ($generated@@8 ($generated@@334 $generated@@662))) ($generated@@336 ($generated@@361 ($generated@@8 $generated@@662))))
 :pattern ( ($generated@@361 ($generated@@8 ($generated@@334 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@361 ($generated@@336 $generated@@663)) ($generated@@336 ($generated@@361 $generated@@663)))
 :pattern ( ($generated@@361 ($generated@@336 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@356 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@355 $generated@@665)) (= ($generated@@354 $generated@@664) 0)) (= $generated@@664 ($generated@@353 $generated@@665))))
 :pattern ( ($generated@@354 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@76 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@374 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@374 $generated@@666) ($generated ($generated@@81 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@374 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@671) $generated@@2)) ($generated@@74 $generated@@671 $generated@@46 $generated@@670))
 :pattern ( ($generated@@74 $generated@@671 $generated@@46 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@673) $generated@@3)) ($generated@@74 $generated@@673 $generated@@47 $generated@@672))
 :pattern ( ($generated@@74 $generated@@673 $generated@@47 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@675) $generated@@4)) ($generated@@74 $generated@@675 $generated@@44 $generated@@674))
 :pattern ( ($generated@@74 $generated@@675 $generated@@44 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@677) $generated@@526)) ($generated@@74 $generated@@677 $generated@@45 $generated@@676))
 :pattern ( ($generated@@74 $generated@@677 $generated@@45 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@679) $generated@@248)) ($generated@@74 $generated@@679 $generated@@48 $generated@@678))
 :pattern ( ($generated@@74 $generated@@679 $generated@@48 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@355 $generated@@248)) (= (type $generated@@681) $generated@@64)) (= ($generated@@224 $generated@@680 ($generated@@568 $generated@@681)) (forall (($generated@@682 Int) ) (!  (=> (and (<= 0 $generated@@682) (< $generated@@682 ($generated@@354 $generated@@680))) ($generated@@315 ($generated@@569 $generated@@680 $generated@@682) $generated@@681))
 :pattern ( ($generated@@569 $generated@@680 $generated@@682))
))))
 :pattern ( ($generated@@224 $generated@@680 ($generated@@568 $generated@@681)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 Int) ) (!  (=> (= (type $generated@@684) ($generated@@355 $generated@@248)) (=> (and (<= 0 $generated@@685) (< $generated@@685 ($generated@@354 $generated@@684))) (< ($generated@@607 ($generated@@455 $generated@@239 ($generated@@569 $generated@@684 $generated@@685))) ($generated@@683 $generated@@684))))
 :pattern ( ($generated@@607 ($generated@@455 $generated@@239 ($generated@@569 $generated@@684 $generated@@685))))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@687) $generated@@64)) (= (type $generated@@688) $generated@@64)) ($generated@@224 $generated@@686 ($generated@@483 $generated@@687 $generated@@688))) (and (and ($generated@@224 ($generated@@380 $generated@@686) ($generated@@324 $generated@@687)) ($generated@@224 ($generated@@423 $generated@@686) ($generated@@324 $generated@@688))) ($generated@@224 ($generated@@454 $generated@@686) ($generated@@324 ($generated@@238 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@224 $generated@@686 ($generated@@483 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@690) $generated@@64)) (= (type $generated@@691) $generated@@64)) ($generated@@224 $generated@@689 ($generated@@491 $generated@@690 $generated@@691))) (and (and ($generated@@224 ($generated@@398 $generated@@689) ($generated@@329 $generated@@690)) ($generated@@224 ($generated@@434 $generated@@689) ($generated@@329 $generated@@691))) ($generated@@224 ($generated@@465 $generated@@689) ($generated@@329 ($generated@@238 $generated@@690 $generated@@691)))))
 :pattern ( ($generated@@224 $generated@@689 ($generated@@491 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@2) ($generated@@224 $generated@@692 $generated@@46))
 :pattern ( ($generated@@224 $generated@@692 $generated@@46))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@3) ($generated@@224 $generated@@693 $generated@@47))
 :pattern ( ($generated@@224 $generated@@693 $generated@@47))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@4) ($generated@@224 $generated@@694 $generated@@44))
 :pattern ( ($generated@@224 $generated@@694 $generated@@44))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@526) ($generated@@224 $generated@@695 $generated@@45))
 :pattern ( ($generated@@224 $generated@@695 $generated@@45))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@248) ($generated@@224 $generated@@696 $generated@@48))
 :pattern ( ($generated@@224 $generated@@696 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 (T@U) Bool)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () Int)
(assert  (and (and (and (= (type $generated@@697) ($generated@@260 $generated@@77 $generated@@4)) (= (type $generated@@698) $generated@@77)) (= (type $generated@@699) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@704) ($generated@@355 $generated@@248))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@706  (=> (= $generated@@697 ($generated@@259 $generated@@698 $generated@@699 $generated@@60 false)) (=> (and (= $generated@@700 ($generated@@334 0)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@334 0) $generated@@700) (< $generated@@700 256))))))
(let (($generated@@707  (=> (and ($generated@@340 $generated@@699) ($generated@@701 $generated@@699)) (=> (and (and (and (<= ($generated@@334 0) $generated@@702) (< $generated@@702 256)) (and (<= ($generated@@334 0) $generated@@703) (< $generated@@703 256))) (and (and ($generated@@224 $generated@@704 ($generated@@568 $generated@@45)) ($generated@@74 $generated@@704 ($generated@@568 $generated@@45) $generated@@699)) (and (= 1 $generated@@705) (= (ControlFlow 0 3) 2)))) $generated@@706))))
$generated@@707)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 () T@T)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 () T@T)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@259 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U T@U) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@330 (Int) Int)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) Bool)
(declare-fun $generated@@337 (T@U T@U T@U) Bool)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@349 (T@T) T@U)
(declare-fun $generated@@350 (T@U) Int)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@362 (T@U) Int)
(declare-fun $generated@@363 (T@T) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@T) T@U)
(declare-fun $generated@@370 (T@T T@T) T@T)
(declare-fun $generated@@371 (T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@T) T@U)
(declare-fun $generated@@388 (T@T T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@T T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@471 (T@U T@U) T@U)
(declare-fun $generated@@479 (T@U T@U) T@U)
(declare-fun $generated@@487 (Int Int) Int)
(declare-fun $generated@@490 (T@T) T@U)
(declare-fun $generated@@514 () T@T)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@557 (T@U Int) T@U)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@611 (Int Int) Int)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@674 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@2) ($generated@@220 $generated@@221 ($generated@@75 0)))
 :pattern ( ($generated@@220 $generated@@221 ($generated@@75 0)))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (= (type $generated@@222) $generated@@132) ($generated@@220 $generated@@222 ($generated@@75 1)))
 :pattern ( ($generated@@220 $generated@@222 ($generated@@75 1)))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@140) ($generated@@220 $generated@@223 ($generated@@75 2)))
 :pattern ( ($generated@@220 $generated@@223 ($generated@@75 2)))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (= (type $generated@@224) $generated@@148) ($generated@@220 $generated@@224 ($generated@@75 3)))
 :pattern ( ($generated@@220 $generated@@224 ($generated@@75 3)))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@156) ($generated@@220 $generated@@225 ($generated@@75 4)))
 :pattern ( ($generated@@220 $generated@@225 ($generated@@75 4)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@164) ($generated@@220 $generated@@226 ($generated@@75 7)))
 :pattern ( ($generated@@220 $generated@@226 ($generated@@75 7)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@172) ($generated@@220 $generated@@227 ($generated@@75 8)))
 :pattern ( ($generated@@220 $generated@@227 ($generated@@75 8)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@180) ($generated@@220 $generated@@228 ($generated@@75 15)))
 :pattern ( ($generated@@220 $generated@@228 ($generated@@75 15)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@188) ($generated@@220 $generated@@229 ($generated@@75 16)))
 :pattern ( ($generated@@220 $generated@@229 ($generated@@75 16)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@196) ($generated@@220 $generated@@230 ($generated@@75 32)))
 :pattern ( ($generated@@220 $generated@@230 ($generated@@75 32)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@204) ($generated@@220 $generated@@231 ($generated@@75 53)))
 :pattern ( ($generated@@220 $generated@@231 ($generated@@75 53)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@212) ($generated@@220 $generated@@232 ($generated@@75 100)))
 :pattern ( ($generated@@220 $generated@@232 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@235) 25) (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@64) (= (type $generated@@239) $generated@@64)) (= (type $generated@@240) $generated@@235)) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239))) ($generated@@233 $generated@@240))
 :pattern ( ($generated@@233 $generated@@240) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239)))
)))
(assert  (and (and (= ($generated@@1 $generated@@244) 26) (forall (($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@242 $generated@@245))
))) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@246)) $generated@@244)
 :pattern ( ($generated@@243 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@235) (= (type $generated@@248) $generated@@235)) true) (= ($generated@@241 $generated@@247 $generated@@248)  (and (= ($generated@@242 $generated@@247) ($generated@@242 $generated@@248)) (= ($generated@@243 $generated@@247) ($generated@@243 $generated@@248)))))
 :pattern ( ($generated@@241 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@249 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@253) $generated@@64)) ($generated@@220 $generated@@252 ($generated@@249 $generated@@253))) ($generated@@250 $generated@@252))
 :pattern ( ($generated@@220 $generated@@252 ($generated@@249 $generated@@253)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@260 $generated@@261)) 27)) (forall (($generated@@262 T@T) ($generated@@263 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@262 $generated@@263)) $generated@@262)
 :pattern ( ($generated@@256 $generated@@262 $generated@@263))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@264 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@256 $generated@@264 $generated@@265))
))) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@258 (type $generated@@266))))
(= (type ($generated@@254 $generated@@266 $generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@254 $generated@@266 $generated@@267 $generated@@268))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(let (($generated@@275 (type $generated@@271)))
(= (type ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273)) ($generated@@256 $generated@@275 $generated@@274))))
 :pattern ( ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273))
))) (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@258 (type $generated@@276))))
 (=> (= (type $generated@@279) $generated@@280) (= ($generated@@254 ($generated@@259 $generated@@276 $generated@@277 $generated@@278 $generated@@279) $generated@@277 $generated@@278) $generated@@279)))
 :weight 0
))) (and (and (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (or (= $generated@@283 $generated@@285) (= ($generated@@254 ($generated@@259 $generated@@282 $generated@@283 $generated@@284 $generated@@281) $generated@@285 $generated@@286) ($generated@@254 $generated@@282 $generated@@285 $generated@@286)))
 :weight 0
)) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (or (= $generated@@290 $generated@@292) (= ($generated@@254 ($generated@@259 $generated@@288 $generated@@289 $generated@@290 $generated@@287) $generated@@291 $generated@@292) ($generated@@254 $generated@@288 $generated@@291 $generated@@292)))
 :weight 0
))) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (or true (= ($generated@@254 ($generated@@259 $generated@@294 $generated@@295 $generated@@296 $generated@@293) $generated@@297 $generated@@298) ($generated@@254 $generated@@294 $generated@@297 $generated@@298)))
 :weight 0
)))) (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Bool) ) (! (= (type ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302)) ($generated@@256 $generated@@77 $generated@@4))
 :pattern ( ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ($generated@@307 T@U) ($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@67 (type $generated@@308))))
 (=> (and (and (and (and (= (type $generated@@303) $generated@@77) (= (type $generated@@304) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@305) ($generated@@66 $generated@@4))) (= (type $generated@@307) $generated@@77)) (= (type $generated@@308) ($generated@@66 $generated@@309))) (= ($generated@@0 ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))  (=> (and (not (= $generated@@307 $generated@@303)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@304 $generated@@307) $generated@@305))) $generated@@306))))
 :pattern ( ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (= (type ($generated@@310 $generated@@312 $generated@@313)) $generated@@235)
 :pattern ( ($generated@@310 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@64) (= (type $generated@@315) $generated@@64)) (= (type $generated@@316) $generated@@244)) (= (type $generated@@317) $generated@@244)) (= ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315))  (and ($generated@@311 $generated@@316 $generated@@314) ($generated@@311 $generated@@317 $generated@@315))))
 :pattern ( ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@235) (= (type $generated@@319) $generated@@235)) (= ($generated@@241 $generated@@318 $generated@@319) (= $generated@@318 $generated@@319)))
 :pattern ( ($generated@@241 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@64)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@323) $generated@@64)) (= ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@244) ($generated@@0 ($generated@@81 $generated@@322 $generated@@324))) ($generated@@311 $generated@@324 $generated@@323))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
))))
 :pattern ( ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@64)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@328) $generated@@64)) (= ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@244) ($generated@@0 ($generated@@81 $generated@@327 $generated@@329))) ($generated@@311 $generated@@329 $generated@@328))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)))
)))
(assert (forall (($generated@@331 Int) ) (! (= ($generated@@330 $generated@@331) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
(= (type ($generated@@332 $generated@@333)) $generated@@334))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (= ($generated@@332 $generated@@335) $generated@@335)
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@338) $generated@@64) (= (type $generated@@339) $generated@@64)) (= (type $generated@@340) $generated@@244)) (= (type $generated@@341) $generated@@244)) (= (type $generated@@342) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@336 $generated@@342)) (= ($generated@@74 ($generated@@310 $generated@@340 $generated@@341) ($generated@@234 $generated@@338 $generated@@339) $generated@@342)  (and ($generated@@337 $generated@@340 $generated@@338 $generated@@342) ($generated@@337 $generated@@341 $generated@@339 $generated@@342))))
 :pattern ( ($generated@@74 ($generated@@310 $generated@@340 $generated@@341) ($generated@@234 $generated@@338 $generated@@339) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@68)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@235) (= ($generated@@233 $generated@@345) (= ($generated@@343 $generated@@345) $generated@@61)))
 :pattern ( ($generated@@233 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@235) ($generated@@233 $generated@@346)) (exists (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (and (and (= (type $generated@@347) $generated@@244) (= (type $generated@@348) $generated@@244)) (= $generated@@346 ($generated@@310 $generated@@347 $generated@@348)))
 :no-pattern (type $generated@@347)
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
)))
 :pattern ( ($generated@@233 $generated@@346))
)))
(assert  (and (and (forall (($generated@@353 T@T) ) (= ($generated@@1 ($generated@@351 $generated@@353)) 28)) (forall (($generated@@354 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@351 $generated@@354))
))) (forall (($generated@@355 T@T) ) (! (= (type ($generated@@349 $generated@@355)) ($generated@@351 $generated@@355))
 :pattern ( ($generated@@349 $generated@@355))
))))
(assert (forall (($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@356)) 0)
 :pattern ( ($generated@@349 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@244)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@64) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@337 ($generated@@357 $generated@@359) $generated@@360 $generated@@361) ($generated@@74 $generated@@359 $generated@@360 $generated@@361)))
 :pattern ( ($generated@@337 ($generated@@357 $generated@@359) $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@364 T@T) ) (! (= (type ($generated@@363 $generated@@364)) ($generated@@76 $generated@@364 $generated@@2))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@79 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@76 $generated@@366 $generated@@2)) (and (= (= ($generated@@362 $generated@@365) 0) (= $generated@@365 ($generated@@363 $generated@@366))) (=> (not (= ($generated@@362 $generated@@365) 0)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367))))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert  (and (and (and (and (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (= ($generated@@1 ($generated@@370 $generated@@373 $generated@@374)) 29)) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@371 ($generated@@370 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@370 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@372 ($generated@@370 $generated@@377 $generated@@378)) $generated@@378)
 :pattern ( ($generated@@370 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@371 (type $generated@@379))))
(= (type ($generated@@368 $generated@@379)) ($generated@@76 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@379))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= (type ($generated@@369 $generated@@381 $generated@@382)) ($generated@@370 $generated@@381 $generated@@382))
 :pattern ( ($generated@@369 $generated@@381 $generated@@382))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@T) ) (! (let (($generated@@385 (type $generated@@383)))
 (not ($generated@@0 ($generated@@81 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383))))
 :pattern ( (let (($generated@@385 (type $generated@@383)))
($generated@@81 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383)))
)))
(assert  (and (and (and (and (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (= ($generated@@1 ($generated@@388 $generated@@391 $generated@@392)) 30)) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@389 ($generated@@388 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@388 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@390 ($generated@@388 $generated@@395 $generated@@396)) $generated@@396)
 :pattern ( ($generated@@388 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@389 (type $generated@@397))))
(= (type ($generated@@386 $generated@@397)) ($generated@@76 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@397))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= (type ($generated@@387 $generated@@399 $generated@@400)) ($generated@@388 $generated@@399 $generated@@400))
 :pattern ( ($generated@@387 $generated@@399 $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@T) ) (! (let (($generated@@403 (type $generated@@401)))
 (not ($generated@@0 ($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401))))
 :pattern ( (let (($generated@@403 (type $generated@@401)))
($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401)))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@79 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@76 $generated@@405 $generated@@2)) (= ($generated@@250 $generated@@404) (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@405) (and (<= 0 ($generated ($generated@@81 $generated@@404 $generated@@406))) (<= ($generated ($generated@@81 $generated@@404 $generated@@406)) ($generated@@362 $generated@@404))))
 :pattern ( ($generated@@81 $generated@@404 $generated@@406))
)))))
 :pattern ( ($generated@@250 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@372 (type $generated@@407))))
(let (($generated@@409 ($generated@@371 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@370 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@369 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@368 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@372 (type $generated@@412))))
(= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@413 $generated@@4)))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@372 (type $generated@@414))))
(let (($generated@@416 ($generated@@371 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@370 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@369 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@415) ($generated@@0 ($generated@@81 ($generated@@411 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@411 $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@390 (type $generated@@418))))
(let (($generated@@420 ($generated@@389 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@388 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@387 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@386 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@390 (type $generated@@423))))
(= (type ($generated@@422 $generated@@423)) ($generated@@76 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@390 (type $generated@@425))))
(let (($generated@@427 ($generated@@389 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@388 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@387 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@426) ($generated@@0 ($generated@@81 ($generated@@422 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@422 $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@430) $generated@@64)) (= ($generated@@220 $generated@@429 ($generated@@249 $generated@@430)) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@429 $generated@@431)))) ($generated@@311 $generated@@431 $generated@@430))
 :pattern ( ($generated@@81 $generated@@429 $generated@@431))
))))
 :pattern ( ($generated@@220 $generated@@429 ($generated@@249 $generated@@430)))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@432 ($generated@@320 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@244) ($generated@@0 ($generated@@81 $generated@@432 $generated@@435))) ($generated@@337 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@81 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@74 $generated@@432 ($generated@@320 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (= (type $generated@@436) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@437) $generated@@64)) (= (type $generated@@438) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@436 ($generated@@325 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@244) ($generated@@0 ($generated@@81 $generated@@436 $generated@@439))) ($generated@@337 $generated@@439 $generated@@437 $generated@@438))
 :pattern ( ($generated@@81 $generated@@436 $generated@@439))
))))
 :pattern ( ($generated@@74 $generated@@436 ($generated@@325 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(= ($generated ($generated@@81 ($generated@@363 $generated@@441) $generated@@440)) 0))
 :pattern ( (let (($generated@@441 (type $generated@@440)))
($generated@@81 ($generated@@363 $generated@@441) $generated@@440)))
)))
(assert  (and (and (forall (($generated@@445 T@U) ) (! (= (type ($generated@@442 $generated@@445)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@442 $generated@@445))
)) (forall (($generated@@446 T@T) ($generated@@447 T@U) ) (! (= (type ($generated@@443 $generated@@446 $generated@@447)) $generated@@446)
 :pattern ( ($generated@@443 $generated@@446 $generated@@447))
))) (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@372 (type $generated@@448))))
(let (($generated@@450 ($generated@@371 (type $generated@@448))))
(= (type ($generated@@444 $generated@@448)) ($generated@@76 $generated@@450 $generated@@449))))
 :pattern ( ($generated@@444 $generated@@448))
))))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@452) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@442 $generated@@451) $generated@@452))  (and ($generated@@0 ($generated@@81 ($generated@@368 $generated@@451) ($generated@@242 ($generated@@443 $generated@@235 $generated@@452)))) (= ($generated@@81 ($generated@@444 $generated@@451) ($generated@@242 ($generated@@443 $generated@@235 $generated@@452))) ($generated@@243 ($generated@@443 $generated@@235 $generated@@452))))))
 :pattern ( ($generated@@81 ($generated@@442 $generated@@451) $generated@@452))
)))
(assert  (and (forall (($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@455)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@453 $generated@@455))
)) (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@390 (type $generated@@456))))
(let (($generated@@458 ($generated@@389 (type $generated@@456))))
(= (type ($generated@@454 $generated@@456)) ($generated@@76 $generated@@458 $generated@@457))))
 :pattern ( ($generated@@454 $generated@@456))
))))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@460) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@453 $generated@@459) $generated@@460))  (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@459) ($generated@@242 ($generated@@443 $generated@@235 $generated@@460)))) (= ($generated@@81 ($generated@@454 $generated@@459) ($generated@@242 ($generated@@443 $generated@@235 $generated@@460))) ($generated@@243 ($generated@@443 $generated@@235 $generated@@460))))))
 :pattern ( ($generated@@81 ($generated@@453 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@462)))
(let (($generated@@464 ($generated@@371 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@370 $generated@@464 $generated@@463)) (= ($generated@@0 ($generated@@81 ($generated@@411 $generated@@461) $generated@@462)) (exists (($generated@@465 T@U) ) (!  (and (= (type $generated@@465) $generated@@464) (and ($generated@@0 ($generated@@81 ($generated@@368 $generated@@461) $generated@@465)) (= $generated@@462 ($generated@@81 ($generated@@444 $generated@@461) $generated@@465))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@461) $generated@@465))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@461) $generated@@465))
))))))
 :pattern ( ($generated@@81 ($generated@@411 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 (type $generated@@467)))
(let (($generated@@469 ($generated@@389 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@388 $generated@@469 $generated@@468)) (= ($generated@@0 ($generated@@81 ($generated@@422 $generated@@466) $generated@@467)) (exists (($generated@@470 T@U) ) (!  (and (= (type $generated@@470) $generated@@469) (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@466) $generated@@470)) (= $generated@@467 ($generated@@81 ($generated@@454 $generated@@466) $generated@@470))))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@466) $generated@@470))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@466) $generated@@470))
))))))
 :pattern ( ($generated@@81 ($generated@@422 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (and (= (type $generated@@474) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@475) $generated@@64)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477) (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@474) $generated@@478))) (and ($generated@@337 ($generated@@81 ($generated@@444 $generated@@474) $generated@@478) $generated@@476 $generated@@477) ($generated@@337 $generated@@478 $generated@@475 $generated@@477)))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@474) $generated@@478))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@474) $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (= (type $generated@@482) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@482) $generated@@486))) (and ($generated@@337 ($generated@@81 ($generated@@454 $generated@@482) $generated@@486) $generated@@484 $generated@@485) ($generated@@337 $generated@@486 $generated@@483 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@482) $generated@@486))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@482) $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ($generated@@489 Int) ) (! (= ($generated@@487 $generated@@488 $generated@@489) (div $generated@@488 $generated@@489))
 :pattern ( ($generated@@487 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@T) ) (! (= (type ($generated@@490 $generated@@491)) ($generated@@76 $generated@@491 $generated@@4))
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@390 (type $generated@@492))))
(let (($generated@@494 ($generated@@389 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@388 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@387 $generated@@494 $generated@@493)) (= ($generated@@386 $generated@@492) ($generated@@490 $generated@@494))))))
 :pattern ( ($generated@@386 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@390 (type $generated@@495))))
(let (($generated@@497 ($generated@@389 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@388 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@387 $generated@@497 $generated@@496)) (= ($generated@@422 $generated@@495) ($generated@@490 $generated@@496))))))
 :pattern ( ($generated@@422 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@390 (type $generated@@498))))
(let (($generated@@500 ($generated@@389 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@388 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@387 $generated@@500 $generated@@499)) (= ($generated@@453 $generated@@498) ($generated@@490 $generated@@244))))))
 :pattern ( ($generated@@453 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@372 (type $generated@@501))))
(let (($generated@@503 ($generated@@371 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@370 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@369 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@244) (= (type $generated@@505) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@442 $generated@@501) ($generated@@357 ($generated@@310 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@442 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@390 (type $generated@@506))))
(let (($generated@@508 ($generated@@389 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@388 $generated@@508 $generated@@507)) (or (= $generated@@506 ($generated@@387 $generated@@508 $generated@@507)) (exists (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (and (and (= (type $generated@@509) $generated@@244) (= (type $generated@@510) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@453 $generated@@506) ($generated@@357 ($generated@@310 $generated@@509 $generated@@510)))))
 :no-pattern (type $generated@@509)
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@453 $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@244) ($generated@@311 $generated@@511 $generated@@46)) (and (= ($generated@@357 ($generated@@443 $generated@@2 $generated@@511)) $generated@@511) ($generated@@220 ($generated@@443 $generated@@2 $generated@@511) $generated@@46)))
 :pattern ( ($generated@@311 $generated@@511 $generated@@46))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@244) ($generated@@311 $generated@@512 $generated@@47)) (and (= ($generated@@357 ($generated@@443 $generated@@3 $generated@@512)) $generated@@512) ($generated@@220 ($generated@@443 $generated@@3 $generated@@512) $generated@@47)))
 :pattern ( ($generated@@311 $generated@@512 $generated@@47))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@244) ($generated@@311 $generated@@513 $generated@@44)) (and (= ($generated@@357 ($generated@@443 $generated@@4 $generated@@513)) $generated@@513) ($generated@@220 ($generated@@443 $generated@@4 $generated@@513) $generated@@44)))
 :pattern ( ($generated@@311 $generated@@513 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@514) 31))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@244) ($generated@@311 $generated@@515 $generated@@45)) (and (= ($generated@@357 ($generated@@443 $generated@@514 $generated@@515)) $generated@@515) ($generated@@220 ($generated@@443 $generated@@514 $generated@@515) $generated@@45)))
 :pattern ( ($generated@@311 $generated@@515 $generated@@45))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@311 ($generated@@357 $generated@@516) $generated@@517) ($generated@@220 $generated@@516 $generated@@517)))
 :pattern ( ($generated@@311 ($generated@@357 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@79 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@76 $generated@@519 $generated@@2)) (<= 0 ($generated@@362 $generated@@518))))
 :pattern ( ($generated@@362 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@352 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@351 $generated@@521)) (<= 0 ($generated@@350 $generated@@520))))
 :pattern ( ($generated@@350 $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= ($generated@@522 ($generated@@471 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@471 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@526 ($generated@@471 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@471 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@64) (= (type $generated@@531) $generated@@64)) (= ($generated@@72 ($generated@@471 $generated@@530 $generated@@531)) $generated@@58))
 :pattern ( ($generated@@471 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@64)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= ($generated@@532 ($generated@@479 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@479 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@64)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (= ($generated@@536 ($generated@@479 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@479 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@72 ($generated@@479 $generated@@540 $generated@@541)) $generated@@59))
 :pattern ( ($generated@@479 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@244) (= (type $generated@@543) $generated@@244)) (= ($generated@@343 ($generated@@310 $generated@@542 $generated@@543)) $generated@@61))
 :pattern ( ($generated@@310 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@234 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@234 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@234 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@234 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@244) (= (type $generated@@553) $generated@@244)) (= ($generated@@242 ($generated@@310 $generated@@552 $generated@@553)) $generated@@552))
 :pattern ( ($generated@@310 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@244) (= (type $generated@@555) $generated@@244)) (= ($generated@@243 ($generated@@310 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@310 $generated@@554 $generated@@555))
)))
(assert  (and (forall (($generated@@558 T@U) ) (! (= (type ($generated@@556 $generated@@558)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@558))
)) (forall (($generated@@559 T@U) ($generated@@560 Int) ) (! (let (($generated@@561 ($generated@@352 (type $generated@@559))))
(= (type ($generated@@557 $generated@@559 $generated@@560)) $generated@@561))
 :pattern ( ($generated@@557 $generated@@559 $generated@@560))
))))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@351 $generated@@244)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@562 ($generated@@556 $generated@@563) $generated@@564) (forall (($generated@@565 Int) ) (!  (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@350 $generated@@562))) ($generated@@337 ($generated@@557 $generated@@562 $generated@@565) $generated@@563 $generated@@564))
 :pattern ( ($generated@@557 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@556 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@566 ($generated@@75 $generated@@567)) $generated@@567)
 :pattern ( ($generated@@75 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@64) (= ($generated@@568 ($generated@@320 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@320 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@64) (= ($generated@@72 ($generated@@320 $generated@@571)) $generated@@54))
 :pattern ( ($generated@@320 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@64)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@64) (= ($generated@@572 ($generated@@325 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@325 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@64) (= ($generated@@72 ($generated@@325 $generated@@575)) $generated@@55))
 :pattern ( ($generated@@325 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@64)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@64) (= ($generated@@576 ($generated@@249 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@249 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@579)) $generated@@56))
 :pattern ( ($generated@@249 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@556 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@556 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@556 $generated@@583)) $generated@@57))
 :pattern ( ($generated@@556 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
(= ($generated@@443 $generated@@585 ($generated@@357 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@357 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) $generated@@64)) (= ($generated@@220 $generated@@586 ($generated@@471 $generated@@587 $generated@@588)) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@586) $generated@@589))) (and ($generated@@311 ($generated@@81 ($generated@@444 $generated@@586) $generated@@589) $generated@@588) ($generated@@311 $generated@@589 $generated@@587)))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@586) $generated@@589))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@586) $generated@@589))
))))
 :pattern ( ($generated@@220 $generated@@586 ($generated@@471 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) (= ($generated@@220 $generated@@590 ($generated@@479 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@590) $generated@@593))) (and ($generated@@311 ($generated@@81 ($generated@@454 $generated@@590) $generated@@593) $generated@@592) ($generated@@311 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@590) $generated@@593))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@220 $generated@@590 ($generated@@479 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@244) (= (type $generated@@597) $generated@@244)) (< ($generated@@594 $generated@@596) ($generated@@595 ($generated@@310 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@310 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@244) (= (type $generated@@599) $generated@@244)) (< ($generated@@594 $generated@@599) ($generated@@595 ($generated@@310 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@310 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@244) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@311 $generated@@600 ($generated@@471 $generated@@601 $generated@@602))) (and (= ($generated@@357 ($generated@@443 ($generated@@370 $generated@@244 $generated@@244) $generated@@600)) $generated@@600) ($generated@@220 ($generated@@443 ($generated@@370 $generated@@244 $generated@@244) $generated@@600) ($generated@@471 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@311 $generated@@600 ($generated@@471 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@244) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) ($generated@@311 $generated@@603 ($generated@@479 $generated@@604 $generated@@605))) (and (= ($generated@@357 ($generated@@443 ($generated@@388 $generated@@244 $generated@@244) $generated@@603)) $generated@@603) ($generated@@220 ($generated@@443 ($generated@@388 $generated@@244 $generated@@244) $generated@@603) ($generated@@479 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@311 $generated@@603 ($generated@@479 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@64) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@244)) ($generated@@311 $generated@@608 ($generated@@234 $generated@@606 $generated@@607))) (and (= ($generated@@357 ($generated@@443 $generated@@235 $generated@@608)) $generated@@608) ($generated@@220 ($generated@@443 $generated@@235 $generated@@608) ($generated@@234 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@311 $generated@@608 ($generated@@234 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (not ($generated@@0 ($generated@@81 ($generated@@490 $generated@@610) $generated@@609))))
 :pattern ( (let (($generated@@610 (type $generated@@609)))
($generated@@81 ($generated@@490 $generated@@610) $generated@@609)))
)))
(assert (forall (($generated@@612 Int) ($generated@@613 Int) ) (! (= ($generated@@611 $generated@@612 $generated@@613) (mod $generated@@612 $generated@@613))
 :pattern ( ($generated@@611 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@69)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@64) (= (type $generated@@617) $generated@@64)) (and (= ($generated@@72 ($generated@@234 $generated@@616 $generated@@617)) $generated@@62) (= ($generated@@614 ($generated@@234 $generated@@616 $generated@@617)) $generated@@63)))
 :pattern ( ($generated@@234 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@235) (= ($generated@@594 ($generated@@357 $generated@@618)) ($generated@@595 $generated@@618)))
 :pattern ( ($generated@@594 ($generated@@357 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@244) ($generated@@311 $generated@@619 ($generated@@75 0))) (and (= ($generated@@357 ($generated@@443 $generated@@2 $generated@@619)) $generated@@619) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@619) ($generated@@75 0))))
 :pattern ( ($generated@@311 $generated@@619 ($generated@@75 0)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@244) ($generated@@311 $generated@@620 ($generated@@75 1))) (and (= ($generated@@357 ($generated@@443 $generated@@132 $generated@@620)) $generated@@620) ($generated@@220 ($generated@@443 $generated@@132 $generated@@620) ($generated@@75 1))))
 :pattern ( ($generated@@311 $generated@@620 ($generated@@75 1)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@244) (= (type $generated@@622) $generated@@64)) ($generated@@311 $generated@@621 ($generated@@320 $generated@@622))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@621)) $generated@@621) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@621) ($generated@@320 $generated@@622))))
 :pattern ( ($generated@@311 $generated@@621 ($generated@@320 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@244) (= (type $generated@@624) $generated@@64)) ($generated@@311 $generated@@623 ($generated@@325 $generated@@624))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@623)) $generated@@623) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@623) ($generated@@325 $generated@@624))))
 :pattern ( ($generated@@311 $generated@@623 ($generated@@325 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@244) (= (type $generated@@626) $generated@@64)) ($generated@@311 $generated@@625 ($generated@@249 $generated@@626))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@2) $generated@@625)) $generated@@625) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@2) $generated@@625) ($generated@@249 $generated@@626))))
 :pattern ( ($generated@@311 $generated@@625 ($generated@@249 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@244) (= (type $generated@@628) $generated@@64)) ($generated@@311 $generated@@627 ($generated@@556 $generated@@628))) (and (= ($generated@@357 ($generated@@443 ($generated@@351 $generated@@244) $generated@@627)) $generated@@627) ($generated@@220 ($generated@@443 ($generated@@351 $generated@@244) $generated@@627) ($generated@@556 $generated@@628))))
 :pattern ( ($generated@@311 $generated@@627 ($generated@@556 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@244) ($generated@@311 $generated@@629 ($generated@@75 2))) (and (= ($generated@@357 ($generated@@443 $generated@@140 $generated@@629)) $generated@@629) ($generated@@220 ($generated@@443 $generated@@140 $generated@@629) ($generated@@75 2))))
 :pattern ( ($generated@@311 $generated@@629 ($generated@@75 2)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@244) ($generated@@311 $generated@@630 ($generated@@75 3))) (and (= ($generated@@357 ($generated@@443 $generated@@148 $generated@@630)) $generated@@630) ($generated@@220 ($generated@@443 $generated@@148 $generated@@630) ($generated@@75 3))))
 :pattern ( ($generated@@311 $generated@@630 ($generated@@75 3)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@244) ($generated@@311 $generated@@631 ($generated@@75 4))) (and (= ($generated@@357 ($generated@@443 $generated@@156 $generated@@631)) $generated@@631) ($generated@@220 ($generated@@443 $generated@@156 $generated@@631) ($generated@@75 4))))
 :pattern ( ($generated@@311 $generated@@631 ($generated@@75 4)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@244) ($generated@@311 $generated@@632 ($generated@@75 7))) (and (= ($generated@@357 ($generated@@443 $generated@@164 $generated@@632)) $generated@@632) ($generated@@220 ($generated@@443 $generated@@164 $generated@@632) ($generated@@75 7))))
 :pattern ( ($generated@@311 $generated@@632 ($generated@@75 7)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@244) ($generated@@311 $generated@@633 ($generated@@75 8))) (and (= ($generated@@357 ($generated@@443 $generated@@172 $generated@@633)) $generated@@633) ($generated@@220 ($generated@@443 $generated@@172 $generated@@633) ($generated@@75 8))))
 :pattern ( ($generated@@311 $generated@@633 ($generated@@75 8)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@244) ($generated@@311 $generated@@634 ($generated@@75 15))) (and (= ($generated@@357 ($generated@@443 $generated@@180 $generated@@634)) $generated@@634) ($generated@@220 ($generated@@443 $generated@@180 $generated@@634) ($generated@@75 15))))
 :pattern ( ($generated@@311 $generated@@634 ($generated@@75 15)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@244) ($generated@@311 $generated@@635 ($generated@@75 16))) (and (= ($generated@@357 ($generated@@443 $generated@@188 $generated@@635)) $generated@@635) ($generated@@220 ($generated@@443 $generated@@188 $generated@@635) ($generated@@75 16))))
 :pattern ( ($generated@@311 $generated@@635 ($generated@@75 16)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@244) ($generated@@311 $generated@@636 ($generated@@75 32))) (and (= ($generated@@357 ($generated@@443 $generated@@196 $generated@@636)) $generated@@636) ($generated@@220 ($generated@@443 $generated@@196 $generated@@636) ($generated@@75 32))))
 :pattern ( ($generated@@311 $generated@@636 ($generated@@75 32)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@244) ($generated@@311 $generated@@637 ($generated@@75 53))) (and (= ($generated@@357 ($generated@@443 $generated@@204 $generated@@637)) $generated@@637) ($generated@@220 ($generated@@443 $generated@@204 $generated@@637) ($generated@@75 53))))
 :pattern ( ($generated@@311 $generated@@637 ($generated@@75 53)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@244) ($generated@@311 $generated@@638 ($generated@@75 100))) (and (= ($generated@@357 ($generated@@443 $generated@@212 $generated@@638)) $generated@@638) ($generated@@220 ($generated@@443 $generated@@212 $generated@@638) ($generated@@75 100))))
 :pattern ( ($generated@@311 $generated@@638 ($generated@@75 100)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@639) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@640) $generated@@64)) (= (type $generated@@641) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@639 ($generated@@249 $generated@@640) $generated@@641) (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@639 $generated@@642)))) ($generated@@337 $generated@@642 $generated@@640 $generated@@641))
 :pattern ( ($generated@@81 $generated@@639 $generated@@642))
))))
 :pattern ( ($generated@@74 $generated@@639 ($generated@@249 $generated@@640) $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@235) (= (type $generated@@644) $generated@@64)) (= (type $generated@@645) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@336 $generated@@645) (and ($generated@@233 $generated@@643) (exists (($generated@@646 T@U) ) (!  (and (= (type $generated@@646) $generated@@64) ($generated@@74 $generated@@643 ($generated@@234 $generated@@644 $generated@@646) $generated@@645))
 :pattern ( ($generated@@74 $generated@@643 ($generated@@234 $generated@@644 $generated@@646) $generated@@645))
))))) ($generated@@337 ($generated@@242 $generated@@643) $generated@@644 $generated@@645))
 :pattern ( ($generated@@337 ($generated@@242 $generated@@643) $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@235) (= (type $generated@@648) $generated@@64)) (= (type $generated@@649) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@336 $generated@@649) (and ($generated@@233 $generated@@647) (exists (($generated@@650 T@U) ) (!  (and (= (type $generated@@650) $generated@@64) ($generated@@74 $generated@@647 ($generated@@234 $generated@@650 $generated@@648) $generated@@649))
 :pattern ( ($generated@@74 $generated@@647 ($generated@@234 $generated@@650 $generated@@648) $generated@@649))
))))) ($generated@@337 ($generated@@243 $generated@@647) $generated@@648 $generated@@649))
 :pattern ( ($generated@@337 ($generated@@243 $generated@@647) $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@244) (= (type $generated@@652) $generated@@244)) (= ($generated@@310 ($generated@@332 $generated@@651) ($generated@@332 $generated@@652)) ($generated@@332 ($generated@@310 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@310 ($generated@@332 $generated@@651) ($generated@@332 $generated@@652)))
)))
(assert (forall (($generated@@653 Int) ) (! (= ($generated@@357 ($generated@@8 ($generated@@330 $generated@@653))) ($generated@@332 ($generated@@357 ($generated@@8 $generated@@653))))
 :pattern ( ($generated@@357 ($generated@@8 ($generated@@330 $generated@@653))))
)))
(assert (forall (($generated@@654 T@U) ) (! (= ($generated@@357 ($generated@@332 $generated@@654)) ($generated@@332 ($generated@@357 $generated@@654)))
 :pattern ( ($generated@@357 ($generated@@332 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@352 (type $generated@@655))))
 (=> (and (= (type $generated@@655) ($generated@@351 $generated@@656)) (= ($generated@@350 $generated@@655) 0)) (= $generated@@655 ($generated@@349 $generated@@656))))
 :pattern ( ($generated@@350 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@658)))
 (=> (and (and (= (type $generated@@657) ($generated@@76 $generated@@660 $generated@@2)) (= (type $generated@@659) $generated@@2)) (<= 0 ($generated $generated@@659))) (= ($generated@@362 ($generated@@82 $generated@@657 $generated@@658 $generated@@659)) (+ (- ($generated@@362 $generated@@657) ($generated ($generated@@81 $generated@@657 $generated@@658))) ($generated $generated@@659)))))
 :pattern ( ($generated@@362 ($generated@@82 $generated@@657 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@662) $generated@@2)) ($generated@@74 $generated@@662 $generated@@46 $generated@@661))
 :pattern ( ($generated@@74 $generated@@662 $generated@@46 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@664) $generated@@3)) ($generated@@74 $generated@@664 $generated@@47 $generated@@663))
 :pattern ( ($generated@@74 $generated@@664 $generated@@47 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@666) $generated@@4)) ($generated@@74 $generated@@666 $generated@@44 $generated@@665))
 :pattern ( ($generated@@74 $generated@@666 $generated@@44 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@668) $generated@@514)) ($generated@@74 $generated@@668 $generated@@45 $generated@@667))
 :pattern ( ($generated@@74 $generated@@668 $generated@@45 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@670) $generated@@244)) ($generated@@74 $generated@@670 $generated@@48 $generated@@669))
 :pattern ( ($generated@@74 $generated@@670 $generated@@48 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@351 $generated@@244)) (= (type $generated@@672) $generated@@64)) (= ($generated@@220 $generated@@671 ($generated@@556 $generated@@672)) (forall (($generated@@673 Int) ) (!  (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@350 $generated@@671))) ($generated@@311 ($generated@@557 $generated@@671 $generated@@673) $generated@@672))
 :pattern ( ($generated@@557 $generated@@671 $generated@@673))
))))
 :pattern ( ($generated@@220 $generated@@671 ($generated@@556 $generated@@672)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 Int) ) (!  (=> (= (type $generated@@675) ($generated@@351 $generated@@244)) (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@350 $generated@@675))) (< ($generated@@595 ($generated@@443 $generated@@235 ($generated@@557 $generated@@675 $generated@@676))) ($generated@@674 $generated@@675))))
 :pattern ( ($generated@@595 ($generated@@443 $generated@@235 ($generated@@557 $generated@@675 $generated@@676))))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@678) $generated@@64)) (= (type $generated@@679) $generated@@64)) ($generated@@220 $generated@@677 ($generated@@471 $generated@@678 $generated@@679))) (and (and ($generated@@220 ($generated@@368 $generated@@677) ($generated@@320 $generated@@678)) ($generated@@220 ($generated@@411 $generated@@677) ($generated@@320 $generated@@679))) ($generated@@220 ($generated@@442 $generated@@677) ($generated@@320 ($generated@@234 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@220 $generated@@677 ($generated@@471 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@681) $generated@@64)) (= (type $generated@@682) $generated@@64)) ($generated@@220 $generated@@680 ($generated@@479 $generated@@681 $generated@@682))) (and (and ($generated@@220 ($generated@@386 $generated@@680) ($generated@@325 $generated@@681)) ($generated@@220 ($generated@@422 $generated@@680) ($generated@@325 $generated@@682))) ($generated@@220 ($generated@@453 $generated@@680) ($generated@@325 ($generated@@234 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@220 $generated@@680 ($generated@@479 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@2) ($generated@@220 $generated@@683 $generated@@46))
 :pattern ( ($generated@@220 $generated@@683 $generated@@46))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@3) ($generated@@220 $generated@@684 $generated@@47))
 :pattern ( ($generated@@220 $generated@@684 $generated@@47))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@4) ($generated@@220 $generated@@685 $generated@@44))
 :pattern ( ($generated@@220 $generated@@685 $generated@@44))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@514) ($generated@@220 $generated@@686 $generated@@45))
 :pattern ( ($generated@@220 $generated@@686 $generated@@45))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@244) ($generated@@220 $generated@@687 $generated@@48))
 :pattern ( ($generated@@220 $generated@@687 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 (T@U) Bool)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(assert  (and (and (and (= (type $generated@@688) ($generated@@256 $generated@@77 $generated@@4)) (= (type $generated@@689) $generated@@77)) (= (type $generated@@690) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@696) ($generated@@351 $generated@@244))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@698  (=> (= $generated@@688 ($generated@@255 $generated@@689 $generated@@690 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@691 0))) (=> (= $generated@@692 ($generated@@487 $generated@@693 $generated@@691)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@330 0) $generated@@692) (< $generated@@692 256))) (=> (and (<= ($generated@@330 0) $generated@@692) (< $generated@@692 256)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@691 0))) (=> (and (= $generated@@694 ($generated@@611 $generated@@693 $generated@@691)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@330 0) $generated@@694) (< $generated@@694 256)))))))))))
(let (($generated@@699  (=> (and ($generated@@336 $generated@@690) ($generated@@695 $generated@@690)) (=> (and (and (<= ($generated@@330 0) $generated@@693) (< $generated@@693 256)) (and (<= ($generated@@330 0) $generated@@691) (< $generated@@691 256))) (=> (and (and (and ($generated@@220 $generated@@696 ($generated@@556 $generated@@45)) ($generated@@74 $generated@@696 ($generated@@556 $generated@@45) $generated@@690)) (= 1 $generated@@697)) (and (not (= $generated@@691 0)) (= (ControlFlow 0 6) 2))) $generated@@698)))))
$generated@@699)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 () T@T)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 () T@T)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@260 (T@T T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@334 (Int) Int)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@341 (T@U T@U T@U) Bool)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@354 (T@U) Int)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@374 (T@U) Int)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@T T@T) T@U)
(declare-fun $generated@@382 (T@T T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@T) T@U)
(declare-fun $generated@@400 (T@T T@T) T@T)
(declare-fun $generated@@401 (T@T) T@T)
(declare-fun $generated@@402 (T@T) T@T)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@T T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@483 (T@U T@U) T@U)
(declare-fun $generated@@491 (T@U T@U) T@U)
(declare-fun $generated@@502 (T@T) T@U)
(declare-fun $generated@@526 () T@T)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@569 (T@U Int) T@U)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@683 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@220 $generated@@221 $generated@@222)) (forall (($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@221 $generated@@223) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60))
)))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@2) ($generated@@224 $generated@@225 ($generated@@75 0)))
 :pattern ( ($generated@@224 $generated@@225 ($generated@@75 0)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@132) ($generated@@224 $generated@@226 ($generated@@75 1)))
 :pattern ( ($generated@@224 $generated@@226 ($generated@@75 1)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@140) ($generated@@224 $generated@@227 ($generated@@75 2)))
 :pattern ( ($generated@@224 $generated@@227 ($generated@@75 2)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@148) ($generated@@224 $generated@@228 ($generated@@75 3)))
 :pattern ( ($generated@@224 $generated@@228 ($generated@@75 3)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@156) ($generated@@224 $generated@@229 ($generated@@75 4)))
 :pattern ( ($generated@@224 $generated@@229 ($generated@@75 4)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@164) ($generated@@224 $generated@@230 ($generated@@75 7)))
 :pattern ( ($generated@@224 $generated@@230 ($generated@@75 7)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@172) ($generated@@224 $generated@@231 ($generated@@75 8)))
 :pattern ( ($generated@@224 $generated@@231 ($generated@@75 8)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@180) ($generated@@224 $generated@@232 ($generated@@75 15)))
 :pattern ( ($generated@@224 $generated@@232 ($generated@@75 15)))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (= (type $generated@@233) $generated@@188) ($generated@@224 $generated@@233 ($generated@@75 16)))
 :pattern ( ($generated@@224 $generated@@233 ($generated@@75 16)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (= (type $generated@@234) $generated@@196) ($generated@@224 $generated@@234 ($generated@@75 32)))
 :pattern ( ($generated@@224 $generated@@234 ($generated@@75 32)))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@204) ($generated@@224 $generated@@235 ($generated@@75 53)))
 :pattern ( ($generated@@224 $generated@@235 ($generated@@75 53)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@212) ($generated@@224 $generated@@236 ($generated@@75 100)))
 :pattern ( ($generated@@224 $generated@@236 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@239) 25) (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@64) (= (type $generated@@243) $generated@@64)) (= (type $generated@@244) $generated@@239)) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243))) ($generated@@237 $generated@@244))
 :pattern ( ($generated@@237 $generated@@244) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243)))
)))
(assert  (and (and (= ($generated@@1 $generated@@248) 26) (forall (($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@246 $generated@@249))
))) (forall (($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@250)) $generated@@248)
 :pattern ( ($generated@@247 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@251) $generated@@239) (= (type $generated@@252) $generated@@239)) true) (= ($generated@@245 $generated@@251 $generated@@252)  (and (= ($generated@@246 $generated@@251) ($generated@@246 $generated@@252)) (= ($generated@@247 $generated@@251) ($generated@@247 $generated@@252)))))
 :pattern ( ($generated@@245 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@253 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@257) $generated@@64)) ($generated@@224 $generated@@256 ($generated@@253 $generated@@257))) ($generated@@254 $generated@@256))
 :pattern ( ($generated@@224 $generated@@256 ($generated@@253 $generated@@257)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@264 $generated@@265)) 27)) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@260 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@262 ($generated@@260 $generated@@268 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@260 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@262 (type $generated@@270))))
(= (type ($generated@@258 $generated@@270 $generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@258 $generated@@270 $generated@@271 $generated@@272))
))) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(let (($generated@@279 (type $generated@@275)))
(= (type ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277)) ($generated@@260 $generated@@279 $generated@@278))))
 :pattern ( ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277))
))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@262 (type $generated@@280))))
 (=> (= (type $generated@@283) $generated@@284) (= ($generated@@258 ($generated@@263 $generated@@280 $generated@@281 $generated@@282 $generated@@283) $generated@@281 $generated@@282) $generated@@283)))
 :weight 0
))) (and (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (or (= $generated@@287 $generated@@289) (= ($generated@@258 ($generated@@263 $generated@@286 $generated@@287 $generated@@288 $generated@@285) $generated@@289 $generated@@290) ($generated@@258 $generated@@286 $generated@@289 $generated@@290)))
 :weight 0
)) (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (or (= $generated@@294 $generated@@296) (= ($generated@@258 ($generated@@263 $generated@@292 $generated@@293 $generated@@294 $generated@@291) $generated@@295 $generated@@296) ($generated@@258 $generated@@292 $generated@@295 $generated@@296)))
 :weight 0
))) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (or true (= ($generated@@258 ($generated@@263 $generated@@298 $generated@@299 $generated@@300 $generated@@297) $generated@@301 $generated@@302) ($generated@@258 $generated@@298 $generated@@301 $generated@@302)))
 :weight 0
)))) (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ) (! (= (type ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306)) ($generated@@260 $generated@@77 $generated@@4))
 :pattern ( ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 Bool) ($generated@@311 T@U) ($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@67 (type $generated@@312))))
 (=> (and (and (and (and (= (type $generated@@307) $generated@@77) (= (type $generated@@308) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@309) ($generated@@66 $generated@@4))) (= (type $generated@@311) $generated@@77)) (= (type $generated@@312) ($generated@@66 $generated@@313))) (= ($generated@@0 ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))  (=> (and (not (= $generated@@311 $generated@@307)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@308 $generated@@311) $generated@@309))) $generated@@310))))
 :pattern ( ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) $generated@@239)
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (= (type $generated@@318) $generated@@64) (= (type $generated@@319) $generated@@64)) (= (type $generated@@320) $generated@@248)) (= (type $generated@@321) $generated@@248)) (= ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319))  (and ($generated@@315 $generated@@320 $generated@@318) ($generated@@315 $generated@@321 $generated@@319))))
 :pattern ( ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@239) (= (type $generated@@323) $generated@@239)) (= ($generated@@245 $generated@@322 $generated@@323) (= $generated@@322 $generated@@323)))
 :pattern ( ($generated@@245 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@64)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@327) $generated@@64)) (= ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@248) ($generated@@0 ($generated@@81 $generated@@326 $generated@@328))) ($generated@@315 $generated@@328 $generated@@327))
 :pattern ( ($generated@@81 $generated@@326 $generated@@328))
))))
 :pattern ( ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@64)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@248) ($generated@@0 ($generated@@81 $generated@@331 $generated@@333))) ($generated@@315 $generated@@333 $generated@@332))
 :pattern ( ($generated@@81 $generated@@331 $generated@@333))
))))
 :pattern ( ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)))
)))
(assert (forall (($generated@@335 Int) ) (! (= ($generated@@334 $generated@@335) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 (type $generated@@337)))
(= (type ($generated@@336 $generated@@337)) $generated@@338))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= ($generated@@336 $generated@@339) $generated@@339)
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@342) $generated@@64) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) $generated@@248)) (= (type $generated@@345) $generated@@248)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@340 $generated@@346)) (= ($generated@@74 ($generated@@314 $generated@@344 $generated@@345) ($generated@@238 $generated@@342 $generated@@343) $generated@@346)  (and ($generated@@341 $generated@@344 $generated@@342 $generated@@346) ($generated@@341 $generated@@345 $generated@@343 $generated@@346))))
 :pattern ( ($generated@@74 ($generated@@314 $generated@@344 $generated@@345) ($generated@@238 $generated@@342 $generated@@343) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (= (type ($generated@@347 $generated@@348)) $generated@@68)
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@239) (= ($generated@@237 $generated@@349) (= ($generated@@347 $generated@@349) $generated@@61)))
 :pattern ( ($generated@@237 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@239) ($generated@@237 $generated@@350)) (exists (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (and (and (= (type $generated@@351) $generated@@248) (= (type $generated@@352) $generated@@248)) (= $generated@@350 ($generated@@314 $generated@@351 $generated@@352)))
 :no-pattern (type $generated@@351)
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
)))
 :pattern ( ($generated@@237 $generated@@350))
)))
(assert  (and (and (forall (($generated@@357 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@357)) 28)) (forall (($generated@@358 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@355 $generated@@358))
))) (forall (($generated@@359 T@T) ) (! (= (type ($generated@@353 $generated@@359)) ($generated@@355 $generated@@359))
 :pattern ( ($generated@@353 $generated@@359))
))))
(assert (forall (($generated@@360 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@360)) 0)
 :pattern ( ($generated@@353 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@248)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@64) (= (type $generated@@365) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@341 ($generated@@361 $generated@@363) $generated@@364 $generated@@365) ($generated@@74 $generated@@363 $generated@@364 $generated@@365)))
 :pattern ( ($generated@@341 ($generated@@361 $generated@@363) $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@368) $generated@@248)) (= (type $generated@@369) $generated@@64)) ($generated@@220 $generated@@366 $generated@@367)) ($generated@@341 $generated@@368 $generated@@369 $generated@@366)) ($generated@@341 $generated@@368 $generated@@369 $generated@@367))
 :pattern ( ($generated@@220 $generated@@366 $generated@@367) ($generated@@341 $generated@@368 $generated@@369 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@371) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@373) $generated@@64)) ($generated@@220 $generated@@370 $generated@@371)) ($generated@@74 $generated@@372 $generated@@373 $generated@@370)) ($generated@@74 $generated@@372 $generated@@373 $generated@@371))
 :pattern ( ($generated@@220 $generated@@370 $generated@@371) ($generated@@74 $generated@@372 $generated@@373 $generated@@370))
)))
(assert (forall (($generated@@376 T@T) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@76 $generated@@376 $generated@@2))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@79 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@76 $generated@@378 $generated@@2)) (and (= (= ($generated@@374 $generated@@377) 0) (= $generated@@377 ($generated@@375 $generated@@378))) (=> (not (= ($generated@@374 $generated@@377) 0)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (< 0 ($generated ($generated@@81 $generated@@377 $generated@@379))))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert  (and (and (and (and (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (= ($generated@@1 ($generated@@382 $generated@@385 $generated@@386)) 29)) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= ($generated@@383 ($generated@@382 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@382 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= ($generated@@384 ($generated@@382 $generated@@389 $generated@@390)) $generated@@390)
 :pattern ( ($generated@@382 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@383 (type $generated@@391))))
(= (type ($generated@@380 $generated@@391)) ($generated@@76 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@391))
))) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= (type ($generated@@381 $generated@@393 $generated@@394)) ($generated@@382 $generated@@393 $generated@@394))
 :pattern ( ($generated@@381 $generated@@393 $generated@@394))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@T) ) (! (let (($generated@@397 (type $generated@@395)))
 (not ($generated@@0 ($generated@@81 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395))))
 :pattern ( (let (($generated@@397 (type $generated@@395)))
($generated@@81 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395)))
)))
(assert  (and (and (and (and (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (= ($generated@@1 ($generated@@400 $generated@@403 $generated@@404)) 30)) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= ($generated@@401 ($generated@@400 $generated@@405 $generated@@406)) $generated@@405)
 :pattern ( ($generated@@400 $generated@@405 $generated@@406))
))) (forall (($generated@@407 T@T) ($generated@@408 T@T) ) (! (= ($generated@@402 ($generated@@400 $generated@@407 $generated@@408)) $generated@@408)
 :pattern ( ($generated@@400 $generated@@407 $generated@@408))
))) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@401 (type $generated@@409))))
(= (type ($generated@@398 $generated@@409)) ($generated@@76 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@409))
))) (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (! (= (type ($generated@@399 $generated@@411 $generated@@412)) ($generated@@400 $generated@@411 $generated@@412))
 :pattern ( ($generated@@399 $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@T) ) (! (let (($generated@@415 (type $generated@@413)))
 (not ($generated@@0 ($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413))))
 :pattern ( (let (($generated@@415 (type $generated@@413)))
($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413)))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (= ($generated@@254 $generated@@416) (forall (($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@417) (and (<= 0 ($generated ($generated@@81 $generated@@416 $generated@@418))) (<= ($generated ($generated@@81 $generated@@416 $generated@@418)) ($generated@@374 $generated@@416))))
 :pattern ( ($generated@@81 $generated@@416 $generated@@418))
)))))
 :pattern ( ($generated@@254 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@384 (type $generated@@419))))
(let (($generated@@421 ($generated@@383 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@382 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@381 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@380 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@384 (type $generated@@424))))
(= (type ($generated@@423 $generated@@424)) ($generated@@76 $generated@@425 $generated@@4)))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@384 (type $generated@@426))))
(let (($generated@@428 ($generated@@383 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@382 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@381 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@427) ($generated@@0 ($generated@@81 ($generated@@423 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@423 $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@402 (type $generated@@430))))
(let (($generated@@432 ($generated@@401 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@400 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@399 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@430) $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@398 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@402 (type $generated@@435))))
(= (type ($generated@@434 $generated@@435)) ($generated@@76 $generated@@436 $generated@@4)))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@402 (type $generated@@437))))
(let (($generated@@439 ($generated@@401 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@400 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@399 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@438) ($generated@@0 ($generated@@81 ($generated@@434 $generated@@437) $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@434 $generated@@437))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@442) $generated@@64)) (= ($generated@@224 $generated@@441 ($generated@@253 $generated@@442)) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@441 $generated@@443)))) ($generated@@315 $generated@@443 $generated@@442))
 :pattern ( ($generated@@81 $generated@@441 $generated@@443))
))))
 :pattern ( ($generated@@224 $generated@@441 ($generated@@253 $generated@@442)))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (= (type $generated@@444) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@444 ($generated@@324 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@248) ($generated@@0 ($generated@@81 $generated@@444 $generated@@447))) ($generated@@341 $generated@@447 $generated@@445 $generated@@446))
 :pattern ( ($generated@@81 $generated@@444 $generated@@447))
))))
 :pattern ( ($generated@@74 $generated@@444 ($generated@@324 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@448) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@449) $generated@@64)) (= (type $generated@@450) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@448 ($generated@@329 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@248) ($generated@@0 ($generated@@81 $generated@@448 $generated@@451))) ($generated@@341 $generated@@451 $generated@@449 $generated@@450))
 :pattern ( ($generated@@81 $generated@@448 $generated@@451))
))))
 :pattern ( ($generated@@74 $generated@@448 ($generated@@329 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
(= ($generated ($generated@@81 ($generated@@375 $generated@@453) $generated@@452)) 0))
 :pattern ( (let (($generated@@453 (type $generated@@452)))
($generated@@81 ($generated@@375 $generated@@453) $generated@@452)))
)))
(assert  (and (and (forall (($generated@@457 T@U) ) (! (= (type ($generated@@454 $generated@@457)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@454 $generated@@457))
)) (forall (($generated@@458 T@T) ($generated@@459 T@U) ) (! (= (type ($generated@@455 $generated@@458 $generated@@459)) $generated@@458)
 :pattern ( ($generated@@455 $generated@@458 $generated@@459))
))) (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@384 (type $generated@@460))))
(let (($generated@@462 ($generated@@383 (type $generated@@460))))
(= (type ($generated@@456 $generated@@460)) ($generated@@76 $generated@@462 $generated@@461))))
 :pattern ( ($generated@@456 $generated@@460))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@464) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@454 $generated@@463) $generated@@464))  (and ($generated@@0 ($generated@@81 ($generated@@380 $generated@@463) ($generated@@246 ($generated@@455 $generated@@239 $generated@@464)))) (= ($generated@@81 ($generated@@456 $generated@@463) ($generated@@246 ($generated@@455 $generated@@239 $generated@@464))) ($generated@@247 ($generated@@455 $generated@@239 $generated@@464))))))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@463) $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@402 (type $generated@@468))))
(let (($generated@@470 ($generated@@401 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468)) ($generated@@76 $generated@@470 $generated@@469))))
 :pattern ( ($generated@@466 $generated@@468))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@472) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@465 $generated@@471) $generated@@472))  (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@471) ($generated@@246 ($generated@@455 $generated@@239 $generated@@472)))) (= ($generated@@81 ($generated@@466 $generated@@471) ($generated@@246 ($generated@@455 $generated@@239 $generated@@472))) ($generated@@247 ($generated@@455 $generated@@239 $generated@@472))))))
 :pattern ( ($generated@@81 ($generated@@465 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
(let (($generated@@476 ($generated@@383 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@382 $generated@@476 $generated@@475)) (= ($generated@@0 ($generated@@81 ($generated@@423 $generated@@473) $generated@@474)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@476) (and ($generated@@0 ($generated@@81 ($generated@@380 $generated@@473) $generated@@477)) (= $generated@@474 ($generated@@81 ($generated@@456 $generated@@473) $generated@@477))))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@473) $generated@@477))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@473) $generated@@477))
))))))
 :pattern ( ($generated@@81 ($generated@@423 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
(let (($generated@@481 ($generated@@401 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@400 $generated@@481 $generated@@480)) (= ($generated@@0 ($generated@@81 ($generated@@434 $generated@@478) $generated@@479)) (exists (($generated@@482 T@U) ) (!  (and (= (type $generated@@482) $generated@@481) (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@478) $generated@@482)) (= $generated@@479 ($generated@@81 ($generated@@466 $generated@@478) $generated@@482))))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@478) $generated@@482))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@478) $generated@@482))
))))))
 :pattern ( ($generated@@81 ($generated@@434 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@486) $generated@@490))) (and ($generated@@341 ($generated@@81 ($generated@@456 $generated@@486) $generated@@490) $generated@@488 $generated@@489) ($generated@@341 $generated@@490 $generated@@487 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@486) $generated@@490))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@486) $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@494) $generated@@498))) (and ($generated@@341 ($generated@@81 ($generated@@466 $generated@@494) $generated@@498) $generated@@496 $generated@@497) ($generated@@341 $generated@@498 $generated@@495 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@494) $generated@@498))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@494) $generated@@498))
))))
 :pattern ( ($generated@@74 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@499) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@500) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@501) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@499 $generated@@501))) (and ($generated@@220 $generated@@499 $generated@@500) ($generated@@220 $generated@@500 $generated@@501))) ($generated@@220 $generated@@499 $generated@@501))
 :pattern ( ($generated@@220 $generated@@499 $generated@@500) ($generated@@220 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@T) ) (! (= (type ($generated@@502 $generated@@503)) ($generated@@76 $generated@@503 $generated@@4))
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@402 (type $generated@@504))))
(let (($generated@@506 ($generated@@401 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@400 $generated@@506 $generated@@505)) (= (= $generated@@504 ($generated@@399 $generated@@506 $generated@@505)) (= ($generated@@398 $generated@@504) ($generated@@502 $generated@@506))))))
 :pattern ( ($generated@@398 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@402 (type $generated@@507))))
(let (($generated@@509 ($generated@@401 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@400 $generated@@509 $generated@@508)) (= (= $generated@@507 ($generated@@399 $generated@@509 $generated@@508)) (= ($generated@@434 $generated@@507) ($generated@@502 $generated@@508))))))
 :pattern ( ($generated@@434 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@402 (type $generated@@510))))
(let (($generated@@512 ($generated@@401 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@400 $generated@@512 $generated@@511)) (= (= $generated@@510 ($generated@@399 $generated@@512 $generated@@511)) (= ($generated@@465 $generated@@510) ($generated@@502 $generated@@248))))))
 :pattern ( ($generated@@465 $generated@@510))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@384 (type $generated@@513))))
(let (($generated@@515 ($generated@@383 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@382 $generated@@515 $generated@@514)) (or (= $generated@@513 ($generated@@381 $generated@@515 $generated@@514)) (exists (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (and (and (= (type $generated@@516) $generated@@248) (= (type $generated@@517) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@454 $generated@@513) ($generated@@361 ($generated@@314 $generated@@516 $generated@@517)))))
 :no-pattern (type $generated@@516)
 :no-pattern (type $generated@@517)
 :no-pattern ($generated $generated@@516)
 :no-pattern ($generated@@0 $generated@@516)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
))))))
 :pattern ( ($generated@@454 $generated@@513))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@402 (type $generated@@518))))
(let (($generated@@520 ($generated@@401 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@400 $generated@@520 $generated@@519)) (or (= $generated@@518 ($generated@@399 $generated@@520 $generated@@519)) (exists (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (and (and (= (type $generated@@521) $generated@@248) (= (type $generated@@522) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@465 $generated@@518) ($generated@@361 ($generated@@314 $generated@@521 $generated@@522)))))
 :no-pattern (type $generated@@521)
 :no-pattern (type $generated@@522)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
))))))
 :pattern ( ($generated@@465 $generated@@518))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@248) ($generated@@315 $generated@@523 $generated@@46)) (and (= ($generated@@361 ($generated@@455 $generated@@2 $generated@@523)) $generated@@523) ($generated@@224 ($generated@@455 $generated@@2 $generated@@523) $generated@@46)))
 :pattern ( ($generated@@315 $generated@@523 $generated@@46))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@248) ($generated@@315 $generated@@524 $generated@@47)) (and (= ($generated@@361 ($generated@@455 $generated@@3 $generated@@524)) $generated@@524) ($generated@@224 ($generated@@455 $generated@@3 $generated@@524) $generated@@47)))
 :pattern ( ($generated@@315 $generated@@524 $generated@@47))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@248) ($generated@@315 $generated@@525 $generated@@44)) (and (= ($generated@@361 ($generated@@455 $generated@@4 $generated@@525)) $generated@@525) ($generated@@224 ($generated@@455 $generated@@4 $generated@@525) $generated@@44)))
 :pattern ( ($generated@@315 $generated@@525 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@526) 31))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@248) ($generated@@315 $generated@@527 $generated@@45)) (and (= ($generated@@361 ($generated@@455 $generated@@526 $generated@@527)) $generated@@527) ($generated@@224 ($generated@@455 $generated@@526 $generated@@527) $generated@@45)))
 :pattern ( ($generated@@315 $generated@@527 $generated@@45))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@315 ($generated@@361 $generated@@528) $generated@@529) ($generated@@224 $generated@@528 $generated@@529)))
 :pattern ( ($generated@@315 ($generated@@361 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@79 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@76 $generated@@531 $generated@@2)) (<= 0 ($generated@@374 $generated@@530))))
 :pattern ( ($generated@@374 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@356 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@355 $generated@@533)) (<= 0 ($generated@@354 $generated@@532))))
 :pattern ( ($generated@@354 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= ($generated@@534 ($generated@@483 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@483 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@538 ($generated@@483 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@483 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= ($generated@@72 ($generated@@483 $generated@@542 $generated@@543)) $generated@@58))
 :pattern ( ($generated@@483 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@491 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@491 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@491 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@491 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@64) (= (type $generated@@553) $generated@@64)) (= ($generated@@72 ($generated@@491 $generated@@552 $generated@@553)) $generated@@59))
 :pattern ( ($generated@@491 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@248) (= (type $generated@@555) $generated@@248)) (= ($generated@@347 ($generated@@314 $generated@@554 $generated@@555)) $generated@@61))
 :pattern ( ($generated@@314 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@64) (= (type $generated@@559) $generated@@64)) (= ($generated@@556 ($generated@@238 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@238 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@64)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@64) (= (type $generated@@563) $generated@@64)) (= ($generated@@560 ($generated@@238 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@238 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@248) (= (type $generated@@565) $generated@@248)) (= ($generated@@246 ($generated@@314 $generated@@564 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@314 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@248) (= (type $generated@@567) $generated@@248)) (= ($generated@@247 ($generated@@314 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@314 $generated@@566 $generated@@567))
)))
(assert  (and (forall (($generated@@570 T@U) ) (! (= (type ($generated@@568 $generated@@570)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@570))
)) (forall (($generated@@571 T@U) ($generated@@572 Int) ) (! (let (($generated@@573 ($generated@@356 (type $generated@@571))))
(= (type ($generated@@569 $generated@@571 $generated@@572)) $generated@@573))
 :pattern ( ($generated@@569 $generated@@571 $generated@@572))
))))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@355 $generated@@248)) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@574 ($generated@@568 $generated@@575) $generated@@576) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@354 $generated@@574))) ($generated@@341 ($generated@@569 $generated@@574 $generated@@577) $generated@@575 $generated@@576))
 :pattern ( ($generated@@569 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@74 $generated@@574 ($generated@@568 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@578 ($generated@@75 $generated@@579)) $generated@@579)
 :pattern ( ($generated@@75 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@324 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@324 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@324 $generated@@583)) $generated@@54))
 :pattern ( ($generated@@324 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@64)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@64) (= ($generated@@584 ($generated@@329 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@329 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@64) (= ($generated@@72 ($generated@@329 $generated@@587)) $generated@@55))
 :pattern ( ($generated@@329 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@64)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@64) (= ($generated@@588 ($generated@@253 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@253 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@591)) $generated@@56))
 :pattern ( ($generated@@253 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@64)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@64) (= ($generated@@592 ($generated@@568 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@568 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@64) (= ($generated@@72 ($generated@@568 $generated@@595)) $generated@@57))
 :pattern ( ($generated@@568 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
(= ($generated@@455 $generated@@597 ($generated@@361 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@361 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) (= ($generated@@224 $generated@@598 ($generated@@483 $generated@@599 $generated@@600)) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@598) $generated@@601))) (and ($generated@@315 ($generated@@81 ($generated@@456 $generated@@598) $generated@@601) $generated@@600) ($generated@@315 $generated@@601 $generated@@599)))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@598) $generated@@601))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@598) $generated@@601))
))))
 :pattern ( ($generated@@224 $generated@@598 ($generated@@483 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) (= ($generated@@224 $generated@@602 ($generated@@491 $generated@@603 $generated@@604)) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@602) $generated@@605))) (and ($generated@@315 ($generated@@81 ($generated@@466 $generated@@602) $generated@@605) $generated@@604) ($generated@@315 $generated@@605 $generated@@603)))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@602) $generated@@605))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@602) $generated@@605))
))))
 :pattern ( ($generated@@224 $generated@@602 ($generated@@491 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@248) (= (type $generated@@609) $generated@@248)) (< ($generated@@606 $generated@@608) ($generated@@607 ($generated@@314 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@314 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@248) (= (type $generated@@611) $generated@@248)) (< ($generated@@606 $generated@@611) ($generated@@607 ($generated@@314 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@314 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@248) (= (type $generated@@613) $generated@@64)) (= (type $generated@@614) $generated@@64)) ($generated@@315 $generated@@612 ($generated@@483 $generated@@613 $generated@@614))) (and (= ($generated@@361 ($generated@@455 ($generated@@382 $generated@@248 $generated@@248) $generated@@612)) $generated@@612) ($generated@@224 ($generated@@455 ($generated@@382 $generated@@248 $generated@@248) $generated@@612) ($generated@@483 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@315 $generated@@612 ($generated@@483 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@248) (= (type $generated@@616) $generated@@64)) (= (type $generated@@617) $generated@@64)) ($generated@@315 $generated@@615 ($generated@@491 $generated@@616 $generated@@617))) (and (= ($generated@@361 ($generated@@455 ($generated@@400 $generated@@248 $generated@@248) $generated@@615)) $generated@@615) ($generated@@224 ($generated@@455 ($generated@@400 $generated@@248 $generated@@248) $generated@@615) ($generated@@491 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@315 $generated@@615 ($generated@@491 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@64) (= (type $generated@@619) $generated@@64)) (= (type $generated@@620) $generated@@248)) ($generated@@315 $generated@@620 ($generated@@238 $generated@@618 $generated@@619))) (and (= ($generated@@361 ($generated@@455 $generated@@239 $generated@@620)) $generated@@620) ($generated@@224 ($generated@@455 $generated@@239 $generated@@620) ($generated@@238 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@315 $generated@@620 ($generated@@238 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
 (not ($generated@@0 ($generated@@81 ($generated@@502 $generated@@622) $generated@@621))))
 :pattern ( (let (($generated@@622 (type $generated@@621)))
($generated@@81 ($generated@@502 $generated@@622) $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@69)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) $generated@@64)) (and (= ($generated@@72 ($generated@@238 $generated@@625 $generated@@626)) $generated@@62) (= ($generated@@623 ($generated@@238 $generated@@625 $generated@@626)) $generated@@63)))
 :pattern ( ($generated@@238 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@239) (= ($generated@@606 ($generated@@361 $generated@@627)) ($generated@@607 $generated@@627)))
 :pattern ( ($generated@@606 ($generated@@361 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@248) ($generated@@315 $generated@@628 ($generated@@75 0))) (and (= ($generated@@361 ($generated@@455 $generated@@2 $generated@@628)) $generated@@628) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@628) ($generated@@75 0))))
 :pattern ( ($generated@@315 $generated@@628 ($generated@@75 0)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@248) ($generated@@315 $generated@@629 ($generated@@75 1))) (and (= ($generated@@361 ($generated@@455 $generated@@132 $generated@@629)) $generated@@629) ($generated@@224 ($generated@@455 $generated@@132 $generated@@629) ($generated@@75 1))))
 :pattern ( ($generated@@315 $generated@@629 ($generated@@75 1)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@248) (= (type $generated@@631) $generated@@64)) ($generated@@315 $generated@@630 ($generated@@324 $generated@@631))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@630)) $generated@@630) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@630) ($generated@@324 $generated@@631))))
 :pattern ( ($generated@@315 $generated@@630 ($generated@@324 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@248) (= (type $generated@@633) $generated@@64)) ($generated@@315 $generated@@632 ($generated@@329 $generated@@633))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@632)) $generated@@632) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@632) ($generated@@329 $generated@@633))))
 :pattern ( ($generated@@315 $generated@@632 ($generated@@329 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@248) (= (type $generated@@635) $generated@@64)) ($generated@@315 $generated@@634 ($generated@@253 $generated@@635))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@2) $generated@@634)) $generated@@634) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@2) $generated@@634) ($generated@@253 $generated@@635))))
 :pattern ( ($generated@@315 $generated@@634 ($generated@@253 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@248) (= (type $generated@@637) $generated@@64)) ($generated@@315 $generated@@636 ($generated@@568 $generated@@637))) (and (= ($generated@@361 ($generated@@455 ($generated@@355 $generated@@248) $generated@@636)) $generated@@636) ($generated@@224 ($generated@@455 ($generated@@355 $generated@@248) $generated@@636) ($generated@@568 $generated@@637))))
 :pattern ( ($generated@@315 $generated@@636 ($generated@@568 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@248) ($generated@@315 $generated@@638 ($generated@@75 2))) (and (= ($generated@@361 ($generated@@455 $generated@@140 $generated@@638)) $generated@@638) ($generated@@224 ($generated@@455 $generated@@140 $generated@@638) ($generated@@75 2))))
 :pattern ( ($generated@@315 $generated@@638 ($generated@@75 2)))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@248) ($generated@@315 $generated@@639 ($generated@@75 3))) (and (= ($generated@@361 ($generated@@455 $generated@@148 $generated@@639)) $generated@@639) ($generated@@224 ($generated@@455 $generated@@148 $generated@@639) ($generated@@75 3))))
 :pattern ( ($generated@@315 $generated@@639 ($generated@@75 3)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@248) ($generated@@315 $generated@@640 ($generated@@75 4))) (and (= ($generated@@361 ($generated@@455 $generated@@156 $generated@@640)) $generated@@640) ($generated@@224 ($generated@@455 $generated@@156 $generated@@640) ($generated@@75 4))))
 :pattern ( ($generated@@315 $generated@@640 ($generated@@75 4)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@248) ($generated@@315 $generated@@641 ($generated@@75 7))) (and (= ($generated@@361 ($generated@@455 $generated@@164 $generated@@641)) $generated@@641) ($generated@@224 ($generated@@455 $generated@@164 $generated@@641) ($generated@@75 7))))
 :pattern ( ($generated@@315 $generated@@641 ($generated@@75 7)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@248) ($generated@@315 $generated@@642 ($generated@@75 8))) (and (= ($generated@@361 ($generated@@455 $generated@@172 $generated@@642)) $generated@@642) ($generated@@224 ($generated@@455 $generated@@172 $generated@@642) ($generated@@75 8))))
 :pattern ( ($generated@@315 $generated@@642 ($generated@@75 8)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@248) ($generated@@315 $generated@@643 ($generated@@75 15))) (and (= ($generated@@361 ($generated@@455 $generated@@180 $generated@@643)) $generated@@643) ($generated@@224 ($generated@@455 $generated@@180 $generated@@643) ($generated@@75 15))))
 :pattern ( ($generated@@315 $generated@@643 ($generated@@75 15)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@248) ($generated@@315 $generated@@644 ($generated@@75 16))) (and (= ($generated@@361 ($generated@@455 $generated@@188 $generated@@644)) $generated@@644) ($generated@@224 ($generated@@455 $generated@@188 $generated@@644) ($generated@@75 16))))
 :pattern ( ($generated@@315 $generated@@644 ($generated@@75 16)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@248) ($generated@@315 $generated@@645 ($generated@@75 32))) (and (= ($generated@@361 ($generated@@455 $generated@@196 $generated@@645)) $generated@@645) ($generated@@224 ($generated@@455 $generated@@196 $generated@@645) ($generated@@75 32))))
 :pattern ( ($generated@@315 $generated@@645 ($generated@@75 32)))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@248) ($generated@@315 $generated@@646 ($generated@@75 53))) (and (= ($generated@@361 ($generated@@455 $generated@@204 $generated@@646)) $generated@@646) ($generated@@224 ($generated@@455 $generated@@204 $generated@@646) ($generated@@75 53))))
 :pattern ( ($generated@@315 $generated@@646 ($generated@@75 53)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@248) ($generated@@315 $generated@@647 ($generated@@75 100))) (and (= ($generated@@361 ($generated@@455 $generated@@212 $generated@@647)) $generated@@647) ($generated@@224 ($generated@@455 $generated@@212 $generated@@647) ($generated@@75 100))))
 :pattern ( ($generated@@315 $generated@@647 ($generated@@75 100)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@649) $generated@@64)) (= (type $generated@@650) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@648 ($generated@@253 $generated@@649) $generated@@650) (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@648 $generated@@651)))) ($generated@@341 $generated@@651 $generated@@649 $generated@@650))
 :pattern ( ($generated@@81 $generated@@648 $generated@@651))
))))
 :pattern ( ($generated@@74 $generated@@648 ($generated@@253 $generated@@649) $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@239) (= (type $generated@@653) $generated@@64)) (= (type $generated@@654) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@340 $generated@@654) (and ($generated@@237 $generated@@652) (exists (($generated@@655 T@U) ) (!  (and (= (type $generated@@655) $generated@@64) ($generated@@74 $generated@@652 ($generated@@238 $generated@@653 $generated@@655) $generated@@654))
 :pattern ( ($generated@@74 $generated@@652 ($generated@@238 $generated@@653 $generated@@655) $generated@@654))
))))) ($generated@@341 ($generated@@246 $generated@@652) $generated@@653 $generated@@654))
 :pattern ( ($generated@@341 ($generated@@246 $generated@@652) $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@239) (= (type $generated@@657) $generated@@64)) (= (type $generated@@658) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@340 $generated@@658) (and ($generated@@237 $generated@@656) (exists (($generated@@659 T@U) ) (!  (and (= (type $generated@@659) $generated@@64) ($generated@@74 $generated@@656 ($generated@@238 $generated@@659 $generated@@657) $generated@@658))
 :pattern ( ($generated@@74 $generated@@656 ($generated@@238 $generated@@659 $generated@@657) $generated@@658))
))))) ($generated@@341 ($generated@@247 $generated@@656) $generated@@657 $generated@@658))
 :pattern ( ($generated@@341 ($generated@@247 $generated@@656) $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@248) (= (type $generated@@661) $generated@@248)) (= ($generated@@314 ($generated@@336 $generated@@660) ($generated@@336 $generated@@661)) ($generated@@336 ($generated@@314 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@314 ($generated@@336 $generated@@660) ($generated@@336 $generated@@661)))
)))
(assert (forall (($generated@@662 Int) ) (! (= ($generated@@361 ($generated@@8 ($generated@@334 $generated@@662))) ($generated@@336 ($generated@@361 ($generated@@8 $generated@@662))))
 :pattern ( ($generated@@361 ($generated@@8 ($generated@@334 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@361 ($generated@@336 $generated@@663)) ($generated@@336 ($generated@@361 $generated@@663)))
 :pattern ( ($generated@@361 ($generated@@336 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@356 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@355 $generated@@665)) (= ($generated@@354 $generated@@664) 0)) (= $generated@@664 ($generated@@353 $generated@@665))))
 :pattern ( ($generated@@354 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@76 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@374 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@374 $generated@@666) ($generated ($generated@@81 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@374 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@671) $generated@@2)) ($generated@@74 $generated@@671 $generated@@46 $generated@@670))
 :pattern ( ($generated@@74 $generated@@671 $generated@@46 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@673) $generated@@3)) ($generated@@74 $generated@@673 $generated@@47 $generated@@672))
 :pattern ( ($generated@@74 $generated@@673 $generated@@47 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@675) $generated@@4)) ($generated@@74 $generated@@675 $generated@@44 $generated@@674))
 :pattern ( ($generated@@74 $generated@@675 $generated@@44 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@677) $generated@@526)) ($generated@@74 $generated@@677 $generated@@45 $generated@@676))
 :pattern ( ($generated@@74 $generated@@677 $generated@@45 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@679) $generated@@248)) ($generated@@74 $generated@@679 $generated@@48 $generated@@678))
 :pattern ( ($generated@@74 $generated@@679 $generated@@48 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@355 $generated@@248)) (= (type $generated@@681) $generated@@64)) (= ($generated@@224 $generated@@680 ($generated@@568 $generated@@681)) (forall (($generated@@682 Int) ) (!  (=> (and (<= 0 $generated@@682) (< $generated@@682 ($generated@@354 $generated@@680))) ($generated@@315 ($generated@@569 $generated@@680 $generated@@682) $generated@@681))
 :pattern ( ($generated@@569 $generated@@680 $generated@@682))
))))
 :pattern ( ($generated@@224 $generated@@680 ($generated@@568 $generated@@681)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 Int) ) (!  (=> (= (type $generated@@684) ($generated@@355 $generated@@248)) (=> (and (<= 0 $generated@@685) (< $generated@@685 ($generated@@354 $generated@@684))) (< ($generated@@607 ($generated@@455 $generated@@239 ($generated@@569 $generated@@684 $generated@@685))) ($generated@@683 $generated@@684))))
 :pattern ( ($generated@@607 ($generated@@455 $generated@@239 ($generated@@569 $generated@@684 $generated@@685))))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@687) $generated@@64)) (= (type $generated@@688) $generated@@64)) ($generated@@224 $generated@@686 ($generated@@483 $generated@@687 $generated@@688))) (and (and ($generated@@224 ($generated@@380 $generated@@686) ($generated@@324 $generated@@687)) ($generated@@224 ($generated@@423 $generated@@686) ($generated@@324 $generated@@688))) ($generated@@224 ($generated@@454 $generated@@686) ($generated@@324 ($generated@@238 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@224 $generated@@686 ($generated@@483 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@690) $generated@@64)) (= (type $generated@@691) $generated@@64)) ($generated@@224 $generated@@689 ($generated@@491 $generated@@690 $generated@@691))) (and (and ($generated@@224 ($generated@@398 $generated@@689) ($generated@@329 $generated@@690)) ($generated@@224 ($generated@@434 $generated@@689) ($generated@@329 $generated@@691))) ($generated@@224 ($generated@@465 $generated@@689) ($generated@@329 ($generated@@238 $generated@@690 $generated@@691)))))
 :pattern ( ($generated@@224 $generated@@689 ($generated@@491 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@2) ($generated@@224 $generated@@692 $generated@@46))
 :pattern ( ($generated@@224 $generated@@692 $generated@@46))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@3) ($generated@@224 $generated@@693 $generated@@47))
 :pattern ( ($generated@@224 $generated@@693 $generated@@47))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@4) ($generated@@224 $generated@@694 $generated@@44))
 :pattern ( ($generated@@224 $generated@@694 $generated@@44))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@526) ($generated@@224 $generated@@695 $generated@@45))
 :pattern ( ($generated@@224 $generated@@695 $generated@@45))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@248) ($generated@@224 $generated@@696 $generated@@48))
 :pattern ( ($generated@@224 $generated@@696 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 (T@U) Bool)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () Int)
(assert  (and (and (and (= (type $generated@@697) ($generated@@260 $generated@@77 $generated@@4)) (= (type $generated@@698) $generated@@77)) (= (type $generated@@699) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@704) ($generated@@355 $generated@@248))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@706  (=> (= $generated@@697 ($generated@@259 $generated@@698 $generated@@699 $generated@@60 false)) (=> (and (= $generated@@700 ($generated@@334 0)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@334 0) $generated@@700) (< $generated@@700 65536))))))
(let (($generated@@707  (=> (and ($generated@@340 $generated@@699) ($generated@@701 $generated@@699)) (=> (and (and (and (<= ($generated@@334 0) $generated@@702) (< $generated@@702 65536)) (and (<= ($generated@@334 0) $generated@@703) (< $generated@@703 65536))) (and (and ($generated@@224 $generated@@704 ($generated@@568 $generated@@45)) ($generated@@74 $generated@@704 ($generated@@568 $generated@@45) $generated@@699)) (and (= 1 $generated@@705) (= (ControlFlow 0 3) 2)))) $generated@@706))))
$generated@@707)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 () T@T)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 () T@T)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@259 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U T@U) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@330 (Int) Int)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) Bool)
(declare-fun $generated@@337 (T@U T@U T@U) Bool)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@349 (T@T) T@U)
(declare-fun $generated@@350 (T@U) Int)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@362 (T@U) Int)
(declare-fun $generated@@363 (T@T) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@T) T@U)
(declare-fun $generated@@370 (T@T T@T) T@T)
(declare-fun $generated@@371 (T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@T) T@U)
(declare-fun $generated@@388 (T@T T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@T T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@471 (T@U T@U) T@U)
(declare-fun $generated@@479 (T@U T@U) T@U)
(declare-fun $generated@@487 (Int Int) Int)
(declare-fun $generated@@490 (T@T) T@U)
(declare-fun $generated@@514 () T@T)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@557 (T@U Int) T@U)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@611 (Int Int) Int)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@674 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@2) ($generated@@220 $generated@@221 ($generated@@75 0)))
 :pattern ( ($generated@@220 $generated@@221 ($generated@@75 0)))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (= (type $generated@@222) $generated@@132) ($generated@@220 $generated@@222 ($generated@@75 1)))
 :pattern ( ($generated@@220 $generated@@222 ($generated@@75 1)))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@140) ($generated@@220 $generated@@223 ($generated@@75 2)))
 :pattern ( ($generated@@220 $generated@@223 ($generated@@75 2)))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (= (type $generated@@224) $generated@@148) ($generated@@220 $generated@@224 ($generated@@75 3)))
 :pattern ( ($generated@@220 $generated@@224 ($generated@@75 3)))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@156) ($generated@@220 $generated@@225 ($generated@@75 4)))
 :pattern ( ($generated@@220 $generated@@225 ($generated@@75 4)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@164) ($generated@@220 $generated@@226 ($generated@@75 7)))
 :pattern ( ($generated@@220 $generated@@226 ($generated@@75 7)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@172) ($generated@@220 $generated@@227 ($generated@@75 8)))
 :pattern ( ($generated@@220 $generated@@227 ($generated@@75 8)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@180) ($generated@@220 $generated@@228 ($generated@@75 15)))
 :pattern ( ($generated@@220 $generated@@228 ($generated@@75 15)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@188) ($generated@@220 $generated@@229 ($generated@@75 16)))
 :pattern ( ($generated@@220 $generated@@229 ($generated@@75 16)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@196) ($generated@@220 $generated@@230 ($generated@@75 32)))
 :pattern ( ($generated@@220 $generated@@230 ($generated@@75 32)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@204) ($generated@@220 $generated@@231 ($generated@@75 53)))
 :pattern ( ($generated@@220 $generated@@231 ($generated@@75 53)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@212) ($generated@@220 $generated@@232 ($generated@@75 100)))
 :pattern ( ($generated@@220 $generated@@232 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@235) 25) (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@64) (= (type $generated@@239) $generated@@64)) (= (type $generated@@240) $generated@@235)) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239))) ($generated@@233 $generated@@240))
 :pattern ( ($generated@@233 $generated@@240) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239)))
)))
(assert  (and (and (= ($generated@@1 $generated@@244) 26) (forall (($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@242 $generated@@245))
))) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@246)) $generated@@244)
 :pattern ( ($generated@@243 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@235) (= (type $generated@@248) $generated@@235)) true) (= ($generated@@241 $generated@@247 $generated@@248)  (and (= ($generated@@242 $generated@@247) ($generated@@242 $generated@@248)) (= ($generated@@243 $generated@@247) ($generated@@243 $generated@@248)))))
 :pattern ( ($generated@@241 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@249 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@253) $generated@@64)) ($generated@@220 $generated@@252 ($generated@@249 $generated@@253))) ($generated@@250 $generated@@252))
 :pattern ( ($generated@@220 $generated@@252 ($generated@@249 $generated@@253)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@260 $generated@@261)) 27)) (forall (($generated@@262 T@T) ($generated@@263 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@262 $generated@@263)) $generated@@262)
 :pattern ( ($generated@@256 $generated@@262 $generated@@263))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@264 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@256 $generated@@264 $generated@@265))
))) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@258 (type $generated@@266))))
(= (type ($generated@@254 $generated@@266 $generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@254 $generated@@266 $generated@@267 $generated@@268))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(let (($generated@@275 (type $generated@@271)))
(= (type ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273)) ($generated@@256 $generated@@275 $generated@@274))))
 :pattern ( ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273))
))) (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@258 (type $generated@@276))))
 (=> (= (type $generated@@279) $generated@@280) (= ($generated@@254 ($generated@@259 $generated@@276 $generated@@277 $generated@@278 $generated@@279) $generated@@277 $generated@@278) $generated@@279)))
 :weight 0
))) (and (and (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (or (= $generated@@283 $generated@@285) (= ($generated@@254 ($generated@@259 $generated@@282 $generated@@283 $generated@@284 $generated@@281) $generated@@285 $generated@@286) ($generated@@254 $generated@@282 $generated@@285 $generated@@286)))
 :weight 0
)) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (or (= $generated@@290 $generated@@292) (= ($generated@@254 ($generated@@259 $generated@@288 $generated@@289 $generated@@290 $generated@@287) $generated@@291 $generated@@292) ($generated@@254 $generated@@288 $generated@@291 $generated@@292)))
 :weight 0
))) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (or true (= ($generated@@254 ($generated@@259 $generated@@294 $generated@@295 $generated@@296 $generated@@293) $generated@@297 $generated@@298) ($generated@@254 $generated@@294 $generated@@297 $generated@@298)))
 :weight 0
)))) (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Bool) ) (! (= (type ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302)) ($generated@@256 $generated@@77 $generated@@4))
 :pattern ( ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ($generated@@307 T@U) ($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@67 (type $generated@@308))))
 (=> (and (and (and (and (= (type $generated@@303) $generated@@77) (= (type $generated@@304) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@305) ($generated@@66 $generated@@4))) (= (type $generated@@307) $generated@@77)) (= (type $generated@@308) ($generated@@66 $generated@@309))) (= ($generated@@0 ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))  (=> (and (not (= $generated@@307 $generated@@303)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@304 $generated@@307) $generated@@305))) $generated@@306))))
 :pattern ( ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (= (type ($generated@@310 $generated@@312 $generated@@313)) $generated@@235)
 :pattern ( ($generated@@310 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@64) (= (type $generated@@315) $generated@@64)) (= (type $generated@@316) $generated@@244)) (= (type $generated@@317) $generated@@244)) (= ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315))  (and ($generated@@311 $generated@@316 $generated@@314) ($generated@@311 $generated@@317 $generated@@315))))
 :pattern ( ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@235) (= (type $generated@@319) $generated@@235)) (= ($generated@@241 $generated@@318 $generated@@319) (= $generated@@318 $generated@@319)))
 :pattern ( ($generated@@241 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@64)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@323) $generated@@64)) (= ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@244) ($generated@@0 ($generated@@81 $generated@@322 $generated@@324))) ($generated@@311 $generated@@324 $generated@@323))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
))))
 :pattern ( ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@64)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@328) $generated@@64)) (= ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@244) ($generated@@0 ($generated@@81 $generated@@327 $generated@@329))) ($generated@@311 $generated@@329 $generated@@328))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)))
)))
(assert (forall (($generated@@331 Int) ) (! (= ($generated@@330 $generated@@331) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
(= (type ($generated@@332 $generated@@333)) $generated@@334))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (= ($generated@@332 $generated@@335) $generated@@335)
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@338) $generated@@64) (= (type $generated@@339) $generated@@64)) (= (type $generated@@340) $generated@@244)) (= (type $generated@@341) $generated@@244)) (= (type $generated@@342) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@336 $generated@@342)) (= ($generated@@74 ($generated@@310 $generated@@340 $generated@@341) ($generated@@234 $generated@@338 $generated@@339) $generated@@342)  (and ($generated@@337 $generated@@340 $generated@@338 $generated@@342) ($generated@@337 $generated@@341 $generated@@339 $generated@@342))))
 :pattern ( ($generated@@74 ($generated@@310 $generated@@340 $generated@@341) ($generated@@234 $generated@@338 $generated@@339) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@68)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@235) (= ($generated@@233 $generated@@345) (= ($generated@@343 $generated@@345) $generated@@61)))
 :pattern ( ($generated@@233 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@235) ($generated@@233 $generated@@346)) (exists (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (and (and (= (type $generated@@347) $generated@@244) (= (type $generated@@348) $generated@@244)) (= $generated@@346 ($generated@@310 $generated@@347 $generated@@348)))
 :no-pattern (type $generated@@347)
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
)))
 :pattern ( ($generated@@233 $generated@@346))
)))
(assert  (and (and (forall (($generated@@353 T@T) ) (= ($generated@@1 ($generated@@351 $generated@@353)) 28)) (forall (($generated@@354 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@351 $generated@@354))
))) (forall (($generated@@355 T@T) ) (! (= (type ($generated@@349 $generated@@355)) ($generated@@351 $generated@@355))
 :pattern ( ($generated@@349 $generated@@355))
))))
(assert (forall (($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@356)) 0)
 :pattern ( ($generated@@349 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@244)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@64) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@337 ($generated@@357 $generated@@359) $generated@@360 $generated@@361) ($generated@@74 $generated@@359 $generated@@360 $generated@@361)))
 :pattern ( ($generated@@337 ($generated@@357 $generated@@359) $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@364 T@T) ) (! (= (type ($generated@@363 $generated@@364)) ($generated@@76 $generated@@364 $generated@@2))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@79 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@76 $generated@@366 $generated@@2)) (and (= (= ($generated@@362 $generated@@365) 0) (= $generated@@365 ($generated@@363 $generated@@366))) (=> (not (= ($generated@@362 $generated@@365) 0)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367))))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert  (and (and (and (and (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (= ($generated@@1 ($generated@@370 $generated@@373 $generated@@374)) 29)) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@371 ($generated@@370 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@370 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@372 ($generated@@370 $generated@@377 $generated@@378)) $generated@@378)
 :pattern ( ($generated@@370 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@371 (type $generated@@379))))
(= (type ($generated@@368 $generated@@379)) ($generated@@76 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@379))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= (type ($generated@@369 $generated@@381 $generated@@382)) ($generated@@370 $generated@@381 $generated@@382))
 :pattern ( ($generated@@369 $generated@@381 $generated@@382))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@T) ) (! (let (($generated@@385 (type $generated@@383)))
 (not ($generated@@0 ($generated@@81 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383))))
 :pattern ( (let (($generated@@385 (type $generated@@383)))
($generated@@81 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383)))
)))
(assert  (and (and (and (and (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (= ($generated@@1 ($generated@@388 $generated@@391 $generated@@392)) 30)) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@389 ($generated@@388 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@388 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@390 ($generated@@388 $generated@@395 $generated@@396)) $generated@@396)
 :pattern ( ($generated@@388 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@389 (type $generated@@397))))
(= (type ($generated@@386 $generated@@397)) ($generated@@76 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@397))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= (type ($generated@@387 $generated@@399 $generated@@400)) ($generated@@388 $generated@@399 $generated@@400))
 :pattern ( ($generated@@387 $generated@@399 $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@T) ) (! (let (($generated@@403 (type $generated@@401)))
 (not ($generated@@0 ($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401))))
 :pattern ( (let (($generated@@403 (type $generated@@401)))
($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401)))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@79 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@76 $generated@@405 $generated@@2)) (= ($generated@@250 $generated@@404) (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@405) (and (<= 0 ($generated ($generated@@81 $generated@@404 $generated@@406))) (<= ($generated ($generated@@81 $generated@@404 $generated@@406)) ($generated@@362 $generated@@404))))
 :pattern ( ($generated@@81 $generated@@404 $generated@@406))
)))))
 :pattern ( ($generated@@250 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@372 (type $generated@@407))))
(let (($generated@@409 ($generated@@371 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@370 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@369 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@368 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@372 (type $generated@@412))))
(= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@413 $generated@@4)))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@372 (type $generated@@414))))
(let (($generated@@416 ($generated@@371 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@370 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@369 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@415) ($generated@@0 ($generated@@81 ($generated@@411 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@411 $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@390 (type $generated@@418))))
(let (($generated@@420 ($generated@@389 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@388 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@387 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@386 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@390 (type $generated@@423))))
(= (type ($generated@@422 $generated@@423)) ($generated@@76 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@390 (type $generated@@425))))
(let (($generated@@427 ($generated@@389 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@388 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@387 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@426) ($generated@@0 ($generated@@81 ($generated@@422 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@422 $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@430) $generated@@64)) (= ($generated@@220 $generated@@429 ($generated@@249 $generated@@430)) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@429 $generated@@431)))) ($generated@@311 $generated@@431 $generated@@430))
 :pattern ( ($generated@@81 $generated@@429 $generated@@431))
))))
 :pattern ( ($generated@@220 $generated@@429 ($generated@@249 $generated@@430)))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@432 ($generated@@320 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@244) ($generated@@0 ($generated@@81 $generated@@432 $generated@@435))) ($generated@@337 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@81 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@74 $generated@@432 ($generated@@320 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (= (type $generated@@436) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@437) $generated@@64)) (= (type $generated@@438) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@436 ($generated@@325 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@244) ($generated@@0 ($generated@@81 $generated@@436 $generated@@439))) ($generated@@337 $generated@@439 $generated@@437 $generated@@438))
 :pattern ( ($generated@@81 $generated@@436 $generated@@439))
))))
 :pattern ( ($generated@@74 $generated@@436 ($generated@@325 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(= ($generated ($generated@@81 ($generated@@363 $generated@@441) $generated@@440)) 0))
 :pattern ( (let (($generated@@441 (type $generated@@440)))
($generated@@81 ($generated@@363 $generated@@441) $generated@@440)))
)))
(assert  (and (and (forall (($generated@@445 T@U) ) (! (= (type ($generated@@442 $generated@@445)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@442 $generated@@445))
)) (forall (($generated@@446 T@T) ($generated@@447 T@U) ) (! (= (type ($generated@@443 $generated@@446 $generated@@447)) $generated@@446)
 :pattern ( ($generated@@443 $generated@@446 $generated@@447))
))) (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@372 (type $generated@@448))))
(let (($generated@@450 ($generated@@371 (type $generated@@448))))
(= (type ($generated@@444 $generated@@448)) ($generated@@76 $generated@@450 $generated@@449))))
 :pattern ( ($generated@@444 $generated@@448))
))))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@452) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@442 $generated@@451) $generated@@452))  (and ($generated@@0 ($generated@@81 ($generated@@368 $generated@@451) ($generated@@242 ($generated@@443 $generated@@235 $generated@@452)))) (= ($generated@@81 ($generated@@444 $generated@@451) ($generated@@242 ($generated@@443 $generated@@235 $generated@@452))) ($generated@@243 ($generated@@443 $generated@@235 $generated@@452))))))
 :pattern ( ($generated@@81 ($generated@@442 $generated@@451) $generated@@452))
)))
(assert  (and (forall (($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@455)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@453 $generated@@455))
)) (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@390 (type $generated@@456))))
(let (($generated@@458 ($generated@@389 (type $generated@@456))))
(= (type ($generated@@454 $generated@@456)) ($generated@@76 $generated@@458 $generated@@457))))
 :pattern ( ($generated@@454 $generated@@456))
))))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@460) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@453 $generated@@459) $generated@@460))  (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@459) ($generated@@242 ($generated@@443 $generated@@235 $generated@@460)))) (= ($generated@@81 ($generated@@454 $generated@@459) ($generated@@242 ($generated@@443 $generated@@235 $generated@@460))) ($generated@@243 ($generated@@443 $generated@@235 $generated@@460))))))
 :pattern ( ($generated@@81 ($generated@@453 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@462)))
(let (($generated@@464 ($generated@@371 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@370 $generated@@464 $generated@@463)) (= ($generated@@0 ($generated@@81 ($generated@@411 $generated@@461) $generated@@462)) (exists (($generated@@465 T@U) ) (!  (and (= (type $generated@@465) $generated@@464) (and ($generated@@0 ($generated@@81 ($generated@@368 $generated@@461) $generated@@465)) (= $generated@@462 ($generated@@81 ($generated@@444 $generated@@461) $generated@@465))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@461) $generated@@465))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@461) $generated@@465))
))))))
 :pattern ( ($generated@@81 ($generated@@411 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 (type $generated@@467)))
(let (($generated@@469 ($generated@@389 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@388 $generated@@469 $generated@@468)) (= ($generated@@0 ($generated@@81 ($generated@@422 $generated@@466) $generated@@467)) (exists (($generated@@470 T@U) ) (!  (and (= (type $generated@@470) $generated@@469) (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@466) $generated@@470)) (= $generated@@467 ($generated@@81 ($generated@@454 $generated@@466) $generated@@470))))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@466) $generated@@470))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@466) $generated@@470))
))))))
 :pattern ( ($generated@@81 ($generated@@422 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (and (= (type $generated@@474) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@475) $generated@@64)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477) (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@474) $generated@@478))) (and ($generated@@337 ($generated@@81 ($generated@@444 $generated@@474) $generated@@478) $generated@@476 $generated@@477) ($generated@@337 $generated@@478 $generated@@475 $generated@@477)))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@474) $generated@@478))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@474) $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (= (type $generated@@482) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@482) $generated@@486))) (and ($generated@@337 ($generated@@81 ($generated@@454 $generated@@482) $generated@@486) $generated@@484 $generated@@485) ($generated@@337 $generated@@486 $generated@@483 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@482) $generated@@486))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@482) $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ($generated@@489 Int) ) (! (= ($generated@@487 $generated@@488 $generated@@489) (div $generated@@488 $generated@@489))
 :pattern ( ($generated@@487 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@T) ) (! (= (type ($generated@@490 $generated@@491)) ($generated@@76 $generated@@491 $generated@@4))
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@390 (type $generated@@492))))
(let (($generated@@494 ($generated@@389 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@388 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@387 $generated@@494 $generated@@493)) (= ($generated@@386 $generated@@492) ($generated@@490 $generated@@494))))))
 :pattern ( ($generated@@386 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@390 (type $generated@@495))))
(let (($generated@@497 ($generated@@389 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@388 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@387 $generated@@497 $generated@@496)) (= ($generated@@422 $generated@@495) ($generated@@490 $generated@@496))))))
 :pattern ( ($generated@@422 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@390 (type $generated@@498))))
(let (($generated@@500 ($generated@@389 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@388 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@387 $generated@@500 $generated@@499)) (= ($generated@@453 $generated@@498) ($generated@@490 $generated@@244))))))
 :pattern ( ($generated@@453 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@372 (type $generated@@501))))
(let (($generated@@503 ($generated@@371 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@370 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@369 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@244) (= (type $generated@@505) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@442 $generated@@501) ($generated@@357 ($generated@@310 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@442 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@390 (type $generated@@506))))
(let (($generated@@508 ($generated@@389 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@388 $generated@@508 $generated@@507)) (or (= $generated@@506 ($generated@@387 $generated@@508 $generated@@507)) (exists (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (and (and (= (type $generated@@509) $generated@@244) (= (type $generated@@510) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@453 $generated@@506) ($generated@@357 ($generated@@310 $generated@@509 $generated@@510)))))
 :no-pattern (type $generated@@509)
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@453 $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@244) ($generated@@311 $generated@@511 $generated@@46)) (and (= ($generated@@357 ($generated@@443 $generated@@2 $generated@@511)) $generated@@511) ($generated@@220 ($generated@@443 $generated@@2 $generated@@511) $generated@@46)))
 :pattern ( ($generated@@311 $generated@@511 $generated@@46))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@244) ($generated@@311 $generated@@512 $generated@@47)) (and (= ($generated@@357 ($generated@@443 $generated@@3 $generated@@512)) $generated@@512) ($generated@@220 ($generated@@443 $generated@@3 $generated@@512) $generated@@47)))
 :pattern ( ($generated@@311 $generated@@512 $generated@@47))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@244) ($generated@@311 $generated@@513 $generated@@44)) (and (= ($generated@@357 ($generated@@443 $generated@@4 $generated@@513)) $generated@@513) ($generated@@220 ($generated@@443 $generated@@4 $generated@@513) $generated@@44)))
 :pattern ( ($generated@@311 $generated@@513 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@514) 31))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@244) ($generated@@311 $generated@@515 $generated@@45)) (and (= ($generated@@357 ($generated@@443 $generated@@514 $generated@@515)) $generated@@515) ($generated@@220 ($generated@@443 $generated@@514 $generated@@515) $generated@@45)))
 :pattern ( ($generated@@311 $generated@@515 $generated@@45))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@311 ($generated@@357 $generated@@516) $generated@@517) ($generated@@220 $generated@@516 $generated@@517)))
 :pattern ( ($generated@@311 ($generated@@357 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@79 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@76 $generated@@519 $generated@@2)) (<= 0 ($generated@@362 $generated@@518))))
 :pattern ( ($generated@@362 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@352 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@351 $generated@@521)) (<= 0 ($generated@@350 $generated@@520))))
 :pattern ( ($generated@@350 $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= ($generated@@522 ($generated@@471 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@471 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@526 ($generated@@471 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@471 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@64) (= (type $generated@@531) $generated@@64)) (= ($generated@@72 ($generated@@471 $generated@@530 $generated@@531)) $generated@@58))
 :pattern ( ($generated@@471 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@64)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= ($generated@@532 ($generated@@479 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@479 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@64)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (= ($generated@@536 ($generated@@479 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@479 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@72 ($generated@@479 $generated@@540 $generated@@541)) $generated@@59))
 :pattern ( ($generated@@479 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@244) (= (type $generated@@543) $generated@@244)) (= ($generated@@343 ($generated@@310 $generated@@542 $generated@@543)) $generated@@61))
 :pattern ( ($generated@@310 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@234 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@234 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@234 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@234 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@244) (= (type $generated@@553) $generated@@244)) (= ($generated@@242 ($generated@@310 $generated@@552 $generated@@553)) $generated@@552))
 :pattern ( ($generated@@310 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@244) (= (type $generated@@555) $generated@@244)) (= ($generated@@243 ($generated@@310 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@310 $generated@@554 $generated@@555))
)))
(assert  (and (forall (($generated@@558 T@U) ) (! (= (type ($generated@@556 $generated@@558)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@558))
)) (forall (($generated@@559 T@U) ($generated@@560 Int) ) (! (let (($generated@@561 ($generated@@352 (type $generated@@559))))
(= (type ($generated@@557 $generated@@559 $generated@@560)) $generated@@561))
 :pattern ( ($generated@@557 $generated@@559 $generated@@560))
))))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@351 $generated@@244)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@562 ($generated@@556 $generated@@563) $generated@@564) (forall (($generated@@565 Int) ) (!  (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@350 $generated@@562))) ($generated@@337 ($generated@@557 $generated@@562 $generated@@565) $generated@@563 $generated@@564))
 :pattern ( ($generated@@557 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@556 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@566 ($generated@@75 $generated@@567)) $generated@@567)
 :pattern ( ($generated@@75 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@64) (= ($generated@@568 ($generated@@320 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@320 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@64) (= ($generated@@72 ($generated@@320 $generated@@571)) $generated@@54))
 :pattern ( ($generated@@320 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@64)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@64) (= ($generated@@572 ($generated@@325 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@325 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@64) (= ($generated@@72 ($generated@@325 $generated@@575)) $generated@@55))
 :pattern ( ($generated@@325 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@64)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@64) (= ($generated@@576 ($generated@@249 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@249 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@579)) $generated@@56))
 :pattern ( ($generated@@249 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@556 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@556 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@556 $generated@@583)) $generated@@57))
 :pattern ( ($generated@@556 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
(= ($generated@@443 $generated@@585 ($generated@@357 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@357 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) $generated@@64)) (= ($generated@@220 $generated@@586 ($generated@@471 $generated@@587 $generated@@588)) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@586) $generated@@589))) (and ($generated@@311 ($generated@@81 ($generated@@444 $generated@@586) $generated@@589) $generated@@588) ($generated@@311 $generated@@589 $generated@@587)))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@586) $generated@@589))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@586) $generated@@589))
))))
 :pattern ( ($generated@@220 $generated@@586 ($generated@@471 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) (= ($generated@@220 $generated@@590 ($generated@@479 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@590) $generated@@593))) (and ($generated@@311 ($generated@@81 ($generated@@454 $generated@@590) $generated@@593) $generated@@592) ($generated@@311 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@590) $generated@@593))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@220 $generated@@590 ($generated@@479 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@244) (= (type $generated@@597) $generated@@244)) (< ($generated@@594 $generated@@596) ($generated@@595 ($generated@@310 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@310 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@244) (= (type $generated@@599) $generated@@244)) (< ($generated@@594 $generated@@599) ($generated@@595 ($generated@@310 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@310 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@244) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@311 $generated@@600 ($generated@@471 $generated@@601 $generated@@602))) (and (= ($generated@@357 ($generated@@443 ($generated@@370 $generated@@244 $generated@@244) $generated@@600)) $generated@@600) ($generated@@220 ($generated@@443 ($generated@@370 $generated@@244 $generated@@244) $generated@@600) ($generated@@471 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@311 $generated@@600 ($generated@@471 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@244) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) ($generated@@311 $generated@@603 ($generated@@479 $generated@@604 $generated@@605))) (and (= ($generated@@357 ($generated@@443 ($generated@@388 $generated@@244 $generated@@244) $generated@@603)) $generated@@603) ($generated@@220 ($generated@@443 ($generated@@388 $generated@@244 $generated@@244) $generated@@603) ($generated@@479 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@311 $generated@@603 ($generated@@479 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@64) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@244)) ($generated@@311 $generated@@608 ($generated@@234 $generated@@606 $generated@@607))) (and (= ($generated@@357 ($generated@@443 $generated@@235 $generated@@608)) $generated@@608) ($generated@@220 ($generated@@443 $generated@@235 $generated@@608) ($generated@@234 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@311 $generated@@608 ($generated@@234 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (not ($generated@@0 ($generated@@81 ($generated@@490 $generated@@610) $generated@@609))))
 :pattern ( (let (($generated@@610 (type $generated@@609)))
($generated@@81 ($generated@@490 $generated@@610) $generated@@609)))
)))
(assert (forall (($generated@@612 Int) ($generated@@613 Int) ) (! (= ($generated@@611 $generated@@612 $generated@@613) (mod $generated@@612 $generated@@613))
 :pattern ( ($generated@@611 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@69)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@64) (= (type $generated@@617) $generated@@64)) (and (= ($generated@@72 ($generated@@234 $generated@@616 $generated@@617)) $generated@@62) (= ($generated@@614 ($generated@@234 $generated@@616 $generated@@617)) $generated@@63)))
 :pattern ( ($generated@@234 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@235) (= ($generated@@594 ($generated@@357 $generated@@618)) ($generated@@595 $generated@@618)))
 :pattern ( ($generated@@594 ($generated@@357 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@244) ($generated@@311 $generated@@619 ($generated@@75 0))) (and (= ($generated@@357 ($generated@@443 $generated@@2 $generated@@619)) $generated@@619) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@619) ($generated@@75 0))))
 :pattern ( ($generated@@311 $generated@@619 ($generated@@75 0)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@244) ($generated@@311 $generated@@620 ($generated@@75 1))) (and (= ($generated@@357 ($generated@@443 $generated@@132 $generated@@620)) $generated@@620) ($generated@@220 ($generated@@443 $generated@@132 $generated@@620) ($generated@@75 1))))
 :pattern ( ($generated@@311 $generated@@620 ($generated@@75 1)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@244) (= (type $generated@@622) $generated@@64)) ($generated@@311 $generated@@621 ($generated@@320 $generated@@622))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@621)) $generated@@621) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@621) ($generated@@320 $generated@@622))))
 :pattern ( ($generated@@311 $generated@@621 ($generated@@320 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@244) (= (type $generated@@624) $generated@@64)) ($generated@@311 $generated@@623 ($generated@@325 $generated@@624))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@623)) $generated@@623) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@623) ($generated@@325 $generated@@624))))
 :pattern ( ($generated@@311 $generated@@623 ($generated@@325 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@244) (= (type $generated@@626) $generated@@64)) ($generated@@311 $generated@@625 ($generated@@249 $generated@@626))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@2) $generated@@625)) $generated@@625) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@2) $generated@@625) ($generated@@249 $generated@@626))))
 :pattern ( ($generated@@311 $generated@@625 ($generated@@249 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@244) (= (type $generated@@628) $generated@@64)) ($generated@@311 $generated@@627 ($generated@@556 $generated@@628))) (and (= ($generated@@357 ($generated@@443 ($generated@@351 $generated@@244) $generated@@627)) $generated@@627) ($generated@@220 ($generated@@443 ($generated@@351 $generated@@244) $generated@@627) ($generated@@556 $generated@@628))))
 :pattern ( ($generated@@311 $generated@@627 ($generated@@556 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@244) ($generated@@311 $generated@@629 ($generated@@75 2))) (and (= ($generated@@357 ($generated@@443 $generated@@140 $generated@@629)) $generated@@629) ($generated@@220 ($generated@@443 $generated@@140 $generated@@629) ($generated@@75 2))))
 :pattern ( ($generated@@311 $generated@@629 ($generated@@75 2)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@244) ($generated@@311 $generated@@630 ($generated@@75 3))) (and (= ($generated@@357 ($generated@@443 $generated@@148 $generated@@630)) $generated@@630) ($generated@@220 ($generated@@443 $generated@@148 $generated@@630) ($generated@@75 3))))
 :pattern ( ($generated@@311 $generated@@630 ($generated@@75 3)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@244) ($generated@@311 $generated@@631 ($generated@@75 4))) (and (= ($generated@@357 ($generated@@443 $generated@@156 $generated@@631)) $generated@@631) ($generated@@220 ($generated@@443 $generated@@156 $generated@@631) ($generated@@75 4))))
 :pattern ( ($generated@@311 $generated@@631 ($generated@@75 4)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@244) ($generated@@311 $generated@@632 ($generated@@75 7))) (and (= ($generated@@357 ($generated@@443 $generated@@164 $generated@@632)) $generated@@632) ($generated@@220 ($generated@@443 $generated@@164 $generated@@632) ($generated@@75 7))))
 :pattern ( ($generated@@311 $generated@@632 ($generated@@75 7)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@244) ($generated@@311 $generated@@633 ($generated@@75 8))) (and (= ($generated@@357 ($generated@@443 $generated@@172 $generated@@633)) $generated@@633) ($generated@@220 ($generated@@443 $generated@@172 $generated@@633) ($generated@@75 8))))
 :pattern ( ($generated@@311 $generated@@633 ($generated@@75 8)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@244) ($generated@@311 $generated@@634 ($generated@@75 15))) (and (= ($generated@@357 ($generated@@443 $generated@@180 $generated@@634)) $generated@@634) ($generated@@220 ($generated@@443 $generated@@180 $generated@@634) ($generated@@75 15))))
 :pattern ( ($generated@@311 $generated@@634 ($generated@@75 15)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@244) ($generated@@311 $generated@@635 ($generated@@75 16))) (and (= ($generated@@357 ($generated@@443 $generated@@188 $generated@@635)) $generated@@635) ($generated@@220 ($generated@@443 $generated@@188 $generated@@635) ($generated@@75 16))))
 :pattern ( ($generated@@311 $generated@@635 ($generated@@75 16)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@244) ($generated@@311 $generated@@636 ($generated@@75 32))) (and (= ($generated@@357 ($generated@@443 $generated@@196 $generated@@636)) $generated@@636) ($generated@@220 ($generated@@443 $generated@@196 $generated@@636) ($generated@@75 32))))
 :pattern ( ($generated@@311 $generated@@636 ($generated@@75 32)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@244) ($generated@@311 $generated@@637 ($generated@@75 53))) (and (= ($generated@@357 ($generated@@443 $generated@@204 $generated@@637)) $generated@@637) ($generated@@220 ($generated@@443 $generated@@204 $generated@@637) ($generated@@75 53))))
 :pattern ( ($generated@@311 $generated@@637 ($generated@@75 53)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@244) ($generated@@311 $generated@@638 ($generated@@75 100))) (and (= ($generated@@357 ($generated@@443 $generated@@212 $generated@@638)) $generated@@638) ($generated@@220 ($generated@@443 $generated@@212 $generated@@638) ($generated@@75 100))))
 :pattern ( ($generated@@311 $generated@@638 ($generated@@75 100)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@639) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@640) $generated@@64)) (= (type $generated@@641) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@639 ($generated@@249 $generated@@640) $generated@@641) (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@639 $generated@@642)))) ($generated@@337 $generated@@642 $generated@@640 $generated@@641))
 :pattern ( ($generated@@81 $generated@@639 $generated@@642))
))))
 :pattern ( ($generated@@74 $generated@@639 ($generated@@249 $generated@@640) $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@235) (= (type $generated@@644) $generated@@64)) (= (type $generated@@645) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@336 $generated@@645) (and ($generated@@233 $generated@@643) (exists (($generated@@646 T@U) ) (!  (and (= (type $generated@@646) $generated@@64) ($generated@@74 $generated@@643 ($generated@@234 $generated@@644 $generated@@646) $generated@@645))
 :pattern ( ($generated@@74 $generated@@643 ($generated@@234 $generated@@644 $generated@@646) $generated@@645))
))))) ($generated@@337 ($generated@@242 $generated@@643) $generated@@644 $generated@@645))
 :pattern ( ($generated@@337 ($generated@@242 $generated@@643) $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@235) (= (type $generated@@648) $generated@@64)) (= (type $generated@@649) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@336 $generated@@649) (and ($generated@@233 $generated@@647) (exists (($generated@@650 T@U) ) (!  (and (= (type $generated@@650) $generated@@64) ($generated@@74 $generated@@647 ($generated@@234 $generated@@650 $generated@@648) $generated@@649))
 :pattern ( ($generated@@74 $generated@@647 ($generated@@234 $generated@@650 $generated@@648) $generated@@649))
))))) ($generated@@337 ($generated@@243 $generated@@647) $generated@@648 $generated@@649))
 :pattern ( ($generated@@337 ($generated@@243 $generated@@647) $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@244) (= (type $generated@@652) $generated@@244)) (= ($generated@@310 ($generated@@332 $generated@@651) ($generated@@332 $generated@@652)) ($generated@@332 ($generated@@310 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@310 ($generated@@332 $generated@@651) ($generated@@332 $generated@@652)))
)))
(assert (forall (($generated@@653 Int) ) (! (= ($generated@@357 ($generated@@8 ($generated@@330 $generated@@653))) ($generated@@332 ($generated@@357 ($generated@@8 $generated@@653))))
 :pattern ( ($generated@@357 ($generated@@8 ($generated@@330 $generated@@653))))
)))
(assert (forall (($generated@@654 T@U) ) (! (= ($generated@@357 ($generated@@332 $generated@@654)) ($generated@@332 ($generated@@357 $generated@@654)))
 :pattern ( ($generated@@357 ($generated@@332 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@352 (type $generated@@655))))
 (=> (and (= (type $generated@@655) ($generated@@351 $generated@@656)) (= ($generated@@350 $generated@@655) 0)) (= $generated@@655 ($generated@@349 $generated@@656))))
 :pattern ( ($generated@@350 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@658)))
 (=> (and (and (= (type $generated@@657) ($generated@@76 $generated@@660 $generated@@2)) (= (type $generated@@659) $generated@@2)) (<= 0 ($generated $generated@@659))) (= ($generated@@362 ($generated@@82 $generated@@657 $generated@@658 $generated@@659)) (+ (- ($generated@@362 $generated@@657) ($generated ($generated@@81 $generated@@657 $generated@@658))) ($generated $generated@@659)))))
 :pattern ( ($generated@@362 ($generated@@82 $generated@@657 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@662) $generated@@2)) ($generated@@74 $generated@@662 $generated@@46 $generated@@661))
 :pattern ( ($generated@@74 $generated@@662 $generated@@46 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@664) $generated@@3)) ($generated@@74 $generated@@664 $generated@@47 $generated@@663))
 :pattern ( ($generated@@74 $generated@@664 $generated@@47 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@666) $generated@@4)) ($generated@@74 $generated@@666 $generated@@44 $generated@@665))
 :pattern ( ($generated@@74 $generated@@666 $generated@@44 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@668) $generated@@514)) ($generated@@74 $generated@@668 $generated@@45 $generated@@667))
 :pattern ( ($generated@@74 $generated@@668 $generated@@45 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@670) $generated@@244)) ($generated@@74 $generated@@670 $generated@@48 $generated@@669))
 :pattern ( ($generated@@74 $generated@@670 $generated@@48 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@351 $generated@@244)) (= (type $generated@@672) $generated@@64)) (= ($generated@@220 $generated@@671 ($generated@@556 $generated@@672)) (forall (($generated@@673 Int) ) (!  (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@350 $generated@@671))) ($generated@@311 ($generated@@557 $generated@@671 $generated@@673) $generated@@672))
 :pattern ( ($generated@@557 $generated@@671 $generated@@673))
))))
 :pattern ( ($generated@@220 $generated@@671 ($generated@@556 $generated@@672)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 Int) ) (!  (=> (= (type $generated@@675) ($generated@@351 $generated@@244)) (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@350 $generated@@675))) (< ($generated@@595 ($generated@@443 $generated@@235 ($generated@@557 $generated@@675 $generated@@676))) ($generated@@674 $generated@@675))))
 :pattern ( ($generated@@595 ($generated@@443 $generated@@235 ($generated@@557 $generated@@675 $generated@@676))))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@678) $generated@@64)) (= (type $generated@@679) $generated@@64)) ($generated@@220 $generated@@677 ($generated@@471 $generated@@678 $generated@@679))) (and (and ($generated@@220 ($generated@@368 $generated@@677) ($generated@@320 $generated@@678)) ($generated@@220 ($generated@@411 $generated@@677) ($generated@@320 $generated@@679))) ($generated@@220 ($generated@@442 $generated@@677) ($generated@@320 ($generated@@234 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@220 $generated@@677 ($generated@@471 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@681) $generated@@64)) (= (type $generated@@682) $generated@@64)) ($generated@@220 $generated@@680 ($generated@@479 $generated@@681 $generated@@682))) (and (and ($generated@@220 ($generated@@386 $generated@@680) ($generated@@325 $generated@@681)) ($generated@@220 ($generated@@422 $generated@@680) ($generated@@325 $generated@@682))) ($generated@@220 ($generated@@453 $generated@@680) ($generated@@325 ($generated@@234 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@220 $generated@@680 ($generated@@479 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@2) ($generated@@220 $generated@@683 $generated@@46))
 :pattern ( ($generated@@220 $generated@@683 $generated@@46))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@3) ($generated@@220 $generated@@684 $generated@@47))
 :pattern ( ($generated@@220 $generated@@684 $generated@@47))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@4) ($generated@@220 $generated@@685 $generated@@44))
 :pattern ( ($generated@@220 $generated@@685 $generated@@44))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@514) ($generated@@220 $generated@@686 $generated@@45))
 :pattern ( ($generated@@220 $generated@@686 $generated@@45))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@244) ($generated@@220 $generated@@687 $generated@@48))
 :pattern ( ($generated@@220 $generated@@687 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 (T@U) Bool)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(assert  (and (and (and (= (type $generated@@688) ($generated@@256 $generated@@77 $generated@@4)) (= (type $generated@@689) $generated@@77)) (= (type $generated@@690) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@696) ($generated@@351 $generated@@244))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@698  (=> (= $generated@@688 ($generated@@255 $generated@@689 $generated@@690 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@691 0))) (=> (= $generated@@692 ($generated@@487 $generated@@693 $generated@@691)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@330 0) $generated@@692) (< $generated@@692 65536))) (=> (and (<= ($generated@@330 0) $generated@@692) (< $generated@@692 65536)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@691 0))) (=> (and (= $generated@@694 ($generated@@611 $generated@@693 $generated@@691)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@330 0) $generated@@694) (< $generated@@694 65536)))))))))))
(let (($generated@@699  (=> (and ($generated@@336 $generated@@690) ($generated@@695 $generated@@690)) (=> (and (and (<= ($generated@@330 0) $generated@@693) (< $generated@@693 65536)) (and (<= ($generated@@330 0) $generated@@691) (< $generated@@691 65536))) (=> (and (and (and ($generated@@220 $generated@@696 ($generated@@556 $generated@@45)) ($generated@@74 $generated@@696 ($generated@@556 $generated@@45) $generated@@690)) (= 1 $generated@@697)) (and (not (= $generated@@691 0)) (= (ControlFlow 0 6) 2))) $generated@@698)))))
$generated@@699)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 () T@T)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 () T@T)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@260 (T@T T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@334 (Int) Int)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@341 (T@U T@U T@U) Bool)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@354 (T@U) Int)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@374 (T@U) Int)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@T T@T) T@U)
(declare-fun $generated@@382 (T@T T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@T) T@U)
(declare-fun $generated@@400 (T@T T@T) T@T)
(declare-fun $generated@@401 (T@T) T@T)
(declare-fun $generated@@402 (T@T) T@T)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@T T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@483 (T@U T@U) T@U)
(declare-fun $generated@@491 (T@U T@U) T@U)
(declare-fun $generated@@502 (T@T) T@U)
(declare-fun $generated@@526 () T@T)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@569 (T@U Int) T@U)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@683 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@220 $generated@@221 $generated@@222)) (forall (($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@221 $generated@@223) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60))
)))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@2) ($generated@@224 $generated@@225 ($generated@@75 0)))
 :pattern ( ($generated@@224 $generated@@225 ($generated@@75 0)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@132) ($generated@@224 $generated@@226 ($generated@@75 1)))
 :pattern ( ($generated@@224 $generated@@226 ($generated@@75 1)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@140) ($generated@@224 $generated@@227 ($generated@@75 2)))
 :pattern ( ($generated@@224 $generated@@227 ($generated@@75 2)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@148) ($generated@@224 $generated@@228 ($generated@@75 3)))
 :pattern ( ($generated@@224 $generated@@228 ($generated@@75 3)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@156) ($generated@@224 $generated@@229 ($generated@@75 4)))
 :pattern ( ($generated@@224 $generated@@229 ($generated@@75 4)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@164) ($generated@@224 $generated@@230 ($generated@@75 7)))
 :pattern ( ($generated@@224 $generated@@230 ($generated@@75 7)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@172) ($generated@@224 $generated@@231 ($generated@@75 8)))
 :pattern ( ($generated@@224 $generated@@231 ($generated@@75 8)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@180) ($generated@@224 $generated@@232 ($generated@@75 15)))
 :pattern ( ($generated@@224 $generated@@232 ($generated@@75 15)))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (= (type $generated@@233) $generated@@188) ($generated@@224 $generated@@233 ($generated@@75 16)))
 :pattern ( ($generated@@224 $generated@@233 ($generated@@75 16)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (= (type $generated@@234) $generated@@196) ($generated@@224 $generated@@234 ($generated@@75 32)))
 :pattern ( ($generated@@224 $generated@@234 ($generated@@75 32)))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@204) ($generated@@224 $generated@@235 ($generated@@75 53)))
 :pattern ( ($generated@@224 $generated@@235 ($generated@@75 53)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@212) ($generated@@224 $generated@@236 ($generated@@75 100)))
 :pattern ( ($generated@@224 $generated@@236 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@239) 25) (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@64) (= (type $generated@@243) $generated@@64)) (= (type $generated@@244) $generated@@239)) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243))) ($generated@@237 $generated@@244))
 :pattern ( ($generated@@237 $generated@@244) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243)))
)))
(assert  (and (and (= ($generated@@1 $generated@@248) 26) (forall (($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@246 $generated@@249))
))) (forall (($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@250)) $generated@@248)
 :pattern ( ($generated@@247 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@251) $generated@@239) (= (type $generated@@252) $generated@@239)) true) (= ($generated@@245 $generated@@251 $generated@@252)  (and (= ($generated@@246 $generated@@251) ($generated@@246 $generated@@252)) (= ($generated@@247 $generated@@251) ($generated@@247 $generated@@252)))))
 :pattern ( ($generated@@245 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@253 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@257) $generated@@64)) ($generated@@224 $generated@@256 ($generated@@253 $generated@@257))) ($generated@@254 $generated@@256))
 :pattern ( ($generated@@224 $generated@@256 ($generated@@253 $generated@@257)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@264 $generated@@265)) 27)) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@260 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@262 ($generated@@260 $generated@@268 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@260 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@262 (type $generated@@270))))
(= (type ($generated@@258 $generated@@270 $generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@258 $generated@@270 $generated@@271 $generated@@272))
))) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(let (($generated@@279 (type $generated@@275)))
(= (type ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277)) ($generated@@260 $generated@@279 $generated@@278))))
 :pattern ( ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277))
))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@262 (type $generated@@280))))
 (=> (= (type $generated@@283) $generated@@284) (= ($generated@@258 ($generated@@263 $generated@@280 $generated@@281 $generated@@282 $generated@@283) $generated@@281 $generated@@282) $generated@@283)))
 :weight 0
))) (and (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (or (= $generated@@287 $generated@@289) (= ($generated@@258 ($generated@@263 $generated@@286 $generated@@287 $generated@@288 $generated@@285) $generated@@289 $generated@@290) ($generated@@258 $generated@@286 $generated@@289 $generated@@290)))
 :weight 0
)) (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (or (= $generated@@294 $generated@@296) (= ($generated@@258 ($generated@@263 $generated@@292 $generated@@293 $generated@@294 $generated@@291) $generated@@295 $generated@@296) ($generated@@258 $generated@@292 $generated@@295 $generated@@296)))
 :weight 0
))) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (or true (= ($generated@@258 ($generated@@263 $generated@@298 $generated@@299 $generated@@300 $generated@@297) $generated@@301 $generated@@302) ($generated@@258 $generated@@298 $generated@@301 $generated@@302)))
 :weight 0
)))) (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ) (! (= (type ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306)) ($generated@@260 $generated@@77 $generated@@4))
 :pattern ( ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 Bool) ($generated@@311 T@U) ($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@67 (type $generated@@312))))
 (=> (and (and (and (and (= (type $generated@@307) $generated@@77) (= (type $generated@@308) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@309) ($generated@@66 $generated@@4))) (= (type $generated@@311) $generated@@77)) (= (type $generated@@312) ($generated@@66 $generated@@313))) (= ($generated@@0 ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))  (=> (and (not (= $generated@@311 $generated@@307)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@308 $generated@@311) $generated@@309))) $generated@@310))))
 :pattern ( ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) $generated@@239)
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (= (type $generated@@318) $generated@@64) (= (type $generated@@319) $generated@@64)) (= (type $generated@@320) $generated@@248)) (= (type $generated@@321) $generated@@248)) (= ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319))  (and ($generated@@315 $generated@@320 $generated@@318) ($generated@@315 $generated@@321 $generated@@319))))
 :pattern ( ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@239) (= (type $generated@@323) $generated@@239)) (= ($generated@@245 $generated@@322 $generated@@323) (= $generated@@322 $generated@@323)))
 :pattern ( ($generated@@245 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@64)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@327) $generated@@64)) (= ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@248) ($generated@@0 ($generated@@81 $generated@@326 $generated@@328))) ($generated@@315 $generated@@328 $generated@@327))
 :pattern ( ($generated@@81 $generated@@326 $generated@@328))
))))
 :pattern ( ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@64)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@248) ($generated@@0 ($generated@@81 $generated@@331 $generated@@333))) ($generated@@315 $generated@@333 $generated@@332))
 :pattern ( ($generated@@81 $generated@@331 $generated@@333))
))))
 :pattern ( ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)))
)))
(assert (forall (($generated@@335 Int) ) (! (= ($generated@@334 $generated@@335) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 (type $generated@@337)))
(= (type ($generated@@336 $generated@@337)) $generated@@338))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= ($generated@@336 $generated@@339) $generated@@339)
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@342) $generated@@64) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) $generated@@248)) (= (type $generated@@345) $generated@@248)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@340 $generated@@346)) (= ($generated@@74 ($generated@@314 $generated@@344 $generated@@345) ($generated@@238 $generated@@342 $generated@@343) $generated@@346)  (and ($generated@@341 $generated@@344 $generated@@342 $generated@@346) ($generated@@341 $generated@@345 $generated@@343 $generated@@346))))
 :pattern ( ($generated@@74 ($generated@@314 $generated@@344 $generated@@345) ($generated@@238 $generated@@342 $generated@@343) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (= (type ($generated@@347 $generated@@348)) $generated@@68)
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@239) (= ($generated@@237 $generated@@349) (= ($generated@@347 $generated@@349) $generated@@61)))
 :pattern ( ($generated@@237 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@239) ($generated@@237 $generated@@350)) (exists (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (and (and (= (type $generated@@351) $generated@@248) (= (type $generated@@352) $generated@@248)) (= $generated@@350 ($generated@@314 $generated@@351 $generated@@352)))
 :no-pattern (type $generated@@351)
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
)))
 :pattern ( ($generated@@237 $generated@@350))
)))
(assert  (and (and (forall (($generated@@357 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@357)) 28)) (forall (($generated@@358 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@355 $generated@@358))
))) (forall (($generated@@359 T@T) ) (! (= (type ($generated@@353 $generated@@359)) ($generated@@355 $generated@@359))
 :pattern ( ($generated@@353 $generated@@359))
))))
(assert (forall (($generated@@360 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@360)) 0)
 :pattern ( ($generated@@353 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@248)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@64) (= (type $generated@@365) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@341 ($generated@@361 $generated@@363) $generated@@364 $generated@@365) ($generated@@74 $generated@@363 $generated@@364 $generated@@365)))
 :pattern ( ($generated@@341 ($generated@@361 $generated@@363) $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@368) $generated@@248)) (= (type $generated@@369) $generated@@64)) ($generated@@220 $generated@@366 $generated@@367)) ($generated@@341 $generated@@368 $generated@@369 $generated@@366)) ($generated@@341 $generated@@368 $generated@@369 $generated@@367))
 :pattern ( ($generated@@220 $generated@@366 $generated@@367) ($generated@@341 $generated@@368 $generated@@369 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@371) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@373) $generated@@64)) ($generated@@220 $generated@@370 $generated@@371)) ($generated@@74 $generated@@372 $generated@@373 $generated@@370)) ($generated@@74 $generated@@372 $generated@@373 $generated@@371))
 :pattern ( ($generated@@220 $generated@@370 $generated@@371) ($generated@@74 $generated@@372 $generated@@373 $generated@@370))
)))
(assert (forall (($generated@@376 T@T) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@76 $generated@@376 $generated@@2))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@79 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@76 $generated@@378 $generated@@2)) (and (= (= ($generated@@374 $generated@@377) 0) (= $generated@@377 ($generated@@375 $generated@@378))) (=> (not (= ($generated@@374 $generated@@377) 0)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (< 0 ($generated ($generated@@81 $generated@@377 $generated@@379))))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert  (and (and (and (and (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (= ($generated@@1 ($generated@@382 $generated@@385 $generated@@386)) 29)) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= ($generated@@383 ($generated@@382 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@382 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= ($generated@@384 ($generated@@382 $generated@@389 $generated@@390)) $generated@@390)
 :pattern ( ($generated@@382 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@383 (type $generated@@391))))
(= (type ($generated@@380 $generated@@391)) ($generated@@76 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@391))
))) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= (type ($generated@@381 $generated@@393 $generated@@394)) ($generated@@382 $generated@@393 $generated@@394))
 :pattern ( ($generated@@381 $generated@@393 $generated@@394))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@T) ) (! (let (($generated@@397 (type $generated@@395)))
 (not ($generated@@0 ($generated@@81 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395))))
 :pattern ( (let (($generated@@397 (type $generated@@395)))
($generated@@81 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395)))
)))
(assert  (and (and (and (and (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (= ($generated@@1 ($generated@@400 $generated@@403 $generated@@404)) 30)) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= ($generated@@401 ($generated@@400 $generated@@405 $generated@@406)) $generated@@405)
 :pattern ( ($generated@@400 $generated@@405 $generated@@406))
))) (forall (($generated@@407 T@T) ($generated@@408 T@T) ) (! (= ($generated@@402 ($generated@@400 $generated@@407 $generated@@408)) $generated@@408)
 :pattern ( ($generated@@400 $generated@@407 $generated@@408))
))) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@401 (type $generated@@409))))
(= (type ($generated@@398 $generated@@409)) ($generated@@76 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@409))
))) (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (! (= (type ($generated@@399 $generated@@411 $generated@@412)) ($generated@@400 $generated@@411 $generated@@412))
 :pattern ( ($generated@@399 $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@T) ) (! (let (($generated@@415 (type $generated@@413)))
 (not ($generated@@0 ($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413))))
 :pattern ( (let (($generated@@415 (type $generated@@413)))
($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413)))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (= ($generated@@254 $generated@@416) (forall (($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@417) (and (<= 0 ($generated ($generated@@81 $generated@@416 $generated@@418))) (<= ($generated ($generated@@81 $generated@@416 $generated@@418)) ($generated@@374 $generated@@416))))
 :pattern ( ($generated@@81 $generated@@416 $generated@@418))
)))))
 :pattern ( ($generated@@254 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@384 (type $generated@@419))))
(let (($generated@@421 ($generated@@383 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@382 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@381 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@380 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@384 (type $generated@@424))))
(= (type ($generated@@423 $generated@@424)) ($generated@@76 $generated@@425 $generated@@4)))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@384 (type $generated@@426))))
(let (($generated@@428 ($generated@@383 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@382 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@381 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@427) ($generated@@0 ($generated@@81 ($generated@@423 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@423 $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@402 (type $generated@@430))))
(let (($generated@@432 ($generated@@401 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@400 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@399 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@430) $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@398 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@402 (type $generated@@435))))
(= (type ($generated@@434 $generated@@435)) ($generated@@76 $generated@@436 $generated@@4)))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@402 (type $generated@@437))))
(let (($generated@@439 ($generated@@401 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@400 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@399 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@438) ($generated@@0 ($generated@@81 ($generated@@434 $generated@@437) $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@434 $generated@@437))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@442) $generated@@64)) (= ($generated@@224 $generated@@441 ($generated@@253 $generated@@442)) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@441 $generated@@443)))) ($generated@@315 $generated@@443 $generated@@442))
 :pattern ( ($generated@@81 $generated@@441 $generated@@443))
))))
 :pattern ( ($generated@@224 $generated@@441 ($generated@@253 $generated@@442)))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (= (type $generated@@444) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@444 ($generated@@324 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@248) ($generated@@0 ($generated@@81 $generated@@444 $generated@@447))) ($generated@@341 $generated@@447 $generated@@445 $generated@@446))
 :pattern ( ($generated@@81 $generated@@444 $generated@@447))
))))
 :pattern ( ($generated@@74 $generated@@444 ($generated@@324 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@448) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@449) $generated@@64)) (= (type $generated@@450) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@448 ($generated@@329 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@248) ($generated@@0 ($generated@@81 $generated@@448 $generated@@451))) ($generated@@341 $generated@@451 $generated@@449 $generated@@450))
 :pattern ( ($generated@@81 $generated@@448 $generated@@451))
))))
 :pattern ( ($generated@@74 $generated@@448 ($generated@@329 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
(= ($generated ($generated@@81 ($generated@@375 $generated@@453) $generated@@452)) 0))
 :pattern ( (let (($generated@@453 (type $generated@@452)))
($generated@@81 ($generated@@375 $generated@@453) $generated@@452)))
)))
(assert  (and (and (forall (($generated@@457 T@U) ) (! (= (type ($generated@@454 $generated@@457)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@454 $generated@@457))
)) (forall (($generated@@458 T@T) ($generated@@459 T@U) ) (! (= (type ($generated@@455 $generated@@458 $generated@@459)) $generated@@458)
 :pattern ( ($generated@@455 $generated@@458 $generated@@459))
))) (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@384 (type $generated@@460))))
(let (($generated@@462 ($generated@@383 (type $generated@@460))))
(= (type ($generated@@456 $generated@@460)) ($generated@@76 $generated@@462 $generated@@461))))
 :pattern ( ($generated@@456 $generated@@460))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@464) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@454 $generated@@463) $generated@@464))  (and ($generated@@0 ($generated@@81 ($generated@@380 $generated@@463) ($generated@@246 ($generated@@455 $generated@@239 $generated@@464)))) (= ($generated@@81 ($generated@@456 $generated@@463) ($generated@@246 ($generated@@455 $generated@@239 $generated@@464))) ($generated@@247 ($generated@@455 $generated@@239 $generated@@464))))))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@463) $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@402 (type $generated@@468))))
(let (($generated@@470 ($generated@@401 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468)) ($generated@@76 $generated@@470 $generated@@469))))
 :pattern ( ($generated@@466 $generated@@468))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@472) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@465 $generated@@471) $generated@@472))  (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@471) ($generated@@246 ($generated@@455 $generated@@239 $generated@@472)))) (= ($generated@@81 ($generated@@466 $generated@@471) ($generated@@246 ($generated@@455 $generated@@239 $generated@@472))) ($generated@@247 ($generated@@455 $generated@@239 $generated@@472))))))
 :pattern ( ($generated@@81 ($generated@@465 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
(let (($generated@@476 ($generated@@383 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@382 $generated@@476 $generated@@475)) (= ($generated@@0 ($generated@@81 ($generated@@423 $generated@@473) $generated@@474)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@476) (and ($generated@@0 ($generated@@81 ($generated@@380 $generated@@473) $generated@@477)) (= $generated@@474 ($generated@@81 ($generated@@456 $generated@@473) $generated@@477))))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@473) $generated@@477))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@473) $generated@@477))
))))))
 :pattern ( ($generated@@81 ($generated@@423 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
(let (($generated@@481 ($generated@@401 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@400 $generated@@481 $generated@@480)) (= ($generated@@0 ($generated@@81 ($generated@@434 $generated@@478) $generated@@479)) (exists (($generated@@482 T@U) ) (!  (and (= (type $generated@@482) $generated@@481) (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@478) $generated@@482)) (= $generated@@479 ($generated@@81 ($generated@@466 $generated@@478) $generated@@482))))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@478) $generated@@482))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@478) $generated@@482))
))))))
 :pattern ( ($generated@@81 ($generated@@434 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@486) $generated@@490))) (and ($generated@@341 ($generated@@81 ($generated@@456 $generated@@486) $generated@@490) $generated@@488 $generated@@489) ($generated@@341 $generated@@490 $generated@@487 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@486) $generated@@490))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@486) $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@494) $generated@@498))) (and ($generated@@341 ($generated@@81 ($generated@@466 $generated@@494) $generated@@498) $generated@@496 $generated@@497) ($generated@@341 $generated@@498 $generated@@495 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@494) $generated@@498))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@494) $generated@@498))
))))
 :pattern ( ($generated@@74 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@499) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@500) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@501) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@499 $generated@@501))) (and ($generated@@220 $generated@@499 $generated@@500) ($generated@@220 $generated@@500 $generated@@501))) ($generated@@220 $generated@@499 $generated@@501))
 :pattern ( ($generated@@220 $generated@@499 $generated@@500) ($generated@@220 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@T) ) (! (= (type ($generated@@502 $generated@@503)) ($generated@@76 $generated@@503 $generated@@4))
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@402 (type $generated@@504))))
(let (($generated@@506 ($generated@@401 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@400 $generated@@506 $generated@@505)) (= (= $generated@@504 ($generated@@399 $generated@@506 $generated@@505)) (= ($generated@@398 $generated@@504) ($generated@@502 $generated@@506))))))
 :pattern ( ($generated@@398 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@402 (type $generated@@507))))
(let (($generated@@509 ($generated@@401 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@400 $generated@@509 $generated@@508)) (= (= $generated@@507 ($generated@@399 $generated@@509 $generated@@508)) (= ($generated@@434 $generated@@507) ($generated@@502 $generated@@508))))))
 :pattern ( ($generated@@434 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@402 (type $generated@@510))))
(let (($generated@@512 ($generated@@401 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@400 $generated@@512 $generated@@511)) (= (= $generated@@510 ($generated@@399 $generated@@512 $generated@@511)) (= ($generated@@465 $generated@@510) ($generated@@502 $generated@@248))))))
 :pattern ( ($generated@@465 $generated@@510))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@384 (type $generated@@513))))
(let (($generated@@515 ($generated@@383 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@382 $generated@@515 $generated@@514)) (or (= $generated@@513 ($generated@@381 $generated@@515 $generated@@514)) (exists (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (and (and (= (type $generated@@516) $generated@@248) (= (type $generated@@517) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@454 $generated@@513) ($generated@@361 ($generated@@314 $generated@@516 $generated@@517)))))
 :no-pattern (type $generated@@516)
 :no-pattern (type $generated@@517)
 :no-pattern ($generated $generated@@516)
 :no-pattern ($generated@@0 $generated@@516)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
))))))
 :pattern ( ($generated@@454 $generated@@513))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@402 (type $generated@@518))))
(let (($generated@@520 ($generated@@401 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@400 $generated@@520 $generated@@519)) (or (= $generated@@518 ($generated@@399 $generated@@520 $generated@@519)) (exists (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (and (and (= (type $generated@@521) $generated@@248) (= (type $generated@@522) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@465 $generated@@518) ($generated@@361 ($generated@@314 $generated@@521 $generated@@522)))))
 :no-pattern (type $generated@@521)
 :no-pattern (type $generated@@522)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
))))))
 :pattern ( ($generated@@465 $generated@@518))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@248) ($generated@@315 $generated@@523 $generated@@46)) (and (= ($generated@@361 ($generated@@455 $generated@@2 $generated@@523)) $generated@@523) ($generated@@224 ($generated@@455 $generated@@2 $generated@@523) $generated@@46)))
 :pattern ( ($generated@@315 $generated@@523 $generated@@46))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@248) ($generated@@315 $generated@@524 $generated@@47)) (and (= ($generated@@361 ($generated@@455 $generated@@3 $generated@@524)) $generated@@524) ($generated@@224 ($generated@@455 $generated@@3 $generated@@524) $generated@@47)))
 :pattern ( ($generated@@315 $generated@@524 $generated@@47))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@248) ($generated@@315 $generated@@525 $generated@@44)) (and (= ($generated@@361 ($generated@@455 $generated@@4 $generated@@525)) $generated@@525) ($generated@@224 ($generated@@455 $generated@@4 $generated@@525) $generated@@44)))
 :pattern ( ($generated@@315 $generated@@525 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@526) 31))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@248) ($generated@@315 $generated@@527 $generated@@45)) (and (= ($generated@@361 ($generated@@455 $generated@@526 $generated@@527)) $generated@@527) ($generated@@224 ($generated@@455 $generated@@526 $generated@@527) $generated@@45)))
 :pattern ( ($generated@@315 $generated@@527 $generated@@45))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@315 ($generated@@361 $generated@@528) $generated@@529) ($generated@@224 $generated@@528 $generated@@529)))
 :pattern ( ($generated@@315 ($generated@@361 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@79 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@76 $generated@@531 $generated@@2)) (<= 0 ($generated@@374 $generated@@530))))
 :pattern ( ($generated@@374 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@356 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@355 $generated@@533)) (<= 0 ($generated@@354 $generated@@532))))
 :pattern ( ($generated@@354 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= ($generated@@534 ($generated@@483 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@483 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@538 ($generated@@483 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@483 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= ($generated@@72 ($generated@@483 $generated@@542 $generated@@543)) $generated@@58))
 :pattern ( ($generated@@483 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@491 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@491 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@491 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@491 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@64) (= (type $generated@@553) $generated@@64)) (= ($generated@@72 ($generated@@491 $generated@@552 $generated@@553)) $generated@@59))
 :pattern ( ($generated@@491 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@248) (= (type $generated@@555) $generated@@248)) (= ($generated@@347 ($generated@@314 $generated@@554 $generated@@555)) $generated@@61))
 :pattern ( ($generated@@314 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@64) (= (type $generated@@559) $generated@@64)) (= ($generated@@556 ($generated@@238 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@238 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@64)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@64) (= (type $generated@@563) $generated@@64)) (= ($generated@@560 ($generated@@238 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@238 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@248) (= (type $generated@@565) $generated@@248)) (= ($generated@@246 ($generated@@314 $generated@@564 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@314 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@248) (= (type $generated@@567) $generated@@248)) (= ($generated@@247 ($generated@@314 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@314 $generated@@566 $generated@@567))
)))
(assert  (and (forall (($generated@@570 T@U) ) (! (= (type ($generated@@568 $generated@@570)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@570))
)) (forall (($generated@@571 T@U) ($generated@@572 Int) ) (! (let (($generated@@573 ($generated@@356 (type $generated@@571))))
(= (type ($generated@@569 $generated@@571 $generated@@572)) $generated@@573))
 :pattern ( ($generated@@569 $generated@@571 $generated@@572))
))))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@355 $generated@@248)) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@574 ($generated@@568 $generated@@575) $generated@@576) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@354 $generated@@574))) ($generated@@341 ($generated@@569 $generated@@574 $generated@@577) $generated@@575 $generated@@576))
 :pattern ( ($generated@@569 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@74 $generated@@574 ($generated@@568 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@578 ($generated@@75 $generated@@579)) $generated@@579)
 :pattern ( ($generated@@75 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@324 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@324 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@324 $generated@@583)) $generated@@54))
 :pattern ( ($generated@@324 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@64)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@64) (= ($generated@@584 ($generated@@329 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@329 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@64) (= ($generated@@72 ($generated@@329 $generated@@587)) $generated@@55))
 :pattern ( ($generated@@329 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@64)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@64) (= ($generated@@588 ($generated@@253 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@253 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@591)) $generated@@56))
 :pattern ( ($generated@@253 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@64)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@64) (= ($generated@@592 ($generated@@568 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@568 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@64) (= ($generated@@72 ($generated@@568 $generated@@595)) $generated@@57))
 :pattern ( ($generated@@568 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
(= ($generated@@455 $generated@@597 ($generated@@361 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@361 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) (= ($generated@@224 $generated@@598 ($generated@@483 $generated@@599 $generated@@600)) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@598) $generated@@601))) (and ($generated@@315 ($generated@@81 ($generated@@456 $generated@@598) $generated@@601) $generated@@600) ($generated@@315 $generated@@601 $generated@@599)))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@598) $generated@@601))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@598) $generated@@601))
))))
 :pattern ( ($generated@@224 $generated@@598 ($generated@@483 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) (= ($generated@@224 $generated@@602 ($generated@@491 $generated@@603 $generated@@604)) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@602) $generated@@605))) (and ($generated@@315 ($generated@@81 ($generated@@466 $generated@@602) $generated@@605) $generated@@604) ($generated@@315 $generated@@605 $generated@@603)))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@602) $generated@@605))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@602) $generated@@605))
))))
 :pattern ( ($generated@@224 $generated@@602 ($generated@@491 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@248) (= (type $generated@@609) $generated@@248)) (< ($generated@@606 $generated@@608) ($generated@@607 ($generated@@314 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@314 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@248) (= (type $generated@@611) $generated@@248)) (< ($generated@@606 $generated@@611) ($generated@@607 ($generated@@314 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@314 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@248) (= (type $generated@@613) $generated@@64)) (= (type $generated@@614) $generated@@64)) ($generated@@315 $generated@@612 ($generated@@483 $generated@@613 $generated@@614))) (and (= ($generated@@361 ($generated@@455 ($generated@@382 $generated@@248 $generated@@248) $generated@@612)) $generated@@612) ($generated@@224 ($generated@@455 ($generated@@382 $generated@@248 $generated@@248) $generated@@612) ($generated@@483 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@315 $generated@@612 ($generated@@483 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@248) (= (type $generated@@616) $generated@@64)) (= (type $generated@@617) $generated@@64)) ($generated@@315 $generated@@615 ($generated@@491 $generated@@616 $generated@@617))) (and (= ($generated@@361 ($generated@@455 ($generated@@400 $generated@@248 $generated@@248) $generated@@615)) $generated@@615) ($generated@@224 ($generated@@455 ($generated@@400 $generated@@248 $generated@@248) $generated@@615) ($generated@@491 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@315 $generated@@615 ($generated@@491 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@64) (= (type $generated@@619) $generated@@64)) (= (type $generated@@620) $generated@@248)) ($generated@@315 $generated@@620 ($generated@@238 $generated@@618 $generated@@619))) (and (= ($generated@@361 ($generated@@455 $generated@@239 $generated@@620)) $generated@@620) ($generated@@224 ($generated@@455 $generated@@239 $generated@@620) ($generated@@238 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@315 $generated@@620 ($generated@@238 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
 (not ($generated@@0 ($generated@@81 ($generated@@502 $generated@@622) $generated@@621))))
 :pattern ( (let (($generated@@622 (type $generated@@621)))
($generated@@81 ($generated@@502 $generated@@622) $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@69)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) $generated@@64)) (and (= ($generated@@72 ($generated@@238 $generated@@625 $generated@@626)) $generated@@62) (= ($generated@@623 ($generated@@238 $generated@@625 $generated@@626)) $generated@@63)))
 :pattern ( ($generated@@238 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@239) (= ($generated@@606 ($generated@@361 $generated@@627)) ($generated@@607 $generated@@627)))
 :pattern ( ($generated@@606 ($generated@@361 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@248) ($generated@@315 $generated@@628 ($generated@@75 0))) (and (= ($generated@@361 ($generated@@455 $generated@@2 $generated@@628)) $generated@@628) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@628) ($generated@@75 0))))
 :pattern ( ($generated@@315 $generated@@628 ($generated@@75 0)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@248) ($generated@@315 $generated@@629 ($generated@@75 1))) (and (= ($generated@@361 ($generated@@455 $generated@@132 $generated@@629)) $generated@@629) ($generated@@224 ($generated@@455 $generated@@132 $generated@@629) ($generated@@75 1))))
 :pattern ( ($generated@@315 $generated@@629 ($generated@@75 1)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@248) (= (type $generated@@631) $generated@@64)) ($generated@@315 $generated@@630 ($generated@@324 $generated@@631))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@630)) $generated@@630) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@630) ($generated@@324 $generated@@631))))
 :pattern ( ($generated@@315 $generated@@630 ($generated@@324 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@248) (= (type $generated@@633) $generated@@64)) ($generated@@315 $generated@@632 ($generated@@329 $generated@@633))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@632)) $generated@@632) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@632) ($generated@@329 $generated@@633))))
 :pattern ( ($generated@@315 $generated@@632 ($generated@@329 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@248) (= (type $generated@@635) $generated@@64)) ($generated@@315 $generated@@634 ($generated@@253 $generated@@635))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@2) $generated@@634)) $generated@@634) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@2) $generated@@634) ($generated@@253 $generated@@635))))
 :pattern ( ($generated@@315 $generated@@634 ($generated@@253 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@248) (= (type $generated@@637) $generated@@64)) ($generated@@315 $generated@@636 ($generated@@568 $generated@@637))) (and (= ($generated@@361 ($generated@@455 ($generated@@355 $generated@@248) $generated@@636)) $generated@@636) ($generated@@224 ($generated@@455 ($generated@@355 $generated@@248) $generated@@636) ($generated@@568 $generated@@637))))
 :pattern ( ($generated@@315 $generated@@636 ($generated@@568 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@248) ($generated@@315 $generated@@638 ($generated@@75 2))) (and (= ($generated@@361 ($generated@@455 $generated@@140 $generated@@638)) $generated@@638) ($generated@@224 ($generated@@455 $generated@@140 $generated@@638) ($generated@@75 2))))
 :pattern ( ($generated@@315 $generated@@638 ($generated@@75 2)))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@248) ($generated@@315 $generated@@639 ($generated@@75 3))) (and (= ($generated@@361 ($generated@@455 $generated@@148 $generated@@639)) $generated@@639) ($generated@@224 ($generated@@455 $generated@@148 $generated@@639) ($generated@@75 3))))
 :pattern ( ($generated@@315 $generated@@639 ($generated@@75 3)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@248) ($generated@@315 $generated@@640 ($generated@@75 4))) (and (= ($generated@@361 ($generated@@455 $generated@@156 $generated@@640)) $generated@@640) ($generated@@224 ($generated@@455 $generated@@156 $generated@@640) ($generated@@75 4))))
 :pattern ( ($generated@@315 $generated@@640 ($generated@@75 4)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@248) ($generated@@315 $generated@@641 ($generated@@75 7))) (and (= ($generated@@361 ($generated@@455 $generated@@164 $generated@@641)) $generated@@641) ($generated@@224 ($generated@@455 $generated@@164 $generated@@641) ($generated@@75 7))))
 :pattern ( ($generated@@315 $generated@@641 ($generated@@75 7)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@248) ($generated@@315 $generated@@642 ($generated@@75 8))) (and (= ($generated@@361 ($generated@@455 $generated@@172 $generated@@642)) $generated@@642) ($generated@@224 ($generated@@455 $generated@@172 $generated@@642) ($generated@@75 8))))
 :pattern ( ($generated@@315 $generated@@642 ($generated@@75 8)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@248) ($generated@@315 $generated@@643 ($generated@@75 15))) (and (= ($generated@@361 ($generated@@455 $generated@@180 $generated@@643)) $generated@@643) ($generated@@224 ($generated@@455 $generated@@180 $generated@@643) ($generated@@75 15))))
 :pattern ( ($generated@@315 $generated@@643 ($generated@@75 15)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@248) ($generated@@315 $generated@@644 ($generated@@75 16))) (and (= ($generated@@361 ($generated@@455 $generated@@188 $generated@@644)) $generated@@644) ($generated@@224 ($generated@@455 $generated@@188 $generated@@644) ($generated@@75 16))))
 :pattern ( ($generated@@315 $generated@@644 ($generated@@75 16)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@248) ($generated@@315 $generated@@645 ($generated@@75 32))) (and (= ($generated@@361 ($generated@@455 $generated@@196 $generated@@645)) $generated@@645) ($generated@@224 ($generated@@455 $generated@@196 $generated@@645) ($generated@@75 32))))
 :pattern ( ($generated@@315 $generated@@645 ($generated@@75 32)))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@248) ($generated@@315 $generated@@646 ($generated@@75 53))) (and (= ($generated@@361 ($generated@@455 $generated@@204 $generated@@646)) $generated@@646) ($generated@@224 ($generated@@455 $generated@@204 $generated@@646) ($generated@@75 53))))
 :pattern ( ($generated@@315 $generated@@646 ($generated@@75 53)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@248) ($generated@@315 $generated@@647 ($generated@@75 100))) (and (= ($generated@@361 ($generated@@455 $generated@@212 $generated@@647)) $generated@@647) ($generated@@224 ($generated@@455 $generated@@212 $generated@@647) ($generated@@75 100))))
 :pattern ( ($generated@@315 $generated@@647 ($generated@@75 100)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@649) $generated@@64)) (= (type $generated@@650) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@648 ($generated@@253 $generated@@649) $generated@@650) (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@648 $generated@@651)))) ($generated@@341 $generated@@651 $generated@@649 $generated@@650))
 :pattern ( ($generated@@81 $generated@@648 $generated@@651))
))))
 :pattern ( ($generated@@74 $generated@@648 ($generated@@253 $generated@@649) $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@239) (= (type $generated@@653) $generated@@64)) (= (type $generated@@654) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@340 $generated@@654) (and ($generated@@237 $generated@@652) (exists (($generated@@655 T@U) ) (!  (and (= (type $generated@@655) $generated@@64) ($generated@@74 $generated@@652 ($generated@@238 $generated@@653 $generated@@655) $generated@@654))
 :pattern ( ($generated@@74 $generated@@652 ($generated@@238 $generated@@653 $generated@@655) $generated@@654))
))))) ($generated@@341 ($generated@@246 $generated@@652) $generated@@653 $generated@@654))
 :pattern ( ($generated@@341 ($generated@@246 $generated@@652) $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@239) (= (type $generated@@657) $generated@@64)) (= (type $generated@@658) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@340 $generated@@658) (and ($generated@@237 $generated@@656) (exists (($generated@@659 T@U) ) (!  (and (= (type $generated@@659) $generated@@64) ($generated@@74 $generated@@656 ($generated@@238 $generated@@659 $generated@@657) $generated@@658))
 :pattern ( ($generated@@74 $generated@@656 ($generated@@238 $generated@@659 $generated@@657) $generated@@658))
))))) ($generated@@341 ($generated@@247 $generated@@656) $generated@@657 $generated@@658))
 :pattern ( ($generated@@341 ($generated@@247 $generated@@656) $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@248) (= (type $generated@@661) $generated@@248)) (= ($generated@@314 ($generated@@336 $generated@@660) ($generated@@336 $generated@@661)) ($generated@@336 ($generated@@314 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@314 ($generated@@336 $generated@@660) ($generated@@336 $generated@@661)))
)))
(assert (forall (($generated@@662 Int) ) (! (= ($generated@@361 ($generated@@8 ($generated@@334 $generated@@662))) ($generated@@336 ($generated@@361 ($generated@@8 $generated@@662))))
 :pattern ( ($generated@@361 ($generated@@8 ($generated@@334 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@361 ($generated@@336 $generated@@663)) ($generated@@336 ($generated@@361 $generated@@663)))
 :pattern ( ($generated@@361 ($generated@@336 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@356 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@355 $generated@@665)) (= ($generated@@354 $generated@@664) 0)) (= $generated@@664 ($generated@@353 $generated@@665))))
 :pattern ( ($generated@@354 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@76 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@374 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@374 $generated@@666) ($generated ($generated@@81 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@374 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@671) $generated@@2)) ($generated@@74 $generated@@671 $generated@@46 $generated@@670))
 :pattern ( ($generated@@74 $generated@@671 $generated@@46 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@673) $generated@@3)) ($generated@@74 $generated@@673 $generated@@47 $generated@@672))
 :pattern ( ($generated@@74 $generated@@673 $generated@@47 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@675) $generated@@4)) ($generated@@74 $generated@@675 $generated@@44 $generated@@674))
 :pattern ( ($generated@@74 $generated@@675 $generated@@44 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@677) $generated@@526)) ($generated@@74 $generated@@677 $generated@@45 $generated@@676))
 :pattern ( ($generated@@74 $generated@@677 $generated@@45 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@679) $generated@@248)) ($generated@@74 $generated@@679 $generated@@48 $generated@@678))
 :pattern ( ($generated@@74 $generated@@679 $generated@@48 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@355 $generated@@248)) (= (type $generated@@681) $generated@@64)) (= ($generated@@224 $generated@@680 ($generated@@568 $generated@@681)) (forall (($generated@@682 Int) ) (!  (=> (and (<= 0 $generated@@682) (< $generated@@682 ($generated@@354 $generated@@680))) ($generated@@315 ($generated@@569 $generated@@680 $generated@@682) $generated@@681))
 :pattern ( ($generated@@569 $generated@@680 $generated@@682))
))))
 :pattern ( ($generated@@224 $generated@@680 ($generated@@568 $generated@@681)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 Int) ) (!  (=> (= (type $generated@@684) ($generated@@355 $generated@@248)) (=> (and (<= 0 $generated@@685) (< $generated@@685 ($generated@@354 $generated@@684))) (< ($generated@@607 ($generated@@455 $generated@@239 ($generated@@569 $generated@@684 $generated@@685))) ($generated@@683 $generated@@684))))
 :pattern ( ($generated@@607 ($generated@@455 $generated@@239 ($generated@@569 $generated@@684 $generated@@685))))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@687) $generated@@64)) (= (type $generated@@688) $generated@@64)) ($generated@@224 $generated@@686 ($generated@@483 $generated@@687 $generated@@688))) (and (and ($generated@@224 ($generated@@380 $generated@@686) ($generated@@324 $generated@@687)) ($generated@@224 ($generated@@423 $generated@@686) ($generated@@324 $generated@@688))) ($generated@@224 ($generated@@454 $generated@@686) ($generated@@324 ($generated@@238 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@224 $generated@@686 ($generated@@483 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@690) $generated@@64)) (= (type $generated@@691) $generated@@64)) ($generated@@224 $generated@@689 ($generated@@491 $generated@@690 $generated@@691))) (and (and ($generated@@224 ($generated@@398 $generated@@689) ($generated@@329 $generated@@690)) ($generated@@224 ($generated@@434 $generated@@689) ($generated@@329 $generated@@691))) ($generated@@224 ($generated@@465 $generated@@689) ($generated@@329 ($generated@@238 $generated@@690 $generated@@691)))))
 :pattern ( ($generated@@224 $generated@@689 ($generated@@491 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@2) ($generated@@224 $generated@@692 $generated@@46))
 :pattern ( ($generated@@224 $generated@@692 $generated@@46))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@3) ($generated@@224 $generated@@693 $generated@@47))
 :pattern ( ($generated@@224 $generated@@693 $generated@@47))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@4) ($generated@@224 $generated@@694 $generated@@44))
 :pattern ( ($generated@@224 $generated@@694 $generated@@44))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@526) ($generated@@224 $generated@@695 $generated@@45))
 :pattern ( ($generated@@224 $generated@@695 $generated@@45))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@248) ($generated@@224 $generated@@696 $generated@@48))
 :pattern ( ($generated@@224 $generated@@696 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 (T@U) Bool)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () Int)
(assert  (and (and (and (= (type $generated@@697) ($generated@@260 $generated@@77 $generated@@4)) (= (type $generated@@698) $generated@@77)) (= (type $generated@@699) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@704) ($generated@@355 $generated@@248))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@706  (=> (= $generated@@697 ($generated@@259 $generated@@698 $generated@@699 $generated@@60 false)) (=> (and (= $generated@@700 ($generated@@334 0)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@334 0) $generated@@700) (< $generated@@700 4294967296))))))
(let (($generated@@707  (=> (and ($generated@@340 $generated@@699) ($generated@@701 $generated@@699)) (=> (and (and (and (<= ($generated@@334 0) $generated@@702) (< $generated@@702 4294967296)) (and (<= ($generated@@334 0) $generated@@703) (< $generated@@703 4294967296))) (and (and ($generated@@224 $generated@@704 ($generated@@568 $generated@@45)) ($generated@@74 $generated@@704 ($generated@@568 $generated@@45) $generated@@699)) (and (= 1 $generated@@705) (= (ControlFlow 0 3) 2)))) $generated@@706))))
$generated@@707)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 () T@T)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 () T@T)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@259 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U T@U) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@330 (Int) Int)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) Bool)
(declare-fun $generated@@337 (T@U T@U T@U) Bool)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@349 (T@T) T@U)
(declare-fun $generated@@350 (T@U) Int)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@362 (T@U) Int)
(declare-fun $generated@@363 (T@T) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@T) T@U)
(declare-fun $generated@@370 (T@T T@T) T@T)
(declare-fun $generated@@371 (T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@T) T@U)
(declare-fun $generated@@388 (T@T T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@T T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@471 (T@U T@U) T@U)
(declare-fun $generated@@479 (T@U T@U) T@U)
(declare-fun $generated@@487 (Int Int) Int)
(declare-fun $generated@@490 (T@T) T@U)
(declare-fun $generated@@514 () T@T)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@557 (T@U Int) T@U)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@611 (Int Int) Int)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@674 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@2) ($generated@@220 $generated@@221 ($generated@@75 0)))
 :pattern ( ($generated@@220 $generated@@221 ($generated@@75 0)))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (= (type $generated@@222) $generated@@132) ($generated@@220 $generated@@222 ($generated@@75 1)))
 :pattern ( ($generated@@220 $generated@@222 ($generated@@75 1)))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@140) ($generated@@220 $generated@@223 ($generated@@75 2)))
 :pattern ( ($generated@@220 $generated@@223 ($generated@@75 2)))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (= (type $generated@@224) $generated@@148) ($generated@@220 $generated@@224 ($generated@@75 3)))
 :pattern ( ($generated@@220 $generated@@224 ($generated@@75 3)))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@156) ($generated@@220 $generated@@225 ($generated@@75 4)))
 :pattern ( ($generated@@220 $generated@@225 ($generated@@75 4)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@164) ($generated@@220 $generated@@226 ($generated@@75 7)))
 :pattern ( ($generated@@220 $generated@@226 ($generated@@75 7)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@172) ($generated@@220 $generated@@227 ($generated@@75 8)))
 :pattern ( ($generated@@220 $generated@@227 ($generated@@75 8)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@180) ($generated@@220 $generated@@228 ($generated@@75 15)))
 :pattern ( ($generated@@220 $generated@@228 ($generated@@75 15)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@188) ($generated@@220 $generated@@229 ($generated@@75 16)))
 :pattern ( ($generated@@220 $generated@@229 ($generated@@75 16)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@196) ($generated@@220 $generated@@230 ($generated@@75 32)))
 :pattern ( ($generated@@220 $generated@@230 ($generated@@75 32)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@204) ($generated@@220 $generated@@231 ($generated@@75 53)))
 :pattern ( ($generated@@220 $generated@@231 ($generated@@75 53)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@212) ($generated@@220 $generated@@232 ($generated@@75 100)))
 :pattern ( ($generated@@220 $generated@@232 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@235) 25) (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@64) (= (type $generated@@239) $generated@@64)) (= (type $generated@@240) $generated@@235)) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239))) ($generated@@233 $generated@@240))
 :pattern ( ($generated@@233 $generated@@240) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239)))
)))
(assert  (and (and (= ($generated@@1 $generated@@244) 26) (forall (($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@242 $generated@@245))
))) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@246)) $generated@@244)
 :pattern ( ($generated@@243 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@235) (= (type $generated@@248) $generated@@235)) true) (= ($generated@@241 $generated@@247 $generated@@248)  (and (= ($generated@@242 $generated@@247) ($generated@@242 $generated@@248)) (= ($generated@@243 $generated@@247) ($generated@@243 $generated@@248)))))
 :pattern ( ($generated@@241 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@249 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@253) $generated@@64)) ($generated@@220 $generated@@252 ($generated@@249 $generated@@253))) ($generated@@250 $generated@@252))
 :pattern ( ($generated@@220 $generated@@252 ($generated@@249 $generated@@253)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@260 $generated@@261)) 27)) (forall (($generated@@262 T@T) ($generated@@263 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@262 $generated@@263)) $generated@@262)
 :pattern ( ($generated@@256 $generated@@262 $generated@@263))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@264 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@256 $generated@@264 $generated@@265))
))) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@258 (type $generated@@266))))
(= (type ($generated@@254 $generated@@266 $generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@254 $generated@@266 $generated@@267 $generated@@268))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(let (($generated@@275 (type $generated@@271)))
(= (type ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273)) ($generated@@256 $generated@@275 $generated@@274))))
 :pattern ( ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273))
))) (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@258 (type $generated@@276))))
 (=> (= (type $generated@@279) $generated@@280) (= ($generated@@254 ($generated@@259 $generated@@276 $generated@@277 $generated@@278 $generated@@279) $generated@@277 $generated@@278) $generated@@279)))
 :weight 0
))) (and (and (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (or (= $generated@@283 $generated@@285) (= ($generated@@254 ($generated@@259 $generated@@282 $generated@@283 $generated@@284 $generated@@281) $generated@@285 $generated@@286) ($generated@@254 $generated@@282 $generated@@285 $generated@@286)))
 :weight 0
)) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (or (= $generated@@290 $generated@@292) (= ($generated@@254 ($generated@@259 $generated@@288 $generated@@289 $generated@@290 $generated@@287) $generated@@291 $generated@@292) ($generated@@254 $generated@@288 $generated@@291 $generated@@292)))
 :weight 0
))) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (or true (= ($generated@@254 ($generated@@259 $generated@@294 $generated@@295 $generated@@296 $generated@@293) $generated@@297 $generated@@298) ($generated@@254 $generated@@294 $generated@@297 $generated@@298)))
 :weight 0
)))) (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Bool) ) (! (= (type ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302)) ($generated@@256 $generated@@77 $generated@@4))
 :pattern ( ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ($generated@@307 T@U) ($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@67 (type $generated@@308))))
 (=> (and (and (and (and (= (type $generated@@303) $generated@@77) (= (type $generated@@304) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@305) ($generated@@66 $generated@@4))) (= (type $generated@@307) $generated@@77)) (= (type $generated@@308) ($generated@@66 $generated@@309))) (= ($generated@@0 ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))  (=> (and (not (= $generated@@307 $generated@@303)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@304 $generated@@307) $generated@@305))) $generated@@306))))
 :pattern ( ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (= (type ($generated@@310 $generated@@312 $generated@@313)) $generated@@235)
 :pattern ( ($generated@@310 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@64) (= (type $generated@@315) $generated@@64)) (= (type $generated@@316) $generated@@244)) (= (type $generated@@317) $generated@@244)) (= ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315))  (and ($generated@@311 $generated@@316 $generated@@314) ($generated@@311 $generated@@317 $generated@@315))))
 :pattern ( ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@235) (= (type $generated@@319) $generated@@235)) (= ($generated@@241 $generated@@318 $generated@@319) (= $generated@@318 $generated@@319)))
 :pattern ( ($generated@@241 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@64)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@323) $generated@@64)) (= ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@244) ($generated@@0 ($generated@@81 $generated@@322 $generated@@324))) ($generated@@311 $generated@@324 $generated@@323))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
))))
 :pattern ( ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@64)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@328) $generated@@64)) (= ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@244) ($generated@@0 ($generated@@81 $generated@@327 $generated@@329))) ($generated@@311 $generated@@329 $generated@@328))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)))
)))
(assert (forall (($generated@@331 Int) ) (! (= ($generated@@330 $generated@@331) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
(= (type ($generated@@332 $generated@@333)) $generated@@334))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (= ($generated@@332 $generated@@335) $generated@@335)
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@338) $generated@@64) (= (type $generated@@339) $generated@@64)) (= (type $generated@@340) $generated@@244)) (= (type $generated@@341) $generated@@244)) (= (type $generated@@342) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@336 $generated@@342)) (= ($generated@@74 ($generated@@310 $generated@@340 $generated@@341) ($generated@@234 $generated@@338 $generated@@339) $generated@@342)  (and ($generated@@337 $generated@@340 $generated@@338 $generated@@342) ($generated@@337 $generated@@341 $generated@@339 $generated@@342))))
 :pattern ( ($generated@@74 ($generated@@310 $generated@@340 $generated@@341) ($generated@@234 $generated@@338 $generated@@339) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@68)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@235) (= ($generated@@233 $generated@@345) (= ($generated@@343 $generated@@345) $generated@@61)))
 :pattern ( ($generated@@233 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@235) ($generated@@233 $generated@@346)) (exists (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (and (and (= (type $generated@@347) $generated@@244) (= (type $generated@@348) $generated@@244)) (= $generated@@346 ($generated@@310 $generated@@347 $generated@@348)))
 :no-pattern (type $generated@@347)
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
)))
 :pattern ( ($generated@@233 $generated@@346))
)))
(assert  (and (and (forall (($generated@@353 T@T) ) (= ($generated@@1 ($generated@@351 $generated@@353)) 28)) (forall (($generated@@354 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@351 $generated@@354))
))) (forall (($generated@@355 T@T) ) (! (= (type ($generated@@349 $generated@@355)) ($generated@@351 $generated@@355))
 :pattern ( ($generated@@349 $generated@@355))
))))
(assert (forall (($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@356)) 0)
 :pattern ( ($generated@@349 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@244)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@64) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@337 ($generated@@357 $generated@@359) $generated@@360 $generated@@361) ($generated@@74 $generated@@359 $generated@@360 $generated@@361)))
 :pattern ( ($generated@@337 ($generated@@357 $generated@@359) $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@364 T@T) ) (! (= (type ($generated@@363 $generated@@364)) ($generated@@76 $generated@@364 $generated@@2))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@79 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@76 $generated@@366 $generated@@2)) (and (= (= ($generated@@362 $generated@@365) 0) (= $generated@@365 ($generated@@363 $generated@@366))) (=> (not (= ($generated@@362 $generated@@365) 0)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367))))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert  (and (and (and (and (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (= ($generated@@1 ($generated@@370 $generated@@373 $generated@@374)) 29)) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@371 ($generated@@370 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@370 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@372 ($generated@@370 $generated@@377 $generated@@378)) $generated@@378)
 :pattern ( ($generated@@370 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@371 (type $generated@@379))))
(= (type ($generated@@368 $generated@@379)) ($generated@@76 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@379))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= (type ($generated@@369 $generated@@381 $generated@@382)) ($generated@@370 $generated@@381 $generated@@382))
 :pattern ( ($generated@@369 $generated@@381 $generated@@382))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@T) ) (! (let (($generated@@385 (type $generated@@383)))
 (not ($generated@@0 ($generated@@81 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383))))
 :pattern ( (let (($generated@@385 (type $generated@@383)))
($generated@@81 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383)))
)))
(assert  (and (and (and (and (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (= ($generated@@1 ($generated@@388 $generated@@391 $generated@@392)) 30)) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@389 ($generated@@388 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@388 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@390 ($generated@@388 $generated@@395 $generated@@396)) $generated@@396)
 :pattern ( ($generated@@388 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@389 (type $generated@@397))))
(= (type ($generated@@386 $generated@@397)) ($generated@@76 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@397))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= (type ($generated@@387 $generated@@399 $generated@@400)) ($generated@@388 $generated@@399 $generated@@400))
 :pattern ( ($generated@@387 $generated@@399 $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@T) ) (! (let (($generated@@403 (type $generated@@401)))
 (not ($generated@@0 ($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401))))
 :pattern ( (let (($generated@@403 (type $generated@@401)))
($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401)))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@79 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@76 $generated@@405 $generated@@2)) (= ($generated@@250 $generated@@404) (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@405) (and (<= 0 ($generated ($generated@@81 $generated@@404 $generated@@406))) (<= ($generated ($generated@@81 $generated@@404 $generated@@406)) ($generated@@362 $generated@@404))))
 :pattern ( ($generated@@81 $generated@@404 $generated@@406))
)))))
 :pattern ( ($generated@@250 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@372 (type $generated@@407))))
(let (($generated@@409 ($generated@@371 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@370 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@369 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@368 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@372 (type $generated@@412))))
(= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@413 $generated@@4)))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@372 (type $generated@@414))))
(let (($generated@@416 ($generated@@371 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@370 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@369 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@415) ($generated@@0 ($generated@@81 ($generated@@411 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@411 $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@390 (type $generated@@418))))
(let (($generated@@420 ($generated@@389 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@388 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@387 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@386 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@390 (type $generated@@423))))
(= (type ($generated@@422 $generated@@423)) ($generated@@76 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@390 (type $generated@@425))))
(let (($generated@@427 ($generated@@389 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@388 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@387 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@426) ($generated@@0 ($generated@@81 ($generated@@422 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@422 $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@430) $generated@@64)) (= ($generated@@220 $generated@@429 ($generated@@249 $generated@@430)) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@429 $generated@@431)))) ($generated@@311 $generated@@431 $generated@@430))
 :pattern ( ($generated@@81 $generated@@429 $generated@@431))
))))
 :pattern ( ($generated@@220 $generated@@429 ($generated@@249 $generated@@430)))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@432 ($generated@@320 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@244) ($generated@@0 ($generated@@81 $generated@@432 $generated@@435))) ($generated@@337 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@81 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@74 $generated@@432 ($generated@@320 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (= (type $generated@@436) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@437) $generated@@64)) (= (type $generated@@438) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@436 ($generated@@325 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@244) ($generated@@0 ($generated@@81 $generated@@436 $generated@@439))) ($generated@@337 $generated@@439 $generated@@437 $generated@@438))
 :pattern ( ($generated@@81 $generated@@436 $generated@@439))
))))
 :pattern ( ($generated@@74 $generated@@436 ($generated@@325 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(= ($generated ($generated@@81 ($generated@@363 $generated@@441) $generated@@440)) 0))
 :pattern ( (let (($generated@@441 (type $generated@@440)))
($generated@@81 ($generated@@363 $generated@@441) $generated@@440)))
)))
(assert  (and (and (forall (($generated@@445 T@U) ) (! (= (type ($generated@@442 $generated@@445)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@442 $generated@@445))
)) (forall (($generated@@446 T@T) ($generated@@447 T@U) ) (! (= (type ($generated@@443 $generated@@446 $generated@@447)) $generated@@446)
 :pattern ( ($generated@@443 $generated@@446 $generated@@447))
))) (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@372 (type $generated@@448))))
(let (($generated@@450 ($generated@@371 (type $generated@@448))))
(= (type ($generated@@444 $generated@@448)) ($generated@@76 $generated@@450 $generated@@449))))
 :pattern ( ($generated@@444 $generated@@448))
))))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@452) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@442 $generated@@451) $generated@@452))  (and ($generated@@0 ($generated@@81 ($generated@@368 $generated@@451) ($generated@@242 ($generated@@443 $generated@@235 $generated@@452)))) (= ($generated@@81 ($generated@@444 $generated@@451) ($generated@@242 ($generated@@443 $generated@@235 $generated@@452))) ($generated@@243 ($generated@@443 $generated@@235 $generated@@452))))))
 :pattern ( ($generated@@81 ($generated@@442 $generated@@451) $generated@@452))
)))
(assert  (and (forall (($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@455)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@453 $generated@@455))
)) (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@390 (type $generated@@456))))
(let (($generated@@458 ($generated@@389 (type $generated@@456))))
(= (type ($generated@@454 $generated@@456)) ($generated@@76 $generated@@458 $generated@@457))))
 :pattern ( ($generated@@454 $generated@@456))
))))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@460) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@453 $generated@@459) $generated@@460))  (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@459) ($generated@@242 ($generated@@443 $generated@@235 $generated@@460)))) (= ($generated@@81 ($generated@@454 $generated@@459) ($generated@@242 ($generated@@443 $generated@@235 $generated@@460))) ($generated@@243 ($generated@@443 $generated@@235 $generated@@460))))))
 :pattern ( ($generated@@81 ($generated@@453 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@462)))
(let (($generated@@464 ($generated@@371 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@370 $generated@@464 $generated@@463)) (= ($generated@@0 ($generated@@81 ($generated@@411 $generated@@461) $generated@@462)) (exists (($generated@@465 T@U) ) (!  (and (= (type $generated@@465) $generated@@464) (and ($generated@@0 ($generated@@81 ($generated@@368 $generated@@461) $generated@@465)) (= $generated@@462 ($generated@@81 ($generated@@444 $generated@@461) $generated@@465))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@461) $generated@@465))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@461) $generated@@465))
))))))
 :pattern ( ($generated@@81 ($generated@@411 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 (type $generated@@467)))
(let (($generated@@469 ($generated@@389 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@388 $generated@@469 $generated@@468)) (= ($generated@@0 ($generated@@81 ($generated@@422 $generated@@466) $generated@@467)) (exists (($generated@@470 T@U) ) (!  (and (= (type $generated@@470) $generated@@469) (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@466) $generated@@470)) (= $generated@@467 ($generated@@81 ($generated@@454 $generated@@466) $generated@@470))))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@466) $generated@@470))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@466) $generated@@470))
))))))
 :pattern ( ($generated@@81 ($generated@@422 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (and (= (type $generated@@474) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@475) $generated@@64)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477) (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@474) $generated@@478))) (and ($generated@@337 ($generated@@81 ($generated@@444 $generated@@474) $generated@@478) $generated@@476 $generated@@477) ($generated@@337 $generated@@478 $generated@@475 $generated@@477)))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@474) $generated@@478))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@474) $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (= (type $generated@@482) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@482) $generated@@486))) (and ($generated@@337 ($generated@@81 ($generated@@454 $generated@@482) $generated@@486) $generated@@484 $generated@@485) ($generated@@337 $generated@@486 $generated@@483 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@482) $generated@@486))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@482) $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ($generated@@489 Int) ) (! (= ($generated@@487 $generated@@488 $generated@@489) (div $generated@@488 $generated@@489))
 :pattern ( ($generated@@487 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@T) ) (! (= (type ($generated@@490 $generated@@491)) ($generated@@76 $generated@@491 $generated@@4))
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@390 (type $generated@@492))))
(let (($generated@@494 ($generated@@389 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@388 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@387 $generated@@494 $generated@@493)) (= ($generated@@386 $generated@@492) ($generated@@490 $generated@@494))))))
 :pattern ( ($generated@@386 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@390 (type $generated@@495))))
(let (($generated@@497 ($generated@@389 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@388 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@387 $generated@@497 $generated@@496)) (= ($generated@@422 $generated@@495) ($generated@@490 $generated@@496))))))
 :pattern ( ($generated@@422 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@390 (type $generated@@498))))
(let (($generated@@500 ($generated@@389 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@388 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@387 $generated@@500 $generated@@499)) (= ($generated@@453 $generated@@498) ($generated@@490 $generated@@244))))))
 :pattern ( ($generated@@453 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@372 (type $generated@@501))))
(let (($generated@@503 ($generated@@371 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@370 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@369 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@244) (= (type $generated@@505) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@442 $generated@@501) ($generated@@357 ($generated@@310 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@442 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@390 (type $generated@@506))))
(let (($generated@@508 ($generated@@389 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@388 $generated@@508 $generated@@507)) (or (= $generated@@506 ($generated@@387 $generated@@508 $generated@@507)) (exists (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (and (and (= (type $generated@@509) $generated@@244) (= (type $generated@@510) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@453 $generated@@506) ($generated@@357 ($generated@@310 $generated@@509 $generated@@510)))))
 :no-pattern (type $generated@@509)
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@453 $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@244) ($generated@@311 $generated@@511 $generated@@46)) (and (= ($generated@@357 ($generated@@443 $generated@@2 $generated@@511)) $generated@@511) ($generated@@220 ($generated@@443 $generated@@2 $generated@@511) $generated@@46)))
 :pattern ( ($generated@@311 $generated@@511 $generated@@46))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@244) ($generated@@311 $generated@@512 $generated@@47)) (and (= ($generated@@357 ($generated@@443 $generated@@3 $generated@@512)) $generated@@512) ($generated@@220 ($generated@@443 $generated@@3 $generated@@512) $generated@@47)))
 :pattern ( ($generated@@311 $generated@@512 $generated@@47))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@244) ($generated@@311 $generated@@513 $generated@@44)) (and (= ($generated@@357 ($generated@@443 $generated@@4 $generated@@513)) $generated@@513) ($generated@@220 ($generated@@443 $generated@@4 $generated@@513) $generated@@44)))
 :pattern ( ($generated@@311 $generated@@513 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@514) 31))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@244) ($generated@@311 $generated@@515 $generated@@45)) (and (= ($generated@@357 ($generated@@443 $generated@@514 $generated@@515)) $generated@@515) ($generated@@220 ($generated@@443 $generated@@514 $generated@@515) $generated@@45)))
 :pattern ( ($generated@@311 $generated@@515 $generated@@45))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@311 ($generated@@357 $generated@@516) $generated@@517) ($generated@@220 $generated@@516 $generated@@517)))
 :pattern ( ($generated@@311 ($generated@@357 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@79 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@76 $generated@@519 $generated@@2)) (<= 0 ($generated@@362 $generated@@518))))
 :pattern ( ($generated@@362 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@352 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@351 $generated@@521)) (<= 0 ($generated@@350 $generated@@520))))
 :pattern ( ($generated@@350 $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= ($generated@@522 ($generated@@471 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@471 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@526 ($generated@@471 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@471 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@64) (= (type $generated@@531) $generated@@64)) (= ($generated@@72 ($generated@@471 $generated@@530 $generated@@531)) $generated@@58))
 :pattern ( ($generated@@471 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@64)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= ($generated@@532 ($generated@@479 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@479 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@64)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (= ($generated@@536 ($generated@@479 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@479 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@72 ($generated@@479 $generated@@540 $generated@@541)) $generated@@59))
 :pattern ( ($generated@@479 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@244) (= (type $generated@@543) $generated@@244)) (= ($generated@@343 ($generated@@310 $generated@@542 $generated@@543)) $generated@@61))
 :pattern ( ($generated@@310 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@234 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@234 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@234 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@234 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@244) (= (type $generated@@553) $generated@@244)) (= ($generated@@242 ($generated@@310 $generated@@552 $generated@@553)) $generated@@552))
 :pattern ( ($generated@@310 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@244) (= (type $generated@@555) $generated@@244)) (= ($generated@@243 ($generated@@310 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@310 $generated@@554 $generated@@555))
)))
(assert  (and (forall (($generated@@558 T@U) ) (! (= (type ($generated@@556 $generated@@558)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@558))
)) (forall (($generated@@559 T@U) ($generated@@560 Int) ) (! (let (($generated@@561 ($generated@@352 (type $generated@@559))))
(= (type ($generated@@557 $generated@@559 $generated@@560)) $generated@@561))
 :pattern ( ($generated@@557 $generated@@559 $generated@@560))
))))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@351 $generated@@244)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@562 ($generated@@556 $generated@@563) $generated@@564) (forall (($generated@@565 Int) ) (!  (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@350 $generated@@562))) ($generated@@337 ($generated@@557 $generated@@562 $generated@@565) $generated@@563 $generated@@564))
 :pattern ( ($generated@@557 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@556 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@566 ($generated@@75 $generated@@567)) $generated@@567)
 :pattern ( ($generated@@75 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@64) (= ($generated@@568 ($generated@@320 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@320 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@64) (= ($generated@@72 ($generated@@320 $generated@@571)) $generated@@54))
 :pattern ( ($generated@@320 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@64)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@64) (= ($generated@@572 ($generated@@325 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@325 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@64) (= ($generated@@72 ($generated@@325 $generated@@575)) $generated@@55))
 :pattern ( ($generated@@325 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@64)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@64) (= ($generated@@576 ($generated@@249 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@249 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@579)) $generated@@56))
 :pattern ( ($generated@@249 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@556 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@556 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@556 $generated@@583)) $generated@@57))
 :pattern ( ($generated@@556 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
(= ($generated@@443 $generated@@585 ($generated@@357 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@357 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) $generated@@64)) (= ($generated@@220 $generated@@586 ($generated@@471 $generated@@587 $generated@@588)) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@586) $generated@@589))) (and ($generated@@311 ($generated@@81 ($generated@@444 $generated@@586) $generated@@589) $generated@@588) ($generated@@311 $generated@@589 $generated@@587)))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@586) $generated@@589))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@586) $generated@@589))
))))
 :pattern ( ($generated@@220 $generated@@586 ($generated@@471 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) (= ($generated@@220 $generated@@590 ($generated@@479 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@590) $generated@@593))) (and ($generated@@311 ($generated@@81 ($generated@@454 $generated@@590) $generated@@593) $generated@@592) ($generated@@311 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@590) $generated@@593))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@220 $generated@@590 ($generated@@479 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@244) (= (type $generated@@597) $generated@@244)) (< ($generated@@594 $generated@@596) ($generated@@595 ($generated@@310 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@310 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@244) (= (type $generated@@599) $generated@@244)) (< ($generated@@594 $generated@@599) ($generated@@595 ($generated@@310 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@310 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@244) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@311 $generated@@600 ($generated@@471 $generated@@601 $generated@@602))) (and (= ($generated@@357 ($generated@@443 ($generated@@370 $generated@@244 $generated@@244) $generated@@600)) $generated@@600) ($generated@@220 ($generated@@443 ($generated@@370 $generated@@244 $generated@@244) $generated@@600) ($generated@@471 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@311 $generated@@600 ($generated@@471 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@244) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) ($generated@@311 $generated@@603 ($generated@@479 $generated@@604 $generated@@605))) (and (= ($generated@@357 ($generated@@443 ($generated@@388 $generated@@244 $generated@@244) $generated@@603)) $generated@@603) ($generated@@220 ($generated@@443 ($generated@@388 $generated@@244 $generated@@244) $generated@@603) ($generated@@479 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@311 $generated@@603 ($generated@@479 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@64) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@244)) ($generated@@311 $generated@@608 ($generated@@234 $generated@@606 $generated@@607))) (and (= ($generated@@357 ($generated@@443 $generated@@235 $generated@@608)) $generated@@608) ($generated@@220 ($generated@@443 $generated@@235 $generated@@608) ($generated@@234 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@311 $generated@@608 ($generated@@234 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (not ($generated@@0 ($generated@@81 ($generated@@490 $generated@@610) $generated@@609))))
 :pattern ( (let (($generated@@610 (type $generated@@609)))
($generated@@81 ($generated@@490 $generated@@610) $generated@@609)))
)))
(assert (forall (($generated@@612 Int) ($generated@@613 Int) ) (! (= ($generated@@611 $generated@@612 $generated@@613) (mod $generated@@612 $generated@@613))
 :pattern ( ($generated@@611 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@69)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@64) (= (type $generated@@617) $generated@@64)) (and (= ($generated@@72 ($generated@@234 $generated@@616 $generated@@617)) $generated@@62) (= ($generated@@614 ($generated@@234 $generated@@616 $generated@@617)) $generated@@63)))
 :pattern ( ($generated@@234 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@235) (= ($generated@@594 ($generated@@357 $generated@@618)) ($generated@@595 $generated@@618)))
 :pattern ( ($generated@@594 ($generated@@357 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@244) ($generated@@311 $generated@@619 ($generated@@75 0))) (and (= ($generated@@357 ($generated@@443 $generated@@2 $generated@@619)) $generated@@619) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@619) ($generated@@75 0))))
 :pattern ( ($generated@@311 $generated@@619 ($generated@@75 0)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@244) ($generated@@311 $generated@@620 ($generated@@75 1))) (and (= ($generated@@357 ($generated@@443 $generated@@132 $generated@@620)) $generated@@620) ($generated@@220 ($generated@@443 $generated@@132 $generated@@620) ($generated@@75 1))))
 :pattern ( ($generated@@311 $generated@@620 ($generated@@75 1)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@244) (= (type $generated@@622) $generated@@64)) ($generated@@311 $generated@@621 ($generated@@320 $generated@@622))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@621)) $generated@@621) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@621) ($generated@@320 $generated@@622))))
 :pattern ( ($generated@@311 $generated@@621 ($generated@@320 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@244) (= (type $generated@@624) $generated@@64)) ($generated@@311 $generated@@623 ($generated@@325 $generated@@624))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@623)) $generated@@623) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@623) ($generated@@325 $generated@@624))))
 :pattern ( ($generated@@311 $generated@@623 ($generated@@325 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@244) (= (type $generated@@626) $generated@@64)) ($generated@@311 $generated@@625 ($generated@@249 $generated@@626))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@2) $generated@@625)) $generated@@625) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@2) $generated@@625) ($generated@@249 $generated@@626))))
 :pattern ( ($generated@@311 $generated@@625 ($generated@@249 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@244) (= (type $generated@@628) $generated@@64)) ($generated@@311 $generated@@627 ($generated@@556 $generated@@628))) (and (= ($generated@@357 ($generated@@443 ($generated@@351 $generated@@244) $generated@@627)) $generated@@627) ($generated@@220 ($generated@@443 ($generated@@351 $generated@@244) $generated@@627) ($generated@@556 $generated@@628))))
 :pattern ( ($generated@@311 $generated@@627 ($generated@@556 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@244) ($generated@@311 $generated@@629 ($generated@@75 2))) (and (= ($generated@@357 ($generated@@443 $generated@@140 $generated@@629)) $generated@@629) ($generated@@220 ($generated@@443 $generated@@140 $generated@@629) ($generated@@75 2))))
 :pattern ( ($generated@@311 $generated@@629 ($generated@@75 2)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@244) ($generated@@311 $generated@@630 ($generated@@75 3))) (and (= ($generated@@357 ($generated@@443 $generated@@148 $generated@@630)) $generated@@630) ($generated@@220 ($generated@@443 $generated@@148 $generated@@630) ($generated@@75 3))))
 :pattern ( ($generated@@311 $generated@@630 ($generated@@75 3)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@244) ($generated@@311 $generated@@631 ($generated@@75 4))) (and (= ($generated@@357 ($generated@@443 $generated@@156 $generated@@631)) $generated@@631) ($generated@@220 ($generated@@443 $generated@@156 $generated@@631) ($generated@@75 4))))
 :pattern ( ($generated@@311 $generated@@631 ($generated@@75 4)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@244) ($generated@@311 $generated@@632 ($generated@@75 7))) (and (= ($generated@@357 ($generated@@443 $generated@@164 $generated@@632)) $generated@@632) ($generated@@220 ($generated@@443 $generated@@164 $generated@@632) ($generated@@75 7))))
 :pattern ( ($generated@@311 $generated@@632 ($generated@@75 7)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@244) ($generated@@311 $generated@@633 ($generated@@75 8))) (and (= ($generated@@357 ($generated@@443 $generated@@172 $generated@@633)) $generated@@633) ($generated@@220 ($generated@@443 $generated@@172 $generated@@633) ($generated@@75 8))))
 :pattern ( ($generated@@311 $generated@@633 ($generated@@75 8)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@244) ($generated@@311 $generated@@634 ($generated@@75 15))) (and (= ($generated@@357 ($generated@@443 $generated@@180 $generated@@634)) $generated@@634) ($generated@@220 ($generated@@443 $generated@@180 $generated@@634) ($generated@@75 15))))
 :pattern ( ($generated@@311 $generated@@634 ($generated@@75 15)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@244) ($generated@@311 $generated@@635 ($generated@@75 16))) (and (= ($generated@@357 ($generated@@443 $generated@@188 $generated@@635)) $generated@@635) ($generated@@220 ($generated@@443 $generated@@188 $generated@@635) ($generated@@75 16))))
 :pattern ( ($generated@@311 $generated@@635 ($generated@@75 16)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@244) ($generated@@311 $generated@@636 ($generated@@75 32))) (and (= ($generated@@357 ($generated@@443 $generated@@196 $generated@@636)) $generated@@636) ($generated@@220 ($generated@@443 $generated@@196 $generated@@636) ($generated@@75 32))))
 :pattern ( ($generated@@311 $generated@@636 ($generated@@75 32)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@244) ($generated@@311 $generated@@637 ($generated@@75 53))) (and (= ($generated@@357 ($generated@@443 $generated@@204 $generated@@637)) $generated@@637) ($generated@@220 ($generated@@443 $generated@@204 $generated@@637) ($generated@@75 53))))
 :pattern ( ($generated@@311 $generated@@637 ($generated@@75 53)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@244) ($generated@@311 $generated@@638 ($generated@@75 100))) (and (= ($generated@@357 ($generated@@443 $generated@@212 $generated@@638)) $generated@@638) ($generated@@220 ($generated@@443 $generated@@212 $generated@@638) ($generated@@75 100))))
 :pattern ( ($generated@@311 $generated@@638 ($generated@@75 100)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@639) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@640) $generated@@64)) (= (type $generated@@641) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@639 ($generated@@249 $generated@@640) $generated@@641) (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@639 $generated@@642)))) ($generated@@337 $generated@@642 $generated@@640 $generated@@641))
 :pattern ( ($generated@@81 $generated@@639 $generated@@642))
))))
 :pattern ( ($generated@@74 $generated@@639 ($generated@@249 $generated@@640) $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@235) (= (type $generated@@644) $generated@@64)) (= (type $generated@@645) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@336 $generated@@645) (and ($generated@@233 $generated@@643) (exists (($generated@@646 T@U) ) (!  (and (= (type $generated@@646) $generated@@64) ($generated@@74 $generated@@643 ($generated@@234 $generated@@644 $generated@@646) $generated@@645))
 :pattern ( ($generated@@74 $generated@@643 ($generated@@234 $generated@@644 $generated@@646) $generated@@645))
))))) ($generated@@337 ($generated@@242 $generated@@643) $generated@@644 $generated@@645))
 :pattern ( ($generated@@337 ($generated@@242 $generated@@643) $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@235) (= (type $generated@@648) $generated@@64)) (= (type $generated@@649) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@336 $generated@@649) (and ($generated@@233 $generated@@647) (exists (($generated@@650 T@U) ) (!  (and (= (type $generated@@650) $generated@@64) ($generated@@74 $generated@@647 ($generated@@234 $generated@@650 $generated@@648) $generated@@649))
 :pattern ( ($generated@@74 $generated@@647 ($generated@@234 $generated@@650 $generated@@648) $generated@@649))
))))) ($generated@@337 ($generated@@243 $generated@@647) $generated@@648 $generated@@649))
 :pattern ( ($generated@@337 ($generated@@243 $generated@@647) $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@244) (= (type $generated@@652) $generated@@244)) (= ($generated@@310 ($generated@@332 $generated@@651) ($generated@@332 $generated@@652)) ($generated@@332 ($generated@@310 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@310 ($generated@@332 $generated@@651) ($generated@@332 $generated@@652)))
)))
(assert (forall (($generated@@653 Int) ) (! (= ($generated@@357 ($generated@@8 ($generated@@330 $generated@@653))) ($generated@@332 ($generated@@357 ($generated@@8 $generated@@653))))
 :pattern ( ($generated@@357 ($generated@@8 ($generated@@330 $generated@@653))))
)))
(assert (forall (($generated@@654 T@U) ) (! (= ($generated@@357 ($generated@@332 $generated@@654)) ($generated@@332 ($generated@@357 $generated@@654)))
 :pattern ( ($generated@@357 ($generated@@332 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@352 (type $generated@@655))))
 (=> (and (= (type $generated@@655) ($generated@@351 $generated@@656)) (= ($generated@@350 $generated@@655) 0)) (= $generated@@655 ($generated@@349 $generated@@656))))
 :pattern ( ($generated@@350 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@658)))
 (=> (and (and (= (type $generated@@657) ($generated@@76 $generated@@660 $generated@@2)) (= (type $generated@@659) $generated@@2)) (<= 0 ($generated $generated@@659))) (= ($generated@@362 ($generated@@82 $generated@@657 $generated@@658 $generated@@659)) (+ (- ($generated@@362 $generated@@657) ($generated ($generated@@81 $generated@@657 $generated@@658))) ($generated $generated@@659)))))
 :pattern ( ($generated@@362 ($generated@@82 $generated@@657 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@662) $generated@@2)) ($generated@@74 $generated@@662 $generated@@46 $generated@@661))
 :pattern ( ($generated@@74 $generated@@662 $generated@@46 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@664) $generated@@3)) ($generated@@74 $generated@@664 $generated@@47 $generated@@663))
 :pattern ( ($generated@@74 $generated@@664 $generated@@47 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@666) $generated@@4)) ($generated@@74 $generated@@666 $generated@@44 $generated@@665))
 :pattern ( ($generated@@74 $generated@@666 $generated@@44 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@668) $generated@@514)) ($generated@@74 $generated@@668 $generated@@45 $generated@@667))
 :pattern ( ($generated@@74 $generated@@668 $generated@@45 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@670) $generated@@244)) ($generated@@74 $generated@@670 $generated@@48 $generated@@669))
 :pattern ( ($generated@@74 $generated@@670 $generated@@48 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@351 $generated@@244)) (= (type $generated@@672) $generated@@64)) (= ($generated@@220 $generated@@671 ($generated@@556 $generated@@672)) (forall (($generated@@673 Int) ) (!  (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@350 $generated@@671))) ($generated@@311 ($generated@@557 $generated@@671 $generated@@673) $generated@@672))
 :pattern ( ($generated@@557 $generated@@671 $generated@@673))
))))
 :pattern ( ($generated@@220 $generated@@671 ($generated@@556 $generated@@672)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 Int) ) (!  (=> (= (type $generated@@675) ($generated@@351 $generated@@244)) (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@350 $generated@@675))) (< ($generated@@595 ($generated@@443 $generated@@235 ($generated@@557 $generated@@675 $generated@@676))) ($generated@@674 $generated@@675))))
 :pattern ( ($generated@@595 ($generated@@443 $generated@@235 ($generated@@557 $generated@@675 $generated@@676))))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@678) $generated@@64)) (= (type $generated@@679) $generated@@64)) ($generated@@220 $generated@@677 ($generated@@471 $generated@@678 $generated@@679))) (and (and ($generated@@220 ($generated@@368 $generated@@677) ($generated@@320 $generated@@678)) ($generated@@220 ($generated@@411 $generated@@677) ($generated@@320 $generated@@679))) ($generated@@220 ($generated@@442 $generated@@677) ($generated@@320 ($generated@@234 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@220 $generated@@677 ($generated@@471 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@681) $generated@@64)) (= (type $generated@@682) $generated@@64)) ($generated@@220 $generated@@680 ($generated@@479 $generated@@681 $generated@@682))) (and (and ($generated@@220 ($generated@@386 $generated@@680) ($generated@@325 $generated@@681)) ($generated@@220 ($generated@@422 $generated@@680) ($generated@@325 $generated@@682))) ($generated@@220 ($generated@@453 $generated@@680) ($generated@@325 ($generated@@234 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@220 $generated@@680 ($generated@@479 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@2) ($generated@@220 $generated@@683 $generated@@46))
 :pattern ( ($generated@@220 $generated@@683 $generated@@46))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@3) ($generated@@220 $generated@@684 $generated@@47))
 :pattern ( ($generated@@220 $generated@@684 $generated@@47))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@4) ($generated@@220 $generated@@685 $generated@@44))
 :pattern ( ($generated@@220 $generated@@685 $generated@@44))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@514) ($generated@@220 $generated@@686 $generated@@45))
 :pattern ( ($generated@@220 $generated@@686 $generated@@45))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@244) ($generated@@220 $generated@@687 $generated@@48))
 :pattern ( ($generated@@220 $generated@@687 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 (T@U) Bool)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(assert  (and (and (and (= (type $generated@@688) ($generated@@256 $generated@@77 $generated@@4)) (= (type $generated@@689) $generated@@77)) (= (type $generated@@690) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@696) ($generated@@351 $generated@@244))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@698  (=> (= $generated@@688 ($generated@@255 $generated@@689 $generated@@690 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@691 0))) (=> (= $generated@@692 ($generated@@487 $generated@@693 $generated@@691)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@330 0) $generated@@692) (< $generated@@692 4294967296))) (=> (and (<= ($generated@@330 0) $generated@@692) (< $generated@@692 4294967296)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@691 0))) (=> (and (= $generated@@694 ($generated@@611 $generated@@693 $generated@@691)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@330 0) $generated@@694) (< $generated@@694 4294967296)))))))))))
(let (($generated@@699  (=> (and ($generated@@336 $generated@@690) ($generated@@695 $generated@@690)) (=> (and (and (<= ($generated@@330 0) $generated@@693) (< $generated@@693 4294967296)) (and (<= ($generated@@330 0) $generated@@691) (< $generated@@691 4294967296))) (=> (and (and (and ($generated@@220 $generated@@696 ($generated@@556 $generated@@45)) ($generated@@74 $generated@@696 ($generated@@556 $generated@@45) $generated@@690)) (= 1 $generated@@697)) (and (not (= $generated@@691 0)) (= (ControlFlow 0 6) 2))) $generated@@698)))))
$generated@@699)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 () T@T)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 () T@T)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@260 (T@T T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@334 (Int) Int)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@341 (T@U T@U T@U) Bool)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@354 (T@U) Int)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@374 (T@U) Int)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@T T@T) T@U)
(declare-fun $generated@@382 (T@T T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@T) T@U)
(declare-fun $generated@@400 (T@T T@T) T@T)
(declare-fun $generated@@401 (T@T) T@T)
(declare-fun $generated@@402 (T@T) T@T)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@T T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@483 (T@U T@U) T@U)
(declare-fun $generated@@491 (T@U T@U) T@U)
(declare-fun $generated@@502 (T@T) T@U)
(declare-fun $generated@@526 () T@T)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@569 (T@U Int) T@U)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@683 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@220 $generated@@221 $generated@@222)) (forall (($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@221 $generated@@223) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60))
)))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@2) ($generated@@224 $generated@@225 ($generated@@75 0)))
 :pattern ( ($generated@@224 $generated@@225 ($generated@@75 0)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@132) ($generated@@224 $generated@@226 ($generated@@75 1)))
 :pattern ( ($generated@@224 $generated@@226 ($generated@@75 1)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@140) ($generated@@224 $generated@@227 ($generated@@75 2)))
 :pattern ( ($generated@@224 $generated@@227 ($generated@@75 2)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@148) ($generated@@224 $generated@@228 ($generated@@75 3)))
 :pattern ( ($generated@@224 $generated@@228 ($generated@@75 3)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@156) ($generated@@224 $generated@@229 ($generated@@75 4)))
 :pattern ( ($generated@@224 $generated@@229 ($generated@@75 4)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@164) ($generated@@224 $generated@@230 ($generated@@75 7)))
 :pattern ( ($generated@@224 $generated@@230 ($generated@@75 7)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@172) ($generated@@224 $generated@@231 ($generated@@75 8)))
 :pattern ( ($generated@@224 $generated@@231 ($generated@@75 8)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@180) ($generated@@224 $generated@@232 ($generated@@75 15)))
 :pattern ( ($generated@@224 $generated@@232 ($generated@@75 15)))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (= (type $generated@@233) $generated@@188) ($generated@@224 $generated@@233 ($generated@@75 16)))
 :pattern ( ($generated@@224 $generated@@233 ($generated@@75 16)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (= (type $generated@@234) $generated@@196) ($generated@@224 $generated@@234 ($generated@@75 32)))
 :pattern ( ($generated@@224 $generated@@234 ($generated@@75 32)))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@204) ($generated@@224 $generated@@235 ($generated@@75 53)))
 :pattern ( ($generated@@224 $generated@@235 ($generated@@75 53)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@212) ($generated@@224 $generated@@236 ($generated@@75 100)))
 :pattern ( ($generated@@224 $generated@@236 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@239) 25) (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@64) (= (type $generated@@243) $generated@@64)) (= (type $generated@@244) $generated@@239)) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243))) ($generated@@237 $generated@@244))
 :pattern ( ($generated@@237 $generated@@244) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243)))
)))
(assert  (and (and (= ($generated@@1 $generated@@248) 26) (forall (($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@246 $generated@@249))
))) (forall (($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@250)) $generated@@248)
 :pattern ( ($generated@@247 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@251) $generated@@239) (= (type $generated@@252) $generated@@239)) true) (= ($generated@@245 $generated@@251 $generated@@252)  (and (= ($generated@@246 $generated@@251) ($generated@@246 $generated@@252)) (= ($generated@@247 $generated@@251) ($generated@@247 $generated@@252)))))
 :pattern ( ($generated@@245 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@253 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@257) $generated@@64)) ($generated@@224 $generated@@256 ($generated@@253 $generated@@257))) ($generated@@254 $generated@@256))
 :pattern ( ($generated@@224 $generated@@256 ($generated@@253 $generated@@257)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@264 $generated@@265)) 27)) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@260 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@262 ($generated@@260 $generated@@268 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@260 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@262 (type $generated@@270))))
(= (type ($generated@@258 $generated@@270 $generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@258 $generated@@270 $generated@@271 $generated@@272))
))) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(let (($generated@@279 (type $generated@@275)))
(= (type ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277)) ($generated@@260 $generated@@279 $generated@@278))))
 :pattern ( ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277))
))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@262 (type $generated@@280))))
 (=> (= (type $generated@@283) $generated@@284) (= ($generated@@258 ($generated@@263 $generated@@280 $generated@@281 $generated@@282 $generated@@283) $generated@@281 $generated@@282) $generated@@283)))
 :weight 0
))) (and (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (or (= $generated@@287 $generated@@289) (= ($generated@@258 ($generated@@263 $generated@@286 $generated@@287 $generated@@288 $generated@@285) $generated@@289 $generated@@290) ($generated@@258 $generated@@286 $generated@@289 $generated@@290)))
 :weight 0
)) (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (or (= $generated@@294 $generated@@296) (= ($generated@@258 ($generated@@263 $generated@@292 $generated@@293 $generated@@294 $generated@@291) $generated@@295 $generated@@296) ($generated@@258 $generated@@292 $generated@@295 $generated@@296)))
 :weight 0
))) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (or true (= ($generated@@258 ($generated@@263 $generated@@298 $generated@@299 $generated@@300 $generated@@297) $generated@@301 $generated@@302) ($generated@@258 $generated@@298 $generated@@301 $generated@@302)))
 :weight 0
)))) (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ) (! (= (type ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306)) ($generated@@260 $generated@@77 $generated@@4))
 :pattern ( ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 Bool) ($generated@@311 T@U) ($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@67 (type $generated@@312))))
 (=> (and (and (and (and (= (type $generated@@307) $generated@@77) (= (type $generated@@308) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@309) ($generated@@66 $generated@@4))) (= (type $generated@@311) $generated@@77)) (= (type $generated@@312) ($generated@@66 $generated@@313))) (= ($generated@@0 ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))  (=> (and (not (= $generated@@311 $generated@@307)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@308 $generated@@311) $generated@@309))) $generated@@310))))
 :pattern ( ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) $generated@@239)
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (= (type $generated@@318) $generated@@64) (= (type $generated@@319) $generated@@64)) (= (type $generated@@320) $generated@@248)) (= (type $generated@@321) $generated@@248)) (= ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319))  (and ($generated@@315 $generated@@320 $generated@@318) ($generated@@315 $generated@@321 $generated@@319))))
 :pattern ( ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@239) (= (type $generated@@323) $generated@@239)) (= ($generated@@245 $generated@@322 $generated@@323) (= $generated@@322 $generated@@323)))
 :pattern ( ($generated@@245 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@64)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@327) $generated@@64)) (= ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@248) ($generated@@0 ($generated@@81 $generated@@326 $generated@@328))) ($generated@@315 $generated@@328 $generated@@327))
 :pattern ( ($generated@@81 $generated@@326 $generated@@328))
))))
 :pattern ( ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@64)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@248) ($generated@@0 ($generated@@81 $generated@@331 $generated@@333))) ($generated@@315 $generated@@333 $generated@@332))
 :pattern ( ($generated@@81 $generated@@331 $generated@@333))
))))
 :pattern ( ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)))
)))
(assert (forall (($generated@@335 Int) ) (! (= ($generated@@334 $generated@@335) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 (type $generated@@337)))
(= (type ($generated@@336 $generated@@337)) $generated@@338))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= ($generated@@336 $generated@@339) $generated@@339)
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@342) $generated@@64) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) $generated@@248)) (= (type $generated@@345) $generated@@248)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@340 $generated@@346)) (= ($generated@@74 ($generated@@314 $generated@@344 $generated@@345) ($generated@@238 $generated@@342 $generated@@343) $generated@@346)  (and ($generated@@341 $generated@@344 $generated@@342 $generated@@346) ($generated@@341 $generated@@345 $generated@@343 $generated@@346))))
 :pattern ( ($generated@@74 ($generated@@314 $generated@@344 $generated@@345) ($generated@@238 $generated@@342 $generated@@343) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (= (type ($generated@@347 $generated@@348)) $generated@@68)
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@239) (= ($generated@@237 $generated@@349) (= ($generated@@347 $generated@@349) $generated@@61)))
 :pattern ( ($generated@@237 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@239) ($generated@@237 $generated@@350)) (exists (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (and (and (= (type $generated@@351) $generated@@248) (= (type $generated@@352) $generated@@248)) (= $generated@@350 ($generated@@314 $generated@@351 $generated@@352)))
 :no-pattern (type $generated@@351)
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
)))
 :pattern ( ($generated@@237 $generated@@350))
)))
(assert  (and (and (forall (($generated@@357 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@357)) 28)) (forall (($generated@@358 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@355 $generated@@358))
))) (forall (($generated@@359 T@T) ) (! (= (type ($generated@@353 $generated@@359)) ($generated@@355 $generated@@359))
 :pattern ( ($generated@@353 $generated@@359))
))))
(assert (forall (($generated@@360 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@360)) 0)
 :pattern ( ($generated@@353 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@248)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@64) (= (type $generated@@365) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@341 ($generated@@361 $generated@@363) $generated@@364 $generated@@365) ($generated@@74 $generated@@363 $generated@@364 $generated@@365)))
 :pattern ( ($generated@@341 ($generated@@361 $generated@@363) $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@368) $generated@@248)) (= (type $generated@@369) $generated@@64)) ($generated@@220 $generated@@366 $generated@@367)) ($generated@@341 $generated@@368 $generated@@369 $generated@@366)) ($generated@@341 $generated@@368 $generated@@369 $generated@@367))
 :pattern ( ($generated@@220 $generated@@366 $generated@@367) ($generated@@341 $generated@@368 $generated@@369 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@371) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@373) $generated@@64)) ($generated@@220 $generated@@370 $generated@@371)) ($generated@@74 $generated@@372 $generated@@373 $generated@@370)) ($generated@@74 $generated@@372 $generated@@373 $generated@@371))
 :pattern ( ($generated@@220 $generated@@370 $generated@@371) ($generated@@74 $generated@@372 $generated@@373 $generated@@370))
)))
(assert (forall (($generated@@376 T@T) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@76 $generated@@376 $generated@@2))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@79 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@76 $generated@@378 $generated@@2)) (and (= (= ($generated@@374 $generated@@377) 0) (= $generated@@377 ($generated@@375 $generated@@378))) (=> (not (= ($generated@@374 $generated@@377) 0)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (< 0 ($generated ($generated@@81 $generated@@377 $generated@@379))))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert  (and (and (and (and (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (= ($generated@@1 ($generated@@382 $generated@@385 $generated@@386)) 29)) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= ($generated@@383 ($generated@@382 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@382 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= ($generated@@384 ($generated@@382 $generated@@389 $generated@@390)) $generated@@390)
 :pattern ( ($generated@@382 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@383 (type $generated@@391))))
(= (type ($generated@@380 $generated@@391)) ($generated@@76 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@391))
))) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= (type ($generated@@381 $generated@@393 $generated@@394)) ($generated@@382 $generated@@393 $generated@@394))
 :pattern ( ($generated@@381 $generated@@393 $generated@@394))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@T) ) (! (let (($generated@@397 (type $generated@@395)))
 (not ($generated@@0 ($generated@@81 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395))))
 :pattern ( (let (($generated@@397 (type $generated@@395)))
($generated@@81 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395)))
)))
(assert  (and (and (and (and (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (= ($generated@@1 ($generated@@400 $generated@@403 $generated@@404)) 30)) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= ($generated@@401 ($generated@@400 $generated@@405 $generated@@406)) $generated@@405)
 :pattern ( ($generated@@400 $generated@@405 $generated@@406))
))) (forall (($generated@@407 T@T) ($generated@@408 T@T) ) (! (= ($generated@@402 ($generated@@400 $generated@@407 $generated@@408)) $generated@@408)
 :pattern ( ($generated@@400 $generated@@407 $generated@@408))
))) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@401 (type $generated@@409))))
(= (type ($generated@@398 $generated@@409)) ($generated@@76 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@409))
))) (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (! (= (type ($generated@@399 $generated@@411 $generated@@412)) ($generated@@400 $generated@@411 $generated@@412))
 :pattern ( ($generated@@399 $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@T) ) (! (let (($generated@@415 (type $generated@@413)))
 (not ($generated@@0 ($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413))))
 :pattern ( (let (($generated@@415 (type $generated@@413)))
($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413)))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (= ($generated@@254 $generated@@416) (forall (($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@417) (and (<= 0 ($generated ($generated@@81 $generated@@416 $generated@@418))) (<= ($generated ($generated@@81 $generated@@416 $generated@@418)) ($generated@@374 $generated@@416))))
 :pattern ( ($generated@@81 $generated@@416 $generated@@418))
)))))
 :pattern ( ($generated@@254 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@384 (type $generated@@419))))
(let (($generated@@421 ($generated@@383 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@382 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@381 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@380 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@384 (type $generated@@424))))
(= (type ($generated@@423 $generated@@424)) ($generated@@76 $generated@@425 $generated@@4)))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@384 (type $generated@@426))))
(let (($generated@@428 ($generated@@383 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@382 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@381 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@427) ($generated@@0 ($generated@@81 ($generated@@423 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@423 $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@402 (type $generated@@430))))
(let (($generated@@432 ($generated@@401 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@400 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@399 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@430) $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@398 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@402 (type $generated@@435))))
(= (type ($generated@@434 $generated@@435)) ($generated@@76 $generated@@436 $generated@@4)))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@402 (type $generated@@437))))
(let (($generated@@439 ($generated@@401 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@400 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@399 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@438) ($generated@@0 ($generated@@81 ($generated@@434 $generated@@437) $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@434 $generated@@437))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@442) $generated@@64)) (= ($generated@@224 $generated@@441 ($generated@@253 $generated@@442)) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@441 $generated@@443)))) ($generated@@315 $generated@@443 $generated@@442))
 :pattern ( ($generated@@81 $generated@@441 $generated@@443))
))))
 :pattern ( ($generated@@224 $generated@@441 ($generated@@253 $generated@@442)))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (= (type $generated@@444) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@444 ($generated@@324 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@248) ($generated@@0 ($generated@@81 $generated@@444 $generated@@447))) ($generated@@341 $generated@@447 $generated@@445 $generated@@446))
 :pattern ( ($generated@@81 $generated@@444 $generated@@447))
))))
 :pattern ( ($generated@@74 $generated@@444 ($generated@@324 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@448) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@449) $generated@@64)) (= (type $generated@@450) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@448 ($generated@@329 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@248) ($generated@@0 ($generated@@81 $generated@@448 $generated@@451))) ($generated@@341 $generated@@451 $generated@@449 $generated@@450))
 :pattern ( ($generated@@81 $generated@@448 $generated@@451))
))))
 :pattern ( ($generated@@74 $generated@@448 ($generated@@329 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
(= ($generated ($generated@@81 ($generated@@375 $generated@@453) $generated@@452)) 0))
 :pattern ( (let (($generated@@453 (type $generated@@452)))
($generated@@81 ($generated@@375 $generated@@453) $generated@@452)))
)))
(assert  (and (and (forall (($generated@@457 T@U) ) (! (= (type ($generated@@454 $generated@@457)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@454 $generated@@457))
)) (forall (($generated@@458 T@T) ($generated@@459 T@U) ) (! (= (type ($generated@@455 $generated@@458 $generated@@459)) $generated@@458)
 :pattern ( ($generated@@455 $generated@@458 $generated@@459))
))) (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@384 (type $generated@@460))))
(let (($generated@@462 ($generated@@383 (type $generated@@460))))
(= (type ($generated@@456 $generated@@460)) ($generated@@76 $generated@@462 $generated@@461))))
 :pattern ( ($generated@@456 $generated@@460))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@464) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@454 $generated@@463) $generated@@464))  (and ($generated@@0 ($generated@@81 ($generated@@380 $generated@@463) ($generated@@246 ($generated@@455 $generated@@239 $generated@@464)))) (= ($generated@@81 ($generated@@456 $generated@@463) ($generated@@246 ($generated@@455 $generated@@239 $generated@@464))) ($generated@@247 ($generated@@455 $generated@@239 $generated@@464))))))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@463) $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@402 (type $generated@@468))))
(let (($generated@@470 ($generated@@401 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468)) ($generated@@76 $generated@@470 $generated@@469))))
 :pattern ( ($generated@@466 $generated@@468))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@472) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@465 $generated@@471) $generated@@472))  (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@471) ($generated@@246 ($generated@@455 $generated@@239 $generated@@472)))) (= ($generated@@81 ($generated@@466 $generated@@471) ($generated@@246 ($generated@@455 $generated@@239 $generated@@472))) ($generated@@247 ($generated@@455 $generated@@239 $generated@@472))))))
 :pattern ( ($generated@@81 ($generated@@465 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
(let (($generated@@476 ($generated@@383 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@382 $generated@@476 $generated@@475)) (= ($generated@@0 ($generated@@81 ($generated@@423 $generated@@473) $generated@@474)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@476) (and ($generated@@0 ($generated@@81 ($generated@@380 $generated@@473) $generated@@477)) (= $generated@@474 ($generated@@81 ($generated@@456 $generated@@473) $generated@@477))))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@473) $generated@@477))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@473) $generated@@477))
))))))
 :pattern ( ($generated@@81 ($generated@@423 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
(let (($generated@@481 ($generated@@401 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@400 $generated@@481 $generated@@480)) (= ($generated@@0 ($generated@@81 ($generated@@434 $generated@@478) $generated@@479)) (exists (($generated@@482 T@U) ) (!  (and (= (type $generated@@482) $generated@@481) (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@478) $generated@@482)) (= $generated@@479 ($generated@@81 ($generated@@466 $generated@@478) $generated@@482))))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@478) $generated@@482))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@478) $generated@@482))
))))))
 :pattern ( ($generated@@81 ($generated@@434 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@486) $generated@@490))) (and ($generated@@341 ($generated@@81 ($generated@@456 $generated@@486) $generated@@490) $generated@@488 $generated@@489) ($generated@@341 $generated@@490 $generated@@487 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@486) $generated@@490))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@486) $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@494) $generated@@498))) (and ($generated@@341 ($generated@@81 ($generated@@466 $generated@@494) $generated@@498) $generated@@496 $generated@@497) ($generated@@341 $generated@@498 $generated@@495 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@494) $generated@@498))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@494) $generated@@498))
))))
 :pattern ( ($generated@@74 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@499) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@500) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@501) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@499 $generated@@501))) (and ($generated@@220 $generated@@499 $generated@@500) ($generated@@220 $generated@@500 $generated@@501))) ($generated@@220 $generated@@499 $generated@@501))
 :pattern ( ($generated@@220 $generated@@499 $generated@@500) ($generated@@220 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@T) ) (! (= (type ($generated@@502 $generated@@503)) ($generated@@76 $generated@@503 $generated@@4))
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@402 (type $generated@@504))))
(let (($generated@@506 ($generated@@401 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@400 $generated@@506 $generated@@505)) (= (= $generated@@504 ($generated@@399 $generated@@506 $generated@@505)) (= ($generated@@398 $generated@@504) ($generated@@502 $generated@@506))))))
 :pattern ( ($generated@@398 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@402 (type $generated@@507))))
(let (($generated@@509 ($generated@@401 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@400 $generated@@509 $generated@@508)) (= (= $generated@@507 ($generated@@399 $generated@@509 $generated@@508)) (= ($generated@@434 $generated@@507) ($generated@@502 $generated@@508))))))
 :pattern ( ($generated@@434 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@402 (type $generated@@510))))
(let (($generated@@512 ($generated@@401 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@400 $generated@@512 $generated@@511)) (= (= $generated@@510 ($generated@@399 $generated@@512 $generated@@511)) (= ($generated@@465 $generated@@510) ($generated@@502 $generated@@248))))))
 :pattern ( ($generated@@465 $generated@@510))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@384 (type $generated@@513))))
(let (($generated@@515 ($generated@@383 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@382 $generated@@515 $generated@@514)) (or (= $generated@@513 ($generated@@381 $generated@@515 $generated@@514)) (exists (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (and (and (= (type $generated@@516) $generated@@248) (= (type $generated@@517) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@454 $generated@@513) ($generated@@361 ($generated@@314 $generated@@516 $generated@@517)))))
 :no-pattern (type $generated@@516)
 :no-pattern (type $generated@@517)
 :no-pattern ($generated $generated@@516)
 :no-pattern ($generated@@0 $generated@@516)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
))))))
 :pattern ( ($generated@@454 $generated@@513))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@402 (type $generated@@518))))
(let (($generated@@520 ($generated@@401 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@400 $generated@@520 $generated@@519)) (or (= $generated@@518 ($generated@@399 $generated@@520 $generated@@519)) (exists (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (and (and (= (type $generated@@521) $generated@@248) (= (type $generated@@522) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@465 $generated@@518) ($generated@@361 ($generated@@314 $generated@@521 $generated@@522)))))
 :no-pattern (type $generated@@521)
 :no-pattern (type $generated@@522)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
))))))
 :pattern ( ($generated@@465 $generated@@518))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@248) ($generated@@315 $generated@@523 $generated@@46)) (and (= ($generated@@361 ($generated@@455 $generated@@2 $generated@@523)) $generated@@523) ($generated@@224 ($generated@@455 $generated@@2 $generated@@523) $generated@@46)))
 :pattern ( ($generated@@315 $generated@@523 $generated@@46))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@248) ($generated@@315 $generated@@524 $generated@@47)) (and (= ($generated@@361 ($generated@@455 $generated@@3 $generated@@524)) $generated@@524) ($generated@@224 ($generated@@455 $generated@@3 $generated@@524) $generated@@47)))
 :pattern ( ($generated@@315 $generated@@524 $generated@@47))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@248) ($generated@@315 $generated@@525 $generated@@44)) (and (= ($generated@@361 ($generated@@455 $generated@@4 $generated@@525)) $generated@@525) ($generated@@224 ($generated@@455 $generated@@4 $generated@@525) $generated@@44)))
 :pattern ( ($generated@@315 $generated@@525 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@526) 31))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@248) ($generated@@315 $generated@@527 $generated@@45)) (and (= ($generated@@361 ($generated@@455 $generated@@526 $generated@@527)) $generated@@527) ($generated@@224 ($generated@@455 $generated@@526 $generated@@527) $generated@@45)))
 :pattern ( ($generated@@315 $generated@@527 $generated@@45))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@315 ($generated@@361 $generated@@528) $generated@@529) ($generated@@224 $generated@@528 $generated@@529)))
 :pattern ( ($generated@@315 ($generated@@361 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@79 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@76 $generated@@531 $generated@@2)) (<= 0 ($generated@@374 $generated@@530))))
 :pattern ( ($generated@@374 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@356 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@355 $generated@@533)) (<= 0 ($generated@@354 $generated@@532))))
 :pattern ( ($generated@@354 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= ($generated@@534 ($generated@@483 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@483 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@538 ($generated@@483 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@483 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= ($generated@@72 ($generated@@483 $generated@@542 $generated@@543)) $generated@@58))
 :pattern ( ($generated@@483 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@491 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@491 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@491 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@491 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@64) (= (type $generated@@553) $generated@@64)) (= ($generated@@72 ($generated@@491 $generated@@552 $generated@@553)) $generated@@59))
 :pattern ( ($generated@@491 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@248) (= (type $generated@@555) $generated@@248)) (= ($generated@@347 ($generated@@314 $generated@@554 $generated@@555)) $generated@@61))
 :pattern ( ($generated@@314 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@64) (= (type $generated@@559) $generated@@64)) (= ($generated@@556 ($generated@@238 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@238 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@64)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@64) (= (type $generated@@563) $generated@@64)) (= ($generated@@560 ($generated@@238 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@238 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@248) (= (type $generated@@565) $generated@@248)) (= ($generated@@246 ($generated@@314 $generated@@564 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@314 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@248) (= (type $generated@@567) $generated@@248)) (= ($generated@@247 ($generated@@314 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@314 $generated@@566 $generated@@567))
)))
(assert  (and (forall (($generated@@570 T@U) ) (! (= (type ($generated@@568 $generated@@570)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@570))
)) (forall (($generated@@571 T@U) ($generated@@572 Int) ) (! (let (($generated@@573 ($generated@@356 (type $generated@@571))))
(= (type ($generated@@569 $generated@@571 $generated@@572)) $generated@@573))
 :pattern ( ($generated@@569 $generated@@571 $generated@@572))
))))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@355 $generated@@248)) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@574 ($generated@@568 $generated@@575) $generated@@576) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@354 $generated@@574))) ($generated@@341 ($generated@@569 $generated@@574 $generated@@577) $generated@@575 $generated@@576))
 :pattern ( ($generated@@569 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@74 $generated@@574 ($generated@@568 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@578 ($generated@@75 $generated@@579)) $generated@@579)
 :pattern ( ($generated@@75 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@324 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@324 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@324 $generated@@583)) $generated@@54))
 :pattern ( ($generated@@324 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@64)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@64) (= ($generated@@584 ($generated@@329 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@329 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@64) (= ($generated@@72 ($generated@@329 $generated@@587)) $generated@@55))
 :pattern ( ($generated@@329 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@64)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@64) (= ($generated@@588 ($generated@@253 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@253 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@591)) $generated@@56))
 :pattern ( ($generated@@253 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@64)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@64) (= ($generated@@592 ($generated@@568 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@568 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@64) (= ($generated@@72 ($generated@@568 $generated@@595)) $generated@@57))
 :pattern ( ($generated@@568 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
(= ($generated@@455 $generated@@597 ($generated@@361 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@361 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) (= ($generated@@224 $generated@@598 ($generated@@483 $generated@@599 $generated@@600)) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@598) $generated@@601))) (and ($generated@@315 ($generated@@81 ($generated@@456 $generated@@598) $generated@@601) $generated@@600) ($generated@@315 $generated@@601 $generated@@599)))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@598) $generated@@601))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@598) $generated@@601))
))))
 :pattern ( ($generated@@224 $generated@@598 ($generated@@483 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) (= ($generated@@224 $generated@@602 ($generated@@491 $generated@@603 $generated@@604)) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@602) $generated@@605))) (and ($generated@@315 ($generated@@81 ($generated@@466 $generated@@602) $generated@@605) $generated@@604) ($generated@@315 $generated@@605 $generated@@603)))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@602) $generated@@605))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@602) $generated@@605))
))))
 :pattern ( ($generated@@224 $generated@@602 ($generated@@491 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@248) (= (type $generated@@609) $generated@@248)) (< ($generated@@606 $generated@@608) ($generated@@607 ($generated@@314 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@314 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@248) (= (type $generated@@611) $generated@@248)) (< ($generated@@606 $generated@@611) ($generated@@607 ($generated@@314 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@314 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@248) (= (type $generated@@613) $generated@@64)) (= (type $generated@@614) $generated@@64)) ($generated@@315 $generated@@612 ($generated@@483 $generated@@613 $generated@@614))) (and (= ($generated@@361 ($generated@@455 ($generated@@382 $generated@@248 $generated@@248) $generated@@612)) $generated@@612) ($generated@@224 ($generated@@455 ($generated@@382 $generated@@248 $generated@@248) $generated@@612) ($generated@@483 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@315 $generated@@612 ($generated@@483 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@248) (= (type $generated@@616) $generated@@64)) (= (type $generated@@617) $generated@@64)) ($generated@@315 $generated@@615 ($generated@@491 $generated@@616 $generated@@617))) (and (= ($generated@@361 ($generated@@455 ($generated@@400 $generated@@248 $generated@@248) $generated@@615)) $generated@@615) ($generated@@224 ($generated@@455 ($generated@@400 $generated@@248 $generated@@248) $generated@@615) ($generated@@491 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@315 $generated@@615 ($generated@@491 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@64) (= (type $generated@@619) $generated@@64)) (= (type $generated@@620) $generated@@248)) ($generated@@315 $generated@@620 ($generated@@238 $generated@@618 $generated@@619))) (and (= ($generated@@361 ($generated@@455 $generated@@239 $generated@@620)) $generated@@620) ($generated@@224 ($generated@@455 $generated@@239 $generated@@620) ($generated@@238 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@315 $generated@@620 ($generated@@238 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
 (not ($generated@@0 ($generated@@81 ($generated@@502 $generated@@622) $generated@@621))))
 :pattern ( (let (($generated@@622 (type $generated@@621)))
($generated@@81 ($generated@@502 $generated@@622) $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@69)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) $generated@@64)) (and (= ($generated@@72 ($generated@@238 $generated@@625 $generated@@626)) $generated@@62) (= ($generated@@623 ($generated@@238 $generated@@625 $generated@@626)) $generated@@63)))
 :pattern ( ($generated@@238 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@239) (= ($generated@@606 ($generated@@361 $generated@@627)) ($generated@@607 $generated@@627)))
 :pattern ( ($generated@@606 ($generated@@361 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@248) ($generated@@315 $generated@@628 ($generated@@75 0))) (and (= ($generated@@361 ($generated@@455 $generated@@2 $generated@@628)) $generated@@628) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@628) ($generated@@75 0))))
 :pattern ( ($generated@@315 $generated@@628 ($generated@@75 0)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@248) ($generated@@315 $generated@@629 ($generated@@75 1))) (and (= ($generated@@361 ($generated@@455 $generated@@132 $generated@@629)) $generated@@629) ($generated@@224 ($generated@@455 $generated@@132 $generated@@629) ($generated@@75 1))))
 :pattern ( ($generated@@315 $generated@@629 ($generated@@75 1)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@248) (= (type $generated@@631) $generated@@64)) ($generated@@315 $generated@@630 ($generated@@324 $generated@@631))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@630)) $generated@@630) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@630) ($generated@@324 $generated@@631))))
 :pattern ( ($generated@@315 $generated@@630 ($generated@@324 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@248) (= (type $generated@@633) $generated@@64)) ($generated@@315 $generated@@632 ($generated@@329 $generated@@633))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@632)) $generated@@632) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@632) ($generated@@329 $generated@@633))))
 :pattern ( ($generated@@315 $generated@@632 ($generated@@329 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@248) (= (type $generated@@635) $generated@@64)) ($generated@@315 $generated@@634 ($generated@@253 $generated@@635))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@2) $generated@@634)) $generated@@634) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@2) $generated@@634) ($generated@@253 $generated@@635))))
 :pattern ( ($generated@@315 $generated@@634 ($generated@@253 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@248) (= (type $generated@@637) $generated@@64)) ($generated@@315 $generated@@636 ($generated@@568 $generated@@637))) (and (= ($generated@@361 ($generated@@455 ($generated@@355 $generated@@248) $generated@@636)) $generated@@636) ($generated@@224 ($generated@@455 ($generated@@355 $generated@@248) $generated@@636) ($generated@@568 $generated@@637))))
 :pattern ( ($generated@@315 $generated@@636 ($generated@@568 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@248) ($generated@@315 $generated@@638 ($generated@@75 2))) (and (= ($generated@@361 ($generated@@455 $generated@@140 $generated@@638)) $generated@@638) ($generated@@224 ($generated@@455 $generated@@140 $generated@@638) ($generated@@75 2))))
 :pattern ( ($generated@@315 $generated@@638 ($generated@@75 2)))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@248) ($generated@@315 $generated@@639 ($generated@@75 3))) (and (= ($generated@@361 ($generated@@455 $generated@@148 $generated@@639)) $generated@@639) ($generated@@224 ($generated@@455 $generated@@148 $generated@@639) ($generated@@75 3))))
 :pattern ( ($generated@@315 $generated@@639 ($generated@@75 3)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@248) ($generated@@315 $generated@@640 ($generated@@75 4))) (and (= ($generated@@361 ($generated@@455 $generated@@156 $generated@@640)) $generated@@640) ($generated@@224 ($generated@@455 $generated@@156 $generated@@640) ($generated@@75 4))))
 :pattern ( ($generated@@315 $generated@@640 ($generated@@75 4)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@248) ($generated@@315 $generated@@641 ($generated@@75 7))) (and (= ($generated@@361 ($generated@@455 $generated@@164 $generated@@641)) $generated@@641) ($generated@@224 ($generated@@455 $generated@@164 $generated@@641) ($generated@@75 7))))
 :pattern ( ($generated@@315 $generated@@641 ($generated@@75 7)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@248) ($generated@@315 $generated@@642 ($generated@@75 8))) (and (= ($generated@@361 ($generated@@455 $generated@@172 $generated@@642)) $generated@@642) ($generated@@224 ($generated@@455 $generated@@172 $generated@@642) ($generated@@75 8))))
 :pattern ( ($generated@@315 $generated@@642 ($generated@@75 8)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@248) ($generated@@315 $generated@@643 ($generated@@75 15))) (and (= ($generated@@361 ($generated@@455 $generated@@180 $generated@@643)) $generated@@643) ($generated@@224 ($generated@@455 $generated@@180 $generated@@643) ($generated@@75 15))))
 :pattern ( ($generated@@315 $generated@@643 ($generated@@75 15)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@248) ($generated@@315 $generated@@644 ($generated@@75 16))) (and (= ($generated@@361 ($generated@@455 $generated@@188 $generated@@644)) $generated@@644) ($generated@@224 ($generated@@455 $generated@@188 $generated@@644) ($generated@@75 16))))
 :pattern ( ($generated@@315 $generated@@644 ($generated@@75 16)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@248) ($generated@@315 $generated@@645 ($generated@@75 32))) (and (= ($generated@@361 ($generated@@455 $generated@@196 $generated@@645)) $generated@@645) ($generated@@224 ($generated@@455 $generated@@196 $generated@@645) ($generated@@75 32))))
 :pattern ( ($generated@@315 $generated@@645 ($generated@@75 32)))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@248) ($generated@@315 $generated@@646 ($generated@@75 53))) (and (= ($generated@@361 ($generated@@455 $generated@@204 $generated@@646)) $generated@@646) ($generated@@224 ($generated@@455 $generated@@204 $generated@@646) ($generated@@75 53))))
 :pattern ( ($generated@@315 $generated@@646 ($generated@@75 53)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@248) ($generated@@315 $generated@@647 ($generated@@75 100))) (and (= ($generated@@361 ($generated@@455 $generated@@212 $generated@@647)) $generated@@647) ($generated@@224 ($generated@@455 $generated@@212 $generated@@647) ($generated@@75 100))))
 :pattern ( ($generated@@315 $generated@@647 ($generated@@75 100)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@649) $generated@@64)) (= (type $generated@@650) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@648 ($generated@@253 $generated@@649) $generated@@650) (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@648 $generated@@651)))) ($generated@@341 $generated@@651 $generated@@649 $generated@@650))
 :pattern ( ($generated@@81 $generated@@648 $generated@@651))
))))
 :pattern ( ($generated@@74 $generated@@648 ($generated@@253 $generated@@649) $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@239) (= (type $generated@@653) $generated@@64)) (= (type $generated@@654) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@340 $generated@@654) (and ($generated@@237 $generated@@652) (exists (($generated@@655 T@U) ) (!  (and (= (type $generated@@655) $generated@@64) ($generated@@74 $generated@@652 ($generated@@238 $generated@@653 $generated@@655) $generated@@654))
 :pattern ( ($generated@@74 $generated@@652 ($generated@@238 $generated@@653 $generated@@655) $generated@@654))
))))) ($generated@@341 ($generated@@246 $generated@@652) $generated@@653 $generated@@654))
 :pattern ( ($generated@@341 ($generated@@246 $generated@@652) $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@239) (= (type $generated@@657) $generated@@64)) (= (type $generated@@658) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@340 $generated@@658) (and ($generated@@237 $generated@@656) (exists (($generated@@659 T@U) ) (!  (and (= (type $generated@@659) $generated@@64) ($generated@@74 $generated@@656 ($generated@@238 $generated@@659 $generated@@657) $generated@@658))
 :pattern ( ($generated@@74 $generated@@656 ($generated@@238 $generated@@659 $generated@@657) $generated@@658))
))))) ($generated@@341 ($generated@@247 $generated@@656) $generated@@657 $generated@@658))
 :pattern ( ($generated@@341 ($generated@@247 $generated@@656) $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@248) (= (type $generated@@661) $generated@@248)) (= ($generated@@314 ($generated@@336 $generated@@660) ($generated@@336 $generated@@661)) ($generated@@336 ($generated@@314 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@314 ($generated@@336 $generated@@660) ($generated@@336 $generated@@661)))
)))
(assert (forall (($generated@@662 Int) ) (! (= ($generated@@361 ($generated@@8 ($generated@@334 $generated@@662))) ($generated@@336 ($generated@@361 ($generated@@8 $generated@@662))))
 :pattern ( ($generated@@361 ($generated@@8 ($generated@@334 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@361 ($generated@@336 $generated@@663)) ($generated@@336 ($generated@@361 $generated@@663)))
 :pattern ( ($generated@@361 ($generated@@336 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@356 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@355 $generated@@665)) (= ($generated@@354 $generated@@664) 0)) (= $generated@@664 ($generated@@353 $generated@@665))))
 :pattern ( ($generated@@354 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@76 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@374 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@374 $generated@@666) ($generated ($generated@@81 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@374 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@671) $generated@@2)) ($generated@@74 $generated@@671 $generated@@46 $generated@@670))
 :pattern ( ($generated@@74 $generated@@671 $generated@@46 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@673) $generated@@3)) ($generated@@74 $generated@@673 $generated@@47 $generated@@672))
 :pattern ( ($generated@@74 $generated@@673 $generated@@47 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@675) $generated@@4)) ($generated@@74 $generated@@675 $generated@@44 $generated@@674))
 :pattern ( ($generated@@74 $generated@@675 $generated@@44 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@677) $generated@@526)) ($generated@@74 $generated@@677 $generated@@45 $generated@@676))
 :pattern ( ($generated@@74 $generated@@677 $generated@@45 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@679) $generated@@248)) ($generated@@74 $generated@@679 $generated@@48 $generated@@678))
 :pattern ( ($generated@@74 $generated@@679 $generated@@48 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@355 $generated@@248)) (= (type $generated@@681) $generated@@64)) (= ($generated@@224 $generated@@680 ($generated@@568 $generated@@681)) (forall (($generated@@682 Int) ) (!  (=> (and (<= 0 $generated@@682) (< $generated@@682 ($generated@@354 $generated@@680))) ($generated@@315 ($generated@@569 $generated@@680 $generated@@682) $generated@@681))
 :pattern ( ($generated@@569 $generated@@680 $generated@@682))
))))
 :pattern ( ($generated@@224 $generated@@680 ($generated@@568 $generated@@681)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 Int) ) (!  (=> (= (type $generated@@684) ($generated@@355 $generated@@248)) (=> (and (<= 0 $generated@@685) (< $generated@@685 ($generated@@354 $generated@@684))) (< ($generated@@607 ($generated@@455 $generated@@239 ($generated@@569 $generated@@684 $generated@@685))) ($generated@@683 $generated@@684))))
 :pattern ( ($generated@@607 ($generated@@455 $generated@@239 ($generated@@569 $generated@@684 $generated@@685))))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@687) $generated@@64)) (= (type $generated@@688) $generated@@64)) ($generated@@224 $generated@@686 ($generated@@483 $generated@@687 $generated@@688))) (and (and ($generated@@224 ($generated@@380 $generated@@686) ($generated@@324 $generated@@687)) ($generated@@224 ($generated@@423 $generated@@686) ($generated@@324 $generated@@688))) ($generated@@224 ($generated@@454 $generated@@686) ($generated@@324 ($generated@@238 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@224 $generated@@686 ($generated@@483 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@690) $generated@@64)) (= (type $generated@@691) $generated@@64)) ($generated@@224 $generated@@689 ($generated@@491 $generated@@690 $generated@@691))) (and (and ($generated@@224 ($generated@@398 $generated@@689) ($generated@@329 $generated@@690)) ($generated@@224 ($generated@@434 $generated@@689) ($generated@@329 $generated@@691))) ($generated@@224 ($generated@@465 $generated@@689) ($generated@@329 ($generated@@238 $generated@@690 $generated@@691)))))
 :pattern ( ($generated@@224 $generated@@689 ($generated@@491 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@2) ($generated@@224 $generated@@692 $generated@@46))
 :pattern ( ($generated@@224 $generated@@692 $generated@@46))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@3) ($generated@@224 $generated@@693 $generated@@47))
 :pattern ( ($generated@@224 $generated@@693 $generated@@47))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@4) ($generated@@224 $generated@@694 $generated@@44))
 :pattern ( ($generated@@224 $generated@@694 $generated@@44))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@526) ($generated@@224 $generated@@695 $generated@@45))
 :pattern ( ($generated@@224 $generated@@695 $generated@@45))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@248) ($generated@@224 $generated@@696 $generated@@48))
 :pattern ( ($generated@@224 $generated@@696 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 (T@U) Bool)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () Int)
(assert  (and (and (and (= (type $generated@@697) ($generated@@260 $generated@@77 $generated@@4)) (= (type $generated@@698) $generated@@77)) (= (type $generated@@699) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@704) ($generated@@355 $generated@@248))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@706  (=> (= $generated@@697 ($generated@@259 $generated@@698 $generated@@699 $generated@@60 false)) (=> (and (= $generated@@700 ($generated@@334 0)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@334 0) $generated@@700) (< $generated@@700 18446744073709551616))))))
(let (($generated@@707  (=> (and ($generated@@340 $generated@@699) ($generated@@701 $generated@@699)) (=> (and (and (and (<= ($generated@@334 0) $generated@@702) (< $generated@@702 18446744073709551616)) (and (<= ($generated@@334 0) $generated@@703) (< $generated@@703 18446744073709551616))) (and (and ($generated@@224 $generated@@704 ($generated@@568 $generated@@45)) ($generated@@74 $generated@@704 ($generated@@568 $generated@@45) $generated@@699)) (and (= 1 $generated@@705) (= (ControlFlow 0 3) 2)))) $generated@@706))))
$generated@@707)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 () T@T)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 () T@T)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@259 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U T@U) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@330 (Int) Int)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) Bool)
(declare-fun $generated@@337 (T@U T@U T@U) Bool)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@349 (T@T) T@U)
(declare-fun $generated@@350 (T@U) Int)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@362 (T@U) Int)
(declare-fun $generated@@363 (T@T) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@T) T@U)
(declare-fun $generated@@370 (T@T T@T) T@T)
(declare-fun $generated@@371 (T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@T) T@U)
(declare-fun $generated@@388 (T@T T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@T T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@471 (T@U T@U) T@U)
(declare-fun $generated@@479 (T@U T@U) T@U)
(declare-fun $generated@@487 (Int Int) Int)
(declare-fun $generated@@490 (T@T) T@U)
(declare-fun $generated@@514 () T@T)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@557 (T@U Int) T@U)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@611 (Int Int) Int)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@674 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@2) ($generated@@220 $generated@@221 ($generated@@75 0)))
 :pattern ( ($generated@@220 $generated@@221 ($generated@@75 0)))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (= (type $generated@@222) $generated@@132) ($generated@@220 $generated@@222 ($generated@@75 1)))
 :pattern ( ($generated@@220 $generated@@222 ($generated@@75 1)))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@140) ($generated@@220 $generated@@223 ($generated@@75 2)))
 :pattern ( ($generated@@220 $generated@@223 ($generated@@75 2)))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (= (type $generated@@224) $generated@@148) ($generated@@220 $generated@@224 ($generated@@75 3)))
 :pattern ( ($generated@@220 $generated@@224 ($generated@@75 3)))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@156) ($generated@@220 $generated@@225 ($generated@@75 4)))
 :pattern ( ($generated@@220 $generated@@225 ($generated@@75 4)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@164) ($generated@@220 $generated@@226 ($generated@@75 7)))
 :pattern ( ($generated@@220 $generated@@226 ($generated@@75 7)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@172) ($generated@@220 $generated@@227 ($generated@@75 8)))
 :pattern ( ($generated@@220 $generated@@227 ($generated@@75 8)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@180) ($generated@@220 $generated@@228 ($generated@@75 15)))
 :pattern ( ($generated@@220 $generated@@228 ($generated@@75 15)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@188) ($generated@@220 $generated@@229 ($generated@@75 16)))
 :pattern ( ($generated@@220 $generated@@229 ($generated@@75 16)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@196) ($generated@@220 $generated@@230 ($generated@@75 32)))
 :pattern ( ($generated@@220 $generated@@230 ($generated@@75 32)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@204) ($generated@@220 $generated@@231 ($generated@@75 53)))
 :pattern ( ($generated@@220 $generated@@231 ($generated@@75 53)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@212) ($generated@@220 $generated@@232 ($generated@@75 100)))
 :pattern ( ($generated@@220 $generated@@232 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@235) 25) (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@64) (= (type $generated@@239) $generated@@64)) (= (type $generated@@240) $generated@@235)) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239))) ($generated@@233 $generated@@240))
 :pattern ( ($generated@@233 $generated@@240) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239)))
)))
(assert  (and (and (= ($generated@@1 $generated@@244) 26) (forall (($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@242 $generated@@245))
))) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@246)) $generated@@244)
 :pattern ( ($generated@@243 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@235) (= (type $generated@@248) $generated@@235)) true) (= ($generated@@241 $generated@@247 $generated@@248)  (and (= ($generated@@242 $generated@@247) ($generated@@242 $generated@@248)) (= ($generated@@243 $generated@@247) ($generated@@243 $generated@@248)))))
 :pattern ( ($generated@@241 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@249 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@253) $generated@@64)) ($generated@@220 $generated@@252 ($generated@@249 $generated@@253))) ($generated@@250 $generated@@252))
 :pattern ( ($generated@@220 $generated@@252 ($generated@@249 $generated@@253)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@260 $generated@@261)) 27)) (forall (($generated@@262 T@T) ($generated@@263 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@262 $generated@@263)) $generated@@262)
 :pattern ( ($generated@@256 $generated@@262 $generated@@263))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@264 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@256 $generated@@264 $generated@@265))
))) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@258 (type $generated@@266))))
(= (type ($generated@@254 $generated@@266 $generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@254 $generated@@266 $generated@@267 $generated@@268))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(let (($generated@@275 (type $generated@@271)))
(= (type ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273)) ($generated@@256 $generated@@275 $generated@@274))))
 :pattern ( ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273))
))) (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@258 (type $generated@@276))))
 (=> (= (type $generated@@279) $generated@@280) (= ($generated@@254 ($generated@@259 $generated@@276 $generated@@277 $generated@@278 $generated@@279) $generated@@277 $generated@@278) $generated@@279)))
 :weight 0
))) (and (and (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (or (= $generated@@283 $generated@@285) (= ($generated@@254 ($generated@@259 $generated@@282 $generated@@283 $generated@@284 $generated@@281) $generated@@285 $generated@@286) ($generated@@254 $generated@@282 $generated@@285 $generated@@286)))
 :weight 0
)) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (or (= $generated@@290 $generated@@292) (= ($generated@@254 ($generated@@259 $generated@@288 $generated@@289 $generated@@290 $generated@@287) $generated@@291 $generated@@292) ($generated@@254 $generated@@288 $generated@@291 $generated@@292)))
 :weight 0
))) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (or true (= ($generated@@254 ($generated@@259 $generated@@294 $generated@@295 $generated@@296 $generated@@293) $generated@@297 $generated@@298) ($generated@@254 $generated@@294 $generated@@297 $generated@@298)))
 :weight 0
)))) (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Bool) ) (! (= (type ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302)) ($generated@@256 $generated@@77 $generated@@4))
 :pattern ( ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ($generated@@307 T@U) ($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@67 (type $generated@@308))))
 (=> (and (and (and (and (= (type $generated@@303) $generated@@77) (= (type $generated@@304) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@305) ($generated@@66 $generated@@4))) (= (type $generated@@307) $generated@@77)) (= (type $generated@@308) ($generated@@66 $generated@@309))) (= ($generated@@0 ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))  (=> (and (not (= $generated@@307 $generated@@303)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@304 $generated@@307) $generated@@305))) $generated@@306))))
 :pattern ( ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (= (type ($generated@@310 $generated@@312 $generated@@313)) $generated@@235)
 :pattern ( ($generated@@310 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@64) (= (type $generated@@315) $generated@@64)) (= (type $generated@@316) $generated@@244)) (= (type $generated@@317) $generated@@244)) (= ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315))  (and ($generated@@311 $generated@@316 $generated@@314) ($generated@@311 $generated@@317 $generated@@315))))
 :pattern ( ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@235) (= (type $generated@@319) $generated@@235)) (= ($generated@@241 $generated@@318 $generated@@319) (= $generated@@318 $generated@@319)))
 :pattern ( ($generated@@241 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@64)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@323) $generated@@64)) (= ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@244) ($generated@@0 ($generated@@81 $generated@@322 $generated@@324))) ($generated@@311 $generated@@324 $generated@@323))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
))))
 :pattern ( ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@64)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@328) $generated@@64)) (= ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@244) ($generated@@0 ($generated@@81 $generated@@327 $generated@@329))) ($generated@@311 $generated@@329 $generated@@328))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)))
)))
(assert (forall (($generated@@331 Int) ) (! (= ($generated@@330 $generated@@331) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
(= (type ($generated@@332 $generated@@333)) $generated@@334))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (= ($generated@@332 $generated@@335) $generated@@335)
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@338) $generated@@64) (= (type $generated@@339) $generated@@64)) (= (type $generated@@340) $generated@@244)) (= (type $generated@@341) $generated@@244)) (= (type $generated@@342) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@336 $generated@@342)) (= ($generated@@74 ($generated@@310 $generated@@340 $generated@@341) ($generated@@234 $generated@@338 $generated@@339) $generated@@342)  (and ($generated@@337 $generated@@340 $generated@@338 $generated@@342) ($generated@@337 $generated@@341 $generated@@339 $generated@@342))))
 :pattern ( ($generated@@74 ($generated@@310 $generated@@340 $generated@@341) ($generated@@234 $generated@@338 $generated@@339) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@68)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@235) (= ($generated@@233 $generated@@345) (= ($generated@@343 $generated@@345) $generated@@61)))
 :pattern ( ($generated@@233 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@235) ($generated@@233 $generated@@346)) (exists (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (and (and (= (type $generated@@347) $generated@@244) (= (type $generated@@348) $generated@@244)) (= $generated@@346 ($generated@@310 $generated@@347 $generated@@348)))
 :no-pattern (type $generated@@347)
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
)))
 :pattern ( ($generated@@233 $generated@@346))
)))
(assert  (and (and (forall (($generated@@353 T@T) ) (= ($generated@@1 ($generated@@351 $generated@@353)) 28)) (forall (($generated@@354 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@351 $generated@@354))
))) (forall (($generated@@355 T@T) ) (! (= (type ($generated@@349 $generated@@355)) ($generated@@351 $generated@@355))
 :pattern ( ($generated@@349 $generated@@355))
))))
(assert (forall (($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@356)) 0)
 :pattern ( ($generated@@349 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@244)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@64) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@337 ($generated@@357 $generated@@359) $generated@@360 $generated@@361) ($generated@@74 $generated@@359 $generated@@360 $generated@@361)))
 :pattern ( ($generated@@337 ($generated@@357 $generated@@359) $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@364 T@T) ) (! (= (type ($generated@@363 $generated@@364)) ($generated@@76 $generated@@364 $generated@@2))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@79 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@76 $generated@@366 $generated@@2)) (and (= (= ($generated@@362 $generated@@365) 0) (= $generated@@365 ($generated@@363 $generated@@366))) (=> (not (= ($generated@@362 $generated@@365) 0)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367))))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert  (and (and (and (and (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (= ($generated@@1 ($generated@@370 $generated@@373 $generated@@374)) 29)) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@371 ($generated@@370 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@370 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@372 ($generated@@370 $generated@@377 $generated@@378)) $generated@@378)
 :pattern ( ($generated@@370 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@371 (type $generated@@379))))
(= (type ($generated@@368 $generated@@379)) ($generated@@76 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@379))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= (type ($generated@@369 $generated@@381 $generated@@382)) ($generated@@370 $generated@@381 $generated@@382))
 :pattern ( ($generated@@369 $generated@@381 $generated@@382))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@T) ) (! (let (($generated@@385 (type $generated@@383)))
 (not ($generated@@0 ($generated@@81 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383))))
 :pattern ( (let (($generated@@385 (type $generated@@383)))
($generated@@81 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383)))
)))
(assert  (and (and (and (and (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (= ($generated@@1 ($generated@@388 $generated@@391 $generated@@392)) 30)) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@389 ($generated@@388 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@388 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@390 ($generated@@388 $generated@@395 $generated@@396)) $generated@@396)
 :pattern ( ($generated@@388 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@389 (type $generated@@397))))
(= (type ($generated@@386 $generated@@397)) ($generated@@76 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@397))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= (type ($generated@@387 $generated@@399 $generated@@400)) ($generated@@388 $generated@@399 $generated@@400))
 :pattern ( ($generated@@387 $generated@@399 $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@T) ) (! (let (($generated@@403 (type $generated@@401)))
 (not ($generated@@0 ($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401))))
 :pattern ( (let (($generated@@403 (type $generated@@401)))
($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401)))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@79 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@76 $generated@@405 $generated@@2)) (= ($generated@@250 $generated@@404) (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@405) (and (<= 0 ($generated ($generated@@81 $generated@@404 $generated@@406))) (<= ($generated ($generated@@81 $generated@@404 $generated@@406)) ($generated@@362 $generated@@404))))
 :pattern ( ($generated@@81 $generated@@404 $generated@@406))
)))))
 :pattern ( ($generated@@250 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@372 (type $generated@@407))))
(let (($generated@@409 ($generated@@371 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@370 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@369 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@368 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@372 (type $generated@@412))))
(= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@413 $generated@@4)))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@372 (type $generated@@414))))
(let (($generated@@416 ($generated@@371 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@370 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@369 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@415) ($generated@@0 ($generated@@81 ($generated@@411 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@411 $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@390 (type $generated@@418))))
(let (($generated@@420 ($generated@@389 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@388 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@387 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@386 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@390 (type $generated@@423))))
(= (type ($generated@@422 $generated@@423)) ($generated@@76 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@390 (type $generated@@425))))
(let (($generated@@427 ($generated@@389 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@388 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@387 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@426) ($generated@@0 ($generated@@81 ($generated@@422 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@422 $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@430) $generated@@64)) (= ($generated@@220 $generated@@429 ($generated@@249 $generated@@430)) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@429 $generated@@431)))) ($generated@@311 $generated@@431 $generated@@430))
 :pattern ( ($generated@@81 $generated@@429 $generated@@431))
))))
 :pattern ( ($generated@@220 $generated@@429 ($generated@@249 $generated@@430)))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@432 ($generated@@320 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@244) ($generated@@0 ($generated@@81 $generated@@432 $generated@@435))) ($generated@@337 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@81 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@74 $generated@@432 ($generated@@320 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (= (type $generated@@436) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@437) $generated@@64)) (= (type $generated@@438) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@436 ($generated@@325 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@244) ($generated@@0 ($generated@@81 $generated@@436 $generated@@439))) ($generated@@337 $generated@@439 $generated@@437 $generated@@438))
 :pattern ( ($generated@@81 $generated@@436 $generated@@439))
))))
 :pattern ( ($generated@@74 $generated@@436 ($generated@@325 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(= ($generated ($generated@@81 ($generated@@363 $generated@@441) $generated@@440)) 0))
 :pattern ( (let (($generated@@441 (type $generated@@440)))
($generated@@81 ($generated@@363 $generated@@441) $generated@@440)))
)))
(assert  (and (and (forall (($generated@@445 T@U) ) (! (= (type ($generated@@442 $generated@@445)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@442 $generated@@445))
)) (forall (($generated@@446 T@T) ($generated@@447 T@U) ) (! (= (type ($generated@@443 $generated@@446 $generated@@447)) $generated@@446)
 :pattern ( ($generated@@443 $generated@@446 $generated@@447))
))) (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@372 (type $generated@@448))))
(let (($generated@@450 ($generated@@371 (type $generated@@448))))
(= (type ($generated@@444 $generated@@448)) ($generated@@76 $generated@@450 $generated@@449))))
 :pattern ( ($generated@@444 $generated@@448))
))))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@452) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@442 $generated@@451) $generated@@452))  (and ($generated@@0 ($generated@@81 ($generated@@368 $generated@@451) ($generated@@242 ($generated@@443 $generated@@235 $generated@@452)))) (= ($generated@@81 ($generated@@444 $generated@@451) ($generated@@242 ($generated@@443 $generated@@235 $generated@@452))) ($generated@@243 ($generated@@443 $generated@@235 $generated@@452))))))
 :pattern ( ($generated@@81 ($generated@@442 $generated@@451) $generated@@452))
)))
(assert  (and (forall (($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@455)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@453 $generated@@455))
)) (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@390 (type $generated@@456))))
(let (($generated@@458 ($generated@@389 (type $generated@@456))))
(= (type ($generated@@454 $generated@@456)) ($generated@@76 $generated@@458 $generated@@457))))
 :pattern ( ($generated@@454 $generated@@456))
))))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@460) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@453 $generated@@459) $generated@@460))  (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@459) ($generated@@242 ($generated@@443 $generated@@235 $generated@@460)))) (= ($generated@@81 ($generated@@454 $generated@@459) ($generated@@242 ($generated@@443 $generated@@235 $generated@@460))) ($generated@@243 ($generated@@443 $generated@@235 $generated@@460))))))
 :pattern ( ($generated@@81 ($generated@@453 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@462)))
(let (($generated@@464 ($generated@@371 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@370 $generated@@464 $generated@@463)) (= ($generated@@0 ($generated@@81 ($generated@@411 $generated@@461) $generated@@462)) (exists (($generated@@465 T@U) ) (!  (and (= (type $generated@@465) $generated@@464) (and ($generated@@0 ($generated@@81 ($generated@@368 $generated@@461) $generated@@465)) (= $generated@@462 ($generated@@81 ($generated@@444 $generated@@461) $generated@@465))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@461) $generated@@465))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@461) $generated@@465))
))))))
 :pattern ( ($generated@@81 ($generated@@411 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 (type $generated@@467)))
(let (($generated@@469 ($generated@@389 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@388 $generated@@469 $generated@@468)) (= ($generated@@0 ($generated@@81 ($generated@@422 $generated@@466) $generated@@467)) (exists (($generated@@470 T@U) ) (!  (and (= (type $generated@@470) $generated@@469) (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@466) $generated@@470)) (= $generated@@467 ($generated@@81 ($generated@@454 $generated@@466) $generated@@470))))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@466) $generated@@470))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@466) $generated@@470))
))))))
 :pattern ( ($generated@@81 ($generated@@422 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (and (= (type $generated@@474) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@475) $generated@@64)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477) (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@474) $generated@@478))) (and ($generated@@337 ($generated@@81 ($generated@@444 $generated@@474) $generated@@478) $generated@@476 $generated@@477) ($generated@@337 $generated@@478 $generated@@475 $generated@@477)))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@474) $generated@@478))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@474) $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (= (type $generated@@482) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@482) $generated@@486))) (and ($generated@@337 ($generated@@81 ($generated@@454 $generated@@482) $generated@@486) $generated@@484 $generated@@485) ($generated@@337 $generated@@486 $generated@@483 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@482) $generated@@486))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@482) $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ($generated@@489 Int) ) (! (= ($generated@@487 $generated@@488 $generated@@489) (div $generated@@488 $generated@@489))
 :pattern ( ($generated@@487 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@T) ) (! (= (type ($generated@@490 $generated@@491)) ($generated@@76 $generated@@491 $generated@@4))
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@390 (type $generated@@492))))
(let (($generated@@494 ($generated@@389 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@388 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@387 $generated@@494 $generated@@493)) (= ($generated@@386 $generated@@492) ($generated@@490 $generated@@494))))))
 :pattern ( ($generated@@386 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@390 (type $generated@@495))))
(let (($generated@@497 ($generated@@389 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@388 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@387 $generated@@497 $generated@@496)) (= ($generated@@422 $generated@@495) ($generated@@490 $generated@@496))))))
 :pattern ( ($generated@@422 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@390 (type $generated@@498))))
(let (($generated@@500 ($generated@@389 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@388 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@387 $generated@@500 $generated@@499)) (= ($generated@@453 $generated@@498) ($generated@@490 $generated@@244))))))
 :pattern ( ($generated@@453 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@372 (type $generated@@501))))
(let (($generated@@503 ($generated@@371 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@370 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@369 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@244) (= (type $generated@@505) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@442 $generated@@501) ($generated@@357 ($generated@@310 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@442 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@390 (type $generated@@506))))
(let (($generated@@508 ($generated@@389 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@388 $generated@@508 $generated@@507)) (or (= $generated@@506 ($generated@@387 $generated@@508 $generated@@507)) (exists (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (and (and (= (type $generated@@509) $generated@@244) (= (type $generated@@510) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@453 $generated@@506) ($generated@@357 ($generated@@310 $generated@@509 $generated@@510)))))
 :no-pattern (type $generated@@509)
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@453 $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@244) ($generated@@311 $generated@@511 $generated@@46)) (and (= ($generated@@357 ($generated@@443 $generated@@2 $generated@@511)) $generated@@511) ($generated@@220 ($generated@@443 $generated@@2 $generated@@511) $generated@@46)))
 :pattern ( ($generated@@311 $generated@@511 $generated@@46))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@244) ($generated@@311 $generated@@512 $generated@@47)) (and (= ($generated@@357 ($generated@@443 $generated@@3 $generated@@512)) $generated@@512) ($generated@@220 ($generated@@443 $generated@@3 $generated@@512) $generated@@47)))
 :pattern ( ($generated@@311 $generated@@512 $generated@@47))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@244) ($generated@@311 $generated@@513 $generated@@44)) (and (= ($generated@@357 ($generated@@443 $generated@@4 $generated@@513)) $generated@@513) ($generated@@220 ($generated@@443 $generated@@4 $generated@@513) $generated@@44)))
 :pattern ( ($generated@@311 $generated@@513 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@514) 31))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@244) ($generated@@311 $generated@@515 $generated@@45)) (and (= ($generated@@357 ($generated@@443 $generated@@514 $generated@@515)) $generated@@515) ($generated@@220 ($generated@@443 $generated@@514 $generated@@515) $generated@@45)))
 :pattern ( ($generated@@311 $generated@@515 $generated@@45))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@311 ($generated@@357 $generated@@516) $generated@@517) ($generated@@220 $generated@@516 $generated@@517)))
 :pattern ( ($generated@@311 ($generated@@357 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@79 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@76 $generated@@519 $generated@@2)) (<= 0 ($generated@@362 $generated@@518))))
 :pattern ( ($generated@@362 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@352 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@351 $generated@@521)) (<= 0 ($generated@@350 $generated@@520))))
 :pattern ( ($generated@@350 $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= ($generated@@522 ($generated@@471 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@471 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@526 ($generated@@471 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@471 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@64) (= (type $generated@@531) $generated@@64)) (= ($generated@@72 ($generated@@471 $generated@@530 $generated@@531)) $generated@@58))
 :pattern ( ($generated@@471 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@64)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= ($generated@@532 ($generated@@479 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@479 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@64)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (= ($generated@@536 ($generated@@479 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@479 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@72 ($generated@@479 $generated@@540 $generated@@541)) $generated@@59))
 :pattern ( ($generated@@479 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@244) (= (type $generated@@543) $generated@@244)) (= ($generated@@343 ($generated@@310 $generated@@542 $generated@@543)) $generated@@61))
 :pattern ( ($generated@@310 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@234 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@234 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@234 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@234 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@244) (= (type $generated@@553) $generated@@244)) (= ($generated@@242 ($generated@@310 $generated@@552 $generated@@553)) $generated@@552))
 :pattern ( ($generated@@310 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@244) (= (type $generated@@555) $generated@@244)) (= ($generated@@243 ($generated@@310 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@310 $generated@@554 $generated@@555))
)))
(assert  (and (forall (($generated@@558 T@U) ) (! (= (type ($generated@@556 $generated@@558)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@558))
)) (forall (($generated@@559 T@U) ($generated@@560 Int) ) (! (let (($generated@@561 ($generated@@352 (type $generated@@559))))
(= (type ($generated@@557 $generated@@559 $generated@@560)) $generated@@561))
 :pattern ( ($generated@@557 $generated@@559 $generated@@560))
))))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@351 $generated@@244)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@562 ($generated@@556 $generated@@563) $generated@@564) (forall (($generated@@565 Int) ) (!  (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@350 $generated@@562))) ($generated@@337 ($generated@@557 $generated@@562 $generated@@565) $generated@@563 $generated@@564))
 :pattern ( ($generated@@557 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@556 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@566 ($generated@@75 $generated@@567)) $generated@@567)
 :pattern ( ($generated@@75 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@64) (= ($generated@@568 ($generated@@320 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@320 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@64) (= ($generated@@72 ($generated@@320 $generated@@571)) $generated@@54))
 :pattern ( ($generated@@320 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@64)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@64) (= ($generated@@572 ($generated@@325 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@325 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@64) (= ($generated@@72 ($generated@@325 $generated@@575)) $generated@@55))
 :pattern ( ($generated@@325 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@64)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@64) (= ($generated@@576 ($generated@@249 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@249 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@579)) $generated@@56))
 :pattern ( ($generated@@249 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@556 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@556 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@556 $generated@@583)) $generated@@57))
 :pattern ( ($generated@@556 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
(= ($generated@@443 $generated@@585 ($generated@@357 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@357 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) $generated@@64)) (= ($generated@@220 $generated@@586 ($generated@@471 $generated@@587 $generated@@588)) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@586) $generated@@589))) (and ($generated@@311 ($generated@@81 ($generated@@444 $generated@@586) $generated@@589) $generated@@588) ($generated@@311 $generated@@589 $generated@@587)))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@586) $generated@@589))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@586) $generated@@589))
))))
 :pattern ( ($generated@@220 $generated@@586 ($generated@@471 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) (= ($generated@@220 $generated@@590 ($generated@@479 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@590) $generated@@593))) (and ($generated@@311 ($generated@@81 ($generated@@454 $generated@@590) $generated@@593) $generated@@592) ($generated@@311 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@590) $generated@@593))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@220 $generated@@590 ($generated@@479 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@244) (= (type $generated@@597) $generated@@244)) (< ($generated@@594 $generated@@596) ($generated@@595 ($generated@@310 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@310 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@244) (= (type $generated@@599) $generated@@244)) (< ($generated@@594 $generated@@599) ($generated@@595 ($generated@@310 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@310 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@244) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@311 $generated@@600 ($generated@@471 $generated@@601 $generated@@602))) (and (= ($generated@@357 ($generated@@443 ($generated@@370 $generated@@244 $generated@@244) $generated@@600)) $generated@@600) ($generated@@220 ($generated@@443 ($generated@@370 $generated@@244 $generated@@244) $generated@@600) ($generated@@471 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@311 $generated@@600 ($generated@@471 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@244) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) ($generated@@311 $generated@@603 ($generated@@479 $generated@@604 $generated@@605))) (and (= ($generated@@357 ($generated@@443 ($generated@@388 $generated@@244 $generated@@244) $generated@@603)) $generated@@603) ($generated@@220 ($generated@@443 ($generated@@388 $generated@@244 $generated@@244) $generated@@603) ($generated@@479 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@311 $generated@@603 ($generated@@479 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@64) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@244)) ($generated@@311 $generated@@608 ($generated@@234 $generated@@606 $generated@@607))) (and (= ($generated@@357 ($generated@@443 $generated@@235 $generated@@608)) $generated@@608) ($generated@@220 ($generated@@443 $generated@@235 $generated@@608) ($generated@@234 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@311 $generated@@608 ($generated@@234 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (not ($generated@@0 ($generated@@81 ($generated@@490 $generated@@610) $generated@@609))))
 :pattern ( (let (($generated@@610 (type $generated@@609)))
($generated@@81 ($generated@@490 $generated@@610) $generated@@609)))
)))
(assert (forall (($generated@@612 Int) ($generated@@613 Int) ) (! (= ($generated@@611 $generated@@612 $generated@@613) (mod $generated@@612 $generated@@613))
 :pattern ( ($generated@@611 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@69)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@64) (= (type $generated@@617) $generated@@64)) (and (= ($generated@@72 ($generated@@234 $generated@@616 $generated@@617)) $generated@@62) (= ($generated@@614 ($generated@@234 $generated@@616 $generated@@617)) $generated@@63)))
 :pattern ( ($generated@@234 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@235) (= ($generated@@594 ($generated@@357 $generated@@618)) ($generated@@595 $generated@@618)))
 :pattern ( ($generated@@594 ($generated@@357 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@244) ($generated@@311 $generated@@619 ($generated@@75 0))) (and (= ($generated@@357 ($generated@@443 $generated@@2 $generated@@619)) $generated@@619) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@619) ($generated@@75 0))))
 :pattern ( ($generated@@311 $generated@@619 ($generated@@75 0)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@244) ($generated@@311 $generated@@620 ($generated@@75 1))) (and (= ($generated@@357 ($generated@@443 $generated@@132 $generated@@620)) $generated@@620) ($generated@@220 ($generated@@443 $generated@@132 $generated@@620) ($generated@@75 1))))
 :pattern ( ($generated@@311 $generated@@620 ($generated@@75 1)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@244) (= (type $generated@@622) $generated@@64)) ($generated@@311 $generated@@621 ($generated@@320 $generated@@622))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@621)) $generated@@621) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@621) ($generated@@320 $generated@@622))))
 :pattern ( ($generated@@311 $generated@@621 ($generated@@320 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@244) (= (type $generated@@624) $generated@@64)) ($generated@@311 $generated@@623 ($generated@@325 $generated@@624))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@623)) $generated@@623) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@623) ($generated@@325 $generated@@624))))
 :pattern ( ($generated@@311 $generated@@623 ($generated@@325 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@244) (= (type $generated@@626) $generated@@64)) ($generated@@311 $generated@@625 ($generated@@249 $generated@@626))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@2) $generated@@625)) $generated@@625) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@2) $generated@@625) ($generated@@249 $generated@@626))))
 :pattern ( ($generated@@311 $generated@@625 ($generated@@249 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@244) (= (type $generated@@628) $generated@@64)) ($generated@@311 $generated@@627 ($generated@@556 $generated@@628))) (and (= ($generated@@357 ($generated@@443 ($generated@@351 $generated@@244) $generated@@627)) $generated@@627) ($generated@@220 ($generated@@443 ($generated@@351 $generated@@244) $generated@@627) ($generated@@556 $generated@@628))))
 :pattern ( ($generated@@311 $generated@@627 ($generated@@556 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@244) ($generated@@311 $generated@@629 ($generated@@75 2))) (and (= ($generated@@357 ($generated@@443 $generated@@140 $generated@@629)) $generated@@629) ($generated@@220 ($generated@@443 $generated@@140 $generated@@629) ($generated@@75 2))))
 :pattern ( ($generated@@311 $generated@@629 ($generated@@75 2)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@244) ($generated@@311 $generated@@630 ($generated@@75 3))) (and (= ($generated@@357 ($generated@@443 $generated@@148 $generated@@630)) $generated@@630) ($generated@@220 ($generated@@443 $generated@@148 $generated@@630) ($generated@@75 3))))
 :pattern ( ($generated@@311 $generated@@630 ($generated@@75 3)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@244) ($generated@@311 $generated@@631 ($generated@@75 4))) (and (= ($generated@@357 ($generated@@443 $generated@@156 $generated@@631)) $generated@@631) ($generated@@220 ($generated@@443 $generated@@156 $generated@@631) ($generated@@75 4))))
 :pattern ( ($generated@@311 $generated@@631 ($generated@@75 4)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@244) ($generated@@311 $generated@@632 ($generated@@75 7))) (and (= ($generated@@357 ($generated@@443 $generated@@164 $generated@@632)) $generated@@632) ($generated@@220 ($generated@@443 $generated@@164 $generated@@632) ($generated@@75 7))))
 :pattern ( ($generated@@311 $generated@@632 ($generated@@75 7)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@244) ($generated@@311 $generated@@633 ($generated@@75 8))) (and (= ($generated@@357 ($generated@@443 $generated@@172 $generated@@633)) $generated@@633) ($generated@@220 ($generated@@443 $generated@@172 $generated@@633) ($generated@@75 8))))
 :pattern ( ($generated@@311 $generated@@633 ($generated@@75 8)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@244) ($generated@@311 $generated@@634 ($generated@@75 15))) (and (= ($generated@@357 ($generated@@443 $generated@@180 $generated@@634)) $generated@@634) ($generated@@220 ($generated@@443 $generated@@180 $generated@@634) ($generated@@75 15))))
 :pattern ( ($generated@@311 $generated@@634 ($generated@@75 15)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@244) ($generated@@311 $generated@@635 ($generated@@75 16))) (and (= ($generated@@357 ($generated@@443 $generated@@188 $generated@@635)) $generated@@635) ($generated@@220 ($generated@@443 $generated@@188 $generated@@635) ($generated@@75 16))))
 :pattern ( ($generated@@311 $generated@@635 ($generated@@75 16)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@244) ($generated@@311 $generated@@636 ($generated@@75 32))) (and (= ($generated@@357 ($generated@@443 $generated@@196 $generated@@636)) $generated@@636) ($generated@@220 ($generated@@443 $generated@@196 $generated@@636) ($generated@@75 32))))
 :pattern ( ($generated@@311 $generated@@636 ($generated@@75 32)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@244) ($generated@@311 $generated@@637 ($generated@@75 53))) (and (= ($generated@@357 ($generated@@443 $generated@@204 $generated@@637)) $generated@@637) ($generated@@220 ($generated@@443 $generated@@204 $generated@@637) ($generated@@75 53))))
 :pattern ( ($generated@@311 $generated@@637 ($generated@@75 53)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@244) ($generated@@311 $generated@@638 ($generated@@75 100))) (and (= ($generated@@357 ($generated@@443 $generated@@212 $generated@@638)) $generated@@638) ($generated@@220 ($generated@@443 $generated@@212 $generated@@638) ($generated@@75 100))))
 :pattern ( ($generated@@311 $generated@@638 ($generated@@75 100)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@639) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@640) $generated@@64)) (= (type $generated@@641) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@639 ($generated@@249 $generated@@640) $generated@@641) (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@639 $generated@@642)))) ($generated@@337 $generated@@642 $generated@@640 $generated@@641))
 :pattern ( ($generated@@81 $generated@@639 $generated@@642))
))))
 :pattern ( ($generated@@74 $generated@@639 ($generated@@249 $generated@@640) $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@235) (= (type $generated@@644) $generated@@64)) (= (type $generated@@645) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@336 $generated@@645) (and ($generated@@233 $generated@@643) (exists (($generated@@646 T@U) ) (!  (and (= (type $generated@@646) $generated@@64) ($generated@@74 $generated@@643 ($generated@@234 $generated@@644 $generated@@646) $generated@@645))
 :pattern ( ($generated@@74 $generated@@643 ($generated@@234 $generated@@644 $generated@@646) $generated@@645))
))))) ($generated@@337 ($generated@@242 $generated@@643) $generated@@644 $generated@@645))
 :pattern ( ($generated@@337 ($generated@@242 $generated@@643) $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@235) (= (type $generated@@648) $generated@@64)) (= (type $generated@@649) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@336 $generated@@649) (and ($generated@@233 $generated@@647) (exists (($generated@@650 T@U) ) (!  (and (= (type $generated@@650) $generated@@64) ($generated@@74 $generated@@647 ($generated@@234 $generated@@650 $generated@@648) $generated@@649))
 :pattern ( ($generated@@74 $generated@@647 ($generated@@234 $generated@@650 $generated@@648) $generated@@649))
))))) ($generated@@337 ($generated@@243 $generated@@647) $generated@@648 $generated@@649))
 :pattern ( ($generated@@337 ($generated@@243 $generated@@647) $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@244) (= (type $generated@@652) $generated@@244)) (= ($generated@@310 ($generated@@332 $generated@@651) ($generated@@332 $generated@@652)) ($generated@@332 ($generated@@310 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@310 ($generated@@332 $generated@@651) ($generated@@332 $generated@@652)))
)))
(assert (forall (($generated@@653 Int) ) (! (= ($generated@@357 ($generated@@8 ($generated@@330 $generated@@653))) ($generated@@332 ($generated@@357 ($generated@@8 $generated@@653))))
 :pattern ( ($generated@@357 ($generated@@8 ($generated@@330 $generated@@653))))
)))
(assert (forall (($generated@@654 T@U) ) (! (= ($generated@@357 ($generated@@332 $generated@@654)) ($generated@@332 ($generated@@357 $generated@@654)))
 :pattern ( ($generated@@357 ($generated@@332 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@352 (type $generated@@655))))
 (=> (and (= (type $generated@@655) ($generated@@351 $generated@@656)) (= ($generated@@350 $generated@@655) 0)) (= $generated@@655 ($generated@@349 $generated@@656))))
 :pattern ( ($generated@@350 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@658)))
 (=> (and (and (= (type $generated@@657) ($generated@@76 $generated@@660 $generated@@2)) (= (type $generated@@659) $generated@@2)) (<= 0 ($generated $generated@@659))) (= ($generated@@362 ($generated@@82 $generated@@657 $generated@@658 $generated@@659)) (+ (- ($generated@@362 $generated@@657) ($generated ($generated@@81 $generated@@657 $generated@@658))) ($generated $generated@@659)))))
 :pattern ( ($generated@@362 ($generated@@82 $generated@@657 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@662) $generated@@2)) ($generated@@74 $generated@@662 $generated@@46 $generated@@661))
 :pattern ( ($generated@@74 $generated@@662 $generated@@46 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@664) $generated@@3)) ($generated@@74 $generated@@664 $generated@@47 $generated@@663))
 :pattern ( ($generated@@74 $generated@@664 $generated@@47 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@666) $generated@@4)) ($generated@@74 $generated@@666 $generated@@44 $generated@@665))
 :pattern ( ($generated@@74 $generated@@666 $generated@@44 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@668) $generated@@514)) ($generated@@74 $generated@@668 $generated@@45 $generated@@667))
 :pattern ( ($generated@@74 $generated@@668 $generated@@45 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@670) $generated@@244)) ($generated@@74 $generated@@670 $generated@@48 $generated@@669))
 :pattern ( ($generated@@74 $generated@@670 $generated@@48 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@351 $generated@@244)) (= (type $generated@@672) $generated@@64)) (= ($generated@@220 $generated@@671 ($generated@@556 $generated@@672)) (forall (($generated@@673 Int) ) (!  (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@350 $generated@@671))) ($generated@@311 ($generated@@557 $generated@@671 $generated@@673) $generated@@672))
 :pattern ( ($generated@@557 $generated@@671 $generated@@673))
))))
 :pattern ( ($generated@@220 $generated@@671 ($generated@@556 $generated@@672)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 Int) ) (!  (=> (= (type $generated@@675) ($generated@@351 $generated@@244)) (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@350 $generated@@675))) (< ($generated@@595 ($generated@@443 $generated@@235 ($generated@@557 $generated@@675 $generated@@676))) ($generated@@674 $generated@@675))))
 :pattern ( ($generated@@595 ($generated@@443 $generated@@235 ($generated@@557 $generated@@675 $generated@@676))))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@678) $generated@@64)) (= (type $generated@@679) $generated@@64)) ($generated@@220 $generated@@677 ($generated@@471 $generated@@678 $generated@@679))) (and (and ($generated@@220 ($generated@@368 $generated@@677) ($generated@@320 $generated@@678)) ($generated@@220 ($generated@@411 $generated@@677) ($generated@@320 $generated@@679))) ($generated@@220 ($generated@@442 $generated@@677) ($generated@@320 ($generated@@234 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@220 $generated@@677 ($generated@@471 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@681) $generated@@64)) (= (type $generated@@682) $generated@@64)) ($generated@@220 $generated@@680 ($generated@@479 $generated@@681 $generated@@682))) (and (and ($generated@@220 ($generated@@386 $generated@@680) ($generated@@325 $generated@@681)) ($generated@@220 ($generated@@422 $generated@@680) ($generated@@325 $generated@@682))) ($generated@@220 ($generated@@453 $generated@@680) ($generated@@325 ($generated@@234 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@220 $generated@@680 ($generated@@479 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@2) ($generated@@220 $generated@@683 $generated@@46))
 :pattern ( ($generated@@220 $generated@@683 $generated@@46))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@3) ($generated@@220 $generated@@684 $generated@@47))
 :pattern ( ($generated@@220 $generated@@684 $generated@@47))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@4) ($generated@@220 $generated@@685 $generated@@44))
 :pattern ( ($generated@@220 $generated@@685 $generated@@44))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@514) ($generated@@220 $generated@@686 $generated@@45))
 :pattern ( ($generated@@220 $generated@@686 $generated@@45))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@244) ($generated@@220 $generated@@687 $generated@@48))
 :pattern ( ($generated@@220 $generated@@687 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 (T@U) Bool)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(assert  (and (and (and (= (type $generated@@688) ($generated@@256 $generated@@77 $generated@@4)) (= (type $generated@@689) $generated@@77)) (= (type $generated@@690) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@696) ($generated@@351 $generated@@244))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@698  (=> (= $generated@@688 ($generated@@255 $generated@@689 $generated@@690 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@691 0))) (=> (= $generated@@692 ($generated@@487 $generated@@693 $generated@@691)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@330 0) $generated@@692) (< $generated@@692 18446744073709551616))) (=> (and (<= ($generated@@330 0) $generated@@692) (< $generated@@692 18446744073709551616)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@691 0))) (=> (and (= $generated@@694 ($generated@@611 $generated@@693 $generated@@691)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@330 0) $generated@@694) (< $generated@@694 18446744073709551616)))))))))))
(let (($generated@@699  (=> (and ($generated@@336 $generated@@690) ($generated@@695 $generated@@690)) (=> (and (and (<= ($generated@@330 0) $generated@@693) (< $generated@@693 18446744073709551616)) (and (<= ($generated@@330 0) $generated@@691) (< $generated@@691 18446744073709551616))) (=> (and (and (and ($generated@@220 $generated@@696 ($generated@@556 $generated@@45)) ($generated@@74 $generated@@696 ($generated@@556 $generated@@45) $generated@@690)) (= 1 $generated@@697)) (and (not (= $generated@@691 0)) (= (ControlFlow 0 6) 2))) $generated@@698)))))
$generated@@699)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 () T@T)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 () T@T)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@260 (T@T T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@334 (Int) Int)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@341 (T@U T@U T@U) Bool)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@354 (T@U) Int)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@374 (T@U) Int)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@T T@T) T@U)
(declare-fun $generated@@382 (T@T T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@T) T@U)
(declare-fun $generated@@400 (T@T T@T) T@T)
(declare-fun $generated@@401 (T@T) T@T)
(declare-fun $generated@@402 (T@T) T@T)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@T T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@483 (T@U T@U) T@U)
(declare-fun $generated@@491 (T@U T@U) T@U)
(declare-fun $generated@@502 (T@T) T@U)
(declare-fun $generated@@526 () T@T)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@569 (T@U Int) T@U)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@683 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@220 $generated@@221 $generated@@222)) (forall (($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@221 $generated@@223) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60))
)))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@2) ($generated@@224 $generated@@225 ($generated@@75 0)))
 :pattern ( ($generated@@224 $generated@@225 ($generated@@75 0)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@132) ($generated@@224 $generated@@226 ($generated@@75 1)))
 :pattern ( ($generated@@224 $generated@@226 ($generated@@75 1)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@140) ($generated@@224 $generated@@227 ($generated@@75 2)))
 :pattern ( ($generated@@224 $generated@@227 ($generated@@75 2)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@148) ($generated@@224 $generated@@228 ($generated@@75 3)))
 :pattern ( ($generated@@224 $generated@@228 ($generated@@75 3)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@156) ($generated@@224 $generated@@229 ($generated@@75 4)))
 :pattern ( ($generated@@224 $generated@@229 ($generated@@75 4)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@164) ($generated@@224 $generated@@230 ($generated@@75 7)))
 :pattern ( ($generated@@224 $generated@@230 ($generated@@75 7)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@172) ($generated@@224 $generated@@231 ($generated@@75 8)))
 :pattern ( ($generated@@224 $generated@@231 ($generated@@75 8)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@180) ($generated@@224 $generated@@232 ($generated@@75 15)))
 :pattern ( ($generated@@224 $generated@@232 ($generated@@75 15)))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (= (type $generated@@233) $generated@@188) ($generated@@224 $generated@@233 ($generated@@75 16)))
 :pattern ( ($generated@@224 $generated@@233 ($generated@@75 16)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (= (type $generated@@234) $generated@@196) ($generated@@224 $generated@@234 ($generated@@75 32)))
 :pattern ( ($generated@@224 $generated@@234 ($generated@@75 32)))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@204) ($generated@@224 $generated@@235 ($generated@@75 53)))
 :pattern ( ($generated@@224 $generated@@235 ($generated@@75 53)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@212) ($generated@@224 $generated@@236 ($generated@@75 100)))
 :pattern ( ($generated@@224 $generated@@236 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@239) 25) (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@64) (= (type $generated@@243) $generated@@64)) (= (type $generated@@244) $generated@@239)) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243))) ($generated@@237 $generated@@244))
 :pattern ( ($generated@@237 $generated@@244) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243)))
)))
(assert  (and (and (= ($generated@@1 $generated@@248) 26) (forall (($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@246 $generated@@249))
))) (forall (($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@250)) $generated@@248)
 :pattern ( ($generated@@247 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@251) $generated@@239) (= (type $generated@@252) $generated@@239)) true) (= ($generated@@245 $generated@@251 $generated@@252)  (and (= ($generated@@246 $generated@@251) ($generated@@246 $generated@@252)) (= ($generated@@247 $generated@@251) ($generated@@247 $generated@@252)))))
 :pattern ( ($generated@@245 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@253 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@257) $generated@@64)) ($generated@@224 $generated@@256 ($generated@@253 $generated@@257))) ($generated@@254 $generated@@256))
 :pattern ( ($generated@@224 $generated@@256 ($generated@@253 $generated@@257)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@264 $generated@@265)) 27)) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@260 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@262 ($generated@@260 $generated@@268 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@260 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@262 (type $generated@@270))))
(= (type ($generated@@258 $generated@@270 $generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@258 $generated@@270 $generated@@271 $generated@@272))
))) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(let (($generated@@279 (type $generated@@275)))
(= (type ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277)) ($generated@@260 $generated@@279 $generated@@278))))
 :pattern ( ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277))
))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@262 (type $generated@@280))))
 (=> (= (type $generated@@283) $generated@@284) (= ($generated@@258 ($generated@@263 $generated@@280 $generated@@281 $generated@@282 $generated@@283) $generated@@281 $generated@@282) $generated@@283)))
 :weight 0
))) (and (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (or (= $generated@@287 $generated@@289) (= ($generated@@258 ($generated@@263 $generated@@286 $generated@@287 $generated@@288 $generated@@285) $generated@@289 $generated@@290) ($generated@@258 $generated@@286 $generated@@289 $generated@@290)))
 :weight 0
)) (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (or (= $generated@@294 $generated@@296) (= ($generated@@258 ($generated@@263 $generated@@292 $generated@@293 $generated@@294 $generated@@291) $generated@@295 $generated@@296) ($generated@@258 $generated@@292 $generated@@295 $generated@@296)))
 :weight 0
))) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (or true (= ($generated@@258 ($generated@@263 $generated@@298 $generated@@299 $generated@@300 $generated@@297) $generated@@301 $generated@@302) ($generated@@258 $generated@@298 $generated@@301 $generated@@302)))
 :weight 0
)))) (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ) (! (= (type ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306)) ($generated@@260 $generated@@77 $generated@@4))
 :pattern ( ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 Bool) ($generated@@311 T@U) ($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@67 (type $generated@@312))))
 (=> (and (and (and (and (= (type $generated@@307) $generated@@77) (= (type $generated@@308) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@309) ($generated@@66 $generated@@4))) (= (type $generated@@311) $generated@@77)) (= (type $generated@@312) ($generated@@66 $generated@@313))) (= ($generated@@0 ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))  (=> (and (not (= $generated@@311 $generated@@307)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@308 $generated@@311) $generated@@309))) $generated@@310))))
 :pattern ( ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) $generated@@239)
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (= (type $generated@@318) $generated@@64) (= (type $generated@@319) $generated@@64)) (= (type $generated@@320) $generated@@248)) (= (type $generated@@321) $generated@@248)) (= ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319))  (and ($generated@@315 $generated@@320 $generated@@318) ($generated@@315 $generated@@321 $generated@@319))))
 :pattern ( ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@239) (= (type $generated@@323) $generated@@239)) (= ($generated@@245 $generated@@322 $generated@@323) (= $generated@@322 $generated@@323)))
 :pattern ( ($generated@@245 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@64)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@327) $generated@@64)) (= ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@248) ($generated@@0 ($generated@@81 $generated@@326 $generated@@328))) ($generated@@315 $generated@@328 $generated@@327))
 :pattern ( ($generated@@81 $generated@@326 $generated@@328))
))))
 :pattern ( ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@64)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@248) ($generated@@0 ($generated@@81 $generated@@331 $generated@@333))) ($generated@@315 $generated@@333 $generated@@332))
 :pattern ( ($generated@@81 $generated@@331 $generated@@333))
))))
 :pattern ( ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)))
)))
(assert (forall (($generated@@335 Int) ) (! (= ($generated@@334 $generated@@335) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 (type $generated@@337)))
(= (type ($generated@@336 $generated@@337)) $generated@@338))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= ($generated@@336 $generated@@339) $generated@@339)
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@342) $generated@@64) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) $generated@@248)) (= (type $generated@@345) $generated@@248)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@340 $generated@@346)) (= ($generated@@74 ($generated@@314 $generated@@344 $generated@@345) ($generated@@238 $generated@@342 $generated@@343) $generated@@346)  (and ($generated@@341 $generated@@344 $generated@@342 $generated@@346) ($generated@@341 $generated@@345 $generated@@343 $generated@@346))))
 :pattern ( ($generated@@74 ($generated@@314 $generated@@344 $generated@@345) ($generated@@238 $generated@@342 $generated@@343) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (= (type ($generated@@347 $generated@@348)) $generated@@68)
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@239) (= ($generated@@237 $generated@@349) (= ($generated@@347 $generated@@349) $generated@@61)))
 :pattern ( ($generated@@237 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@239) ($generated@@237 $generated@@350)) (exists (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (and (and (= (type $generated@@351) $generated@@248) (= (type $generated@@352) $generated@@248)) (= $generated@@350 ($generated@@314 $generated@@351 $generated@@352)))
 :no-pattern (type $generated@@351)
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
)))
 :pattern ( ($generated@@237 $generated@@350))
)))
(assert  (and (and (forall (($generated@@357 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@357)) 28)) (forall (($generated@@358 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@355 $generated@@358))
))) (forall (($generated@@359 T@T) ) (! (= (type ($generated@@353 $generated@@359)) ($generated@@355 $generated@@359))
 :pattern ( ($generated@@353 $generated@@359))
))))
(assert (forall (($generated@@360 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@360)) 0)
 :pattern ( ($generated@@353 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@248)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@64) (= (type $generated@@365) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@341 ($generated@@361 $generated@@363) $generated@@364 $generated@@365) ($generated@@74 $generated@@363 $generated@@364 $generated@@365)))
 :pattern ( ($generated@@341 ($generated@@361 $generated@@363) $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@368) $generated@@248)) (= (type $generated@@369) $generated@@64)) ($generated@@220 $generated@@366 $generated@@367)) ($generated@@341 $generated@@368 $generated@@369 $generated@@366)) ($generated@@341 $generated@@368 $generated@@369 $generated@@367))
 :pattern ( ($generated@@220 $generated@@366 $generated@@367) ($generated@@341 $generated@@368 $generated@@369 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@371) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@373) $generated@@64)) ($generated@@220 $generated@@370 $generated@@371)) ($generated@@74 $generated@@372 $generated@@373 $generated@@370)) ($generated@@74 $generated@@372 $generated@@373 $generated@@371))
 :pattern ( ($generated@@220 $generated@@370 $generated@@371) ($generated@@74 $generated@@372 $generated@@373 $generated@@370))
)))
(assert (forall (($generated@@376 T@T) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@76 $generated@@376 $generated@@2))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@79 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@76 $generated@@378 $generated@@2)) (and (= (= ($generated@@374 $generated@@377) 0) (= $generated@@377 ($generated@@375 $generated@@378))) (=> (not (= ($generated@@374 $generated@@377) 0)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (< 0 ($generated ($generated@@81 $generated@@377 $generated@@379))))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert  (and (and (and (and (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (= ($generated@@1 ($generated@@382 $generated@@385 $generated@@386)) 29)) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= ($generated@@383 ($generated@@382 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@382 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= ($generated@@384 ($generated@@382 $generated@@389 $generated@@390)) $generated@@390)
 :pattern ( ($generated@@382 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@383 (type $generated@@391))))
(= (type ($generated@@380 $generated@@391)) ($generated@@76 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@391))
))) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= (type ($generated@@381 $generated@@393 $generated@@394)) ($generated@@382 $generated@@393 $generated@@394))
 :pattern ( ($generated@@381 $generated@@393 $generated@@394))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@T) ) (! (let (($generated@@397 (type $generated@@395)))
 (not ($generated@@0 ($generated@@81 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395))))
 :pattern ( (let (($generated@@397 (type $generated@@395)))
($generated@@81 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395)))
)))
(assert  (and (and (and (and (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (= ($generated@@1 ($generated@@400 $generated@@403 $generated@@404)) 30)) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= ($generated@@401 ($generated@@400 $generated@@405 $generated@@406)) $generated@@405)
 :pattern ( ($generated@@400 $generated@@405 $generated@@406))
))) (forall (($generated@@407 T@T) ($generated@@408 T@T) ) (! (= ($generated@@402 ($generated@@400 $generated@@407 $generated@@408)) $generated@@408)
 :pattern ( ($generated@@400 $generated@@407 $generated@@408))
))) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@401 (type $generated@@409))))
(= (type ($generated@@398 $generated@@409)) ($generated@@76 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@409))
))) (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (! (= (type ($generated@@399 $generated@@411 $generated@@412)) ($generated@@400 $generated@@411 $generated@@412))
 :pattern ( ($generated@@399 $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@T) ) (! (let (($generated@@415 (type $generated@@413)))
 (not ($generated@@0 ($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413))))
 :pattern ( (let (($generated@@415 (type $generated@@413)))
($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413)))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (= ($generated@@254 $generated@@416) (forall (($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@417) (and (<= 0 ($generated ($generated@@81 $generated@@416 $generated@@418))) (<= ($generated ($generated@@81 $generated@@416 $generated@@418)) ($generated@@374 $generated@@416))))
 :pattern ( ($generated@@81 $generated@@416 $generated@@418))
)))))
 :pattern ( ($generated@@254 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@384 (type $generated@@419))))
(let (($generated@@421 ($generated@@383 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@382 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@381 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@380 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@384 (type $generated@@424))))
(= (type ($generated@@423 $generated@@424)) ($generated@@76 $generated@@425 $generated@@4)))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@384 (type $generated@@426))))
(let (($generated@@428 ($generated@@383 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@382 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@381 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@427) ($generated@@0 ($generated@@81 ($generated@@423 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@423 $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@402 (type $generated@@430))))
(let (($generated@@432 ($generated@@401 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@400 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@399 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@430) $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@398 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@402 (type $generated@@435))))
(= (type ($generated@@434 $generated@@435)) ($generated@@76 $generated@@436 $generated@@4)))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@402 (type $generated@@437))))
(let (($generated@@439 ($generated@@401 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@400 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@399 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@438) ($generated@@0 ($generated@@81 ($generated@@434 $generated@@437) $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@434 $generated@@437))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@442) $generated@@64)) (= ($generated@@224 $generated@@441 ($generated@@253 $generated@@442)) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@441 $generated@@443)))) ($generated@@315 $generated@@443 $generated@@442))
 :pattern ( ($generated@@81 $generated@@441 $generated@@443))
))))
 :pattern ( ($generated@@224 $generated@@441 ($generated@@253 $generated@@442)))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (= (type $generated@@444) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@444 ($generated@@324 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@248) ($generated@@0 ($generated@@81 $generated@@444 $generated@@447))) ($generated@@341 $generated@@447 $generated@@445 $generated@@446))
 :pattern ( ($generated@@81 $generated@@444 $generated@@447))
))))
 :pattern ( ($generated@@74 $generated@@444 ($generated@@324 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@448) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@449) $generated@@64)) (= (type $generated@@450) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@448 ($generated@@329 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@248) ($generated@@0 ($generated@@81 $generated@@448 $generated@@451))) ($generated@@341 $generated@@451 $generated@@449 $generated@@450))
 :pattern ( ($generated@@81 $generated@@448 $generated@@451))
))))
 :pattern ( ($generated@@74 $generated@@448 ($generated@@329 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
(= ($generated ($generated@@81 ($generated@@375 $generated@@453) $generated@@452)) 0))
 :pattern ( (let (($generated@@453 (type $generated@@452)))
($generated@@81 ($generated@@375 $generated@@453) $generated@@452)))
)))
(assert  (and (and (forall (($generated@@457 T@U) ) (! (= (type ($generated@@454 $generated@@457)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@454 $generated@@457))
)) (forall (($generated@@458 T@T) ($generated@@459 T@U) ) (! (= (type ($generated@@455 $generated@@458 $generated@@459)) $generated@@458)
 :pattern ( ($generated@@455 $generated@@458 $generated@@459))
))) (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@384 (type $generated@@460))))
(let (($generated@@462 ($generated@@383 (type $generated@@460))))
(= (type ($generated@@456 $generated@@460)) ($generated@@76 $generated@@462 $generated@@461))))
 :pattern ( ($generated@@456 $generated@@460))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@464) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@454 $generated@@463) $generated@@464))  (and ($generated@@0 ($generated@@81 ($generated@@380 $generated@@463) ($generated@@246 ($generated@@455 $generated@@239 $generated@@464)))) (= ($generated@@81 ($generated@@456 $generated@@463) ($generated@@246 ($generated@@455 $generated@@239 $generated@@464))) ($generated@@247 ($generated@@455 $generated@@239 $generated@@464))))))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@463) $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@402 (type $generated@@468))))
(let (($generated@@470 ($generated@@401 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468)) ($generated@@76 $generated@@470 $generated@@469))))
 :pattern ( ($generated@@466 $generated@@468))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@472) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@465 $generated@@471) $generated@@472))  (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@471) ($generated@@246 ($generated@@455 $generated@@239 $generated@@472)))) (= ($generated@@81 ($generated@@466 $generated@@471) ($generated@@246 ($generated@@455 $generated@@239 $generated@@472))) ($generated@@247 ($generated@@455 $generated@@239 $generated@@472))))))
 :pattern ( ($generated@@81 ($generated@@465 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
(let (($generated@@476 ($generated@@383 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@382 $generated@@476 $generated@@475)) (= ($generated@@0 ($generated@@81 ($generated@@423 $generated@@473) $generated@@474)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@476) (and ($generated@@0 ($generated@@81 ($generated@@380 $generated@@473) $generated@@477)) (= $generated@@474 ($generated@@81 ($generated@@456 $generated@@473) $generated@@477))))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@473) $generated@@477))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@473) $generated@@477))
))))))
 :pattern ( ($generated@@81 ($generated@@423 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
(let (($generated@@481 ($generated@@401 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@400 $generated@@481 $generated@@480)) (= ($generated@@0 ($generated@@81 ($generated@@434 $generated@@478) $generated@@479)) (exists (($generated@@482 T@U) ) (!  (and (= (type $generated@@482) $generated@@481) (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@478) $generated@@482)) (= $generated@@479 ($generated@@81 ($generated@@466 $generated@@478) $generated@@482))))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@478) $generated@@482))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@478) $generated@@482))
))))))
 :pattern ( ($generated@@81 ($generated@@434 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@486) $generated@@490))) (and ($generated@@341 ($generated@@81 ($generated@@456 $generated@@486) $generated@@490) $generated@@488 $generated@@489) ($generated@@341 $generated@@490 $generated@@487 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@486) $generated@@490))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@486) $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@494) $generated@@498))) (and ($generated@@341 ($generated@@81 ($generated@@466 $generated@@494) $generated@@498) $generated@@496 $generated@@497) ($generated@@341 $generated@@498 $generated@@495 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@494) $generated@@498))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@494) $generated@@498))
))))
 :pattern ( ($generated@@74 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@499) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@500) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@501) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@499 $generated@@501))) (and ($generated@@220 $generated@@499 $generated@@500) ($generated@@220 $generated@@500 $generated@@501))) ($generated@@220 $generated@@499 $generated@@501))
 :pattern ( ($generated@@220 $generated@@499 $generated@@500) ($generated@@220 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@T) ) (! (= (type ($generated@@502 $generated@@503)) ($generated@@76 $generated@@503 $generated@@4))
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@402 (type $generated@@504))))
(let (($generated@@506 ($generated@@401 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@400 $generated@@506 $generated@@505)) (= (= $generated@@504 ($generated@@399 $generated@@506 $generated@@505)) (= ($generated@@398 $generated@@504) ($generated@@502 $generated@@506))))))
 :pattern ( ($generated@@398 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@402 (type $generated@@507))))
(let (($generated@@509 ($generated@@401 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@400 $generated@@509 $generated@@508)) (= (= $generated@@507 ($generated@@399 $generated@@509 $generated@@508)) (= ($generated@@434 $generated@@507) ($generated@@502 $generated@@508))))))
 :pattern ( ($generated@@434 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@402 (type $generated@@510))))
(let (($generated@@512 ($generated@@401 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@400 $generated@@512 $generated@@511)) (= (= $generated@@510 ($generated@@399 $generated@@512 $generated@@511)) (= ($generated@@465 $generated@@510) ($generated@@502 $generated@@248))))))
 :pattern ( ($generated@@465 $generated@@510))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@384 (type $generated@@513))))
(let (($generated@@515 ($generated@@383 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@382 $generated@@515 $generated@@514)) (or (= $generated@@513 ($generated@@381 $generated@@515 $generated@@514)) (exists (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (and (and (= (type $generated@@516) $generated@@248) (= (type $generated@@517) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@454 $generated@@513) ($generated@@361 ($generated@@314 $generated@@516 $generated@@517)))))
 :no-pattern (type $generated@@516)
 :no-pattern (type $generated@@517)
 :no-pattern ($generated $generated@@516)
 :no-pattern ($generated@@0 $generated@@516)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
))))))
 :pattern ( ($generated@@454 $generated@@513))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@402 (type $generated@@518))))
(let (($generated@@520 ($generated@@401 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@400 $generated@@520 $generated@@519)) (or (= $generated@@518 ($generated@@399 $generated@@520 $generated@@519)) (exists (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (and (and (= (type $generated@@521) $generated@@248) (= (type $generated@@522) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@465 $generated@@518) ($generated@@361 ($generated@@314 $generated@@521 $generated@@522)))))
 :no-pattern (type $generated@@521)
 :no-pattern (type $generated@@522)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
))))))
 :pattern ( ($generated@@465 $generated@@518))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@248) ($generated@@315 $generated@@523 $generated@@46)) (and (= ($generated@@361 ($generated@@455 $generated@@2 $generated@@523)) $generated@@523) ($generated@@224 ($generated@@455 $generated@@2 $generated@@523) $generated@@46)))
 :pattern ( ($generated@@315 $generated@@523 $generated@@46))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@248) ($generated@@315 $generated@@524 $generated@@47)) (and (= ($generated@@361 ($generated@@455 $generated@@3 $generated@@524)) $generated@@524) ($generated@@224 ($generated@@455 $generated@@3 $generated@@524) $generated@@47)))
 :pattern ( ($generated@@315 $generated@@524 $generated@@47))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@248) ($generated@@315 $generated@@525 $generated@@44)) (and (= ($generated@@361 ($generated@@455 $generated@@4 $generated@@525)) $generated@@525) ($generated@@224 ($generated@@455 $generated@@4 $generated@@525) $generated@@44)))
 :pattern ( ($generated@@315 $generated@@525 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@526) 31))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@248) ($generated@@315 $generated@@527 $generated@@45)) (and (= ($generated@@361 ($generated@@455 $generated@@526 $generated@@527)) $generated@@527) ($generated@@224 ($generated@@455 $generated@@526 $generated@@527) $generated@@45)))
 :pattern ( ($generated@@315 $generated@@527 $generated@@45))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@315 ($generated@@361 $generated@@528) $generated@@529) ($generated@@224 $generated@@528 $generated@@529)))
 :pattern ( ($generated@@315 ($generated@@361 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@79 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@76 $generated@@531 $generated@@2)) (<= 0 ($generated@@374 $generated@@530))))
 :pattern ( ($generated@@374 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@356 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@355 $generated@@533)) (<= 0 ($generated@@354 $generated@@532))))
 :pattern ( ($generated@@354 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= ($generated@@534 ($generated@@483 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@483 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@538 ($generated@@483 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@483 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= ($generated@@72 ($generated@@483 $generated@@542 $generated@@543)) $generated@@58))
 :pattern ( ($generated@@483 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@491 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@491 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@491 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@491 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@64) (= (type $generated@@553) $generated@@64)) (= ($generated@@72 ($generated@@491 $generated@@552 $generated@@553)) $generated@@59))
 :pattern ( ($generated@@491 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@248) (= (type $generated@@555) $generated@@248)) (= ($generated@@347 ($generated@@314 $generated@@554 $generated@@555)) $generated@@61))
 :pattern ( ($generated@@314 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@64) (= (type $generated@@559) $generated@@64)) (= ($generated@@556 ($generated@@238 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@238 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@64)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@64) (= (type $generated@@563) $generated@@64)) (= ($generated@@560 ($generated@@238 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@238 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@248) (= (type $generated@@565) $generated@@248)) (= ($generated@@246 ($generated@@314 $generated@@564 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@314 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@248) (= (type $generated@@567) $generated@@248)) (= ($generated@@247 ($generated@@314 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@314 $generated@@566 $generated@@567))
)))
(assert  (and (forall (($generated@@570 T@U) ) (! (= (type ($generated@@568 $generated@@570)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@570))
)) (forall (($generated@@571 T@U) ($generated@@572 Int) ) (! (let (($generated@@573 ($generated@@356 (type $generated@@571))))
(= (type ($generated@@569 $generated@@571 $generated@@572)) $generated@@573))
 :pattern ( ($generated@@569 $generated@@571 $generated@@572))
))))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@355 $generated@@248)) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@574 ($generated@@568 $generated@@575) $generated@@576) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@354 $generated@@574))) ($generated@@341 ($generated@@569 $generated@@574 $generated@@577) $generated@@575 $generated@@576))
 :pattern ( ($generated@@569 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@74 $generated@@574 ($generated@@568 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@578 ($generated@@75 $generated@@579)) $generated@@579)
 :pattern ( ($generated@@75 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@324 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@324 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@324 $generated@@583)) $generated@@54))
 :pattern ( ($generated@@324 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@64)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@64) (= ($generated@@584 ($generated@@329 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@329 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@64) (= ($generated@@72 ($generated@@329 $generated@@587)) $generated@@55))
 :pattern ( ($generated@@329 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@64)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@64) (= ($generated@@588 ($generated@@253 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@253 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@591)) $generated@@56))
 :pattern ( ($generated@@253 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@64)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@64) (= ($generated@@592 ($generated@@568 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@568 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@64) (= ($generated@@72 ($generated@@568 $generated@@595)) $generated@@57))
 :pattern ( ($generated@@568 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
(= ($generated@@455 $generated@@597 ($generated@@361 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@361 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) (= ($generated@@224 $generated@@598 ($generated@@483 $generated@@599 $generated@@600)) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@598) $generated@@601))) (and ($generated@@315 ($generated@@81 ($generated@@456 $generated@@598) $generated@@601) $generated@@600) ($generated@@315 $generated@@601 $generated@@599)))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@598) $generated@@601))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@598) $generated@@601))
))))
 :pattern ( ($generated@@224 $generated@@598 ($generated@@483 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) (= ($generated@@224 $generated@@602 ($generated@@491 $generated@@603 $generated@@604)) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@602) $generated@@605))) (and ($generated@@315 ($generated@@81 ($generated@@466 $generated@@602) $generated@@605) $generated@@604) ($generated@@315 $generated@@605 $generated@@603)))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@602) $generated@@605))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@602) $generated@@605))
))))
 :pattern ( ($generated@@224 $generated@@602 ($generated@@491 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@248) (= (type $generated@@609) $generated@@248)) (< ($generated@@606 $generated@@608) ($generated@@607 ($generated@@314 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@314 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@248) (= (type $generated@@611) $generated@@248)) (< ($generated@@606 $generated@@611) ($generated@@607 ($generated@@314 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@314 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@248) (= (type $generated@@613) $generated@@64)) (= (type $generated@@614) $generated@@64)) ($generated@@315 $generated@@612 ($generated@@483 $generated@@613 $generated@@614))) (and (= ($generated@@361 ($generated@@455 ($generated@@382 $generated@@248 $generated@@248) $generated@@612)) $generated@@612) ($generated@@224 ($generated@@455 ($generated@@382 $generated@@248 $generated@@248) $generated@@612) ($generated@@483 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@315 $generated@@612 ($generated@@483 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@248) (= (type $generated@@616) $generated@@64)) (= (type $generated@@617) $generated@@64)) ($generated@@315 $generated@@615 ($generated@@491 $generated@@616 $generated@@617))) (and (= ($generated@@361 ($generated@@455 ($generated@@400 $generated@@248 $generated@@248) $generated@@615)) $generated@@615) ($generated@@224 ($generated@@455 ($generated@@400 $generated@@248 $generated@@248) $generated@@615) ($generated@@491 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@315 $generated@@615 ($generated@@491 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@64) (= (type $generated@@619) $generated@@64)) (= (type $generated@@620) $generated@@248)) ($generated@@315 $generated@@620 ($generated@@238 $generated@@618 $generated@@619))) (and (= ($generated@@361 ($generated@@455 $generated@@239 $generated@@620)) $generated@@620) ($generated@@224 ($generated@@455 $generated@@239 $generated@@620) ($generated@@238 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@315 $generated@@620 ($generated@@238 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
 (not ($generated@@0 ($generated@@81 ($generated@@502 $generated@@622) $generated@@621))))
 :pattern ( (let (($generated@@622 (type $generated@@621)))
($generated@@81 ($generated@@502 $generated@@622) $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@69)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) $generated@@64)) (and (= ($generated@@72 ($generated@@238 $generated@@625 $generated@@626)) $generated@@62) (= ($generated@@623 ($generated@@238 $generated@@625 $generated@@626)) $generated@@63)))
 :pattern ( ($generated@@238 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@239) (= ($generated@@606 ($generated@@361 $generated@@627)) ($generated@@607 $generated@@627)))
 :pattern ( ($generated@@606 ($generated@@361 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@248) ($generated@@315 $generated@@628 ($generated@@75 0))) (and (= ($generated@@361 ($generated@@455 $generated@@2 $generated@@628)) $generated@@628) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@628) ($generated@@75 0))))
 :pattern ( ($generated@@315 $generated@@628 ($generated@@75 0)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@248) ($generated@@315 $generated@@629 ($generated@@75 1))) (and (= ($generated@@361 ($generated@@455 $generated@@132 $generated@@629)) $generated@@629) ($generated@@224 ($generated@@455 $generated@@132 $generated@@629) ($generated@@75 1))))
 :pattern ( ($generated@@315 $generated@@629 ($generated@@75 1)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@248) (= (type $generated@@631) $generated@@64)) ($generated@@315 $generated@@630 ($generated@@324 $generated@@631))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@630)) $generated@@630) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@630) ($generated@@324 $generated@@631))))
 :pattern ( ($generated@@315 $generated@@630 ($generated@@324 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@248) (= (type $generated@@633) $generated@@64)) ($generated@@315 $generated@@632 ($generated@@329 $generated@@633))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@632)) $generated@@632) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@632) ($generated@@329 $generated@@633))))
 :pattern ( ($generated@@315 $generated@@632 ($generated@@329 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@248) (= (type $generated@@635) $generated@@64)) ($generated@@315 $generated@@634 ($generated@@253 $generated@@635))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@2) $generated@@634)) $generated@@634) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@2) $generated@@634) ($generated@@253 $generated@@635))))
 :pattern ( ($generated@@315 $generated@@634 ($generated@@253 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@248) (= (type $generated@@637) $generated@@64)) ($generated@@315 $generated@@636 ($generated@@568 $generated@@637))) (and (= ($generated@@361 ($generated@@455 ($generated@@355 $generated@@248) $generated@@636)) $generated@@636) ($generated@@224 ($generated@@455 ($generated@@355 $generated@@248) $generated@@636) ($generated@@568 $generated@@637))))
 :pattern ( ($generated@@315 $generated@@636 ($generated@@568 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@248) ($generated@@315 $generated@@638 ($generated@@75 2))) (and (= ($generated@@361 ($generated@@455 $generated@@140 $generated@@638)) $generated@@638) ($generated@@224 ($generated@@455 $generated@@140 $generated@@638) ($generated@@75 2))))
 :pattern ( ($generated@@315 $generated@@638 ($generated@@75 2)))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@248) ($generated@@315 $generated@@639 ($generated@@75 3))) (and (= ($generated@@361 ($generated@@455 $generated@@148 $generated@@639)) $generated@@639) ($generated@@224 ($generated@@455 $generated@@148 $generated@@639) ($generated@@75 3))))
 :pattern ( ($generated@@315 $generated@@639 ($generated@@75 3)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@248) ($generated@@315 $generated@@640 ($generated@@75 4))) (and (= ($generated@@361 ($generated@@455 $generated@@156 $generated@@640)) $generated@@640) ($generated@@224 ($generated@@455 $generated@@156 $generated@@640) ($generated@@75 4))))
 :pattern ( ($generated@@315 $generated@@640 ($generated@@75 4)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@248) ($generated@@315 $generated@@641 ($generated@@75 7))) (and (= ($generated@@361 ($generated@@455 $generated@@164 $generated@@641)) $generated@@641) ($generated@@224 ($generated@@455 $generated@@164 $generated@@641) ($generated@@75 7))))
 :pattern ( ($generated@@315 $generated@@641 ($generated@@75 7)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@248) ($generated@@315 $generated@@642 ($generated@@75 8))) (and (= ($generated@@361 ($generated@@455 $generated@@172 $generated@@642)) $generated@@642) ($generated@@224 ($generated@@455 $generated@@172 $generated@@642) ($generated@@75 8))))
 :pattern ( ($generated@@315 $generated@@642 ($generated@@75 8)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@248) ($generated@@315 $generated@@643 ($generated@@75 15))) (and (= ($generated@@361 ($generated@@455 $generated@@180 $generated@@643)) $generated@@643) ($generated@@224 ($generated@@455 $generated@@180 $generated@@643) ($generated@@75 15))))
 :pattern ( ($generated@@315 $generated@@643 ($generated@@75 15)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@248) ($generated@@315 $generated@@644 ($generated@@75 16))) (and (= ($generated@@361 ($generated@@455 $generated@@188 $generated@@644)) $generated@@644) ($generated@@224 ($generated@@455 $generated@@188 $generated@@644) ($generated@@75 16))))
 :pattern ( ($generated@@315 $generated@@644 ($generated@@75 16)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@248) ($generated@@315 $generated@@645 ($generated@@75 32))) (and (= ($generated@@361 ($generated@@455 $generated@@196 $generated@@645)) $generated@@645) ($generated@@224 ($generated@@455 $generated@@196 $generated@@645) ($generated@@75 32))))
 :pattern ( ($generated@@315 $generated@@645 ($generated@@75 32)))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@248) ($generated@@315 $generated@@646 ($generated@@75 53))) (and (= ($generated@@361 ($generated@@455 $generated@@204 $generated@@646)) $generated@@646) ($generated@@224 ($generated@@455 $generated@@204 $generated@@646) ($generated@@75 53))))
 :pattern ( ($generated@@315 $generated@@646 ($generated@@75 53)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@248) ($generated@@315 $generated@@647 ($generated@@75 100))) (and (= ($generated@@361 ($generated@@455 $generated@@212 $generated@@647)) $generated@@647) ($generated@@224 ($generated@@455 $generated@@212 $generated@@647) ($generated@@75 100))))
 :pattern ( ($generated@@315 $generated@@647 ($generated@@75 100)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@649) $generated@@64)) (= (type $generated@@650) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@648 ($generated@@253 $generated@@649) $generated@@650) (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@648 $generated@@651)))) ($generated@@341 $generated@@651 $generated@@649 $generated@@650))
 :pattern ( ($generated@@81 $generated@@648 $generated@@651))
))))
 :pattern ( ($generated@@74 $generated@@648 ($generated@@253 $generated@@649) $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@239) (= (type $generated@@653) $generated@@64)) (= (type $generated@@654) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@340 $generated@@654) (and ($generated@@237 $generated@@652) (exists (($generated@@655 T@U) ) (!  (and (= (type $generated@@655) $generated@@64) ($generated@@74 $generated@@652 ($generated@@238 $generated@@653 $generated@@655) $generated@@654))
 :pattern ( ($generated@@74 $generated@@652 ($generated@@238 $generated@@653 $generated@@655) $generated@@654))
))))) ($generated@@341 ($generated@@246 $generated@@652) $generated@@653 $generated@@654))
 :pattern ( ($generated@@341 ($generated@@246 $generated@@652) $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@239) (= (type $generated@@657) $generated@@64)) (= (type $generated@@658) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@340 $generated@@658) (and ($generated@@237 $generated@@656) (exists (($generated@@659 T@U) ) (!  (and (= (type $generated@@659) $generated@@64) ($generated@@74 $generated@@656 ($generated@@238 $generated@@659 $generated@@657) $generated@@658))
 :pattern ( ($generated@@74 $generated@@656 ($generated@@238 $generated@@659 $generated@@657) $generated@@658))
))))) ($generated@@341 ($generated@@247 $generated@@656) $generated@@657 $generated@@658))
 :pattern ( ($generated@@341 ($generated@@247 $generated@@656) $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@248) (= (type $generated@@661) $generated@@248)) (= ($generated@@314 ($generated@@336 $generated@@660) ($generated@@336 $generated@@661)) ($generated@@336 ($generated@@314 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@314 ($generated@@336 $generated@@660) ($generated@@336 $generated@@661)))
)))
(assert (forall (($generated@@662 Int) ) (! (= ($generated@@361 ($generated@@8 ($generated@@334 $generated@@662))) ($generated@@336 ($generated@@361 ($generated@@8 $generated@@662))))
 :pattern ( ($generated@@361 ($generated@@8 ($generated@@334 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@361 ($generated@@336 $generated@@663)) ($generated@@336 ($generated@@361 $generated@@663)))
 :pattern ( ($generated@@361 ($generated@@336 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@356 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@355 $generated@@665)) (= ($generated@@354 $generated@@664) 0)) (= $generated@@664 ($generated@@353 $generated@@665))))
 :pattern ( ($generated@@354 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@76 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@374 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@374 $generated@@666) ($generated ($generated@@81 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@374 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@671) $generated@@2)) ($generated@@74 $generated@@671 $generated@@46 $generated@@670))
 :pattern ( ($generated@@74 $generated@@671 $generated@@46 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@673) $generated@@3)) ($generated@@74 $generated@@673 $generated@@47 $generated@@672))
 :pattern ( ($generated@@74 $generated@@673 $generated@@47 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@675) $generated@@4)) ($generated@@74 $generated@@675 $generated@@44 $generated@@674))
 :pattern ( ($generated@@74 $generated@@675 $generated@@44 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@677) $generated@@526)) ($generated@@74 $generated@@677 $generated@@45 $generated@@676))
 :pattern ( ($generated@@74 $generated@@677 $generated@@45 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@679) $generated@@248)) ($generated@@74 $generated@@679 $generated@@48 $generated@@678))
 :pattern ( ($generated@@74 $generated@@679 $generated@@48 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@355 $generated@@248)) (= (type $generated@@681) $generated@@64)) (= ($generated@@224 $generated@@680 ($generated@@568 $generated@@681)) (forall (($generated@@682 Int) ) (!  (=> (and (<= 0 $generated@@682) (< $generated@@682 ($generated@@354 $generated@@680))) ($generated@@315 ($generated@@569 $generated@@680 $generated@@682) $generated@@681))
 :pattern ( ($generated@@569 $generated@@680 $generated@@682))
))))
 :pattern ( ($generated@@224 $generated@@680 ($generated@@568 $generated@@681)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 Int) ) (!  (=> (= (type $generated@@684) ($generated@@355 $generated@@248)) (=> (and (<= 0 $generated@@685) (< $generated@@685 ($generated@@354 $generated@@684))) (< ($generated@@607 ($generated@@455 $generated@@239 ($generated@@569 $generated@@684 $generated@@685))) ($generated@@683 $generated@@684))))
 :pattern ( ($generated@@607 ($generated@@455 $generated@@239 ($generated@@569 $generated@@684 $generated@@685))))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@687) $generated@@64)) (= (type $generated@@688) $generated@@64)) ($generated@@224 $generated@@686 ($generated@@483 $generated@@687 $generated@@688))) (and (and ($generated@@224 ($generated@@380 $generated@@686) ($generated@@324 $generated@@687)) ($generated@@224 ($generated@@423 $generated@@686) ($generated@@324 $generated@@688))) ($generated@@224 ($generated@@454 $generated@@686) ($generated@@324 ($generated@@238 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@224 $generated@@686 ($generated@@483 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@690) $generated@@64)) (= (type $generated@@691) $generated@@64)) ($generated@@224 $generated@@689 ($generated@@491 $generated@@690 $generated@@691))) (and (and ($generated@@224 ($generated@@398 $generated@@689) ($generated@@329 $generated@@690)) ($generated@@224 ($generated@@434 $generated@@689) ($generated@@329 $generated@@691))) ($generated@@224 ($generated@@465 $generated@@689) ($generated@@329 ($generated@@238 $generated@@690 $generated@@691)))))
 :pattern ( ($generated@@224 $generated@@689 ($generated@@491 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@2) ($generated@@224 $generated@@692 $generated@@46))
 :pattern ( ($generated@@224 $generated@@692 $generated@@46))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@3) ($generated@@224 $generated@@693 $generated@@47))
 :pattern ( ($generated@@224 $generated@@693 $generated@@47))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@4) ($generated@@224 $generated@@694 $generated@@44))
 :pattern ( ($generated@@224 $generated@@694 $generated@@44))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@526) ($generated@@224 $generated@@695 $generated@@45))
 :pattern ( ($generated@@224 $generated@@695 $generated@@45))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@248) ($generated@@224 $generated@@696 $generated@@48))
 :pattern ( ($generated@@224 $generated@@696 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 (T@U) Bool)
(declare-fun $generated@@704 () Int)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () Int)
(assert  (and (and (and (= (type $generated@@697) ($generated@@260 $generated@@77 $generated@@4)) (= (type $generated@@698) $generated@@77)) (= (type $generated@@699) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@705) ($generated@@355 $generated@@248))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@707  (=> (and (= $generated@@697 ($generated@@259 $generated@@698 $generated@@699 $generated@@60 false)) (= $generated@@700 ($generated@@334 0))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@334 (- 0 128)) $generated@@700) (< $generated@@700 128))) (=> (and (<= ($generated@@334 (- 0 128)) $generated@@700) (< $generated@@700 128)) (=> (not (= $generated@@701 0)) (=> (and (= $generated@@702 ($generated@@334 (- 0 127))) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@334 (- 0 128)) $generated@@702) (< $generated@@702 128)))))))))
(let (($generated@@708  (=> (and ($generated@@340 $generated@@699) ($generated@@703 $generated@@699)) (=> (and (and (and (<= ($generated@@334 (- 0 128)) $generated@@704) (< $generated@@704 128)) (and (<= ($generated@@334 (- 0 128)) $generated@@701) (< $generated@@701 128))) (and (and ($generated@@224 $generated@@705 ($generated@@568 $generated@@45)) ($generated@@74 $generated@@705 ($generated@@568 $generated@@45) $generated@@699)) (and (= 1 $generated@@706) (= (ControlFlow 0 4) 2)))) $generated@@707))))
$generated@@708)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 () T@T)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 () T@T)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@259 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U T@U) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@330 (Int) Int)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) Bool)
(declare-fun $generated@@337 (T@U T@U T@U) Bool)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@349 (T@T) T@U)
(declare-fun $generated@@350 (T@U) Int)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@362 (T@U) Int)
(declare-fun $generated@@363 (T@T) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@T) T@U)
(declare-fun $generated@@370 (T@T T@T) T@T)
(declare-fun $generated@@371 (T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@T) T@U)
(declare-fun $generated@@388 (T@T T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@T T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@471 (T@U T@U) T@U)
(declare-fun $generated@@479 (T@U T@U) T@U)
(declare-fun $generated@@487 (Int Int) Int)
(declare-fun $generated@@490 (T@T) T@U)
(declare-fun $generated@@514 () T@T)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@557 (T@U Int) T@U)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@611 (Int Int) Int)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@674 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@2) ($generated@@220 $generated@@221 ($generated@@75 0)))
 :pattern ( ($generated@@220 $generated@@221 ($generated@@75 0)))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (= (type $generated@@222) $generated@@132) ($generated@@220 $generated@@222 ($generated@@75 1)))
 :pattern ( ($generated@@220 $generated@@222 ($generated@@75 1)))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@140) ($generated@@220 $generated@@223 ($generated@@75 2)))
 :pattern ( ($generated@@220 $generated@@223 ($generated@@75 2)))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (= (type $generated@@224) $generated@@148) ($generated@@220 $generated@@224 ($generated@@75 3)))
 :pattern ( ($generated@@220 $generated@@224 ($generated@@75 3)))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@156) ($generated@@220 $generated@@225 ($generated@@75 4)))
 :pattern ( ($generated@@220 $generated@@225 ($generated@@75 4)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@164) ($generated@@220 $generated@@226 ($generated@@75 7)))
 :pattern ( ($generated@@220 $generated@@226 ($generated@@75 7)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@172) ($generated@@220 $generated@@227 ($generated@@75 8)))
 :pattern ( ($generated@@220 $generated@@227 ($generated@@75 8)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@180) ($generated@@220 $generated@@228 ($generated@@75 15)))
 :pattern ( ($generated@@220 $generated@@228 ($generated@@75 15)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@188) ($generated@@220 $generated@@229 ($generated@@75 16)))
 :pattern ( ($generated@@220 $generated@@229 ($generated@@75 16)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@196) ($generated@@220 $generated@@230 ($generated@@75 32)))
 :pattern ( ($generated@@220 $generated@@230 ($generated@@75 32)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@204) ($generated@@220 $generated@@231 ($generated@@75 53)))
 :pattern ( ($generated@@220 $generated@@231 ($generated@@75 53)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@212) ($generated@@220 $generated@@232 ($generated@@75 100)))
 :pattern ( ($generated@@220 $generated@@232 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@235) 25) (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@64) (= (type $generated@@239) $generated@@64)) (= (type $generated@@240) $generated@@235)) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239))) ($generated@@233 $generated@@240))
 :pattern ( ($generated@@233 $generated@@240) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239)))
)))
(assert  (and (and (= ($generated@@1 $generated@@244) 26) (forall (($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@242 $generated@@245))
))) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@246)) $generated@@244)
 :pattern ( ($generated@@243 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@235) (= (type $generated@@248) $generated@@235)) true) (= ($generated@@241 $generated@@247 $generated@@248)  (and (= ($generated@@242 $generated@@247) ($generated@@242 $generated@@248)) (= ($generated@@243 $generated@@247) ($generated@@243 $generated@@248)))))
 :pattern ( ($generated@@241 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@249 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@253) $generated@@64)) ($generated@@220 $generated@@252 ($generated@@249 $generated@@253))) ($generated@@250 $generated@@252))
 :pattern ( ($generated@@220 $generated@@252 ($generated@@249 $generated@@253)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@260 $generated@@261)) 27)) (forall (($generated@@262 T@T) ($generated@@263 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@262 $generated@@263)) $generated@@262)
 :pattern ( ($generated@@256 $generated@@262 $generated@@263))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@264 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@256 $generated@@264 $generated@@265))
))) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@258 (type $generated@@266))))
(= (type ($generated@@254 $generated@@266 $generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@254 $generated@@266 $generated@@267 $generated@@268))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(let (($generated@@275 (type $generated@@271)))
(= (type ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273)) ($generated@@256 $generated@@275 $generated@@274))))
 :pattern ( ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273))
))) (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@258 (type $generated@@276))))
 (=> (= (type $generated@@279) $generated@@280) (= ($generated@@254 ($generated@@259 $generated@@276 $generated@@277 $generated@@278 $generated@@279) $generated@@277 $generated@@278) $generated@@279)))
 :weight 0
))) (and (and (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (or (= $generated@@283 $generated@@285) (= ($generated@@254 ($generated@@259 $generated@@282 $generated@@283 $generated@@284 $generated@@281) $generated@@285 $generated@@286) ($generated@@254 $generated@@282 $generated@@285 $generated@@286)))
 :weight 0
)) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (or (= $generated@@290 $generated@@292) (= ($generated@@254 ($generated@@259 $generated@@288 $generated@@289 $generated@@290 $generated@@287) $generated@@291 $generated@@292) ($generated@@254 $generated@@288 $generated@@291 $generated@@292)))
 :weight 0
))) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (or true (= ($generated@@254 ($generated@@259 $generated@@294 $generated@@295 $generated@@296 $generated@@293) $generated@@297 $generated@@298) ($generated@@254 $generated@@294 $generated@@297 $generated@@298)))
 :weight 0
)))) (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Bool) ) (! (= (type ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302)) ($generated@@256 $generated@@77 $generated@@4))
 :pattern ( ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ($generated@@307 T@U) ($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@67 (type $generated@@308))))
 (=> (and (and (and (and (= (type $generated@@303) $generated@@77) (= (type $generated@@304) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@305) ($generated@@66 $generated@@4))) (= (type $generated@@307) $generated@@77)) (= (type $generated@@308) ($generated@@66 $generated@@309))) (= ($generated@@0 ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))  (=> (and (not (= $generated@@307 $generated@@303)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@304 $generated@@307) $generated@@305))) $generated@@306))))
 :pattern ( ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (= (type ($generated@@310 $generated@@312 $generated@@313)) $generated@@235)
 :pattern ( ($generated@@310 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@64) (= (type $generated@@315) $generated@@64)) (= (type $generated@@316) $generated@@244)) (= (type $generated@@317) $generated@@244)) (= ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315))  (and ($generated@@311 $generated@@316 $generated@@314) ($generated@@311 $generated@@317 $generated@@315))))
 :pattern ( ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@235) (= (type $generated@@319) $generated@@235)) (= ($generated@@241 $generated@@318 $generated@@319) (= $generated@@318 $generated@@319)))
 :pattern ( ($generated@@241 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@64)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@323) $generated@@64)) (= ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@244) ($generated@@0 ($generated@@81 $generated@@322 $generated@@324))) ($generated@@311 $generated@@324 $generated@@323))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
))))
 :pattern ( ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@64)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@328) $generated@@64)) (= ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@244) ($generated@@0 ($generated@@81 $generated@@327 $generated@@329))) ($generated@@311 $generated@@329 $generated@@328))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)))
)))
(assert (forall (($generated@@331 Int) ) (! (= ($generated@@330 $generated@@331) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
(= (type ($generated@@332 $generated@@333)) $generated@@334))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (= ($generated@@332 $generated@@335) $generated@@335)
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@338) $generated@@64) (= (type $generated@@339) $generated@@64)) (= (type $generated@@340) $generated@@244)) (= (type $generated@@341) $generated@@244)) (= (type $generated@@342) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@336 $generated@@342)) (= ($generated@@74 ($generated@@310 $generated@@340 $generated@@341) ($generated@@234 $generated@@338 $generated@@339) $generated@@342)  (and ($generated@@337 $generated@@340 $generated@@338 $generated@@342) ($generated@@337 $generated@@341 $generated@@339 $generated@@342))))
 :pattern ( ($generated@@74 ($generated@@310 $generated@@340 $generated@@341) ($generated@@234 $generated@@338 $generated@@339) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@68)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@235) (= ($generated@@233 $generated@@345) (= ($generated@@343 $generated@@345) $generated@@61)))
 :pattern ( ($generated@@233 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@235) ($generated@@233 $generated@@346)) (exists (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (and (and (= (type $generated@@347) $generated@@244) (= (type $generated@@348) $generated@@244)) (= $generated@@346 ($generated@@310 $generated@@347 $generated@@348)))
 :no-pattern (type $generated@@347)
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
)))
 :pattern ( ($generated@@233 $generated@@346))
)))
(assert  (and (and (forall (($generated@@353 T@T) ) (= ($generated@@1 ($generated@@351 $generated@@353)) 28)) (forall (($generated@@354 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@351 $generated@@354))
))) (forall (($generated@@355 T@T) ) (! (= (type ($generated@@349 $generated@@355)) ($generated@@351 $generated@@355))
 :pattern ( ($generated@@349 $generated@@355))
))))
(assert (forall (($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@356)) 0)
 :pattern ( ($generated@@349 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@244)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@64) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@337 ($generated@@357 $generated@@359) $generated@@360 $generated@@361) ($generated@@74 $generated@@359 $generated@@360 $generated@@361)))
 :pattern ( ($generated@@337 ($generated@@357 $generated@@359) $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@364 T@T) ) (! (= (type ($generated@@363 $generated@@364)) ($generated@@76 $generated@@364 $generated@@2))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@79 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@76 $generated@@366 $generated@@2)) (and (= (= ($generated@@362 $generated@@365) 0) (= $generated@@365 ($generated@@363 $generated@@366))) (=> (not (= ($generated@@362 $generated@@365) 0)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367))))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert  (and (and (and (and (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (= ($generated@@1 ($generated@@370 $generated@@373 $generated@@374)) 29)) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@371 ($generated@@370 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@370 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@372 ($generated@@370 $generated@@377 $generated@@378)) $generated@@378)
 :pattern ( ($generated@@370 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@371 (type $generated@@379))))
(= (type ($generated@@368 $generated@@379)) ($generated@@76 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@379))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= (type ($generated@@369 $generated@@381 $generated@@382)) ($generated@@370 $generated@@381 $generated@@382))
 :pattern ( ($generated@@369 $generated@@381 $generated@@382))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@T) ) (! (let (($generated@@385 (type $generated@@383)))
 (not ($generated@@0 ($generated@@81 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383))))
 :pattern ( (let (($generated@@385 (type $generated@@383)))
($generated@@81 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383)))
)))
(assert  (and (and (and (and (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (= ($generated@@1 ($generated@@388 $generated@@391 $generated@@392)) 30)) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@389 ($generated@@388 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@388 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@390 ($generated@@388 $generated@@395 $generated@@396)) $generated@@396)
 :pattern ( ($generated@@388 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@389 (type $generated@@397))))
(= (type ($generated@@386 $generated@@397)) ($generated@@76 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@397))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= (type ($generated@@387 $generated@@399 $generated@@400)) ($generated@@388 $generated@@399 $generated@@400))
 :pattern ( ($generated@@387 $generated@@399 $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@T) ) (! (let (($generated@@403 (type $generated@@401)))
 (not ($generated@@0 ($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401))))
 :pattern ( (let (($generated@@403 (type $generated@@401)))
($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401)))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@79 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@76 $generated@@405 $generated@@2)) (= ($generated@@250 $generated@@404) (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@405) (and (<= 0 ($generated ($generated@@81 $generated@@404 $generated@@406))) (<= ($generated ($generated@@81 $generated@@404 $generated@@406)) ($generated@@362 $generated@@404))))
 :pattern ( ($generated@@81 $generated@@404 $generated@@406))
)))))
 :pattern ( ($generated@@250 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@372 (type $generated@@407))))
(let (($generated@@409 ($generated@@371 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@370 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@369 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@368 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@372 (type $generated@@412))))
(= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@413 $generated@@4)))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@372 (type $generated@@414))))
(let (($generated@@416 ($generated@@371 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@370 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@369 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@415) ($generated@@0 ($generated@@81 ($generated@@411 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@411 $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@390 (type $generated@@418))))
(let (($generated@@420 ($generated@@389 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@388 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@387 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@386 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@390 (type $generated@@423))))
(= (type ($generated@@422 $generated@@423)) ($generated@@76 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@390 (type $generated@@425))))
(let (($generated@@427 ($generated@@389 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@388 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@387 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@426) ($generated@@0 ($generated@@81 ($generated@@422 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@422 $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@430) $generated@@64)) (= ($generated@@220 $generated@@429 ($generated@@249 $generated@@430)) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@429 $generated@@431)))) ($generated@@311 $generated@@431 $generated@@430))
 :pattern ( ($generated@@81 $generated@@429 $generated@@431))
))))
 :pattern ( ($generated@@220 $generated@@429 ($generated@@249 $generated@@430)))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@432 ($generated@@320 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@244) ($generated@@0 ($generated@@81 $generated@@432 $generated@@435))) ($generated@@337 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@81 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@74 $generated@@432 ($generated@@320 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (= (type $generated@@436) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@437) $generated@@64)) (= (type $generated@@438) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@436 ($generated@@325 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@244) ($generated@@0 ($generated@@81 $generated@@436 $generated@@439))) ($generated@@337 $generated@@439 $generated@@437 $generated@@438))
 :pattern ( ($generated@@81 $generated@@436 $generated@@439))
))))
 :pattern ( ($generated@@74 $generated@@436 ($generated@@325 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(= ($generated ($generated@@81 ($generated@@363 $generated@@441) $generated@@440)) 0))
 :pattern ( (let (($generated@@441 (type $generated@@440)))
($generated@@81 ($generated@@363 $generated@@441) $generated@@440)))
)))
(assert  (and (and (forall (($generated@@445 T@U) ) (! (= (type ($generated@@442 $generated@@445)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@442 $generated@@445))
)) (forall (($generated@@446 T@T) ($generated@@447 T@U) ) (! (= (type ($generated@@443 $generated@@446 $generated@@447)) $generated@@446)
 :pattern ( ($generated@@443 $generated@@446 $generated@@447))
))) (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@372 (type $generated@@448))))
(let (($generated@@450 ($generated@@371 (type $generated@@448))))
(= (type ($generated@@444 $generated@@448)) ($generated@@76 $generated@@450 $generated@@449))))
 :pattern ( ($generated@@444 $generated@@448))
))))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@452) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@442 $generated@@451) $generated@@452))  (and ($generated@@0 ($generated@@81 ($generated@@368 $generated@@451) ($generated@@242 ($generated@@443 $generated@@235 $generated@@452)))) (= ($generated@@81 ($generated@@444 $generated@@451) ($generated@@242 ($generated@@443 $generated@@235 $generated@@452))) ($generated@@243 ($generated@@443 $generated@@235 $generated@@452))))))
 :pattern ( ($generated@@81 ($generated@@442 $generated@@451) $generated@@452))
)))
(assert  (and (forall (($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@455)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@453 $generated@@455))
)) (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@390 (type $generated@@456))))
(let (($generated@@458 ($generated@@389 (type $generated@@456))))
(= (type ($generated@@454 $generated@@456)) ($generated@@76 $generated@@458 $generated@@457))))
 :pattern ( ($generated@@454 $generated@@456))
))))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@460) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@453 $generated@@459) $generated@@460))  (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@459) ($generated@@242 ($generated@@443 $generated@@235 $generated@@460)))) (= ($generated@@81 ($generated@@454 $generated@@459) ($generated@@242 ($generated@@443 $generated@@235 $generated@@460))) ($generated@@243 ($generated@@443 $generated@@235 $generated@@460))))))
 :pattern ( ($generated@@81 ($generated@@453 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@462)))
(let (($generated@@464 ($generated@@371 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@370 $generated@@464 $generated@@463)) (= ($generated@@0 ($generated@@81 ($generated@@411 $generated@@461) $generated@@462)) (exists (($generated@@465 T@U) ) (!  (and (= (type $generated@@465) $generated@@464) (and ($generated@@0 ($generated@@81 ($generated@@368 $generated@@461) $generated@@465)) (= $generated@@462 ($generated@@81 ($generated@@444 $generated@@461) $generated@@465))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@461) $generated@@465))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@461) $generated@@465))
))))))
 :pattern ( ($generated@@81 ($generated@@411 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 (type $generated@@467)))
(let (($generated@@469 ($generated@@389 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@388 $generated@@469 $generated@@468)) (= ($generated@@0 ($generated@@81 ($generated@@422 $generated@@466) $generated@@467)) (exists (($generated@@470 T@U) ) (!  (and (= (type $generated@@470) $generated@@469) (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@466) $generated@@470)) (= $generated@@467 ($generated@@81 ($generated@@454 $generated@@466) $generated@@470))))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@466) $generated@@470))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@466) $generated@@470))
))))))
 :pattern ( ($generated@@81 ($generated@@422 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (and (= (type $generated@@474) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@475) $generated@@64)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477) (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@474) $generated@@478))) (and ($generated@@337 ($generated@@81 ($generated@@444 $generated@@474) $generated@@478) $generated@@476 $generated@@477) ($generated@@337 $generated@@478 $generated@@475 $generated@@477)))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@474) $generated@@478))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@474) $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (= (type $generated@@482) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@482) $generated@@486))) (and ($generated@@337 ($generated@@81 ($generated@@454 $generated@@482) $generated@@486) $generated@@484 $generated@@485) ($generated@@337 $generated@@486 $generated@@483 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@482) $generated@@486))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@482) $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ($generated@@489 Int) ) (! (= ($generated@@487 $generated@@488 $generated@@489) (div $generated@@488 $generated@@489))
 :pattern ( ($generated@@487 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@T) ) (! (= (type ($generated@@490 $generated@@491)) ($generated@@76 $generated@@491 $generated@@4))
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@390 (type $generated@@492))))
(let (($generated@@494 ($generated@@389 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@388 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@387 $generated@@494 $generated@@493)) (= ($generated@@386 $generated@@492) ($generated@@490 $generated@@494))))))
 :pattern ( ($generated@@386 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@390 (type $generated@@495))))
(let (($generated@@497 ($generated@@389 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@388 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@387 $generated@@497 $generated@@496)) (= ($generated@@422 $generated@@495) ($generated@@490 $generated@@496))))))
 :pattern ( ($generated@@422 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@390 (type $generated@@498))))
(let (($generated@@500 ($generated@@389 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@388 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@387 $generated@@500 $generated@@499)) (= ($generated@@453 $generated@@498) ($generated@@490 $generated@@244))))))
 :pattern ( ($generated@@453 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@372 (type $generated@@501))))
(let (($generated@@503 ($generated@@371 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@370 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@369 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@244) (= (type $generated@@505) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@442 $generated@@501) ($generated@@357 ($generated@@310 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@442 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@390 (type $generated@@506))))
(let (($generated@@508 ($generated@@389 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@388 $generated@@508 $generated@@507)) (or (= $generated@@506 ($generated@@387 $generated@@508 $generated@@507)) (exists (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (and (and (= (type $generated@@509) $generated@@244) (= (type $generated@@510) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@453 $generated@@506) ($generated@@357 ($generated@@310 $generated@@509 $generated@@510)))))
 :no-pattern (type $generated@@509)
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@453 $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@244) ($generated@@311 $generated@@511 $generated@@46)) (and (= ($generated@@357 ($generated@@443 $generated@@2 $generated@@511)) $generated@@511) ($generated@@220 ($generated@@443 $generated@@2 $generated@@511) $generated@@46)))
 :pattern ( ($generated@@311 $generated@@511 $generated@@46))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@244) ($generated@@311 $generated@@512 $generated@@47)) (and (= ($generated@@357 ($generated@@443 $generated@@3 $generated@@512)) $generated@@512) ($generated@@220 ($generated@@443 $generated@@3 $generated@@512) $generated@@47)))
 :pattern ( ($generated@@311 $generated@@512 $generated@@47))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@244) ($generated@@311 $generated@@513 $generated@@44)) (and (= ($generated@@357 ($generated@@443 $generated@@4 $generated@@513)) $generated@@513) ($generated@@220 ($generated@@443 $generated@@4 $generated@@513) $generated@@44)))
 :pattern ( ($generated@@311 $generated@@513 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@514) 31))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@244) ($generated@@311 $generated@@515 $generated@@45)) (and (= ($generated@@357 ($generated@@443 $generated@@514 $generated@@515)) $generated@@515) ($generated@@220 ($generated@@443 $generated@@514 $generated@@515) $generated@@45)))
 :pattern ( ($generated@@311 $generated@@515 $generated@@45))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@311 ($generated@@357 $generated@@516) $generated@@517) ($generated@@220 $generated@@516 $generated@@517)))
 :pattern ( ($generated@@311 ($generated@@357 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@79 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@76 $generated@@519 $generated@@2)) (<= 0 ($generated@@362 $generated@@518))))
 :pattern ( ($generated@@362 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@352 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@351 $generated@@521)) (<= 0 ($generated@@350 $generated@@520))))
 :pattern ( ($generated@@350 $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= ($generated@@522 ($generated@@471 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@471 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@526 ($generated@@471 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@471 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@64) (= (type $generated@@531) $generated@@64)) (= ($generated@@72 ($generated@@471 $generated@@530 $generated@@531)) $generated@@58))
 :pattern ( ($generated@@471 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@64)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= ($generated@@532 ($generated@@479 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@479 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@64)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (= ($generated@@536 ($generated@@479 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@479 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@72 ($generated@@479 $generated@@540 $generated@@541)) $generated@@59))
 :pattern ( ($generated@@479 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@244) (= (type $generated@@543) $generated@@244)) (= ($generated@@343 ($generated@@310 $generated@@542 $generated@@543)) $generated@@61))
 :pattern ( ($generated@@310 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@234 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@234 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@234 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@234 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@244) (= (type $generated@@553) $generated@@244)) (= ($generated@@242 ($generated@@310 $generated@@552 $generated@@553)) $generated@@552))
 :pattern ( ($generated@@310 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@244) (= (type $generated@@555) $generated@@244)) (= ($generated@@243 ($generated@@310 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@310 $generated@@554 $generated@@555))
)))
(assert  (and (forall (($generated@@558 T@U) ) (! (= (type ($generated@@556 $generated@@558)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@558))
)) (forall (($generated@@559 T@U) ($generated@@560 Int) ) (! (let (($generated@@561 ($generated@@352 (type $generated@@559))))
(= (type ($generated@@557 $generated@@559 $generated@@560)) $generated@@561))
 :pattern ( ($generated@@557 $generated@@559 $generated@@560))
))))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@351 $generated@@244)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@562 ($generated@@556 $generated@@563) $generated@@564) (forall (($generated@@565 Int) ) (!  (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@350 $generated@@562))) ($generated@@337 ($generated@@557 $generated@@562 $generated@@565) $generated@@563 $generated@@564))
 :pattern ( ($generated@@557 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@556 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@566 ($generated@@75 $generated@@567)) $generated@@567)
 :pattern ( ($generated@@75 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@64) (= ($generated@@568 ($generated@@320 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@320 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@64) (= ($generated@@72 ($generated@@320 $generated@@571)) $generated@@54))
 :pattern ( ($generated@@320 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@64)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@64) (= ($generated@@572 ($generated@@325 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@325 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@64) (= ($generated@@72 ($generated@@325 $generated@@575)) $generated@@55))
 :pattern ( ($generated@@325 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@64)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@64) (= ($generated@@576 ($generated@@249 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@249 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@579)) $generated@@56))
 :pattern ( ($generated@@249 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@556 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@556 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@556 $generated@@583)) $generated@@57))
 :pattern ( ($generated@@556 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
(= ($generated@@443 $generated@@585 ($generated@@357 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@357 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) $generated@@64)) (= ($generated@@220 $generated@@586 ($generated@@471 $generated@@587 $generated@@588)) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@586) $generated@@589))) (and ($generated@@311 ($generated@@81 ($generated@@444 $generated@@586) $generated@@589) $generated@@588) ($generated@@311 $generated@@589 $generated@@587)))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@586) $generated@@589))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@586) $generated@@589))
))))
 :pattern ( ($generated@@220 $generated@@586 ($generated@@471 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) (= ($generated@@220 $generated@@590 ($generated@@479 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@590) $generated@@593))) (and ($generated@@311 ($generated@@81 ($generated@@454 $generated@@590) $generated@@593) $generated@@592) ($generated@@311 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@590) $generated@@593))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@220 $generated@@590 ($generated@@479 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@244) (= (type $generated@@597) $generated@@244)) (< ($generated@@594 $generated@@596) ($generated@@595 ($generated@@310 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@310 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@244) (= (type $generated@@599) $generated@@244)) (< ($generated@@594 $generated@@599) ($generated@@595 ($generated@@310 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@310 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@244) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@311 $generated@@600 ($generated@@471 $generated@@601 $generated@@602))) (and (= ($generated@@357 ($generated@@443 ($generated@@370 $generated@@244 $generated@@244) $generated@@600)) $generated@@600) ($generated@@220 ($generated@@443 ($generated@@370 $generated@@244 $generated@@244) $generated@@600) ($generated@@471 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@311 $generated@@600 ($generated@@471 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@244) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) ($generated@@311 $generated@@603 ($generated@@479 $generated@@604 $generated@@605))) (and (= ($generated@@357 ($generated@@443 ($generated@@388 $generated@@244 $generated@@244) $generated@@603)) $generated@@603) ($generated@@220 ($generated@@443 ($generated@@388 $generated@@244 $generated@@244) $generated@@603) ($generated@@479 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@311 $generated@@603 ($generated@@479 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@64) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@244)) ($generated@@311 $generated@@608 ($generated@@234 $generated@@606 $generated@@607))) (and (= ($generated@@357 ($generated@@443 $generated@@235 $generated@@608)) $generated@@608) ($generated@@220 ($generated@@443 $generated@@235 $generated@@608) ($generated@@234 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@311 $generated@@608 ($generated@@234 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (not ($generated@@0 ($generated@@81 ($generated@@490 $generated@@610) $generated@@609))))
 :pattern ( (let (($generated@@610 (type $generated@@609)))
($generated@@81 ($generated@@490 $generated@@610) $generated@@609)))
)))
(assert (forall (($generated@@612 Int) ($generated@@613 Int) ) (! (= ($generated@@611 $generated@@612 $generated@@613) (mod $generated@@612 $generated@@613))
 :pattern ( ($generated@@611 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@69)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@64) (= (type $generated@@617) $generated@@64)) (and (= ($generated@@72 ($generated@@234 $generated@@616 $generated@@617)) $generated@@62) (= ($generated@@614 ($generated@@234 $generated@@616 $generated@@617)) $generated@@63)))
 :pattern ( ($generated@@234 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@235) (= ($generated@@594 ($generated@@357 $generated@@618)) ($generated@@595 $generated@@618)))
 :pattern ( ($generated@@594 ($generated@@357 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@244) ($generated@@311 $generated@@619 ($generated@@75 0))) (and (= ($generated@@357 ($generated@@443 $generated@@2 $generated@@619)) $generated@@619) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@619) ($generated@@75 0))))
 :pattern ( ($generated@@311 $generated@@619 ($generated@@75 0)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@244) ($generated@@311 $generated@@620 ($generated@@75 1))) (and (= ($generated@@357 ($generated@@443 $generated@@132 $generated@@620)) $generated@@620) ($generated@@220 ($generated@@443 $generated@@132 $generated@@620) ($generated@@75 1))))
 :pattern ( ($generated@@311 $generated@@620 ($generated@@75 1)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@244) (= (type $generated@@622) $generated@@64)) ($generated@@311 $generated@@621 ($generated@@320 $generated@@622))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@621)) $generated@@621) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@621) ($generated@@320 $generated@@622))))
 :pattern ( ($generated@@311 $generated@@621 ($generated@@320 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@244) (= (type $generated@@624) $generated@@64)) ($generated@@311 $generated@@623 ($generated@@325 $generated@@624))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@623)) $generated@@623) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@623) ($generated@@325 $generated@@624))))
 :pattern ( ($generated@@311 $generated@@623 ($generated@@325 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@244) (= (type $generated@@626) $generated@@64)) ($generated@@311 $generated@@625 ($generated@@249 $generated@@626))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@2) $generated@@625)) $generated@@625) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@2) $generated@@625) ($generated@@249 $generated@@626))))
 :pattern ( ($generated@@311 $generated@@625 ($generated@@249 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@244) (= (type $generated@@628) $generated@@64)) ($generated@@311 $generated@@627 ($generated@@556 $generated@@628))) (and (= ($generated@@357 ($generated@@443 ($generated@@351 $generated@@244) $generated@@627)) $generated@@627) ($generated@@220 ($generated@@443 ($generated@@351 $generated@@244) $generated@@627) ($generated@@556 $generated@@628))))
 :pattern ( ($generated@@311 $generated@@627 ($generated@@556 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@244) ($generated@@311 $generated@@629 ($generated@@75 2))) (and (= ($generated@@357 ($generated@@443 $generated@@140 $generated@@629)) $generated@@629) ($generated@@220 ($generated@@443 $generated@@140 $generated@@629) ($generated@@75 2))))
 :pattern ( ($generated@@311 $generated@@629 ($generated@@75 2)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@244) ($generated@@311 $generated@@630 ($generated@@75 3))) (and (= ($generated@@357 ($generated@@443 $generated@@148 $generated@@630)) $generated@@630) ($generated@@220 ($generated@@443 $generated@@148 $generated@@630) ($generated@@75 3))))
 :pattern ( ($generated@@311 $generated@@630 ($generated@@75 3)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@244) ($generated@@311 $generated@@631 ($generated@@75 4))) (and (= ($generated@@357 ($generated@@443 $generated@@156 $generated@@631)) $generated@@631) ($generated@@220 ($generated@@443 $generated@@156 $generated@@631) ($generated@@75 4))))
 :pattern ( ($generated@@311 $generated@@631 ($generated@@75 4)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@244) ($generated@@311 $generated@@632 ($generated@@75 7))) (and (= ($generated@@357 ($generated@@443 $generated@@164 $generated@@632)) $generated@@632) ($generated@@220 ($generated@@443 $generated@@164 $generated@@632) ($generated@@75 7))))
 :pattern ( ($generated@@311 $generated@@632 ($generated@@75 7)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@244) ($generated@@311 $generated@@633 ($generated@@75 8))) (and (= ($generated@@357 ($generated@@443 $generated@@172 $generated@@633)) $generated@@633) ($generated@@220 ($generated@@443 $generated@@172 $generated@@633) ($generated@@75 8))))
 :pattern ( ($generated@@311 $generated@@633 ($generated@@75 8)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@244) ($generated@@311 $generated@@634 ($generated@@75 15))) (and (= ($generated@@357 ($generated@@443 $generated@@180 $generated@@634)) $generated@@634) ($generated@@220 ($generated@@443 $generated@@180 $generated@@634) ($generated@@75 15))))
 :pattern ( ($generated@@311 $generated@@634 ($generated@@75 15)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@244) ($generated@@311 $generated@@635 ($generated@@75 16))) (and (= ($generated@@357 ($generated@@443 $generated@@188 $generated@@635)) $generated@@635) ($generated@@220 ($generated@@443 $generated@@188 $generated@@635) ($generated@@75 16))))
 :pattern ( ($generated@@311 $generated@@635 ($generated@@75 16)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@244) ($generated@@311 $generated@@636 ($generated@@75 32))) (and (= ($generated@@357 ($generated@@443 $generated@@196 $generated@@636)) $generated@@636) ($generated@@220 ($generated@@443 $generated@@196 $generated@@636) ($generated@@75 32))))
 :pattern ( ($generated@@311 $generated@@636 ($generated@@75 32)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@244) ($generated@@311 $generated@@637 ($generated@@75 53))) (and (= ($generated@@357 ($generated@@443 $generated@@204 $generated@@637)) $generated@@637) ($generated@@220 ($generated@@443 $generated@@204 $generated@@637) ($generated@@75 53))))
 :pattern ( ($generated@@311 $generated@@637 ($generated@@75 53)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@244) ($generated@@311 $generated@@638 ($generated@@75 100))) (and (= ($generated@@357 ($generated@@443 $generated@@212 $generated@@638)) $generated@@638) ($generated@@220 ($generated@@443 $generated@@212 $generated@@638) ($generated@@75 100))))
 :pattern ( ($generated@@311 $generated@@638 ($generated@@75 100)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@639) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@640) $generated@@64)) (= (type $generated@@641) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@639 ($generated@@249 $generated@@640) $generated@@641) (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@639 $generated@@642)))) ($generated@@337 $generated@@642 $generated@@640 $generated@@641))
 :pattern ( ($generated@@81 $generated@@639 $generated@@642))
))))
 :pattern ( ($generated@@74 $generated@@639 ($generated@@249 $generated@@640) $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@235) (= (type $generated@@644) $generated@@64)) (= (type $generated@@645) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@336 $generated@@645) (and ($generated@@233 $generated@@643) (exists (($generated@@646 T@U) ) (!  (and (= (type $generated@@646) $generated@@64) ($generated@@74 $generated@@643 ($generated@@234 $generated@@644 $generated@@646) $generated@@645))
 :pattern ( ($generated@@74 $generated@@643 ($generated@@234 $generated@@644 $generated@@646) $generated@@645))
))))) ($generated@@337 ($generated@@242 $generated@@643) $generated@@644 $generated@@645))
 :pattern ( ($generated@@337 ($generated@@242 $generated@@643) $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@235) (= (type $generated@@648) $generated@@64)) (= (type $generated@@649) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@336 $generated@@649) (and ($generated@@233 $generated@@647) (exists (($generated@@650 T@U) ) (!  (and (= (type $generated@@650) $generated@@64) ($generated@@74 $generated@@647 ($generated@@234 $generated@@650 $generated@@648) $generated@@649))
 :pattern ( ($generated@@74 $generated@@647 ($generated@@234 $generated@@650 $generated@@648) $generated@@649))
))))) ($generated@@337 ($generated@@243 $generated@@647) $generated@@648 $generated@@649))
 :pattern ( ($generated@@337 ($generated@@243 $generated@@647) $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@244) (= (type $generated@@652) $generated@@244)) (= ($generated@@310 ($generated@@332 $generated@@651) ($generated@@332 $generated@@652)) ($generated@@332 ($generated@@310 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@310 ($generated@@332 $generated@@651) ($generated@@332 $generated@@652)))
)))
(assert (forall (($generated@@653 Int) ) (! (= ($generated@@357 ($generated@@8 ($generated@@330 $generated@@653))) ($generated@@332 ($generated@@357 ($generated@@8 $generated@@653))))
 :pattern ( ($generated@@357 ($generated@@8 ($generated@@330 $generated@@653))))
)))
(assert (forall (($generated@@654 T@U) ) (! (= ($generated@@357 ($generated@@332 $generated@@654)) ($generated@@332 ($generated@@357 $generated@@654)))
 :pattern ( ($generated@@357 ($generated@@332 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@352 (type $generated@@655))))
 (=> (and (= (type $generated@@655) ($generated@@351 $generated@@656)) (= ($generated@@350 $generated@@655) 0)) (= $generated@@655 ($generated@@349 $generated@@656))))
 :pattern ( ($generated@@350 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@658)))
 (=> (and (and (= (type $generated@@657) ($generated@@76 $generated@@660 $generated@@2)) (= (type $generated@@659) $generated@@2)) (<= 0 ($generated $generated@@659))) (= ($generated@@362 ($generated@@82 $generated@@657 $generated@@658 $generated@@659)) (+ (- ($generated@@362 $generated@@657) ($generated ($generated@@81 $generated@@657 $generated@@658))) ($generated $generated@@659)))))
 :pattern ( ($generated@@362 ($generated@@82 $generated@@657 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@662) $generated@@2)) ($generated@@74 $generated@@662 $generated@@46 $generated@@661))
 :pattern ( ($generated@@74 $generated@@662 $generated@@46 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@664) $generated@@3)) ($generated@@74 $generated@@664 $generated@@47 $generated@@663))
 :pattern ( ($generated@@74 $generated@@664 $generated@@47 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@666) $generated@@4)) ($generated@@74 $generated@@666 $generated@@44 $generated@@665))
 :pattern ( ($generated@@74 $generated@@666 $generated@@44 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@668) $generated@@514)) ($generated@@74 $generated@@668 $generated@@45 $generated@@667))
 :pattern ( ($generated@@74 $generated@@668 $generated@@45 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@670) $generated@@244)) ($generated@@74 $generated@@670 $generated@@48 $generated@@669))
 :pattern ( ($generated@@74 $generated@@670 $generated@@48 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@351 $generated@@244)) (= (type $generated@@672) $generated@@64)) (= ($generated@@220 $generated@@671 ($generated@@556 $generated@@672)) (forall (($generated@@673 Int) ) (!  (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@350 $generated@@671))) ($generated@@311 ($generated@@557 $generated@@671 $generated@@673) $generated@@672))
 :pattern ( ($generated@@557 $generated@@671 $generated@@673))
))))
 :pattern ( ($generated@@220 $generated@@671 ($generated@@556 $generated@@672)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 Int) ) (!  (=> (= (type $generated@@675) ($generated@@351 $generated@@244)) (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@350 $generated@@675))) (< ($generated@@595 ($generated@@443 $generated@@235 ($generated@@557 $generated@@675 $generated@@676))) ($generated@@674 $generated@@675))))
 :pattern ( ($generated@@595 ($generated@@443 $generated@@235 ($generated@@557 $generated@@675 $generated@@676))))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@678) $generated@@64)) (= (type $generated@@679) $generated@@64)) ($generated@@220 $generated@@677 ($generated@@471 $generated@@678 $generated@@679))) (and (and ($generated@@220 ($generated@@368 $generated@@677) ($generated@@320 $generated@@678)) ($generated@@220 ($generated@@411 $generated@@677) ($generated@@320 $generated@@679))) ($generated@@220 ($generated@@442 $generated@@677) ($generated@@320 ($generated@@234 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@220 $generated@@677 ($generated@@471 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@681) $generated@@64)) (= (type $generated@@682) $generated@@64)) ($generated@@220 $generated@@680 ($generated@@479 $generated@@681 $generated@@682))) (and (and ($generated@@220 ($generated@@386 $generated@@680) ($generated@@325 $generated@@681)) ($generated@@220 ($generated@@422 $generated@@680) ($generated@@325 $generated@@682))) ($generated@@220 ($generated@@453 $generated@@680) ($generated@@325 ($generated@@234 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@220 $generated@@680 ($generated@@479 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@2) ($generated@@220 $generated@@683 $generated@@46))
 :pattern ( ($generated@@220 $generated@@683 $generated@@46))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@3) ($generated@@220 $generated@@684 $generated@@47))
 :pattern ( ($generated@@220 $generated@@684 $generated@@47))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@4) ($generated@@220 $generated@@685 $generated@@44))
 :pattern ( ($generated@@220 $generated@@685 $generated@@44))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@514) ($generated@@220 $generated@@686 $generated@@45))
 :pattern ( ($generated@@220 $generated@@686 $generated@@45))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@244) ($generated@@220 $generated@@687 $generated@@48))
 :pattern ( ($generated@@220 $generated@@687 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 (T@U) Bool)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(assert  (and (and (and (= (type $generated@@688) ($generated@@256 $generated@@77 $generated@@4)) (= (type $generated@@689) $generated@@77)) (= (type $generated@@690) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@696) ($generated@@351 $generated@@244))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@698  (=> (= $generated@@688 ($generated@@255 $generated@@689 $generated@@690 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@691 0))) (=> (= $generated@@692 ($generated@@487 $generated@@693 $generated@@691)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@330 (- 0 128)) $generated@@692) (< $generated@@692 128))) (=> (and (<= ($generated@@330 (- 0 128)) $generated@@692) (< $generated@@692 128)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@691 0))) (=> (and (= $generated@@694 ($generated@@611 $generated@@693 $generated@@691)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@330 (- 0 128)) $generated@@694) (< $generated@@694 128)))))))))))
(let (($generated@@699  (=> (and (and ($generated@@336 $generated@@690) ($generated@@695 $generated@@690)) (and (<= ($generated@@330 (- 0 128)) $generated@@693) (< $generated@@693 128))) (=> (and (and (and (<= ($generated@@330 (- 0 128)) $generated@@691) (< $generated@@691 128)) (and ($generated@@220 $generated@@696 ($generated@@556 $generated@@45)) ($generated@@74 $generated@@696 ($generated@@556 $generated@@45) $generated@@690))) (and (and (= 1 $generated@@697) (not (= $generated@@691 0))) (and (<= ($generated@@330 (- 0 127)) $generated@@693) (= (ControlFlow 0 6) 2)))) $generated@@698))))
$generated@@699)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 () T@T)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 () T@T)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@260 (T@T T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@334 (Int) Int)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@341 (T@U T@U T@U) Bool)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@354 (T@U) Int)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@374 (T@U) Int)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@T T@T) T@U)
(declare-fun $generated@@382 (T@T T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@T) T@U)
(declare-fun $generated@@400 (T@T T@T) T@T)
(declare-fun $generated@@401 (T@T) T@T)
(declare-fun $generated@@402 (T@T) T@T)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@T T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@483 (T@U T@U) T@U)
(declare-fun $generated@@491 (T@U T@U) T@U)
(declare-fun $generated@@502 (T@T) T@U)
(declare-fun $generated@@526 () T@T)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@569 (T@U Int) T@U)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@683 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@220 $generated@@221 $generated@@222)) (forall (($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@221 $generated@@223) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60))
)))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@2) ($generated@@224 $generated@@225 ($generated@@75 0)))
 :pattern ( ($generated@@224 $generated@@225 ($generated@@75 0)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@132) ($generated@@224 $generated@@226 ($generated@@75 1)))
 :pattern ( ($generated@@224 $generated@@226 ($generated@@75 1)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@140) ($generated@@224 $generated@@227 ($generated@@75 2)))
 :pattern ( ($generated@@224 $generated@@227 ($generated@@75 2)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@148) ($generated@@224 $generated@@228 ($generated@@75 3)))
 :pattern ( ($generated@@224 $generated@@228 ($generated@@75 3)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@156) ($generated@@224 $generated@@229 ($generated@@75 4)))
 :pattern ( ($generated@@224 $generated@@229 ($generated@@75 4)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@164) ($generated@@224 $generated@@230 ($generated@@75 7)))
 :pattern ( ($generated@@224 $generated@@230 ($generated@@75 7)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@172) ($generated@@224 $generated@@231 ($generated@@75 8)))
 :pattern ( ($generated@@224 $generated@@231 ($generated@@75 8)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@180) ($generated@@224 $generated@@232 ($generated@@75 15)))
 :pattern ( ($generated@@224 $generated@@232 ($generated@@75 15)))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (= (type $generated@@233) $generated@@188) ($generated@@224 $generated@@233 ($generated@@75 16)))
 :pattern ( ($generated@@224 $generated@@233 ($generated@@75 16)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (= (type $generated@@234) $generated@@196) ($generated@@224 $generated@@234 ($generated@@75 32)))
 :pattern ( ($generated@@224 $generated@@234 ($generated@@75 32)))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@204) ($generated@@224 $generated@@235 ($generated@@75 53)))
 :pattern ( ($generated@@224 $generated@@235 ($generated@@75 53)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@212) ($generated@@224 $generated@@236 ($generated@@75 100)))
 :pattern ( ($generated@@224 $generated@@236 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@239) 25) (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@64) (= (type $generated@@243) $generated@@64)) (= (type $generated@@244) $generated@@239)) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243))) ($generated@@237 $generated@@244))
 :pattern ( ($generated@@237 $generated@@244) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243)))
)))
(assert  (and (and (= ($generated@@1 $generated@@248) 26) (forall (($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@246 $generated@@249))
))) (forall (($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@250)) $generated@@248)
 :pattern ( ($generated@@247 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@251) $generated@@239) (= (type $generated@@252) $generated@@239)) true) (= ($generated@@245 $generated@@251 $generated@@252)  (and (= ($generated@@246 $generated@@251) ($generated@@246 $generated@@252)) (= ($generated@@247 $generated@@251) ($generated@@247 $generated@@252)))))
 :pattern ( ($generated@@245 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@253 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@257) $generated@@64)) ($generated@@224 $generated@@256 ($generated@@253 $generated@@257))) ($generated@@254 $generated@@256))
 :pattern ( ($generated@@224 $generated@@256 ($generated@@253 $generated@@257)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@264 $generated@@265)) 27)) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@260 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@262 ($generated@@260 $generated@@268 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@260 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@262 (type $generated@@270))))
(= (type ($generated@@258 $generated@@270 $generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@258 $generated@@270 $generated@@271 $generated@@272))
))) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(let (($generated@@279 (type $generated@@275)))
(= (type ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277)) ($generated@@260 $generated@@279 $generated@@278))))
 :pattern ( ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277))
))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@262 (type $generated@@280))))
 (=> (= (type $generated@@283) $generated@@284) (= ($generated@@258 ($generated@@263 $generated@@280 $generated@@281 $generated@@282 $generated@@283) $generated@@281 $generated@@282) $generated@@283)))
 :weight 0
))) (and (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (or (= $generated@@287 $generated@@289) (= ($generated@@258 ($generated@@263 $generated@@286 $generated@@287 $generated@@288 $generated@@285) $generated@@289 $generated@@290) ($generated@@258 $generated@@286 $generated@@289 $generated@@290)))
 :weight 0
)) (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (or (= $generated@@294 $generated@@296) (= ($generated@@258 ($generated@@263 $generated@@292 $generated@@293 $generated@@294 $generated@@291) $generated@@295 $generated@@296) ($generated@@258 $generated@@292 $generated@@295 $generated@@296)))
 :weight 0
))) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (or true (= ($generated@@258 ($generated@@263 $generated@@298 $generated@@299 $generated@@300 $generated@@297) $generated@@301 $generated@@302) ($generated@@258 $generated@@298 $generated@@301 $generated@@302)))
 :weight 0
)))) (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ) (! (= (type ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306)) ($generated@@260 $generated@@77 $generated@@4))
 :pattern ( ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 Bool) ($generated@@311 T@U) ($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@67 (type $generated@@312))))
 (=> (and (and (and (and (= (type $generated@@307) $generated@@77) (= (type $generated@@308) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@309) ($generated@@66 $generated@@4))) (= (type $generated@@311) $generated@@77)) (= (type $generated@@312) ($generated@@66 $generated@@313))) (= ($generated@@0 ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))  (=> (and (not (= $generated@@311 $generated@@307)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@308 $generated@@311) $generated@@309))) $generated@@310))))
 :pattern ( ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) $generated@@239)
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (= (type $generated@@318) $generated@@64) (= (type $generated@@319) $generated@@64)) (= (type $generated@@320) $generated@@248)) (= (type $generated@@321) $generated@@248)) (= ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319))  (and ($generated@@315 $generated@@320 $generated@@318) ($generated@@315 $generated@@321 $generated@@319))))
 :pattern ( ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@239) (= (type $generated@@323) $generated@@239)) (= ($generated@@245 $generated@@322 $generated@@323) (= $generated@@322 $generated@@323)))
 :pattern ( ($generated@@245 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@64)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@327) $generated@@64)) (= ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@248) ($generated@@0 ($generated@@81 $generated@@326 $generated@@328))) ($generated@@315 $generated@@328 $generated@@327))
 :pattern ( ($generated@@81 $generated@@326 $generated@@328))
))))
 :pattern ( ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@64)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@248) ($generated@@0 ($generated@@81 $generated@@331 $generated@@333))) ($generated@@315 $generated@@333 $generated@@332))
 :pattern ( ($generated@@81 $generated@@331 $generated@@333))
))))
 :pattern ( ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)))
)))
(assert (forall (($generated@@335 Int) ) (! (= ($generated@@334 $generated@@335) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 (type $generated@@337)))
(= (type ($generated@@336 $generated@@337)) $generated@@338))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= ($generated@@336 $generated@@339) $generated@@339)
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@342) $generated@@64) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) $generated@@248)) (= (type $generated@@345) $generated@@248)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@340 $generated@@346)) (= ($generated@@74 ($generated@@314 $generated@@344 $generated@@345) ($generated@@238 $generated@@342 $generated@@343) $generated@@346)  (and ($generated@@341 $generated@@344 $generated@@342 $generated@@346) ($generated@@341 $generated@@345 $generated@@343 $generated@@346))))
 :pattern ( ($generated@@74 ($generated@@314 $generated@@344 $generated@@345) ($generated@@238 $generated@@342 $generated@@343) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (= (type ($generated@@347 $generated@@348)) $generated@@68)
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@239) (= ($generated@@237 $generated@@349) (= ($generated@@347 $generated@@349) $generated@@61)))
 :pattern ( ($generated@@237 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@239) ($generated@@237 $generated@@350)) (exists (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (and (and (= (type $generated@@351) $generated@@248) (= (type $generated@@352) $generated@@248)) (= $generated@@350 ($generated@@314 $generated@@351 $generated@@352)))
 :no-pattern (type $generated@@351)
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
)))
 :pattern ( ($generated@@237 $generated@@350))
)))
(assert  (and (and (forall (($generated@@357 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@357)) 28)) (forall (($generated@@358 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@355 $generated@@358))
))) (forall (($generated@@359 T@T) ) (! (= (type ($generated@@353 $generated@@359)) ($generated@@355 $generated@@359))
 :pattern ( ($generated@@353 $generated@@359))
))))
(assert (forall (($generated@@360 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@360)) 0)
 :pattern ( ($generated@@353 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@248)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@64) (= (type $generated@@365) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@341 ($generated@@361 $generated@@363) $generated@@364 $generated@@365) ($generated@@74 $generated@@363 $generated@@364 $generated@@365)))
 :pattern ( ($generated@@341 ($generated@@361 $generated@@363) $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@368) $generated@@248)) (= (type $generated@@369) $generated@@64)) ($generated@@220 $generated@@366 $generated@@367)) ($generated@@341 $generated@@368 $generated@@369 $generated@@366)) ($generated@@341 $generated@@368 $generated@@369 $generated@@367))
 :pattern ( ($generated@@220 $generated@@366 $generated@@367) ($generated@@341 $generated@@368 $generated@@369 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@371) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@373) $generated@@64)) ($generated@@220 $generated@@370 $generated@@371)) ($generated@@74 $generated@@372 $generated@@373 $generated@@370)) ($generated@@74 $generated@@372 $generated@@373 $generated@@371))
 :pattern ( ($generated@@220 $generated@@370 $generated@@371) ($generated@@74 $generated@@372 $generated@@373 $generated@@370))
)))
(assert (forall (($generated@@376 T@T) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@76 $generated@@376 $generated@@2))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@79 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@76 $generated@@378 $generated@@2)) (and (= (= ($generated@@374 $generated@@377) 0) (= $generated@@377 ($generated@@375 $generated@@378))) (=> (not (= ($generated@@374 $generated@@377) 0)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (< 0 ($generated ($generated@@81 $generated@@377 $generated@@379))))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert  (and (and (and (and (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (= ($generated@@1 ($generated@@382 $generated@@385 $generated@@386)) 29)) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= ($generated@@383 ($generated@@382 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@382 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= ($generated@@384 ($generated@@382 $generated@@389 $generated@@390)) $generated@@390)
 :pattern ( ($generated@@382 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@383 (type $generated@@391))))
(= (type ($generated@@380 $generated@@391)) ($generated@@76 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@391))
))) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= (type ($generated@@381 $generated@@393 $generated@@394)) ($generated@@382 $generated@@393 $generated@@394))
 :pattern ( ($generated@@381 $generated@@393 $generated@@394))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@T) ) (! (let (($generated@@397 (type $generated@@395)))
 (not ($generated@@0 ($generated@@81 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395))))
 :pattern ( (let (($generated@@397 (type $generated@@395)))
($generated@@81 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395)))
)))
(assert  (and (and (and (and (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (= ($generated@@1 ($generated@@400 $generated@@403 $generated@@404)) 30)) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= ($generated@@401 ($generated@@400 $generated@@405 $generated@@406)) $generated@@405)
 :pattern ( ($generated@@400 $generated@@405 $generated@@406))
))) (forall (($generated@@407 T@T) ($generated@@408 T@T) ) (! (= ($generated@@402 ($generated@@400 $generated@@407 $generated@@408)) $generated@@408)
 :pattern ( ($generated@@400 $generated@@407 $generated@@408))
))) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@401 (type $generated@@409))))
(= (type ($generated@@398 $generated@@409)) ($generated@@76 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@409))
))) (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (! (= (type ($generated@@399 $generated@@411 $generated@@412)) ($generated@@400 $generated@@411 $generated@@412))
 :pattern ( ($generated@@399 $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@T) ) (! (let (($generated@@415 (type $generated@@413)))
 (not ($generated@@0 ($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413))))
 :pattern ( (let (($generated@@415 (type $generated@@413)))
($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413)))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (= ($generated@@254 $generated@@416) (forall (($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@417) (and (<= 0 ($generated ($generated@@81 $generated@@416 $generated@@418))) (<= ($generated ($generated@@81 $generated@@416 $generated@@418)) ($generated@@374 $generated@@416))))
 :pattern ( ($generated@@81 $generated@@416 $generated@@418))
)))))
 :pattern ( ($generated@@254 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@384 (type $generated@@419))))
(let (($generated@@421 ($generated@@383 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@382 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@381 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@380 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@384 (type $generated@@424))))
(= (type ($generated@@423 $generated@@424)) ($generated@@76 $generated@@425 $generated@@4)))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@384 (type $generated@@426))))
(let (($generated@@428 ($generated@@383 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@382 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@381 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@427) ($generated@@0 ($generated@@81 ($generated@@423 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@423 $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@402 (type $generated@@430))))
(let (($generated@@432 ($generated@@401 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@400 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@399 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@430) $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@398 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@402 (type $generated@@435))))
(= (type ($generated@@434 $generated@@435)) ($generated@@76 $generated@@436 $generated@@4)))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@402 (type $generated@@437))))
(let (($generated@@439 ($generated@@401 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@400 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@399 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@438) ($generated@@0 ($generated@@81 ($generated@@434 $generated@@437) $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@434 $generated@@437))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@442) $generated@@64)) (= ($generated@@224 $generated@@441 ($generated@@253 $generated@@442)) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@441 $generated@@443)))) ($generated@@315 $generated@@443 $generated@@442))
 :pattern ( ($generated@@81 $generated@@441 $generated@@443))
))))
 :pattern ( ($generated@@224 $generated@@441 ($generated@@253 $generated@@442)))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (= (type $generated@@444) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@444 ($generated@@324 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@248) ($generated@@0 ($generated@@81 $generated@@444 $generated@@447))) ($generated@@341 $generated@@447 $generated@@445 $generated@@446))
 :pattern ( ($generated@@81 $generated@@444 $generated@@447))
))))
 :pattern ( ($generated@@74 $generated@@444 ($generated@@324 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@448) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@449) $generated@@64)) (= (type $generated@@450) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@448 ($generated@@329 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@248) ($generated@@0 ($generated@@81 $generated@@448 $generated@@451))) ($generated@@341 $generated@@451 $generated@@449 $generated@@450))
 :pattern ( ($generated@@81 $generated@@448 $generated@@451))
))))
 :pattern ( ($generated@@74 $generated@@448 ($generated@@329 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
(= ($generated ($generated@@81 ($generated@@375 $generated@@453) $generated@@452)) 0))
 :pattern ( (let (($generated@@453 (type $generated@@452)))
($generated@@81 ($generated@@375 $generated@@453) $generated@@452)))
)))
(assert  (and (and (forall (($generated@@457 T@U) ) (! (= (type ($generated@@454 $generated@@457)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@454 $generated@@457))
)) (forall (($generated@@458 T@T) ($generated@@459 T@U) ) (! (= (type ($generated@@455 $generated@@458 $generated@@459)) $generated@@458)
 :pattern ( ($generated@@455 $generated@@458 $generated@@459))
))) (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@384 (type $generated@@460))))
(let (($generated@@462 ($generated@@383 (type $generated@@460))))
(= (type ($generated@@456 $generated@@460)) ($generated@@76 $generated@@462 $generated@@461))))
 :pattern ( ($generated@@456 $generated@@460))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@464) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@454 $generated@@463) $generated@@464))  (and ($generated@@0 ($generated@@81 ($generated@@380 $generated@@463) ($generated@@246 ($generated@@455 $generated@@239 $generated@@464)))) (= ($generated@@81 ($generated@@456 $generated@@463) ($generated@@246 ($generated@@455 $generated@@239 $generated@@464))) ($generated@@247 ($generated@@455 $generated@@239 $generated@@464))))))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@463) $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@402 (type $generated@@468))))
(let (($generated@@470 ($generated@@401 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468)) ($generated@@76 $generated@@470 $generated@@469))))
 :pattern ( ($generated@@466 $generated@@468))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@472) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@465 $generated@@471) $generated@@472))  (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@471) ($generated@@246 ($generated@@455 $generated@@239 $generated@@472)))) (= ($generated@@81 ($generated@@466 $generated@@471) ($generated@@246 ($generated@@455 $generated@@239 $generated@@472))) ($generated@@247 ($generated@@455 $generated@@239 $generated@@472))))))
 :pattern ( ($generated@@81 ($generated@@465 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
(let (($generated@@476 ($generated@@383 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@382 $generated@@476 $generated@@475)) (= ($generated@@0 ($generated@@81 ($generated@@423 $generated@@473) $generated@@474)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@476) (and ($generated@@0 ($generated@@81 ($generated@@380 $generated@@473) $generated@@477)) (= $generated@@474 ($generated@@81 ($generated@@456 $generated@@473) $generated@@477))))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@473) $generated@@477))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@473) $generated@@477))
))))))
 :pattern ( ($generated@@81 ($generated@@423 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
(let (($generated@@481 ($generated@@401 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@400 $generated@@481 $generated@@480)) (= ($generated@@0 ($generated@@81 ($generated@@434 $generated@@478) $generated@@479)) (exists (($generated@@482 T@U) ) (!  (and (= (type $generated@@482) $generated@@481) (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@478) $generated@@482)) (= $generated@@479 ($generated@@81 ($generated@@466 $generated@@478) $generated@@482))))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@478) $generated@@482))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@478) $generated@@482))
))))))
 :pattern ( ($generated@@81 ($generated@@434 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@486) $generated@@490))) (and ($generated@@341 ($generated@@81 ($generated@@456 $generated@@486) $generated@@490) $generated@@488 $generated@@489) ($generated@@341 $generated@@490 $generated@@487 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@486) $generated@@490))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@486) $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@494) $generated@@498))) (and ($generated@@341 ($generated@@81 ($generated@@466 $generated@@494) $generated@@498) $generated@@496 $generated@@497) ($generated@@341 $generated@@498 $generated@@495 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@494) $generated@@498))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@494) $generated@@498))
))))
 :pattern ( ($generated@@74 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@499) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@500) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@501) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@499 $generated@@501))) (and ($generated@@220 $generated@@499 $generated@@500) ($generated@@220 $generated@@500 $generated@@501))) ($generated@@220 $generated@@499 $generated@@501))
 :pattern ( ($generated@@220 $generated@@499 $generated@@500) ($generated@@220 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@T) ) (! (= (type ($generated@@502 $generated@@503)) ($generated@@76 $generated@@503 $generated@@4))
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@402 (type $generated@@504))))
(let (($generated@@506 ($generated@@401 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@400 $generated@@506 $generated@@505)) (= (= $generated@@504 ($generated@@399 $generated@@506 $generated@@505)) (= ($generated@@398 $generated@@504) ($generated@@502 $generated@@506))))))
 :pattern ( ($generated@@398 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@402 (type $generated@@507))))
(let (($generated@@509 ($generated@@401 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@400 $generated@@509 $generated@@508)) (= (= $generated@@507 ($generated@@399 $generated@@509 $generated@@508)) (= ($generated@@434 $generated@@507) ($generated@@502 $generated@@508))))))
 :pattern ( ($generated@@434 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@402 (type $generated@@510))))
(let (($generated@@512 ($generated@@401 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@400 $generated@@512 $generated@@511)) (= (= $generated@@510 ($generated@@399 $generated@@512 $generated@@511)) (= ($generated@@465 $generated@@510) ($generated@@502 $generated@@248))))))
 :pattern ( ($generated@@465 $generated@@510))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@384 (type $generated@@513))))
(let (($generated@@515 ($generated@@383 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@382 $generated@@515 $generated@@514)) (or (= $generated@@513 ($generated@@381 $generated@@515 $generated@@514)) (exists (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (and (and (= (type $generated@@516) $generated@@248) (= (type $generated@@517) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@454 $generated@@513) ($generated@@361 ($generated@@314 $generated@@516 $generated@@517)))))
 :no-pattern (type $generated@@516)
 :no-pattern (type $generated@@517)
 :no-pattern ($generated $generated@@516)
 :no-pattern ($generated@@0 $generated@@516)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
))))))
 :pattern ( ($generated@@454 $generated@@513))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@402 (type $generated@@518))))
(let (($generated@@520 ($generated@@401 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@400 $generated@@520 $generated@@519)) (or (= $generated@@518 ($generated@@399 $generated@@520 $generated@@519)) (exists (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (and (and (= (type $generated@@521) $generated@@248) (= (type $generated@@522) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@465 $generated@@518) ($generated@@361 ($generated@@314 $generated@@521 $generated@@522)))))
 :no-pattern (type $generated@@521)
 :no-pattern (type $generated@@522)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
))))))
 :pattern ( ($generated@@465 $generated@@518))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@248) ($generated@@315 $generated@@523 $generated@@46)) (and (= ($generated@@361 ($generated@@455 $generated@@2 $generated@@523)) $generated@@523) ($generated@@224 ($generated@@455 $generated@@2 $generated@@523) $generated@@46)))
 :pattern ( ($generated@@315 $generated@@523 $generated@@46))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@248) ($generated@@315 $generated@@524 $generated@@47)) (and (= ($generated@@361 ($generated@@455 $generated@@3 $generated@@524)) $generated@@524) ($generated@@224 ($generated@@455 $generated@@3 $generated@@524) $generated@@47)))
 :pattern ( ($generated@@315 $generated@@524 $generated@@47))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@248) ($generated@@315 $generated@@525 $generated@@44)) (and (= ($generated@@361 ($generated@@455 $generated@@4 $generated@@525)) $generated@@525) ($generated@@224 ($generated@@455 $generated@@4 $generated@@525) $generated@@44)))
 :pattern ( ($generated@@315 $generated@@525 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@526) 31))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@248) ($generated@@315 $generated@@527 $generated@@45)) (and (= ($generated@@361 ($generated@@455 $generated@@526 $generated@@527)) $generated@@527) ($generated@@224 ($generated@@455 $generated@@526 $generated@@527) $generated@@45)))
 :pattern ( ($generated@@315 $generated@@527 $generated@@45))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@315 ($generated@@361 $generated@@528) $generated@@529) ($generated@@224 $generated@@528 $generated@@529)))
 :pattern ( ($generated@@315 ($generated@@361 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@79 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@76 $generated@@531 $generated@@2)) (<= 0 ($generated@@374 $generated@@530))))
 :pattern ( ($generated@@374 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@356 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@355 $generated@@533)) (<= 0 ($generated@@354 $generated@@532))))
 :pattern ( ($generated@@354 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= ($generated@@534 ($generated@@483 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@483 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@538 ($generated@@483 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@483 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= ($generated@@72 ($generated@@483 $generated@@542 $generated@@543)) $generated@@58))
 :pattern ( ($generated@@483 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@491 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@491 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@491 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@491 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@64) (= (type $generated@@553) $generated@@64)) (= ($generated@@72 ($generated@@491 $generated@@552 $generated@@553)) $generated@@59))
 :pattern ( ($generated@@491 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@248) (= (type $generated@@555) $generated@@248)) (= ($generated@@347 ($generated@@314 $generated@@554 $generated@@555)) $generated@@61))
 :pattern ( ($generated@@314 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@64) (= (type $generated@@559) $generated@@64)) (= ($generated@@556 ($generated@@238 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@238 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@64)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@64) (= (type $generated@@563) $generated@@64)) (= ($generated@@560 ($generated@@238 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@238 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@248) (= (type $generated@@565) $generated@@248)) (= ($generated@@246 ($generated@@314 $generated@@564 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@314 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@248) (= (type $generated@@567) $generated@@248)) (= ($generated@@247 ($generated@@314 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@314 $generated@@566 $generated@@567))
)))
(assert  (and (forall (($generated@@570 T@U) ) (! (= (type ($generated@@568 $generated@@570)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@570))
)) (forall (($generated@@571 T@U) ($generated@@572 Int) ) (! (let (($generated@@573 ($generated@@356 (type $generated@@571))))
(= (type ($generated@@569 $generated@@571 $generated@@572)) $generated@@573))
 :pattern ( ($generated@@569 $generated@@571 $generated@@572))
))))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@355 $generated@@248)) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@574 ($generated@@568 $generated@@575) $generated@@576) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@354 $generated@@574))) ($generated@@341 ($generated@@569 $generated@@574 $generated@@577) $generated@@575 $generated@@576))
 :pattern ( ($generated@@569 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@74 $generated@@574 ($generated@@568 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@578 ($generated@@75 $generated@@579)) $generated@@579)
 :pattern ( ($generated@@75 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@324 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@324 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@324 $generated@@583)) $generated@@54))
 :pattern ( ($generated@@324 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@64)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@64) (= ($generated@@584 ($generated@@329 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@329 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@64) (= ($generated@@72 ($generated@@329 $generated@@587)) $generated@@55))
 :pattern ( ($generated@@329 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@64)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@64) (= ($generated@@588 ($generated@@253 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@253 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@591)) $generated@@56))
 :pattern ( ($generated@@253 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@64)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@64) (= ($generated@@592 ($generated@@568 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@568 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@64) (= ($generated@@72 ($generated@@568 $generated@@595)) $generated@@57))
 :pattern ( ($generated@@568 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
(= ($generated@@455 $generated@@597 ($generated@@361 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@361 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) (= ($generated@@224 $generated@@598 ($generated@@483 $generated@@599 $generated@@600)) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@598) $generated@@601))) (and ($generated@@315 ($generated@@81 ($generated@@456 $generated@@598) $generated@@601) $generated@@600) ($generated@@315 $generated@@601 $generated@@599)))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@598) $generated@@601))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@598) $generated@@601))
))))
 :pattern ( ($generated@@224 $generated@@598 ($generated@@483 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) (= ($generated@@224 $generated@@602 ($generated@@491 $generated@@603 $generated@@604)) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@602) $generated@@605))) (and ($generated@@315 ($generated@@81 ($generated@@466 $generated@@602) $generated@@605) $generated@@604) ($generated@@315 $generated@@605 $generated@@603)))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@602) $generated@@605))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@602) $generated@@605))
))))
 :pattern ( ($generated@@224 $generated@@602 ($generated@@491 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@248) (= (type $generated@@609) $generated@@248)) (< ($generated@@606 $generated@@608) ($generated@@607 ($generated@@314 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@314 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@248) (= (type $generated@@611) $generated@@248)) (< ($generated@@606 $generated@@611) ($generated@@607 ($generated@@314 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@314 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@248) (= (type $generated@@613) $generated@@64)) (= (type $generated@@614) $generated@@64)) ($generated@@315 $generated@@612 ($generated@@483 $generated@@613 $generated@@614))) (and (= ($generated@@361 ($generated@@455 ($generated@@382 $generated@@248 $generated@@248) $generated@@612)) $generated@@612) ($generated@@224 ($generated@@455 ($generated@@382 $generated@@248 $generated@@248) $generated@@612) ($generated@@483 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@315 $generated@@612 ($generated@@483 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@248) (= (type $generated@@616) $generated@@64)) (= (type $generated@@617) $generated@@64)) ($generated@@315 $generated@@615 ($generated@@491 $generated@@616 $generated@@617))) (and (= ($generated@@361 ($generated@@455 ($generated@@400 $generated@@248 $generated@@248) $generated@@615)) $generated@@615) ($generated@@224 ($generated@@455 ($generated@@400 $generated@@248 $generated@@248) $generated@@615) ($generated@@491 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@315 $generated@@615 ($generated@@491 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@64) (= (type $generated@@619) $generated@@64)) (= (type $generated@@620) $generated@@248)) ($generated@@315 $generated@@620 ($generated@@238 $generated@@618 $generated@@619))) (and (= ($generated@@361 ($generated@@455 $generated@@239 $generated@@620)) $generated@@620) ($generated@@224 ($generated@@455 $generated@@239 $generated@@620) ($generated@@238 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@315 $generated@@620 ($generated@@238 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
 (not ($generated@@0 ($generated@@81 ($generated@@502 $generated@@622) $generated@@621))))
 :pattern ( (let (($generated@@622 (type $generated@@621)))
($generated@@81 ($generated@@502 $generated@@622) $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@69)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) $generated@@64)) (and (= ($generated@@72 ($generated@@238 $generated@@625 $generated@@626)) $generated@@62) (= ($generated@@623 ($generated@@238 $generated@@625 $generated@@626)) $generated@@63)))
 :pattern ( ($generated@@238 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@239) (= ($generated@@606 ($generated@@361 $generated@@627)) ($generated@@607 $generated@@627)))
 :pattern ( ($generated@@606 ($generated@@361 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@248) ($generated@@315 $generated@@628 ($generated@@75 0))) (and (= ($generated@@361 ($generated@@455 $generated@@2 $generated@@628)) $generated@@628) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@628) ($generated@@75 0))))
 :pattern ( ($generated@@315 $generated@@628 ($generated@@75 0)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@248) ($generated@@315 $generated@@629 ($generated@@75 1))) (and (= ($generated@@361 ($generated@@455 $generated@@132 $generated@@629)) $generated@@629) ($generated@@224 ($generated@@455 $generated@@132 $generated@@629) ($generated@@75 1))))
 :pattern ( ($generated@@315 $generated@@629 ($generated@@75 1)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@248) (= (type $generated@@631) $generated@@64)) ($generated@@315 $generated@@630 ($generated@@324 $generated@@631))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@630)) $generated@@630) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@630) ($generated@@324 $generated@@631))))
 :pattern ( ($generated@@315 $generated@@630 ($generated@@324 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@248) (= (type $generated@@633) $generated@@64)) ($generated@@315 $generated@@632 ($generated@@329 $generated@@633))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@632)) $generated@@632) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@632) ($generated@@329 $generated@@633))))
 :pattern ( ($generated@@315 $generated@@632 ($generated@@329 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@248) (= (type $generated@@635) $generated@@64)) ($generated@@315 $generated@@634 ($generated@@253 $generated@@635))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@2) $generated@@634)) $generated@@634) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@2) $generated@@634) ($generated@@253 $generated@@635))))
 :pattern ( ($generated@@315 $generated@@634 ($generated@@253 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@248) (= (type $generated@@637) $generated@@64)) ($generated@@315 $generated@@636 ($generated@@568 $generated@@637))) (and (= ($generated@@361 ($generated@@455 ($generated@@355 $generated@@248) $generated@@636)) $generated@@636) ($generated@@224 ($generated@@455 ($generated@@355 $generated@@248) $generated@@636) ($generated@@568 $generated@@637))))
 :pattern ( ($generated@@315 $generated@@636 ($generated@@568 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@248) ($generated@@315 $generated@@638 ($generated@@75 2))) (and (= ($generated@@361 ($generated@@455 $generated@@140 $generated@@638)) $generated@@638) ($generated@@224 ($generated@@455 $generated@@140 $generated@@638) ($generated@@75 2))))
 :pattern ( ($generated@@315 $generated@@638 ($generated@@75 2)))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@248) ($generated@@315 $generated@@639 ($generated@@75 3))) (and (= ($generated@@361 ($generated@@455 $generated@@148 $generated@@639)) $generated@@639) ($generated@@224 ($generated@@455 $generated@@148 $generated@@639) ($generated@@75 3))))
 :pattern ( ($generated@@315 $generated@@639 ($generated@@75 3)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@248) ($generated@@315 $generated@@640 ($generated@@75 4))) (and (= ($generated@@361 ($generated@@455 $generated@@156 $generated@@640)) $generated@@640) ($generated@@224 ($generated@@455 $generated@@156 $generated@@640) ($generated@@75 4))))
 :pattern ( ($generated@@315 $generated@@640 ($generated@@75 4)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@248) ($generated@@315 $generated@@641 ($generated@@75 7))) (and (= ($generated@@361 ($generated@@455 $generated@@164 $generated@@641)) $generated@@641) ($generated@@224 ($generated@@455 $generated@@164 $generated@@641) ($generated@@75 7))))
 :pattern ( ($generated@@315 $generated@@641 ($generated@@75 7)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@248) ($generated@@315 $generated@@642 ($generated@@75 8))) (and (= ($generated@@361 ($generated@@455 $generated@@172 $generated@@642)) $generated@@642) ($generated@@224 ($generated@@455 $generated@@172 $generated@@642) ($generated@@75 8))))
 :pattern ( ($generated@@315 $generated@@642 ($generated@@75 8)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@248) ($generated@@315 $generated@@643 ($generated@@75 15))) (and (= ($generated@@361 ($generated@@455 $generated@@180 $generated@@643)) $generated@@643) ($generated@@224 ($generated@@455 $generated@@180 $generated@@643) ($generated@@75 15))))
 :pattern ( ($generated@@315 $generated@@643 ($generated@@75 15)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@248) ($generated@@315 $generated@@644 ($generated@@75 16))) (and (= ($generated@@361 ($generated@@455 $generated@@188 $generated@@644)) $generated@@644) ($generated@@224 ($generated@@455 $generated@@188 $generated@@644) ($generated@@75 16))))
 :pattern ( ($generated@@315 $generated@@644 ($generated@@75 16)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@248) ($generated@@315 $generated@@645 ($generated@@75 32))) (and (= ($generated@@361 ($generated@@455 $generated@@196 $generated@@645)) $generated@@645) ($generated@@224 ($generated@@455 $generated@@196 $generated@@645) ($generated@@75 32))))
 :pattern ( ($generated@@315 $generated@@645 ($generated@@75 32)))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@248) ($generated@@315 $generated@@646 ($generated@@75 53))) (and (= ($generated@@361 ($generated@@455 $generated@@204 $generated@@646)) $generated@@646) ($generated@@224 ($generated@@455 $generated@@204 $generated@@646) ($generated@@75 53))))
 :pattern ( ($generated@@315 $generated@@646 ($generated@@75 53)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@248) ($generated@@315 $generated@@647 ($generated@@75 100))) (and (= ($generated@@361 ($generated@@455 $generated@@212 $generated@@647)) $generated@@647) ($generated@@224 ($generated@@455 $generated@@212 $generated@@647) ($generated@@75 100))))
 :pattern ( ($generated@@315 $generated@@647 ($generated@@75 100)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@649) $generated@@64)) (= (type $generated@@650) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@648 ($generated@@253 $generated@@649) $generated@@650) (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@648 $generated@@651)))) ($generated@@341 $generated@@651 $generated@@649 $generated@@650))
 :pattern ( ($generated@@81 $generated@@648 $generated@@651))
))))
 :pattern ( ($generated@@74 $generated@@648 ($generated@@253 $generated@@649) $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@239) (= (type $generated@@653) $generated@@64)) (= (type $generated@@654) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@340 $generated@@654) (and ($generated@@237 $generated@@652) (exists (($generated@@655 T@U) ) (!  (and (= (type $generated@@655) $generated@@64) ($generated@@74 $generated@@652 ($generated@@238 $generated@@653 $generated@@655) $generated@@654))
 :pattern ( ($generated@@74 $generated@@652 ($generated@@238 $generated@@653 $generated@@655) $generated@@654))
))))) ($generated@@341 ($generated@@246 $generated@@652) $generated@@653 $generated@@654))
 :pattern ( ($generated@@341 ($generated@@246 $generated@@652) $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@239) (= (type $generated@@657) $generated@@64)) (= (type $generated@@658) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@340 $generated@@658) (and ($generated@@237 $generated@@656) (exists (($generated@@659 T@U) ) (!  (and (= (type $generated@@659) $generated@@64) ($generated@@74 $generated@@656 ($generated@@238 $generated@@659 $generated@@657) $generated@@658))
 :pattern ( ($generated@@74 $generated@@656 ($generated@@238 $generated@@659 $generated@@657) $generated@@658))
))))) ($generated@@341 ($generated@@247 $generated@@656) $generated@@657 $generated@@658))
 :pattern ( ($generated@@341 ($generated@@247 $generated@@656) $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@248) (= (type $generated@@661) $generated@@248)) (= ($generated@@314 ($generated@@336 $generated@@660) ($generated@@336 $generated@@661)) ($generated@@336 ($generated@@314 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@314 ($generated@@336 $generated@@660) ($generated@@336 $generated@@661)))
)))
(assert (forall (($generated@@662 Int) ) (! (= ($generated@@361 ($generated@@8 ($generated@@334 $generated@@662))) ($generated@@336 ($generated@@361 ($generated@@8 $generated@@662))))
 :pattern ( ($generated@@361 ($generated@@8 ($generated@@334 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@361 ($generated@@336 $generated@@663)) ($generated@@336 ($generated@@361 $generated@@663)))
 :pattern ( ($generated@@361 ($generated@@336 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@356 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@355 $generated@@665)) (= ($generated@@354 $generated@@664) 0)) (= $generated@@664 ($generated@@353 $generated@@665))))
 :pattern ( ($generated@@354 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@76 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@374 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@374 $generated@@666) ($generated ($generated@@81 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@374 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@671) $generated@@2)) ($generated@@74 $generated@@671 $generated@@46 $generated@@670))
 :pattern ( ($generated@@74 $generated@@671 $generated@@46 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@673) $generated@@3)) ($generated@@74 $generated@@673 $generated@@47 $generated@@672))
 :pattern ( ($generated@@74 $generated@@673 $generated@@47 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@675) $generated@@4)) ($generated@@74 $generated@@675 $generated@@44 $generated@@674))
 :pattern ( ($generated@@74 $generated@@675 $generated@@44 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@677) $generated@@526)) ($generated@@74 $generated@@677 $generated@@45 $generated@@676))
 :pattern ( ($generated@@74 $generated@@677 $generated@@45 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@679) $generated@@248)) ($generated@@74 $generated@@679 $generated@@48 $generated@@678))
 :pattern ( ($generated@@74 $generated@@679 $generated@@48 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@355 $generated@@248)) (= (type $generated@@681) $generated@@64)) (= ($generated@@224 $generated@@680 ($generated@@568 $generated@@681)) (forall (($generated@@682 Int) ) (!  (=> (and (<= 0 $generated@@682) (< $generated@@682 ($generated@@354 $generated@@680))) ($generated@@315 ($generated@@569 $generated@@680 $generated@@682) $generated@@681))
 :pattern ( ($generated@@569 $generated@@680 $generated@@682))
))))
 :pattern ( ($generated@@224 $generated@@680 ($generated@@568 $generated@@681)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 Int) ) (!  (=> (= (type $generated@@684) ($generated@@355 $generated@@248)) (=> (and (<= 0 $generated@@685) (< $generated@@685 ($generated@@354 $generated@@684))) (< ($generated@@607 ($generated@@455 $generated@@239 ($generated@@569 $generated@@684 $generated@@685))) ($generated@@683 $generated@@684))))
 :pattern ( ($generated@@607 ($generated@@455 $generated@@239 ($generated@@569 $generated@@684 $generated@@685))))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@687) $generated@@64)) (= (type $generated@@688) $generated@@64)) ($generated@@224 $generated@@686 ($generated@@483 $generated@@687 $generated@@688))) (and (and ($generated@@224 ($generated@@380 $generated@@686) ($generated@@324 $generated@@687)) ($generated@@224 ($generated@@423 $generated@@686) ($generated@@324 $generated@@688))) ($generated@@224 ($generated@@454 $generated@@686) ($generated@@324 ($generated@@238 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@224 $generated@@686 ($generated@@483 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@690) $generated@@64)) (= (type $generated@@691) $generated@@64)) ($generated@@224 $generated@@689 ($generated@@491 $generated@@690 $generated@@691))) (and (and ($generated@@224 ($generated@@398 $generated@@689) ($generated@@329 $generated@@690)) ($generated@@224 ($generated@@434 $generated@@689) ($generated@@329 $generated@@691))) ($generated@@224 ($generated@@465 $generated@@689) ($generated@@329 ($generated@@238 $generated@@690 $generated@@691)))))
 :pattern ( ($generated@@224 $generated@@689 ($generated@@491 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@2) ($generated@@224 $generated@@692 $generated@@46))
 :pattern ( ($generated@@224 $generated@@692 $generated@@46))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@3) ($generated@@224 $generated@@693 $generated@@47))
 :pattern ( ($generated@@224 $generated@@693 $generated@@47))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@4) ($generated@@224 $generated@@694 $generated@@44))
 :pattern ( ($generated@@224 $generated@@694 $generated@@44))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@526) ($generated@@224 $generated@@695 $generated@@45))
 :pattern ( ($generated@@224 $generated@@695 $generated@@45))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@248) ($generated@@224 $generated@@696 $generated@@48))
 :pattern ( ($generated@@224 $generated@@696 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 (T@U) Bool)
(declare-fun $generated@@704 () Int)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () Int)
(assert  (and (and (and (= (type $generated@@697) ($generated@@260 $generated@@77 $generated@@4)) (= (type $generated@@698) $generated@@77)) (= (type $generated@@699) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@705) ($generated@@355 $generated@@248))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@707  (=> (and (= $generated@@697 ($generated@@259 $generated@@698 $generated@@699 $generated@@60 false)) (= $generated@@700 ($generated@@334 0))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@334 (- 0 32768)) $generated@@700) (< $generated@@700 32768))) (=> (and (<= ($generated@@334 (- 0 32768)) $generated@@700) (< $generated@@700 32768)) (=> (not (= $generated@@701 0)) (=> (and (= $generated@@702 ($generated@@334 (- 0 32767))) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@334 (- 0 32768)) $generated@@702) (< $generated@@702 32768)))))))))
(let (($generated@@708  (=> (and ($generated@@340 $generated@@699) ($generated@@703 $generated@@699)) (=> (and (and (and (<= ($generated@@334 (- 0 32768)) $generated@@704) (< $generated@@704 32768)) (and (<= ($generated@@334 (- 0 32768)) $generated@@701) (< $generated@@701 32768))) (and (and ($generated@@224 $generated@@705 ($generated@@568 $generated@@45)) ($generated@@74 $generated@@705 ($generated@@568 $generated@@45) $generated@@699)) (and (= 1 $generated@@706) (= (ControlFlow 0 4) 2)))) $generated@@707))))
$generated@@708)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 () T@T)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 () T@T)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@259 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U T@U) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@330 (Int) Int)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) Bool)
(declare-fun $generated@@337 (T@U T@U T@U) Bool)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@349 (T@T) T@U)
(declare-fun $generated@@350 (T@U) Int)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@362 (T@U) Int)
(declare-fun $generated@@363 (T@T) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@T) T@U)
(declare-fun $generated@@370 (T@T T@T) T@T)
(declare-fun $generated@@371 (T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@T) T@U)
(declare-fun $generated@@388 (T@T T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@T T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@471 (T@U T@U) T@U)
(declare-fun $generated@@479 (T@U T@U) T@U)
(declare-fun $generated@@487 (Int Int) Int)
(declare-fun $generated@@490 (T@T) T@U)
(declare-fun $generated@@514 () T@T)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@557 (T@U Int) T@U)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@611 (Int Int) Int)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@674 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@2) ($generated@@220 $generated@@221 ($generated@@75 0)))
 :pattern ( ($generated@@220 $generated@@221 ($generated@@75 0)))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (= (type $generated@@222) $generated@@132) ($generated@@220 $generated@@222 ($generated@@75 1)))
 :pattern ( ($generated@@220 $generated@@222 ($generated@@75 1)))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@140) ($generated@@220 $generated@@223 ($generated@@75 2)))
 :pattern ( ($generated@@220 $generated@@223 ($generated@@75 2)))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (= (type $generated@@224) $generated@@148) ($generated@@220 $generated@@224 ($generated@@75 3)))
 :pattern ( ($generated@@220 $generated@@224 ($generated@@75 3)))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@156) ($generated@@220 $generated@@225 ($generated@@75 4)))
 :pattern ( ($generated@@220 $generated@@225 ($generated@@75 4)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@164) ($generated@@220 $generated@@226 ($generated@@75 7)))
 :pattern ( ($generated@@220 $generated@@226 ($generated@@75 7)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@172) ($generated@@220 $generated@@227 ($generated@@75 8)))
 :pattern ( ($generated@@220 $generated@@227 ($generated@@75 8)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@180) ($generated@@220 $generated@@228 ($generated@@75 15)))
 :pattern ( ($generated@@220 $generated@@228 ($generated@@75 15)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@188) ($generated@@220 $generated@@229 ($generated@@75 16)))
 :pattern ( ($generated@@220 $generated@@229 ($generated@@75 16)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@196) ($generated@@220 $generated@@230 ($generated@@75 32)))
 :pattern ( ($generated@@220 $generated@@230 ($generated@@75 32)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@204) ($generated@@220 $generated@@231 ($generated@@75 53)))
 :pattern ( ($generated@@220 $generated@@231 ($generated@@75 53)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@212) ($generated@@220 $generated@@232 ($generated@@75 100)))
 :pattern ( ($generated@@220 $generated@@232 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@235) 25) (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@64) (= (type $generated@@239) $generated@@64)) (= (type $generated@@240) $generated@@235)) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239))) ($generated@@233 $generated@@240))
 :pattern ( ($generated@@233 $generated@@240) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239)))
)))
(assert  (and (and (= ($generated@@1 $generated@@244) 26) (forall (($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@242 $generated@@245))
))) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@246)) $generated@@244)
 :pattern ( ($generated@@243 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@235) (= (type $generated@@248) $generated@@235)) true) (= ($generated@@241 $generated@@247 $generated@@248)  (and (= ($generated@@242 $generated@@247) ($generated@@242 $generated@@248)) (= ($generated@@243 $generated@@247) ($generated@@243 $generated@@248)))))
 :pattern ( ($generated@@241 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@249 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@253) $generated@@64)) ($generated@@220 $generated@@252 ($generated@@249 $generated@@253))) ($generated@@250 $generated@@252))
 :pattern ( ($generated@@220 $generated@@252 ($generated@@249 $generated@@253)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@260 $generated@@261)) 27)) (forall (($generated@@262 T@T) ($generated@@263 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@262 $generated@@263)) $generated@@262)
 :pattern ( ($generated@@256 $generated@@262 $generated@@263))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@264 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@256 $generated@@264 $generated@@265))
))) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@258 (type $generated@@266))))
(= (type ($generated@@254 $generated@@266 $generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@254 $generated@@266 $generated@@267 $generated@@268))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(let (($generated@@275 (type $generated@@271)))
(= (type ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273)) ($generated@@256 $generated@@275 $generated@@274))))
 :pattern ( ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273))
))) (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@258 (type $generated@@276))))
 (=> (= (type $generated@@279) $generated@@280) (= ($generated@@254 ($generated@@259 $generated@@276 $generated@@277 $generated@@278 $generated@@279) $generated@@277 $generated@@278) $generated@@279)))
 :weight 0
))) (and (and (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (or (= $generated@@283 $generated@@285) (= ($generated@@254 ($generated@@259 $generated@@282 $generated@@283 $generated@@284 $generated@@281) $generated@@285 $generated@@286) ($generated@@254 $generated@@282 $generated@@285 $generated@@286)))
 :weight 0
)) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (or (= $generated@@290 $generated@@292) (= ($generated@@254 ($generated@@259 $generated@@288 $generated@@289 $generated@@290 $generated@@287) $generated@@291 $generated@@292) ($generated@@254 $generated@@288 $generated@@291 $generated@@292)))
 :weight 0
))) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (or true (= ($generated@@254 ($generated@@259 $generated@@294 $generated@@295 $generated@@296 $generated@@293) $generated@@297 $generated@@298) ($generated@@254 $generated@@294 $generated@@297 $generated@@298)))
 :weight 0
)))) (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Bool) ) (! (= (type ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302)) ($generated@@256 $generated@@77 $generated@@4))
 :pattern ( ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ($generated@@307 T@U) ($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@67 (type $generated@@308))))
 (=> (and (and (and (and (= (type $generated@@303) $generated@@77) (= (type $generated@@304) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@305) ($generated@@66 $generated@@4))) (= (type $generated@@307) $generated@@77)) (= (type $generated@@308) ($generated@@66 $generated@@309))) (= ($generated@@0 ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))  (=> (and (not (= $generated@@307 $generated@@303)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@304 $generated@@307) $generated@@305))) $generated@@306))))
 :pattern ( ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (= (type ($generated@@310 $generated@@312 $generated@@313)) $generated@@235)
 :pattern ( ($generated@@310 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@64) (= (type $generated@@315) $generated@@64)) (= (type $generated@@316) $generated@@244)) (= (type $generated@@317) $generated@@244)) (= ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315))  (and ($generated@@311 $generated@@316 $generated@@314) ($generated@@311 $generated@@317 $generated@@315))))
 :pattern ( ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@235) (= (type $generated@@319) $generated@@235)) (= ($generated@@241 $generated@@318 $generated@@319) (= $generated@@318 $generated@@319)))
 :pattern ( ($generated@@241 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@64)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@323) $generated@@64)) (= ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@244) ($generated@@0 ($generated@@81 $generated@@322 $generated@@324))) ($generated@@311 $generated@@324 $generated@@323))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
))))
 :pattern ( ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@64)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@328) $generated@@64)) (= ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@244) ($generated@@0 ($generated@@81 $generated@@327 $generated@@329))) ($generated@@311 $generated@@329 $generated@@328))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)))
)))
(assert (forall (($generated@@331 Int) ) (! (= ($generated@@330 $generated@@331) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
(= (type ($generated@@332 $generated@@333)) $generated@@334))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (= ($generated@@332 $generated@@335) $generated@@335)
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@338) $generated@@64) (= (type $generated@@339) $generated@@64)) (= (type $generated@@340) $generated@@244)) (= (type $generated@@341) $generated@@244)) (= (type $generated@@342) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@336 $generated@@342)) (= ($generated@@74 ($generated@@310 $generated@@340 $generated@@341) ($generated@@234 $generated@@338 $generated@@339) $generated@@342)  (and ($generated@@337 $generated@@340 $generated@@338 $generated@@342) ($generated@@337 $generated@@341 $generated@@339 $generated@@342))))
 :pattern ( ($generated@@74 ($generated@@310 $generated@@340 $generated@@341) ($generated@@234 $generated@@338 $generated@@339) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@68)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@235) (= ($generated@@233 $generated@@345) (= ($generated@@343 $generated@@345) $generated@@61)))
 :pattern ( ($generated@@233 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@235) ($generated@@233 $generated@@346)) (exists (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (and (and (= (type $generated@@347) $generated@@244) (= (type $generated@@348) $generated@@244)) (= $generated@@346 ($generated@@310 $generated@@347 $generated@@348)))
 :no-pattern (type $generated@@347)
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
)))
 :pattern ( ($generated@@233 $generated@@346))
)))
(assert  (and (and (forall (($generated@@353 T@T) ) (= ($generated@@1 ($generated@@351 $generated@@353)) 28)) (forall (($generated@@354 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@351 $generated@@354))
))) (forall (($generated@@355 T@T) ) (! (= (type ($generated@@349 $generated@@355)) ($generated@@351 $generated@@355))
 :pattern ( ($generated@@349 $generated@@355))
))))
(assert (forall (($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@356)) 0)
 :pattern ( ($generated@@349 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@244)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@64) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@337 ($generated@@357 $generated@@359) $generated@@360 $generated@@361) ($generated@@74 $generated@@359 $generated@@360 $generated@@361)))
 :pattern ( ($generated@@337 ($generated@@357 $generated@@359) $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@364 T@T) ) (! (= (type ($generated@@363 $generated@@364)) ($generated@@76 $generated@@364 $generated@@2))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@79 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@76 $generated@@366 $generated@@2)) (and (= (= ($generated@@362 $generated@@365) 0) (= $generated@@365 ($generated@@363 $generated@@366))) (=> (not (= ($generated@@362 $generated@@365) 0)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367))))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert  (and (and (and (and (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (= ($generated@@1 ($generated@@370 $generated@@373 $generated@@374)) 29)) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@371 ($generated@@370 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@370 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@372 ($generated@@370 $generated@@377 $generated@@378)) $generated@@378)
 :pattern ( ($generated@@370 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@371 (type $generated@@379))))
(= (type ($generated@@368 $generated@@379)) ($generated@@76 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@379))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= (type ($generated@@369 $generated@@381 $generated@@382)) ($generated@@370 $generated@@381 $generated@@382))
 :pattern ( ($generated@@369 $generated@@381 $generated@@382))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@T) ) (! (let (($generated@@385 (type $generated@@383)))
 (not ($generated@@0 ($generated@@81 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383))))
 :pattern ( (let (($generated@@385 (type $generated@@383)))
($generated@@81 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383)))
)))
(assert  (and (and (and (and (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (= ($generated@@1 ($generated@@388 $generated@@391 $generated@@392)) 30)) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@389 ($generated@@388 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@388 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@390 ($generated@@388 $generated@@395 $generated@@396)) $generated@@396)
 :pattern ( ($generated@@388 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@389 (type $generated@@397))))
(= (type ($generated@@386 $generated@@397)) ($generated@@76 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@397))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= (type ($generated@@387 $generated@@399 $generated@@400)) ($generated@@388 $generated@@399 $generated@@400))
 :pattern ( ($generated@@387 $generated@@399 $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@T) ) (! (let (($generated@@403 (type $generated@@401)))
 (not ($generated@@0 ($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401))))
 :pattern ( (let (($generated@@403 (type $generated@@401)))
($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401)))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@79 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@76 $generated@@405 $generated@@2)) (= ($generated@@250 $generated@@404) (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@405) (and (<= 0 ($generated ($generated@@81 $generated@@404 $generated@@406))) (<= ($generated ($generated@@81 $generated@@404 $generated@@406)) ($generated@@362 $generated@@404))))
 :pattern ( ($generated@@81 $generated@@404 $generated@@406))
)))))
 :pattern ( ($generated@@250 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@372 (type $generated@@407))))
(let (($generated@@409 ($generated@@371 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@370 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@369 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@368 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@372 (type $generated@@412))))
(= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@413 $generated@@4)))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@372 (type $generated@@414))))
(let (($generated@@416 ($generated@@371 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@370 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@369 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@415) ($generated@@0 ($generated@@81 ($generated@@411 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@411 $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@390 (type $generated@@418))))
(let (($generated@@420 ($generated@@389 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@388 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@387 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@386 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@390 (type $generated@@423))))
(= (type ($generated@@422 $generated@@423)) ($generated@@76 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@390 (type $generated@@425))))
(let (($generated@@427 ($generated@@389 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@388 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@387 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@426) ($generated@@0 ($generated@@81 ($generated@@422 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@422 $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@430) $generated@@64)) (= ($generated@@220 $generated@@429 ($generated@@249 $generated@@430)) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@429 $generated@@431)))) ($generated@@311 $generated@@431 $generated@@430))
 :pattern ( ($generated@@81 $generated@@429 $generated@@431))
))))
 :pattern ( ($generated@@220 $generated@@429 ($generated@@249 $generated@@430)))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@432 ($generated@@320 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@244) ($generated@@0 ($generated@@81 $generated@@432 $generated@@435))) ($generated@@337 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@81 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@74 $generated@@432 ($generated@@320 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (= (type $generated@@436) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@437) $generated@@64)) (= (type $generated@@438) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@436 ($generated@@325 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@244) ($generated@@0 ($generated@@81 $generated@@436 $generated@@439))) ($generated@@337 $generated@@439 $generated@@437 $generated@@438))
 :pattern ( ($generated@@81 $generated@@436 $generated@@439))
))))
 :pattern ( ($generated@@74 $generated@@436 ($generated@@325 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(= ($generated ($generated@@81 ($generated@@363 $generated@@441) $generated@@440)) 0))
 :pattern ( (let (($generated@@441 (type $generated@@440)))
($generated@@81 ($generated@@363 $generated@@441) $generated@@440)))
)))
(assert  (and (and (forall (($generated@@445 T@U) ) (! (= (type ($generated@@442 $generated@@445)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@442 $generated@@445))
)) (forall (($generated@@446 T@T) ($generated@@447 T@U) ) (! (= (type ($generated@@443 $generated@@446 $generated@@447)) $generated@@446)
 :pattern ( ($generated@@443 $generated@@446 $generated@@447))
))) (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@372 (type $generated@@448))))
(let (($generated@@450 ($generated@@371 (type $generated@@448))))
(= (type ($generated@@444 $generated@@448)) ($generated@@76 $generated@@450 $generated@@449))))
 :pattern ( ($generated@@444 $generated@@448))
))))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@452) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@442 $generated@@451) $generated@@452))  (and ($generated@@0 ($generated@@81 ($generated@@368 $generated@@451) ($generated@@242 ($generated@@443 $generated@@235 $generated@@452)))) (= ($generated@@81 ($generated@@444 $generated@@451) ($generated@@242 ($generated@@443 $generated@@235 $generated@@452))) ($generated@@243 ($generated@@443 $generated@@235 $generated@@452))))))
 :pattern ( ($generated@@81 ($generated@@442 $generated@@451) $generated@@452))
)))
(assert  (and (forall (($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@455)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@453 $generated@@455))
)) (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@390 (type $generated@@456))))
(let (($generated@@458 ($generated@@389 (type $generated@@456))))
(= (type ($generated@@454 $generated@@456)) ($generated@@76 $generated@@458 $generated@@457))))
 :pattern ( ($generated@@454 $generated@@456))
))))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@460) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@453 $generated@@459) $generated@@460))  (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@459) ($generated@@242 ($generated@@443 $generated@@235 $generated@@460)))) (= ($generated@@81 ($generated@@454 $generated@@459) ($generated@@242 ($generated@@443 $generated@@235 $generated@@460))) ($generated@@243 ($generated@@443 $generated@@235 $generated@@460))))))
 :pattern ( ($generated@@81 ($generated@@453 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@462)))
(let (($generated@@464 ($generated@@371 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@370 $generated@@464 $generated@@463)) (= ($generated@@0 ($generated@@81 ($generated@@411 $generated@@461) $generated@@462)) (exists (($generated@@465 T@U) ) (!  (and (= (type $generated@@465) $generated@@464) (and ($generated@@0 ($generated@@81 ($generated@@368 $generated@@461) $generated@@465)) (= $generated@@462 ($generated@@81 ($generated@@444 $generated@@461) $generated@@465))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@461) $generated@@465))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@461) $generated@@465))
))))))
 :pattern ( ($generated@@81 ($generated@@411 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 (type $generated@@467)))
(let (($generated@@469 ($generated@@389 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@388 $generated@@469 $generated@@468)) (= ($generated@@0 ($generated@@81 ($generated@@422 $generated@@466) $generated@@467)) (exists (($generated@@470 T@U) ) (!  (and (= (type $generated@@470) $generated@@469) (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@466) $generated@@470)) (= $generated@@467 ($generated@@81 ($generated@@454 $generated@@466) $generated@@470))))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@466) $generated@@470))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@466) $generated@@470))
))))))
 :pattern ( ($generated@@81 ($generated@@422 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (and (= (type $generated@@474) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@475) $generated@@64)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477) (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@474) $generated@@478))) (and ($generated@@337 ($generated@@81 ($generated@@444 $generated@@474) $generated@@478) $generated@@476 $generated@@477) ($generated@@337 $generated@@478 $generated@@475 $generated@@477)))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@474) $generated@@478))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@474) $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (= (type $generated@@482) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@482) $generated@@486))) (and ($generated@@337 ($generated@@81 ($generated@@454 $generated@@482) $generated@@486) $generated@@484 $generated@@485) ($generated@@337 $generated@@486 $generated@@483 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@482) $generated@@486))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@482) $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ($generated@@489 Int) ) (! (= ($generated@@487 $generated@@488 $generated@@489) (div $generated@@488 $generated@@489))
 :pattern ( ($generated@@487 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@T) ) (! (= (type ($generated@@490 $generated@@491)) ($generated@@76 $generated@@491 $generated@@4))
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@390 (type $generated@@492))))
(let (($generated@@494 ($generated@@389 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@388 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@387 $generated@@494 $generated@@493)) (= ($generated@@386 $generated@@492) ($generated@@490 $generated@@494))))))
 :pattern ( ($generated@@386 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@390 (type $generated@@495))))
(let (($generated@@497 ($generated@@389 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@388 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@387 $generated@@497 $generated@@496)) (= ($generated@@422 $generated@@495) ($generated@@490 $generated@@496))))))
 :pattern ( ($generated@@422 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@390 (type $generated@@498))))
(let (($generated@@500 ($generated@@389 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@388 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@387 $generated@@500 $generated@@499)) (= ($generated@@453 $generated@@498) ($generated@@490 $generated@@244))))))
 :pattern ( ($generated@@453 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@372 (type $generated@@501))))
(let (($generated@@503 ($generated@@371 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@370 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@369 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@244) (= (type $generated@@505) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@442 $generated@@501) ($generated@@357 ($generated@@310 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@442 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@390 (type $generated@@506))))
(let (($generated@@508 ($generated@@389 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@388 $generated@@508 $generated@@507)) (or (= $generated@@506 ($generated@@387 $generated@@508 $generated@@507)) (exists (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (and (and (= (type $generated@@509) $generated@@244) (= (type $generated@@510) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@453 $generated@@506) ($generated@@357 ($generated@@310 $generated@@509 $generated@@510)))))
 :no-pattern (type $generated@@509)
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@453 $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@244) ($generated@@311 $generated@@511 $generated@@46)) (and (= ($generated@@357 ($generated@@443 $generated@@2 $generated@@511)) $generated@@511) ($generated@@220 ($generated@@443 $generated@@2 $generated@@511) $generated@@46)))
 :pattern ( ($generated@@311 $generated@@511 $generated@@46))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@244) ($generated@@311 $generated@@512 $generated@@47)) (and (= ($generated@@357 ($generated@@443 $generated@@3 $generated@@512)) $generated@@512) ($generated@@220 ($generated@@443 $generated@@3 $generated@@512) $generated@@47)))
 :pattern ( ($generated@@311 $generated@@512 $generated@@47))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@244) ($generated@@311 $generated@@513 $generated@@44)) (and (= ($generated@@357 ($generated@@443 $generated@@4 $generated@@513)) $generated@@513) ($generated@@220 ($generated@@443 $generated@@4 $generated@@513) $generated@@44)))
 :pattern ( ($generated@@311 $generated@@513 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@514) 31))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@244) ($generated@@311 $generated@@515 $generated@@45)) (and (= ($generated@@357 ($generated@@443 $generated@@514 $generated@@515)) $generated@@515) ($generated@@220 ($generated@@443 $generated@@514 $generated@@515) $generated@@45)))
 :pattern ( ($generated@@311 $generated@@515 $generated@@45))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@311 ($generated@@357 $generated@@516) $generated@@517) ($generated@@220 $generated@@516 $generated@@517)))
 :pattern ( ($generated@@311 ($generated@@357 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@79 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@76 $generated@@519 $generated@@2)) (<= 0 ($generated@@362 $generated@@518))))
 :pattern ( ($generated@@362 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@352 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@351 $generated@@521)) (<= 0 ($generated@@350 $generated@@520))))
 :pattern ( ($generated@@350 $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= ($generated@@522 ($generated@@471 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@471 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@526 ($generated@@471 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@471 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@64) (= (type $generated@@531) $generated@@64)) (= ($generated@@72 ($generated@@471 $generated@@530 $generated@@531)) $generated@@58))
 :pattern ( ($generated@@471 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@64)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= ($generated@@532 ($generated@@479 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@479 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@64)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (= ($generated@@536 ($generated@@479 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@479 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@72 ($generated@@479 $generated@@540 $generated@@541)) $generated@@59))
 :pattern ( ($generated@@479 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@244) (= (type $generated@@543) $generated@@244)) (= ($generated@@343 ($generated@@310 $generated@@542 $generated@@543)) $generated@@61))
 :pattern ( ($generated@@310 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@234 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@234 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@234 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@234 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@244) (= (type $generated@@553) $generated@@244)) (= ($generated@@242 ($generated@@310 $generated@@552 $generated@@553)) $generated@@552))
 :pattern ( ($generated@@310 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@244) (= (type $generated@@555) $generated@@244)) (= ($generated@@243 ($generated@@310 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@310 $generated@@554 $generated@@555))
)))
(assert  (and (forall (($generated@@558 T@U) ) (! (= (type ($generated@@556 $generated@@558)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@558))
)) (forall (($generated@@559 T@U) ($generated@@560 Int) ) (! (let (($generated@@561 ($generated@@352 (type $generated@@559))))
(= (type ($generated@@557 $generated@@559 $generated@@560)) $generated@@561))
 :pattern ( ($generated@@557 $generated@@559 $generated@@560))
))))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@351 $generated@@244)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@562 ($generated@@556 $generated@@563) $generated@@564) (forall (($generated@@565 Int) ) (!  (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@350 $generated@@562))) ($generated@@337 ($generated@@557 $generated@@562 $generated@@565) $generated@@563 $generated@@564))
 :pattern ( ($generated@@557 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@556 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@566 ($generated@@75 $generated@@567)) $generated@@567)
 :pattern ( ($generated@@75 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@64) (= ($generated@@568 ($generated@@320 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@320 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@64) (= ($generated@@72 ($generated@@320 $generated@@571)) $generated@@54))
 :pattern ( ($generated@@320 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@64)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@64) (= ($generated@@572 ($generated@@325 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@325 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@64) (= ($generated@@72 ($generated@@325 $generated@@575)) $generated@@55))
 :pattern ( ($generated@@325 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@64)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@64) (= ($generated@@576 ($generated@@249 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@249 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@579)) $generated@@56))
 :pattern ( ($generated@@249 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@556 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@556 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@556 $generated@@583)) $generated@@57))
 :pattern ( ($generated@@556 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
(= ($generated@@443 $generated@@585 ($generated@@357 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@357 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) $generated@@64)) (= ($generated@@220 $generated@@586 ($generated@@471 $generated@@587 $generated@@588)) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@586) $generated@@589))) (and ($generated@@311 ($generated@@81 ($generated@@444 $generated@@586) $generated@@589) $generated@@588) ($generated@@311 $generated@@589 $generated@@587)))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@586) $generated@@589))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@586) $generated@@589))
))))
 :pattern ( ($generated@@220 $generated@@586 ($generated@@471 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) (= ($generated@@220 $generated@@590 ($generated@@479 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@590) $generated@@593))) (and ($generated@@311 ($generated@@81 ($generated@@454 $generated@@590) $generated@@593) $generated@@592) ($generated@@311 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@590) $generated@@593))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@220 $generated@@590 ($generated@@479 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@244) (= (type $generated@@597) $generated@@244)) (< ($generated@@594 $generated@@596) ($generated@@595 ($generated@@310 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@310 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@244) (= (type $generated@@599) $generated@@244)) (< ($generated@@594 $generated@@599) ($generated@@595 ($generated@@310 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@310 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@244) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@311 $generated@@600 ($generated@@471 $generated@@601 $generated@@602))) (and (= ($generated@@357 ($generated@@443 ($generated@@370 $generated@@244 $generated@@244) $generated@@600)) $generated@@600) ($generated@@220 ($generated@@443 ($generated@@370 $generated@@244 $generated@@244) $generated@@600) ($generated@@471 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@311 $generated@@600 ($generated@@471 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@244) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) ($generated@@311 $generated@@603 ($generated@@479 $generated@@604 $generated@@605))) (and (= ($generated@@357 ($generated@@443 ($generated@@388 $generated@@244 $generated@@244) $generated@@603)) $generated@@603) ($generated@@220 ($generated@@443 ($generated@@388 $generated@@244 $generated@@244) $generated@@603) ($generated@@479 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@311 $generated@@603 ($generated@@479 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@64) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@244)) ($generated@@311 $generated@@608 ($generated@@234 $generated@@606 $generated@@607))) (and (= ($generated@@357 ($generated@@443 $generated@@235 $generated@@608)) $generated@@608) ($generated@@220 ($generated@@443 $generated@@235 $generated@@608) ($generated@@234 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@311 $generated@@608 ($generated@@234 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (not ($generated@@0 ($generated@@81 ($generated@@490 $generated@@610) $generated@@609))))
 :pattern ( (let (($generated@@610 (type $generated@@609)))
($generated@@81 ($generated@@490 $generated@@610) $generated@@609)))
)))
(assert (forall (($generated@@612 Int) ($generated@@613 Int) ) (! (= ($generated@@611 $generated@@612 $generated@@613) (mod $generated@@612 $generated@@613))
 :pattern ( ($generated@@611 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@69)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@64) (= (type $generated@@617) $generated@@64)) (and (= ($generated@@72 ($generated@@234 $generated@@616 $generated@@617)) $generated@@62) (= ($generated@@614 ($generated@@234 $generated@@616 $generated@@617)) $generated@@63)))
 :pattern ( ($generated@@234 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@235) (= ($generated@@594 ($generated@@357 $generated@@618)) ($generated@@595 $generated@@618)))
 :pattern ( ($generated@@594 ($generated@@357 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@244) ($generated@@311 $generated@@619 ($generated@@75 0))) (and (= ($generated@@357 ($generated@@443 $generated@@2 $generated@@619)) $generated@@619) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@619) ($generated@@75 0))))
 :pattern ( ($generated@@311 $generated@@619 ($generated@@75 0)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@244) ($generated@@311 $generated@@620 ($generated@@75 1))) (and (= ($generated@@357 ($generated@@443 $generated@@132 $generated@@620)) $generated@@620) ($generated@@220 ($generated@@443 $generated@@132 $generated@@620) ($generated@@75 1))))
 :pattern ( ($generated@@311 $generated@@620 ($generated@@75 1)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@244) (= (type $generated@@622) $generated@@64)) ($generated@@311 $generated@@621 ($generated@@320 $generated@@622))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@621)) $generated@@621) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@621) ($generated@@320 $generated@@622))))
 :pattern ( ($generated@@311 $generated@@621 ($generated@@320 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@244) (= (type $generated@@624) $generated@@64)) ($generated@@311 $generated@@623 ($generated@@325 $generated@@624))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@623)) $generated@@623) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@623) ($generated@@325 $generated@@624))))
 :pattern ( ($generated@@311 $generated@@623 ($generated@@325 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@244) (= (type $generated@@626) $generated@@64)) ($generated@@311 $generated@@625 ($generated@@249 $generated@@626))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@2) $generated@@625)) $generated@@625) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@2) $generated@@625) ($generated@@249 $generated@@626))))
 :pattern ( ($generated@@311 $generated@@625 ($generated@@249 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@244) (= (type $generated@@628) $generated@@64)) ($generated@@311 $generated@@627 ($generated@@556 $generated@@628))) (and (= ($generated@@357 ($generated@@443 ($generated@@351 $generated@@244) $generated@@627)) $generated@@627) ($generated@@220 ($generated@@443 ($generated@@351 $generated@@244) $generated@@627) ($generated@@556 $generated@@628))))
 :pattern ( ($generated@@311 $generated@@627 ($generated@@556 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@244) ($generated@@311 $generated@@629 ($generated@@75 2))) (and (= ($generated@@357 ($generated@@443 $generated@@140 $generated@@629)) $generated@@629) ($generated@@220 ($generated@@443 $generated@@140 $generated@@629) ($generated@@75 2))))
 :pattern ( ($generated@@311 $generated@@629 ($generated@@75 2)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@244) ($generated@@311 $generated@@630 ($generated@@75 3))) (and (= ($generated@@357 ($generated@@443 $generated@@148 $generated@@630)) $generated@@630) ($generated@@220 ($generated@@443 $generated@@148 $generated@@630) ($generated@@75 3))))
 :pattern ( ($generated@@311 $generated@@630 ($generated@@75 3)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@244) ($generated@@311 $generated@@631 ($generated@@75 4))) (and (= ($generated@@357 ($generated@@443 $generated@@156 $generated@@631)) $generated@@631) ($generated@@220 ($generated@@443 $generated@@156 $generated@@631) ($generated@@75 4))))
 :pattern ( ($generated@@311 $generated@@631 ($generated@@75 4)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@244) ($generated@@311 $generated@@632 ($generated@@75 7))) (and (= ($generated@@357 ($generated@@443 $generated@@164 $generated@@632)) $generated@@632) ($generated@@220 ($generated@@443 $generated@@164 $generated@@632) ($generated@@75 7))))
 :pattern ( ($generated@@311 $generated@@632 ($generated@@75 7)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@244) ($generated@@311 $generated@@633 ($generated@@75 8))) (and (= ($generated@@357 ($generated@@443 $generated@@172 $generated@@633)) $generated@@633) ($generated@@220 ($generated@@443 $generated@@172 $generated@@633) ($generated@@75 8))))
 :pattern ( ($generated@@311 $generated@@633 ($generated@@75 8)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@244) ($generated@@311 $generated@@634 ($generated@@75 15))) (and (= ($generated@@357 ($generated@@443 $generated@@180 $generated@@634)) $generated@@634) ($generated@@220 ($generated@@443 $generated@@180 $generated@@634) ($generated@@75 15))))
 :pattern ( ($generated@@311 $generated@@634 ($generated@@75 15)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@244) ($generated@@311 $generated@@635 ($generated@@75 16))) (and (= ($generated@@357 ($generated@@443 $generated@@188 $generated@@635)) $generated@@635) ($generated@@220 ($generated@@443 $generated@@188 $generated@@635) ($generated@@75 16))))
 :pattern ( ($generated@@311 $generated@@635 ($generated@@75 16)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@244) ($generated@@311 $generated@@636 ($generated@@75 32))) (and (= ($generated@@357 ($generated@@443 $generated@@196 $generated@@636)) $generated@@636) ($generated@@220 ($generated@@443 $generated@@196 $generated@@636) ($generated@@75 32))))
 :pattern ( ($generated@@311 $generated@@636 ($generated@@75 32)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@244) ($generated@@311 $generated@@637 ($generated@@75 53))) (and (= ($generated@@357 ($generated@@443 $generated@@204 $generated@@637)) $generated@@637) ($generated@@220 ($generated@@443 $generated@@204 $generated@@637) ($generated@@75 53))))
 :pattern ( ($generated@@311 $generated@@637 ($generated@@75 53)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@244) ($generated@@311 $generated@@638 ($generated@@75 100))) (and (= ($generated@@357 ($generated@@443 $generated@@212 $generated@@638)) $generated@@638) ($generated@@220 ($generated@@443 $generated@@212 $generated@@638) ($generated@@75 100))))
 :pattern ( ($generated@@311 $generated@@638 ($generated@@75 100)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@639) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@640) $generated@@64)) (= (type $generated@@641) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@639 ($generated@@249 $generated@@640) $generated@@641) (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@639 $generated@@642)))) ($generated@@337 $generated@@642 $generated@@640 $generated@@641))
 :pattern ( ($generated@@81 $generated@@639 $generated@@642))
))))
 :pattern ( ($generated@@74 $generated@@639 ($generated@@249 $generated@@640) $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@235) (= (type $generated@@644) $generated@@64)) (= (type $generated@@645) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@336 $generated@@645) (and ($generated@@233 $generated@@643) (exists (($generated@@646 T@U) ) (!  (and (= (type $generated@@646) $generated@@64) ($generated@@74 $generated@@643 ($generated@@234 $generated@@644 $generated@@646) $generated@@645))
 :pattern ( ($generated@@74 $generated@@643 ($generated@@234 $generated@@644 $generated@@646) $generated@@645))
))))) ($generated@@337 ($generated@@242 $generated@@643) $generated@@644 $generated@@645))
 :pattern ( ($generated@@337 ($generated@@242 $generated@@643) $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@235) (= (type $generated@@648) $generated@@64)) (= (type $generated@@649) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@336 $generated@@649) (and ($generated@@233 $generated@@647) (exists (($generated@@650 T@U) ) (!  (and (= (type $generated@@650) $generated@@64) ($generated@@74 $generated@@647 ($generated@@234 $generated@@650 $generated@@648) $generated@@649))
 :pattern ( ($generated@@74 $generated@@647 ($generated@@234 $generated@@650 $generated@@648) $generated@@649))
))))) ($generated@@337 ($generated@@243 $generated@@647) $generated@@648 $generated@@649))
 :pattern ( ($generated@@337 ($generated@@243 $generated@@647) $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@244) (= (type $generated@@652) $generated@@244)) (= ($generated@@310 ($generated@@332 $generated@@651) ($generated@@332 $generated@@652)) ($generated@@332 ($generated@@310 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@310 ($generated@@332 $generated@@651) ($generated@@332 $generated@@652)))
)))
(assert (forall (($generated@@653 Int) ) (! (= ($generated@@357 ($generated@@8 ($generated@@330 $generated@@653))) ($generated@@332 ($generated@@357 ($generated@@8 $generated@@653))))
 :pattern ( ($generated@@357 ($generated@@8 ($generated@@330 $generated@@653))))
)))
(assert (forall (($generated@@654 T@U) ) (! (= ($generated@@357 ($generated@@332 $generated@@654)) ($generated@@332 ($generated@@357 $generated@@654)))
 :pattern ( ($generated@@357 ($generated@@332 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@352 (type $generated@@655))))
 (=> (and (= (type $generated@@655) ($generated@@351 $generated@@656)) (= ($generated@@350 $generated@@655) 0)) (= $generated@@655 ($generated@@349 $generated@@656))))
 :pattern ( ($generated@@350 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@658)))
 (=> (and (and (= (type $generated@@657) ($generated@@76 $generated@@660 $generated@@2)) (= (type $generated@@659) $generated@@2)) (<= 0 ($generated $generated@@659))) (= ($generated@@362 ($generated@@82 $generated@@657 $generated@@658 $generated@@659)) (+ (- ($generated@@362 $generated@@657) ($generated ($generated@@81 $generated@@657 $generated@@658))) ($generated $generated@@659)))))
 :pattern ( ($generated@@362 ($generated@@82 $generated@@657 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@662) $generated@@2)) ($generated@@74 $generated@@662 $generated@@46 $generated@@661))
 :pattern ( ($generated@@74 $generated@@662 $generated@@46 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@664) $generated@@3)) ($generated@@74 $generated@@664 $generated@@47 $generated@@663))
 :pattern ( ($generated@@74 $generated@@664 $generated@@47 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@666) $generated@@4)) ($generated@@74 $generated@@666 $generated@@44 $generated@@665))
 :pattern ( ($generated@@74 $generated@@666 $generated@@44 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@668) $generated@@514)) ($generated@@74 $generated@@668 $generated@@45 $generated@@667))
 :pattern ( ($generated@@74 $generated@@668 $generated@@45 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@670) $generated@@244)) ($generated@@74 $generated@@670 $generated@@48 $generated@@669))
 :pattern ( ($generated@@74 $generated@@670 $generated@@48 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@351 $generated@@244)) (= (type $generated@@672) $generated@@64)) (= ($generated@@220 $generated@@671 ($generated@@556 $generated@@672)) (forall (($generated@@673 Int) ) (!  (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@350 $generated@@671))) ($generated@@311 ($generated@@557 $generated@@671 $generated@@673) $generated@@672))
 :pattern ( ($generated@@557 $generated@@671 $generated@@673))
))))
 :pattern ( ($generated@@220 $generated@@671 ($generated@@556 $generated@@672)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 Int) ) (!  (=> (= (type $generated@@675) ($generated@@351 $generated@@244)) (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@350 $generated@@675))) (< ($generated@@595 ($generated@@443 $generated@@235 ($generated@@557 $generated@@675 $generated@@676))) ($generated@@674 $generated@@675))))
 :pattern ( ($generated@@595 ($generated@@443 $generated@@235 ($generated@@557 $generated@@675 $generated@@676))))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@678) $generated@@64)) (= (type $generated@@679) $generated@@64)) ($generated@@220 $generated@@677 ($generated@@471 $generated@@678 $generated@@679))) (and (and ($generated@@220 ($generated@@368 $generated@@677) ($generated@@320 $generated@@678)) ($generated@@220 ($generated@@411 $generated@@677) ($generated@@320 $generated@@679))) ($generated@@220 ($generated@@442 $generated@@677) ($generated@@320 ($generated@@234 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@220 $generated@@677 ($generated@@471 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@681) $generated@@64)) (= (type $generated@@682) $generated@@64)) ($generated@@220 $generated@@680 ($generated@@479 $generated@@681 $generated@@682))) (and (and ($generated@@220 ($generated@@386 $generated@@680) ($generated@@325 $generated@@681)) ($generated@@220 ($generated@@422 $generated@@680) ($generated@@325 $generated@@682))) ($generated@@220 ($generated@@453 $generated@@680) ($generated@@325 ($generated@@234 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@220 $generated@@680 ($generated@@479 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@2) ($generated@@220 $generated@@683 $generated@@46))
 :pattern ( ($generated@@220 $generated@@683 $generated@@46))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@3) ($generated@@220 $generated@@684 $generated@@47))
 :pattern ( ($generated@@220 $generated@@684 $generated@@47))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@4) ($generated@@220 $generated@@685 $generated@@44))
 :pattern ( ($generated@@220 $generated@@685 $generated@@44))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@514) ($generated@@220 $generated@@686 $generated@@45))
 :pattern ( ($generated@@220 $generated@@686 $generated@@45))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@244) ($generated@@220 $generated@@687 $generated@@48))
 :pattern ( ($generated@@220 $generated@@687 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 (T@U) Bool)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(assert  (and (and (and (= (type $generated@@688) ($generated@@256 $generated@@77 $generated@@4)) (= (type $generated@@689) $generated@@77)) (= (type $generated@@690) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@696) ($generated@@351 $generated@@244))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@698  (=> (= $generated@@688 ($generated@@255 $generated@@689 $generated@@690 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@691 0))) (=> (= $generated@@692 ($generated@@487 $generated@@693 $generated@@691)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@330 (- 0 32768)) $generated@@692) (< $generated@@692 32768))) (=> (and (<= ($generated@@330 (- 0 32768)) $generated@@692) (< $generated@@692 32768)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@691 0))) (=> (and (= $generated@@694 ($generated@@611 $generated@@693 $generated@@691)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@330 (- 0 32768)) $generated@@694) (< $generated@@694 32768)))))))))))
(let (($generated@@699  (=> (and (and ($generated@@336 $generated@@690) ($generated@@695 $generated@@690)) (and (<= ($generated@@330 (- 0 32768)) $generated@@693) (< $generated@@693 32768))) (=> (and (and (and (<= ($generated@@330 (- 0 32768)) $generated@@691) (< $generated@@691 32768)) (and ($generated@@220 $generated@@696 ($generated@@556 $generated@@45)) ($generated@@74 $generated@@696 ($generated@@556 $generated@@45) $generated@@690))) (and (and (= 1 $generated@@697) (not (= $generated@@691 0))) (and (<= ($generated@@330 (- 0 32767)) $generated@@693) (= (ControlFlow 0 6) 2)))) $generated@@698))))
$generated@@699)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 () T@T)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 () T@T)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@260 (T@T T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@334 (Int) Int)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@341 (T@U T@U T@U) Bool)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@354 (T@U) Int)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@374 (T@U) Int)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@T T@T) T@U)
(declare-fun $generated@@382 (T@T T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@T) T@U)
(declare-fun $generated@@400 (T@T T@T) T@T)
(declare-fun $generated@@401 (T@T) T@T)
(declare-fun $generated@@402 (T@T) T@T)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@T T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@483 (T@U T@U) T@U)
(declare-fun $generated@@491 (T@U T@U) T@U)
(declare-fun $generated@@502 (T@T) T@U)
(declare-fun $generated@@526 () T@T)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@569 (T@U Int) T@U)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@683 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@220 $generated@@221 $generated@@222)) (forall (($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@221 $generated@@223) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60))
)))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@2) ($generated@@224 $generated@@225 ($generated@@75 0)))
 :pattern ( ($generated@@224 $generated@@225 ($generated@@75 0)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@132) ($generated@@224 $generated@@226 ($generated@@75 1)))
 :pattern ( ($generated@@224 $generated@@226 ($generated@@75 1)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@140) ($generated@@224 $generated@@227 ($generated@@75 2)))
 :pattern ( ($generated@@224 $generated@@227 ($generated@@75 2)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@148) ($generated@@224 $generated@@228 ($generated@@75 3)))
 :pattern ( ($generated@@224 $generated@@228 ($generated@@75 3)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@156) ($generated@@224 $generated@@229 ($generated@@75 4)))
 :pattern ( ($generated@@224 $generated@@229 ($generated@@75 4)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@164) ($generated@@224 $generated@@230 ($generated@@75 7)))
 :pattern ( ($generated@@224 $generated@@230 ($generated@@75 7)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@172) ($generated@@224 $generated@@231 ($generated@@75 8)))
 :pattern ( ($generated@@224 $generated@@231 ($generated@@75 8)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@180) ($generated@@224 $generated@@232 ($generated@@75 15)))
 :pattern ( ($generated@@224 $generated@@232 ($generated@@75 15)))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (= (type $generated@@233) $generated@@188) ($generated@@224 $generated@@233 ($generated@@75 16)))
 :pattern ( ($generated@@224 $generated@@233 ($generated@@75 16)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (= (type $generated@@234) $generated@@196) ($generated@@224 $generated@@234 ($generated@@75 32)))
 :pattern ( ($generated@@224 $generated@@234 ($generated@@75 32)))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@204) ($generated@@224 $generated@@235 ($generated@@75 53)))
 :pattern ( ($generated@@224 $generated@@235 ($generated@@75 53)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@212) ($generated@@224 $generated@@236 ($generated@@75 100)))
 :pattern ( ($generated@@224 $generated@@236 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@239) 25) (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@64) (= (type $generated@@243) $generated@@64)) (= (type $generated@@244) $generated@@239)) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243))) ($generated@@237 $generated@@244))
 :pattern ( ($generated@@237 $generated@@244) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243)))
)))
(assert  (and (and (= ($generated@@1 $generated@@248) 26) (forall (($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@246 $generated@@249))
))) (forall (($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@250)) $generated@@248)
 :pattern ( ($generated@@247 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@251) $generated@@239) (= (type $generated@@252) $generated@@239)) true) (= ($generated@@245 $generated@@251 $generated@@252)  (and (= ($generated@@246 $generated@@251) ($generated@@246 $generated@@252)) (= ($generated@@247 $generated@@251) ($generated@@247 $generated@@252)))))
 :pattern ( ($generated@@245 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@253 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@257) $generated@@64)) ($generated@@224 $generated@@256 ($generated@@253 $generated@@257))) ($generated@@254 $generated@@256))
 :pattern ( ($generated@@224 $generated@@256 ($generated@@253 $generated@@257)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@264 $generated@@265)) 27)) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@260 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@262 ($generated@@260 $generated@@268 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@260 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@262 (type $generated@@270))))
(= (type ($generated@@258 $generated@@270 $generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@258 $generated@@270 $generated@@271 $generated@@272))
))) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(let (($generated@@279 (type $generated@@275)))
(= (type ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277)) ($generated@@260 $generated@@279 $generated@@278))))
 :pattern ( ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277))
))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@262 (type $generated@@280))))
 (=> (= (type $generated@@283) $generated@@284) (= ($generated@@258 ($generated@@263 $generated@@280 $generated@@281 $generated@@282 $generated@@283) $generated@@281 $generated@@282) $generated@@283)))
 :weight 0
))) (and (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (or (= $generated@@287 $generated@@289) (= ($generated@@258 ($generated@@263 $generated@@286 $generated@@287 $generated@@288 $generated@@285) $generated@@289 $generated@@290) ($generated@@258 $generated@@286 $generated@@289 $generated@@290)))
 :weight 0
)) (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (or (= $generated@@294 $generated@@296) (= ($generated@@258 ($generated@@263 $generated@@292 $generated@@293 $generated@@294 $generated@@291) $generated@@295 $generated@@296) ($generated@@258 $generated@@292 $generated@@295 $generated@@296)))
 :weight 0
))) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (or true (= ($generated@@258 ($generated@@263 $generated@@298 $generated@@299 $generated@@300 $generated@@297) $generated@@301 $generated@@302) ($generated@@258 $generated@@298 $generated@@301 $generated@@302)))
 :weight 0
)))) (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ) (! (= (type ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306)) ($generated@@260 $generated@@77 $generated@@4))
 :pattern ( ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 Bool) ($generated@@311 T@U) ($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@67 (type $generated@@312))))
 (=> (and (and (and (and (= (type $generated@@307) $generated@@77) (= (type $generated@@308) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@309) ($generated@@66 $generated@@4))) (= (type $generated@@311) $generated@@77)) (= (type $generated@@312) ($generated@@66 $generated@@313))) (= ($generated@@0 ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))  (=> (and (not (= $generated@@311 $generated@@307)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@308 $generated@@311) $generated@@309))) $generated@@310))))
 :pattern ( ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) $generated@@239)
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (= (type $generated@@318) $generated@@64) (= (type $generated@@319) $generated@@64)) (= (type $generated@@320) $generated@@248)) (= (type $generated@@321) $generated@@248)) (= ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319))  (and ($generated@@315 $generated@@320 $generated@@318) ($generated@@315 $generated@@321 $generated@@319))))
 :pattern ( ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@239) (= (type $generated@@323) $generated@@239)) (= ($generated@@245 $generated@@322 $generated@@323) (= $generated@@322 $generated@@323)))
 :pattern ( ($generated@@245 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@64)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@327) $generated@@64)) (= ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@248) ($generated@@0 ($generated@@81 $generated@@326 $generated@@328))) ($generated@@315 $generated@@328 $generated@@327))
 :pattern ( ($generated@@81 $generated@@326 $generated@@328))
))))
 :pattern ( ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@64)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@248) ($generated@@0 ($generated@@81 $generated@@331 $generated@@333))) ($generated@@315 $generated@@333 $generated@@332))
 :pattern ( ($generated@@81 $generated@@331 $generated@@333))
))))
 :pattern ( ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)))
)))
(assert (forall (($generated@@335 Int) ) (! (= ($generated@@334 $generated@@335) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 (type $generated@@337)))
(= (type ($generated@@336 $generated@@337)) $generated@@338))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= ($generated@@336 $generated@@339) $generated@@339)
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@342) $generated@@64) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) $generated@@248)) (= (type $generated@@345) $generated@@248)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@340 $generated@@346)) (= ($generated@@74 ($generated@@314 $generated@@344 $generated@@345) ($generated@@238 $generated@@342 $generated@@343) $generated@@346)  (and ($generated@@341 $generated@@344 $generated@@342 $generated@@346) ($generated@@341 $generated@@345 $generated@@343 $generated@@346))))
 :pattern ( ($generated@@74 ($generated@@314 $generated@@344 $generated@@345) ($generated@@238 $generated@@342 $generated@@343) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (= (type ($generated@@347 $generated@@348)) $generated@@68)
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@239) (= ($generated@@237 $generated@@349) (= ($generated@@347 $generated@@349) $generated@@61)))
 :pattern ( ($generated@@237 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@239) ($generated@@237 $generated@@350)) (exists (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (and (and (= (type $generated@@351) $generated@@248) (= (type $generated@@352) $generated@@248)) (= $generated@@350 ($generated@@314 $generated@@351 $generated@@352)))
 :no-pattern (type $generated@@351)
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
)))
 :pattern ( ($generated@@237 $generated@@350))
)))
(assert  (and (and (forall (($generated@@357 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@357)) 28)) (forall (($generated@@358 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@355 $generated@@358))
))) (forall (($generated@@359 T@T) ) (! (= (type ($generated@@353 $generated@@359)) ($generated@@355 $generated@@359))
 :pattern ( ($generated@@353 $generated@@359))
))))
(assert (forall (($generated@@360 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@360)) 0)
 :pattern ( ($generated@@353 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@248)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@64) (= (type $generated@@365) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@341 ($generated@@361 $generated@@363) $generated@@364 $generated@@365) ($generated@@74 $generated@@363 $generated@@364 $generated@@365)))
 :pattern ( ($generated@@341 ($generated@@361 $generated@@363) $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@368) $generated@@248)) (= (type $generated@@369) $generated@@64)) ($generated@@220 $generated@@366 $generated@@367)) ($generated@@341 $generated@@368 $generated@@369 $generated@@366)) ($generated@@341 $generated@@368 $generated@@369 $generated@@367))
 :pattern ( ($generated@@220 $generated@@366 $generated@@367) ($generated@@341 $generated@@368 $generated@@369 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@371) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@373) $generated@@64)) ($generated@@220 $generated@@370 $generated@@371)) ($generated@@74 $generated@@372 $generated@@373 $generated@@370)) ($generated@@74 $generated@@372 $generated@@373 $generated@@371))
 :pattern ( ($generated@@220 $generated@@370 $generated@@371) ($generated@@74 $generated@@372 $generated@@373 $generated@@370))
)))
(assert (forall (($generated@@376 T@T) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@76 $generated@@376 $generated@@2))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@79 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@76 $generated@@378 $generated@@2)) (and (= (= ($generated@@374 $generated@@377) 0) (= $generated@@377 ($generated@@375 $generated@@378))) (=> (not (= ($generated@@374 $generated@@377) 0)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (< 0 ($generated ($generated@@81 $generated@@377 $generated@@379))))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert  (and (and (and (and (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (= ($generated@@1 ($generated@@382 $generated@@385 $generated@@386)) 29)) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= ($generated@@383 ($generated@@382 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@382 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= ($generated@@384 ($generated@@382 $generated@@389 $generated@@390)) $generated@@390)
 :pattern ( ($generated@@382 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@383 (type $generated@@391))))
(= (type ($generated@@380 $generated@@391)) ($generated@@76 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@391))
))) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= (type ($generated@@381 $generated@@393 $generated@@394)) ($generated@@382 $generated@@393 $generated@@394))
 :pattern ( ($generated@@381 $generated@@393 $generated@@394))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@T) ) (! (let (($generated@@397 (type $generated@@395)))
 (not ($generated@@0 ($generated@@81 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395))))
 :pattern ( (let (($generated@@397 (type $generated@@395)))
($generated@@81 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395)))
)))
(assert  (and (and (and (and (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (= ($generated@@1 ($generated@@400 $generated@@403 $generated@@404)) 30)) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= ($generated@@401 ($generated@@400 $generated@@405 $generated@@406)) $generated@@405)
 :pattern ( ($generated@@400 $generated@@405 $generated@@406))
))) (forall (($generated@@407 T@T) ($generated@@408 T@T) ) (! (= ($generated@@402 ($generated@@400 $generated@@407 $generated@@408)) $generated@@408)
 :pattern ( ($generated@@400 $generated@@407 $generated@@408))
))) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@401 (type $generated@@409))))
(= (type ($generated@@398 $generated@@409)) ($generated@@76 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@409))
))) (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (! (= (type ($generated@@399 $generated@@411 $generated@@412)) ($generated@@400 $generated@@411 $generated@@412))
 :pattern ( ($generated@@399 $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@T) ) (! (let (($generated@@415 (type $generated@@413)))
 (not ($generated@@0 ($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413))))
 :pattern ( (let (($generated@@415 (type $generated@@413)))
($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413)))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (= ($generated@@254 $generated@@416) (forall (($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@417) (and (<= 0 ($generated ($generated@@81 $generated@@416 $generated@@418))) (<= ($generated ($generated@@81 $generated@@416 $generated@@418)) ($generated@@374 $generated@@416))))
 :pattern ( ($generated@@81 $generated@@416 $generated@@418))
)))))
 :pattern ( ($generated@@254 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@384 (type $generated@@419))))
(let (($generated@@421 ($generated@@383 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@382 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@381 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@380 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@384 (type $generated@@424))))
(= (type ($generated@@423 $generated@@424)) ($generated@@76 $generated@@425 $generated@@4)))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@384 (type $generated@@426))))
(let (($generated@@428 ($generated@@383 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@382 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@381 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@427) ($generated@@0 ($generated@@81 ($generated@@423 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@423 $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@402 (type $generated@@430))))
(let (($generated@@432 ($generated@@401 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@400 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@399 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@430) $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@398 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@402 (type $generated@@435))))
(= (type ($generated@@434 $generated@@435)) ($generated@@76 $generated@@436 $generated@@4)))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@402 (type $generated@@437))))
(let (($generated@@439 ($generated@@401 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@400 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@399 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@438) ($generated@@0 ($generated@@81 ($generated@@434 $generated@@437) $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@434 $generated@@437))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@442) $generated@@64)) (= ($generated@@224 $generated@@441 ($generated@@253 $generated@@442)) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@441 $generated@@443)))) ($generated@@315 $generated@@443 $generated@@442))
 :pattern ( ($generated@@81 $generated@@441 $generated@@443))
))))
 :pattern ( ($generated@@224 $generated@@441 ($generated@@253 $generated@@442)))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (= (type $generated@@444) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@444 ($generated@@324 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@248) ($generated@@0 ($generated@@81 $generated@@444 $generated@@447))) ($generated@@341 $generated@@447 $generated@@445 $generated@@446))
 :pattern ( ($generated@@81 $generated@@444 $generated@@447))
))))
 :pattern ( ($generated@@74 $generated@@444 ($generated@@324 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@448) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@449) $generated@@64)) (= (type $generated@@450) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@448 ($generated@@329 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@248) ($generated@@0 ($generated@@81 $generated@@448 $generated@@451))) ($generated@@341 $generated@@451 $generated@@449 $generated@@450))
 :pattern ( ($generated@@81 $generated@@448 $generated@@451))
))))
 :pattern ( ($generated@@74 $generated@@448 ($generated@@329 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
(= ($generated ($generated@@81 ($generated@@375 $generated@@453) $generated@@452)) 0))
 :pattern ( (let (($generated@@453 (type $generated@@452)))
($generated@@81 ($generated@@375 $generated@@453) $generated@@452)))
)))
(assert  (and (and (forall (($generated@@457 T@U) ) (! (= (type ($generated@@454 $generated@@457)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@454 $generated@@457))
)) (forall (($generated@@458 T@T) ($generated@@459 T@U) ) (! (= (type ($generated@@455 $generated@@458 $generated@@459)) $generated@@458)
 :pattern ( ($generated@@455 $generated@@458 $generated@@459))
))) (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@384 (type $generated@@460))))
(let (($generated@@462 ($generated@@383 (type $generated@@460))))
(= (type ($generated@@456 $generated@@460)) ($generated@@76 $generated@@462 $generated@@461))))
 :pattern ( ($generated@@456 $generated@@460))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@464) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@454 $generated@@463) $generated@@464))  (and ($generated@@0 ($generated@@81 ($generated@@380 $generated@@463) ($generated@@246 ($generated@@455 $generated@@239 $generated@@464)))) (= ($generated@@81 ($generated@@456 $generated@@463) ($generated@@246 ($generated@@455 $generated@@239 $generated@@464))) ($generated@@247 ($generated@@455 $generated@@239 $generated@@464))))))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@463) $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@402 (type $generated@@468))))
(let (($generated@@470 ($generated@@401 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468)) ($generated@@76 $generated@@470 $generated@@469))))
 :pattern ( ($generated@@466 $generated@@468))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@472) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@465 $generated@@471) $generated@@472))  (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@471) ($generated@@246 ($generated@@455 $generated@@239 $generated@@472)))) (= ($generated@@81 ($generated@@466 $generated@@471) ($generated@@246 ($generated@@455 $generated@@239 $generated@@472))) ($generated@@247 ($generated@@455 $generated@@239 $generated@@472))))))
 :pattern ( ($generated@@81 ($generated@@465 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
(let (($generated@@476 ($generated@@383 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@382 $generated@@476 $generated@@475)) (= ($generated@@0 ($generated@@81 ($generated@@423 $generated@@473) $generated@@474)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@476) (and ($generated@@0 ($generated@@81 ($generated@@380 $generated@@473) $generated@@477)) (= $generated@@474 ($generated@@81 ($generated@@456 $generated@@473) $generated@@477))))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@473) $generated@@477))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@473) $generated@@477))
))))))
 :pattern ( ($generated@@81 ($generated@@423 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
(let (($generated@@481 ($generated@@401 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@400 $generated@@481 $generated@@480)) (= ($generated@@0 ($generated@@81 ($generated@@434 $generated@@478) $generated@@479)) (exists (($generated@@482 T@U) ) (!  (and (= (type $generated@@482) $generated@@481) (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@478) $generated@@482)) (= $generated@@479 ($generated@@81 ($generated@@466 $generated@@478) $generated@@482))))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@478) $generated@@482))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@478) $generated@@482))
))))))
 :pattern ( ($generated@@81 ($generated@@434 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@486) $generated@@490))) (and ($generated@@341 ($generated@@81 ($generated@@456 $generated@@486) $generated@@490) $generated@@488 $generated@@489) ($generated@@341 $generated@@490 $generated@@487 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@486) $generated@@490))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@486) $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@494) $generated@@498))) (and ($generated@@341 ($generated@@81 ($generated@@466 $generated@@494) $generated@@498) $generated@@496 $generated@@497) ($generated@@341 $generated@@498 $generated@@495 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@494) $generated@@498))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@494) $generated@@498))
))))
 :pattern ( ($generated@@74 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@499) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@500) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@501) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@499 $generated@@501))) (and ($generated@@220 $generated@@499 $generated@@500) ($generated@@220 $generated@@500 $generated@@501))) ($generated@@220 $generated@@499 $generated@@501))
 :pattern ( ($generated@@220 $generated@@499 $generated@@500) ($generated@@220 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@T) ) (! (= (type ($generated@@502 $generated@@503)) ($generated@@76 $generated@@503 $generated@@4))
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@402 (type $generated@@504))))
(let (($generated@@506 ($generated@@401 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@400 $generated@@506 $generated@@505)) (= (= $generated@@504 ($generated@@399 $generated@@506 $generated@@505)) (= ($generated@@398 $generated@@504) ($generated@@502 $generated@@506))))))
 :pattern ( ($generated@@398 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@402 (type $generated@@507))))
(let (($generated@@509 ($generated@@401 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@400 $generated@@509 $generated@@508)) (= (= $generated@@507 ($generated@@399 $generated@@509 $generated@@508)) (= ($generated@@434 $generated@@507) ($generated@@502 $generated@@508))))))
 :pattern ( ($generated@@434 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@402 (type $generated@@510))))
(let (($generated@@512 ($generated@@401 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@400 $generated@@512 $generated@@511)) (= (= $generated@@510 ($generated@@399 $generated@@512 $generated@@511)) (= ($generated@@465 $generated@@510) ($generated@@502 $generated@@248))))))
 :pattern ( ($generated@@465 $generated@@510))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@384 (type $generated@@513))))
(let (($generated@@515 ($generated@@383 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@382 $generated@@515 $generated@@514)) (or (= $generated@@513 ($generated@@381 $generated@@515 $generated@@514)) (exists (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (and (and (= (type $generated@@516) $generated@@248) (= (type $generated@@517) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@454 $generated@@513) ($generated@@361 ($generated@@314 $generated@@516 $generated@@517)))))
 :no-pattern (type $generated@@516)
 :no-pattern (type $generated@@517)
 :no-pattern ($generated $generated@@516)
 :no-pattern ($generated@@0 $generated@@516)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
))))))
 :pattern ( ($generated@@454 $generated@@513))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@402 (type $generated@@518))))
(let (($generated@@520 ($generated@@401 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@400 $generated@@520 $generated@@519)) (or (= $generated@@518 ($generated@@399 $generated@@520 $generated@@519)) (exists (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (and (and (= (type $generated@@521) $generated@@248) (= (type $generated@@522) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@465 $generated@@518) ($generated@@361 ($generated@@314 $generated@@521 $generated@@522)))))
 :no-pattern (type $generated@@521)
 :no-pattern (type $generated@@522)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
))))))
 :pattern ( ($generated@@465 $generated@@518))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@248) ($generated@@315 $generated@@523 $generated@@46)) (and (= ($generated@@361 ($generated@@455 $generated@@2 $generated@@523)) $generated@@523) ($generated@@224 ($generated@@455 $generated@@2 $generated@@523) $generated@@46)))
 :pattern ( ($generated@@315 $generated@@523 $generated@@46))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@248) ($generated@@315 $generated@@524 $generated@@47)) (and (= ($generated@@361 ($generated@@455 $generated@@3 $generated@@524)) $generated@@524) ($generated@@224 ($generated@@455 $generated@@3 $generated@@524) $generated@@47)))
 :pattern ( ($generated@@315 $generated@@524 $generated@@47))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@248) ($generated@@315 $generated@@525 $generated@@44)) (and (= ($generated@@361 ($generated@@455 $generated@@4 $generated@@525)) $generated@@525) ($generated@@224 ($generated@@455 $generated@@4 $generated@@525) $generated@@44)))
 :pattern ( ($generated@@315 $generated@@525 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@526) 31))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@248) ($generated@@315 $generated@@527 $generated@@45)) (and (= ($generated@@361 ($generated@@455 $generated@@526 $generated@@527)) $generated@@527) ($generated@@224 ($generated@@455 $generated@@526 $generated@@527) $generated@@45)))
 :pattern ( ($generated@@315 $generated@@527 $generated@@45))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@315 ($generated@@361 $generated@@528) $generated@@529) ($generated@@224 $generated@@528 $generated@@529)))
 :pattern ( ($generated@@315 ($generated@@361 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@79 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@76 $generated@@531 $generated@@2)) (<= 0 ($generated@@374 $generated@@530))))
 :pattern ( ($generated@@374 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@356 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@355 $generated@@533)) (<= 0 ($generated@@354 $generated@@532))))
 :pattern ( ($generated@@354 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= ($generated@@534 ($generated@@483 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@483 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@538 ($generated@@483 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@483 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= ($generated@@72 ($generated@@483 $generated@@542 $generated@@543)) $generated@@58))
 :pattern ( ($generated@@483 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@491 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@491 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@491 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@491 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@64) (= (type $generated@@553) $generated@@64)) (= ($generated@@72 ($generated@@491 $generated@@552 $generated@@553)) $generated@@59))
 :pattern ( ($generated@@491 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@248) (= (type $generated@@555) $generated@@248)) (= ($generated@@347 ($generated@@314 $generated@@554 $generated@@555)) $generated@@61))
 :pattern ( ($generated@@314 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@64) (= (type $generated@@559) $generated@@64)) (= ($generated@@556 ($generated@@238 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@238 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@64)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@64) (= (type $generated@@563) $generated@@64)) (= ($generated@@560 ($generated@@238 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@238 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@248) (= (type $generated@@565) $generated@@248)) (= ($generated@@246 ($generated@@314 $generated@@564 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@314 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@248) (= (type $generated@@567) $generated@@248)) (= ($generated@@247 ($generated@@314 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@314 $generated@@566 $generated@@567))
)))
(assert  (and (forall (($generated@@570 T@U) ) (! (= (type ($generated@@568 $generated@@570)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@570))
)) (forall (($generated@@571 T@U) ($generated@@572 Int) ) (! (let (($generated@@573 ($generated@@356 (type $generated@@571))))
(= (type ($generated@@569 $generated@@571 $generated@@572)) $generated@@573))
 :pattern ( ($generated@@569 $generated@@571 $generated@@572))
))))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@355 $generated@@248)) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@574 ($generated@@568 $generated@@575) $generated@@576) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@354 $generated@@574))) ($generated@@341 ($generated@@569 $generated@@574 $generated@@577) $generated@@575 $generated@@576))
 :pattern ( ($generated@@569 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@74 $generated@@574 ($generated@@568 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@578 ($generated@@75 $generated@@579)) $generated@@579)
 :pattern ( ($generated@@75 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@324 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@324 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@324 $generated@@583)) $generated@@54))
 :pattern ( ($generated@@324 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@64)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@64) (= ($generated@@584 ($generated@@329 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@329 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@64) (= ($generated@@72 ($generated@@329 $generated@@587)) $generated@@55))
 :pattern ( ($generated@@329 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@64)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@64) (= ($generated@@588 ($generated@@253 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@253 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@591)) $generated@@56))
 :pattern ( ($generated@@253 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@64)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@64) (= ($generated@@592 ($generated@@568 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@568 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@64) (= ($generated@@72 ($generated@@568 $generated@@595)) $generated@@57))
 :pattern ( ($generated@@568 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
(= ($generated@@455 $generated@@597 ($generated@@361 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@361 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) (= ($generated@@224 $generated@@598 ($generated@@483 $generated@@599 $generated@@600)) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@598) $generated@@601))) (and ($generated@@315 ($generated@@81 ($generated@@456 $generated@@598) $generated@@601) $generated@@600) ($generated@@315 $generated@@601 $generated@@599)))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@598) $generated@@601))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@598) $generated@@601))
))))
 :pattern ( ($generated@@224 $generated@@598 ($generated@@483 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) (= ($generated@@224 $generated@@602 ($generated@@491 $generated@@603 $generated@@604)) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@602) $generated@@605))) (and ($generated@@315 ($generated@@81 ($generated@@466 $generated@@602) $generated@@605) $generated@@604) ($generated@@315 $generated@@605 $generated@@603)))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@602) $generated@@605))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@602) $generated@@605))
))))
 :pattern ( ($generated@@224 $generated@@602 ($generated@@491 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@248) (= (type $generated@@609) $generated@@248)) (< ($generated@@606 $generated@@608) ($generated@@607 ($generated@@314 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@314 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@248) (= (type $generated@@611) $generated@@248)) (< ($generated@@606 $generated@@611) ($generated@@607 ($generated@@314 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@314 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@248) (= (type $generated@@613) $generated@@64)) (= (type $generated@@614) $generated@@64)) ($generated@@315 $generated@@612 ($generated@@483 $generated@@613 $generated@@614))) (and (= ($generated@@361 ($generated@@455 ($generated@@382 $generated@@248 $generated@@248) $generated@@612)) $generated@@612) ($generated@@224 ($generated@@455 ($generated@@382 $generated@@248 $generated@@248) $generated@@612) ($generated@@483 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@315 $generated@@612 ($generated@@483 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@248) (= (type $generated@@616) $generated@@64)) (= (type $generated@@617) $generated@@64)) ($generated@@315 $generated@@615 ($generated@@491 $generated@@616 $generated@@617))) (and (= ($generated@@361 ($generated@@455 ($generated@@400 $generated@@248 $generated@@248) $generated@@615)) $generated@@615) ($generated@@224 ($generated@@455 ($generated@@400 $generated@@248 $generated@@248) $generated@@615) ($generated@@491 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@315 $generated@@615 ($generated@@491 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@64) (= (type $generated@@619) $generated@@64)) (= (type $generated@@620) $generated@@248)) ($generated@@315 $generated@@620 ($generated@@238 $generated@@618 $generated@@619))) (and (= ($generated@@361 ($generated@@455 $generated@@239 $generated@@620)) $generated@@620) ($generated@@224 ($generated@@455 $generated@@239 $generated@@620) ($generated@@238 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@315 $generated@@620 ($generated@@238 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
 (not ($generated@@0 ($generated@@81 ($generated@@502 $generated@@622) $generated@@621))))
 :pattern ( (let (($generated@@622 (type $generated@@621)))
($generated@@81 ($generated@@502 $generated@@622) $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@69)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) $generated@@64)) (and (= ($generated@@72 ($generated@@238 $generated@@625 $generated@@626)) $generated@@62) (= ($generated@@623 ($generated@@238 $generated@@625 $generated@@626)) $generated@@63)))
 :pattern ( ($generated@@238 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@239) (= ($generated@@606 ($generated@@361 $generated@@627)) ($generated@@607 $generated@@627)))
 :pattern ( ($generated@@606 ($generated@@361 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@248) ($generated@@315 $generated@@628 ($generated@@75 0))) (and (= ($generated@@361 ($generated@@455 $generated@@2 $generated@@628)) $generated@@628) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@628) ($generated@@75 0))))
 :pattern ( ($generated@@315 $generated@@628 ($generated@@75 0)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@248) ($generated@@315 $generated@@629 ($generated@@75 1))) (and (= ($generated@@361 ($generated@@455 $generated@@132 $generated@@629)) $generated@@629) ($generated@@224 ($generated@@455 $generated@@132 $generated@@629) ($generated@@75 1))))
 :pattern ( ($generated@@315 $generated@@629 ($generated@@75 1)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@248) (= (type $generated@@631) $generated@@64)) ($generated@@315 $generated@@630 ($generated@@324 $generated@@631))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@630)) $generated@@630) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@630) ($generated@@324 $generated@@631))))
 :pattern ( ($generated@@315 $generated@@630 ($generated@@324 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@248) (= (type $generated@@633) $generated@@64)) ($generated@@315 $generated@@632 ($generated@@329 $generated@@633))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@632)) $generated@@632) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@632) ($generated@@329 $generated@@633))))
 :pattern ( ($generated@@315 $generated@@632 ($generated@@329 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@248) (= (type $generated@@635) $generated@@64)) ($generated@@315 $generated@@634 ($generated@@253 $generated@@635))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@2) $generated@@634)) $generated@@634) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@2) $generated@@634) ($generated@@253 $generated@@635))))
 :pattern ( ($generated@@315 $generated@@634 ($generated@@253 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@248) (= (type $generated@@637) $generated@@64)) ($generated@@315 $generated@@636 ($generated@@568 $generated@@637))) (and (= ($generated@@361 ($generated@@455 ($generated@@355 $generated@@248) $generated@@636)) $generated@@636) ($generated@@224 ($generated@@455 ($generated@@355 $generated@@248) $generated@@636) ($generated@@568 $generated@@637))))
 :pattern ( ($generated@@315 $generated@@636 ($generated@@568 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@248) ($generated@@315 $generated@@638 ($generated@@75 2))) (and (= ($generated@@361 ($generated@@455 $generated@@140 $generated@@638)) $generated@@638) ($generated@@224 ($generated@@455 $generated@@140 $generated@@638) ($generated@@75 2))))
 :pattern ( ($generated@@315 $generated@@638 ($generated@@75 2)))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@248) ($generated@@315 $generated@@639 ($generated@@75 3))) (and (= ($generated@@361 ($generated@@455 $generated@@148 $generated@@639)) $generated@@639) ($generated@@224 ($generated@@455 $generated@@148 $generated@@639) ($generated@@75 3))))
 :pattern ( ($generated@@315 $generated@@639 ($generated@@75 3)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@248) ($generated@@315 $generated@@640 ($generated@@75 4))) (and (= ($generated@@361 ($generated@@455 $generated@@156 $generated@@640)) $generated@@640) ($generated@@224 ($generated@@455 $generated@@156 $generated@@640) ($generated@@75 4))))
 :pattern ( ($generated@@315 $generated@@640 ($generated@@75 4)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@248) ($generated@@315 $generated@@641 ($generated@@75 7))) (and (= ($generated@@361 ($generated@@455 $generated@@164 $generated@@641)) $generated@@641) ($generated@@224 ($generated@@455 $generated@@164 $generated@@641) ($generated@@75 7))))
 :pattern ( ($generated@@315 $generated@@641 ($generated@@75 7)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@248) ($generated@@315 $generated@@642 ($generated@@75 8))) (and (= ($generated@@361 ($generated@@455 $generated@@172 $generated@@642)) $generated@@642) ($generated@@224 ($generated@@455 $generated@@172 $generated@@642) ($generated@@75 8))))
 :pattern ( ($generated@@315 $generated@@642 ($generated@@75 8)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@248) ($generated@@315 $generated@@643 ($generated@@75 15))) (and (= ($generated@@361 ($generated@@455 $generated@@180 $generated@@643)) $generated@@643) ($generated@@224 ($generated@@455 $generated@@180 $generated@@643) ($generated@@75 15))))
 :pattern ( ($generated@@315 $generated@@643 ($generated@@75 15)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@248) ($generated@@315 $generated@@644 ($generated@@75 16))) (and (= ($generated@@361 ($generated@@455 $generated@@188 $generated@@644)) $generated@@644) ($generated@@224 ($generated@@455 $generated@@188 $generated@@644) ($generated@@75 16))))
 :pattern ( ($generated@@315 $generated@@644 ($generated@@75 16)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@248) ($generated@@315 $generated@@645 ($generated@@75 32))) (and (= ($generated@@361 ($generated@@455 $generated@@196 $generated@@645)) $generated@@645) ($generated@@224 ($generated@@455 $generated@@196 $generated@@645) ($generated@@75 32))))
 :pattern ( ($generated@@315 $generated@@645 ($generated@@75 32)))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@248) ($generated@@315 $generated@@646 ($generated@@75 53))) (and (= ($generated@@361 ($generated@@455 $generated@@204 $generated@@646)) $generated@@646) ($generated@@224 ($generated@@455 $generated@@204 $generated@@646) ($generated@@75 53))))
 :pattern ( ($generated@@315 $generated@@646 ($generated@@75 53)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@248) ($generated@@315 $generated@@647 ($generated@@75 100))) (and (= ($generated@@361 ($generated@@455 $generated@@212 $generated@@647)) $generated@@647) ($generated@@224 ($generated@@455 $generated@@212 $generated@@647) ($generated@@75 100))))
 :pattern ( ($generated@@315 $generated@@647 ($generated@@75 100)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@649) $generated@@64)) (= (type $generated@@650) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@648 ($generated@@253 $generated@@649) $generated@@650) (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@648 $generated@@651)))) ($generated@@341 $generated@@651 $generated@@649 $generated@@650))
 :pattern ( ($generated@@81 $generated@@648 $generated@@651))
))))
 :pattern ( ($generated@@74 $generated@@648 ($generated@@253 $generated@@649) $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@239) (= (type $generated@@653) $generated@@64)) (= (type $generated@@654) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@340 $generated@@654) (and ($generated@@237 $generated@@652) (exists (($generated@@655 T@U) ) (!  (and (= (type $generated@@655) $generated@@64) ($generated@@74 $generated@@652 ($generated@@238 $generated@@653 $generated@@655) $generated@@654))
 :pattern ( ($generated@@74 $generated@@652 ($generated@@238 $generated@@653 $generated@@655) $generated@@654))
))))) ($generated@@341 ($generated@@246 $generated@@652) $generated@@653 $generated@@654))
 :pattern ( ($generated@@341 ($generated@@246 $generated@@652) $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@239) (= (type $generated@@657) $generated@@64)) (= (type $generated@@658) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@340 $generated@@658) (and ($generated@@237 $generated@@656) (exists (($generated@@659 T@U) ) (!  (and (= (type $generated@@659) $generated@@64) ($generated@@74 $generated@@656 ($generated@@238 $generated@@659 $generated@@657) $generated@@658))
 :pattern ( ($generated@@74 $generated@@656 ($generated@@238 $generated@@659 $generated@@657) $generated@@658))
))))) ($generated@@341 ($generated@@247 $generated@@656) $generated@@657 $generated@@658))
 :pattern ( ($generated@@341 ($generated@@247 $generated@@656) $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@248) (= (type $generated@@661) $generated@@248)) (= ($generated@@314 ($generated@@336 $generated@@660) ($generated@@336 $generated@@661)) ($generated@@336 ($generated@@314 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@314 ($generated@@336 $generated@@660) ($generated@@336 $generated@@661)))
)))
(assert (forall (($generated@@662 Int) ) (! (= ($generated@@361 ($generated@@8 ($generated@@334 $generated@@662))) ($generated@@336 ($generated@@361 ($generated@@8 $generated@@662))))
 :pattern ( ($generated@@361 ($generated@@8 ($generated@@334 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@361 ($generated@@336 $generated@@663)) ($generated@@336 ($generated@@361 $generated@@663)))
 :pattern ( ($generated@@361 ($generated@@336 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@356 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@355 $generated@@665)) (= ($generated@@354 $generated@@664) 0)) (= $generated@@664 ($generated@@353 $generated@@665))))
 :pattern ( ($generated@@354 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@76 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@374 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@374 $generated@@666) ($generated ($generated@@81 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@374 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@671) $generated@@2)) ($generated@@74 $generated@@671 $generated@@46 $generated@@670))
 :pattern ( ($generated@@74 $generated@@671 $generated@@46 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@673) $generated@@3)) ($generated@@74 $generated@@673 $generated@@47 $generated@@672))
 :pattern ( ($generated@@74 $generated@@673 $generated@@47 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@675) $generated@@4)) ($generated@@74 $generated@@675 $generated@@44 $generated@@674))
 :pattern ( ($generated@@74 $generated@@675 $generated@@44 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@677) $generated@@526)) ($generated@@74 $generated@@677 $generated@@45 $generated@@676))
 :pattern ( ($generated@@74 $generated@@677 $generated@@45 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@679) $generated@@248)) ($generated@@74 $generated@@679 $generated@@48 $generated@@678))
 :pattern ( ($generated@@74 $generated@@679 $generated@@48 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@355 $generated@@248)) (= (type $generated@@681) $generated@@64)) (= ($generated@@224 $generated@@680 ($generated@@568 $generated@@681)) (forall (($generated@@682 Int) ) (!  (=> (and (<= 0 $generated@@682) (< $generated@@682 ($generated@@354 $generated@@680))) ($generated@@315 ($generated@@569 $generated@@680 $generated@@682) $generated@@681))
 :pattern ( ($generated@@569 $generated@@680 $generated@@682))
))))
 :pattern ( ($generated@@224 $generated@@680 ($generated@@568 $generated@@681)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 Int) ) (!  (=> (= (type $generated@@684) ($generated@@355 $generated@@248)) (=> (and (<= 0 $generated@@685) (< $generated@@685 ($generated@@354 $generated@@684))) (< ($generated@@607 ($generated@@455 $generated@@239 ($generated@@569 $generated@@684 $generated@@685))) ($generated@@683 $generated@@684))))
 :pattern ( ($generated@@607 ($generated@@455 $generated@@239 ($generated@@569 $generated@@684 $generated@@685))))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@687) $generated@@64)) (= (type $generated@@688) $generated@@64)) ($generated@@224 $generated@@686 ($generated@@483 $generated@@687 $generated@@688))) (and (and ($generated@@224 ($generated@@380 $generated@@686) ($generated@@324 $generated@@687)) ($generated@@224 ($generated@@423 $generated@@686) ($generated@@324 $generated@@688))) ($generated@@224 ($generated@@454 $generated@@686) ($generated@@324 ($generated@@238 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@224 $generated@@686 ($generated@@483 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@690) $generated@@64)) (= (type $generated@@691) $generated@@64)) ($generated@@224 $generated@@689 ($generated@@491 $generated@@690 $generated@@691))) (and (and ($generated@@224 ($generated@@398 $generated@@689) ($generated@@329 $generated@@690)) ($generated@@224 ($generated@@434 $generated@@689) ($generated@@329 $generated@@691))) ($generated@@224 ($generated@@465 $generated@@689) ($generated@@329 ($generated@@238 $generated@@690 $generated@@691)))))
 :pattern ( ($generated@@224 $generated@@689 ($generated@@491 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@2) ($generated@@224 $generated@@692 $generated@@46))
 :pattern ( ($generated@@224 $generated@@692 $generated@@46))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@3) ($generated@@224 $generated@@693 $generated@@47))
 :pattern ( ($generated@@224 $generated@@693 $generated@@47))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@4) ($generated@@224 $generated@@694 $generated@@44))
 :pattern ( ($generated@@224 $generated@@694 $generated@@44))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@526) ($generated@@224 $generated@@695 $generated@@45))
 :pattern ( ($generated@@224 $generated@@695 $generated@@45))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@248) ($generated@@224 $generated@@696 $generated@@48))
 :pattern ( ($generated@@224 $generated@@696 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 (T@U) Bool)
(declare-fun $generated@@704 () Int)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () Int)
(assert  (and (and (and (= (type $generated@@697) ($generated@@260 $generated@@77 $generated@@4)) (= (type $generated@@698) $generated@@77)) (= (type $generated@@699) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@705) ($generated@@355 $generated@@248))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@707  (=> (and (= $generated@@697 ($generated@@259 $generated@@698 $generated@@699 $generated@@60 false)) (= $generated@@700 ($generated@@334 0))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@334 (- 0 2147483648)) $generated@@700) (< $generated@@700 2147483648))) (=> (and (<= ($generated@@334 (- 0 2147483648)) $generated@@700) (< $generated@@700 2147483648)) (=> (not (= $generated@@701 0)) (=> (and (= $generated@@702 ($generated@@334 (- 0 2147483647))) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@334 (- 0 2147483648)) $generated@@702) (< $generated@@702 2147483648)))))))))
(let (($generated@@708  (=> (and ($generated@@340 $generated@@699) ($generated@@703 $generated@@699)) (=> (and (and (and (<= ($generated@@334 (- 0 2147483648)) $generated@@704) (< $generated@@704 2147483648)) (and (<= ($generated@@334 (- 0 2147483648)) $generated@@701) (< $generated@@701 2147483648))) (and (and ($generated@@224 $generated@@705 ($generated@@568 $generated@@45)) ($generated@@74 $generated@@705 ($generated@@568 $generated@@45) $generated@@699)) (and (= 1 $generated@@706) (= (ControlFlow 0 4) 2)))) $generated@@707))))
$generated@@708)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 () T@T)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 () T@T)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@259 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U T@U) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@330 (Int) Int)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) Bool)
(declare-fun $generated@@337 (T@U T@U T@U) Bool)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@349 (T@T) T@U)
(declare-fun $generated@@350 (T@U) Int)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@362 (T@U) Int)
(declare-fun $generated@@363 (T@T) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@T) T@U)
(declare-fun $generated@@370 (T@T T@T) T@T)
(declare-fun $generated@@371 (T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@T) T@U)
(declare-fun $generated@@388 (T@T T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@T T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@471 (T@U T@U) T@U)
(declare-fun $generated@@479 (T@U T@U) T@U)
(declare-fun $generated@@487 (Int Int) Int)
(declare-fun $generated@@490 (T@T) T@U)
(declare-fun $generated@@514 () T@T)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@557 (T@U Int) T@U)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@611 (Int Int) Int)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@674 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@2) ($generated@@220 $generated@@221 ($generated@@75 0)))
 :pattern ( ($generated@@220 $generated@@221 ($generated@@75 0)))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (= (type $generated@@222) $generated@@132) ($generated@@220 $generated@@222 ($generated@@75 1)))
 :pattern ( ($generated@@220 $generated@@222 ($generated@@75 1)))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@140) ($generated@@220 $generated@@223 ($generated@@75 2)))
 :pattern ( ($generated@@220 $generated@@223 ($generated@@75 2)))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (= (type $generated@@224) $generated@@148) ($generated@@220 $generated@@224 ($generated@@75 3)))
 :pattern ( ($generated@@220 $generated@@224 ($generated@@75 3)))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@156) ($generated@@220 $generated@@225 ($generated@@75 4)))
 :pattern ( ($generated@@220 $generated@@225 ($generated@@75 4)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@164) ($generated@@220 $generated@@226 ($generated@@75 7)))
 :pattern ( ($generated@@220 $generated@@226 ($generated@@75 7)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@172) ($generated@@220 $generated@@227 ($generated@@75 8)))
 :pattern ( ($generated@@220 $generated@@227 ($generated@@75 8)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@180) ($generated@@220 $generated@@228 ($generated@@75 15)))
 :pattern ( ($generated@@220 $generated@@228 ($generated@@75 15)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@188) ($generated@@220 $generated@@229 ($generated@@75 16)))
 :pattern ( ($generated@@220 $generated@@229 ($generated@@75 16)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@196) ($generated@@220 $generated@@230 ($generated@@75 32)))
 :pattern ( ($generated@@220 $generated@@230 ($generated@@75 32)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@204) ($generated@@220 $generated@@231 ($generated@@75 53)))
 :pattern ( ($generated@@220 $generated@@231 ($generated@@75 53)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@212) ($generated@@220 $generated@@232 ($generated@@75 100)))
 :pattern ( ($generated@@220 $generated@@232 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@235) 25) (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@64) (= (type $generated@@239) $generated@@64)) (= (type $generated@@240) $generated@@235)) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239))) ($generated@@233 $generated@@240))
 :pattern ( ($generated@@233 $generated@@240) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239)))
)))
(assert  (and (and (= ($generated@@1 $generated@@244) 26) (forall (($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@242 $generated@@245))
))) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@246)) $generated@@244)
 :pattern ( ($generated@@243 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@235) (= (type $generated@@248) $generated@@235)) true) (= ($generated@@241 $generated@@247 $generated@@248)  (and (= ($generated@@242 $generated@@247) ($generated@@242 $generated@@248)) (= ($generated@@243 $generated@@247) ($generated@@243 $generated@@248)))))
 :pattern ( ($generated@@241 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@249 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@253) $generated@@64)) ($generated@@220 $generated@@252 ($generated@@249 $generated@@253))) ($generated@@250 $generated@@252))
 :pattern ( ($generated@@220 $generated@@252 ($generated@@249 $generated@@253)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@260 $generated@@261)) 27)) (forall (($generated@@262 T@T) ($generated@@263 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@262 $generated@@263)) $generated@@262)
 :pattern ( ($generated@@256 $generated@@262 $generated@@263))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@264 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@256 $generated@@264 $generated@@265))
))) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@258 (type $generated@@266))))
(= (type ($generated@@254 $generated@@266 $generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@254 $generated@@266 $generated@@267 $generated@@268))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(let (($generated@@275 (type $generated@@271)))
(= (type ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273)) ($generated@@256 $generated@@275 $generated@@274))))
 :pattern ( ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273))
))) (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@258 (type $generated@@276))))
 (=> (= (type $generated@@279) $generated@@280) (= ($generated@@254 ($generated@@259 $generated@@276 $generated@@277 $generated@@278 $generated@@279) $generated@@277 $generated@@278) $generated@@279)))
 :weight 0
))) (and (and (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (or (= $generated@@283 $generated@@285) (= ($generated@@254 ($generated@@259 $generated@@282 $generated@@283 $generated@@284 $generated@@281) $generated@@285 $generated@@286) ($generated@@254 $generated@@282 $generated@@285 $generated@@286)))
 :weight 0
)) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (or (= $generated@@290 $generated@@292) (= ($generated@@254 ($generated@@259 $generated@@288 $generated@@289 $generated@@290 $generated@@287) $generated@@291 $generated@@292) ($generated@@254 $generated@@288 $generated@@291 $generated@@292)))
 :weight 0
))) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (or true (= ($generated@@254 ($generated@@259 $generated@@294 $generated@@295 $generated@@296 $generated@@293) $generated@@297 $generated@@298) ($generated@@254 $generated@@294 $generated@@297 $generated@@298)))
 :weight 0
)))) (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Bool) ) (! (= (type ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302)) ($generated@@256 $generated@@77 $generated@@4))
 :pattern ( ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ($generated@@307 T@U) ($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@67 (type $generated@@308))))
 (=> (and (and (and (and (= (type $generated@@303) $generated@@77) (= (type $generated@@304) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@305) ($generated@@66 $generated@@4))) (= (type $generated@@307) $generated@@77)) (= (type $generated@@308) ($generated@@66 $generated@@309))) (= ($generated@@0 ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))  (=> (and (not (= $generated@@307 $generated@@303)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@304 $generated@@307) $generated@@305))) $generated@@306))))
 :pattern ( ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (= (type ($generated@@310 $generated@@312 $generated@@313)) $generated@@235)
 :pattern ( ($generated@@310 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@64) (= (type $generated@@315) $generated@@64)) (= (type $generated@@316) $generated@@244)) (= (type $generated@@317) $generated@@244)) (= ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315))  (and ($generated@@311 $generated@@316 $generated@@314) ($generated@@311 $generated@@317 $generated@@315))))
 :pattern ( ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@235) (= (type $generated@@319) $generated@@235)) (= ($generated@@241 $generated@@318 $generated@@319) (= $generated@@318 $generated@@319)))
 :pattern ( ($generated@@241 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@64)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@323) $generated@@64)) (= ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@244) ($generated@@0 ($generated@@81 $generated@@322 $generated@@324))) ($generated@@311 $generated@@324 $generated@@323))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
))))
 :pattern ( ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@64)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@328) $generated@@64)) (= ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@244) ($generated@@0 ($generated@@81 $generated@@327 $generated@@329))) ($generated@@311 $generated@@329 $generated@@328))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)))
)))
(assert (forall (($generated@@331 Int) ) (! (= ($generated@@330 $generated@@331) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
(= (type ($generated@@332 $generated@@333)) $generated@@334))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (= ($generated@@332 $generated@@335) $generated@@335)
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@338) $generated@@64) (= (type $generated@@339) $generated@@64)) (= (type $generated@@340) $generated@@244)) (= (type $generated@@341) $generated@@244)) (= (type $generated@@342) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@336 $generated@@342)) (= ($generated@@74 ($generated@@310 $generated@@340 $generated@@341) ($generated@@234 $generated@@338 $generated@@339) $generated@@342)  (and ($generated@@337 $generated@@340 $generated@@338 $generated@@342) ($generated@@337 $generated@@341 $generated@@339 $generated@@342))))
 :pattern ( ($generated@@74 ($generated@@310 $generated@@340 $generated@@341) ($generated@@234 $generated@@338 $generated@@339) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@68)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@235) (= ($generated@@233 $generated@@345) (= ($generated@@343 $generated@@345) $generated@@61)))
 :pattern ( ($generated@@233 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@235) ($generated@@233 $generated@@346)) (exists (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (and (and (= (type $generated@@347) $generated@@244) (= (type $generated@@348) $generated@@244)) (= $generated@@346 ($generated@@310 $generated@@347 $generated@@348)))
 :no-pattern (type $generated@@347)
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
)))
 :pattern ( ($generated@@233 $generated@@346))
)))
(assert  (and (and (forall (($generated@@353 T@T) ) (= ($generated@@1 ($generated@@351 $generated@@353)) 28)) (forall (($generated@@354 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@351 $generated@@354))
))) (forall (($generated@@355 T@T) ) (! (= (type ($generated@@349 $generated@@355)) ($generated@@351 $generated@@355))
 :pattern ( ($generated@@349 $generated@@355))
))))
(assert (forall (($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@356)) 0)
 :pattern ( ($generated@@349 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@244)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@64) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@337 ($generated@@357 $generated@@359) $generated@@360 $generated@@361) ($generated@@74 $generated@@359 $generated@@360 $generated@@361)))
 :pattern ( ($generated@@337 ($generated@@357 $generated@@359) $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@364 T@T) ) (! (= (type ($generated@@363 $generated@@364)) ($generated@@76 $generated@@364 $generated@@2))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@79 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@76 $generated@@366 $generated@@2)) (and (= (= ($generated@@362 $generated@@365) 0) (= $generated@@365 ($generated@@363 $generated@@366))) (=> (not (= ($generated@@362 $generated@@365) 0)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367))))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert  (and (and (and (and (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (= ($generated@@1 ($generated@@370 $generated@@373 $generated@@374)) 29)) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@371 ($generated@@370 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@370 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@372 ($generated@@370 $generated@@377 $generated@@378)) $generated@@378)
 :pattern ( ($generated@@370 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@371 (type $generated@@379))))
(= (type ($generated@@368 $generated@@379)) ($generated@@76 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@379))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= (type ($generated@@369 $generated@@381 $generated@@382)) ($generated@@370 $generated@@381 $generated@@382))
 :pattern ( ($generated@@369 $generated@@381 $generated@@382))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@T) ) (! (let (($generated@@385 (type $generated@@383)))
 (not ($generated@@0 ($generated@@81 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383))))
 :pattern ( (let (($generated@@385 (type $generated@@383)))
($generated@@81 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383)))
)))
(assert  (and (and (and (and (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (= ($generated@@1 ($generated@@388 $generated@@391 $generated@@392)) 30)) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@389 ($generated@@388 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@388 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@390 ($generated@@388 $generated@@395 $generated@@396)) $generated@@396)
 :pattern ( ($generated@@388 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@389 (type $generated@@397))))
(= (type ($generated@@386 $generated@@397)) ($generated@@76 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@397))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= (type ($generated@@387 $generated@@399 $generated@@400)) ($generated@@388 $generated@@399 $generated@@400))
 :pattern ( ($generated@@387 $generated@@399 $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@T) ) (! (let (($generated@@403 (type $generated@@401)))
 (not ($generated@@0 ($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401))))
 :pattern ( (let (($generated@@403 (type $generated@@401)))
($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401)))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@79 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@76 $generated@@405 $generated@@2)) (= ($generated@@250 $generated@@404) (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@405) (and (<= 0 ($generated ($generated@@81 $generated@@404 $generated@@406))) (<= ($generated ($generated@@81 $generated@@404 $generated@@406)) ($generated@@362 $generated@@404))))
 :pattern ( ($generated@@81 $generated@@404 $generated@@406))
)))))
 :pattern ( ($generated@@250 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@372 (type $generated@@407))))
(let (($generated@@409 ($generated@@371 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@370 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@369 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@368 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@372 (type $generated@@412))))
(= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@413 $generated@@4)))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@372 (type $generated@@414))))
(let (($generated@@416 ($generated@@371 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@370 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@369 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@415) ($generated@@0 ($generated@@81 ($generated@@411 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@411 $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@390 (type $generated@@418))))
(let (($generated@@420 ($generated@@389 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@388 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@387 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@386 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@390 (type $generated@@423))))
(= (type ($generated@@422 $generated@@423)) ($generated@@76 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@390 (type $generated@@425))))
(let (($generated@@427 ($generated@@389 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@388 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@387 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@426) ($generated@@0 ($generated@@81 ($generated@@422 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@422 $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@430) $generated@@64)) (= ($generated@@220 $generated@@429 ($generated@@249 $generated@@430)) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@429 $generated@@431)))) ($generated@@311 $generated@@431 $generated@@430))
 :pattern ( ($generated@@81 $generated@@429 $generated@@431))
))))
 :pattern ( ($generated@@220 $generated@@429 ($generated@@249 $generated@@430)))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@432 ($generated@@320 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@244) ($generated@@0 ($generated@@81 $generated@@432 $generated@@435))) ($generated@@337 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@81 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@74 $generated@@432 ($generated@@320 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (= (type $generated@@436) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@437) $generated@@64)) (= (type $generated@@438) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@436 ($generated@@325 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@244) ($generated@@0 ($generated@@81 $generated@@436 $generated@@439))) ($generated@@337 $generated@@439 $generated@@437 $generated@@438))
 :pattern ( ($generated@@81 $generated@@436 $generated@@439))
))))
 :pattern ( ($generated@@74 $generated@@436 ($generated@@325 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(= ($generated ($generated@@81 ($generated@@363 $generated@@441) $generated@@440)) 0))
 :pattern ( (let (($generated@@441 (type $generated@@440)))
($generated@@81 ($generated@@363 $generated@@441) $generated@@440)))
)))
(assert  (and (and (forall (($generated@@445 T@U) ) (! (= (type ($generated@@442 $generated@@445)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@442 $generated@@445))
)) (forall (($generated@@446 T@T) ($generated@@447 T@U) ) (! (= (type ($generated@@443 $generated@@446 $generated@@447)) $generated@@446)
 :pattern ( ($generated@@443 $generated@@446 $generated@@447))
))) (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@372 (type $generated@@448))))
(let (($generated@@450 ($generated@@371 (type $generated@@448))))
(= (type ($generated@@444 $generated@@448)) ($generated@@76 $generated@@450 $generated@@449))))
 :pattern ( ($generated@@444 $generated@@448))
))))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@452) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@442 $generated@@451) $generated@@452))  (and ($generated@@0 ($generated@@81 ($generated@@368 $generated@@451) ($generated@@242 ($generated@@443 $generated@@235 $generated@@452)))) (= ($generated@@81 ($generated@@444 $generated@@451) ($generated@@242 ($generated@@443 $generated@@235 $generated@@452))) ($generated@@243 ($generated@@443 $generated@@235 $generated@@452))))))
 :pattern ( ($generated@@81 ($generated@@442 $generated@@451) $generated@@452))
)))
(assert  (and (forall (($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@455)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@453 $generated@@455))
)) (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@390 (type $generated@@456))))
(let (($generated@@458 ($generated@@389 (type $generated@@456))))
(= (type ($generated@@454 $generated@@456)) ($generated@@76 $generated@@458 $generated@@457))))
 :pattern ( ($generated@@454 $generated@@456))
))))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@460) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@453 $generated@@459) $generated@@460))  (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@459) ($generated@@242 ($generated@@443 $generated@@235 $generated@@460)))) (= ($generated@@81 ($generated@@454 $generated@@459) ($generated@@242 ($generated@@443 $generated@@235 $generated@@460))) ($generated@@243 ($generated@@443 $generated@@235 $generated@@460))))))
 :pattern ( ($generated@@81 ($generated@@453 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@462)))
(let (($generated@@464 ($generated@@371 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@370 $generated@@464 $generated@@463)) (= ($generated@@0 ($generated@@81 ($generated@@411 $generated@@461) $generated@@462)) (exists (($generated@@465 T@U) ) (!  (and (= (type $generated@@465) $generated@@464) (and ($generated@@0 ($generated@@81 ($generated@@368 $generated@@461) $generated@@465)) (= $generated@@462 ($generated@@81 ($generated@@444 $generated@@461) $generated@@465))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@461) $generated@@465))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@461) $generated@@465))
))))))
 :pattern ( ($generated@@81 ($generated@@411 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 (type $generated@@467)))
(let (($generated@@469 ($generated@@389 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@388 $generated@@469 $generated@@468)) (= ($generated@@0 ($generated@@81 ($generated@@422 $generated@@466) $generated@@467)) (exists (($generated@@470 T@U) ) (!  (and (= (type $generated@@470) $generated@@469) (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@466) $generated@@470)) (= $generated@@467 ($generated@@81 ($generated@@454 $generated@@466) $generated@@470))))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@466) $generated@@470))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@466) $generated@@470))
))))))
 :pattern ( ($generated@@81 ($generated@@422 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (and (= (type $generated@@474) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@475) $generated@@64)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477) (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@474) $generated@@478))) (and ($generated@@337 ($generated@@81 ($generated@@444 $generated@@474) $generated@@478) $generated@@476 $generated@@477) ($generated@@337 $generated@@478 $generated@@475 $generated@@477)))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@474) $generated@@478))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@474) $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (= (type $generated@@482) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@482) $generated@@486))) (and ($generated@@337 ($generated@@81 ($generated@@454 $generated@@482) $generated@@486) $generated@@484 $generated@@485) ($generated@@337 $generated@@486 $generated@@483 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@482) $generated@@486))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@482) $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ($generated@@489 Int) ) (! (= ($generated@@487 $generated@@488 $generated@@489) (div $generated@@488 $generated@@489))
 :pattern ( ($generated@@487 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@T) ) (! (= (type ($generated@@490 $generated@@491)) ($generated@@76 $generated@@491 $generated@@4))
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@390 (type $generated@@492))))
(let (($generated@@494 ($generated@@389 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@388 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@387 $generated@@494 $generated@@493)) (= ($generated@@386 $generated@@492) ($generated@@490 $generated@@494))))))
 :pattern ( ($generated@@386 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@390 (type $generated@@495))))
(let (($generated@@497 ($generated@@389 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@388 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@387 $generated@@497 $generated@@496)) (= ($generated@@422 $generated@@495) ($generated@@490 $generated@@496))))))
 :pattern ( ($generated@@422 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@390 (type $generated@@498))))
(let (($generated@@500 ($generated@@389 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@388 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@387 $generated@@500 $generated@@499)) (= ($generated@@453 $generated@@498) ($generated@@490 $generated@@244))))))
 :pattern ( ($generated@@453 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@372 (type $generated@@501))))
(let (($generated@@503 ($generated@@371 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@370 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@369 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@244) (= (type $generated@@505) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@442 $generated@@501) ($generated@@357 ($generated@@310 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@442 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@390 (type $generated@@506))))
(let (($generated@@508 ($generated@@389 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@388 $generated@@508 $generated@@507)) (or (= $generated@@506 ($generated@@387 $generated@@508 $generated@@507)) (exists (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (and (and (= (type $generated@@509) $generated@@244) (= (type $generated@@510) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@453 $generated@@506) ($generated@@357 ($generated@@310 $generated@@509 $generated@@510)))))
 :no-pattern (type $generated@@509)
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@453 $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@244) ($generated@@311 $generated@@511 $generated@@46)) (and (= ($generated@@357 ($generated@@443 $generated@@2 $generated@@511)) $generated@@511) ($generated@@220 ($generated@@443 $generated@@2 $generated@@511) $generated@@46)))
 :pattern ( ($generated@@311 $generated@@511 $generated@@46))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@244) ($generated@@311 $generated@@512 $generated@@47)) (and (= ($generated@@357 ($generated@@443 $generated@@3 $generated@@512)) $generated@@512) ($generated@@220 ($generated@@443 $generated@@3 $generated@@512) $generated@@47)))
 :pattern ( ($generated@@311 $generated@@512 $generated@@47))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@244) ($generated@@311 $generated@@513 $generated@@44)) (and (= ($generated@@357 ($generated@@443 $generated@@4 $generated@@513)) $generated@@513) ($generated@@220 ($generated@@443 $generated@@4 $generated@@513) $generated@@44)))
 :pattern ( ($generated@@311 $generated@@513 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@514) 31))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@244) ($generated@@311 $generated@@515 $generated@@45)) (and (= ($generated@@357 ($generated@@443 $generated@@514 $generated@@515)) $generated@@515) ($generated@@220 ($generated@@443 $generated@@514 $generated@@515) $generated@@45)))
 :pattern ( ($generated@@311 $generated@@515 $generated@@45))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@311 ($generated@@357 $generated@@516) $generated@@517) ($generated@@220 $generated@@516 $generated@@517)))
 :pattern ( ($generated@@311 ($generated@@357 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@79 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@76 $generated@@519 $generated@@2)) (<= 0 ($generated@@362 $generated@@518))))
 :pattern ( ($generated@@362 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@352 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@351 $generated@@521)) (<= 0 ($generated@@350 $generated@@520))))
 :pattern ( ($generated@@350 $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= ($generated@@522 ($generated@@471 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@471 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@526 ($generated@@471 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@471 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@64) (= (type $generated@@531) $generated@@64)) (= ($generated@@72 ($generated@@471 $generated@@530 $generated@@531)) $generated@@58))
 :pattern ( ($generated@@471 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@64)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= ($generated@@532 ($generated@@479 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@479 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@64)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (= ($generated@@536 ($generated@@479 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@479 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@72 ($generated@@479 $generated@@540 $generated@@541)) $generated@@59))
 :pattern ( ($generated@@479 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@244) (= (type $generated@@543) $generated@@244)) (= ($generated@@343 ($generated@@310 $generated@@542 $generated@@543)) $generated@@61))
 :pattern ( ($generated@@310 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@234 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@234 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@234 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@234 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@244) (= (type $generated@@553) $generated@@244)) (= ($generated@@242 ($generated@@310 $generated@@552 $generated@@553)) $generated@@552))
 :pattern ( ($generated@@310 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@244) (= (type $generated@@555) $generated@@244)) (= ($generated@@243 ($generated@@310 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@310 $generated@@554 $generated@@555))
)))
(assert  (and (forall (($generated@@558 T@U) ) (! (= (type ($generated@@556 $generated@@558)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@558))
)) (forall (($generated@@559 T@U) ($generated@@560 Int) ) (! (let (($generated@@561 ($generated@@352 (type $generated@@559))))
(= (type ($generated@@557 $generated@@559 $generated@@560)) $generated@@561))
 :pattern ( ($generated@@557 $generated@@559 $generated@@560))
))))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@351 $generated@@244)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@562 ($generated@@556 $generated@@563) $generated@@564) (forall (($generated@@565 Int) ) (!  (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@350 $generated@@562))) ($generated@@337 ($generated@@557 $generated@@562 $generated@@565) $generated@@563 $generated@@564))
 :pattern ( ($generated@@557 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@556 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@566 ($generated@@75 $generated@@567)) $generated@@567)
 :pattern ( ($generated@@75 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@64) (= ($generated@@568 ($generated@@320 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@320 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@64) (= ($generated@@72 ($generated@@320 $generated@@571)) $generated@@54))
 :pattern ( ($generated@@320 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@64)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@64) (= ($generated@@572 ($generated@@325 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@325 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@64) (= ($generated@@72 ($generated@@325 $generated@@575)) $generated@@55))
 :pattern ( ($generated@@325 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@64)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@64) (= ($generated@@576 ($generated@@249 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@249 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@579)) $generated@@56))
 :pattern ( ($generated@@249 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@556 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@556 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@556 $generated@@583)) $generated@@57))
 :pattern ( ($generated@@556 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
(= ($generated@@443 $generated@@585 ($generated@@357 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@357 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) $generated@@64)) (= ($generated@@220 $generated@@586 ($generated@@471 $generated@@587 $generated@@588)) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@586) $generated@@589))) (and ($generated@@311 ($generated@@81 ($generated@@444 $generated@@586) $generated@@589) $generated@@588) ($generated@@311 $generated@@589 $generated@@587)))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@586) $generated@@589))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@586) $generated@@589))
))))
 :pattern ( ($generated@@220 $generated@@586 ($generated@@471 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) (= ($generated@@220 $generated@@590 ($generated@@479 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@590) $generated@@593))) (and ($generated@@311 ($generated@@81 ($generated@@454 $generated@@590) $generated@@593) $generated@@592) ($generated@@311 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@590) $generated@@593))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@220 $generated@@590 ($generated@@479 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@244) (= (type $generated@@597) $generated@@244)) (< ($generated@@594 $generated@@596) ($generated@@595 ($generated@@310 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@310 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@244) (= (type $generated@@599) $generated@@244)) (< ($generated@@594 $generated@@599) ($generated@@595 ($generated@@310 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@310 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@244) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@311 $generated@@600 ($generated@@471 $generated@@601 $generated@@602))) (and (= ($generated@@357 ($generated@@443 ($generated@@370 $generated@@244 $generated@@244) $generated@@600)) $generated@@600) ($generated@@220 ($generated@@443 ($generated@@370 $generated@@244 $generated@@244) $generated@@600) ($generated@@471 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@311 $generated@@600 ($generated@@471 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@244) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) ($generated@@311 $generated@@603 ($generated@@479 $generated@@604 $generated@@605))) (and (= ($generated@@357 ($generated@@443 ($generated@@388 $generated@@244 $generated@@244) $generated@@603)) $generated@@603) ($generated@@220 ($generated@@443 ($generated@@388 $generated@@244 $generated@@244) $generated@@603) ($generated@@479 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@311 $generated@@603 ($generated@@479 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@64) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@244)) ($generated@@311 $generated@@608 ($generated@@234 $generated@@606 $generated@@607))) (and (= ($generated@@357 ($generated@@443 $generated@@235 $generated@@608)) $generated@@608) ($generated@@220 ($generated@@443 $generated@@235 $generated@@608) ($generated@@234 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@311 $generated@@608 ($generated@@234 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (not ($generated@@0 ($generated@@81 ($generated@@490 $generated@@610) $generated@@609))))
 :pattern ( (let (($generated@@610 (type $generated@@609)))
($generated@@81 ($generated@@490 $generated@@610) $generated@@609)))
)))
(assert (forall (($generated@@612 Int) ($generated@@613 Int) ) (! (= ($generated@@611 $generated@@612 $generated@@613) (mod $generated@@612 $generated@@613))
 :pattern ( ($generated@@611 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@69)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@64) (= (type $generated@@617) $generated@@64)) (and (= ($generated@@72 ($generated@@234 $generated@@616 $generated@@617)) $generated@@62) (= ($generated@@614 ($generated@@234 $generated@@616 $generated@@617)) $generated@@63)))
 :pattern ( ($generated@@234 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@235) (= ($generated@@594 ($generated@@357 $generated@@618)) ($generated@@595 $generated@@618)))
 :pattern ( ($generated@@594 ($generated@@357 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@244) ($generated@@311 $generated@@619 ($generated@@75 0))) (and (= ($generated@@357 ($generated@@443 $generated@@2 $generated@@619)) $generated@@619) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@619) ($generated@@75 0))))
 :pattern ( ($generated@@311 $generated@@619 ($generated@@75 0)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@244) ($generated@@311 $generated@@620 ($generated@@75 1))) (and (= ($generated@@357 ($generated@@443 $generated@@132 $generated@@620)) $generated@@620) ($generated@@220 ($generated@@443 $generated@@132 $generated@@620) ($generated@@75 1))))
 :pattern ( ($generated@@311 $generated@@620 ($generated@@75 1)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@244) (= (type $generated@@622) $generated@@64)) ($generated@@311 $generated@@621 ($generated@@320 $generated@@622))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@621)) $generated@@621) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@621) ($generated@@320 $generated@@622))))
 :pattern ( ($generated@@311 $generated@@621 ($generated@@320 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@244) (= (type $generated@@624) $generated@@64)) ($generated@@311 $generated@@623 ($generated@@325 $generated@@624))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@623)) $generated@@623) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@623) ($generated@@325 $generated@@624))))
 :pattern ( ($generated@@311 $generated@@623 ($generated@@325 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@244) (= (type $generated@@626) $generated@@64)) ($generated@@311 $generated@@625 ($generated@@249 $generated@@626))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@2) $generated@@625)) $generated@@625) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@2) $generated@@625) ($generated@@249 $generated@@626))))
 :pattern ( ($generated@@311 $generated@@625 ($generated@@249 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@244) (= (type $generated@@628) $generated@@64)) ($generated@@311 $generated@@627 ($generated@@556 $generated@@628))) (and (= ($generated@@357 ($generated@@443 ($generated@@351 $generated@@244) $generated@@627)) $generated@@627) ($generated@@220 ($generated@@443 ($generated@@351 $generated@@244) $generated@@627) ($generated@@556 $generated@@628))))
 :pattern ( ($generated@@311 $generated@@627 ($generated@@556 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@244) ($generated@@311 $generated@@629 ($generated@@75 2))) (and (= ($generated@@357 ($generated@@443 $generated@@140 $generated@@629)) $generated@@629) ($generated@@220 ($generated@@443 $generated@@140 $generated@@629) ($generated@@75 2))))
 :pattern ( ($generated@@311 $generated@@629 ($generated@@75 2)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@244) ($generated@@311 $generated@@630 ($generated@@75 3))) (and (= ($generated@@357 ($generated@@443 $generated@@148 $generated@@630)) $generated@@630) ($generated@@220 ($generated@@443 $generated@@148 $generated@@630) ($generated@@75 3))))
 :pattern ( ($generated@@311 $generated@@630 ($generated@@75 3)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@244) ($generated@@311 $generated@@631 ($generated@@75 4))) (and (= ($generated@@357 ($generated@@443 $generated@@156 $generated@@631)) $generated@@631) ($generated@@220 ($generated@@443 $generated@@156 $generated@@631) ($generated@@75 4))))
 :pattern ( ($generated@@311 $generated@@631 ($generated@@75 4)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@244) ($generated@@311 $generated@@632 ($generated@@75 7))) (and (= ($generated@@357 ($generated@@443 $generated@@164 $generated@@632)) $generated@@632) ($generated@@220 ($generated@@443 $generated@@164 $generated@@632) ($generated@@75 7))))
 :pattern ( ($generated@@311 $generated@@632 ($generated@@75 7)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@244) ($generated@@311 $generated@@633 ($generated@@75 8))) (and (= ($generated@@357 ($generated@@443 $generated@@172 $generated@@633)) $generated@@633) ($generated@@220 ($generated@@443 $generated@@172 $generated@@633) ($generated@@75 8))))
 :pattern ( ($generated@@311 $generated@@633 ($generated@@75 8)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@244) ($generated@@311 $generated@@634 ($generated@@75 15))) (and (= ($generated@@357 ($generated@@443 $generated@@180 $generated@@634)) $generated@@634) ($generated@@220 ($generated@@443 $generated@@180 $generated@@634) ($generated@@75 15))))
 :pattern ( ($generated@@311 $generated@@634 ($generated@@75 15)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@244) ($generated@@311 $generated@@635 ($generated@@75 16))) (and (= ($generated@@357 ($generated@@443 $generated@@188 $generated@@635)) $generated@@635) ($generated@@220 ($generated@@443 $generated@@188 $generated@@635) ($generated@@75 16))))
 :pattern ( ($generated@@311 $generated@@635 ($generated@@75 16)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@244) ($generated@@311 $generated@@636 ($generated@@75 32))) (and (= ($generated@@357 ($generated@@443 $generated@@196 $generated@@636)) $generated@@636) ($generated@@220 ($generated@@443 $generated@@196 $generated@@636) ($generated@@75 32))))
 :pattern ( ($generated@@311 $generated@@636 ($generated@@75 32)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@244) ($generated@@311 $generated@@637 ($generated@@75 53))) (and (= ($generated@@357 ($generated@@443 $generated@@204 $generated@@637)) $generated@@637) ($generated@@220 ($generated@@443 $generated@@204 $generated@@637) ($generated@@75 53))))
 :pattern ( ($generated@@311 $generated@@637 ($generated@@75 53)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@244) ($generated@@311 $generated@@638 ($generated@@75 100))) (and (= ($generated@@357 ($generated@@443 $generated@@212 $generated@@638)) $generated@@638) ($generated@@220 ($generated@@443 $generated@@212 $generated@@638) ($generated@@75 100))))
 :pattern ( ($generated@@311 $generated@@638 ($generated@@75 100)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@639) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@640) $generated@@64)) (= (type $generated@@641) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@639 ($generated@@249 $generated@@640) $generated@@641) (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@639 $generated@@642)))) ($generated@@337 $generated@@642 $generated@@640 $generated@@641))
 :pattern ( ($generated@@81 $generated@@639 $generated@@642))
))))
 :pattern ( ($generated@@74 $generated@@639 ($generated@@249 $generated@@640) $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@235) (= (type $generated@@644) $generated@@64)) (= (type $generated@@645) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@336 $generated@@645) (and ($generated@@233 $generated@@643) (exists (($generated@@646 T@U) ) (!  (and (= (type $generated@@646) $generated@@64) ($generated@@74 $generated@@643 ($generated@@234 $generated@@644 $generated@@646) $generated@@645))
 :pattern ( ($generated@@74 $generated@@643 ($generated@@234 $generated@@644 $generated@@646) $generated@@645))
))))) ($generated@@337 ($generated@@242 $generated@@643) $generated@@644 $generated@@645))
 :pattern ( ($generated@@337 ($generated@@242 $generated@@643) $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@235) (= (type $generated@@648) $generated@@64)) (= (type $generated@@649) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@336 $generated@@649) (and ($generated@@233 $generated@@647) (exists (($generated@@650 T@U) ) (!  (and (= (type $generated@@650) $generated@@64) ($generated@@74 $generated@@647 ($generated@@234 $generated@@650 $generated@@648) $generated@@649))
 :pattern ( ($generated@@74 $generated@@647 ($generated@@234 $generated@@650 $generated@@648) $generated@@649))
))))) ($generated@@337 ($generated@@243 $generated@@647) $generated@@648 $generated@@649))
 :pattern ( ($generated@@337 ($generated@@243 $generated@@647) $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@244) (= (type $generated@@652) $generated@@244)) (= ($generated@@310 ($generated@@332 $generated@@651) ($generated@@332 $generated@@652)) ($generated@@332 ($generated@@310 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@310 ($generated@@332 $generated@@651) ($generated@@332 $generated@@652)))
)))
(assert (forall (($generated@@653 Int) ) (! (= ($generated@@357 ($generated@@8 ($generated@@330 $generated@@653))) ($generated@@332 ($generated@@357 ($generated@@8 $generated@@653))))
 :pattern ( ($generated@@357 ($generated@@8 ($generated@@330 $generated@@653))))
)))
(assert (forall (($generated@@654 T@U) ) (! (= ($generated@@357 ($generated@@332 $generated@@654)) ($generated@@332 ($generated@@357 $generated@@654)))
 :pattern ( ($generated@@357 ($generated@@332 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@352 (type $generated@@655))))
 (=> (and (= (type $generated@@655) ($generated@@351 $generated@@656)) (= ($generated@@350 $generated@@655) 0)) (= $generated@@655 ($generated@@349 $generated@@656))))
 :pattern ( ($generated@@350 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@658)))
 (=> (and (and (= (type $generated@@657) ($generated@@76 $generated@@660 $generated@@2)) (= (type $generated@@659) $generated@@2)) (<= 0 ($generated $generated@@659))) (= ($generated@@362 ($generated@@82 $generated@@657 $generated@@658 $generated@@659)) (+ (- ($generated@@362 $generated@@657) ($generated ($generated@@81 $generated@@657 $generated@@658))) ($generated $generated@@659)))))
 :pattern ( ($generated@@362 ($generated@@82 $generated@@657 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@662) $generated@@2)) ($generated@@74 $generated@@662 $generated@@46 $generated@@661))
 :pattern ( ($generated@@74 $generated@@662 $generated@@46 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@664) $generated@@3)) ($generated@@74 $generated@@664 $generated@@47 $generated@@663))
 :pattern ( ($generated@@74 $generated@@664 $generated@@47 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@666) $generated@@4)) ($generated@@74 $generated@@666 $generated@@44 $generated@@665))
 :pattern ( ($generated@@74 $generated@@666 $generated@@44 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@668) $generated@@514)) ($generated@@74 $generated@@668 $generated@@45 $generated@@667))
 :pattern ( ($generated@@74 $generated@@668 $generated@@45 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@670) $generated@@244)) ($generated@@74 $generated@@670 $generated@@48 $generated@@669))
 :pattern ( ($generated@@74 $generated@@670 $generated@@48 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@351 $generated@@244)) (= (type $generated@@672) $generated@@64)) (= ($generated@@220 $generated@@671 ($generated@@556 $generated@@672)) (forall (($generated@@673 Int) ) (!  (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@350 $generated@@671))) ($generated@@311 ($generated@@557 $generated@@671 $generated@@673) $generated@@672))
 :pattern ( ($generated@@557 $generated@@671 $generated@@673))
))))
 :pattern ( ($generated@@220 $generated@@671 ($generated@@556 $generated@@672)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 Int) ) (!  (=> (= (type $generated@@675) ($generated@@351 $generated@@244)) (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@350 $generated@@675))) (< ($generated@@595 ($generated@@443 $generated@@235 ($generated@@557 $generated@@675 $generated@@676))) ($generated@@674 $generated@@675))))
 :pattern ( ($generated@@595 ($generated@@443 $generated@@235 ($generated@@557 $generated@@675 $generated@@676))))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@678) $generated@@64)) (= (type $generated@@679) $generated@@64)) ($generated@@220 $generated@@677 ($generated@@471 $generated@@678 $generated@@679))) (and (and ($generated@@220 ($generated@@368 $generated@@677) ($generated@@320 $generated@@678)) ($generated@@220 ($generated@@411 $generated@@677) ($generated@@320 $generated@@679))) ($generated@@220 ($generated@@442 $generated@@677) ($generated@@320 ($generated@@234 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@220 $generated@@677 ($generated@@471 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@681) $generated@@64)) (= (type $generated@@682) $generated@@64)) ($generated@@220 $generated@@680 ($generated@@479 $generated@@681 $generated@@682))) (and (and ($generated@@220 ($generated@@386 $generated@@680) ($generated@@325 $generated@@681)) ($generated@@220 ($generated@@422 $generated@@680) ($generated@@325 $generated@@682))) ($generated@@220 ($generated@@453 $generated@@680) ($generated@@325 ($generated@@234 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@220 $generated@@680 ($generated@@479 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@2) ($generated@@220 $generated@@683 $generated@@46))
 :pattern ( ($generated@@220 $generated@@683 $generated@@46))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@3) ($generated@@220 $generated@@684 $generated@@47))
 :pattern ( ($generated@@220 $generated@@684 $generated@@47))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@4) ($generated@@220 $generated@@685 $generated@@44))
 :pattern ( ($generated@@220 $generated@@685 $generated@@44))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@514) ($generated@@220 $generated@@686 $generated@@45))
 :pattern ( ($generated@@220 $generated@@686 $generated@@45))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@244) ($generated@@220 $generated@@687 $generated@@48))
 :pattern ( ($generated@@220 $generated@@687 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 (T@U) Bool)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(assert  (and (and (and (= (type $generated@@688) ($generated@@256 $generated@@77 $generated@@4)) (= (type $generated@@689) $generated@@77)) (= (type $generated@@690) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@696) ($generated@@351 $generated@@244))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@698  (=> (= $generated@@688 ($generated@@255 $generated@@689 $generated@@690 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@691 0))) (=> (= $generated@@692 ($generated@@487 $generated@@693 $generated@@691)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@330 (- 0 2147483648)) $generated@@692) (< $generated@@692 2147483648))) (=> (and (<= ($generated@@330 (- 0 2147483648)) $generated@@692) (< $generated@@692 2147483648)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@691 0))) (=> (and (= $generated@@694 ($generated@@611 $generated@@693 $generated@@691)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@330 (- 0 2147483648)) $generated@@694) (< $generated@@694 2147483648)))))))))))
(let (($generated@@699  (=> (and (and ($generated@@336 $generated@@690) ($generated@@695 $generated@@690)) (and (<= ($generated@@330 (- 0 2147483648)) $generated@@693) (< $generated@@693 2147483648))) (=> (and (and (and (<= ($generated@@330 (- 0 2147483648)) $generated@@691) (< $generated@@691 2147483648)) (and ($generated@@220 $generated@@696 ($generated@@556 $generated@@45)) ($generated@@74 $generated@@696 ($generated@@556 $generated@@45) $generated@@690))) (and (and (= 1 $generated@@697) (not (= $generated@@691 0))) (and (<= ($generated@@330 (- 0 2147483647)) $generated@@693) (= (ControlFlow 0 6) 2)))) $generated@@698))))
$generated@@699)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 () T@T)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 () T@T)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@260 (T@T T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@334 (Int) Int)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@341 (T@U T@U T@U) Bool)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@354 (T@U) Int)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@374 (T@U) Int)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@T T@T) T@U)
(declare-fun $generated@@382 (T@T T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@T) T@U)
(declare-fun $generated@@400 (T@T T@T) T@T)
(declare-fun $generated@@401 (T@T) T@T)
(declare-fun $generated@@402 (T@T) T@T)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@T T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@483 (T@U T@U) T@U)
(declare-fun $generated@@491 (T@U T@U) T@U)
(declare-fun $generated@@502 (T@T) T@U)
(declare-fun $generated@@526 () T@T)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@569 (T@U Int) T@U)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@683 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@220 $generated@@221 $generated@@222)) (forall (($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@221 $generated@@223) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60))
)))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@2) ($generated@@224 $generated@@225 ($generated@@75 0)))
 :pattern ( ($generated@@224 $generated@@225 ($generated@@75 0)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@132) ($generated@@224 $generated@@226 ($generated@@75 1)))
 :pattern ( ($generated@@224 $generated@@226 ($generated@@75 1)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@140) ($generated@@224 $generated@@227 ($generated@@75 2)))
 :pattern ( ($generated@@224 $generated@@227 ($generated@@75 2)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@148) ($generated@@224 $generated@@228 ($generated@@75 3)))
 :pattern ( ($generated@@224 $generated@@228 ($generated@@75 3)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@156) ($generated@@224 $generated@@229 ($generated@@75 4)))
 :pattern ( ($generated@@224 $generated@@229 ($generated@@75 4)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@164) ($generated@@224 $generated@@230 ($generated@@75 7)))
 :pattern ( ($generated@@224 $generated@@230 ($generated@@75 7)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@172) ($generated@@224 $generated@@231 ($generated@@75 8)))
 :pattern ( ($generated@@224 $generated@@231 ($generated@@75 8)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@180) ($generated@@224 $generated@@232 ($generated@@75 15)))
 :pattern ( ($generated@@224 $generated@@232 ($generated@@75 15)))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (= (type $generated@@233) $generated@@188) ($generated@@224 $generated@@233 ($generated@@75 16)))
 :pattern ( ($generated@@224 $generated@@233 ($generated@@75 16)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (= (type $generated@@234) $generated@@196) ($generated@@224 $generated@@234 ($generated@@75 32)))
 :pattern ( ($generated@@224 $generated@@234 ($generated@@75 32)))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@204) ($generated@@224 $generated@@235 ($generated@@75 53)))
 :pattern ( ($generated@@224 $generated@@235 ($generated@@75 53)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@212) ($generated@@224 $generated@@236 ($generated@@75 100)))
 :pattern ( ($generated@@224 $generated@@236 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@239) 25) (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@64) (= (type $generated@@243) $generated@@64)) (= (type $generated@@244) $generated@@239)) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243))) ($generated@@237 $generated@@244))
 :pattern ( ($generated@@237 $generated@@244) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243)))
)))
(assert  (and (and (= ($generated@@1 $generated@@248) 26) (forall (($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@246 $generated@@249))
))) (forall (($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@250)) $generated@@248)
 :pattern ( ($generated@@247 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@251) $generated@@239) (= (type $generated@@252) $generated@@239)) true) (= ($generated@@245 $generated@@251 $generated@@252)  (and (= ($generated@@246 $generated@@251) ($generated@@246 $generated@@252)) (= ($generated@@247 $generated@@251) ($generated@@247 $generated@@252)))))
 :pattern ( ($generated@@245 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@253 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@257) $generated@@64)) ($generated@@224 $generated@@256 ($generated@@253 $generated@@257))) ($generated@@254 $generated@@256))
 :pattern ( ($generated@@224 $generated@@256 ($generated@@253 $generated@@257)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@264 $generated@@265)) 27)) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@260 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@262 ($generated@@260 $generated@@268 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@260 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@262 (type $generated@@270))))
(= (type ($generated@@258 $generated@@270 $generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@258 $generated@@270 $generated@@271 $generated@@272))
))) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(let (($generated@@279 (type $generated@@275)))
(= (type ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277)) ($generated@@260 $generated@@279 $generated@@278))))
 :pattern ( ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277))
))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@262 (type $generated@@280))))
 (=> (= (type $generated@@283) $generated@@284) (= ($generated@@258 ($generated@@263 $generated@@280 $generated@@281 $generated@@282 $generated@@283) $generated@@281 $generated@@282) $generated@@283)))
 :weight 0
))) (and (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (or (= $generated@@287 $generated@@289) (= ($generated@@258 ($generated@@263 $generated@@286 $generated@@287 $generated@@288 $generated@@285) $generated@@289 $generated@@290) ($generated@@258 $generated@@286 $generated@@289 $generated@@290)))
 :weight 0
)) (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (or (= $generated@@294 $generated@@296) (= ($generated@@258 ($generated@@263 $generated@@292 $generated@@293 $generated@@294 $generated@@291) $generated@@295 $generated@@296) ($generated@@258 $generated@@292 $generated@@295 $generated@@296)))
 :weight 0
))) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (or true (= ($generated@@258 ($generated@@263 $generated@@298 $generated@@299 $generated@@300 $generated@@297) $generated@@301 $generated@@302) ($generated@@258 $generated@@298 $generated@@301 $generated@@302)))
 :weight 0
)))) (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ) (! (= (type ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306)) ($generated@@260 $generated@@77 $generated@@4))
 :pattern ( ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 Bool) ($generated@@311 T@U) ($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@67 (type $generated@@312))))
 (=> (and (and (and (and (= (type $generated@@307) $generated@@77) (= (type $generated@@308) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@309) ($generated@@66 $generated@@4))) (= (type $generated@@311) $generated@@77)) (= (type $generated@@312) ($generated@@66 $generated@@313))) (= ($generated@@0 ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))  (=> (and (not (= $generated@@311 $generated@@307)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@308 $generated@@311) $generated@@309))) $generated@@310))))
 :pattern ( ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) $generated@@239)
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (= (type $generated@@318) $generated@@64) (= (type $generated@@319) $generated@@64)) (= (type $generated@@320) $generated@@248)) (= (type $generated@@321) $generated@@248)) (= ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319))  (and ($generated@@315 $generated@@320 $generated@@318) ($generated@@315 $generated@@321 $generated@@319))))
 :pattern ( ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@239) (= (type $generated@@323) $generated@@239)) (= ($generated@@245 $generated@@322 $generated@@323) (= $generated@@322 $generated@@323)))
 :pattern ( ($generated@@245 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@64)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@327) $generated@@64)) (= ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@248) ($generated@@0 ($generated@@81 $generated@@326 $generated@@328))) ($generated@@315 $generated@@328 $generated@@327))
 :pattern ( ($generated@@81 $generated@@326 $generated@@328))
))))
 :pattern ( ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@64)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@248) ($generated@@0 ($generated@@81 $generated@@331 $generated@@333))) ($generated@@315 $generated@@333 $generated@@332))
 :pattern ( ($generated@@81 $generated@@331 $generated@@333))
))))
 :pattern ( ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)))
)))
(assert (forall (($generated@@335 Int) ) (! (= ($generated@@334 $generated@@335) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 (type $generated@@337)))
(= (type ($generated@@336 $generated@@337)) $generated@@338))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= ($generated@@336 $generated@@339) $generated@@339)
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@342) $generated@@64) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) $generated@@248)) (= (type $generated@@345) $generated@@248)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@340 $generated@@346)) (= ($generated@@74 ($generated@@314 $generated@@344 $generated@@345) ($generated@@238 $generated@@342 $generated@@343) $generated@@346)  (and ($generated@@341 $generated@@344 $generated@@342 $generated@@346) ($generated@@341 $generated@@345 $generated@@343 $generated@@346))))
 :pattern ( ($generated@@74 ($generated@@314 $generated@@344 $generated@@345) ($generated@@238 $generated@@342 $generated@@343) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (= (type ($generated@@347 $generated@@348)) $generated@@68)
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@239) (= ($generated@@237 $generated@@349) (= ($generated@@347 $generated@@349) $generated@@61)))
 :pattern ( ($generated@@237 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@239) ($generated@@237 $generated@@350)) (exists (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (and (and (= (type $generated@@351) $generated@@248) (= (type $generated@@352) $generated@@248)) (= $generated@@350 ($generated@@314 $generated@@351 $generated@@352)))
 :no-pattern (type $generated@@351)
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
)))
 :pattern ( ($generated@@237 $generated@@350))
)))
(assert  (and (and (forall (($generated@@357 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@357)) 28)) (forall (($generated@@358 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@355 $generated@@358))
))) (forall (($generated@@359 T@T) ) (! (= (type ($generated@@353 $generated@@359)) ($generated@@355 $generated@@359))
 :pattern ( ($generated@@353 $generated@@359))
))))
(assert (forall (($generated@@360 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@360)) 0)
 :pattern ( ($generated@@353 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@248)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@64) (= (type $generated@@365) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@341 ($generated@@361 $generated@@363) $generated@@364 $generated@@365) ($generated@@74 $generated@@363 $generated@@364 $generated@@365)))
 :pattern ( ($generated@@341 ($generated@@361 $generated@@363) $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@368) $generated@@248)) (= (type $generated@@369) $generated@@64)) ($generated@@220 $generated@@366 $generated@@367)) ($generated@@341 $generated@@368 $generated@@369 $generated@@366)) ($generated@@341 $generated@@368 $generated@@369 $generated@@367))
 :pattern ( ($generated@@220 $generated@@366 $generated@@367) ($generated@@341 $generated@@368 $generated@@369 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@371) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@373) $generated@@64)) ($generated@@220 $generated@@370 $generated@@371)) ($generated@@74 $generated@@372 $generated@@373 $generated@@370)) ($generated@@74 $generated@@372 $generated@@373 $generated@@371))
 :pattern ( ($generated@@220 $generated@@370 $generated@@371) ($generated@@74 $generated@@372 $generated@@373 $generated@@370))
)))
(assert (forall (($generated@@376 T@T) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@76 $generated@@376 $generated@@2))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@79 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@76 $generated@@378 $generated@@2)) (and (= (= ($generated@@374 $generated@@377) 0) (= $generated@@377 ($generated@@375 $generated@@378))) (=> (not (= ($generated@@374 $generated@@377) 0)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (< 0 ($generated ($generated@@81 $generated@@377 $generated@@379))))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert  (and (and (and (and (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (= ($generated@@1 ($generated@@382 $generated@@385 $generated@@386)) 29)) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= ($generated@@383 ($generated@@382 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@382 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= ($generated@@384 ($generated@@382 $generated@@389 $generated@@390)) $generated@@390)
 :pattern ( ($generated@@382 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@383 (type $generated@@391))))
(= (type ($generated@@380 $generated@@391)) ($generated@@76 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@391))
))) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= (type ($generated@@381 $generated@@393 $generated@@394)) ($generated@@382 $generated@@393 $generated@@394))
 :pattern ( ($generated@@381 $generated@@393 $generated@@394))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@T) ) (! (let (($generated@@397 (type $generated@@395)))
 (not ($generated@@0 ($generated@@81 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395))))
 :pattern ( (let (($generated@@397 (type $generated@@395)))
($generated@@81 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395)))
)))
(assert  (and (and (and (and (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (= ($generated@@1 ($generated@@400 $generated@@403 $generated@@404)) 30)) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= ($generated@@401 ($generated@@400 $generated@@405 $generated@@406)) $generated@@405)
 :pattern ( ($generated@@400 $generated@@405 $generated@@406))
))) (forall (($generated@@407 T@T) ($generated@@408 T@T) ) (! (= ($generated@@402 ($generated@@400 $generated@@407 $generated@@408)) $generated@@408)
 :pattern ( ($generated@@400 $generated@@407 $generated@@408))
))) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@401 (type $generated@@409))))
(= (type ($generated@@398 $generated@@409)) ($generated@@76 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@409))
))) (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (! (= (type ($generated@@399 $generated@@411 $generated@@412)) ($generated@@400 $generated@@411 $generated@@412))
 :pattern ( ($generated@@399 $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@T) ) (! (let (($generated@@415 (type $generated@@413)))
 (not ($generated@@0 ($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413))))
 :pattern ( (let (($generated@@415 (type $generated@@413)))
($generated@@81 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413)))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (= ($generated@@254 $generated@@416) (forall (($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@417) (and (<= 0 ($generated ($generated@@81 $generated@@416 $generated@@418))) (<= ($generated ($generated@@81 $generated@@416 $generated@@418)) ($generated@@374 $generated@@416))))
 :pattern ( ($generated@@81 $generated@@416 $generated@@418))
)))))
 :pattern ( ($generated@@254 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@384 (type $generated@@419))))
(let (($generated@@421 ($generated@@383 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@382 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@381 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@380 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@384 (type $generated@@424))))
(= (type ($generated@@423 $generated@@424)) ($generated@@76 $generated@@425 $generated@@4)))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@384 (type $generated@@426))))
(let (($generated@@428 ($generated@@383 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@382 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@381 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@427) ($generated@@0 ($generated@@81 ($generated@@423 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@423 $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@402 (type $generated@@430))))
(let (($generated@@432 ($generated@@401 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@400 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@399 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@430) $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@398 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@402 (type $generated@@435))))
(= (type ($generated@@434 $generated@@435)) ($generated@@76 $generated@@436 $generated@@4)))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@402 (type $generated@@437))))
(let (($generated@@439 ($generated@@401 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@400 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@399 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@438) ($generated@@0 ($generated@@81 ($generated@@434 $generated@@437) $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@434 $generated@@437))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@442) $generated@@64)) (= ($generated@@224 $generated@@441 ($generated@@253 $generated@@442)) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@441 $generated@@443)))) ($generated@@315 $generated@@443 $generated@@442))
 :pattern ( ($generated@@81 $generated@@441 $generated@@443))
))))
 :pattern ( ($generated@@224 $generated@@441 ($generated@@253 $generated@@442)))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (= (type $generated@@444) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@444 ($generated@@324 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@248) ($generated@@0 ($generated@@81 $generated@@444 $generated@@447))) ($generated@@341 $generated@@447 $generated@@445 $generated@@446))
 :pattern ( ($generated@@81 $generated@@444 $generated@@447))
))))
 :pattern ( ($generated@@74 $generated@@444 ($generated@@324 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@448) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@449) $generated@@64)) (= (type $generated@@450) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@448 ($generated@@329 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@248) ($generated@@0 ($generated@@81 $generated@@448 $generated@@451))) ($generated@@341 $generated@@451 $generated@@449 $generated@@450))
 :pattern ( ($generated@@81 $generated@@448 $generated@@451))
))))
 :pattern ( ($generated@@74 $generated@@448 ($generated@@329 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
(= ($generated ($generated@@81 ($generated@@375 $generated@@453) $generated@@452)) 0))
 :pattern ( (let (($generated@@453 (type $generated@@452)))
($generated@@81 ($generated@@375 $generated@@453) $generated@@452)))
)))
(assert  (and (and (forall (($generated@@457 T@U) ) (! (= (type ($generated@@454 $generated@@457)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@454 $generated@@457))
)) (forall (($generated@@458 T@T) ($generated@@459 T@U) ) (! (= (type ($generated@@455 $generated@@458 $generated@@459)) $generated@@458)
 :pattern ( ($generated@@455 $generated@@458 $generated@@459))
))) (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@384 (type $generated@@460))))
(let (($generated@@462 ($generated@@383 (type $generated@@460))))
(= (type ($generated@@456 $generated@@460)) ($generated@@76 $generated@@462 $generated@@461))))
 :pattern ( ($generated@@456 $generated@@460))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@464) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@454 $generated@@463) $generated@@464))  (and ($generated@@0 ($generated@@81 ($generated@@380 $generated@@463) ($generated@@246 ($generated@@455 $generated@@239 $generated@@464)))) (= ($generated@@81 ($generated@@456 $generated@@463) ($generated@@246 ($generated@@455 $generated@@239 $generated@@464))) ($generated@@247 ($generated@@455 $generated@@239 $generated@@464))))))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@463) $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@402 (type $generated@@468))))
(let (($generated@@470 ($generated@@401 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468)) ($generated@@76 $generated@@470 $generated@@469))))
 :pattern ( ($generated@@466 $generated@@468))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@472) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@465 $generated@@471) $generated@@472))  (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@471) ($generated@@246 ($generated@@455 $generated@@239 $generated@@472)))) (= ($generated@@81 ($generated@@466 $generated@@471) ($generated@@246 ($generated@@455 $generated@@239 $generated@@472))) ($generated@@247 ($generated@@455 $generated@@239 $generated@@472))))))
 :pattern ( ($generated@@81 ($generated@@465 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
(let (($generated@@476 ($generated@@383 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@382 $generated@@476 $generated@@475)) (= ($generated@@0 ($generated@@81 ($generated@@423 $generated@@473) $generated@@474)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@476) (and ($generated@@0 ($generated@@81 ($generated@@380 $generated@@473) $generated@@477)) (= $generated@@474 ($generated@@81 ($generated@@456 $generated@@473) $generated@@477))))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@473) $generated@@477))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@473) $generated@@477))
))))))
 :pattern ( ($generated@@81 ($generated@@423 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
(let (($generated@@481 ($generated@@401 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@400 $generated@@481 $generated@@480)) (= ($generated@@0 ($generated@@81 ($generated@@434 $generated@@478) $generated@@479)) (exists (($generated@@482 T@U) ) (!  (and (= (type $generated@@482) $generated@@481) (and ($generated@@0 ($generated@@81 ($generated@@398 $generated@@478) $generated@@482)) (= $generated@@479 ($generated@@81 ($generated@@466 $generated@@478) $generated@@482))))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@478) $generated@@482))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@478) $generated@@482))
))))))
 :pattern ( ($generated@@81 ($generated@@434 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@486) $generated@@490))) (and ($generated@@341 ($generated@@81 ($generated@@456 $generated@@486) $generated@@490) $generated@@488 $generated@@489) ($generated@@341 $generated@@490 $generated@@487 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@486) $generated@@490))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@486) $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@494) $generated@@498))) (and ($generated@@341 ($generated@@81 ($generated@@466 $generated@@494) $generated@@498) $generated@@496 $generated@@497) ($generated@@341 $generated@@498 $generated@@495 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@494) $generated@@498))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@494) $generated@@498))
))))
 :pattern ( ($generated@@74 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@499) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@500) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@501) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@499 $generated@@501))) (and ($generated@@220 $generated@@499 $generated@@500) ($generated@@220 $generated@@500 $generated@@501))) ($generated@@220 $generated@@499 $generated@@501))
 :pattern ( ($generated@@220 $generated@@499 $generated@@500) ($generated@@220 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@T) ) (! (= (type ($generated@@502 $generated@@503)) ($generated@@76 $generated@@503 $generated@@4))
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@402 (type $generated@@504))))
(let (($generated@@506 ($generated@@401 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@400 $generated@@506 $generated@@505)) (= (= $generated@@504 ($generated@@399 $generated@@506 $generated@@505)) (= ($generated@@398 $generated@@504) ($generated@@502 $generated@@506))))))
 :pattern ( ($generated@@398 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@402 (type $generated@@507))))
(let (($generated@@509 ($generated@@401 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@400 $generated@@509 $generated@@508)) (= (= $generated@@507 ($generated@@399 $generated@@509 $generated@@508)) (= ($generated@@434 $generated@@507) ($generated@@502 $generated@@508))))))
 :pattern ( ($generated@@434 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@402 (type $generated@@510))))
(let (($generated@@512 ($generated@@401 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@400 $generated@@512 $generated@@511)) (= (= $generated@@510 ($generated@@399 $generated@@512 $generated@@511)) (= ($generated@@465 $generated@@510) ($generated@@502 $generated@@248))))))
 :pattern ( ($generated@@465 $generated@@510))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@384 (type $generated@@513))))
(let (($generated@@515 ($generated@@383 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@382 $generated@@515 $generated@@514)) (or (= $generated@@513 ($generated@@381 $generated@@515 $generated@@514)) (exists (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (and (and (= (type $generated@@516) $generated@@248) (= (type $generated@@517) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@454 $generated@@513) ($generated@@361 ($generated@@314 $generated@@516 $generated@@517)))))
 :no-pattern (type $generated@@516)
 :no-pattern (type $generated@@517)
 :no-pattern ($generated $generated@@516)
 :no-pattern ($generated@@0 $generated@@516)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
))))))
 :pattern ( ($generated@@454 $generated@@513))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@402 (type $generated@@518))))
(let (($generated@@520 ($generated@@401 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@400 $generated@@520 $generated@@519)) (or (= $generated@@518 ($generated@@399 $generated@@520 $generated@@519)) (exists (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (and (and (= (type $generated@@521) $generated@@248) (= (type $generated@@522) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@465 $generated@@518) ($generated@@361 ($generated@@314 $generated@@521 $generated@@522)))))
 :no-pattern (type $generated@@521)
 :no-pattern (type $generated@@522)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
))))))
 :pattern ( ($generated@@465 $generated@@518))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@248) ($generated@@315 $generated@@523 $generated@@46)) (and (= ($generated@@361 ($generated@@455 $generated@@2 $generated@@523)) $generated@@523) ($generated@@224 ($generated@@455 $generated@@2 $generated@@523) $generated@@46)))
 :pattern ( ($generated@@315 $generated@@523 $generated@@46))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@248) ($generated@@315 $generated@@524 $generated@@47)) (and (= ($generated@@361 ($generated@@455 $generated@@3 $generated@@524)) $generated@@524) ($generated@@224 ($generated@@455 $generated@@3 $generated@@524) $generated@@47)))
 :pattern ( ($generated@@315 $generated@@524 $generated@@47))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@248) ($generated@@315 $generated@@525 $generated@@44)) (and (= ($generated@@361 ($generated@@455 $generated@@4 $generated@@525)) $generated@@525) ($generated@@224 ($generated@@455 $generated@@4 $generated@@525) $generated@@44)))
 :pattern ( ($generated@@315 $generated@@525 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@526) 31))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@248) ($generated@@315 $generated@@527 $generated@@45)) (and (= ($generated@@361 ($generated@@455 $generated@@526 $generated@@527)) $generated@@527) ($generated@@224 ($generated@@455 $generated@@526 $generated@@527) $generated@@45)))
 :pattern ( ($generated@@315 $generated@@527 $generated@@45))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@315 ($generated@@361 $generated@@528) $generated@@529) ($generated@@224 $generated@@528 $generated@@529)))
 :pattern ( ($generated@@315 ($generated@@361 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@79 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@76 $generated@@531 $generated@@2)) (<= 0 ($generated@@374 $generated@@530))))
 :pattern ( ($generated@@374 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@356 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@355 $generated@@533)) (<= 0 ($generated@@354 $generated@@532))))
 :pattern ( ($generated@@354 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= ($generated@@534 ($generated@@483 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@483 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@538 ($generated@@483 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@483 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= ($generated@@72 ($generated@@483 $generated@@542 $generated@@543)) $generated@@58))
 :pattern ( ($generated@@483 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@491 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@491 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@491 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@491 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@64) (= (type $generated@@553) $generated@@64)) (= ($generated@@72 ($generated@@491 $generated@@552 $generated@@553)) $generated@@59))
 :pattern ( ($generated@@491 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@248) (= (type $generated@@555) $generated@@248)) (= ($generated@@347 ($generated@@314 $generated@@554 $generated@@555)) $generated@@61))
 :pattern ( ($generated@@314 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@64) (= (type $generated@@559) $generated@@64)) (= ($generated@@556 ($generated@@238 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@238 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@64)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@64) (= (type $generated@@563) $generated@@64)) (= ($generated@@560 ($generated@@238 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@238 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@248) (= (type $generated@@565) $generated@@248)) (= ($generated@@246 ($generated@@314 $generated@@564 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@314 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@248) (= (type $generated@@567) $generated@@248)) (= ($generated@@247 ($generated@@314 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@314 $generated@@566 $generated@@567))
)))
(assert  (and (forall (($generated@@570 T@U) ) (! (= (type ($generated@@568 $generated@@570)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@570))
)) (forall (($generated@@571 T@U) ($generated@@572 Int) ) (! (let (($generated@@573 ($generated@@356 (type $generated@@571))))
(= (type ($generated@@569 $generated@@571 $generated@@572)) $generated@@573))
 :pattern ( ($generated@@569 $generated@@571 $generated@@572))
))))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@355 $generated@@248)) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@574 ($generated@@568 $generated@@575) $generated@@576) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@354 $generated@@574))) ($generated@@341 ($generated@@569 $generated@@574 $generated@@577) $generated@@575 $generated@@576))
 :pattern ( ($generated@@569 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@74 $generated@@574 ($generated@@568 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@578 ($generated@@75 $generated@@579)) $generated@@579)
 :pattern ( ($generated@@75 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@324 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@324 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@324 $generated@@583)) $generated@@54))
 :pattern ( ($generated@@324 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@64)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@64) (= ($generated@@584 ($generated@@329 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@329 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@64) (= ($generated@@72 ($generated@@329 $generated@@587)) $generated@@55))
 :pattern ( ($generated@@329 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@64)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@64) (= ($generated@@588 ($generated@@253 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@253 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@591)) $generated@@56))
 :pattern ( ($generated@@253 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@64)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@64) (= ($generated@@592 ($generated@@568 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@568 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@64) (= ($generated@@72 ($generated@@568 $generated@@595)) $generated@@57))
 :pattern ( ($generated@@568 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
(= ($generated@@455 $generated@@597 ($generated@@361 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@361 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) (= ($generated@@224 $generated@@598 ($generated@@483 $generated@@599 $generated@@600)) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@598) $generated@@601))) (and ($generated@@315 ($generated@@81 ($generated@@456 $generated@@598) $generated@@601) $generated@@600) ($generated@@315 $generated@@601 $generated@@599)))
 :pattern ( ($generated@@81 ($generated@@456 $generated@@598) $generated@@601))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@598) $generated@@601))
))))
 :pattern ( ($generated@@224 $generated@@598 ($generated@@483 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) (= ($generated@@224 $generated@@602 ($generated@@491 $generated@@603 $generated@@604)) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@602) $generated@@605))) (and ($generated@@315 ($generated@@81 ($generated@@466 $generated@@602) $generated@@605) $generated@@604) ($generated@@315 $generated@@605 $generated@@603)))
 :pattern ( ($generated@@81 ($generated@@466 $generated@@602) $generated@@605))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@602) $generated@@605))
))))
 :pattern ( ($generated@@224 $generated@@602 ($generated@@491 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@248) (= (type $generated@@609) $generated@@248)) (< ($generated@@606 $generated@@608) ($generated@@607 ($generated@@314 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@314 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@248) (= (type $generated@@611) $generated@@248)) (< ($generated@@606 $generated@@611) ($generated@@607 ($generated@@314 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@314 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@248) (= (type $generated@@613) $generated@@64)) (= (type $generated@@614) $generated@@64)) ($generated@@315 $generated@@612 ($generated@@483 $generated@@613 $generated@@614))) (and (= ($generated@@361 ($generated@@455 ($generated@@382 $generated@@248 $generated@@248) $generated@@612)) $generated@@612) ($generated@@224 ($generated@@455 ($generated@@382 $generated@@248 $generated@@248) $generated@@612) ($generated@@483 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@315 $generated@@612 ($generated@@483 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@248) (= (type $generated@@616) $generated@@64)) (= (type $generated@@617) $generated@@64)) ($generated@@315 $generated@@615 ($generated@@491 $generated@@616 $generated@@617))) (and (= ($generated@@361 ($generated@@455 ($generated@@400 $generated@@248 $generated@@248) $generated@@615)) $generated@@615) ($generated@@224 ($generated@@455 ($generated@@400 $generated@@248 $generated@@248) $generated@@615) ($generated@@491 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@315 $generated@@615 ($generated@@491 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@64) (= (type $generated@@619) $generated@@64)) (= (type $generated@@620) $generated@@248)) ($generated@@315 $generated@@620 ($generated@@238 $generated@@618 $generated@@619))) (and (= ($generated@@361 ($generated@@455 $generated@@239 $generated@@620)) $generated@@620) ($generated@@224 ($generated@@455 $generated@@239 $generated@@620) ($generated@@238 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@315 $generated@@620 ($generated@@238 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
 (not ($generated@@0 ($generated@@81 ($generated@@502 $generated@@622) $generated@@621))))
 :pattern ( (let (($generated@@622 (type $generated@@621)))
($generated@@81 ($generated@@502 $generated@@622) $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@69)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) $generated@@64)) (and (= ($generated@@72 ($generated@@238 $generated@@625 $generated@@626)) $generated@@62) (= ($generated@@623 ($generated@@238 $generated@@625 $generated@@626)) $generated@@63)))
 :pattern ( ($generated@@238 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@239) (= ($generated@@606 ($generated@@361 $generated@@627)) ($generated@@607 $generated@@627)))
 :pattern ( ($generated@@606 ($generated@@361 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@248) ($generated@@315 $generated@@628 ($generated@@75 0))) (and (= ($generated@@361 ($generated@@455 $generated@@2 $generated@@628)) $generated@@628) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@628) ($generated@@75 0))))
 :pattern ( ($generated@@315 $generated@@628 ($generated@@75 0)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@248) ($generated@@315 $generated@@629 ($generated@@75 1))) (and (= ($generated@@361 ($generated@@455 $generated@@132 $generated@@629)) $generated@@629) ($generated@@224 ($generated@@455 $generated@@132 $generated@@629) ($generated@@75 1))))
 :pattern ( ($generated@@315 $generated@@629 ($generated@@75 1)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@248) (= (type $generated@@631) $generated@@64)) ($generated@@315 $generated@@630 ($generated@@324 $generated@@631))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@630)) $generated@@630) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@630) ($generated@@324 $generated@@631))))
 :pattern ( ($generated@@315 $generated@@630 ($generated@@324 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@248) (= (type $generated@@633) $generated@@64)) ($generated@@315 $generated@@632 ($generated@@329 $generated@@633))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@632)) $generated@@632) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@4) $generated@@632) ($generated@@329 $generated@@633))))
 :pattern ( ($generated@@315 $generated@@632 ($generated@@329 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@248) (= (type $generated@@635) $generated@@64)) ($generated@@315 $generated@@634 ($generated@@253 $generated@@635))) (and (= ($generated@@361 ($generated@@455 ($generated@@76 $generated@@248 $generated@@2) $generated@@634)) $generated@@634) ($generated@@224 ($generated@@455 ($generated@@76 $generated@@248 $generated@@2) $generated@@634) ($generated@@253 $generated@@635))))
 :pattern ( ($generated@@315 $generated@@634 ($generated@@253 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@248) (= (type $generated@@637) $generated@@64)) ($generated@@315 $generated@@636 ($generated@@568 $generated@@637))) (and (= ($generated@@361 ($generated@@455 ($generated@@355 $generated@@248) $generated@@636)) $generated@@636) ($generated@@224 ($generated@@455 ($generated@@355 $generated@@248) $generated@@636) ($generated@@568 $generated@@637))))
 :pattern ( ($generated@@315 $generated@@636 ($generated@@568 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@248) ($generated@@315 $generated@@638 ($generated@@75 2))) (and (= ($generated@@361 ($generated@@455 $generated@@140 $generated@@638)) $generated@@638) ($generated@@224 ($generated@@455 $generated@@140 $generated@@638) ($generated@@75 2))))
 :pattern ( ($generated@@315 $generated@@638 ($generated@@75 2)))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@248) ($generated@@315 $generated@@639 ($generated@@75 3))) (and (= ($generated@@361 ($generated@@455 $generated@@148 $generated@@639)) $generated@@639) ($generated@@224 ($generated@@455 $generated@@148 $generated@@639) ($generated@@75 3))))
 :pattern ( ($generated@@315 $generated@@639 ($generated@@75 3)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@248) ($generated@@315 $generated@@640 ($generated@@75 4))) (and (= ($generated@@361 ($generated@@455 $generated@@156 $generated@@640)) $generated@@640) ($generated@@224 ($generated@@455 $generated@@156 $generated@@640) ($generated@@75 4))))
 :pattern ( ($generated@@315 $generated@@640 ($generated@@75 4)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@248) ($generated@@315 $generated@@641 ($generated@@75 7))) (and (= ($generated@@361 ($generated@@455 $generated@@164 $generated@@641)) $generated@@641) ($generated@@224 ($generated@@455 $generated@@164 $generated@@641) ($generated@@75 7))))
 :pattern ( ($generated@@315 $generated@@641 ($generated@@75 7)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@248) ($generated@@315 $generated@@642 ($generated@@75 8))) (and (= ($generated@@361 ($generated@@455 $generated@@172 $generated@@642)) $generated@@642) ($generated@@224 ($generated@@455 $generated@@172 $generated@@642) ($generated@@75 8))))
 :pattern ( ($generated@@315 $generated@@642 ($generated@@75 8)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@248) ($generated@@315 $generated@@643 ($generated@@75 15))) (and (= ($generated@@361 ($generated@@455 $generated@@180 $generated@@643)) $generated@@643) ($generated@@224 ($generated@@455 $generated@@180 $generated@@643) ($generated@@75 15))))
 :pattern ( ($generated@@315 $generated@@643 ($generated@@75 15)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@248) ($generated@@315 $generated@@644 ($generated@@75 16))) (and (= ($generated@@361 ($generated@@455 $generated@@188 $generated@@644)) $generated@@644) ($generated@@224 ($generated@@455 $generated@@188 $generated@@644) ($generated@@75 16))))
 :pattern ( ($generated@@315 $generated@@644 ($generated@@75 16)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@248) ($generated@@315 $generated@@645 ($generated@@75 32))) (and (= ($generated@@361 ($generated@@455 $generated@@196 $generated@@645)) $generated@@645) ($generated@@224 ($generated@@455 $generated@@196 $generated@@645) ($generated@@75 32))))
 :pattern ( ($generated@@315 $generated@@645 ($generated@@75 32)))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@248) ($generated@@315 $generated@@646 ($generated@@75 53))) (and (= ($generated@@361 ($generated@@455 $generated@@204 $generated@@646)) $generated@@646) ($generated@@224 ($generated@@455 $generated@@204 $generated@@646) ($generated@@75 53))))
 :pattern ( ($generated@@315 $generated@@646 ($generated@@75 53)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@248) ($generated@@315 $generated@@647 ($generated@@75 100))) (and (= ($generated@@361 ($generated@@455 $generated@@212 $generated@@647)) $generated@@647) ($generated@@224 ($generated@@455 $generated@@212 $generated@@647) ($generated@@75 100))))
 :pattern ( ($generated@@315 $generated@@647 ($generated@@75 100)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@649) $generated@@64)) (= (type $generated@@650) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@648 ($generated@@253 $generated@@649) $generated@@650) (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@648 $generated@@651)))) ($generated@@341 $generated@@651 $generated@@649 $generated@@650))
 :pattern ( ($generated@@81 $generated@@648 $generated@@651))
))))
 :pattern ( ($generated@@74 $generated@@648 ($generated@@253 $generated@@649) $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@239) (= (type $generated@@653) $generated@@64)) (= (type $generated@@654) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@340 $generated@@654) (and ($generated@@237 $generated@@652) (exists (($generated@@655 T@U) ) (!  (and (= (type $generated@@655) $generated@@64) ($generated@@74 $generated@@652 ($generated@@238 $generated@@653 $generated@@655) $generated@@654))
 :pattern ( ($generated@@74 $generated@@652 ($generated@@238 $generated@@653 $generated@@655) $generated@@654))
))))) ($generated@@341 ($generated@@246 $generated@@652) $generated@@653 $generated@@654))
 :pattern ( ($generated@@341 ($generated@@246 $generated@@652) $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@239) (= (type $generated@@657) $generated@@64)) (= (type $generated@@658) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@340 $generated@@658) (and ($generated@@237 $generated@@656) (exists (($generated@@659 T@U) ) (!  (and (= (type $generated@@659) $generated@@64) ($generated@@74 $generated@@656 ($generated@@238 $generated@@659 $generated@@657) $generated@@658))
 :pattern ( ($generated@@74 $generated@@656 ($generated@@238 $generated@@659 $generated@@657) $generated@@658))
))))) ($generated@@341 ($generated@@247 $generated@@656) $generated@@657 $generated@@658))
 :pattern ( ($generated@@341 ($generated@@247 $generated@@656) $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@248) (= (type $generated@@661) $generated@@248)) (= ($generated@@314 ($generated@@336 $generated@@660) ($generated@@336 $generated@@661)) ($generated@@336 ($generated@@314 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@314 ($generated@@336 $generated@@660) ($generated@@336 $generated@@661)))
)))
(assert (forall (($generated@@662 Int) ) (! (= ($generated@@361 ($generated@@8 ($generated@@334 $generated@@662))) ($generated@@336 ($generated@@361 ($generated@@8 $generated@@662))))
 :pattern ( ($generated@@361 ($generated@@8 ($generated@@334 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@361 ($generated@@336 $generated@@663)) ($generated@@336 ($generated@@361 $generated@@663)))
 :pattern ( ($generated@@361 ($generated@@336 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@356 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@355 $generated@@665)) (= ($generated@@354 $generated@@664) 0)) (= $generated@@664 ($generated@@353 $generated@@665))))
 :pattern ( ($generated@@354 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@76 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@374 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@374 $generated@@666) ($generated ($generated@@81 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@374 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@671) $generated@@2)) ($generated@@74 $generated@@671 $generated@@46 $generated@@670))
 :pattern ( ($generated@@74 $generated@@671 $generated@@46 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@673) $generated@@3)) ($generated@@74 $generated@@673 $generated@@47 $generated@@672))
 :pattern ( ($generated@@74 $generated@@673 $generated@@47 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@675) $generated@@4)) ($generated@@74 $generated@@675 $generated@@44 $generated@@674))
 :pattern ( ($generated@@74 $generated@@675 $generated@@44 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@677) $generated@@526)) ($generated@@74 $generated@@677 $generated@@45 $generated@@676))
 :pattern ( ($generated@@74 $generated@@677 $generated@@45 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@679) $generated@@248)) ($generated@@74 $generated@@679 $generated@@48 $generated@@678))
 :pattern ( ($generated@@74 $generated@@679 $generated@@48 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@355 $generated@@248)) (= (type $generated@@681) $generated@@64)) (= ($generated@@224 $generated@@680 ($generated@@568 $generated@@681)) (forall (($generated@@682 Int) ) (!  (=> (and (<= 0 $generated@@682) (< $generated@@682 ($generated@@354 $generated@@680))) ($generated@@315 ($generated@@569 $generated@@680 $generated@@682) $generated@@681))
 :pattern ( ($generated@@569 $generated@@680 $generated@@682))
))))
 :pattern ( ($generated@@224 $generated@@680 ($generated@@568 $generated@@681)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 Int) ) (!  (=> (= (type $generated@@684) ($generated@@355 $generated@@248)) (=> (and (<= 0 $generated@@685) (< $generated@@685 ($generated@@354 $generated@@684))) (< ($generated@@607 ($generated@@455 $generated@@239 ($generated@@569 $generated@@684 $generated@@685))) ($generated@@683 $generated@@684))))
 :pattern ( ($generated@@607 ($generated@@455 $generated@@239 ($generated@@569 $generated@@684 $generated@@685))))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@382 $generated@@248 $generated@@248)) (= (type $generated@@687) $generated@@64)) (= (type $generated@@688) $generated@@64)) ($generated@@224 $generated@@686 ($generated@@483 $generated@@687 $generated@@688))) (and (and ($generated@@224 ($generated@@380 $generated@@686) ($generated@@324 $generated@@687)) ($generated@@224 ($generated@@423 $generated@@686) ($generated@@324 $generated@@688))) ($generated@@224 ($generated@@454 $generated@@686) ($generated@@324 ($generated@@238 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@224 $generated@@686 ($generated@@483 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) ($generated@@400 $generated@@248 $generated@@248)) (= (type $generated@@690) $generated@@64)) (= (type $generated@@691) $generated@@64)) ($generated@@224 $generated@@689 ($generated@@491 $generated@@690 $generated@@691))) (and (and ($generated@@224 ($generated@@398 $generated@@689) ($generated@@329 $generated@@690)) ($generated@@224 ($generated@@434 $generated@@689) ($generated@@329 $generated@@691))) ($generated@@224 ($generated@@465 $generated@@689) ($generated@@329 ($generated@@238 $generated@@690 $generated@@691)))))
 :pattern ( ($generated@@224 $generated@@689 ($generated@@491 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@2) ($generated@@224 $generated@@692 $generated@@46))
 :pattern ( ($generated@@224 $generated@@692 $generated@@46))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@3) ($generated@@224 $generated@@693 $generated@@47))
 :pattern ( ($generated@@224 $generated@@693 $generated@@47))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@4) ($generated@@224 $generated@@694 $generated@@44))
 :pattern ( ($generated@@224 $generated@@694 $generated@@44))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@526) ($generated@@224 $generated@@695 $generated@@45))
 :pattern ( ($generated@@224 $generated@@695 $generated@@45))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@248) ($generated@@224 $generated@@696 $generated@@48))
 :pattern ( ($generated@@224 $generated@@696 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 (T@U) Bool)
(declare-fun $generated@@704 () Int)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () Int)
(assert  (and (and (and (= (type $generated@@697) ($generated@@260 $generated@@77 $generated@@4)) (= (type $generated@@698) $generated@@77)) (= (type $generated@@699) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@705) ($generated@@355 $generated@@248))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@707  (=> (and (= $generated@@697 ($generated@@259 $generated@@698 $generated@@699 $generated@@60 false)) (= $generated@@700 ($generated@@334 0))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@334 (- 0 9223372036854775808)) $generated@@700) (< $generated@@700 9223372036854775808))) (=> (and (<= ($generated@@334 (- 0 9223372036854775808)) $generated@@700) (< $generated@@700 9223372036854775808)) (=> (not (= $generated@@701 0)) (=> (and (= $generated@@702 ($generated@@334 (- 0 9223372036854775807))) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@334 (- 0 9223372036854775808)) $generated@@702) (< $generated@@702 9223372036854775808)))))))))
(let (($generated@@708  (=> (and ($generated@@340 $generated@@699) ($generated@@703 $generated@@699)) (=> (and (and (and (<= ($generated@@334 (- 0 9223372036854775808)) $generated@@704) (< $generated@@704 9223372036854775808)) (and (<= ($generated@@334 (- 0 9223372036854775808)) $generated@@701) (< $generated@@701 9223372036854775808))) (and (and ($generated@@224 $generated@@705 ($generated@@568 $generated@@45)) ($generated@@74 $generated@@705 ($generated@@568 $generated@@45) $generated@@699)) (and (= 1 $generated@@706) (= (ControlFlow 0 4) 2)))) $generated@@707))))
$generated@@708)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 () T@T)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 () T@T)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@259 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U T@U) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@330 (Int) Int)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) Bool)
(declare-fun $generated@@337 (T@U T@U T@U) Bool)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@349 (T@T) T@U)
(declare-fun $generated@@350 (T@U) Int)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@362 (T@U) Int)
(declare-fun $generated@@363 (T@T) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@T) T@U)
(declare-fun $generated@@370 (T@T T@T) T@T)
(declare-fun $generated@@371 (T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@T) T@U)
(declare-fun $generated@@388 (T@T T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@T T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@471 (T@U T@U) T@U)
(declare-fun $generated@@479 (T@U T@U) T@U)
(declare-fun $generated@@487 (Int Int) Int)
(declare-fun $generated@@490 (T@T) T@U)
(declare-fun $generated@@514 () T@T)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@557 (T@U Int) T@U)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@611 (Int Int) Int)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@674 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@2) ($generated@@220 $generated@@221 ($generated@@75 0)))
 :pattern ( ($generated@@220 $generated@@221 ($generated@@75 0)))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (= (type $generated@@222) $generated@@132) ($generated@@220 $generated@@222 ($generated@@75 1)))
 :pattern ( ($generated@@220 $generated@@222 ($generated@@75 1)))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@140) ($generated@@220 $generated@@223 ($generated@@75 2)))
 :pattern ( ($generated@@220 $generated@@223 ($generated@@75 2)))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (= (type $generated@@224) $generated@@148) ($generated@@220 $generated@@224 ($generated@@75 3)))
 :pattern ( ($generated@@220 $generated@@224 ($generated@@75 3)))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@156) ($generated@@220 $generated@@225 ($generated@@75 4)))
 :pattern ( ($generated@@220 $generated@@225 ($generated@@75 4)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@164) ($generated@@220 $generated@@226 ($generated@@75 7)))
 :pattern ( ($generated@@220 $generated@@226 ($generated@@75 7)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@172) ($generated@@220 $generated@@227 ($generated@@75 8)))
 :pattern ( ($generated@@220 $generated@@227 ($generated@@75 8)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@180) ($generated@@220 $generated@@228 ($generated@@75 15)))
 :pattern ( ($generated@@220 $generated@@228 ($generated@@75 15)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@188) ($generated@@220 $generated@@229 ($generated@@75 16)))
 :pattern ( ($generated@@220 $generated@@229 ($generated@@75 16)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@196) ($generated@@220 $generated@@230 ($generated@@75 32)))
 :pattern ( ($generated@@220 $generated@@230 ($generated@@75 32)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@204) ($generated@@220 $generated@@231 ($generated@@75 53)))
 :pattern ( ($generated@@220 $generated@@231 ($generated@@75 53)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@212) ($generated@@220 $generated@@232 ($generated@@75 100)))
 :pattern ( ($generated@@220 $generated@@232 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@235) 25) (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@64) (= (type $generated@@239) $generated@@64)) (= (type $generated@@240) $generated@@235)) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239))) ($generated@@233 $generated@@240))
 :pattern ( ($generated@@233 $generated@@240) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239)))
)))
(assert  (and (and (= ($generated@@1 $generated@@244) 26) (forall (($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@242 $generated@@245))
))) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@246)) $generated@@244)
 :pattern ( ($generated@@243 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@235) (= (type $generated@@248) $generated@@235)) true) (= ($generated@@241 $generated@@247 $generated@@248)  (and (= ($generated@@242 $generated@@247) ($generated@@242 $generated@@248)) (= ($generated@@243 $generated@@247) ($generated@@243 $generated@@248)))))
 :pattern ( ($generated@@241 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@249 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@253) $generated@@64)) ($generated@@220 $generated@@252 ($generated@@249 $generated@@253))) ($generated@@250 $generated@@252))
 :pattern ( ($generated@@220 $generated@@252 ($generated@@249 $generated@@253)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@260 $generated@@261)) 27)) (forall (($generated@@262 T@T) ($generated@@263 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@262 $generated@@263)) $generated@@262)
 :pattern ( ($generated@@256 $generated@@262 $generated@@263))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@264 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@256 $generated@@264 $generated@@265))
))) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@258 (type $generated@@266))))
(= (type ($generated@@254 $generated@@266 $generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@254 $generated@@266 $generated@@267 $generated@@268))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(let (($generated@@275 (type $generated@@271)))
(= (type ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273)) ($generated@@256 $generated@@275 $generated@@274))))
 :pattern ( ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273))
))) (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@258 (type $generated@@276))))
 (=> (= (type $generated@@279) $generated@@280) (= ($generated@@254 ($generated@@259 $generated@@276 $generated@@277 $generated@@278 $generated@@279) $generated@@277 $generated@@278) $generated@@279)))
 :weight 0
))) (and (and (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (or (= $generated@@283 $generated@@285) (= ($generated@@254 ($generated@@259 $generated@@282 $generated@@283 $generated@@284 $generated@@281) $generated@@285 $generated@@286) ($generated@@254 $generated@@282 $generated@@285 $generated@@286)))
 :weight 0
)) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (or (= $generated@@290 $generated@@292) (= ($generated@@254 ($generated@@259 $generated@@288 $generated@@289 $generated@@290 $generated@@287) $generated@@291 $generated@@292) ($generated@@254 $generated@@288 $generated@@291 $generated@@292)))
 :weight 0
))) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (or true (= ($generated@@254 ($generated@@259 $generated@@294 $generated@@295 $generated@@296 $generated@@293) $generated@@297 $generated@@298) ($generated@@254 $generated@@294 $generated@@297 $generated@@298)))
 :weight 0
)))) (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Bool) ) (! (= (type ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302)) ($generated@@256 $generated@@77 $generated@@4))
 :pattern ( ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ($generated@@307 T@U) ($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@67 (type $generated@@308))))
 (=> (and (and (and (and (= (type $generated@@303) $generated@@77) (= (type $generated@@304) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@305) ($generated@@66 $generated@@4))) (= (type $generated@@307) $generated@@77)) (= (type $generated@@308) ($generated@@66 $generated@@309))) (= ($generated@@0 ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))  (=> (and (not (= $generated@@307 $generated@@303)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@304 $generated@@307) $generated@@305))) $generated@@306))))
 :pattern ( ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (= (type ($generated@@310 $generated@@312 $generated@@313)) $generated@@235)
 :pattern ( ($generated@@310 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@64) (= (type $generated@@315) $generated@@64)) (= (type $generated@@316) $generated@@244)) (= (type $generated@@317) $generated@@244)) (= ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315))  (and ($generated@@311 $generated@@316 $generated@@314) ($generated@@311 $generated@@317 $generated@@315))))
 :pattern ( ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@235) (= (type $generated@@319) $generated@@235)) (= ($generated@@241 $generated@@318 $generated@@319) (= $generated@@318 $generated@@319)))
 :pattern ( ($generated@@241 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@64)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@323) $generated@@64)) (= ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@244) ($generated@@0 ($generated@@81 $generated@@322 $generated@@324))) ($generated@@311 $generated@@324 $generated@@323))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
))))
 :pattern ( ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@64)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@328) $generated@@64)) (= ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@244) ($generated@@0 ($generated@@81 $generated@@327 $generated@@329))) ($generated@@311 $generated@@329 $generated@@328))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)))
)))
(assert (forall (($generated@@331 Int) ) (! (= ($generated@@330 $generated@@331) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
(= (type ($generated@@332 $generated@@333)) $generated@@334))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (= ($generated@@332 $generated@@335) $generated@@335)
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@338) $generated@@64) (= (type $generated@@339) $generated@@64)) (= (type $generated@@340) $generated@@244)) (= (type $generated@@341) $generated@@244)) (= (type $generated@@342) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@336 $generated@@342)) (= ($generated@@74 ($generated@@310 $generated@@340 $generated@@341) ($generated@@234 $generated@@338 $generated@@339) $generated@@342)  (and ($generated@@337 $generated@@340 $generated@@338 $generated@@342) ($generated@@337 $generated@@341 $generated@@339 $generated@@342))))
 :pattern ( ($generated@@74 ($generated@@310 $generated@@340 $generated@@341) ($generated@@234 $generated@@338 $generated@@339) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@68)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@235) (= ($generated@@233 $generated@@345) (= ($generated@@343 $generated@@345) $generated@@61)))
 :pattern ( ($generated@@233 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@235) ($generated@@233 $generated@@346)) (exists (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (and (and (= (type $generated@@347) $generated@@244) (= (type $generated@@348) $generated@@244)) (= $generated@@346 ($generated@@310 $generated@@347 $generated@@348)))
 :no-pattern (type $generated@@347)
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
)))
 :pattern ( ($generated@@233 $generated@@346))
)))
(assert  (and (and (forall (($generated@@353 T@T) ) (= ($generated@@1 ($generated@@351 $generated@@353)) 28)) (forall (($generated@@354 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@351 $generated@@354))
))) (forall (($generated@@355 T@T) ) (! (= (type ($generated@@349 $generated@@355)) ($generated@@351 $generated@@355))
 :pattern ( ($generated@@349 $generated@@355))
))))
(assert (forall (($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@356)) 0)
 :pattern ( ($generated@@349 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@244)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@64) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@337 ($generated@@357 $generated@@359) $generated@@360 $generated@@361) ($generated@@74 $generated@@359 $generated@@360 $generated@@361)))
 :pattern ( ($generated@@337 ($generated@@357 $generated@@359) $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@364 T@T) ) (! (= (type ($generated@@363 $generated@@364)) ($generated@@76 $generated@@364 $generated@@2))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@79 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@76 $generated@@366 $generated@@2)) (and (= (= ($generated@@362 $generated@@365) 0) (= $generated@@365 ($generated@@363 $generated@@366))) (=> (not (= ($generated@@362 $generated@@365) 0)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367))))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert  (and (and (and (and (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (= ($generated@@1 ($generated@@370 $generated@@373 $generated@@374)) 29)) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@371 ($generated@@370 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@370 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@372 ($generated@@370 $generated@@377 $generated@@378)) $generated@@378)
 :pattern ( ($generated@@370 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@371 (type $generated@@379))))
(= (type ($generated@@368 $generated@@379)) ($generated@@76 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@379))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= (type ($generated@@369 $generated@@381 $generated@@382)) ($generated@@370 $generated@@381 $generated@@382))
 :pattern ( ($generated@@369 $generated@@381 $generated@@382))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@T) ) (! (let (($generated@@385 (type $generated@@383)))
 (not ($generated@@0 ($generated@@81 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383))))
 :pattern ( (let (($generated@@385 (type $generated@@383)))
($generated@@81 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383)))
)))
(assert  (and (and (and (and (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (= ($generated@@1 ($generated@@388 $generated@@391 $generated@@392)) 30)) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@389 ($generated@@388 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@388 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@390 ($generated@@388 $generated@@395 $generated@@396)) $generated@@396)
 :pattern ( ($generated@@388 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@389 (type $generated@@397))))
(= (type ($generated@@386 $generated@@397)) ($generated@@76 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@397))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= (type ($generated@@387 $generated@@399 $generated@@400)) ($generated@@388 $generated@@399 $generated@@400))
 :pattern ( ($generated@@387 $generated@@399 $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@T) ) (! (let (($generated@@403 (type $generated@@401)))
 (not ($generated@@0 ($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401))))
 :pattern ( (let (($generated@@403 (type $generated@@401)))
($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401)))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@79 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@76 $generated@@405 $generated@@2)) (= ($generated@@250 $generated@@404) (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@405) (and (<= 0 ($generated ($generated@@81 $generated@@404 $generated@@406))) (<= ($generated ($generated@@81 $generated@@404 $generated@@406)) ($generated@@362 $generated@@404))))
 :pattern ( ($generated@@81 $generated@@404 $generated@@406))
)))))
 :pattern ( ($generated@@250 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@372 (type $generated@@407))))
(let (($generated@@409 ($generated@@371 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@370 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@369 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@368 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@372 (type $generated@@412))))
(= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@413 $generated@@4)))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@372 (type $generated@@414))))
(let (($generated@@416 ($generated@@371 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@370 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@369 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@415) ($generated@@0 ($generated@@81 ($generated@@411 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@411 $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@390 (type $generated@@418))))
(let (($generated@@420 ($generated@@389 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@388 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@387 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@386 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@390 (type $generated@@423))))
(= (type ($generated@@422 $generated@@423)) ($generated@@76 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@390 (type $generated@@425))))
(let (($generated@@427 ($generated@@389 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@388 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@387 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@426) ($generated@@0 ($generated@@81 ($generated@@422 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@422 $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@430) $generated@@64)) (= ($generated@@220 $generated@@429 ($generated@@249 $generated@@430)) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@429 $generated@@431)))) ($generated@@311 $generated@@431 $generated@@430))
 :pattern ( ($generated@@81 $generated@@429 $generated@@431))
))))
 :pattern ( ($generated@@220 $generated@@429 ($generated@@249 $generated@@430)))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@432 ($generated@@320 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@244) ($generated@@0 ($generated@@81 $generated@@432 $generated@@435))) ($generated@@337 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@81 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@74 $generated@@432 ($generated@@320 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (= (type $generated@@436) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@437) $generated@@64)) (= (type $generated@@438) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@436 ($generated@@325 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@244) ($generated@@0 ($generated@@81 $generated@@436 $generated@@439))) ($generated@@337 $generated@@439 $generated@@437 $generated@@438))
 :pattern ( ($generated@@81 $generated@@436 $generated@@439))
))))
 :pattern ( ($generated@@74 $generated@@436 ($generated@@325 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(= ($generated ($generated@@81 ($generated@@363 $generated@@441) $generated@@440)) 0))
 :pattern ( (let (($generated@@441 (type $generated@@440)))
($generated@@81 ($generated@@363 $generated@@441) $generated@@440)))
)))
(assert  (and (and (forall (($generated@@445 T@U) ) (! (= (type ($generated@@442 $generated@@445)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@442 $generated@@445))
)) (forall (($generated@@446 T@T) ($generated@@447 T@U) ) (! (= (type ($generated@@443 $generated@@446 $generated@@447)) $generated@@446)
 :pattern ( ($generated@@443 $generated@@446 $generated@@447))
))) (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@372 (type $generated@@448))))
(let (($generated@@450 ($generated@@371 (type $generated@@448))))
(= (type ($generated@@444 $generated@@448)) ($generated@@76 $generated@@450 $generated@@449))))
 :pattern ( ($generated@@444 $generated@@448))
))))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@452) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@442 $generated@@451) $generated@@452))  (and ($generated@@0 ($generated@@81 ($generated@@368 $generated@@451) ($generated@@242 ($generated@@443 $generated@@235 $generated@@452)))) (= ($generated@@81 ($generated@@444 $generated@@451) ($generated@@242 ($generated@@443 $generated@@235 $generated@@452))) ($generated@@243 ($generated@@443 $generated@@235 $generated@@452))))))
 :pattern ( ($generated@@81 ($generated@@442 $generated@@451) $generated@@452))
)))
(assert  (and (forall (($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@455)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@453 $generated@@455))
)) (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@390 (type $generated@@456))))
(let (($generated@@458 ($generated@@389 (type $generated@@456))))
(= (type ($generated@@454 $generated@@456)) ($generated@@76 $generated@@458 $generated@@457))))
 :pattern ( ($generated@@454 $generated@@456))
))))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@460) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@453 $generated@@459) $generated@@460))  (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@459) ($generated@@242 ($generated@@443 $generated@@235 $generated@@460)))) (= ($generated@@81 ($generated@@454 $generated@@459) ($generated@@242 ($generated@@443 $generated@@235 $generated@@460))) ($generated@@243 ($generated@@443 $generated@@235 $generated@@460))))))
 :pattern ( ($generated@@81 ($generated@@453 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@462)))
(let (($generated@@464 ($generated@@371 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@370 $generated@@464 $generated@@463)) (= ($generated@@0 ($generated@@81 ($generated@@411 $generated@@461) $generated@@462)) (exists (($generated@@465 T@U) ) (!  (and (= (type $generated@@465) $generated@@464) (and ($generated@@0 ($generated@@81 ($generated@@368 $generated@@461) $generated@@465)) (= $generated@@462 ($generated@@81 ($generated@@444 $generated@@461) $generated@@465))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@461) $generated@@465))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@461) $generated@@465))
))))))
 :pattern ( ($generated@@81 ($generated@@411 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 (type $generated@@467)))
(let (($generated@@469 ($generated@@389 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@388 $generated@@469 $generated@@468)) (= ($generated@@0 ($generated@@81 ($generated@@422 $generated@@466) $generated@@467)) (exists (($generated@@470 T@U) ) (!  (and (= (type $generated@@470) $generated@@469) (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@466) $generated@@470)) (= $generated@@467 ($generated@@81 ($generated@@454 $generated@@466) $generated@@470))))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@466) $generated@@470))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@466) $generated@@470))
))))))
 :pattern ( ($generated@@81 ($generated@@422 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (and (= (type $generated@@474) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@475) $generated@@64)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477) (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@474) $generated@@478))) (and ($generated@@337 ($generated@@81 ($generated@@444 $generated@@474) $generated@@478) $generated@@476 $generated@@477) ($generated@@337 $generated@@478 $generated@@475 $generated@@477)))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@474) $generated@@478))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@474) $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (= (type $generated@@482) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@482) $generated@@486))) (and ($generated@@337 ($generated@@81 ($generated@@454 $generated@@482) $generated@@486) $generated@@484 $generated@@485) ($generated@@337 $generated@@486 $generated@@483 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@482) $generated@@486))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@482) $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ($generated@@489 Int) ) (! (= ($generated@@487 $generated@@488 $generated@@489) (div $generated@@488 $generated@@489))
 :pattern ( ($generated@@487 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@T) ) (! (= (type ($generated@@490 $generated@@491)) ($generated@@76 $generated@@491 $generated@@4))
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@390 (type $generated@@492))))
(let (($generated@@494 ($generated@@389 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@388 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@387 $generated@@494 $generated@@493)) (= ($generated@@386 $generated@@492) ($generated@@490 $generated@@494))))))
 :pattern ( ($generated@@386 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@390 (type $generated@@495))))
(let (($generated@@497 ($generated@@389 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@388 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@387 $generated@@497 $generated@@496)) (= ($generated@@422 $generated@@495) ($generated@@490 $generated@@496))))))
 :pattern ( ($generated@@422 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@390 (type $generated@@498))))
(let (($generated@@500 ($generated@@389 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@388 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@387 $generated@@500 $generated@@499)) (= ($generated@@453 $generated@@498) ($generated@@490 $generated@@244))))))
 :pattern ( ($generated@@453 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@372 (type $generated@@501))))
(let (($generated@@503 ($generated@@371 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@370 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@369 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@244) (= (type $generated@@505) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@442 $generated@@501) ($generated@@357 ($generated@@310 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@442 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@390 (type $generated@@506))))
(let (($generated@@508 ($generated@@389 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@388 $generated@@508 $generated@@507)) (or (= $generated@@506 ($generated@@387 $generated@@508 $generated@@507)) (exists (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (and (and (= (type $generated@@509) $generated@@244) (= (type $generated@@510) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@453 $generated@@506) ($generated@@357 ($generated@@310 $generated@@509 $generated@@510)))))
 :no-pattern (type $generated@@509)
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@453 $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@244) ($generated@@311 $generated@@511 $generated@@46)) (and (= ($generated@@357 ($generated@@443 $generated@@2 $generated@@511)) $generated@@511) ($generated@@220 ($generated@@443 $generated@@2 $generated@@511) $generated@@46)))
 :pattern ( ($generated@@311 $generated@@511 $generated@@46))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@244) ($generated@@311 $generated@@512 $generated@@47)) (and (= ($generated@@357 ($generated@@443 $generated@@3 $generated@@512)) $generated@@512) ($generated@@220 ($generated@@443 $generated@@3 $generated@@512) $generated@@47)))
 :pattern ( ($generated@@311 $generated@@512 $generated@@47))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@244) ($generated@@311 $generated@@513 $generated@@44)) (and (= ($generated@@357 ($generated@@443 $generated@@4 $generated@@513)) $generated@@513) ($generated@@220 ($generated@@443 $generated@@4 $generated@@513) $generated@@44)))
 :pattern ( ($generated@@311 $generated@@513 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@514) 31))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@244) ($generated@@311 $generated@@515 $generated@@45)) (and (= ($generated@@357 ($generated@@443 $generated@@514 $generated@@515)) $generated@@515) ($generated@@220 ($generated@@443 $generated@@514 $generated@@515) $generated@@45)))
 :pattern ( ($generated@@311 $generated@@515 $generated@@45))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@311 ($generated@@357 $generated@@516) $generated@@517) ($generated@@220 $generated@@516 $generated@@517)))
 :pattern ( ($generated@@311 ($generated@@357 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@79 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@76 $generated@@519 $generated@@2)) (<= 0 ($generated@@362 $generated@@518))))
 :pattern ( ($generated@@362 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@352 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@351 $generated@@521)) (<= 0 ($generated@@350 $generated@@520))))
 :pattern ( ($generated@@350 $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= ($generated@@522 ($generated@@471 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@471 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@526 ($generated@@471 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@471 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@64) (= (type $generated@@531) $generated@@64)) (= ($generated@@72 ($generated@@471 $generated@@530 $generated@@531)) $generated@@58))
 :pattern ( ($generated@@471 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@64)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= ($generated@@532 ($generated@@479 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@479 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@64)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (= ($generated@@536 ($generated@@479 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@479 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@72 ($generated@@479 $generated@@540 $generated@@541)) $generated@@59))
 :pattern ( ($generated@@479 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@244) (= (type $generated@@543) $generated@@244)) (= ($generated@@343 ($generated@@310 $generated@@542 $generated@@543)) $generated@@61))
 :pattern ( ($generated@@310 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@234 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@234 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@234 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@234 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@244) (= (type $generated@@553) $generated@@244)) (= ($generated@@242 ($generated@@310 $generated@@552 $generated@@553)) $generated@@552))
 :pattern ( ($generated@@310 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@244) (= (type $generated@@555) $generated@@244)) (= ($generated@@243 ($generated@@310 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@310 $generated@@554 $generated@@555))
)))
(assert  (and (forall (($generated@@558 T@U) ) (! (= (type ($generated@@556 $generated@@558)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@558))
)) (forall (($generated@@559 T@U) ($generated@@560 Int) ) (! (let (($generated@@561 ($generated@@352 (type $generated@@559))))
(= (type ($generated@@557 $generated@@559 $generated@@560)) $generated@@561))
 :pattern ( ($generated@@557 $generated@@559 $generated@@560))
))))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@351 $generated@@244)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@562 ($generated@@556 $generated@@563) $generated@@564) (forall (($generated@@565 Int) ) (!  (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@350 $generated@@562))) ($generated@@337 ($generated@@557 $generated@@562 $generated@@565) $generated@@563 $generated@@564))
 :pattern ( ($generated@@557 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@556 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@566 ($generated@@75 $generated@@567)) $generated@@567)
 :pattern ( ($generated@@75 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@64) (= ($generated@@568 ($generated@@320 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@320 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@64) (= ($generated@@72 ($generated@@320 $generated@@571)) $generated@@54))
 :pattern ( ($generated@@320 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@64)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@64) (= ($generated@@572 ($generated@@325 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@325 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@64) (= ($generated@@72 ($generated@@325 $generated@@575)) $generated@@55))
 :pattern ( ($generated@@325 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@64)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@64) (= ($generated@@576 ($generated@@249 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@249 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@579)) $generated@@56))
 :pattern ( ($generated@@249 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@580 ($generated@@556 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@556 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@72 ($generated@@556 $generated@@583)) $generated@@57))
 :pattern ( ($generated@@556 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
(= ($generated@@443 $generated@@585 ($generated@@357 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@357 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) $generated@@64)) (= ($generated@@220 $generated@@586 ($generated@@471 $generated@@587 $generated@@588)) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@586) $generated@@589))) (and ($generated@@311 ($generated@@81 ($generated@@444 $generated@@586) $generated@@589) $generated@@588) ($generated@@311 $generated@@589 $generated@@587)))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@586) $generated@@589))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@586) $generated@@589))
))))
 :pattern ( ($generated@@220 $generated@@586 ($generated@@471 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) (= ($generated@@220 $generated@@590 ($generated@@479 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@590) $generated@@593))) (and ($generated@@311 ($generated@@81 ($generated@@454 $generated@@590) $generated@@593) $generated@@592) ($generated@@311 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@81 ($generated@@454 $generated@@590) $generated@@593))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@220 $generated@@590 ($generated@@479 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@244) (= (type $generated@@597) $generated@@244)) (< ($generated@@594 $generated@@596) ($generated@@595 ($generated@@310 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@310 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@244) (= (type $generated@@599) $generated@@244)) (< ($generated@@594 $generated@@599) ($generated@@595 ($generated@@310 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@310 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@244) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@311 $generated@@600 ($generated@@471 $generated@@601 $generated@@602))) (and (= ($generated@@357 ($generated@@443 ($generated@@370 $generated@@244 $generated@@244) $generated@@600)) $generated@@600) ($generated@@220 ($generated@@443 ($generated@@370 $generated@@244 $generated@@244) $generated@@600) ($generated@@471 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@311 $generated@@600 ($generated@@471 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@244) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) ($generated@@311 $generated@@603 ($generated@@479 $generated@@604 $generated@@605))) (and (= ($generated@@357 ($generated@@443 ($generated@@388 $generated@@244 $generated@@244) $generated@@603)) $generated@@603) ($generated@@220 ($generated@@443 ($generated@@388 $generated@@244 $generated@@244) $generated@@603) ($generated@@479 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@311 $generated@@603 ($generated@@479 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@64) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@244)) ($generated@@311 $generated@@608 ($generated@@234 $generated@@606 $generated@@607))) (and (= ($generated@@357 ($generated@@443 $generated@@235 $generated@@608)) $generated@@608) ($generated@@220 ($generated@@443 $generated@@235 $generated@@608) ($generated@@234 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@311 $generated@@608 ($generated@@234 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (not ($generated@@0 ($generated@@81 ($generated@@490 $generated@@610) $generated@@609))))
 :pattern ( (let (($generated@@610 (type $generated@@609)))
($generated@@81 ($generated@@490 $generated@@610) $generated@@609)))
)))
(assert (forall (($generated@@612 Int) ($generated@@613 Int) ) (! (= ($generated@@611 $generated@@612 $generated@@613) (mod $generated@@612 $generated@@613))
 :pattern ( ($generated@@611 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@69)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@64) (= (type $generated@@617) $generated@@64)) (and (= ($generated@@72 ($generated@@234 $generated@@616 $generated@@617)) $generated@@62) (= ($generated@@614 ($generated@@234 $generated@@616 $generated@@617)) $generated@@63)))
 :pattern ( ($generated@@234 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@235) (= ($generated@@594 ($generated@@357 $generated@@618)) ($generated@@595 $generated@@618)))
 :pattern ( ($generated@@594 ($generated@@357 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@244) ($generated@@311 $generated@@619 ($generated@@75 0))) (and (= ($generated@@357 ($generated@@443 $generated@@2 $generated@@619)) $generated@@619) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@619) ($generated@@75 0))))
 :pattern ( ($generated@@311 $generated@@619 ($generated@@75 0)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@244) ($generated@@311 $generated@@620 ($generated@@75 1))) (and (= ($generated@@357 ($generated@@443 $generated@@132 $generated@@620)) $generated@@620) ($generated@@220 ($generated@@443 $generated@@132 $generated@@620) ($generated@@75 1))))
 :pattern ( ($generated@@311 $generated@@620 ($generated@@75 1)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@244) (= (type $generated@@622) $generated@@64)) ($generated@@311 $generated@@621 ($generated@@320 $generated@@622))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@621)) $generated@@621) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@621) ($generated@@320 $generated@@622))))
 :pattern ( ($generated@@311 $generated@@621 ($generated@@320 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@244) (= (type $generated@@624) $generated@@64)) ($generated@@311 $generated@@623 ($generated@@325 $generated@@624))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@623)) $generated@@623) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@4) $generated@@623) ($generated@@325 $generated@@624))))
 :pattern ( ($generated@@311 $generated@@623 ($generated@@325 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@244) (= (type $generated@@626) $generated@@64)) ($generated@@311 $generated@@625 ($generated@@249 $generated@@626))) (and (= ($generated@@357 ($generated@@443 ($generated@@76 $generated@@244 $generated@@2) $generated@@625)) $generated@@625) ($generated@@220 ($generated@@443 ($generated@@76 $generated@@244 $generated@@2) $generated@@625) ($generated@@249 $generated@@626))))
 :pattern ( ($generated@@311 $generated@@625 ($generated@@249 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@244) (= (type $generated@@628) $generated@@64)) ($generated@@311 $generated@@627 ($generated@@556 $generated@@628))) (and (= ($generated@@357 ($generated@@443 ($generated@@351 $generated@@244) $generated@@627)) $generated@@627) ($generated@@220 ($generated@@443 ($generated@@351 $generated@@244) $generated@@627) ($generated@@556 $generated@@628))))
 :pattern ( ($generated@@311 $generated@@627 ($generated@@556 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@244) ($generated@@311 $generated@@629 ($generated@@75 2))) (and (= ($generated@@357 ($generated@@443 $generated@@140 $generated@@629)) $generated@@629) ($generated@@220 ($generated@@443 $generated@@140 $generated@@629) ($generated@@75 2))))
 :pattern ( ($generated@@311 $generated@@629 ($generated@@75 2)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@244) ($generated@@311 $generated@@630 ($generated@@75 3))) (and (= ($generated@@357 ($generated@@443 $generated@@148 $generated@@630)) $generated@@630) ($generated@@220 ($generated@@443 $generated@@148 $generated@@630) ($generated@@75 3))))
 :pattern ( ($generated@@311 $generated@@630 ($generated@@75 3)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@244) ($generated@@311 $generated@@631 ($generated@@75 4))) (and (= ($generated@@357 ($generated@@443 $generated@@156 $generated@@631)) $generated@@631) ($generated@@220 ($generated@@443 $generated@@156 $generated@@631) ($generated@@75 4))))
 :pattern ( ($generated@@311 $generated@@631 ($generated@@75 4)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@244) ($generated@@311 $generated@@632 ($generated@@75 7))) (and (= ($generated@@357 ($generated@@443 $generated@@164 $generated@@632)) $generated@@632) ($generated@@220 ($generated@@443 $generated@@164 $generated@@632) ($generated@@75 7))))
 :pattern ( ($generated@@311 $generated@@632 ($generated@@75 7)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@244) ($generated@@311 $generated@@633 ($generated@@75 8))) (and (= ($generated@@357 ($generated@@443 $generated@@172 $generated@@633)) $generated@@633) ($generated@@220 ($generated@@443 $generated@@172 $generated@@633) ($generated@@75 8))))
 :pattern ( ($generated@@311 $generated@@633 ($generated@@75 8)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@244) ($generated@@311 $generated@@634 ($generated@@75 15))) (and (= ($generated@@357 ($generated@@443 $generated@@180 $generated@@634)) $generated@@634) ($generated@@220 ($generated@@443 $generated@@180 $generated@@634) ($generated@@75 15))))
 :pattern ( ($generated@@311 $generated@@634 ($generated@@75 15)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@244) ($generated@@311 $generated@@635 ($generated@@75 16))) (and (= ($generated@@357 ($generated@@443 $generated@@188 $generated@@635)) $generated@@635) ($generated@@220 ($generated@@443 $generated@@188 $generated@@635) ($generated@@75 16))))
 :pattern ( ($generated@@311 $generated@@635 ($generated@@75 16)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@244) ($generated@@311 $generated@@636 ($generated@@75 32))) (and (= ($generated@@357 ($generated@@443 $generated@@196 $generated@@636)) $generated@@636) ($generated@@220 ($generated@@443 $generated@@196 $generated@@636) ($generated@@75 32))))
 :pattern ( ($generated@@311 $generated@@636 ($generated@@75 32)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@244) ($generated@@311 $generated@@637 ($generated@@75 53))) (and (= ($generated@@357 ($generated@@443 $generated@@204 $generated@@637)) $generated@@637) ($generated@@220 ($generated@@443 $generated@@204 $generated@@637) ($generated@@75 53))))
 :pattern ( ($generated@@311 $generated@@637 ($generated@@75 53)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@244) ($generated@@311 $generated@@638 ($generated@@75 100))) (and (= ($generated@@357 ($generated@@443 $generated@@212 $generated@@638)) $generated@@638) ($generated@@220 ($generated@@443 $generated@@212 $generated@@638) ($generated@@75 100))))
 :pattern ( ($generated@@311 $generated@@638 ($generated@@75 100)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@639) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@640) $generated@@64)) (= (type $generated@@641) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@639 ($generated@@249 $generated@@640) $generated@@641) (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@639 $generated@@642)))) ($generated@@337 $generated@@642 $generated@@640 $generated@@641))
 :pattern ( ($generated@@81 $generated@@639 $generated@@642))
))))
 :pattern ( ($generated@@74 $generated@@639 ($generated@@249 $generated@@640) $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@235) (= (type $generated@@644) $generated@@64)) (= (type $generated@@645) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@336 $generated@@645) (and ($generated@@233 $generated@@643) (exists (($generated@@646 T@U) ) (!  (and (= (type $generated@@646) $generated@@64) ($generated@@74 $generated@@643 ($generated@@234 $generated@@644 $generated@@646) $generated@@645))
 :pattern ( ($generated@@74 $generated@@643 ($generated@@234 $generated@@644 $generated@@646) $generated@@645))
))))) ($generated@@337 ($generated@@242 $generated@@643) $generated@@644 $generated@@645))
 :pattern ( ($generated@@337 ($generated@@242 $generated@@643) $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@235) (= (type $generated@@648) $generated@@64)) (= (type $generated@@649) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@336 $generated@@649) (and ($generated@@233 $generated@@647) (exists (($generated@@650 T@U) ) (!  (and (= (type $generated@@650) $generated@@64) ($generated@@74 $generated@@647 ($generated@@234 $generated@@650 $generated@@648) $generated@@649))
 :pattern ( ($generated@@74 $generated@@647 ($generated@@234 $generated@@650 $generated@@648) $generated@@649))
))))) ($generated@@337 ($generated@@243 $generated@@647) $generated@@648 $generated@@649))
 :pattern ( ($generated@@337 ($generated@@243 $generated@@647) $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@244) (= (type $generated@@652) $generated@@244)) (= ($generated@@310 ($generated@@332 $generated@@651) ($generated@@332 $generated@@652)) ($generated@@332 ($generated@@310 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@310 ($generated@@332 $generated@@651) ($generated@@332 $generated@@652)))
)))
(assert (forall (($generated@@653 Int) ) (! (= ($generated@@357 ($generated@@8 ($generated@@330 $generated@@653))) ($generated@@332 ($generated@@357 ($generated@@8 $generated@@653))))
 :pattern ( ($generated@@357 ($generated@@8 ($generated@@330 $generated@@653))))
)))
(assert (forall (($generated@@654 T@U) ) (! (= ($generated@@357 ($generated@@332 $generated@@654)) ($generated@@332 ($generated@@357 $generated@@654)))
 :pattern ( ($generated@@357 ($generated@@332 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@352 (type $generated@@655))))
 (=> (and (= (type $generated@@655) ($generated@@351 $generated@@656)) (= ($generated@@350 $generated@@655) 0)) (= $generated@@655 ($generated@@349 $generated@@656))))
 :pattern ( ($generated@@350 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@658)))
 (=> (and (and (= (type $generated@@657) ($generated@@76 $generated@@660 $generated@@2)) (= (type $generated@@659) $generated@@2)) (<= 0 ($generated $generated@@659))) (= ($generated@@362 ($generated@@82 $generated@@657 $generated@@658 $generated@@659)) (+ (- ($generated@@362 $generated@@657) ($generated ($generated@@81 $generated@@657 $generated@@658))) ($generated $generated@@659)))))
 :pattern ( ($generated@@362 ($generated@@82 $generated@@657 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@662) $generated@@2)) ($generated@@74 $generated@@662 $generated@@46 $generated@@661))
 :pattern ( ($generated@@74 $generated@@662 $generated@@46 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@664) $generated@@3)) ($generated@@74 $generated@@664 $generated@@47 $generated@@663))
 :pattern ( ($generated@@74 $generated@@664 $generated@@47 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@666) $generated@@4)) ($generated@@74 $generated@@666 $generated@@44 $generated@@665))
 :pattern ( ($generated@@74 $generated@@666 $generated@@44 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@668) $generated@@514)) ($generated@@74 $generated@@668 $generated@@45 $generated@@667))
 :pattern ( ($generated@@74 $generated@@668 $generated@@45 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@670) $generated@@244)) ($generated@@74 $generated@@670 $generated@@48 $generated@@669))
 :pattern ( ($generated@@74 $generated@@670 $generated@@48 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@351 $generated@@244)) (= (type $generated@@672) $generated@@64)) (= ($generated@@220 $generated@@671 ($generated@@556 $generated@@672)) (forall (($generated@@673 Int) ) (!  (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@350 $generated@@671))) ($generated@@311 ($generated@@557 $generated@@671 $generated@@673) $generated@@672))
 :pattern ( ($generated@@557 $generated@@671 $generated@@673))
))))
 :pattern ( ($generated@@220 $generated@@671 ($generated@@556 $generated@@672)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 Int) ) (!  (=> (= (type $generated@@675) ($generated@@351 $generated@@244)) (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@350 $generated@@675))) (< ($generated@@595 ($generated@@443 $generated@@235 ($generated@@557 $generated@@675 $generated@@676))) ($generated@@674 $generated@@675))))
 :pattern ( ($generated@@595 ($generated@@443 $generated@@235 ($generated@@557 $generated@@675 $generated@@676))))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@370 $generated@@244 $generated@@244)) (= (type $generated@@678) $generated@@64)) (= (type $generated@@679) $generated@@64)) ($generated@@220 $generated@@677 ($generated@@471 $generated@@678 $generated@@679))) (and (and ($generated@@220 ($generated@@368 $generated@@677) ($generated@@320 $generated@@678)) ($generated@@220 ($generated@@411 $generated@@677) ($generated@@320 $generated@@679))) ($generated@@220 ($generated@@442 $generated@@677) ($generated@@320 ($generated@@234 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@220 $generated@@677 ($generated@@471 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@388 $generated@@244 $generated@@244)) (= (type $generated@@681) $generated@@64)) (= (type $generated@@682) $generated@@64)) ($generated@@220 $generated@@680 ($generated@@479 $generated@@681 $generated@@682))) (and (and ($generated@@220 ($generated@@386 $generated@@680) ($generated@@325 $generated@@681)) ($generated@@220 ($generated@@422 $generated@@680) ($generated@@325 $generated@@682))) ($generated@@220 ($generated@@453 $generated@@680) ($generated@@325 ($generated@@234 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@220 $generated@@680 ($generated@@479 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@2) ($generated@@220 $generated@@683 $generated@@46))
 :pattern ( ($generated@@220 $generated@@683 $generated@@46))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@3) ($generated@@220 $generated@@684 $generated@@47))
 :pattern ( ($generated@@220 $generated@@684 $generated@@47))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@4) ($generated@@220 $generated@@685 $generated@@44))
 :pattern ( ($generated@@220 $generated@@685 $generated@@44))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@514) ($generated@@220 $generated@@686 $generated@@45))
 :pattern ( ($generated@@220 $generated@@686 $generated@@45))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@244) ($generated@@220 $generated@@687 $generated@@48))
 :pattern ( ($generated@@220 $generated@@687 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 (T@U) Bool)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(assert  (and (and (and (= (type $generated@@688) ($generated@@256 $generated@@77 $generated@@4)) (= (type $generated@@689) $generated@@77)) (= (type $generated@@690) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@696) ($generated@@351 $generated@@244))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@698  (=> (= $generated@@688 ($generated@@255 $generated@@689 $generated@@690 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@691 0))) (=> (= $generated@@692 ($generated@@487 $generated@@693 $generated@@691)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@330 (- 0 9223372036854775808)) $generated@@692) (< $generated@@692 9223372036854775808))) (=> (and (<= ($generated@@330 (- 0 9223372036854775808)) $generated@@692) (< $generated@@692 9223372036854775808)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@691 0))) (=> (and (= $generated@@694 ($generated@@611 $generated@@693 $generated@@691)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@330 (- 0 9223372036854775808)) $generated@@694) (< $generated@@694 9223372036854775808)))))))))))
(let (($generated@@699  (=> (and (and ($generated@@336 $generated@@690) ($generated@@695 $generated@@690)) (and (<= ($generated@@330 (- 0 9223372036854775808)) $generated@@693) (< $generated@@693 9223372036854775808))) (=> (and (and (and (<= ($generated@@330 (- 0 9223372036854775808)) $generated@@691) (< $generated@@691 9223372036854775808)) (and ($generated@@220 $generated@@696 ($generated@@556 $generated@@45)) ($generated@@74 $generated@@696 ($generated@@556 $generated@@45) $generated@@690))) (and (and (= 1 $generated@@697) (not (= $generated@@691 0))) (and (<= ($generated@@330 (- 0 9223372036854775807)) $generated@@693) (= (ControlFlow 0 6) 2)))) $generated@@698))))
$generated@@699)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Real)
(declare-fun $generated@@162 () Real)
(declare-fun $generated@@163 () Real)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 () Int)
(assert  (and (and (and (= (type $generated@@157) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@158) $generated@@47)) (= (type $generated@@159) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@160) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@167  (=> (= $generated@@157 ($generated@@45 $generated@@158 $generated@@159 $generated@@160 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@161 0.0))) (=> (not (= $generated@@161 0.0)) (=> (and (= $generated@@162 (/ $generated@@163 $generated@@161)) (= (ControlFlow 0 2) (- 0 1))) (= (* $generated@@162 $generated@@161) $generated@@163)))))))
(let (($generated@@168  (=> (and (and (and ($generated@@164 $generated@@159) ($generated@@165 $generated@@159)) (= 1 $generated@@166)) (and (not (= $generated@@161 0.0)) (= (ControlFlow 0 4) 2))) $generated@@167)))
$generated@@168)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Real) Real)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Real) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Real) ) (! (= ($generated@@171 ($generated@@9 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@9 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@9 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Real)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@188 () Real)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Real)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Real)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Real)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () Real)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () Real)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Real)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () Real)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () Real)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Real)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () Real)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () Real)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () Real)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () Real)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () Real)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () Real)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () Real)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () Real)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () Real)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@181) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@182) $generated@@46)) (= (type $generated@@183) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@186) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@189) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@190) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@192) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@194) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@196) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@198) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@200) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@202) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@204) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@206) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@208) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@210) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@212) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@214) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@216) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@218) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@220) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@222) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@224) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@226) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@228  (=> (and (= $generated@@181 ($generated@@107 $generated@@182 $generated@@183 $generated@@50 false)) (= $generated@@184 ($generated@@162 0.0))) (=> (and (and (and (and (and (and ($generated@@185 $generated@@186) ($generated@@187 $generated@@186)) (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@46) (=> (and (not (= $generated@@229 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@183 $generated@@229) $generated@@50))) (= ($generated@@49 $generated@@186 $generated@@229) ($generated@@49 $generated@@183 $generated@@229))))
 :pattern ( ($generated@@49 $generated@@186 $generated@@229))
))) (and ($generated@@44 $generated@@183 $generated@@186) (= $generated@@188 ($generated@@162 (- (+ 0.2 0.4) 0.6))))) (and (and ($generated@@185 $generated@@189) ($generated@@187 $generated@@189)) (and (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@46) (=> (and (not (= $generated@@230 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@186 $generated@@230) $generated@@50))) (= ($generated@@49 $generated@@189 $generated@@230) ($generated@@49 $generated@@186 $generated@@230))))
 :pattern ( ($generated@@49 $generated@@189 $generated@@230))
)) ($generated@@44 $generated@@186 $generated@@189)))) (and (and (and ($generated@@185 $generated@@190) ($generated@@187 $generated@@190)) (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@46) (=> (and (not (= $generated@@231 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@189 $generated@@231) $generated@@50))) (= ($generated@@49 $generated@@190 $generated@@231) ($generated@@49 $generated@@189 $generated@@231))))
 :pattern ( ($generated@@49 $generated@@190 $generated@@231))
))) (and ($generated@@44 $generated@@189 $generated@@190) (= $generated@@191 ($generated@@162 120.0))))) (and (and (and (and ($generated@@185 $generated@@192) ($generated@@187 $generated@@192)) (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@46) (=> (and (not (= $generated@@232 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@190 $generated@@232) $generated@@50))) (= ($generated@@49 $generated@@192 $generated@@232) ($generated@@49 $generated@@190 $generated@@232))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@232))
))) (and ($generated@@44 $generated@@190 $generated@@192) (= $generated@@193 ($generated@@162 120.0)))) (and (and ($generated@@185 $generated@@194) ($generated@@187 $generated@@194)) (and (forall (($generated@@233 T@U) ) (!  (=> (= (type $generated@@233) $generated@@46) (=> (and (not (= $generated@@233 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@233) $generated@@50))) (= ($generated@@49 $generated@@194 $generated@@233) ($generated@@49 $generated@@192 $generated@@233))))
 :pattern ( ($generated@@49 $generated@@194 $generated@@233))
)) ($generated@@44 $generated@@192 $generated@@194))))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (not (= ($generated@@162 3.0) 0.0))) (=> (not (= ($generated@@162 3.0) 0.0)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (not (= ($generated@@162 3.0) 0.0))) (=> (not (= ($generated@@162 3.0) 0.0)) (=> (= $generated@@195 ($generated@@162 (+ (/ 20.0 3.0) (/ 4.0 3.0)))) (=> (and (and ($generated@@185 $generated@@196) ($generated@@187 $generated@@196)) (and (forall (($generated@@234 T@U) ) (!  (=> (= (type $generated@@234) $generated@@46) (=> (and (not (= $generated@@234 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@194 $generated@@234) $generated@@50))) (= ($generated@@49 $generated@@196 $generated@@234) ($generated@@49 $generated@@194 $generated@@234))))
 :pattern ( ($generated@@49 $generated@@196 $generated@@234))
)) ($generated@@44 $generated@@194 $generated@@196))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (not (= ($generated@@162 3.0) 0.0))) (=> (not (= ($generated@@162 3.0) 0.0)) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= ($generated@@162 3.0) 0.0))) (=> (not (= ($generated@@162 3.0) 0.0)) (=> (= $generated@@197 ($generated@@162 (- 0.0 (+ (/ 20.0 3.0) (/ 4.0 3.0))))) (=> (and (and (and ($generated@@185 $generated@@198) ($generated@@187 $generated@@198)) (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@46) (=> (and (not (= $generated@@235 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@196 $generated@@235) $generated@@50))) (= ($generated@@49 $generated@@198 $generated@@235) ($generated@@49 $generated@@196 $generated@@235))))
 :pattern ( ($generated@@49 $generated@@198 $generated@@235))
))) (and ($generated@@44 $generated@@196 $generated@@198) (= $generated@@199 ($generated@@162 123.4567)))) (=> (and (and (and (and (and ($generated@@185 $generated@@200) ($generated@@187 $generated@@200)) (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@46) (=> (and (not (= $generated@@236 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@236) $generated@@50))) (= ($generated@@49 $generated@@200 $generated@@236) ($generated@@49 $generated@@198 $generated@@236))))
 :pattern ( ($generated@@49 $generated@@200 $generated@@236))
))) (and ($generated@@44 $generated@@198 $generated@@200) (= $generated@@201 ($generated@@162 (- 0.0 123.4567))))) (and (and (and ($generated@@185 $generated@@202) ($generated@@187 $generated@@202)) (forall (($generated@@237 T@U) ) (!  (=> (= (type $generated@@237) $generated@@46) (=> (and (not (= $generated@@237 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@200 $generated@@237) $generated@@50))) (= ($generated@@49 $generated@@202 $generated@@237) ($generated@@49 $generated@@200 $generated@@237))))
 :pattern ( ($generated@@49 $generated@@202 $generated@@237))
))) (and ($generated@@44 $generated@@200 $generated@@202) (= $generated@@203 ($generated@@162 0.1234))))) (and (and (and (and ($generated@@185 $generated@@204) ($generated@@187 $generated@@204)) (forall (($generated@@238 T@U) ) (!  (=> (= (type $generated@@238) $generated@@46) (=> (and (not (= $generated@@238 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@202 $generated@@238) $generated@@50))) (= ($generated@@49 $generated@@204 $generated@@238) ($generated@@49 $generated@@202 $generated@@238))))
 :pattern ( ($generated@@49 $generated@@204 $generated@@238))
))) (and ($generated@@44 $generated@@202 $generated@@204) (= $generated@@205 ($generated@@162 (- 0.0 0.1234))))) (and (and ($generated@@185 $generated@@206) ($generated@@187 $generated@@206)) (and (forall (($generated@@239 T@U) ) (!  (=> (= (type $generated@@239) $generated@@46) (=> (and (not (= $generated@@239 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@204 $generated@@239) $generated@@50))) (= ($generated@@49 $generated@@206 $generated@@239) ($generated@@49 $generated@@204 $generated@@239))))
 :pattern ( ($generated@@49 $generated@@206 $generated@@239))
)) ($generated@@44 $generated@@204 $generated@@206))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (not (= ($generated@@162 3.0) 0.0))) (=> (not (= ($generated@@162 3.0) 0.0)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= ($generated@@162 3.0) 0.0))) (=> (not (= ($generated@@162 3.0) 0.0)) (=> (= $generated@@207 ($generated@@162 (+ (/ 2.0 3.0) (/ 0.4 3.0)))) (=> (and (and (and ($generated@@185 $generated@@208) ($generated@@187 $generated@@208)) (forall (($generated@@240 T@U) ) (!  (=> (= (type $generated@@240) $generated@@46) (=> (and (not (= $generated@@240 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@206 $generated@@240) $generated@@50))) (= ($generated@@49 $generated@@208 $generated@@240) ($generated@@49 $generated@@206 $generated@@240))))
 :pattern ( ($generated@@49 $generated@@208 $generated@@240))
))) (and ($generated@@44 $generated@@206 $generated@@208) (= $generated@@209 ($generated@@162 0.2)))) (=> (and (and (and (and ($generated@@185 $generated@@210) ($generated@@187 $generated@@210)) (forall (($generated@@241 T@U) ) (!  (=> (= (type $generated@@241) $generated@@46) (=> (and (not (= $generated@@241 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@208 $generated@@241) $generated@@50))) (= ($generated@@49 $generated@@210 $generated@@241) ($generated@@49 $generated@@208 $generated@@241))))
 :pattern ( ($generated@@49 $generated@@210 $generated@@241))
))) (and ($generated@@44 $generated@@208 $generated@@210) (= $generated@@211 ($generated@@162 0.02)))) (and (and (and ($generated@@185 $generated@@212) ($generated@@187 $generated@@212)) (forall (($generated@@242 T@U) ) (!  (=> (= (type $generated@@242) $generated@@46) (=> (and (not (= $generated@@242 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@210 $generated@@242) $generated@@50))) (= ($generated@@49 $generated@@212 $generated@@242) ($generated@@49 $generated@@210 $generated@@242))))
 :pattern ( ($generated@@49 $generated@@212 $generated@@242))
))) (and ($generated@@44 $generated@@210 $generated@@212) (= $generated@@213 ($generated@@162 0.00002))))) (=> (and (and (and (and (and ($generated@@185 $generated@@214) ($generated@@187 $generated@@214)) (forall (($generated@@243 T@U) ) (!  (=> (= (type $generated@@243) $generated@@46) (=> (and (not (= $generated@@243 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@212 $generated@@243) $generated@@50))) (= ($generated@@49 $generated@@214 $generated@@243) ($generated@@49 $generated@@212 $generated@@243))))
 :pattern ( ($generated@@49 $generated@@214 $generated@@243))
))) (and ($generated@@44 $generated@@212 $generated@@214) (= $generated@@215 ($generated@@162 (- 0.0 0.2))))) (and (and (and ($generated@@185 $generated@@216) ($generated@@187 $generated@@216)) (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@46) (=> (and (not (= $generated@@244 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@214 $generated@@244) $generated@@50))) (= ($generated@@49 $generated@@216 $generated@@244) ($generated@@49 $generated@@214 $generated@@244))))
 :pattern ( ($generated@@49 $generated@@216 $generated@@244))
))) (and ($generated@@44 $generated@@214 $generated@@216) (= $generated@@217 ($generated@@162 (- 0.0 0.02)))))) (and (and (and (and ($generated@@185 $generated@@218) ($generated@@187 $generated@@218)) (forall (($generated@@245 T@U) ) (!  (=> (= (type $generated@@245) $generated@@46) (=> (and (not (= $generated@@245 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@216 $generated@@245) $generated@@50))) (= ($generated@@49 $generated@@218 $generated@@245) ($generated@@49 $generated@@216 $generated@@245))))
 :pattern ( ($generated@@49 $generated@@218 $generated@@245))
))) (and ($generated@@44 $generated@@216 $generated@@218) (= $generated@@219 ($generated@@162 (- 0.0 0.00002))))) (and (and ($generated@@185 $generated@@220) ($generated@@187 $generated@@220)) (and (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@46) (=> (and (not (= $generated@@246 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@218 $generated@@246) $generated@@50))) (= ($generated@@49 $generated@@220 $generated@@246) ($generated@@49 $generated@@218 $generated@@246))))
 :pattern ( ($generated@@49 $generated@@220 $generated@@246))
)) ($generated@@44 $generated@@218 $generated@@220))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= ($generated@@162 3.0) 0.0))) (=> (not (= ($generated@@162 3.0) 0.0)) (=> (= $generated@@221 ($generated@@162 (/ 20.0 3.0))) (=> (and (and ($generated@@185 $generated@@222) ($generated@@187 $generated@@222)) (and (forall (($generated@@247 T@U) ) (!  (=> (= (type $generated@@247) $generated@@46) (=> (and (not (= $generated@@247 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@220 $generated@@247) $generated@@50))) (= ($generated@@49 $generated@@222 $generated@@247) ($generated@@49 $generated@@220 $generated@@247))))
 :pattern ( ($generated@@49 $generated@@222 $generated@@247))
)) ($generated@@44 $generated@@220 $generated@@222))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= ($generated@@162 3.0) 0.0))) (=> (not (= ($generated@@162 3.0) 0.0)) (=> (= $generated@@223 ($generated@@162 (/ (- 0.0 20.0) 3.0))) (=> (and (and ($generated@@185 $generated@@224) ($generated@@187 $generated@@224)) (and (forall (($generated@@248 T@U) ) (!  (=> (= (type $generated@@248) $generated@@46) (=> (and (not (= $generated@@248 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@248) $generated@@50))) (= ($generated@@49 $generated@@224 $generated@@248) ($generated@@49 $generated@@222 $generated@@248))))
 :pattern ( ($generated@@49 $generated@@224 $generated@@248))
)) ($generated@@44 $generated@@222 $generated@@224))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= ($generated@@162 (- 0.0 3.0)) 0.0))) (=> (not (= ($generated@@162 (- 0.0 3.0)) 0.0)) (=> (= $generated@@225 ($generated@@162 (/ 20.0 (- 0.0 3.0)))) (=> (and (and (and ($generated@@185 $generated@@226) ($generated@@187 $generated@@226)) (forall (($generated@@249 T@U) ) (!  (=> (= (type $generated@@249) $generated@@46) (=> (and (not (= $generated@@249 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@224 $generated@@249) $generated@@50))) (= ($generated@@49 $generated@@226 $generated@@249) ($generated@@49 $generated@@224 $generated@@249))))
 :pattern ( ($generated@@49 $generated@@226 $generated@@249))
))) (and ($generated@@44 $generated@@224 $generated@@226) (= (ControlFlow 0 2) (- 0 1)))) (not (= ($generated@@162 (- 0.0 3.0)) 0.0)))))))))))))))))))))))))))))))))))))))
(let (($generated@@250  (=> (and (and ($generated@@185 $generated@@183) ($generated@@187 $generated@@183)) (and (= 2 $generated@@227) (= (ControlFlow 0 12) 2))) $generated@@228)))
$generated@@250)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Real) Real)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Real) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Real) ) (! (= ($generated@@163 ($generated@@9 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@9 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@9 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Real)
(declare-fun $generated@@178 () Real)
(declare-fun $generated@@179 () Real)
(declare-fun $generated@@180 () Real)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@184  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (=> (and (and (= $generated@@177 (- $generated@@178 $generated@@178)) (= $generated@@179 ($generated@@157 0.81))) (and (= $generated@@180 (- (+ (* 2.0 $generated@@179) $generated@@177) $generated@@179)) (= (ControlFlow 0 2) (- 0 1)))) (not (= $generated@@180 0.0))))))
(let (($generated@@185  (=> (and (and ($generated@@181 $generated@@175) ($generated@@182 $generated@@175)) (and (= 1 $generated@@183) (= (ControlFlow 0 3) 2))) $generated@@184)))
$generated@@185)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@T T@U) T@U)
(declare-fun $generated@@163 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(= (type ($generated@@157 $generated@@158)) $generated@@159))
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@157 $generated@@160) $generated@@160)
 :pattern ( ($generated@@157 $generated@@160))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 11) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@U) ) (! (= (type ($generated@@162 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@162 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ) (! (let (($generated@@168 (type $generated@@167)))
(= ($generated@@162 $generated@@168 ($generated@@161 $generated@@167)) $generated@@167))
 :pattern ( ($generated@@161 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@161 ($generated@@157 $generated@@169)) ($generated@@157 ($generated@@161 $generated@@169)))
 :pattern ( ($generated@@161 ($generated@@157 $generated@@169)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () (_ BitVec 32))
(declare-fun $generated@@175 (T@U) (_ BitVec 32))
(declare-fun $generated@@176 ((_ BitVec 32)) T@U)
(declare-fun $generated@@177 () (_ BitVec 32))
(declare-fun $generated@@178 () (_ BitVec 32))
(declare-fun $generated@@179 () (_ BitVec 32))
(declare-fun $generated@@180 () (_ BitVec 32))
(declare-fun $generated@@181 () (_ BitVec 32))
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () T@T)
(assert  (and (and (and (and (and (and (and (= (type $generated@@170) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@171) $generated@@47)) (= (type $generated@@172) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@173) ($generated@@50 $generated@@4))) (forall (($generated@@186 (_ BitVec 32)) ) (! (= ($generated@@175 ($generated@@176 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@176 $generated@@186))
))) (= ($generated@@1 $generated@@185) 12)) (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@185) (= ($generated@@176 ($generated@@175 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@175 $generated@@187))
))) (forall (($generated@@188 (_ BitVec 32)) ) (! (= (type ($generated@@176 $generated@@188)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@188))
))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@189  (=> (and (and (= $generated@@170 ($generated@@45 $generated@@171 $generated@@172 $generated@@173 false)) (= $generated@@174 ($generated@@175 ($generated@@157 ($generated@@176 #x00000000))))) (and (= $generated@@177 ($generated@@175 ($generated@@157 ($generated@@176 #x0000000f)))) (= $generated@@178 (bvadd (bvsub (bvadd (bvadd $generated@@174 $generated@@177) $generated@@177) $generated@@174) #x00000001)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@177 #x00000000))) (=> (not (= $generated@@177 #x00000000)) (=> (and (and (= $generated@@179 (bvudiv $generated@@178 $generated@@177)) (= $generated@@180 (bvsub $generated@@178 $generated@@179))) (and (= $generated@@181 ($generated@@175 ($generated@@157 ($generated@@176 #x00000011)))) (= (ControlFlow 0 2) (- 0 1)))) (not (= ($generated@@175 ($generated@@157 ($generated@@176 #x00000003))) #x00000000))))))))
(let (($generated@@190  (=> (and (and ($generated@@182 $generated@@172) ($generated@@183 $generated@@172)) (and (= 1 $generated@@184) (= (ControlFlow 0 4) 2))) $generated@@189)))
$generated@@190)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@T T@U) T@U)
(declare-fun $generated@@163 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(= (type ($generated@@157 $generated@@158)) $generated@@159))
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@157 $generated@@160) $generated@@160)
 :pattern ( ($generated@@157 $generated@@160))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 11) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@U) ) (! (= (type ($generated@@162 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@162 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ) (! (let (($generated@@168 (type $generated@@167)))
(= ($generated@@162 $generated@@168 ($generated@@161 $generated@@167)) $generated@@167))
 :pattern ( ($generated@@161 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@161 ($generated@@157 $generated@@169)) ($generated@@157 ($generated@@161 $generated@@169)))
 :pattern ( ($generated@@161 ($generated@@157 $generated@@169)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () (_ BitVec 53))
(declare-fun $generated@@175 (T@U) (_ BitVec 53))
(declare-fun $generated@@176 ((_ BitVec 53)) T@U)
(declare-fun $generated@@177 () (_ BitVec 53))
(declare-fun $generated@@178 () (_ BitVec 53))
(declare-fun $generated@@179 () (_ BitVec 53))
(declare-fun $generated@@180 () (_ BitVec 53))
(declare-fun $generated@@181 () (_ BitVec 53))
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () T@T)
(assert  (and (and (and (and (and (and (and (= (type $generated@@170) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@171) $generated@@47)) (= (type $generated@@172) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@173) ($generated@@50 $generated@@4))) (forall (($generated@@186 (_ BitVec 53)) ) (! (= ($generated@@175 ($generated@@176 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@176 $generated@@186))
))) (= ($generated@@1 $generated@@185) 12)) (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@185) (= ($generated@@176 ($generated@@175 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@175 $generated@@187))
))) (forall (($generated@@188 (_ BitVec 53)) ) (! (= (type ($generated@@176 $generated@@188)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@188))
))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@189  (=> (and (and (= $generated@@170 ($generated@@45 $generated@@171 $generated@@172 $generated@@173 false)) (= $generated@@174 ($generated@@175 ($generated@@157 ($generated@@176 #b00000000000000000000000000000000000000000000000000000))))) (and (= $generated@@177 ($generated@@175 ($generated@@157 ($generated@@176 #b00000000000000000000000000000000000000000000000001111)))) (= $generated@@178 (bvadd (bvsub (bvadd (bvadd $generated@@174 $generated@@177) $generated@@177) $generated@@174) #b00000000000000000000000000000000000000000000000000001)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@177 #b00000000000000000000000000000000000000000000000000000))) (=> (not (= $generated@@177 #b00000000000000000000000000000000000000000000000000000)) (=> (and (and (= $generated@@179 (bvudiv $generated@@178 $generated@@177)) (= $generated@@180 (bvsub $generated@@178 $generated@@179))) (and (= $generated@@181 ($generated@@175 ($generated@@157 ($generated@@176 #b00000000000000000000000000000000000000000000000010001)))) (= (ControlFlow 0 2) (- 0 1)))) (not (= ($generated@@175 ($generated@@157 ($generated@@176 #b00000000000000000000000000000000000000000000000000011))) #b00000000000000000000000000000000000000000000000000000))))))))
(let (($generated@@190  (=> (and (and ($generated@@182 $generated@@172) ($generated@@183 $generated@@172)) (and (= 1 $generated@@184) (= (ControlFlow 0 4) 2))) $generated@@189)))
$generated@@190)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 ((_ BitVec 1)) T@U)
(declare-fun $generated@@136 (T@U) (_ BitVec 1))
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 ((_ BitVec 2)) T@U)
(declare-fun $generated@@144 (T@U) (_ BitVec 2))
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 ((_ BitVec 3)) T@U)
(declare-fun $generated@@152 (T@U) (_ BitVec 3))
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@159 ((_ BitVec 4)) T@U)
(declare-fun $generated@@160 (T@U) (_ BitVec 4))
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@167 ((_ BitVec 7)) T@U)
(declare-fun $generated@@168 (T@U) (_ BitVec 7))
(declare-fun $generated@@174 () T@T)
(declare-fun $generated@@175 ((_ BitVec 8)) T@U)
(declare-fun $generated@@176 (T@U) (_ BitVec 8))
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@183 ((_ BitVec 15)) T@U)
(declare-fun $generated@@184 (T@U) (_ BitVec 15))
(declare-fun $generated@@190 () T@T)
(declare-fun $generated@@191 ((_ BitVec 16)) T@U)
(declare-fun $generated@@192 (T@U) (_ BitVec 16))
(declare-fun $generated@@198 () T@T)
(declare-fun $generated@@199 ((_ BitVec 32)) T@U)
(declare-fun $generated@@200 (T@U) (_ BitVec 32))
(declare-fun $generated@@206 () T@T)
(declare-fun $generated@@207 ((_ BitVec 53)) T@U)
(declare-fun $generated@@208 (T@U) (_ BitVec 53))
(declare-fun $generated@@214 () T@T)
(declare-fun $generated@@215 ((_ BitVec 100)) T@U)
(declare-fun $generated@@216 (T@U) (_ BitVec 100))
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 () T@T)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@249 () T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) T@U)
(declare-fun $generated@@260 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@261 (T@T T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@315 (T@U T@U) T@U)
(declare-fun $generated@@316 (T@U T@U) Bool)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@335 (Int) Int)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@341 (T@U) Bool)
(declare-fun $generated@@342 (T@U T@U T@U) Bool)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@354 (T@T) T@U)
(declare-fun $generated@@355 (T@U) Int)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@367 (T@U) Int)
(declare-fun $generated@@368 (T@T) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@T T@T) T@U)
(declare-fun $generated@@375 (T@T T@T) T@T)
(declare-fun $generated@@376 (T@T) T@T)
(declare-fun $generated@@377 (T@T) T@T)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@T T@T) T@U)
(declare-fun $generated@@393 (T@T T@T) T@T)
(declare-fun $generated@@394 (T@T) T@T)
(declare-fun $generated@@395 (T@T) T@T)
(declare-fun $generated@@412 (T@T T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@477 (T@U T@U) T@U)
(declare-fun $generated@@485 (T@U T@U) T@U)
(declare-fun $generated@@493 (T@T) T@U)
(declare-fun $generated@@517 () T@T)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@560 (T@U Int) T@U)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@597 (T@U) Int)
(declare-fun $generated@@598 (T@U) Int)
(declare-fun $generated@@615 (T@U) T@U)
(declare-fun $generated@@675 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (and (forall (($generated@@137 (_ BitVec 1)) ) (! (= ($generated@@136 ($generated@@135 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@135 $generated@@137))
)) (= ($generated@@1 $generated@@134) 14)) (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@134) (= ($generated@@135 ($generated@@136 $generated@@138)) $generated@@138))
 :pattern ( ($generated@@136 $generated@@138))
))) (forall (($generated@@139 (_ BitVec 1)) ) (! (= (type ($generated@@135 $generated@@139)) $generated@@134)
 :pattern ( ($generated@@135 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@134) (= (type $generated@@141) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@140 ($generated@@77 1) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140 ($generated@@77 1) $generated@@141))
)))
(assert  (and (and (and (forall (($generated@@145 (_ BitVec 2)) ) (! (= ($generated@@144 ($generated@@143 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@145))
)) (= ($generated@@1 $generated@@142) 15)) (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@142) (= ($generated@@143 ($generated@@144 $generated@@146)) $generated@@146))
 :pattern ( ($generated@@144 $generated@@146))
))) (forall (($generated@@147 (_ BitVec 2)) ) (! (= (type ($generated@@143 $generated@@147)) $generated@@142)
 :pattern ( ($generated@@143 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@142) (= (type $generated@@149) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@148 ($generated@@77 2) $generated@@149))
 :pattern ( ($generated@@76 $generated@@148 ($generated@@77 2) $generated@@149))
)))
(assert  (and (and (and (forall (($generated@@153 (_ BitVec 3)) ) (! (= ($generated@@152 ($generated@@151 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@153))
)) (= ($generated@@1 $generated@@150) 16)) (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@150) (= ($generated@@151 ($generated@@152 $generated@@154)) $generated@@154))
 :pattern ( ($generated@@152 $generated@@154))
))) (forall (($generated@@155 (_ BitVec 3)) ) (! (= (type ($generated@@151 $generated@@155)) $generated@@150)
 :pattern ( ($generated@@151 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@150) (= (type $generated@@157) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@156 ($generated@@77 3) $generated@@157))
 :pattern ( ($generated@@76 $generated@@156 ($generated@@77 3) $generated@@157))
)))
(assert  (and (and (and (forall (($generated@@161 (_ BitVec 4)) ) (! (= ($generated@@160 ($generated@@159 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@161))
)) (= ($generated@@1 $generated@@158) 17)) (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@158) (= ($generated@@159 ($generated@@160 $generated@@162)) $generated@@162))
 :pattern ( ($generated@@160 $generated@@162))
))) (forall (($generated@@163 (_ BitVec 4)) ) (! (= (type ($generated@@159 $generated@@163)) $generated@@158)
 :pattern ( ($generated@@159 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@158) (= (type $generated@@165) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@164 ($generated@@77 4) $generated@@165))
 :pattern ( ($generated@@76 $generated@@164 ($generated@@77 4) $generated@@165))
)))
(assert  (and (and (and (forall (($generated@@169 (_ BitVec 7)) ) (! (= ($generated@@168 ($generated@@167 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@169))
)) (= ($generated@@1 $generated@@166) 18)) (forall (($generated@@170 T@U) ) (!  (=> (= (type $generated@@170) $generated@@166) (= ($generated@@167 ($generated@@168 $generated@@170)) $generated@@170))
 :pattern ( ($generated@@168 $generated@@170))
))) (forall (($generated@@171 (_ BitVec 7)) ) (! (= (type ($generated@@167 $generated@@171)) $generated@@166)
 :pattern ( ($generated@@167 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (= (type $generated@@172) $generated@@166) (= (type $generated@@173) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@172 ($generated@@77 7) $generated@@173))
 :pattern ( ($generated@@76 $generated@@172 ($generated@@77 7) $generated@@173))
)))
(assert  (and (and (and (forall (($generated@@177 (_ BitVec 8)) ) (! (= ($generated@@176 ($generated@@175 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@177))
)) (= ($generated@@1 $generated@@174) 19)) (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@174) (= ($generated@@175 ($generated@@176 $generated@@178)) $generated@@178))
 :pattern ( ($generated@@176 $generated@@178))
))) (forall (($generated@@179 (_ BitVec 8)) ) (! (= (type ($generated@@175 $generated@@179)) $generated@@174)
 :pattern ( ($generated@@175 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (= (type $generated@@180) $generated@@174) (= (type $generated@@181) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@180 ($generated@@77 8) $generated@@181))
 :pattern ( ($generated@@76 $generated@@180 ($generated@@77 8) $generated@@181))
)))
(assert  (and (and (and (forall (($generated@@185 (_ BitVec 15)) ) (! (= ($generated@@184 ($generated@@183 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@185))
)) (= ($generated@@1 $generated@@182) 20)) (forall (($generated@@186 T@U) ) (!  (=> (= (type $generated@@186) $generated@@182) (= ($generated@@183 ($generated@@184 $generated@@186)) $generated@@186))
 :pattern ( ($generated@@184 $generated@@186))
))) (forall (($generated@@187 (_ BitVec 15)) ) (! (= (type ($generated@@183 $generated@@187)) $generated@@182)
 :pattern ( ($generated@@183 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (= (type $generated@@188) $generated@@182) (= (type $generated@@189) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@188 ($generated@@77 15) $generated@@189))
 :pattern ( ($generated@@76 $generated@@188 ($generated@@77 15) $generated@@189))
)))
(assert  (and (and (and (forall (($generated@@193 (_ BitVec 16)) ) (! (= ($generated@@192 ($generated@@191 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@191 $generated@@193))
)) (= ($generated@@1 $generated@@190) 21)) (forall (($generated@@194 T@U) ) (!  (=> (= (type $generated@@194) $generated@@190) (= ($generated@@191 ($generated@@192 $generated@@194)) $generated@@194))
 :pattern ( ($generated@@192 $generated@@194))
))) (forall (($generated@@195 (_ BitVec 16)) ) (! (= (type ($generated@@191 $generated@@195)) $generated@@190)
 :pattern ( ($generated@@191 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (= (type $generated@@196) $generated@@190) (= (type $generated@@197) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@196 ($generated@@77 16) $generated@@197))
 :pattern ( ($generated@@76 $generated@@196 ($generated@@77 16) $generated@@197))
)))
(assert  (and (and (and (forall (($generated@@201 (_ BitVec 32)) ) (! (= ($generated@@200 ($generated@@199 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@199 $generated@@201))
)) (= ($generated@@1 $generated@@198) 22)) (forall (($generated@@202 T@U) ) (!  (=> (= (type $generated@@202) $generated@@198) (= ($generated@@199 ($generated@@200 $generated@@202)) $generated@@202))
 :pattern ( ($generated@@200 $generated@@202))
))) (forall (($generated@@203 (_ BitVec 32)) ) (! (= (type ($generated@@199 $generated@@203)) $generated@@198)
 :pattern ( ($generated@@199 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (= (type $generated@@204) $generated@@198) (= (type $generated@@205) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@204 ($generated@@77 32) $generated@@205))
 :pattern ( ($generated@@76 $generated@@204 ($generated@@77 32) $generated@@205))
)))
(assert  (and (and (and (forall (($generated@@209 (_ BitVec 53)) ) (! (= ($generated@@208 ($generated@@207 $generated@@209)) $generated@@209)
 :pattern ( ($generated@@207 $generated@@209))
)) (= ($generated@@1 $generated@@206) 23)) (forall (($generated@@210 T@U) ) (!  (=> (= (type $generated@@210) $generated@@206) (= ($generated@@207 ($generated@@208 $generated@@210)) $generated@@210))
 :pattern ( ($generated@@208 $generated@@210))
))) (forall (($generated@@211 (_ BitVec 53)) ) (! (= (type ($generated@@207 $generated@@211)) $generated@@206)
 :pattern ( ($generated@@207 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) $generated@@206) (= (type $generated@@213) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@212 ($generated@@77 53) $generated@@213))
 :pattern ( ($generated@@76 $generated@@212 ($generated@@77 53) $generated@@213))
)))
(assert  (and (and (and (forall (($generated@@217 (_ BitVec 100)) ) (! (= ($generated@@216 ($generated@@215 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@215 $generated@@217))
)) (= ($generated@@1 $generated@@214) 24)) (forall (($generated@@218 T@U) ) (!  (=> (= (type $generated@@218) $generated@@214) (= ($generated@@215 ($generated@@216 $generated@@218)) $generated@@218))
 :pattern ( ($generated@@216 $generated@@218))
))) (forall (($generated@@219 (_ BitVec 100)) ) (! (= (type ($generated@@215 $generated@@219)) $generated@@214)
 :pattern ( ($generated@@215 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (= (type $generated@@220) $generated@@214) (= (type $generated@@221) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@220 ($generated@@77 100) $generated@@221))
 :pattern ( ($generated@@76 $generated@@220 ($generated@@77 100) $generated@@221))
)))
(assert (= (type $generated@@222) $generated@@66))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@158) (= (type $generated@@224) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@223 $generated@@222 $generated@@224))
 :pattern ( ($generated@@76 $generated@@223 $generated@@222 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@2) ($generated@@225 $generated@@226 ($generated@@77 0)))
 :pattern ( ($generated@@225 $generated@@226 ($generated@@77 0)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@134) ($generated@@225 $generated@@227 ($generated@@77 1)))
 :pattern ( ($generated@@225 $generated@@227 ($generated@@77 1)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@142) ($generated@@225 $generated@@228 ($generated@@77 2)))
 :pattern ( ($generated@@225 $generated@@228 ($generated@@77 2)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@150) ($generated@@225 $generated@@229 ($generated@@77 3)))
 :pattern ( ($generated@@225 $generated@@229 ($generated@@77 3)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@158) ($generated@@225 $generated@@230 ($generated@@77 4)))
 :pattern ( ($generated@@225 $generated@@230 ($generated@@77 4)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@166) ($generated@@225 $generated@@231 ($generated@@77 7)))
 :pattern ( ($generated@@225 $generated@@231 ($generated@@77 7)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@174) ($generated@@225 $generated@@232 ($generated@@77 8)))
 :pattern ( ($generated@@225 $generated@@232 ($generated@@77 8)))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (= (type $generated@@233) $generated@@182) ($generated@@225 $generated@@233 ($generated@@77 15)))
 :pattern ( ($generated@@225 $generated@@233 ($generated@@77 15)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (= (type $generated@@234) $generated@@190) ($generated@@225 $generated@@234 ($generated@@77 16)))
 :pattern ( ($generated@@225 $generated@@234 ($generated@@77 16)))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@198) ($generated@@225 $generated@@235 ($generated@@77 32)))
 :pattern ( ($generated@@225 $generated@@235 ($generated@@77 32)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@206) ($generated@@225 $generated@@236 ($generated@@77 53)))
 :pattern ( ($generated@@225 $generated@@236 ($generated@@77 53)))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (= (type $generated@@237) $generated@@214) ($generated@@225 $generated@@237 ($generated@@77 100)))
 :pattern ( ($generated@@225 $generated@@237 ($generated@@77 100)))
)))
(assert  (and (= ($generated@@1 $generated@@240) 25) (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@66)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@66) (= (type $generated@@244) $generated@@66)) (= (type $generated@@245) $generated@@240)) ($generated@@225 $generated@@245 ($generated@@239 $generated@@243 $generated@@244))) ($generated@@238 $generated@@245))
 :pattern ( ($generated@@238 $generated@@245) ($generated@@225 $generated@@245 ($generated@@239 $generated@@243 $generated@@244)))
)))
(assert  (and (and (= ($generated@@1 $generated@@249) 26) (forall (($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@250)) $generated@@249)
 :pattern ( ($generated@@247 $generated@@250))
))) (forall (($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@251)) $generated@@249)
 :pattern ( ($generated@@248 $generated@@251))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) $generated@@240) (= (type $generated@@253) $generated@@240)) true) (= ($generated@@246 $generated@@252 $generated@@253)  (and (= ($generated@@247 $generated@@252) ($generated@@247 $generated@@253)) (= ($generated@@248 $generated@@252) ($generated@@248 $generated@@253)))))
 :pattern ( ($generated@@246 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@254 $generated@@256)) $generated@@66)
 :pattern ( ($generated@@254 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@257) ($generated@@78 $generated@@249 $generated@@2)) (= (type $generated@@258) $generated@@66)) ($generated@@225 $generated@@257 ($generated@@254 $generated@@258))) ($generated@@255 $generated@@257))
 :pattern ( ($generated@@225 $generated@@257 ($generated@@254 $generated@@258)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@265 $generated@@266)) 27)) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@267 $generated@@268)) $generated@@267)
 :pattern ( ($generated@@261 $generated@@267 $generated@@268))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= ($generated@@263 ($generated@@261 $generated@@269 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@261 $generated@@269 $generated@@270))
))) (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@263 (type $generated@@271))))
(= (type ($generated@@259 $generated@@271 $generated@@272 $generated@@273)) $generated@@274))
 :pattern ( ($generated@@259 $generated@@271 $generated@@272 $generated@@273))
))) (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (! (let (($generated@@279 (type $generated@@278)))
(let (($generated@@280 (type $generated@@276)))
(= (type ($generated@@264 $generated@@275 $generated@@276 $generated@@277 $generated@@278)) ($generated@@261 $generated@@280 $generated@@279))))
 :pattern ( ($generated@@264 $generated@@275 $generated@@276 $generated@@277 $generated@@278))
))) (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@263 (type $generated@@281))))
 (=> (= (type $generated@@284) $generated@@285) (= ($generated@@259 ($generated@@264 $generated@@281 $generated@@282 $generated@@283 $generated@@284) $generated@@282 $generated@@283) $generated@@284)))
 :weight 0
))) (and (and (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (or (= $generated@@288 $generated@@290) (= ($generated@@259 ($generated@@264 $generated@@287 $generated@@288 $generated@@289 $generated@@286) $generated@@290 $generated@@291) ($generated@@259 $generated@@287 $generated@@290 $generated@@291)))
 :weight 0
)) (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (or (= $generated@@295 $generated@@297) (= ($generated@@259 ($generated@@264 $generated@@293 $generated@@294 $generated@@295 $generated@@292) $generated@@296 $generated@@297) ($generated@@259 $generated@@293 $generated@@296 $generated@@297)))
 :weight 0
))) (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (or true (= ($generated@@259 ($generated@@264 $generated@@299 $generated@@300 $generated@@301 $generated@@298) $generated@@302 $generated@@303) ($generated@@259 $generated@@299 $generated@@302 $generated@@303)))
 :weight 0
)))) (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 Bool) ) (! (= (type ($generated@@260 $generated@@304 $generated@@305 $generated@@306 $generated@@307)) ($generated@@261 $generated@@79 $generated@@4))
 :pattern ( ($generated@@260 $generated@@304 $generated@@305 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 Bool) ($generated@@312 T@U) ($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@69 (type $generated@@313))))
 (=> (and (and (and (and (= (type $generated@@308) $generated@@79) (= (type $generated@@309) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@310) ($generated@@68 $generated@@4))) (= (type $generated@@312) $generated@@79)) (= (type $generated@@313) ($generated@@68 $generated@@314))) (= ($generated@@0 ($generated@@259 ($generated@@260 $generated@@308 $generated@@309 $generated@@310 $generated@@311) $generated@@312 $generated@@313))  (=> (and (not (= $generated@@312 $generated@@308)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@309 $generated@@312) $generated@@310))) $generated@@311))))
 :pattern ( ($generated@@259 ($generated@@260 $generated@@308 $generated@@309 $generated@@310 $generated@@311) $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (! (= (type ($generated@@315 $generated@@317 $generated@@318)) $generated@@240)
 :pattern ( ($generated@@315 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (and (= (type $generated@@319) $generated@@66) (= (type $generated@@320) $generated@@66)) (= (type $generated@@321) $generated@@249)) (= (type $generated@@322) $generated@@249)) (= ($generated@@225 ($generated@@315 $generated@@321 $generated@@322) ($generated@@239 $generated@@319 $generated@@320))  (and ($generated@@316 $generated@@321 $generated@@319) ($generated@@316 $generated@@322 $generated@@320))))
 :pattern ( ($generated@@225 ($generated@@315 $generated@@321 $generated@@322) ($generated@@239 $generated@@319 $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@240) (= (type $generated@@324) $generated@@240)) (= ($generated@@246 $generated@@323 $generated@@324) (= $generated@@323 $generated@@324)))
 :pattern ( ($generated@@246 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@66)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@78 $generated@@249 $generated@@4)) (= (type $generated@@328) $generated@@66)) (= ($generated@@225 $generated@@327 ($generated@@325 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@249) ($generated@@0 ($generated@@83 $generated@@327 $generated@@329))) ($generated@@316 $generated@@329 $generated@@328))
 :pattern ( ($generated@@83 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@225 $generated@@327 ($generated@@325 $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ) (! (= (type ($generated@@330 $generated@@331)) $generated@@66)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@332) ($generated@@78 $generated@@249 $generated@@4)) (= (type $generated@@333) $generated@@66)) (= ($generated@@225 $generated@@332 ($generated@@330 $generated@@333)) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@249) ($generated@@0 ($generated@@83 $generated@@332 $generated@@334))) ($generated@@316 $generated@@334 $generated@@333))
 :pattern ( ($generated@@83 $generated@@332 $generated@@334))
))))
 :pattern ( ($generated@@225 $generated@@332 ($generated@@330 $generated@@333)))
)))
(assert (forall (($generated@@336 Int) ) (! (= ($generated@@335 $generated@@336) $generated@@336)
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
(= (type ($generated@@337 $generated@@338)) $generated@@339))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (= ($generated@@337 $generated@@340) $generated@@340)
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@343) $generated@@66) (= (type $generated@@344) $generated@@66)) (= (type $generated@@345) $generated@@249)) (= (type $generated@@346) $generated@@249)) (= (type $generated@@347) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@341 $generated@@347)) (= ($generated@@76 ($generated@@315 $generated@@345 $generated@@346) ($generated@@239 $generated@@343 $generated@@344) $generated@@347)  (and ($generated@@342 $generated@@345 $generated@@343 $generated@@347) ($generated@@342 $generated@@346 $generated@@344 $generated@@347))))
 :pattern ( ($generated@@76 ($generated@@315 $generated@@345 $generated@@346) ($generated@@239 $generated@@343 $generated@@344) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (= (type ($generated@@348 $generated@@349)) $generated@@70)
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@240) (= ($generated@@238 $generated@@350) (= ($generated@@348 $generated@@350) $generated@@61)))
 :pattern ( ($generated@@238 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@240) ($generated@@238 $generated@@351)) (exists (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (and (and (= (type $generated@@352) $generated@@249) (= (type $generated@@353) $generated@@249)) (= $generated@@351 ($generated@@315 $generated@@352 $generated@@353)))
 :no-pattern (type $generated@@352)
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
)))
 :pattern ( ($generated@@238 $generated@@351))
)))
(assert  (and (and (forall (($generated@@358 T@T) ) (= ($generated@@1 ($generated@@356 $generated@@358)) 28)) (forall (($generated@@359 T@T) ) (! (= ($generated@@357 ($generated@@356 $generated@@359)) $generated@@359)
 :pattern ( ($generated@@356 $generated@@359))
))) (forall (($generated@@360 T@T) ) (! (= (type ($generated@@354 $generated@@360)) ($generated@@356 $generated@@360))
 :pattern ( ($generated@@354 $generated@@360))
))))
(assert (forall (($generated@@361 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@361)) 0)
 :pattern ( ($generated@@354 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) $generated@@249)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@66) (= (type $generated@@366) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@342 ($generated@@362 $generated@@364) $generated@@365 $generated@@366) ($generated@@76 $generated@@364 $generated@@365 $generated@@366)))
 :pattern ( ($generated@@342 ($generated@@362 $generated@@364) $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@369 T@T) ) (! (= (type ($generated@@368 $generated@@369)) ($generated@@78 $generated@@369 $generated@@2))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@81 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@78 $generated@@371 $generated@@2)) (and (= (= ($generated@@367 $generated@@370) 0) (= $generated@@370 ($generated@@368 $generated@@371))) (=> (not (= ($generated@@367 $generated@@370) 0)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (< 0 ($generated ($generated@@83 $generated@@370 $generated@@372))))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert  (and (and (and (and (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (= ($generated@@1 ($generated@@375 $generated@@378 $generated@@379)) 29)) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= ($generated@@376 ($generated@@375 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@375 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@377 ($generated@@375 $generated@@382 $generated@@383)) $generated@@383)
 :pattern ( ($generated@@375 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@376 (type $generated@@384))))
(= (type ($generated@@373 $generated@@384)) ($generated@@78 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@384))
))) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= (type ($generated@@374 $generated@@386 $generated@@387)) ($generated@@375 $generated@@386 $generated@@387))
 :pattern ( ($generated@@374 $generated@@386 $generated@@387))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@T) ) (! (let (($generated@@390 (type $generated@@388)))
 (not ($generated@@0 ($generated@@83 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388))))
 :pattern ( (let (($generated@@390 (type $generated@@388)))
($generated@@83 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388)))
)))
(assert  (and (and (and (and (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (= ($generated@@1 ($generated@@393 $generated@@396 $generated@@397)) 30)) (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (! (= ($generated@@394 ($generated@@393 $generated@@398 $generated@@399)) $generated@@398)
 :pattern ( ($generated@@393 $generated@@398 $generated@@399))
))) (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (! (= ($generated@@395 ($generated@@393 $generated@@400 $generated@@401)) $generated@@401)
 :pattern ( ($generated@@393 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@394 (type $generated@@402))))
(= (type ($generated@@391 $generated@@402)) ($generated@@78 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@402))
))) (forall (($generated@@404 T@T) ($generated@@405 T@T) ) (! (= (type ($generated@@392 $generated@@404 $generated@@405)) ($generated@@393 $generated@@404 $generated@@405))
 :pattern ( ($generated@@392 $generated@@404 $generated@@405))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@T) ) (! (let (($generated@@408 (type $generated@@406)))
 (not ($generated@@0 ($generated@@83 ($generated@@391 ($generated@@392 $generated@@408 $generated@@407)) $generated@@406))))
 :pattern ( (let (($generated@@408 (type $generated@@406)))
($generated@@83 ($generated@@391 ($generated@@392 $generated@@408 $generated@@407)) $generated@@406)))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@81 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@78 $generated@@410 $generated@@2)) (= ($generated@@255 $generated@@409) (forall (($generated@@411 T@U) ) (!  (=> (= (type $generated@@411) $generated@@410) (and (<= 0 ($generated ($generated@@83 $generated@@409 $generated@@411))) (<= ($generated ($generated@@83 $generated@@409 $generated@@411)) ($generated@@367 $generated@@409))))
 :pattern ( ($generated@@83 $generated@@409 $generated@@411))
)))))
 :pattern ( ($generated@@255 $generated@@409))
)))
(assert (forall (($generated@@413 T@T) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@413)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@249) ($generated@@316 $generated@@415 $generated@@222)) (and (= ($generated@@362 ($generated@@412 $generated@@158 $generated@@415)) $generated@@415) ($generated@@225 ($generated@@412 $generated@@158 $generated@@415) $generated@@222)))
 :pattern ( ($generated@@316 $generated@@415 $generated@@222))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@377 (type $generated@@416))))
(let (($generated@@418 ($generated@@376 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@375 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@374 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@416) $generated@@419)))
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@373 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@377 (type $generated@@421))))
(= (type ($generated@@420 $generated@@421)) ($generated@@78 $generated@@422 $generated@@4)))
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@377 (type $generated@@423))))
(let (($generated@@425 ($generated@@376 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@375 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@374 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@424) ($generated@@0 ($generated@@83 ($generated@@420 $generated@@423) $generated@@426)))
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@420 $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@395 (type $generated@@427))))
(let (($generated@@429 ($generated@@394 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@393 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@392 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) ($generated@@0 ($generated@@83 ($generated@@391 $generated@@427) $generated@@430)))
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@391 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@395 (type $generated@@432))))
(= (type ($generated@@431 $generated@@432)) ($generated@@78 $generated@@433 $generated@@4)))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@395 (type $generated@@434))))
(let (($generated@@436 ($generated@@394 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@393 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@392 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@435) ($generated@@0 ($generated@@83 ($generated@@431 $generated@@434) $generated@@437)))
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@431 $generated@@434))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@78 $generated@@249 $generated@@2)) (= (type $generated@@439) $generated@@66)) (= ($generated@@225 $generated@@438 ($generated@@254 $generated@@439)) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@249) (< 0 ($generated ($generated@@83 $generated@@438 $generated@@440)))) ($generated@@316 $generated@@440 $generated@@439))
 :pattern ( ($generated@@83 $generated@@438 $generated@@440))
))))
 :pattern ( ($generated@@225 $generated@@438 ($generated@@254 $generated@@439)))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (= (type $generated@@441) ($generated@@78 $generated@@249 $generated@@4)) (= (type $generated@@442) $generated@@66)) (= (type $generated@@443) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@441 ($generated@@325 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@249) ($generated@@0 ($generated@@83 $generated@@441 $generated@@444))) ($generated@@342 $generated@@444 $generated@@442 $generated@@443))
 :pattern ( ($generated@@83 $generated@@441 $generated@@444))
))))
 :pattern ( ($generated@@76 $generated@@441 ($generated@@325 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (= (type $generated@@445) ($generated@@78 $generated@@249 $generated@@4)) (= (type $generated@@446) $generated@@66)) (= (type $generated@@447) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@445 ($generated@@330 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@249) ($generated@@0 ($generated@@83 $generated@@445 $generated@@448))) ($generated@@342 $generated@@448 $generated@@446 $generated@@447))
 :pattern ( ($generated@@83 $generated@@445 $generated@@448))
))))
 :pattern ( ($generated@@76 $generated@@445 ($generated@@330 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 (type $generated@@449)))
(= ($generated ($generated@@83 ($generated@@368 $generated@@450) $generated@@449)) 0))
 :pattern ( (let (($generated@@450 (type $generated@@449)))
($generated@@83 ($generated@@368 $generated@@450) $generated@@449)))
)))
(assert  (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@453)) ($generated@@78 $generated@@249 $generated@@4))
 :pattern ( ($generated@@451 $generated@@453))
)) (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@377 (type $generated@@454))))
(let (($generated@@456 ($generated@@376 (type $generated@@454))))
(= (type ($generated@@452 $generated@@454)) ($generated@@78 $generated@@456 $generated@@455))))
 :pattern ( ($generated@@452 $generated@@454))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) ($generated@@375 $generated@@249 $generated@@249)) (= (type $generated@@458) $generated@@249)) (= ($generated@@0 ($generated@@83 ($generated@@451 $generated@@457) $generated@@458))  (and ($generated@@0 ($generated@@83 ($generated@@373 $generated@@457) ($generated@@247 ($generated@@412 $generated@@240 $generated@@458)))) (= ($generated@@83 ($generated@@452 $generated@@457) ($generated@@247 ($generated@@412 $generated@@240 $generated@@458))) ($generated@@248 ($generated@@412 $generated@@240 $generated@@458))))))
 :pattern ( ($generated@@83 ($generated@@451 $generated@@457) $generated@@458))
)))
(assert  (and (forall (($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@461)) ($generated@@78 $generated@@249 $generated@@4))
 :pattern ( ($generated@@459 $generated@@461))
)) (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@395 (type $generated@@462))))
(let (($generated@@464 ($generated@@394 (type $generated@@462))))
(= (type ($generated@@460 $generated@@462)) ($generated@@78 $generated@@464 $generated@@463))))
 :pattern ( ($generated@@460 $generated@@462))
))))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) ($generated@@393 $generated@@249 $generated@@249)) (= (type $generated@@466) $generated@@249)) (= ($generated@@0 ($generated@@83 ($generated@@459 $generated@@465) $generated@@466))  (and ($generated@@0 ($generated@@83 ($generated@@391 $generated@@465) ($generated@@247 ($generated@@412 $generated@@240 $generated@@466)))) (= ($generated@@83 ($generated@@460 $generated@@465) ($generated@@247 ($generated@@412 $generated@@240 $generated@@466))) ($generated@@248 ($generated@@412 $generated@@240 $generated@@466))))))
 :pattern ( ($generated@@83 ($generated@@459 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (! (let (($generated@@469 (type $generated@@468)))
(let (($generated@@470 ($generated@@376 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@375 $generated@@470 $generated@@469)) (= ($generated@@0 ($generated@@83 ($generated@@420 $generated@@467) $generated@@468)) (exists (($generated@@471 T@U) ) (!  (and (= (type $generated@@471) $generated@@470) (and ($generated@@0 ($generated@@83 ($generated@@373 $generated@@467) $generated@@471)) (= $generated@@468 ($generated@@83 ($generated@@452 $generated@@467) $generated@@471))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@467) $generated@@471))
 :pattern ( ($generated@@83 ($generated@@452 $generated@@467) $generated@@471))
))))))
 :pattern ( ($generated@@83 ($generated@@420 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (let (($generated@@474 (type $generated@@473)))
(let (($generated@@475 ($generated@@394 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@393 $generated@@475 $generated@@474)) (= ($generated@@0 ($generated@@83 ($generated@@431 $generated@@472) $generated@@473)) (exists (($generated@@476 T@U) ) (!  (and (= (type $generated@@476) $generated@@475) (and ($generated@@0 ($generated@@83 ($generated@@391 $generated@@472) $generated@@476)) (= $generated@@473 ($generated@@83 ($generated@@460 $generated@@472) $generated@@476))))
 :pattern ( ($generated@@83 ($generated@@391 $generated@@472) $generated@@476))
 :pattern ( ($generated@@83 ($generated@@460 $generated@@472) $generated@@476))
))))))
 :pattern ( ($generated@@83 ($generated@@431 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@478 $generated@@479)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (and (= (type $generated@@480) ($generated@@375 $generated@@249 $generated@@249)) (= (type $generated@@481) $generated@@66)) (= (type $generated@@482) $generated@@66)) (= (type $generated@@483) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@480 ($generated@@477 $generated@@481 $generated@@482) $generated@@483) (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@249) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@480) $generated@@484))) (and ($generated@@342 ($generated@@83 ($generated@@452 $generated@@480) $generated@@484) $generated@@482 $generated@@483) ($generated@@342 $generated@@484 $generated@@481 $generated@@483)))
 :pattern ( ($generated@@83 ($generated@@452 $generated@@480) $generated@@484))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@480) $generated@@484))
))))
 :pattern ( ($generated@@76 $generated@@480 ($generated@@477 $generated@@481 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@486 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@485 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (and (= (type $generated@@488) ($generated@@393 $generated@@249 $generated@@249)) (= (type $generated@@489) $generated@@66)) (= (type $generated@@490) $generated@@66)) (= (type $generated@@491) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491) (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@249) ($generated@@0 ($generated@@83 ($generated@@391 $generated@@488) $generated@@492))) (and ($generated@@342 ($generated@@83 ($generated@@460 $generated@@488) $generated@@492) $generated@@490 $generated@@491) ($generated@@342 $generated@@492 $generated@@489 $generated@@491)))
 :pattern ( ($generated@@83 ($generated@@460 $generated@@488) $generated@@492))
 :pattern ( ($generated@@83 ($generated@@391 $generated@@488) $generated@@492))
))))
 :pattern ( ($generated@@76 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 T@T) ) (! (= (type ($generated@@493 $generated@@494)) ($generated@@78 $generated@@494 $generated@@4))
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@395 (type $generated@@495))))
(let (($generated@@497 ($generated@@394 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@393 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@392 $generated@@497 $generated@@496)) (= ($generated@@391 $generated@@495) ($generated@@493 $generated@@497))))))
 :pattern ( ($generated@@391 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@395 (type $generated@@498))))
(let (($generated@@500 ($generated@@394 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@393 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@392 $generated@@500 $generated@@499)) (= ($generated@@431 $generated@@498) ($generated@@493 $generated@@499))))))
 :pattern ( ($generated@@431 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@395 (type $generated@@501))))
(let (($generated@@503 ($generated@@394 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@393 $generated@@503 $generated@@502)) (= (= $generated@@501 ($generated@@392 $generated@@503 $generated@@502)) (= ($generated@@459 $generated@@501) ($generated@@493 $generated@@249))))))
 :pattern ( ($generated@@459 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@377 (type $generated@@504))))
(let (($generated@@506 ($generated@@376 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@375 $generated@@506 $generated@@505)) (or (= $generated@@504 ($generated@@374 $generated@@506 $generated@@505)) (exists (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (and (and (= (type $generated@@507) $generated@@249) (= (type $generated@@508) $generated@@249)) ($generated@@0 ($generated@@83 ($generated@@451 $generated@@504) ($generated@@362 ($generated@@315 $generated@@507 $generated@@508)))))
 :no-pattern (type $generated@@507)
 :no-pattern (type $generated@@508)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
 :no-pattern ($generated $generated@@508)
 :no-pattern ($generated@@0 $generated@@508)
))))))
 :pattern ( ($generated@@451 $generated@@504))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@395 (type $generated@@509))))
(let (($generated@@511 ($generated@@394 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@393 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@392 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (and (and (= (type $generated@@512) $generated@@249) (= (type $generated@@513) $generated@@249)) ($generated@@0 ($generated@@83 ($generated@@459 $generated@@509) ($generated@@362 ($generated@@315 $generated@@512 $generated@@513)))))
 :no-pattern (type $generated@@512)
 :no-pattern (type $generated@@513)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
))))))
 :pattern ( ($generated@@459 $generated@@509))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@249) ($generated@@316 $generated@@514 $generated@@46)) (and (= ($generated@@362 ($generated@@412 $generated@@2 $generated@@514)) $generated@@514) ($generated@@225 ($generated@@412 $generated@@2 $generated@@514) $generated@@46)))
 :pattern ( ($generated@@316 $generated@@514 $generated@@46))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@249) ($generated@@316 $generated@@515 $generated@@47)) (and (= ($generated@@362 ($generated@@412 $generated@@3 $generated@@515)) $generated@@515) ($generated@@225 ($generated@@412 $generated@@3 $generated@@515) $generated@@47)))
 :pattern ( ($generated@@316 $generated@@515 $generated@@47))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@249) ($generated@@316 $generated@@516 $generated@@44)) (and (= ($generated@@362 ($generated@@412 $generated@@4 $generated@@516)) $generated@@516) ($generated@@225 ($generated@@412 $generated@@4 $generated@@516) $generated@@44)))
 :pattern ( ($generated@@316 $generated@@516 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@517) 31))
(assert (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@249) ($generated@@316 $generated@@518 $generated@@45)) (and (= ($generated@@362 ($generated@@412 $generated@@517 $generated@@518)) $generated@@518) ($generated@@225 ($generated@@412 $generated@@517 $generated@@518) $generated@@45)))
 :pattern ( ($generated@@316 $generated@@518 $generated@@45))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@66) (= ($generated@@316 ($generated@@362 $generated@@519) $generated@@520) ($generated@@225 $generated@@519 $generated@@520)))
 :pattern ( ($generated@@316 ($generated@@362 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@81 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@78 $generated@@522 $generated@@2)) (<= 0 ($generated@@367 $generated@@521))))
 :pattern ( ($generated@@367 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@357 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@356 $generated@@524)) (<= 0 ($generated@@355 $generated@@523))))
 :pattern ( ($generated@@355 $generated@@523))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@66)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@66) (= (type $generated@@528) $generated@@66)) (= ($generated@@525 ($generated@@477 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@477 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@66)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@66) (= (type $generated@@532) $generated@@66)) (= ($generated@@529 ($generated@@477 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@477 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (= ($generated@@74 ($generated@@477 $generated@@533 $generated@@534)) $generated@@58))
 :pattern ( ($generated@@477 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@66)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@66) (= (type $generated@@538) $generated@@66)) (= ($generated@@535 ($generated@@485 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@485 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@66)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@66) (= (type $generated@@542) $generated@@66)) (= ($generated@@539 ($generated@@485 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@485 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@66) (= (type $generated@@544) $generated@@66)) (= ($generated@@74 ($generated@@485 $generated@@543 $generated@@544)) $generated@@59))
 :pattern ( ($generated@@485 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@249) (= (type $generated@@546) $generated@@249)) (= ($generated@@348 ($generated@@315 $generated@@545 $generated@@546)) $generated@@61))
 :pattern ( ($generated@@315 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@66)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@66) (= (type $generated@@550) $generated@@66)) (= ($generated@@547 ($generated@@239 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@239 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@66)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@66) (= (type $generated@@554) $generated@@66)) (= ($generated@@551 ($generated@@239 $generated@@553 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@239 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@249) (= (type $generated@@556) $generated@@249)) (= ($generated@@247 ($generated@@315 $generated@@555 $generated@@556)) $generated@@555))
 :pattern ( ($generated@@315 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@249) (= (type $generated@@558) $generated@@249)) (= ($generated@@248 ($generated@@315 $generated@@557 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@315 $generated@@557 $generated@@558))
)))
(assert  (and (forall (($generated@@561 T@U) ) (! (= (type ($generated@@559 $generated@@561)) $generated@@66)
 :pattern ( ($generated@@559 $generated@@561))
)) (forall (($generated@@562 T@U) ($generated@@563 Int) ) (! (let (($generated@@564 ($generated@@357 (type $generated@@562))))
(= (type ($generated@@560 $generated@@562 $generated@@563)) $generated@@564))
 :pattern ( ($generated@@560 $generated@@562 $generated@@563))
))))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@356 $generated@@249)) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@565 ($generated@@559 $generated@@566) $generated@@567) (forall (($generated@@568 Int) ) (!  (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@355 $generated@@565))) ($generated@@342 ($generated@@560 $generated@@565 $generated@@568) $generated@@566 $generated@@567))
 :pattern ( ($generated@@560 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@76 $generated@@565 ($generated@@559 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@570 Int) ) (! (= ($generated@@569 ($generated@@77 $generated@@570)) $generated@@570)
 :pattern ( ($generated@@77 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@66)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@66) (= ($generated@@571 ($generated@@325 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@325 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@66) (= ($generated@@74 ($generated@@325 $generated@@574)) $generated@@54))
 :pattern ( ($generated@@325 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@66)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@66) (= ($generated@@575 ($generated@@330 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@330 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@66) (= ($generated@@74 ($generated@@330 $generated@@578)) $generated@@55))
 :pattern ( ($generated@@330 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@66)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@66) (= ($generated@@579 ($generated@@254 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@254 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@66) (= ($generated@@74 ($generated@@254 $generated@@582)) $generated@@56))
 :pattern ( ($generated@@254 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@66)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@66) (= ($generated@@583 ($generated@@559 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@559 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@66) (= ($generated@@74 ($generated@@559 $generated@@586)) $generated@@57))
 :pattern ( ($generated@@559 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@587)))
(= ($generated@@412 $generated@@588 ($generated@@362 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@362 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@375 $generated@@249 $generated@@249)) (= (type $generated@@590) $generated@@66)) (= (type $generated@@591) $generated@@66)) (= ($generated@@225 $generated@@589 ($generated@@477 $generated@@590 $generated@@591)) (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@249) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@589) $generated@@592))) (and ($generated@@316 ($generated@@83 ($generated@@452 $generated@@589) $generated@@592) $generated@@591) ($generated@@316 $generated@@592 $generated@@590)))
 :pattern ( ($generated@@83 ($generated@@452 $generated@@589) $generated@@592))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@589) $generated@@592))
))))
 :pattern ( ($generated@@225 $generated@@589 ($generated@@477 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@593) ($generated@@393 $generated@@249 $generated@@249)) (= (type $generated@@594) $generated@@66)) (= (type $generated@@595) $generated@@66)) (= ($generated@@225 $generated@@593 ($generated@@485 $generated@@594 $generated@@595)) (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@249) ($generated@@0 ($generated@@83 ($generated@@391 $generated@@593) $generated@@596))) (and ($generated@@316 ($generated@@83 ($generated@@460 $generated@@593) $generated@@596) $generated@@595) ($generated@@316 $generated@@596 $generated@@594)))
 :pattern ( ($generated@@83 ($generated@@460 $generated@@593) $generated@@596))
 :pattern ( ($generated@@83 ($generated@@391 $generated@@593) $generated@@596))
))))
 :pattern ( ($generated@@225 $generated@@593 ($generated@@485 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@249) (= (type $generated@@600) $generated@@249)) (< ($generated@@597 $generated@@599) ($generated@@598 ($generated@@315 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@315 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@249) (= (type $generated@@602) $generated@@249)) (< ($generated@@597 $generated@@602) ($generated@@598 ($generated@@315 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@315 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@249) (= (type $generated@@604) $generated@@66)) (= (type $generated@@605) $generated@@66)) ($generated@@316 $generated@@603 ($generated@@477 $generated@@604 $generated@@605))) (and (= ($generated@@362 ($generated@@412 ($generated@@375 $generated@@249 $generated@@249) $generated@@603)) $generated@@603) ($generated@@225 ($generated@@412 ($generated@@375 $generated@@249 $generated@@249) $generated@@603) ($generated@@477 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@316 $generated@@603 ($generated@@477 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@249) (= (type $generated@@607) $generated@@66)) (= (type $generated@@608) $generated@@66)) ($generated@@316 $generated@@606 ($generated@@485 $generated@@607 $generated@@608))) (and (= ($generated@@362 ($generated@@412 ($generated@@393 $generated@@249 $generated@@249) $generated@@606)) $generated@@606) ($generated@@225 ($generated@@412 ($generated@@393 $generated@@249 $generated@@249) $generated@@606) ($generated@@485 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@316 $generated@@606 ($generated@@485 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@66) (= (type $generated@@610) $generated@@66)) (= (type $generated@@611) $generated@@249)) ($generated@@316 $generated@@611 ($generated@@239 $generated@@609 $generated@@610))) (and (= ($generated@@362 ($generated@@412 $generated@@240 $generated@@611)) $generated@@611) ($generated@@225 ($generated@@412 $generated@@240 $generated@@611) ($generated@@239 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@316 $generated@@611 ($generated@@239 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@612)))
 (not ($generated@@0 ($generated@@83 ($generated@@493 $generated@@613) $generated@@612))))
 :pattern ( (let (($generated@@613 (type $generated@@612)))
($generated@@83 ($generated@@493 $generated@@613) $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@158) (= ($generated@@225 $generated@@614 $generated@@222)  (and (bvule #b0010 ($generated@@160 $generated@@614)) (bvult ($generated@@160 $generated@@614) #b1010))))
 :pattern ( ($generated@@225 $generated@@614 $generated@@222))
)))
(assert (forall (($generated@@616 T@U) ) (! (= (type ($generated@@615 $generated@@616)) $generated@@71)
 :pattern ( ($generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@66) (= (type $generated@@618) $generated@@66)) (and (= ($generated@@74 ($generated@@239 $generated@@617 $generated@@618)) $generated@@62) (= ($generated@@615 ($generated@@239 $generated@@617 $generated@@618)) $generated@@64)))
 :pattern ( ($generated@@239 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@240) (= ($generated@@597 ($generated@@362 $generated@@619)) ($generated@@598 $generated@@619)))
 :pattern ( ($generated@@597 ($generated@@362 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@249) ($generated@@316 $generated@@620 ($generated@@77 0))) (and (= ($generated@@362 ($generated@@412 $generated@@2 $generated@@620)) $generated@@620) ($generated@@225 ($generated@@412 ($generated@@78 $generated@@249 $generated@@4) $generated@@620) ($generated@@77 0))))
 :pattern ( ($generated@@316 $generated@@620 ($generated@@77 0)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@249) ($generated@@316 $generated@@621 ($generated@@77 1))) (and (= ($generated@@362 ($generated@@412 $generated@@134 $generated@@621)) $generated@@621) ($generated@@225 ($generated@@412 $generated@@134 $generated@@621) ($generated@@77 1))))
 :pattern ( ($generated@@316 $generated@@621 ($generated@@77 1)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@249) (= (type $generated@@623) $generated@@66)) ($generated@@316 $generated@@622 ($generated@@325 $generated@@623))) (and (= ($generated@@362 ($generated@@412 ($generated@@78 $generated@@249 $generated@@4) $generated@@622)) $generated@@622) ($generated@@225 ($generated@@412 ($generated@@78 $generated@@249 $generated@@4) $generated@@622) ($generated@@325 $generated@@623))))
 :pattern ( ($generated@@316 $generated@@622 ($generated@@325 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@249) (= (type $generated@@625) $generated@@66)) ($generated@@316 $generated@@624 ($generated@@330 $generated@@625))) (and (= ($generated@@362 ($generated@@412 ($generated@@78 $generated@@249 $generated@@4) $generated@@624)) $generated@@624) ($generated@@225 ($generated@@412 ($generated@@78 $generated@@249 $generated@@4) $generated@@624) ($generated@@330 $generated@@625))))
 :pattern ( ($generated@@316 $generated@@624 ($generated@@330 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@249) (= (type $generated@@627) $generated@@66)) ($generated@@316 $generated@@626 ($generated@@254 $generated@@627))) (and (= ($generated@@362 ($generated@@412 ($generated@@78 $generated@@249 $generated@@2) $generated@@626)) $generated@@626) ($generated@@225 ($generated@@412 ($generated@@78 $generated@@249 $generated@@2) $generated@@626) ($generated@@254 $generated@@627))))
 :pattern ( ($generated@@316 $generated@@626 ($generated@@254 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@249) (= (type $generated@@629) $generated@@66)) ($generated@@316 $generated@@628 ($generated@@559 $generated@@629))) (and (= ($generated@@362 ($generated@@412 ($generated@@356 $generated@@249) $generated@@628)) $generated@@628) ($generated@@225 ($generated@@412 ($generated@@356 $generated@@249) $generated@@628) ($generated@@559 $generated@@629))))
 :pattern ( ($generated@@316 $generated@@628 ($generated@@559 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@249) ($generated@@316 $generated@@630 ($generated@@77 2))) (and (= ($generated@@362 ($generated@@412 $generated@@142 $generated@@630)) $generated@@630) ($generated@@225 ($generated@@412 $generated@@142 $generated@@630) ($generated@@77 2))))
 :pattern ( ($generated@@316 $generated@@630 ($generated@@77 2)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@249) ($generated@@316 $generated@@631 ($generated@@77 3))) (and (= ($generated@@362 ($generated@@412 $generated@@150 $generated@@631)) $generated@@631) ($generated@@225 ($generated@@412 $generated@@150 $generated@@631) ($generated@@77 3))))
 :pattern ( ($generated@@316 $generated@@631 ($generated@@77 3)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@249) ($generated@@316 $generated@@632 ($generated@@77 4))) (and (= ($generated@@362 ($generated@@412 $generated@@158 $generated@@632)) $generated@@632) ($generated@@225 ($generated@@412 $generated@@158 $generated@@632) ($generated@@77 4))))
 :pattern ( ($generated@@316 $generated@@632 ($generated@@77 4)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@249) ($generated@@316 $generated@@633 ($generated@@77 7))) (and (= ($generated@@362 ($generated@@412 $generated@@166 $generated@@633)) $generated@@633) ($generated@@225 ($generated@@412 $generated@@166 $generated@@633) ($generated@@77 7))))
 :pattern ( ($generated@@316 $generated@@633 ($generated@@77 7)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@249) ($generated@@316 $generated@@634 ($generated@@77 8))) (and (= ($generated@@362 ($generated@@412 $generated@@174 $generated@@634)) $generated@@634) ($generated@@225 ($generated@@412 $generated@@174 $generated@@634) ($generated@@77 8))))
 :pattern ( ($generated@@316 $generated@@634 ($generated@@77 8)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@249) ($generated@@316 $generated@@635 ($generated@@77 15))) (and (= ($generated@@362 ($generated@@412 $generated@@182 $generated@@635)) $generated@@635) ($generated@@225 ($generated@@412 $generated@@182 $generated@@635) ($generated@@77 15))))
 :pattern ( ($generated@@316 $generated@@635 ($generated@@77 15)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@249) ($generated@@316 $generated@@636 ($generated@@77 16))) (and (= ($generated@@362 ($generated@@412 $generated@@190 $generated@@636)) $generated@@636) ($generated@@225 ($generated@@412 $generated@@190 $generated@@636) ($generated@@77 16))))
 :pattern ( ($generated@@316 $generated@@636 ($generated@@77 16)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@249) ($generated@@316 $generated@@637 ($generated@@77 32))) (and (= ($generated@@362 ($generated@@412 $generated@@198 $generated@@637)) $generated@@637) ($generated@@225 ($generated@@412 $generated@@198 $generated@@637) ($generated@@77 32))))
 :pattern ( ($generated@@316 $generated@@637 ($generated@@77 32)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@249) ($generated@@316 $generated@@638 ($generated@@77 53))) (and (= ($generated@@362 ($generated@@412 $generated@@206 $generated@@638)) $generated@@638) ($generated@@225 ($generated@@412 $generated@@206 $generated@@638) ($generated@@77 53))))
 :pattern ( ($generated@@316 $generated@@638 ($generated@@77 53)))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@249) ($generated@@316 $generated@@639 ($generated@@77 100))) (and (= ($generated@@362 ($generated@@412 $generated@@214 $generated@@639)) $generated@@639) ($generated@@225 ($generated@@412 $generated@@214 $generated@@639) ($generated@@77 100))))
 :pattern ( ($generated@@316 $generated@@639 ($generated@@77 100)))
)))
(assert (= ($generated@@74 $generated@@222) $generated@@63))
(assert (= ($generated@@615 $generated@@222) $generated@@65))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@640) ($generated@@78 $generated@@249 $generated@@2)) (= (type $generated@@641) $generated@@66)) (= (type $generated@@642) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@640 ($generated@@254 $generated@@641) $generated@@642) (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@249) (< 0 ($generated ($generated@@83 $generated@@640 $generated@@643)))) ($generated@@342 $generated@@643 $generated@@641 $generated@@642))
 :pattern ( ($generated@@83 $generated@@640 $generated@@643))
))))
 :pattern ( ($generated@@76 $generated@@640 ($generated@@254 $generated@@641) $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) $generated@@240) (= (type $generated@@645) $generated@@66)) (= (type $generated@@646) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@341 $generated@@646) (and ($generated@@238 $generated@@644) (exists (($generated@@647 T@U) ) (!  (and (= (type $generated@@647) $generated@@66) ($generated@@76 $generated@@644 ($generated@@239 $generated@@645 $generated@@647) $generated@@646))
 :pattern ( ($generated@@76 $generated@@644 ($generated@@239 $generated@@645 $generated@@647) $generated@@646))
))))) ($generated@@342 ($generated@@247 $generated@@644) $generated@@645 $generated@@646))
 :pattern ( ($generated@@342 ($generated@@247 $generated@@644) $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) $generated@@240) (= (type $generated@@649) $generated@@66)) (= (type $generated@@650) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@341 $generated@@650) (and ($generated@@238 $generated@@648) (exists (($generated@@651 T@U) ) (!  (and (= (type $generated@@651) $generated@@66) ($generated@@76 $generated@@648 ($generated@@239 $generated@@651 $generated@@649) $generated@@650))
 :pattern ( ($generated@@76 $generated@@648 ($generated@@239 $generated@@651 $generated@@649) $generated@@650))
))))) ($generated@@342 ($generated@@248 $generated@@648) $generated@@649 $generated@@650))
 :pattern ( ($generated@@342 ($generated@@248 $generated@@648) $generated@@649 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@249) (= (type $generated@@653) $generated@@249)) (= ($generated@@315 ($generated@@337 $generated@@652) ($generated@@337 $generated@@653)) ($generated@@337 ($generated@@315 $generated@@652 $generated@@653))))
 :pattern ( ($generated@@315 ($generated@@337 $generated@@652) ($generated@@337 $generated@@653)))
)))
(assert (forall (($generated@@654 Int) ) (! (= ($generated@@362 ($generated@@8 ($generated@@335 $generated@@654))) ($generated@@337 ($generated@@362 ($generated@@8 $generated@@654))))
 :pattern ( ($generated@@362 ($generated@@8 ($generated@@335 $generated@@654))))
)))
(assert (forall (($generated@@655 T@U) ) (! (= ($generated@@362 ($generated@@337 $generated@@655)) ($generated@@337 ($generated@@362 $generated@@655)))
 :pattern ( ($generated@@362 ($generated@@337 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ) (! (let (($generated@@657 ($generated@@357 (type $generated@@656))))
 (=> (and (= (type $generated@@656) ($generated@@356 $generated@@657)) (= ($generated@@355 $generated@@656) 0)) (= $generated@@656 ($generated@@354 $generated@@657))))
 :pattern ( ($generated@@355 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (! (let (($generated@@661 (type $generated@@659)))
 (=> (and (and (= (type $generated@@658) ($generated@@78 $generated@@661 $generated@@2)) (= (type $generated@@660) $generated@@2)) (<= 0 ($generated $generated@@660))) (= ($generated@@367 ($generated@@84 $generated@@658 $generated@@659 $generated@@660)) (+ (- ($generated@@367 $generated@@658) ($generated ($generated@@83 $generated@@658 $generated@@659))) ($generated $generated@@660)))))
 :pattern ( ($generated@@367 ($generated@@84 $generated@@658 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@663) $generated@@2)) ($generated@@76 $generated@@663 $generated@@46 $generated@@662))
 :pattern ( ($generated@@76 $generated@@663 $generated@@46 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@665) $generated@@3)) ($generated@@76 $generated@@665 $generated@@47 $generated@@664))
 :pattern ( ($generated@@76 $generated@@665 $generated@@47 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@667) $generated@@4)) ($generated@@76 $generated@@667 $generated@@44 $generated@@666))
 :pattern ( ($generated@@76 $generated@@667 $generated@@44 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@669) $generated@@517)) ($generated@@76 $generated@@669 $generated@@45 $generated@@668))
 :pattern ( ($generated@@76 $generated@@669 $generated@@45 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@671) $generated@@249)) ($generated@@76 $generated@@671 $generated@@48 $generated@@670))
 :pattern ( ($generated@@76 $generated@@671 $generated@@48 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@356 $generated@@249)) (= (type $generated@@673) $generated@@66)) (= ($generated@@225 $generated@@672 ($generated@@559 $generated@@673)) (forall (($generated@@674 Int) ) (!  (=> (and (<= 0 $generated@@674) (< $generated@@674 ($generated@@355 $generated@@672))) ($generated@@316 ($generated@@560 $generated@@672 $generated@@674) $generated@@673))
 :pattern ( ($generated@@560 $generated@@672 $generated@@674))
))))
 :pattern ( ($generated@@225 $generated@@672 ($generated@@559 $generated@@673)))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 Int) ) (!  (=> (= (type $generated@@676) ($generated@@356 $generated@@249)) (=> (and (<= 0 $generated@@677) (< $generated@@677 ($generated@@355 $generated@@676))) (< ($generated@@598 ($generated@@412 $generated@@240 ($generated@@560 $generated@@676 $generated@@677))) ($generated@@675 $generated@@676))))
 :pattern ( ($generated@@598 ($generated@@412 $generated@@240 ($generated@@560 $generated@@676 $generated@@677))))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (and (= (type $generated@@678) ($generated@@375 $generated@@249 $generated@@249)) (= (type $generated@@679) $generated@@66)) (= (type $generated@@680) $generated@@66)) ($generated@@225 $generated@@678 ($generated@@477 $generated@@679 $generated@@680))) (and (and ($generated@@225 ($generated@@373 $generated@@678) ($generated@@325 $generated@@679)) ($generated@@225 ($generated@@420 $generated@@678) ($generated@@325 $generated@@680))) ($generated@@225 ($generated@@451 $generated@@678) ($generated@@325 ($generated@@239 $generated@@679 $generated@@680)))))
 :pattern ( ($generated@@225 $generated@@678 ($generated@@477 $generated@@679 $generated@@680)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (and (and (= (type $generated@@681) ($generated@@393 $generated@@249 $generated@@249)) (= (type $generated@@682) $generated@@66)) (= (type $generated@@683) $generated@@66)) ($generated@@225 $generated@@681 ($generated@@485 $generated@@682 $generated@@683))) (and (and ($generated@@225 ($generated@@391 $generated@@681) ($generated@@330 $generated@@682)) ($generated@@225 ($generated@@431 $generated@@681) ($generated@@330 $generated@@683))) ($generated@@225 ($generated@@459 $generated@@681) ($generated@@330 ($generated@@239 $generated@@682 $generated@@683)))))
 :pattern ( ($generated@@225 $generated@@681 ($generated@@485 $generated@@682 $generated@@683)))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@2) ($generated@@225 $generated@@684 $generated@@46))
 :pattern ( ($generated@@225 $generated@@684 $generated@@46))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@3) ($generated@@225 $generated@@685 $generated@@47))
 :pattern ( ($generated@@225 $generated@@685 $generated@@47))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@4) ($generated@@225 $generated@@686 $generated@@44))
 :pattern ( ($generated@@225 $generated@@686 $generated@@44))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@517) ($generated@@225 $generated@@687 $generated@@45))
 :pattern ( ($generated@@225 $generated@@687 $generated@@45))
)))
(assert (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@249) ($generated@@225 $generated@@688 $generated@@48))
 :pattern ( ($generated@@225 $generated@@688 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () (_ BitVec 4))
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () (_ BitVec 32))
(declare-fun $generated@@696 () (_ BitVec 100))
(declare-fun $generated@@697 () (_ BitVec 4))
(declare-fun $generated@@698 () Int)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () (_ BitVec 32))
(declare-fun $generated@@701 () (_ BitVec 100))
(declare-fun $generated@@702 () (_ BitVec 4))
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () (_ BitVec 32))
(declare-fun $generated@@705 () (_ BitVec 100))
(declare-fun $generated@@706 () (_ BitVec 4))
(declare-fun $generated@@707 () Int)
(declare-fun $generated@@708 () (_ BitVec 32))
(declare-fun $generated@@709 () (_ BitVec 100))
(declare-fun $generated@@710 () (_ BitVec 4))
(declare-fun $generated@@711 () (_ BitVec 100))
(declare-fun $generated@@712 () Int)
(declare-fun $generated@@713 () (_ BitVec 100))
(declare-fun $generated@@714 () Int)
(declare-fun $generated@@715 () (_ BitVec 100))
(declare-fun $generated@@716 () (_ BitVec 4))
(declare-fun $generated@@717 () Int)
(declare-fun $generated@@718 () (_ BitVec 4))
(declare-fun $generated@@719 () Int)
(declare-fun $generated@@720 () (_ BitVec 4))
(declare-fun $generated@@721 () (_ BitVec 100))
(declare-fun $generated@@722 () (_ BitVec 100))
(declare-fun $generated@@723 () (_ BitVec 100))
(declare-fun $generated@@724 () (_ BitVec 4))
(declare-fun $generated@@725 () (_ BitVec 4))
(declare-fun $generated@@726 () (_ BitVec 4))
(declare-fun $generated@@727 (T@U) Bool)
(declare-fun $generated@@728 () Int)
(declare-fun $generated@@729 () (_ BitVec 4))
(declare-fun $generated@@730 () Int)
(assert  (and (and (= (type $generated@@689) ($generated@@261 $generated@@79 $generated@@4)) (= (type $generated@@690) $generated@@79)) (= (type $generated@@691) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 31) (let (($generated@@731  (=> (and (= $generated@@689 ($generated@@260 $generated@@690 $generated@@691 $generated@@60 false)) (= 0 $generated@@692)) (=> (and (and (and (bvule #b0010 $generated@@693) (bvult $generated@@693 #b1010)) (= $generated@@694 ($generated@@335 0))) (and (= $generated@@695 ($generated@@200 ($generated@@337 ($generated@@199 #x00000000)))) (= $generated@@696 ($generated@@216 ($generated@@337 ($generated@@215 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))))) (and (=> (= (ControlFlow 0 2) (- 0 30)) ($generated@@225 ($generated@@337 ($generated@@159 #b1001)) $generated@@222)) (=> ($generated@@225 ($generated@@337 ($generated@@159 #b1001)) $generated@@222) (=> (= $generated@@697 ($generated@@160 ($generated@@337 ($generated@@159 #b1001)))) (=> (and (and (= $generated@@698 0) (= $generated@@699 0)) (and (= $generated@@700 (bvor $generated@@695 #x00000000)) (= $generated@@701 (bvor $generated@@696 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))) (and (=> (= (ControlFlow 0 2) (- 0 29)) ($generated@@225 ($generated@@159 (bvor $generated@@697 #b0000)) $generated@@222)) (=> ($generated@@225 ($generated@@159 (bvor $generated@@697 #b0000)) $generated@@222) (=> (and (and (= $generated@@702 (bvor $generated@@697 #b0000)) (= $generated@@703 0)) (and (= $generated@@704 (bvxor $generated@@700 #x00000000)) (= $generated@@705 (bvxor $generated@@701 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))) (and (=> (= (ControlFlow 0 2) (- 0 28)) ($generated@@225 ($generated@@159 (bvxor $generated@@702 #b0000)) $generated@@222)) (=> ($generated@@225 ($generated@@159 (bvxor $generated@@702 #b0000)) $generated@@222) (=> (= $generated@@706 (bvxor $generated@@702 #b0000)) (=> (and (= $generated@@707 0) (= $generated@@708 (bvnot $generated@@704))) (=> (and (and (= $generated@@709 (bvnot $generated@@705)) (= $generated@@710 (bvnot $generated@@706))) (and (= $generated@@711 ($generated@@216 ($generated@@337 ($generated@@215 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000)))) (= $generated@@712 ($generated@@335 2)))) (and (=> (= (ControlFlow 0 2) (- 0 27)) (and (<= 0 $generated@@712) (< $generated@@712 128))) (=> (and (<= 0 $generated@@712) (< $generated@@712 128)) (and (=> (= (ControlFlow 0 2) (- 0 26)) (bvule #b0000010 #b1100100)) (=> (bvule #b0000010 #b1100100) (=> (and (= $generated@@713 (bvshl $generated@@711 (concat #b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 #b0000010))) (= $generated@@714 ($generated@@335 4))) (and (=> (= (ControlFlow 0 2) (- 0 25)) (and (<= 0 $generated@@714) (< $generated@@714 128))) (=> (and (<= 0 $generated@@714) (< $generated@@714 128)) (and (=> (= (ControlFlow 0 2) (- 0 24)) (bvule #b0000100 #b1100100)) (=> (bvule #b0000100 #b1100100) (=> (= $generated@@715 (bvlshr $generated@@713 (concat #b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 #b0000100))) (and (=> (= (ControlFlow 0 2) (- 0 23)) ($generated@@225 ($generated@@337 ($generated@@159 #b0010)) $generated@@222)) (=> ($generated@@225 ($generated@@337 ($generated@@159 #b0010)) $generated@@222) (=> (and (= $generated@@716 ($generated@@160 ($generated@@337 ($generated@@159 #b0010)))) (= $generated@@717 ($generated@@335 2))) (and (=> (= (ControlFlow 0 2) (- 0 22)) (and (<= 0 $generated@@717) (< $generated@@717 8))) (=> (and (<= 0 $generated@@717) (< $generated@@717 8)) (and (=> (= (ControlFlow 0 2) (- 0 21)) (bvule #b010 #b100)) (=> (bvule #b010 #b100) (and (=> (= (ControlFlow 0 2) (- 0 20)) ($generated@@225 ($generated@@159 (bvshl $generated@@716 (concat #b0 #b010))) $generated@@222)) (=> ($generated@@225 ($generated@@159 (bvshl $generated@@716 (concat #b0 #b010))) $generated@@222) (=> (and (= $generated@@718 (bvshl $generated@@716 (concat #b0 #b010))) (= $generated@@719 ($generated@@335 1))) (and (=> (= (ControlFlow 0 2) (- 0 19)) (and (<= 0 $generated@@719) (< $generated@@719 8))) (=> (and (<= 0 $generated@@719) (< $generated@@719 8)) (and (=> (= (ControlFlow 0 2) (- 0 18)) (bvule #b001 #b100)) (=> (bvule #b001 #b100) (and (=> (= (ControlFlow 0 2) (- 0 17)) ($generated@@225 ($generated@@159 (bvlshr $generated@@718 (concat #b0 #b001))) $generated@@222)) (=> ($generated@@225 ($generated@@159 (bvlshr $generated@@718 (concat #b0 #b001))) $generated@@222) (=> (and (= $generated@@720 (bvlshr $generated@@718 (concat #b0 #b001))) (= $generated@@721 ($generated@@216 ($generated@@337 ($generated@@215 (bvor #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100)))))) (and (=> (= (ControlFlow 0 2) (- 0 16)) (<= 0 ($generated@@335 99))) (=> (<= 0 ($generated@@335 99)) (and (=> (= (ControlFlow 0 2) (- 0 15)) (<= ($generated@@335 99) 100)) (=> (<= ($generated@@335 99) 100) (=> (= $generated@@722 (ext_rotate_left $generated@@721 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100011)) (and (=> (= (ControlFlow 0 2) (- 0 14)) (<= 0 ($generated@@335 98))) (=> (<= 0 ($generated@@335 98)) (and (=> (= (ControlFlow 0 2) (- 0 13)) (<= ($generated@@335 98) 100)) (=> (<= ($generated@@335 98) 100) (=> (= $generated@@723 (ext_rotate_right $generated@@722 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100010)) (and (=> (= (ControlFlow 0 2) (- 0 12)) ($generated@@225 ($generated@@337 ($generated@@159 #b0010)) $generated@@222)) (=> ($generated@@225 ($generated@@337 ($generated@@159 #b0010)) $generated@@222) (=> (= $generated@@724 ($generated@@160 ($generated@@337 ($generated@@159 #b0010)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (<= 0 ($generated@@335 2))) (=> (<= 0 ($generated@@335 2)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (<= ($generated@@335 2) 4)) (=> (<= ($generated@@335 2) 4) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@225 ($generated@@159 (ext_rotate_left $generated@@724 #b0010)) $generated@@222)) (=> ($generated@@225 ($generated@@159 (ext_rotate_left $generated@@724 #b0010)) $generated@@222) (=> (= $generated@@725 (ext_rotate_left $generated@@724 #b0010)) (and (=> (= (ControlFlow 0 2) (- 0 8)) (<= 0 ($generated@@335 1))) (=> (<= 0 ($generated@@335 1)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (<= ($generated@@335 1) 4)) (=> (<= ($generated@@335 1) 4) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@225 ($generated@@159 (ext_rotate_right $generated@@725 #b0001)) $generated@@222)) (=> ($generated@@225 ($generated@@159 (ext_rotate_right $generated@@725 #b0001)) $generated@@222) (=> (= $generated@@726 (ext_rotate_right $generated@@725 #b0001)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= 0 ($generated@@335 0))) (=> (<= 0 ($generated@@335 0)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@335 0) 0)) (=> (<= ($generated@@335 0) 0) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= 0 ($generated@@335 0))) (=> (<= 0 ($generated@@335 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= ($generated@@335 0) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@732  (=> (and (and ($generated@@341 $generated@@691) ($generated@@727 $generated@@691)) (and (= 0 $generated@@728) true)) (=> (and (and (and (bvule #b0010 $generated@@729) (bvult $generated@@729 #b1010)) true) (and (= 1 $generated@@730) (= (ControlFlow 0 31) 2))) $generated@@731))))
$generated@@732)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(assert  (and (and (and (and (= (type $generated@@181) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@182) $generated@@46)) (= (type $generated@@183) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@190) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@194) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@203  (=> (and (= $generated@@181 ($generated@@107 $generated@@182 $generated@@183 $generated@@50 false)) (= $generated@@184 ($generated@@162 200))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@162 (- 0 100)) $generated@@184) (< $generated@@184 68719476736))) (=> (and (<= ($generated@@162 (- 0 100)) $generated@@184) (< $generated@@184 68719476736)) (=> (and (= $generated@@185 ($generated@@162 200)) (= $generated@@186 ($generated@@162 300))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@162 (- 0 100)) $generated@@186) (< $generated@@186 68719476736))) (=> (and (<= ($generated@@162 (- 0 100)) $generated@@186) (< $generated@@186 68719476736)) (=> (= $generated@@187 ($generated@@162 300)) (=> (and (<= ($generated@@162 (- 0 100)) $generated@@188) (< $generated@@188 68719476736)) (=> (and (and (and (and ($generated@@189 $generated@@190) ($generated@@191 $generated@@190)) (and (<= ($generated@@162 (- 0 100)) $generated@@192) (< $generated@@192 68719476736))) (and (and (forall (($generated@@204 T@U) ) (!  (=> (= (type $generated@@204) $generated@@46) (=> (and (not (= $generated@@204 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@183 $generated@@204) $generated@@50))) (= ($generated@@49 $generated@@190 $generated@@204) ($generated@@49 $generated@@183 $generated@@204))))
 :pattern ( ($generated@@49 $generated@@190 $generated@@204))
)) ($generated@@44 $generated@@183 $generated@@190)) (and (<= ($generated@@162 (- 0 100)) $generated@@193) (< $generated@@193 68719476736)))) (and (and (and ($generated@@189 $generated@@194) ($generated@@191 $generated@@194)) (and (<= ($generated@@162 (- 0 100)) $generated@@195) (< $generated@@195 68719476736))) (and (and (forall (($generated@@205 T@U) ) (!  (=> (= (type $generated@@205) $generated@@46) (=> (and (not (= $generated@@205 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@190 $generated@@205) $generated@@50))) (= ($generated@@49 $generated@@194 $generated@@205) ($generated@@49 $generated@@190 $generated@@205))))
 :pattern ( ($generated@@49 $generated@@194 $generated@@205))
)) ($generated@@44 $generated@@190 $generated@@194)) (and (= $generated@@196 ($generated@@162 (- 0 2))) (= (ControlFlow 0 2) (- 0 1)))))) (and (<= ($generated@@162 (- 0 100)) $generated@@196) (< $generated@@196 68719476736)))))))))))))
(let (($generated@@206  (=> (and ($generated@@189 $generated@@183) ($generated@@191 $generated@@183)) (=> (and (and (and (<= ($generated@@162 (- 0 100)) $generated@@197) (< $generated@@197 68719476736)) true) (and (and (<= ($generated@@162 (- 0 100)) $generated@@198) (< $generated@@198 68719476736)) true)) (=> (and (and (and (and (<= ($generated@@162 (- 0 100)) $generated@@199) (< $generated@@199 68719476736)) true) (and (and (<= ($generated@@162 (- 0 100)) $generated@@200) (< $generated@@200 68719476736)) true)) (and (and (and (<= ($generated@@162 (- 0 100)) $generated@@201) (< $generated@@201 68719476736)) true) (and (= 2 $generated@@202) (= (ControlFlow 0 5) 2)))) $generated@@203)))))
$generated@@206)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(assert  (and (and (and (= (type $generated@@179) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@180) $generated@@47)) (= (type $generated@@181) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@182) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@188  (=> (<= $generated@@173 $generated@@174) (=> (and (= $generated@@175 (- $generated@@174 $generated@@173)) (= (ControlFlow 0 6) (- 0 5))) (and (<= ($generated@@157 (- 0 100)) $generated@@175) (< $generated@@175 68719476736))))))
(let (($generated@@189  (=> (< $generated@@174 $generated@@173) (=> (and (= $generated@@176 (- $generated@@173 $generated@@174)) (= (ControlFlow 0 4) (- 0 3))) (and (<= ($generated@@157 (- 0 100)) $generated@@176) (< $generated@@176 68719476736))))))
(let (($generated@@190  (=> (not (or (< $generated@@174 0) (< $generated@@173 0))) (and (=> (= (ControlFlow 0 7) 4) $generated@@189) (=> (= (ControlFlow 0 7) 6) $generated@@188)))))
(let (($generated@@191  (=> (or (< $generated@@174 0) (< $generated@@173 0)) (=> (and (= $generated@@177 ($generated@@157 18)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@157 (- 0 100)) $generated@@177) (< $generated@@177 68719476736))))))
(let (($generated@@192  (and (=> (= (ControlFlow 0 8) 2) $generated@@191) (=> (= (ControlFlow 0 8) 7) $generated@@190))))
(let (($generated@@193  (=> (and (< $generated@@174 0) (= (ControlFlow 0 11) 8)) $generated@@192)))
(let (($generated@@194  (=> (and (<= 0 $generated@@174) (= $generated@@178 ($generated@@157 0))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= ($generated@@157 (- 0 100)) $generated@@178) (< $generated@@178 68719476736))) (=> (and (<= ($generated@@157 (- 0 100)) $generated@@178) (< $generated@@178 68719476736)) (=> (= (ControlFlow 0 9) 8) $generated@@192))))))
(let (($generated@@195  (=> (and (= $generated@@179 ($generated@@45 $generated@@180 $generated@@181 $generated@@182 false)) (= $generated@@183 ($generated@@157 0))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (and (<= ($generated@@157 (- 0 100)) $generated@@183) (< $generated@@183 68719476736))) (=> (and (<= ($generated@@157 (- 0 100)) $generated@@183) (< $generated@@183 68719476736)) (and (=> (= (ControlFlow 0 12) 9) $generated@@194) (=> (= (ControlFlow 0 12) 11) $generated@@193)))))))
(let (($generated@@196  (=> (and ($generated@@184 $generated@@181) ($generated@@185 $generated@@181)) (=> (and (and (and (<= ($generated@@157 (- 0 100)) $generated@@174) (< $generated@@174 68719476736)) (and (<= ($generated@@157 (- 0 100)) $generated@@173) (< $generated@@173 68719476736))) (and (and (<= ($generated@@157 (- 0 100)) $generated@@186) (< $generated@@186 68719476736)) (and (= 1 $generated@@187) (= (ControlFlow 0 14) 12)))) $generated@@195))))
$generated@@196))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@166 (Int) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U) Int)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (let (($generated@@164 (type $generated@@163)))
(= (type ($generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@162 $generated@@165) $generated@@165)
 :pattern ( ($generated@@162 $generated@@165))
)))
(assert  (and (= ($generated@@1 $generated@@169) 11) (forall (($generated@@170 Int) ) (! (= (type ($generated@@166 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@166 $generated@@170))
))))
(assert (forall (($generated@@171 Int) ) (!  (=> (<= 0 $generated@@171) (and ($generated@@167 ($generated@@166 $generated@@171)) (= ($generated@@168 ($generated@@166 $generated@@171)) $generated@@171)))
 :pattern ( ($generated@@166 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@172) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@173) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@174) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@172 $generated@@174))) (and ($generated@@44 $generated@@172 $generated@@173) ($generated@@44 $generated@@173 $generated@@174))) ($generated@@44 $generated@@172 $generated@@174))
 :pattern ( ($generated@@44 $generated@@172 $generated@@173) ($generated@@44 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ) (!  (=> (= (type $generated@@175) $generated@@169) (<= 0 ($generated@@168 $generated@@175)))
 :pattern ( ($generated@@168 $generated@@175))
)))
(assert  (and (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@169)
 :pattern ( ($generated@@176 $generated@@178))
)) (forall (($generated@@179 T@T) ($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@177 $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(= ($generated@@177 $generated@@182 ($generated@@176 $generated@@181)) $generated@@181))
 :pattern ( ($generated@@176 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@183) $generated@@169) ($generated@@167 $generated@@183)) (= $generated@@183 ($generated@@166 ($generated@@168 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@183))
 :pattern ( ($generated@@167 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (! (= ($generated@@176 ($generated@@162 $generated@@184)) ($generated@@162 ($generated@@176 $generated@@184)))
 :pattern ( ($generated@@176 ($generated@@162 $generated@@184)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 () Int)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@181) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@182) $generated@@46)) (= (type $generated@@183) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@186) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@189) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@191) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@193) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@196) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@199) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@202) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@205  (=> (and (= $generated@@181 ($generated@@107 $generated@@182 $generated@@183 $generated@@50 false)) (= $generated@@184 ($generated@@162 (- 0 42)))) (=> (and (and (and (and (and ($generated@@185 $generated@@186) ($generated@@187 $generated@@186)) (forall (($generated@@206 T@U) ) (!  (=> (= (type $generated@@206) $generated@@46) (=> (and (not (= $generated@@206 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@183 $generated@@206) $generated@@50))) (= ($generated@@49 $generated@@186 $generated@@206) ($generated@@49 $generated@@183 $generated@@206))))
 :pattern ( ($generated@@49 $generated@@186 $generated@@206))
))) (and ($generated@@44 $generated@@183 $generated@@186) (= $generated@@188 ($generated@@162 0)))) (and (and (and ($generated@@185 $generated@@189) ($generated@@187 $generated@@189)) (forall (($generated@@207 T@U) ) (!  (=> (= (type $generated@@207) $generated@@46) (=> (and (not (= $generated@@207 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@186 $generated@@207) $generated@@50))) (= ($generated@@49 $generated@@189 $generated@@207) ($generated@@49 $generated@@186 $generated@@207))))
 :pattern ( ($generated@@49 $generated@@189 $generated@@207))
))) (and ($generated@@44 $generated@@186 $generated@@189) (= $generated@@190 ($generated@@162 0))))) (and (and (and (and ($generated@@185 $generated@@191) ($generated@@187 $generated@@191)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@46) (=> (and (not (= $generated@@208 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@189 $generated@@208) $generated@@50))) (= ($generated@@49 $generated@@191 $generated@@208) ($generated@@49 $generated@@189 $generated@@208))))
 :pattern ( ($generated@@49 $generated@@191 $generated@@208))
))) (and ($generated@@44 $generated@@189 $generated@@191) (= $generated@@192 ($generated@@162 23)))) (and (and (and ($generated@@185 $generated@@193) ($generated@@187 $generated@@193)) (forall (($generated@@209 T@U) ) (!  (=> (= (type $generated@@209) $generated@@46) (=> (and (not (= $generated@@209 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@191 $generated@@209) $generated@@50))) (= ($generated@@49 $generated@@193 $generated@@209) ($generated@@49 $generated@@191 $generated@@209))))
 :pattern ( ($generated@@49 $generated@@193 $generated@@209))
))) (and ($generated@@44 $generated@@191 $generated@@193) (= $generated@@194 ($generated@@162 (- 0 42))))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@162 (- 0 100)) $generated@@194) (< $generated@@194 68719476736))) (=> (and (<= ($generated@@162 (- 0 100)) $generated@@194) (< $generated@@194 68719476736)) (=> (= $generated@@195 ($generated@@162 (- 0 42))) (=> (and (and (and ($generated@@185 $generated@@196) ($generated@@187 $generated@@196)) (forall (($generated@@210 T@U) ) (!  (=> (= (type $generated@@210) $generated@@46) (=> (and (not (= $generated@@210 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@193 $generated@@210) $generated@@50))) (= ($generated@@49 $generated@@196 $generated@@210) ($generated@@49 $generated@@193 $generated@@210))))
 :pattern ( ($generated@@49 $generated@@196 $generated@@210))
))) (and ($generated@@44 $generated@@193 $generated@@196) (= $generated@@197 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@162 (- 0 100)) $generated@@197) (< $generated@@197 68719476736))) (=> (and (<= ($generated@@162 (- 0 100)) $generated@@197) (< $generated@@197 68719476736)) (=> (= $generated@@198 ($generated@@162 0)) (=> (and (and (and ($generated@@185 $generated@@199) ($generated@@187 $generated@@199)) (forall (($generated@@211 T@U) ) (!  (=> (= (type $generated@@211) $generated@@46) (=> (and (not (= $generated@@211 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@196 $generated@@211) $generated@@50))) (= ($generated@@49 $generated@@199 $generated@@211) ($generated@@49 $generated@@196 $generated@@211))))
 :pattern ( ($generated@@49 $generated@@199 $generated@@211))
))) (and ($generated@@44 $generated@@196 $generated@@199) (= $generated@@200 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@162 (- 0 100)) $generated@@200) (< $generated@@200 68719476736))) (=> (and (<= ($generated@@162 (- 0 100)) $generated@@200) (< $generated@@200 68719476736)) (=> (= $generated@@201 ($generated@@162 0)) (=> (and ($generated@@185 $generated@@202) ($generated@@187 $generated@@202)) (=> (and (and (forall (($generated@@212 T@U) ) (!  (=> (= (type $generated@@212) $generated@@46) (=> (and (not (= $generated@@212 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@199 $generated@@212) $generated@@50))) (= ($generated@@49 $generated@@202 $generated@@212) ($generated@@49 $generated@@199 $generated@@212))))
 :pattern ( ($generated@@49 $generated@@202 $generated@@212))
)) ($generated@@44 $generated@@199 $generated@@202)) (and (= $generated@@203 ($generated@@162 23)) (= (ControlFlow 0 2) (- 0 1)))) (and (<= ($generated@@162 (- 0 100)) $generated@@203) (< $generated@@203 68719476736)))))))))))))))))))
(let (($generated@@213  (=> (and (and ($generated@@185 $generated@@183) ($generated@@187 $generated@@183)) (and (= 3 $generated@@204) (= (ControlFlow 0 6) 2))) $generated@@205)))
$generated@@213)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 ((_ BitVec 1)) T@U)
(declare-fun $generated@@129 (T@U) (_ BitVec 1))
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 ((_ BitVec 2)) T@U)
(declare-fun $generated@@137 (T@U) (_ BitVec 2))
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 ((_ BitVec 3)) T@U)
(declare-fun $generated@@145 (T@U) (_ BitVec 3))
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 ((_ BitVec 4)) T@U)
(declare-fun $generated@@153 (T@U) (_ BitVec 4))
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@160 ((_ BitVec 7)) T@U)
(declare-fun $generated@@161 (T@U) (_ BitVec 7))
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@168 ((_ BitVec 8)) T@U)
(declare-fun $generated@@169 (T@U) (_ BitVec 8))
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@176 ((_ BitVec 15)) T@U)
(declare-fun $generated@@177 (T@U) (_ BitVec 15))
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@184 ((_ BitVec 16)) T@U)
(declare-fun $generated@@185 (T@U) (_ BitVec 16))
(declare-fun $generated@@191 () T@T)
(declare-fun $generated@@192 ((_ BitVec 32)) T@U)
(declare-fun $generated@@193 (T@U) (_ BitVec 32))
(declare-fun $generated@@199 () T@T)
(declare-fun $generated@@200 ((_ BitVec 53)) T@U)
(declare-fun $generated@@201 (T@U) (_ BitVec 53))
(declare-fun $generated@@207 () T@T)
(declare-fun $generated@@208 ((_ BitVec 100)) T@U)
(declare-fun $generated@@209 (T@U) (_ BitVec 100))
(declare-fun $generated@@215 (T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@217 (T@T T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@219 (T@T) T@T)
(declare-fun $generated@@220 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@271 (Int) Int)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@285 (T@U T@U T@U) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 () T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@348 (T@U T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@360 (T@U T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@T) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@U Int) T@U)
(declare-fun $generated@@409 (T@U) Int)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@429 (T@T T@U) T@U)
(declare-fun $generated@@450 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (forall (($generated@@130 (_ BitVec 1)) ) (! (= ($generated@@129 ($generated@@128 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@128 $generated@@130))
)) (= ($generated@@1 $generated@@127) 12)) (forall (($generated@@131 T@U) ) (!  (=> (= (type $generated@@131) $generated@@127) (= ($generated@@128 ($generated@@129 $generated@@131)) $generated@@131))
 :pattern ( ($generated@@129 $generated@@131))
))) (forall (($generated@@132 (_ BitVec 1)) ) (! (= (type ($generated@@128 $generated@@132)) $generated@@127)
 :pattern ( ($generated@@128 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@127) (= (type $generated@@134) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@133 ($generated@@70 1) $generated@@134))
 :pattern ( ($generated@@69 $generated@@133 ($generated@@70 1) $generated@@134))
)))
(assert  (and (and (and (forall (($generated@@138 (_ BitVec 2)) ) (! (= ($generated@@137 ($generated@@136 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@136 $generated@@138))
)) (= ($generated@@1 $generated@@135) 13)) (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@135) (= ($generated@@136 ($generated@@137 $generated@@139)) $generated@@139))
 :pattern ( ($generated@@137 $generated@@139))
))) (forall (($generated@@140 (_ BitVec 2)) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@135)
 :pattern ( ($generated@@136 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@135) (= (type $generated@@142) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@141 ($generated@@70 2) $generated@@142))
 :pattern ( ($generated@@69 $generated@@141 ($generated@@70 2) $generated@@142))
)))
(assert  (and (and (and (forall (($generated@@146 (_ BitVec 3)) ) (! (= ($generated@@145 ($generated@@144 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@144 $generated@@146))
)) (= ($generated@@1 $generated@@143) 14)) (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@143) (= ($generated@@144 ($generated@@145 $generated@@147)) $generated@@147))
 :pattern ( ($generated@@145 $generated@@147))
))) (forall (($generated@@148 (_ BitVec 3)) ) (! (= (type ($generated@@144 $generated@@148)) $generated@@143)
 :pattern ( ($generated@@144 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@143) (= (type $generated@@150) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@149 ($generated@@70 3) $generated@@150))
 :pattern ( ($generated@@69 $generated@@149 ($generated@@70 3) $generated@@150))
)))
(assert  (and (and (and (forall (($generated@@154 (_ BitVec 4)) ) (! (= ($generated@@153 ($generated@@152 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@154))
)) (= ($generated@@1 $generated@@151) 15)) (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@151) (= ($generated@@152 ($generated@@153 $generated@@155)) $generated@@155))
 :pattern ( ($generated@@153 $generated@@155))
))) (forall (($generated@@156 (_ BitVec 4)) ) (! (= (type ($generated@@152 $generated@@156)) $generated@@151)
 :pattern ( ($generated@@152 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@151) (= (type $generated@@158) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@157 ($generated@@70 4) $generated@@158))
 :pattern ( ($generated@@69 $generated@@157 ($generated@@70 4) $generated@@158))
)))
(assert  (and (and (and (forall (($generated@@162 (_ BitVec 7)) ) (! (= ($generated@@161 ($generated@@160 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@160 $generated@@162))
)) (= ($generated@@1 $generated@@159) 16)) (forall (($generated@@163 T@U) ) (!  (=> (= (type $generated@@163) $generated@@159) (= ($generated@@160 ($generated@@161 $generated@@163)) $generated@@163))
 :pattern ( ($generated@@161 $generated@@163))
))) (forall (($generated@@164 (_ BitVec 7)) ) (! (= (type ($generated@@160 $generated@@164)) $generated@@159)
 :pattern ( ($generated@@160 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@159) (= (type $generated@@166) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@165 ($generated@@70 7) $generated@@166))
 :pattern ( ($generated@@69 $generated@@165 ($generated@@70 7) $generated@@166))
)))
(assert  (and (and (and (forall (($generated@@170 (_ BitVec 8)) ) (! (= ($generated@@169 ($generated@@168 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@170))
)) (= ($generated@@1 $generated@@167) 17)) (forall (($generated@@171 T@U) ) (!  (=> (= (type $generated@@171) $generated@@167) (= ($generated@@168 ($generated@@169 $generated@@171)) $generated@@171))
 :pattern ( ($generated@@169 $generated@@171))
))) (forall (($generated@@172 (_ BitVec 8)) ) (! (= (type ($generated@@168 $generated@@172)) $generated@@167)
 :pattern ( ($generated@@168 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@167) (= (type $generated@@174) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@173 ($generated@@70 8) $generated@@174))
 :pattern ( ($generated@@69 $generated@@173 ($generated@@70 8) $generated@@174))
)))
(assert  (and (and (and (forall (($generated@@178 (_ BitVec 15)) ) (! (= ($generated@@177 ($generated@@176 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@176 $generated@@178))
)) (= ($generated@@1 $generated@@175) 18)) (forall (($generated@@179 T@U) ) (!  (=> (= (type $generated@@179) $generated@@175) (= ($generated@@176 ($generated@@177 $generated@@179)) $generated@@179))
 :pattern ( ($generated@@177 $generated@@179))
))) (forall (($generated@@180 (_ BitVec 15)) ) (! (= (type ($generated@@176 $generated@@180)) $generated@@175)
 :pattern ( ($generated@@176 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (= (type $generated@@181) $generated@@175) (= (type $generated@@182) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@181 ($generated@@70 15) $generated@@182))
 :pattern ( ($generated@@69 $generated@@181 ($generated@@70 15) $generated@@182))
)))
(assert  (and (and (and (forall (($generated@@186 (_ BitVec 16)) ) (! (= ($generated@@185 ($generated@@184 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@184 $generated@@186))
)) (= ($generated@@1 $generated@@183) 19)) (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@183) (= ($generated@@184 ($generated@@185 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@187))
))) (forall (($generated@@188 (_ BitVec 16)) ) (! (= (type ($generated@@184 $generated@@188)) $generated@@183)
 :pattern ( ($generated@@184 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (= (type $generated@@189) $generated@@183) (= (type $generated@@190) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@189 ($generated@@70 16) $generated@@190))
 :pattern ( ($generated@@69 $generated@@189 ($generated@@70 16) $generated@@190))
)))
(assert  (and (and (and (forall (($generated@@194 (_ BitVec 32)) ) (! (= ($generated@@193 ($generated@@192 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@192 $generated@@194))
)) (= ($generated@@1 $generated@@191) 20)) (forall (($generated@@195 T@U) ) (!  (=> (= (type $generated@@195) $generated@@191) (= ($generated@@192 ($generated@@193 $generated@@195)) $generated@@195))
 :pattern ( ($generated@@193 $generated@@195))
))) (forall (($generated@@196 (_ BitVec 32)) ) (! (= (type ($generated@@192 $generated@@196)) $generated@@191)
 :pattern ( ($generated@@192 $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@191) (= (type $generated@@198) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@197 ($generated@@70 32) $generated@@198))
 :pattern ( ($generated@@69 $generated@@197 ($generated@@70 32) $generated@@198))
)))
(assert  (and (and (and (forall (($generated@@202 (_ BitVec 53)) ) (! (= ($generated@@201 ($generated@@200 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@200 $generated@@202))
)) (= ($generated@@1 $generated@@199) 21)) (forall (($generated@@203 T@U) ) (!  (=> (= (type $generated@@203) $generated@@199) (= ($generated@@200 ($generated@@201 $generated@@203)) $generated@@203))
 :pattern ( ($generated@@201 $generated@@203))
))) (forall (($generated@@204 (_ BitVec 53)) ) (! (= (type ($generated@@200 $generated@@204)) $generated@@199)
 :pattern ( ($generated@@200 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (= (type $generated@@205) $generated@@199) (= (type $generated@@206) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@205 ($generated@@70 53) $generated@@206))
 :pattern ( ($generated@@69 $generated@@205 ($generated@@70 53) $generated@@206))
)))
(assert  (and (and (and (forall (($generated@@210 (_ BitVec 100)) ) (! (= ($generated@@209 ($generated@@208 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@208 $generated@@210))
)) (= ($generated@@1 $generated@@207) 22)) (forall (($generated@@211 T@U) ) (!  (=> (= (type $generated@@211) $generated@@207) (= ($generated@@208 ($generated@@209 $generated@@211)) $generated@@211))
 :pattern ( ($generated@@209 $generated@@211))
))) (forall (($generated@@212 (_ BitVec 100)) ) (! (= (type ($generated@@208 $generated@@212)) $generated@@207)
 :pattern ( ($generated@@208 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@207) (= (type $generated@@214) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@213 ($generated@@70 100) $generated@@214))
 :pattern ( ($generated@@69 $generated@@213 ($generated@@70 100) $generated@@214))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (= ($generated@@1 ($generated@@217 $generated@@221 $generated@@222)) 23)) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@218 ($generated@@217 $generated@@223 $generated@@224)) $generated@@223)
 :pattern ( ($generated@@217 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (! (= ($generated@@219 ($generated@@217 $generated@@225 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@217 $generated@@225 $generated@@226))
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@219 (type $generated@@227))))
(= (type ($generated@@215 $generated@@227 $generated@@228 $generated@@229)) $generated@@230))
 :pattern ( ($generated@@215 $generated@@227 $generated@@228 $generated@@229))
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(let (($generated@@236 (type $generated@@232)))
(= (type ($generated@@220 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@217 $generated@@236 $generated@@235))))
 :pattern ( ($generated@@220 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@219 (type $generated@@237))))
 (=> (= (type $generated@@240) $generated@@241) (= ($generated@@215 ($generated@@220 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@238 $generated@@239) $generated@@240)))
 :weight 0
))) (and (and (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (or (= $generated@@244 $generated@@246) (= ($generated@@215 ($generated@@220 $generated@@243 $generated@@244 $generated@@245 $generated@@242) $generated@@246 $generated@@247) ($generated@@215 $generated@@243 $generated@@246 $generated@@247)))
 :weight 0
)) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (or (= $generated@@251 $generated@@253) (= ($generated@@215 ($generated@@220 $generated@@249 $generated@@250 $generated@@251 $generated@@248) $generated@@252 $generated@@253) ($generated@@215 $generated@@249 $generated@@252 $generated@@253)))
 :weight 0
))) (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (or true (= ($generated@@215 ($generated@@220 $generated@@255 $generated@@256 $generated@@257 $generated@@254) $generated@@258 $generated@@259) ($generated@@215 $generated@@255 $generated@@258 $generated@@259)))
 :weight 0
)))) (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 Bool) ) (! (= (type ($generated@@216 $generated@@260 $generated@@261 $generated@@262 $generated@@263)) ($generated@@217 $generated@@72 $generated@@4))
 :pattern ( ($generated@@216 $generated@@260 $generated@@261 $generated@@262 $generated@@263))
))))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 Bool) ($generated@@268 T@U) ($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@64 (type $generated@@269))))
 (=> (and (and (and (and (= (type $generated@@264) $generated@@72) (= (type $generated@@265) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@266) ($generated@@63 $generated@@4))) (= (type $generated@@268) $generated@@72)) (= (type $generated@@269) ($generated@@63 $generated@@270))) (= ($generated@@0 ($generated@@215 ($generated@@216 $generated@@264 $generated@@265 $generated@@266 $generated@@267) $generated@@268 $generated@@269))  (=> (and (not (= $generated@@268 $generated@@264)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@265 $generated@@268) $generated@@266))) $generated@@267))))
 :pattern ( ($generated@@215 ($generated@@216 $generated@@264 $generated@@265 $generated@@266 $generated@@267) $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@271 $generated@@272) $generated@@272)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 (type $generated@@274)))
(= (type ($generated@@273 $generated@@274)) $generated@@275))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@273 $generated@@276) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 24)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert  (and (= ($generated@@1 $generated@@287) 25) (forall (($generated@@288 T@U) ) (! (= (type ($generated@@286 $generated@@288)) $generated@@287)
 :pattern ( ($generated@@286 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@61) (= (type $generated@@291) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@285 ($generated@@286 $generated@@289) $generated@@290 $generated@@291) ($generated@@69 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@285 ($generated@@286 $generated@@289) $generated@@290 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 26)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@71 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@76 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@76 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 27)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@71 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@76 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@76 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@296 (type $generated@@328))))
(let (($generated@@330 ($generated@@295 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@294 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@293 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@76 ($generated@@292 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@292 $generated@@328))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@314 (type $generated@@332))))
(let (($generated@@334 ($generated@@313 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@312 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@311 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@76 ($generated@@310 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@310 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@338) ($generated@@71 $generated@@287 $generated@@4)) (= (type $generated@@339) $generated@@61)) (= (type $generated@@340) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@338 ($generated@@336 $generated@@339) $generated@@340) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@287) ($generated@@0 ($generated@@76 $generated@@338 $generated@@341))) ($generated@@285 $generated@@341 $generated@@339 $generated@@340))
 :pattern ( ($generated@@76 $generated@@338 $generated@@341))
))))
 :pattern ( ($generated@@69 $generated@@338 ($generated@@336 $generated@@339) $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@344) ($generated@@71 $generated@@287 $generated@@4)) (= (type $generated@@345) $generated@@61)) (= (type $generated@@346) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@344 ($generated@@342 $generated@@345) $generated@@346) (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@287) ($generated@@0 ($generated@@76 $generated@@344 $generated@@347))) ($generated@@285 $generated@@347 $generated@@345 $generated@@346))
 :pattern ( ($generated@@76 $generated@@344 $generated@@347))
))))
 :pattern ( ($generated@@69 $generated@@344 ($generated@@342 $generated@@345) $generated@@346))
)))
(assert  (and (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (! (= (type ($generated@@348 $generated@@350 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350 $generated@@351))
)) (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@296 (type $generated@@352))))
(let (($generated@@354 ($generated@@295 (type $generated@@352))))
(= (type ($generated@@349 $generated@@352)) ($generated@@71 $generated@@354 $generated@@353))))
 :pattern ( ($generated@@349 $generated@@352))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (and (= (type $generated@@355) ($generated@@294 $generated@@287 $generated@@287)) (= (type $generated@@356) $generated@@61)) (= (type $generated@@357) $generated@@61)) (= (type $generated@@358) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@355 ($generated@@348 $generated@@356 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@287) ($generated@@0 ($generated@@76 ($generated@@292 $generated@@355) $generated@@359))) (and ($generated@@285 ($generated@@76 ($generated@@349 $generated@@355) $generated@@359) $generated@@357 $generated@@358) ($generated@@285 $generated@@359 $generated@@356 $generated@@358)))
 :pattern ( ($generated@@76 ($generated@@349 $generated@@355) $generated@@359))
 :pattern ( ($generated@@76 ($generated@@292 $generated@@355) $generated@@359))
))))
 :pattern ( ($generated@@69 $generated@@355 ($generated@@348 $generated@@356 $generated@@357) $generated@@358))
)))
(assert  (and (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (= (type ($generated@@360 $generated@@362 $generated@@363)) $generated@@61)
 :pattern ( ($generated@@360 $generated@@362 $generated@@363))
)) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@314 (type $generated@@364))))
(let (($generated@@366 ($generated@@313 (type $generated@@364))))
(= (type ($generated@@361 $generated@@364)) ($generated@@71 $generated@@366 $generated@@365))))
 :pattern ( ($generated@@361 $generated@@364))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (and (= (type $generated@@367) ($generated@@312 $generated@@287 $generated@@287)) (= (type $generated@@368) $generated@@61)) (= (type $generated@@369) $generated@@61)) (= (type $generated@@370) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@367 ($generated@@360 $generated@@368 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@287) ($generated@@0 ($generated@@76 ($generated@@310 $generated@@367) $generated@@371))) (and ($generated@@285 ($generated@@76 ($generated@@361 $generated@@367) $generated@@371) $generated@@369 $generated@@370) ($generated@@285 $generated@@371 $generated@@368 $generated@@370)))
 :pattern ( ($generated@@76 ($generated@@361 $generated@@367) $generated@@371))
 :pattern ( ($generated@@76 ($generated@@310 $generated@@367) $generated@@371))
))))
 :pattern ( ($generated@@69 $generated@@367 ($generated@@360 $generated@@368 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@373 T@T) ) (! (= (type ($generated@@372 $generated@@373)) ($generated@@71 $generated@@373 $generated@@4))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@314 (type $generated@@374))))
(let (($generated@@376 ($generated@@313 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@312 $generated@@376 $generated@@375)) (= (= $generated@@374 ($generated@@311 $generated@@376 $generated@@375)) (= ($generated@@310 $generated@@374) ($generated@@372 $generated@@376))))))
 :pattern ( ($generated@@310 $generated@@374))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@280 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@279 $generated@@378)) (<= 0 ($generated@@278 $generated@@377))))
 :pattern ( ($generated@@278 $generated@@377))
)))
(assert (forall (($generated@@380 T@U) ) (! (= (type ($generated@@379 $generated@@380)) $generated@@61)
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@61) (= (type $generated@@382) $generated@@61)) (= ($generated@@379 ($generated@@348 $generated@@381 $generated@@382)) $generated@@381))
 :pattern ( ($generated@@348 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (= (type ($generated@@383 $generated@@384)) $generated@@61)
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@61) (= (type $generated@@386) $generated@@61)) (= ($generated@@383 ($generated@@348 $generated@@385 $generated@@386)) $generated@@386))
 :pattern ( ($generated@@348 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@61) (= (type $generated@@388) $generated@@61)) (= ($generated@@67 ($generated@@348 $generated@@387 $generated@@388)) $generated@@58))
 :pattern ( ($generated@@348 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (= (type ($generated@@389 $generated@@390)) $generated@@61)
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@61) (= (type $generated@@392) $generated@@61)) (= ($generated@@389 ($generated@@360 $generated@@391 $generated@@392)) $generated@@391))
 :pattern ( ($generated@@360 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (= (type ($generated@@393 $generated@@394)) $generated@@61)
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@61) (= (type $generated@@396) $generated@@61)) (= ($generated@@393 ($generated@@360 $generated@@395 $generated@@396)) $generated@@396))
 :pattern ( ($generated@@360 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@61) (= (type $generated@@398) $generated@@61)) (= ($generated@@67 ($generated@@360 $generated@@397 $generated@@398)) $generated@@59))
 :pattern ( ($generated@@360 $generated@@397 $generated@@398))
)))
(assert  (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@401)) $generated@@61)
 :pattern ( ($generated@@399 $generated@@401))
)) (forall (($generated@@402 T@U) ($generated@@403 Int) ) (! (let (($generated@@404 ($generated@@280 (type $generated@@402))))
(= (type ($generated@@400 $generated@@402 $generated@@403)) $generated@@404))
 :pattern ( ($generated@@400 $generated@@402 $generated@@403))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (= (type $generated@@405) ($generated@@279 $generated@@287)) (= (type $generated@@406) $generated@@61)) (= (type $generated@@407) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@405 ($generated@@399 $generated@@406) $generated@@407) (forall (($generated@@408 Int) ) (!  (=> (and (<= 0 $generated@@408) (< $generated@@408 ($generated@@278 $generated@@405))) ($generated@@285 ($generated@@400 $generated@@405 $generated@@408) $generated@@406 $generated@@407))
 :pattern ( ($generated@@400 $generated@@405 $generated@@408))
))))
 :pattern ( ($generated@@69 $generated@@405 ($generated@@399 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 Int) ) (! (= ($generated@@409 ($generated@@70 $generated@@410)) $generated@@410)
 :pattern ( ($generated@@70 $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (= (type ($generated@@411 $generated@@412)) $generated@@61)
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@61) (= ($generated@@411 ($generated@@336 $generated@@413)) $generated@@413))
 :pattern ( ($generated@@336 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (= (type $generated@@414) $generated@@61) (= ($generated@@67 ($generated@@336 $generated@@414)) $generated@@54))
 :pattern ( ($generated@@336 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (= (type ($generated@@415 $generated@@416)) $generated@@61)
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@61) (= ($generated@@415 ($generated@@342 $generated@@417)) $generated@@417))
 :pattern ( ($generated@@342 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@61) (= ($generated@@67 ($generated@@342 $generated@@418)) $generated@@55))
 :pattern ( ($generated@@342 $generated@@418))
)))
(assert  (and (forall (($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@421)) $generated@@61)
 :pattern ( ($generated@@419 $generated@@421))
)) (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) $generated@@61)
 :pattern ( ($generated@@420 $generated@@422))
))))
(assert (forall (($generated@@423 T@U) ) (!  (=> (= (type $generated@@423) $generated@@61) (= ($generated@@420 ($generated@@419 $generated@@423)) $generated@@423))
 :pattern ( ($generated@@419 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (= (type $generated@@424) $generated@@61) (= ($generated@@67 ($generated@@419 $generated@@424)) $generated@@56))
 :pattern ( ($generated@@419 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (= (type ($generated@@425 $generated@@426)) $generated@@61)
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (= (type $generated@@427) $generated@@61) (= ($generated@@425 ($generated@@399 $generated@@427)) $generated@@427))
 :pattern ( ($generated@@399 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (= (type $generated@@428) $generated@@61) (= ($generated@@67 ($generated@@399 $generated@@428)) $generated@@57))
 :pattern ( ($generated@@399 $generated@@428))
)))
(assert (forall (($generated@@430 T@T) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@430)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(= ($generated@@429 $generated@@433 ($generated@@286 $generated@@432)) $generated@@432))
 :pattern ( ($generated@@286 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
 (not ($generated@@0 ($generated@@76 ($generated@@372 $generated@@435) $generated@@434))))
 :pattern ( (let (($generated@@435 (type $generated@@434)))
($generated@@76 ($generated@@372 $generated@@435) $generated@@434)))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (= (type $generated@@436) ($generated@@71 $generated@@287 $generated@@2)) (= (type $generated@@437) $generated@@61)) (= (type $generated@@438) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@436 ($generated@@419 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@287) (< 0 ($generated ($generated@@76 $generated@@436 $generated@@439)))) ($generated@@285 $generated@@439 $generated@@437 $generated@@438))
 :pattern ( ($generated@@76 $generated@@436 $generated@@439))
))))
 :pattern ( ($generated@@69 $generated@@436 ($generated@@419 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@271 $generated@@440))) ($generated@@273 ($generated@@286 ($generated@@8 $generated@@440))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@271 $generated@@440))))
)))
(assert (forall (($generated@@441 T@U) ) (! (= ($generated@@286 ($generated@@273 $generated@@441)) ($generated@@273 ($generated@@286 $generated@@441)))
 :pattern ( ($generated@@286 ($generated@@273 $generated@@441)))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@280 (type $generated@@442))))
 (=> (and (= (type $generated@@442) ($generated@@279 $generated@@443)) (= ($generated@@278 $generated@@442) 0)) (= $generated@@442 ($generated@@277 $generated@@443))))
 :pattern ( ($generated@@278 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@445) $generated@@2)) ($generated@@69 $generated@@445 $generated@@46 $generated@@444))
 :pattern ( ($generated@@69 $generated@@445 $generated@@46 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@447) $generated@@3)) ($generated@@69 $generated@@447 $generated@@47 $generated@@446))
 :pattern ( ($generated@@69 $generated@@447 $generated@@47 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@449) $generated@@4)) ($generated@@69 $generated@@449 $generated@@44 $generated@@448))
 :pattern ( ($generated@@69 $generated@@449 $generated@@44 $generated@@448))
)))
(assert (= ($generated@@1 $generated@@450) 28))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@452) $generated@@450)) ($generated@@69 $generated@@452 $generated@@45 $generated@@451))
 :pattern ( ($generated@@69 $generated@@452 $generated@@45 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@454) $generated@@287)) ($generated@@69 $generated@@454 $generated@@48 $generated@@453))
 :pattern ( ($generated@@69 $generated@@454 $generated@@48 $generated@@453))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@455 () T@U)
(declare-fun $generated@@456 () T@U)
(declare-fun $generated@@457 () T@U)
(declare-fun $generated@@458 () Int)
(declare-fun $generated@@459 () Bool)
(declare-fun $generated@@460 () Int)
(declare-fun $generated@@461 (Bool) Bool)
(declare-fun $generated@@462 () Int)
(declare-fun $generated@@463 () Bool)
(declare-fun $generated@@464 () Int)
(declare-fun $generated@@465 () Bool)
(declare-fun $generated@@466 () Int)
(declare-fun $generated@@467 () Bool)
(declare-fun $generated@@468 () Int)
(declare-fun $generated@@469 () Bool)
(declare-fun $generated@@470 () Int)
(declare-fun $generated@@471 () Bool)
(declare-fun $generated@@472 () Int)
(declare-fun $generated@@473 () Bool)
(declare-fun $generated@@474 () Int)
(declare-fun $generated@@475 () Bool)
(declare-fun $generated@@476 () Int)
(declare-fun $generated@@477 () Bool)
(declare-fun $generated@@478 () Int)
(declare-fun $generated@@479 () Bool)
(declare-fun $generated@@480 () Int)
(declare-fun $generated@@481 () Bool)
(declare-fun $generated@@482 () Int)
(declare-fun $generated@@483 (T@U) Bool)
(declare-fun $generated@@484 (T@U) Bool)
(declare-fun $generated@@485 () Int)
(assert  (and (and (= (type $generated@@455) ($generated@@217 $generated@@72 $generated@@4)) (= (type $generated@@456) $generated@@72)) (= (type $generated@@457) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@486  (=> (and (= $generated@@455 ($generated@@216 $generated@@456 $generated@@457 $generated@@60 false)) (= $generated@@458 ($generated@@271 0))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= ($generated@@271 (- 0 100)) $generated@@458) (< $generated@@458 68719476736))) (=> (and (<= ($generated@@271 (- 0 100)) $generated@@458) (< $generated@@458 68719476736)) (=> (= $generated@@459 (< $generated@@460 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@459) $generated@@44 $generated@@457) ($generated@@461 (< $generated@@460 0))) (and ($generated@@461 (< $generated@@460 0)) (= $generated@@462 ($generated@@271 0)))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@271 (- 0 100)) $generated@@462) (< $generated@@462 68719476736))) (=> (and (<= ($generated@@271 (- 0 100)) $generated@@462) (< $generated@@462 68719476736)) (=> (= $generated@@463 (<= $generated@@460 ($generated@@271 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@463) $generated@@44 $generated@@457) ($generated@@461 (<= $generated@@460 ($generated@@271 0)))) (and ($generated@@461 (<= $generated@@460 ($generated@@271 0))) (= $generated@@464 ($generated@@271 0)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@271 (- 0 100)) $generated@@464) (< $generated@@464 68719476736))) (=> (and (<= ($generated@@271 (- 0 100)) $generated@@464) (< $generated@@464 68719476736)) (=> (= $generated@@465 (= $generated@@460 ($generated@@271 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@465) $generated@@44 $generated@@457) ($generated@@461 (= $generated@@460 ($generated@@271 0)))) (and ($generated@@461 (= $generated@@460 ($generated@@271 0))) (= $generated@@466 ($generated@@271 0)))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@271 (- 0 100)) $generated@@466) (< $generated@@466 68719476736))) (=> (and (<= ($generated@@271 (- 0 100)) $generated@@466) (< $generated@@466 68719476736)) (=> (= $generated@@467 (not (= $generated@@460 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@467) $generated@@44 $generated@@457) ($generated@@461 (not (= $generated@@460 0)))) (and ($generated@@461 (not (= $generated@@460 0))) (= $generated@@468 ($generated@@271 0)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@271 (- 0 100)) $generated@@468) (< $generated@@468 68719476736))) (=> (and (<= ($generated@@271 (- 0 100)) $generated@@468) (< $generated@@468 68719476736)) (=> (= $generated@@469 (> $generated@@460 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@469) $generated@@44 $generated@@457) ($generated@@461 (> $generated@@460 0))) (and ($generated@@461 (> $generated@@460 0)) (= $generated@@470 ($generated@@271 0)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@271 (- 0 100)) $generated@@470) (< $generated@@470 68719476736))) (=> (and (<= ($generated@@271 (- 0 100)) $generated@@470) (< $generated@@470 68719476736)) (=> (= $generated@@471 (>= $generated@@460 ($generated@@271 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@471) $generated@@44 $generated@@457) ($generated@@461 (>= $generated@@460 ($generated@@271 0)))) (and ($generated@@461 (>= $generated@@460 ($generated@@271 0))) (= $generated@@472 ($generated@@271 0)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@271 (- 0 100)) $generated@@472) (< $generated@@472 68719476736))) (=> (and (<= ($generated@@271 (- 0 100)) $generated@@472) (< $generated@@472 68719476736)) (=> (= $generated@@473 (< 0 $generated@@460)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@473) $generated@@44 $generated@@457) ($generated@@461 (< 0 $generated@@460))) (and ($generated@@461 (< 0 $generated@@460)) (= $generated@@474 ($generated@@271 0)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@271 (- 0 100)) $generated@@474) (< $generated@@474 68719476736))) (=> (and (<= ($generated@@271 (- 0 100)) $generated@@474) (< $generated@@474 68719476736)) (=> (= $generated@@475 (<= ($generated@@271 0) $generated@@460)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@475) $generated@@44 $generated@@457) ($generated@@461 (<= ($generated@@271 0) $generated@@460))) (and ($generated@@461 (<= ($generated@@271 0) $generated@@460)) (= $generated@@476 ($generated@@271 0)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@271 (- 0 100)) $generated@@476) (< $generated@@476 68719476736))) (=> (and (<= ($generated@@271 (- 0 100)) $generated@@476) (< $generated@@476 68719476736)) (=> (= $generated@@477 (= ($generated@@271 0) $generated@@460)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@477) $generated@@44 $generated@@457) ($generated@@461 (= ($generated@@271 0) $generated@@460))) (and ($generated@@461 (= ($generated@@271 0) $generated@@460)) (= $generated@@478 ($generated@@271 0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@271 (- 0 100)) $generated@@478) (< $generated@@478 68719476736))) (=> (and (<= ($generated@@271 (- 0 100)) $generated@@478) (< $generated@@478 68719476736)) (=> (= $generated@@479 (not (= 0 $generated@@460))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@479) $generated@@44 $generated@@457) ($generated@@461 (not (= 0 $generated@@460)))) (and ($generated@@461 (not (= 0 $generated@@460))) (= $generated@@480 ($generated@@271 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@271 (- 0 100)) $generated@@480) (< $generated@@480 68719476736))) (=> (and (<= ($generated@@271 (- 0 100)) $generated@@480) (< $generated@@480 68719476736)) (=> (and (= $generated@@481 (> 0 $generated@@460)) ($generated@@69 ($generated@@11 $generated@@481) $generated@@44 $generated@@457)) (=> (and (and ($generated@@461 (> 0 $generated@@460)) ($generated@@461 (> 0 $generated@@460))) (and (= $generated@@482 ($generated@@271 0)) (= (ControlFlow 0 2) (- 0 1)))) (and (<= ($generated@@271 (- 0 100)) $generated@@482) (< $generated@@482 68719476736)))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@487  (=> (and ($generated@@483 $generated@@457) ($generated@@484 $generated@@457)) (=> (and (and (<= ($generated@@271 (- 0 100)) $generated@@460) (< $generated@@460 68719476736)) (and (= 2 $generated@@485) (= (ControlFlow 0 14) 2))) $generated@@486))))
$generated@@487)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U) Bool)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@113 (T@T T@T) T@T)
(declare-fun $generated@@114 (T@T) T@T)
(declare-fun $generated@@115 (T@T) T@T)
(declare-fun $generated@@116 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@167 (Real) Int)
(declare-fun $generated@@169 (Int) Int)
(declare-fun $generated@@171 (Real) Real)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@177 (Int) T@U)
(declare-fun $generated@@178 (T@U) Int)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@183 (Int) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U) Int)
(declare-fun $generated@@190 (Int) Real)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@198 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert (= ($generated@@1 $generated@@107) 10))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (and (and (and (= (type $generated@@108) $generated@@107) (= (type $generated@@109) $generated@@107)) (= (type $generated@@110) $generated@@107)) (and ($generated@@106 $generated@@108 $generated@@109) ($generated@@106 $generated@@109 $generated@@110))) ($generated@@106 $generated@@108 $generated@@110))
 :pattern ( ($generated@@106 $generated@@108 $generated@@109) ($generated@@106 $generated@@109 $generated@@110))
 :pattern ( ($generated@@106 $generated@@108 $generated@@109) ($generated@@106 $generated@@108 $generated@@110))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ) (= ($generated@@1 ($generated@@113 $generated@@117 $generated@@118)) 11)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (! (= ($generated@@114 ($generated@@113 $generated@@119 $generated@@120)) $generated@@119)
 :pattern ( ($generated@@113 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (! (= ($generated@@115 ($generated@@113 $generated@@121 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@113 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@115 (type $generated@@123))))
(= (type ($generated@@111 $generated@@123 $generated@@124 $generated@@125)) $generated@@126))
 :pattern ( ($generated@@111 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 (type $generated@@130)))
(let (($generated@@132 (type $generated@@128)))
(= (type ($generated@@116 $generated@@127 $generated@@128 $generated@@129 $generated@@130)) ($generated@@113 $generated@@132 $generated@@131))))
 :pattern ( ($generated@@116 $generated@@127 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 ($generated@@115 (type $generated@@133))))
 (=> (= (type $generated@@136) $generated@@137) (= ($generated@@111 ($generated@@116 $generated@@133 $generated@@134 $generated@@135 $generated@@136) $generated@@134 $generated@@135) $generated@@136)))
 :weight 0
))) (and (and (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@111 ($generated@@116 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@111 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@111 ($generated@@116 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@111 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
))) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or true (= ($generated@@111 ($generated@@116 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@111 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)))) (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 Bool) ) (! (= (type ($generated@@112 $generated@@156 $generated@@157 $generated@@158 $generated@@159)) ($generated@@113 $generated@@46 $generated@@4))
 :pattern ( ($generated@@112 $generated@@156 $generated@@157 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Bool) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (let (($generated@@166 ($generated@@55 (type $generated@@165))))
 (=> (and (and (and (and (= (type $generated@@160) $generated@@46) (= (type $generated@@161) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@162) ($generated@@54 $generated@@4))) (= (type $generated@@164) $generated@@46)) (= (type $generated@@165) ($generated@@54 $generated@@166))) (= ($generated@@0 ($generated@@111 ($generated@@112 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@164 $generated@@165))  (=> (and (not (= $generated@@164 $generated@@160)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@161 $generated@@164) $generated@@162))) $generated@@163))))
 :pattern ( ($generated@@111 ($generated@@112 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 Real) ) (! (= ($generated@@167 $generated@@168) (to_int $generated@@168))
 :pattern ( ($generated@@167 $generated@@168))
)))
(assert (forall (($generated@@170 Int) ) (! (= ($generated@@169 $generated@@170) $generated@@170)
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 Real) ) (! (= ($generated@@171 $generated@@172) $generated@@172)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(= (type ($generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@173 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (= ($generated@@173 $generated@@176) $generated@@176)
 :pattern ( ($generated@@173 $generated@@176))
)))
(assert  (and (= ($generated@@1 $generated@@179) 12) (forall (($generated@@180 Int) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@177 $generated@@180))
))))
(assert (forall (($generated@@181 Int) ) (!  (=> (and (<= 0 $generated@@181) (< $generated@@181 65536)) (= ($generated@@178 ($generated@@177 $generated@@181)) $generated@@181))
 :pattern ( ($generated@@177 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> (= (type $generated@@182) $generated@@179) (and (and (= ($generated@@177 ($generated@@178 $generated@@182)) $generated@@182) (<= 0 ($generated@@178 $generated@@182))) (< ($generated@@178 $generated@@182) 65536)))
 :pattern ( ($generated@@178 $generated@@182))
)))
(assert (forall (($generated@@186 Int) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@107)
 :pattern ( ($generated@@183 $generated@@186))
)))
(assert (forall (($generated@@187 Int) ) (!  (=> (<= 0 $generated@@187) (and ($generated@@184 ($generated@@183 $generated@@187)) (= ($generated@@185 ($generated@@183 $generated@@187)) $generated@@187)))
 :pattern ( ($generated@@183 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (= (type $generated@@188) $generated@@107) (= (type $generated@@189) $generated@@107)) (or (or ($generated@@106 $generated@@188 $generated@@189) (= $generated@@188 $generated@@189)) ($generated@@106 $generated@@189 $generated@@188)))
 :pattern ( ($generated@@106 $generated@@188 $generated@@189) ($generated@@106 $generated@@189 $generated@@188))
)))
(assert (forall (($generated@@191 Int) ) (! (= ($generated@@190 $generated@@191) (to_real $generated@@191))
 :pattern ( ($generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@192) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@193) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@194) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@192 $generated@@194))) (and ($generated@@44 $generated@@192 $generated@@193) ($generated@@44 $generated@@193 $generated@@194))) ($generated@@44 $generated@@192 $generated@@194))
 :pattern ( ($generated@@44 $generated@@192 $generated@@193) ($generated@@44 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ) (!  (=> (= (type $generated@@195) $generated@@107) (<= 0 ($generated@@185 $generated@@195)))
 :pattern ( ($generated@@185 $generated@@195))
)))
(assert (forall (($generated@@196 Int) ) (! (= ($generated@@167 ($generated@@190 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@167 ($generated@@190 $generated@@196)))
)))
(assert  (and (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@107)
 :pattern ( ($generated@@197 $generated@@199))
)) (forall (($generated@@200 T@T) ($generated@@201 T@U) ) (! (= (type ($generated@@198 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@198 $generated@@200 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(= ($generated@@198 $generated@@203 ($generated@@197 $generated@@202)) $generated@@202))
 :pattern ( ($generated@@197 $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (= (type $generated@@204) $generated@@107) (= (type $generated@@205) $generated@@107)) (and (and (and (=> ($generated@@106 $generated@@204 $generated@@205) (not (= $generated@@204 $generated@@205))) (=> (and ($generated@@184 $generated@@204) (not ($generated@@184 $generated@@205))) ($generated@@106 $generated@@204 $generated@@205))) (=> (and ($generated@@184 $generated@@204) ($generated@@184 $generated@@205)) (= ($generated@@106 $generated@@204 $generated@@205) (< ($generated@@185 $generated@@204) ($generated@@185 $generated@@205))))) (=> (and ($generated@@106 $generated@@204 $generated@@205) ($generated@@184 $generated@@205)) ($generated@@184 $generated@@204))))
 :pattern ( ($generated@@106 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (!  (=> (and (= (type $generated@@206) $generated@@107) ($generated@@184 $generated@@206)) (= $generated@@206 ($generated@@183 ($generated@@185 $generated@@206))))
 :pattern ( ($generated@@185 $generated@@206))
 :pattern ( ($generated@@184 $generated@@206))
)))
(assert (forall (($generated@@207 Int) ) (! (= ($generated@@197 ($generated@@8 ($generated@@169 $generated@@207))) ($generated@@173 ($generated@@197 ($generated@@8 $generated@@207))))
 :pattern ( ($generated@@197 ($generated@@8 ($generated@@169 $generated@@207))))
)))
(assert (forall (($generated@@208 Real) ) (! (= ($generated@@197 ($generated@@9 ($generated@@171 $generated@@208))) ($generated@@173 ($generated@@197 ($generated@@9 $generated@@208))))
 :pattern ( ($generated@@197 ($generated@@9 ($generated@@171 $generated@@208))))
)))
(assert (forall (($generated@@209 T@U) ) (! (= ($generated@@197 ($generated@@173 $generated@@209)) ($generated@@173 ($generated@@197 $generated@@209)))
 :pattern ( ($generated@@197 ($generated@@173 $generated@@209)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@217 () Real)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () (_ BitVec 7))
(declare-fun $generated@@222 (T@U) (_ BitVec 7))
(declare-fun $generated@@223 ((_ BitVec 7)) T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () Int)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () Int)
(declare-fun $generated@@230 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@210) ($generated@@113 $generated@@46 $generated@@4)) (= (type $generated@@211) $generated@@46)) (= (type $generated@@212) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@215) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@218) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@219) $generated@@107)) (= (type $generated@@220) ($generated@@45 $generated@@46 $generated@@47))) (forall (($generated@@231 (_ BitVec 7)) ) (! (= ($generated@@222 ($generated@@223 $generated@@231)) $generated@@231)
 :pattern ( ($generated@@223 $generated@@231))
))) (= ($generated@@1 $generated@@230) 13)) (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@230) (= ($generated@@223 ($generated@@222 $generated@@232)) $generated@@232))
 :pattern ( ($generated@@222 $generated@@232))
))) (forall (($generated@@233 (_ BitVec 7)) ) (! (= (type ($generated@@223 $generated@@233)) $generated@@230)
 :pattern ( ($generated@@223 $generated@@233))
))) (= (type $generated@@224) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@227) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@228) $generated@@179)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@234  (=> (and (= $generated@@210 ($generated@@112 $generated@@211 $generated@@212 $generated@@50 false)) (= $generated@@213 ($generated@@169 120))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (<= ($generated@@169 0) $generated@@213)) (=> (<= ($generated@@169 0) $generated@@213) (and (=> (= (ControlFlow 0 2) (- 0 12)) (< $generated@@213 128)) (=> (< $generated@@213 128) (=> (and (and (and ($generated@@214 $generated@@215) ($generated@@216 $generated@@215)) (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@46) (=> (and (not (= $generated@@235 $generated@@211)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@212 $generated@@235) $generated@@50))) (= ($generated@@49 $generated@@215 $generated@@235) ($generated@@49 $generated@@212 $generated@@235))))
 :pattern ( ($generated@@49 $generated@@215 $generated@@235))
))) (and ($generated@@44 $generated@@212 $generated@@215) (= $generated@@217 ($generated@@171 120.0)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (= ($generated@@190 ($generated@@167 $generated@@217)) $generated@@217)) (=> (= ($generated@@190 ($generated@@167 $generated@@217)) $generated@@217) (and (=> (= (ControlFlow 0 2) (- 0 10)) (<= ($generated@@169 0) ($generated@@167 $generated@@217))) (=> (<= ($generated@@169 0) ($generated@@167 $generated@@217)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (< ($generated@@167 $generated@@217) 128)) (=> (< ($generated@@167 $generated@@217) 128) (=> (and (and (and ($generated@@214 $generated@@218) ($generated@@216 $generated@@218)) (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@46) (=> (and (not (= $generated@@236 $generated@@211)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@215 $generated@@236) $generated@@50))) (= ($generated@@49 $generated@@218 $generated@@236) ($generated@@49 $generated@@215 $generated@@236))))
 :pattern ( ($generated@@49 $generated@@218 $generated@@236))
))) (and ($generated@@44 $generated@@215 $generated@@218) (= $generated@@219 ($generated@@173 ($generated@@183 120))))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (or (= ($generated@@183 0) $generated@@219) ($generated@@106 ($generated@@183 0) $generated@@219))) (=> (or (= ($generated@@183 0) $generated@@219) ($generated@@106 ($generated@@183 0) $generated@@219)) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@106 $generated@@219 ($generated@@183 128))) (=> ($generated@@106 $generated@@219 ($generated@@183 128)) (=> (and (and (and (and ($generated@@214 $generated@@220) ($generated@@216 $generated@@220)) (forall (($generated@@237 T@U) ) (!  (=> (= (type $generated@@237) $generated@@46) (=> (and (not (= $generated@@237 $generated@@211)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@218 $generated@@237) $generated@@50))) (= ($generated@@49 $generated@@220 $generated@@237) ($generated@@49 $generated@@218 $generated@@237))))
 :pattern ( ($generated@@49 $generated@@220 $generated@@237))
))) (and ($generated@@44 $generated@@218 $generated@@220) (= $generated@@221 ($generated@@222 ($generated@@173 ($generated@@223 #b1111000)))))) (and (and (and ($generated@@214 $generated@@224) ($generated@@216 $generated@@224)) (forall (($generated@@238 T@U) ) (!  (=> (= (type $generated@@238) $generated@@46) (=> (and (not (= $generated@@238 $generated@@211)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@220 $generated@@238) $generated@@50))) (= ($generated@@49 $generated@@224 $generated@@238) ($generated@@49 $generated@@220 $generated@@238))))
 :pattern ( ($generated@@49 $generated@@224 $generated@@238))
))) (and ($generated@@44 $generated@@220 $generated@@224) (= $generated@@225 ($generated@@169 120))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@169 0) $generated@@225) (< $generated@@225 4294967296))) (=> (and (<= ($generated@@169 0) $generated@@225) (< $generated@@225 4294967296)) (=> (= $generated@@226 ($generated@@169 120)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= ($generated@@169 0) $generated@@226)) (=> (<= ($generated@@169 0) $generated@@226) (and (=> (= (ControlFlow 0 2) (- 0 4)) (< $generated@@226 128)) (=> (< $generated@@226 128) (=> (and (and (and ($generated@@214 $generated@@227) ($generated@@216 $generated@@227)) (forall (($generated@@239 T@U) ) (!  (=> (= (type $generated@@239) $generated@@46) (=> (and (not (= $generated@@239 $generated@@211)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@224 $generated@@239) $generated@@50))) (= ($generated@@49 $generated@@227 $generated@@239) ($generated@@49 $generated@@224 $generated@@239))))
 :pattern ( ($generated@@49 $generated@@227 $generated@@239))
))) (and ($generated@@44 $generated@@224 $generated@@227) (= $generated@@228 ($generated@@173 ($generated@@177 120))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@178 ($generated@@177 ($generated@@169 0))) ($generated@@178 $generated@@228))) (=> (<= ($generated@@178 ($generated@@177 ($generated@@169 0))) ($generated@@178 $generated@@228)) (=> (= (ControlFlow 0 2) (- 0 1)) (< ($generated@@178 $generated@@228) ($generated@@178 ($generated@@177 ($generated@@169 128)))))))))))))))))))))))))))))))))))
(let (($generated@@240  (=> (and (and ($generated@@214 $generated@@212) ($generated@@216 $generated@@212)) (and (= 2 $generated@@229) (= (ControlFlow 0 14) 2))) $generated@@234)))
$generated@@240)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@181  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= 0 $generated@@177)) (=> (<= 0 $generated@@177) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 $generated@@177) (< $generated@@177 128))) (=> (and (<= 0 $generated@@177) (< $generated@@177 128)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@157 0) $generated@@177) (< $generated@@177 4294967296))) (=> (and (<= ($generated@@157 0) $generated@@177) (< $generated@@177 4294967296)) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= 0 $generated@@177) (< $generated@@177 65536))))))))))))
(let (($generated@@182  (=> (and ($generated@@178 $generated@@175) ($generated@@179 $generated@@175)) (=> (and (and (= 1 $generated@@180) (<= ($generated@@157 0) $generated@@177)) (and (< $generated@@177 128) (= (ControlFlow 0 6) 2))) $generated@@181))))
$generated@@182)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Real) Int)
(declare-fun $generated@@159 (Int) Int)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@165 (Int) Real)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@T T@U) T@U)
(declare-fun $generated@@170 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Real) ) (! (= ($generated@@157 $generated@@158) (to_int $generated@@158))
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 Int) ) (! (= ($generated@@159 $generated@@160) $generated@@160)
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (let (($generated@@163 (type $generated@@162)))
(= (type ($generated@@161 $generated@@162)) $generated@@163))
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ) (! (= ($generated@@161 $generated@@164) $generated@@164)
 :pattern ( ($generated@@161 $generated@@164))
)))
(assert (forall (($generated@@166 Int) ) (! (= ($generated@@165 $generated@@166) (to_real $generated@@166))
 :pattern ( ($generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 Int) ) (! (= ($generated@@157 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@157 ($generated@@165 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 11) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@U) ) (! (= (type ($generated@@169 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@169 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(= ($generated@@169 $generated@@175 ($generated@@168 $generated@@174)) $generated@@174))
 :pattern ( ($generated@@168 $generated@@174))
)))
(assert (forall (($generated@@176 Int) ) (! (= ($generated@@168 ($generated@@8 ($generated@@159 $generated@@176))) ($generated@@161 ($generated@@168 ($generated@@8 $generated@@176))))
 :pattern ( ($generated@@168 ($generated@@8 ($generated@@159 $generated@@176))))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@168 ($generated@@161 $generated@@177)) ($generated@@161 ($generated@@168 $generated@@177)))
 :pattern ( ($generated@@168 ($generated@@161 $generated@@177)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () Real)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 () Int)
(assert  (and (and (and (= (type $generated@@178) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@179) $generated@@47)) (= (type $generated@@180) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@181) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@186  (=> (= $generated@@178 ($generated@@45 $generated@@179 $generated@@180 $generated@@181 false)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (= ($generated@@165 ($generated@@157 $generated@@182)) $generated@@182)) (=> (= ($generated@@165 ($generated@@157 $generated@@182)) $generated@@182) (and (=> (= (ControlFlow 0 2) (- 0 9)) (= ($generated@@165 ($generated@@157 $generated@@182)) $generated@@182)) (=> (= ($generated@@165 ($generated@@157 $generated@@182)) $generated@@182) (and (=> (= (ControlFlow 0 2) (- 0 8)) (<= 0 ($generated@@157 $generated@@182))) (=> (<= 0 ($generated@@157 $generated@@182)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (= ($generated@@165 ($generated@@157 $generated@@182)) $generated@@182)) (=> (= ($generated@@165 ($generated@@157 $generated@@182)) $generated@@182) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 ($generated@@157 $generated@@182)) (< ($generated@@157 $generated@@182) 128))) (=> (and (<= 0 ($generated@@157 $generated@@182)) (< ($generated@@157 $generated@@182) 128)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (= ($generated@@165 ($generated@@157 $generated@@182)) $generated@@182)) (=> (= ($generated@@165 ($generated@@157 $generated@@182)) $generated@@182) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@159 0) ($generated@@157 $generated@@182)) (< ($generated@@157 $generated@@182) 4294967296))) (=> (and (<= ($generated@@159 0) ($generated@@157 $generated@@182)) (< ($generated@@157 $generated@@182) 4294967296)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@165 ($generated@@157 $generated@@182)) $generated@@182)) (=> (= ($generated@@165 ($generated@@157 $generated@@182)) $generated@@182) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= 0 ($generated@@157 $generated@@182)) (< ($generated@@157 $generated@@182) 65536))))))))))))))))))))))
(let (($generated@@187  (=> (and (and (and ($generated@@183 $generated@@180) ($generated@@184 $generated@@180)) (= 1 $generated@@185)) (and (and (= ($generated@@165 ($generated@@157 $generated@@182)) $generated@@182) (<= ($generated@@159 0) ($generated@@157 $generated@@182))) (and (< ($generated@@157 $generated@@182) 128) (= (ControlFlow 0 11) 2)))) $generated@@186)))
$generated@@187)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@49 (T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U) T@U)
(declare-fun $generated@@61 (T@U T@U T@U) T@U)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@168 (Int) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U) Int)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert (= ($generated@@1 $generated@@45) 6))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and (and (and (= (type $generated@@46) $generated@@45) (= (type $generated@@47) $generated@@45)) (= (type $generated@@48) $generated@@45)) (and ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))) ($generated@@44 $generated@@46 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@46 $generated@@48))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@1 ($generated@@53 $generated@@66 $generated@@67)) 7)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@58 ($generated@@53 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@53 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@59 ($generated@@53 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@53 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@59 (type $generated@@72))))
(= (type ($generated@@57 $generated@@72 $generated@@73)) $generated@@74))
 :pattern ( ($generated@@57 $generated@@72 $generated@@73))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 (type $generated@@77)))
(let (($generated@@79 (type $generated@@76)))
(= (type ($generated@@60 $generated@@75 $generated@@76 $generated@@77)) ($generated@@53 $generated@@79 $generated@@78))))
 :pattern ( ($generated@@60 $generated@@75 $generated@@76 $generated@@77))
))) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (let (($generated@@83 ($generated@@59 (type $generated@@80))))
 (=> (= (type $generated@@82) $generated@@83) (= ($generated@@57 ($generated@@60 $generated@@80 $generated@@81 $generated@@82) $generated@@81) $generated@@82)))
 :weight 0
))) (and (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (or (= $generated@@86 $generated@@87) (= ($generated@@57 ($generated@@60 $generated@@85 $generated@@86 $generated@@84) $generated@@87) ($generated@@57 $generated@@85 $generated@@87)))
 :weight 0
)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (or true (= ($generated@@57 ($generated@@60 $generated@@89 $generated@@90 $generated@@88) $generated@@91) ($generated@@57 $generated@@89 $generated@@91)))
 :weight 0
)))) (forall (($generated@@92 T@T) ) (= ($generated@@1 ($generated@@55 $generated@@92)) 8))) (forall (($generated@@93 T@T) ) (! (= ($generated@@51 ($generated@@55 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@55 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@51 (type $generated@@95))))
(= (type ($generated@@56 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@56 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@54) 9)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= (type ($generated@@61 $generated@@97 $generated@@98 $generated@@99)) $generated@@54)
 :pattern ( ($generated@@61 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@51 (type $generated@@101))))
 (=> (= (type $generated@@102) $generated@@103) (= ($generated@@56 ($generated@@61 $generated@@100 $generated@@101 $generated@@102) $generated@@101) $generated@@102)))
 :weight 0
))) (and (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@106 $generated@@107) (= ($generated@@56 ($generated@@61 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@56 $generated@@105 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or true (= ($generated@@56 ($generated@@61 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@56 $generated@@109 $generated@@111)))
 :weight 0
)))) (= ($generated@@1 $generated@@52) 10)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@62 $generated@@112 $generated@@113)) 11))) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@63 ($generated@@62 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@62 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@64 ($generated@@62 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@62 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@64 (type $generated@@118))))
(= (type ($generated@@49 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@49 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@65 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@62 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@65 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@64 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@49 ($generated@@65 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@49 ($generated@@65 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@49 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@49 ($generated@@65 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@49 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@49 ($generated@@65 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@49 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@50 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@62 $generated@@52 $generated@@4))
 :pattern ( ($generated@@50 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@51 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@52) (= (type $generated@@156) ($generated@@53 $generated@@52 $generated@@54))) (= (type $generated@@157) ($generated@@55 $generated@@4))) (= (type $generated@@159) $generated@@52)) (= (type $generated@@160) ($generated@@55 $generated@@161))) (= ($generated@@0 ($generated@@49 ($generated@@50 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@56 ($generated@@57 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@49 ($generated@@50 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@171 Int) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@45)
 :pattern ( ($generated@@168 $generated@@171))
)))
(assert (forall (($generated@@172 Int) ) (!  (=> (<= 0 $generated@@172) (and ($generated@@169 ($generated@@168 $generated@@172)) (= ($generated@@170 ($generated@@168 $generated@@172)) $generated@@172)))
 :pattern ( ($generated@@168 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@45) (= (type $generated@@174) $generated@@45)) (or (or ($generated@@44 $generated@@173 $generated@@174) (= $generated@@173 $generated@@174)) ($generated@@44 $generated@@174 $generated@@173)))
 :pattern ( ($generated@@44 $generated@@173 $generated@@174) ($generated@@44 $generated@@174 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (!  (=> (= (type $generated@@175) $generated@@45) (<= 0 ($generated@@170 $generated@@175)))
 :pattern ( ($generated@@170 $generated@@175))
)))
(assert  (and (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@45)
 :pattern ( ($generated@@176 $generated@@178))
)) (forall (($generated@@179 T@T) ($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@177 $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(= ($generated@@177 $generated@@182 ($generated@@176 $generated@@181)) $generated@@181))
 :pattern ( ($generated@@176 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (= (type $generated@@183) $generated@@45) (= (type $generated@@184) $generated@@45)) (and (and (and (=> ($generated@@44 $generated@@183 $generated@@184) (not (= $generated@@183 $generated@@184))) (=> (and ($generated@@169 $generated@@183) (not ($generated@@169 $generated@@184))) ($generated@@44 $generated@@183 $generated@@184))) (=> (and ($generated@@169 $generated@@183) ($generated@@169 $generated@@184)) (= ($generated@@44 $generated@@183 $generated@@184) (< ($generated@@170 $generated@@183) ($generated@@170 $generated@@184))))) (=> (and ($generated@@44 $generated@@183 $generated@@184) ($generated@@169 $generated@@184)) ($generated@@169 $generated@@183))))
 :pattern ( ($generated@@44 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (and (= (type $generated@@185) $generated@@45) ($generated@@169 $generated@@185)) (= $generated@@185 ($generated@@168 ($generated@@170 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@185))
 :pattern ( ($generated@@169 $generated@@185))
)))
(assert (forall (($generated@@186 Int) ) (! (= ($generated@@176 ($generated@@8 ($generated@@162 $generated@@186))) ($generated@@164 ($generated@@176 ($generated@@8 $generated@@186))))
 :pattern ( ($generated@@176 ($generated@@8 ($generated@@162 $generated@@186))))
)))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@176 ($generated@@164 $generated@@187)) ($generated@@164 ($generated@@176 $generated@@187)))
 :pattern ( ($generated@@176 ($generated@@164 $generated@@187)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@195 () Int)
(assert  (and (and (and (and (= (type $generated@@188) ($generated@@62 $generated@@52 $generated@@4)) (= (type $generated@@189) $generated@@52)) (= (type $generated@@190) ($generated@@53 $generated@@52 $generated@@54))) (= (type $generated@@191) ($generated@@55 $generated@@4))) (= (type $generated@@192) $generated@@45)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@196  (=> (= $generated@@188 ($generated@@50 $generated@@189 $generated@@190 $generated@@191 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@169 $generated@@192)) (=> ($generated@@169 $generated@@192) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@169 $generated@@192)) (=> ($generated@@169 $generated@@192) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= ($generated@@162 0) ($generated@@170 $generated@@192)) (< ($generated@@170 $generated@@192) 4294967296))))))))))
(let (($generated@@197  (=> (and ($generated@@193 $generated@@190) ($generated@@194 $generated@@190)) (=> (and (and (= 1 $generated@@195) (or (= ($generated@@168 0) $generated@@192) ($generated@@44 ($generated@@168 0) $generated@@192))) (and ($generated@@44 $generated@@192 ($generated@@168 128)) (= (ControlFlow 0 5) 2))) $generated@@196))))
$generated@@197)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 ((_ BitVec 7)) Int)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@T T@U) T@U)
(declare-fun $generated@@167 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert (forall (($generated@@164 (_ BitVec 7)) ) (!  (and (and (<= 0 ($generated@@163 $generated@@164)) (< ($generated@@163 $generated@@164) 128)) (= ($generated@@163 $generated@@164) (bv2int $generated@@164)))
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert  (and (and (= ($generated@@1 $generated@@167) 11) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@U) ) (! (= (type ($generated@@166 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@166 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ) (! (let (($generated@@172 (type $generated@@171)))
(= ($generated@@166 $generated@@172 ($generated@@165 $generated@@171)) $generated@@171))
 :pattern ( ($generated@@165 $generated@@171))
)))
(assert (forall (($generated@@173 Int) ) (! (= ($generated@@165 ($generated@@8 ($generated@@157 $generated@@173))) ($generated@@159 ($generated@@165 ($generated@@8 $generated@@173))))
 :pattern ( ($generated@@165 ($generated@@8 ($generated@@157 $generated@@173))))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@165 ($generated@@159 $generated@@174)) ($generated@@159 ($generated@@165 $generated@@174)))
 :pattern ( ($generated@@165 ($generated@@159 $generated@@174)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () (_ BitVec 7))
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 () Int)
(assert  (and (and (and (= (type $generated@@175) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@176) $generated@@47)) (= (type $generated@@177) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@178) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@183  (=> (and (= $generated@@175 ($generated@@45 $generated@@176 $generated@@177 $generated@@178 false)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@157 0) ($generated@@163 $generated@@179)) (< ($generated@@163 $generated@@179) 4294967296)))))
(let (($generated@@184  (=> (and (and ($generated@@180 $generated@@177) ($generated@@181 $generated@@177)) (and (= 1 $generated@@182) (= (ControlFlow 0 3) 2))) $generated@@183)))
$generated@@184)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 () Int)
(assert  (and (and (= (type $generated@@183) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@184) $generated@@46)) (= (type $generated@@185) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@190 true))
(let (($generated@@191  (=> (and (< $generated@@181 ($generated@@162 0)) (= (ControlFlow 0 4) 1)) $generated@@190)))
(let (($generated@@192  (=> (and (<= ($generated@@162 0) $generated@@181) (= $generated@@182 ($generated@@162 128))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@162 0) $generated@@182) (< $generated@@182 4294967296))) (=> (and (<= ($generated@@162 0) $generated@@182) (< $generated@@182 4294967296)) (=> (= (ControlFlow 0 2) 1) $generated@@190))))))
(let (($generated@@193  (=> (and (= $generated@@183 ($generated@@107 $generated@@184 $generated@@185 $generated@@50 false)) (= $generated@@186 ($generated@@162 0))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= ($generated@@162 0) $generated@@186) (< $generated@@186 4294967296))) (=> (and (<= ($generated@@162 0) $generated@@186) (< $generated@@186 4294967296)) (and (=> (= (ControlFlow 0 5) 2) $generated@@192) (=> (= (ControlFlow 0 5) 4) $generated@@191)))))))
(let (($generated@@194  (=> (and ($generated@@187 $generated@@185) ($generated@@188 $generated@@185)) (=> (and (and (<= ($generated@@162 0) $generated@@181) (< $generated@@181 4294967296)) (and (= 1 $generated@@189) (= (ControlFlow 0 7) 5))) $generated@@193))))
$generated@@194))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@181  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= 0 $generated@@177)) (=> (<= 0 $generated@@177) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 $generated@@177) (< $generated@@177 128))) (=> (and (<= 0 $generated@@177) (< $generated@@177 128)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@157 0) $generated@@177) (< $generated@@177 4294967296))) (=> (and (<= ($generated@@157 0) $generated@@177) (< $generated@@177 4294967296)) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= 0 $generated@@177) (< $generated@@177 65536))))))))))))
(let (($generated@@182  (=> (and (and (and ($generated@@178 $generated@@175) ($generated@@179 $generated@@175)) (and (<= ($generated@@157 0) $generated@@177) (< $generated@@177 4294967296))) (and (and (= 1 $generated@@180) (<= ($generated@@157 0) $generated@@177)) (and (< $generated@@177 128) (= (ControlFlow 0 6) 2)))) $generated@@181)))
$generated@@182)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 () T@T)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 () T@T)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@260 (T@T T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@334 (Int) Int)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (Int) T@U)
(declare-fun $generated@@341 (T@U) Int)
(declare-fun $generated@@342 () T@T)
(declare-fun $generated@@345 (T@U) Bool)
(declare-fun $generated@@346 (T@U T@U T@U) Bool)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@358 (T@T) T@U)
(declare-fun $generated@@359 (T@U) Int)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@380 (T@U) Int)
(declare-fun $generated@@381 (T@T) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@T) T@U)
(declare-fun $generated@@388 (T@T T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@T T@T) T@U)
(declare-fun $generated@@406 (T@T T@T) T@T)
(declare-fun $generated@@407 (T@T) T@T)
(declare-fun $generated@@408 (T@T) T@T)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@461 (T@T T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@489 (T@U T@U) T@U)
(declare-fun $generated@@497 (T@U T@U) T@U)
(declare-fun $generated@@508 (T@T) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@574 (T@U Int) T@U)
(declare-fun $generated@@583 (T@U) Int)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@611 (T@U) Int)
(declare-fun $generated@@612 (T@U) Int)
(declare-fun $generated@@628 (T@U) T@U)
(declare-fun $generated@@688 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@220 $generated@@221 $generated@@222)) (forall (($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@221 $generated@@223) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@222 $generated@@223) $generated@@60))
)))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@2) ($generated@@224 $generated@@225 ($generated@@75 0)))
 :pattern ( ($generated@@224 $generated@@225 ($generated@@75 0)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@132) ($generated@@224 $generated@@226 ($generated@@75 1)))
 :pattern ( ($generated@@224 $generated@@226 ($generated@@75 1)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@140) ($generated@@224 $generated@@227 ($generated@@75 2)))
 :pattern ( ($generated@@224 $generated@@227 ($generated@@75 2)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@148) ($generated@@224 $generated@@228 ($generated@@75 3)))
 :pattern ( ($generated@@224 $generated@@228 ($generated@@75 3)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@156) ($generated@@224 $generated@@229 ($generated@@75 4)))
 :pattern ( ($generated@@224 $generated@@229 ($generated@@75 4)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@164) ($generated@@224 $generated@@230 ($generated@@75 7)))
 :pattern ( ($generated@@224 $generated@@230 ($generated@@75 7)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@172) ($generated@@224 $generated@@231 ($generated@@75 8)))
 :pattern ( ($generated@@224 $generated@@231 ($generated@@75 8)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@180) ($generated@@224 $generated@@232 ($generated@@75 15)))
 :pattern ( ($generated@@224 $generated@@232 ($generated@@75 15)))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (= (type $generated@@233) $generated@@188) ($generated@@224 $generated@@233 ($generated@@75 16)))
 :pattern ( ($generated@@224 $generated@@233 ($generated@@75 16)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (= (type $generated@@234) $generated@@196) ($generated@@224 $generated@@234 ($generated@@75 32)))
 :pattern ( ($generated@@224 $generated@@234 ($generated@@75 32)))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@204) ($generated@@224 $generated@@235 ($generated@@75 53)))
 :pattern ( ($generated@@224 $generated@@235 ($generated@@75 53)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@212) ($generated@@224 $generated@@236 ($generated@@75 100)))
 :pattern ( ($generated@@224 $generated@@236 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@239) 25) (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@64) (= (type $generated@@243) $generated@@64)) (= (type $generated@@244) $generated@@239)) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243))) ($generated@@237 $generated@@244))
 :pattern ( ($generated@@237 $generated@@244) ($generated@@224 $generated@@244 ($generated@@238 $generated@@242 $generated@@243)))
)))
(assert  (and (and (= ($generated@@1 $generated@@248) 26) (forall (($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@246 $generated@@249))
))) (forall (($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@250)) $generated@@248)
 :pattern ( ($generated@@247 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@251) $generated@@239) (= (type $generated@@252) $generated@@239)) true) (= ($generated@@245 $generated@@251 $generated@@252)  (and (= ($generated@@246 $generated@@251) ($generated@@246 $generated@@252)) (= ($generated@@247 $generated@@251) ($generated@@247 $generated@@252)))))
 :pattern ( ($generated@@245 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@253 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@257) $generated@@64)) ($generated@@224 $generated@@256 ($generated@@253 $generated@@257))) ($generated@@254 $generated@@256))
 :pattern ( ($generated@@224 $generated@@256 ($generated@@253 $generated@@257)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@264 $generated@@265)) 27)) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@260 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@262 ($generated@@260 $generated@@268 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@260 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@262 (type $generated@@270))))
(= (type ($generated@@258 $generated@@270 $generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@258 $generated@@270 $generated@@271 $generated@@272))
))) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(let (($generated@@279 (type $generated@@275)))
(= (type ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277)) ($generated@@260 $generated@@279 $generated@@278))))
 :pattern ( ($generated@@263 $generated@@274 $generated@@275 $generated@@276 $generated@@277))
))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@262 (type $generated@@280))))
 (=> (= (type $generated@@283) $generated@@284) (= ($generated@@258 ($generated@@263 $generated@@280 $generated@@281 $generated@@282 $generated@@283) $generated@@281 $generated@@282) $generated@@283)))
 :weight 0
))) (and (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (or (= $generated@@287 $generated@@289) (= ($generated@@258 ($generated@@263 $generated@@286 $generated@@287 $generated@@288 $generated@@285) $generated@@289 $generated@@290) ($generated@@258 $generated@@286 $generated@@289 $generated@@290)))
 :weight 0
)) (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (or (= $generated@@294 $generated@@296) (= ($generated@@258 ($generated@@263 $generated@@292 $generated@@293 $generated@@294 $generated@@291) $generated@@295 $generated@@296) ($generated@@258 $generated@@292 $generated@@295 $generated@@296)))
 :weight 0
))) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (or true (= ($generated@@258 ($generated@@263 $generated@@298 $generated@@299 $generated@@300 $generated@@297) $generated@@301 $generated@@302) ($generated@@258 $generated@@298 $generated@@301 $generated@@302)))
 :weight 0
)))) (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ) (! (= (type ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306)) ($generated@@260 $generated@@77 $generated@@4))
 :pattern ( ($generated@@259 $generated@@303 $generated@@304 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 Bool) ($generated@@311 T@U) ($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@67 (type $generated@@312))))
 (=> (and (and (and (and (= (type $generated@@307) $generated@@77) (= (type $generated@@308) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@309) ($generated@@66 $generated@@4))) (= (type $generated@@311) $generated@@77)) (= (type $generated@@312) ($generated@@66 $generated@@313))) (= ($generated@@0 ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))  (=> (and (not (= $generated@@311 $generated@@307)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@308 $generated@@311) $generated@@309))) $generated@@310))))
 :pattern ( ($generated@@258 ($generated@@259 $generated@@307 $generated@@308 $generated@@309 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) $generated@@239)
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (= (type $generated@@318) $generated@@64) (= (type $generated@@319) $generated@@64)) (= (type $generated@@320) $generated@@248)) (= (type $generated@@321) $generated@@248)) (= ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319))  (and ($generated@@315 $generated@@320 $generated@@318) ($generated@@315 $generated@@321 $generated@@319))))
 :pattern ( ($generated@@224 ($generated@@314 $generated@@320 $generated@@321) ($generated@@238 $generated@@318 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@239) (= (type $generated@@323) $generated@@239)) (= ($generated@@245 $generated@@322 $generated@@323) (= $generated@@322 $generated@@323)))
 :pattern ( ($generated@@245 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@64)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@327) $generated@@64)) (= ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@248) ($generated@@0 ($generated@@81 $generated@@326 $generated@@328))) ($generated@@315 $generated@@328 $generated@@327))
 :pattern ( ($generated@@81 $generated@@326 $generated@@328))
))))
 :pattern ( ($generated@@224 $generated@@326 ($generated@@324 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@64)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@248) ($generated@@0 ($generated@@81 $generated@@331 $generated@@333))) ($generated@@315 $generated@@333 $generated@@332))
 :pattern ( ($generated@@81 $generated@@331 $generated@@333))
))))
 :pattern ( ($generated@@224 $generated@@331 ($generated@@329 $generated@@332)))
)))
(assert (forall (($generated@@335 Int) ) (! (= ($generated@@334 $generated@@335) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 (type $generated@@337)))
(= (type ($generated@@336 $generated@@337)) $generated@@338))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= ($generated@@336 $generated@@339) $generated@@339)
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert  (and (= ($generated@@1 $generated@@342) 28) (forall (($generated@@343 Int) ) (! (= (type ($generated@@340 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@340 $generated@@343))
))))
(assert (forall (($generated@@344 Int) ) (!  (=> (and (<= 0 $generated@@344) (< $generated@@344 65536)) (= ($generated@@341 ($generated@@340 $generated@@344)) $generated@@344))
 :pattern ( ($generated@@340 $generated@@344))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@347) $generated@@64) (= (type $generated@@348) $generated@@64)) (= (type $generated@@349) $generated@@248)) (= (type $generated@@350) $generated@@248)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@345 $generated@@351)) (= ($generated@@74 ($generated@@314 $generated@@349 $generated@@350) ($generated@@238 $generated@@347 $generated@@348) $generated@@351)  (and ($generated@@346 $generated@@349 $generated@@347 $generated@@351) ($generated@@346 $generated@@350 $generated@@348 $generated@@351))))
 :pattern ( ($generated@@74 ($generated@@314 $generated@@349 $generated@@350) ($generated@@238 $generated@@347 $generated@@348) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (= (type ($generated@@352 $generated@@353)) $generated@@68)
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@239) (= ($generated@@237 $generated@@354) (= ($generated@@352 $generated@@354) $generated@@61)))
 :pattern ( ($generated@@237 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@239) ($generated@@237 $generated@@355)) (exists (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (and (and (= (type $generated@@356) $generated@@248) (= (type $generated@@357) $generated@@248)) (= $generated@@355 ($generated@@314 $generated@@356 $generated@@357)))
 :no-pattern (type $generated@@356)
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
)))
 :pattern ( ($generated@@237 $generated@@355))
)))
(assert  (and (and (forall (($generated@@362 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@362)) 29)) (forall (($generated@@363 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@363)) $generated@@363)
 :pattern ( ($generated@@360 $generated@@363))
))) (forall (($generated@@364 T@T) ) (! (= (type ($generated@@358 $generated@@364)) ($generated@@360 $generated@@364))
 :pattern ( ($generated@@358 $generated@@364))
))))
(assert (forall (($generated@@365 T@T) ) (! (= ($generated@@359 ($generated@@358 $generated@@365)) 0)
 :pattern ( ($generated@@358 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@342) (and (and (= ($generated@@340 ($generated@@341 $generated@@366)) $generated@@366) (<= 0 ($generated@@341 $generated@@366))) (< ($generated@@341 $generated@@366) 65536)))
 :pattern ( ($generated@@341 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (= (type ($generated@@367 $generated@@368)) $generated@@248)
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@64) (= (type $generated@@371) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@346 ($generated@@367 $generated@@369) $generated@@370 $generated@@371) ($generated@@74 $generated@@369 $generated@@370 $generated@@371)))
 :pattern ( ($generated@@346 ($generated@@367 $generated@@369) $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@372) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@373) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@374) $generated@@248)) (= (type $generated@@375) $generated@@64)) ($generated@@220 $generated@@372 $generated@@373)) ($generated@@346 $generated@@374 $generated@@375 $generated@@372)) ($generated@@346 $generated@@374 $generated@@375 $generated@@373))
 :pattern ( ($generated@@220 $generated@@372 $generated@@373) ($generated@@346 $generated@@374 $generated@@375 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@376) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@377) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@379) $generated@@64)) ($generated@@220 $generated@@376 $generated@@377)) ($generated@@74 $generated@@378 $generated@@379 $generated@@376)) ($generated@@74 $generated@@378 $generated@@379 $generated@@377))
 :pattern ( ($generated@@220 $generated@@376 $generated@@377) ($generated@@74 $generated@@378 $generated@@379 $generated@@376))
)))
(assert (forall (($generated@@382 T@T) ) (! (= (type ($generated@@381 $generated@@382)) ($generated@@76 $generated@@382 $generated@@2))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@79 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@76 $generated@@384 $generated@@2)) (and (= (= ($generated@@380 $generated@@383) 0) (= $generated@@383 ($generated@@381 $generated@@384))) (=> (not (= ($generated@@380 $generated@@383) 0)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (< 0 ($generated ($generated@@81 $generated@@383 $generated@@385))))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert  (and (and (and (and (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (= ($generated@@1 ($generated@@388 $generated@@391 $generated@@392)) 30)) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@389 ($generated@@388 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@388 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@390 ($generated@@388 $generated@@395 $generated@@396)) $generated@@396)
 :pattern ( ($generated@@388 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@389 (type $generated@@397))))
(= (type ($generated@@386 $generated@@397)) ($generated@@76 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@397))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= (type ($generated@@387 $generated@@399 $generated@@400)) ($generated@@388 $generated@@399 $generated@@400))
 :pattern ( ($generated@@387 $generated@@399 $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@T) ) (! (let (($generated@@403 (type $generated@@401)))
 (not ($generated@@0 ($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401))))
 :pattern ( (let (($generated@@403 (type $generated@@401)))
($generated@@81 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401)))
)))
(assert  (and (and (and (and (forall (($generated@@409 T@T) ($generated@@410 T@T) ) (= ($generated@@1 ($generated@@406 $generated@@409 $generated@@410)) 31)) (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (! (= ($generated@@407 ($generated@@406 $generated@@411 $generated@@412)) $generated@@411)
 :pattern ( ($generated@@406 $generated@@411 $generated@@412))
))) (forall (($generated@@413 T@T) ($generated@@414 T@T) ) (! (= ($generated@@408 ($generated@@406 $generated@@413 $generated@@414)) $generated@@414)
 :pattern ( ($generated@@406 $generated@@413 $generated@@414))
))) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@407 (type $generated@@415))))
(= (type ($generated@@404 $generated@@415)) ($generated@@76 $generated@@416 $generated@@4)))
 :pattern ( ($generated@@404 $generated@@415))
))) (forall (($generated@@417 T@T) ($generated@@418 T@T) ) (! (= (type ($generated@@405 $generated@@417 $generated@@418)) ($generated@@406 $generated@@417 $generated@@418))
 :pattern ( ($generated@@405 $generated@@417 $generated@@418))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@T) ) (! (let (($generated@@421 (type $generated@@419)))
 (not ($generated@@0 ($generated@@81 ($generated@@404 ($generated@@405 $generated@@421 $generated@@420)) $generated@@419))))
 :pattern ( (let (($generated@@421 (type $generated@@419)))
($generated@@81 ($generated@@404 ($generated@@405 $generated@@421 $generated@@420)) $generated@@419)))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@79 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@76 $generated@@423 $generated@@2)) (= ($generated@@254 $generated@@422) (forall (($generated@@424 T@U) ) (!  (=> (= (type $generated@@424) $generated@@423) (and (<= 0 ($generated ($generated@@81 $generated@@422 $generated@@424))) (<= ($generated ($generated@@81 $generated@@422 $generated@@424)) ($generated@@380 $generated@@422))))
 :pattern ( ($generated@@81 $generated@@422 $generated@@424))
)))))
 :pattern ( ($generated@@254 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@390 (type $generated@@425))))
(let (($generated@@427 ($generated@@389 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@388 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@387 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@386 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@390 (type $generated@@430))))
(= (type ($generated@@429 $generated@@430)) ($generated@@76 $generated@@431 $generated@@4)))
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@390 (type $generated@@432))))
(let (($generated@@434 ($generated@@389 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@388 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@387 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@433) ($generated@@0 ($generated@@81 ($generated@@429 $generated@@432) $generated@@435)))
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@429 $generated@@432))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@408 (type $generated@@436))))
(let (($generated@@438 ($generated@@407 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@406 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@405 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) ($generated@@0 ($generated@@81 ($generated@@404 $generated@@436) $generated@@439)))
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@404 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@408 (type $generated@@441))))
(= (type ($generated@@440 $generated@@441)) ($generated@@76 $generated@@442 $generated@@4)))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@408 (type $generated@@443))))
(let (($generated@@445 ($generated@@407 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@406 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@405 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@444) ($generated@@0 ($generated@@81 ($generated@@440 $generated@@443) $generated@@446)))
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@440 $generated@@443))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@448) $generated@@64)) (= ($generated@@224 $generated@@447 ($generated@@253 $generated@@448)) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@447 $generated@@449)))) ($generated@@315 $generated@@449 $generated@@448))
 :pattern ( ($generated@@81 $generated@@447 $generated@@449))
))))
 :pattern ( ($generated@@224 $generated@@447 ($generated@@253 $generated@@448)))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (= (type $generated@@450) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@451) $generated@@64)) (= (type $generated@@452) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@450 ($generated@@324 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@248) ($generated@@0 ($generated@@81 $generated@@450 $generated@@453))) ($generated@@346 $generated@@453 $generated@@451 $generated@@452))
 :pattern ( ($generated@@81 $generated@@450 $generated@@453))
))))
 :pattern ( ($generated@@74 $generated@@450 ($generated@@324 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (= (type $generated@@454) ($generated@@76 $generated@@248 $generated@@4)) (= (type $generated@@455) $generated@@64)) (= (type $generated@@456) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@454 ($generated@@329 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@248) ($generated@@0 ($generated@@81 $generated@@454 $generated@@457))) ($generated@@346 $generated@@457 $generated@@455 $generated@@456))
 :pattern ( ($generated@@81 $generated@@454 $generated@@457))
))))
 :pattern ( ($generated@@74 $generated@@454 ($generated@@329 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(= ($generated ($generated@@81 ($generated@@381 $generated@@459) $generated@@458)) 0))
 :pattern ( (let (($generated@@459 (type $generated@@458)))
($generated@@81 ($generated@@381 $generated@@459) $generated@@458)))
)))
(assert  (and (and (forall (($generated@@463 T@U) ) (! (= (type ($generated@@460 $generated@@463)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@460 $generated@@463))
)) (forall (($generated@@464 T@T) ($generated@@465 T@U) ) (! (= (type ($generated@@461 $generated@@464 $generated@@465)) $generated@@464)
 :pattern ( ($generated@@461 $generated@@464 $generated@@465))
))) (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@390 (type $generated@@466))))
(let (($generated@@468 ($generated@@389 (type $generated@@466))))
(= (type ($generated@@462 $generated@@466)) ($generated@@76 $generated@@468 $generated@@467))))
 :pattern ( ($generated@@462 $generated@@466))
))))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) ($generated@@388 $generated@@248 $generated@@248)) (= (type $generated@@470) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@460 $generated@@469) $generated@@470))  (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@469) ($generated@@246 ($generated@@461 $generated@@239 $generated@@470)))) (= ($generated@@81 ($generated@@462 $generated@@469) ($generated@@246 ($generated@@461 $generated@@239 $generated@@470))) ($generated@@247 ($generated@@461 $generated@@239 $generated@@470))))))
 :pattern ( ($generated@@81 ($generated@@460 $generated@@469) $generated@@470))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) ($generated@@76 $generated@@248 $generated@@4))
 :pattern ( ($generated@@471 $generated@@473))
)) (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@408 (type $generated@@474))))
(let (($generated@@476 ($generated@@407 (type $generated@@474))))
(= (type ($generated@@472 $generated@@474)) ($generated@@76 $generated@@476 $generated@@475))))
 :pattern ( ($generated@@472 $generated@@474))
))))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) ($generated@@406 $generated@@248 $generated@@248)) (= (type $generated@@478) $generated@@248)) (= ($generated@@0 ($generated@@81 ($generated@@471 $generated@@477) $generated@@478))  (and ($generated@@0 ($generated@@81 ($generated@@404 $generated@@477) ($generated@@246 ($generated@@461 $generated@@239 $generated@@478)))) (= ($generated@@81 ($generated@@472 $generated@@477) ($generated@@246 ($generated@@461 $generated@@239 $generated@@478))) ($generated@@247 ($generated@@461 $generated@@239 $generated@@478))))))
 :pattern ( ($generated@@81 ($generated@@471 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
(let (($generated@@482 ($generated@@389 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@388 $generated@@482 $generated@@481)) (= ($generated@@0 ($generated@@81 ($generated@@429 $generated@@479) $generated@@480)) (exists (($generated@@483 T@U) ) (!  (and (= (type $generated@@483) $generated@@482) (and ($generated@@0 ($generated@@81 ($generated@@386 $generated@@479) $generated@@483)) (= $generated@@480 ($generated@@81 ($generated@@462 $generated@@479) $generated@@483))))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@479) $generated@@483))
 :pattern ( ($generated@@81 ($generated@@462 $generated@@479) $generated@@483))
))))))
 :pattern ( ($generated@@81 ($generated@@429 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@485)))
(let (($generated@@487 ($generated@@407 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@406 $generated@@487 $generated@@486)) (= ($generated@@0 ($generated@@81 ($generated@@440 $generated@@484) $generated@@485)) (exists (($generated@@488 T@U) ) (!  (and (= (type $generated@@488) $generated@@487) (and ($generated@@0 ($generated@@81 ($generated@@404 $generated@@484) $generated@@488)) (= $generated@@485 ($generated@@81 ($generated@@472 $generated@@484) $generated@@488))))
 :pattern ( ($generated@@81 ($generated@@404 $generated@@484) $generated@@488))
 :pattern ( ($generated@@81 ($generated@@472 $generated@@484) $generated@@488))
))))))
 :pattern ( ($generated@@81 ($generated@@440 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (and (= (type $generated@@492) ($generated@@388 $generated@@248 $generated@@248)) (= (type $generated@@493) $generated@@64)) (= (type $generated@@494) $generated@@64)) (= (type $generated@@495) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@492 ($generated@@489 $generated@@493 $generated@@494) $generated@@495) (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@492) $generated@@496))) (and ($generated@@346 ($generated@@81 ($generated@@462 $generated@@492) $generated@@496) $generated@@494 $generated@@495) ($generated@@346 $generated@@496 $generated@@493 $generated@@495)))
 :pattern ( ($generated@@81 ($generated@@462 $generated@@492) $generated@@496))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@492) $generated@@496))
))))
 :pattern ( ($generated@@74 $generated@@492 ($generated@@489 $generated@@493 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) ($generated@@406 $generated@@248 $generated@@248)) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@500 ($generated@@497 $generated@@501 $generated@@502) $generated@@503) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@404 $generated@@500) $generated@@504))) (and ($generated@@346 ($generated@@81 ($generated@@472 $generated@@500) $generated@@504) $generated@@502 $generated@@503) ($generated@@346 $generated@@504 $generated@@501 $generated@@503)))
 :pattern ( ($generated@@81 ($generated@@472 $generated@@500) $generated@@504))
 :pattern ( ($generated@@81 ($generated@@404 $generated@@500) $generated@@504))
))))
 :pattern ( ($generated@@74 $generated@@500 ($generated@@497 $generated@@501 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@505) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@506) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@507) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@505 $generated@@507))) (and ($generated@@220 $generated@@505 $generated@@506) ($generated@@220 $generated@@506 $generated@@507))) ($generated@@220 $generated@@505 $generated@@507))
 :pattern ( ($generated@@220 $generated@@505 $generated@@506) ($generated@@220 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@T) ) (! (= (type ($generated@@508 $generated@@509)) ($generated@@76 $generated@@509 $generated@@4))
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@408 (type $generated@@510))))
(let (($generated@@512 ($generated@@407 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@406 $generated@@512 $generated@@511)) (= (= $generated@@510 ($generated@@405 $generated@@512 $generated@@511)) (= ($generated@@404 $generated@@510) ($generated@@508 $generated@@512))))))
 :pattern ( ($generated@@404 $generated@@510))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@408 (type $generated@@513))))
(let (($generated@@515 ($generated@@407 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@406 $generated@@515 $generated@@514)) (= (= $generated@@513 ($generated@@405 $generated@@515 $generated@@514)) (= ($generated@@440 $generated@@513) ($generated@@508 $generated@@514))))))
 :pattern ( ($generated@@440 $generated@@513))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@408 (type $generated@@516))))
(let (($generated@@518 ($generated@@407 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@406 $generated@@518 $generated@@517)) (= (= $generated@@516 ($generated@@405 $generated@@518 $generated@@517)) (= ($generated@@471 $generated@@516) ($generated@@508 $generated@@248))))))
 :pattern ( ($generated@@471 $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@390 (type $generated@@519))))
(let (($generated@@521 ($generated@@389 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@388 $generated@@521 $generated@@520)) (or (= $generated@@519 ($generated@@387 $generated@@521 $generated@@520)) (exists (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (and (and (= (type $generated@@522) $generated@@248) (= (type $generated@@523) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@460 $generated@@519) ($generated@@367 ($generated@@314 $generated@@522 $generated@@523)))))
 :no-pattern (type $generated@@522)
 :no-pattern (type $generated@@523)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
 :no-pattern ($generated $generated@@523)
 :no-pattern ($generated@@0 $generated@@523)
))))))
 :pattern ( ($generated@@460 $generated@@519))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 ($generated@@408 (type $generated@@524))))
(let (($generated@@526 ($generated@@407 (type $generated@@524))))
 (=> (= (type $generated@@524) ($generated@@406 $generated@@526 $generated@@525)) (or (= $generated@@524 ($generated@@405 $generated@@526 $generated@@525)) (exists (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (and (and (= (type $generated@@527) $generated@@248) (= (type $generated@@528) $generated@@248)) ($generated@@0 ($generated@@81 ($generated@@471 $generated@@524) ($generated@@367 ($generated@@314 $generated@@527 $generated@@528)))))
 :no-pattern (type $generated@@527)
 :no-pattern (type $generated@@528)
 :no-pattern ($generated $generated@@527)
 :no-pattern ($generated@@0 $generated@@527)
 :no-pattern ($generated $generated@@528)
 :no-pattern ($generated@@0 $generated@@528)
))))))
 :pattern ( ($generated@@471 $generated@@524))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@248) ($generated@@315 $generated@@529 $generated@@46)) (and (= ($generated@@367 ($generated@@461 $generated@@2 $generated@@529)) $generated@@529) ($generated@@224 ($generated@@461 $generated@@2 $generated@@529) $generated@@46)))
 :pattern ( ($generated@@315 $generated@@529 $generated@@46))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@248) ($generated@@315 $generated@@530 $generated@@47)) (and (= ($generated@@367 ($generated@@461 $generated@@3 $generated@@530)) $generated@@530) ($generated@@224 ($generated@@461 $generated@@3 $generated@@530) $generated@@47)))
 :pattern ( ($generated@@315 $generated@@530 $generated@@47))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@248) ($generated@@315 $generated@@531 $generated@@44)) (and (= ($generated@@367 ($generated@@461 $generated@@4 $generated@@531)) $generated@@531) ($generated@@224 ($generated@@461 $generated@@4 $generated@@531) $generated@@44)))
 :pattern ( ($generated@@315 $generated@@531 $generated@@44))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@248) ($generated@@315 $generated@@532 $generated@@45)) (and (= ($generated@@367 ($generated@@461 $generated@@342 $generated@@532)) $generated@@532) ($generated@@224 ($generated@@461 $generated@@342 $generated@@532) $generated@@45)))
 :pattern ( ($generated@@315 $generated@@532 $generated@@45))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@64) (= ($generated@@315 ($generated@@367 $generated@@533) $generated@@534) ($generated@@224 $generated@@533 $generated@@534)))
 :pattern ( ($generated@@315 ($generated@@367 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@79 (type $generated@@535))))
 (=> (= (type $generated@@535) ($generated@@76 $generated@@536 $generated@@2)) (<= 0 ($generated@@380 $generated@@535))))
 :pattern ( ($generated@@380 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 ($generated@@361 (type $generated@@537))))
 (=> (= (type $generated@@537) ($generated@@360 $generated@@538)) (<= 0 ($generated@@359 $generated@@537))))
 :pattern ( ($generated@@359 $generated@@537))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@64)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (= ($generated@@539 ($generated@@489 $generated@@541 $generated@@542)) $generated@@541))
 :pattern ( ($generated@@489 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@64)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@64) (= (type $generated@@546) $generated@@64)) (= ($generated@@543 ($generated@@489 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@489 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (= ($generated@@72 ($generated@@489 $generated@@547 $generated@@548)) $generated@@58))
 :pattern ( ($generated@@489 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@64)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@64) (= (type $generated@@552) $generated@@64)) (= ($generated@@549 ($generated@@497 $generated@@551 $generated@@552)) $generated@@551))
 :pattern ( ($generated@@497 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@64)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@64) (= (type $generated@@556) $generated@@64)) (= ($generated@@553 ($generated@@497 $generated@@555 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@497 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@64) (= (type $generated@@558) $generated@@64)) (= ($generated@@72 ($generated@@497 $generated@@557 $generated@@558)) $generated@@59))
 :pattern ( ($generated@@497 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@248) (= (type $generated@@560) $generated@@248)) (= ($generated@@352 ($generated@@314 $generated@@559 $generated@@560)) $generated@@61))
 :pattern ( ($generated@@314 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@64)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@64) (= (type $generated@@564) $generated@@64)) (= ($generated@@561 ($generated@@238 $generated@@563 $generated@@564)) $generated@@563))
 :pattern ( ($generated@@238 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@64)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@64) (= (type $generated@@568) $generated@@64)) (= ($generated@@565 ($generated@@238 $generated@@567 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@238 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@248) (= (type $generated@@570) $generated@@248)) (= ($generated@@246 ($generated@@314 $generated@@569 $generated@@570)) $generated@@569))
 :pattern ( ($generated@@314 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@248) (= (type $generated@@572) $generated@@248)) (= ($generated@@247 ($generated@@314 $generated@@571 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@314 $generated@@571 $generated@@572))
)))
(assert  (and (forall (($generated@@575 T@U) ) (! (= (type ($generated@@573 $generated@@575)) $generated@@64)
 :pattern ( ($generated@@573 $generated@@575))
)) (forall (($generated@@576 T@U) ($generated@@577 Int) ) (! (let (($generated@@578 ($generated@@361 (type $generated@@576))))
(= (type ($generated@@574 $generated@@576 $generated@@577)) $generated@@578))
 :pattern ( ($generated@@574 $generated@@576 $generated@@577))
))))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@360 $generated@@248)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@579 ($generated@@573 $generated@@580) $generated@@581) (forall (($generated@@582 Int) ) (!  (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@359 $generated@@579))) ($generated@@346 ($generated@@574 $generated@@579 $generated@@582) $generated@@580 $generated@@581))
 :pattern ( ($generated@@574 $generated@@579 $generated@@582))
))))
 :pattern ( ($generated@@74 $generated@@579 ($generated@@573 $generated@@580) $generated@@581))
)))
(assert (forall (($generated@@584 Int) ) (! (= ($generated@@583 ($generated@@75 $generated@@584)) $generated@@584)
 :pattern ( ($generated@@75 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@64)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@64) (= ($generated@@585 ($generated@@324 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@324 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@64) (= ($generated@@72 ($generated@@324 $generated@@588)) $generated@@54))
 :pattern ( ($generated@@324 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@64)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@64) (= ($generated@@589 ($generated@@329 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@329 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@64) (= ($generated@@72 ($generated@@329 $generated@@592)) $generated@@55))
 :pattern ( ($generated@@329 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@64)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@64) (= ($generated@@593 ($generated@@253 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@253 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@596)) $generated@@56))
 :pattern ( ($generated@@253 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@64)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@64) (= ($generated@@597 ($generated@@573 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@573 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@64) (= ($generated@@72 ($generated@@573 $generated@@600)) $generated@@57))
 :pattern ( ($generated@@573 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 (type $generated@@601)))
(= ($generated@@461 $generated@@602 ($generated@@367 $generated@@601)) $generated@@601))
 :pattern ( ($generated@@367 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@388 $generated@@248 $generated@@248)) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) (= ($generated@@224 $generated@@603 ($generated@@489 $generated@@604 $generated@@605)) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@603) $generated@@606))) (and ($generated@@315 ($generated@@81 ($generated@@462 $generated@@603) $generated@@606) $generated@@605) ($generated@@315 $generated@@606 $generated@@604)))
 :pattern ( ($generated@@81 ($generated@@462 $generated@@603) $generated@@606))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@603) $generated@@606))
))))
 :pattern ( ($generated@@224 $generated@@603 ($generated@@489 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@607) ($generated@@406 $generated@@248 $generated@@248)) (= (type $generated@@608) $generated@@64)) (= (type $generated@@609) $generated@@64)) (= ($generated@@224 $generated@@607 ($generated@@497 $generated@@608 $generated@@609)) (forall (($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@248) ($generated@@0 ($generated@@81 ($generated@@404 $generated@@607) $generated@@610))) (and ($generated@@315 ($generated@@81 ($generated@@472 $generated@@607) $generated@@610) $generated@@609) ($generated@@315 $generated@@610 $generated@@608)))
 :pattern ( ($generated@@81 ($generated@@472 $generated@@607) $generated@@610))
 :pattern ( ($generated@@81 ($generated@@404 $generated@@607) $generated@@610))
))))
 :pattern ( ($generated@@224 $generated@@607 ($generated@@497 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@248) (= (type $generated@@614) $generated@@248)) (< ($generated@@611 $generated@@613) ($generated@@612 ($generated@@314 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@314 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@248) (= (type $generated@@616) $generated@@248)) (< ($generated@@611 $generated@@616) ($generated@@612 ($generated@@314 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@314 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@248) (= (type $generated@@618) $generated@@64)) (= (type $generated@@619) $generated@@64)) ($generated@@315 $generated@@617 ($generated@@489 $generated@@618 $generated@@619))) (and (= ($generated@@367 ($generated@@461 ($generated@@388 $generated@@248 $generated@@248) $generated@@617)) $generated@@617) ($generated@@224 ($generated@@461 ($generated@@388 $generated@@248 $generated@@248) $generated@@617) ($generated@@489 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@315 $generated@@617 ($generated@@489 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@248) (= (type $generated@@621) $generated@@64)) (= (type $generated@@622) $generated@@64)) ($generated@@315 $generated@@620 ($generated@@497 $generated@@621 $generated@@622))) (and (= ($generated@@367 ($generated@@461 ($generated@@406 $generated@@248 $generated@@248) $generated@@620)) $generated@@620) ($generated@@224 ($generated@@461 ($generated@@406 $generated@@248 $generated@@248) $generated@@620) ($generated@@497 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@315 $generated@@620 ($generated@@497 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@64) (= (type $generated@@624) $generated@@64)) (= (type $generated@@625) $generated@@248)) ($generated@@315 $generated@@625 ($generated@@238 $generated@@623 $generated@@624))) (and (= ($generated@@367 ($generated@@461 $generated@@239 $generated@@625)) $generated@@625) ($generated@@224 ($generated@@461 $generated@@239 $generated@@625) ($generated@@238 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@315 $generated@@625 ($generated@@238 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 (type $generated@@626)))
 (not ($generated@@0 ($generated@@81 ($generated@@508 $generated@@627) $generated@@626))))
 :pattern ( (let (($generated@@627 (type $generated@@626)))
($generated@@81 ($generated@@508 $generated@@627) $generated@@626)))
)))
(assert (forall (($generated@@629 T@U) ) (! (= (type ($generated@@628 $generated@@629)) $generated@@69)
 :pattern ( ($generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@64) (= (type $generated@@631) $generated@@64)) (and (= ($generated@@72 ($generated@@238 $generated@@630 $generated@@631)) $generated@@62) (= ($generated@@628 ($generated@@238 $generated@@630 $generated@@631)) $generated@@63)))
 :pattern ( ($generated@@238 $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@239) (= ($generated@@611 ($generated@@367 $generated@@632)) ($generated@@612 $generated@@632)))
 :pattern ( ($generated@@611 ($generated@@367 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@248) ($generated@@315 $generated@@633 ($generated@@75 0))) (and (= ($generated@@367 ($generated@@461 $generated@@2 $generated@@633)) $generated@@633) ($generated@@224 ($generated@@461 ($generated@@76 $generated@@248 $generated@@4) $generated@@633) ($generated@@75 0))))
 :pattern ( ($generated@@315 $generated@@633 ($generated@@75 0)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@248) ($generated@@315 $generated@@634 ($generated@@75 1))) (and (= ($generated@@367 ($generated@@461 $generated@@132 $generated@@634)) $generated@@634) ($generated@@224 ($generated@@461 $generated@@132 $generated@@634) ($generated@@75 1))))
 :pattern ( ($generated@@315 $generated@@634 ($generated@@75 1)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@248) (= (type $generated@@636) $generated@@64)) ($generated@@315 $generated@@635 ($generated@@324 $generated@@636))) (and (= ($generated@@367 ($generated@@461 ($generated@@76 $generated@@248 $generated@@4) $generated@@635)) $generated@@635) ($generated@@224 ($generated@@461 ($generated@@76 $generated@@248 $generated@@4) $generated@@635) ($generated@@324 $generated@@636))))
 :pattern ( ($generated@@315 $generated@@635 ($generated@@324 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@637) $generated@@248) (= (type $generated@@638) $generated@@64)) ($generated@@315 $generated@@637 ($generated@@329 $generated@@638))) (and (= ($generated@@367 ($generated@@461 ($generated@@76 $generated@@248 $generated@@4) $generated@@637)) $generated@@637) ($generated@@224 ($generated@@461 ($generated@@76 $generated@@248 $generated@@4) $generated@@637) ($generated@@329 $generated@@638))))
 :pattern ( ($generated@@315 $generated@@637 ($generated@@329 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) $generated@@248) (= (type $generated@@640) $generated@@64)) ($generated@@315 $generated@@639 ($generated@@253 $generated@@640))) (and (= ($generated@@367 ($generated@@461 ($generated@@76 $generated@@248 $generated@@2) $generated@@639)) $generated@@639) ($generated@@224 ($generated@@461 ($generated@@76 $generated@@248 $generated@@2) $generated@@639) ($generated@@253 $generated@@640))))
 :pattern ( ($generated@@315 $generated@@639 ($generated@@253 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) $generated@@248) (= (type $generated@@642) $generated@@64)) ($generated@@315 $generated@@641 ($generated@@573 $generated@@642))) (and (= ($generated@@367 ($generated@@461 ($generated@@360 $generated@@248) $generated@@641)) $generated@@641) ($generated@@224 ($generated@@461 ($generated@@360 $generated@@248) $generated@@641) ($generated@@573 $generated@@642))))
 :pattern ( ($generated@@315 $generated@@641 ($generated@@573 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@248) ($generated@@315 $generated@@643 ($generated@@75 2))) (and (= ($generated@@367 ($generated@@461 $generated@@140 $generated@@643)) $generated@@643) ($generated@@224 ($generated@@461 $generated@@140 $generated@@643) ($generated@@75 2))))
 :pattern ( ($generated@@315 $generated@@643 ($generated@@75 2)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@248) ($generated@@315 $generated@@644 ($generated@@75 3))) (and (= ($generated@@367 ($generated@@461 $generated@@148 $generated@@644)) $generated@@644) ($generated@@224 ($generated@@461 $generated@@148 $generated@@644) ($generated@@75 3))))
 :pattern ( ($generated@@315 $generated@@644 ($generated@@75 3)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@248) ($generated@@315 $generated@@645 ($generated@@75 4))) (and (= ($generated@@367 ($generated@@461 $generated@@156 $generated@@645)) $generated@@645) ($generated@@224 ($generated@@461 $generated@@156 $generated@@645) ($generated@@75 4))))
 :pattern ( ($generated@@315 $generated@@645 ($generated@@75 4)))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@248) ($generated@@315 $generated@@646 ($generated@@75 7))) (and (= ($generated@@367 ($generated@@461 $generated@@164 $generated@@646)) $generated@@646) ($generated@@224 ($generated@@461 $generated@@164 $generated@@646) ($generated@@75 7))))
 :pattern ( ($generated@@315 $generated@@646 ($generated@@75 7)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@248) ($generated@@315 $generated@@647 ($generated@@75 8))) (and (= ($generated@@367 ($generated@@461 $generated@@172 $generated@@647)) $generated@@647) ($generated@@224 ($generated@@461 $generated@@172 $generated@@647) ($generated@@75 8))))
 :pattern ( ($generated@@315 $generated@@647 ($generated@@75 8)))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@248) ($generated@@315 $generated@@648 ($generated@@75 15))) (and (= ($generated@@367 ($generated@@461 $generated@@180 $generated@@648)) $generated@@648) ($generated@@224 ($generated@@461 $generated@@180 $generated@@648) ($generated@@75 15))))
 :pattern ( ($generated@@315 $generated@@648 ($generated@@75 15)))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@248) ($generated@@315 $generated@@649 ($generated@@75 16))) (and (= ($generated@@367 ($generated@@461 $generated@@188 $generated@@649)) $generated@@649) ($generated@@224 ($generated@@461 $generated@@188 $generated@@649) ($generated@@75 16))))
 :pattern ( ($generated@@315 $generated@@649 ($generated@@75 16)))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@248) ($generated@@315 $generated@@650 ($generated@@75 32))) (and (= ($generated@@367 ($generated@@461 $generated@@196 $generated@@650)) $generated@@650) ($generated@@224 ($generated@@461 $generated@@196 $generated@@650) ($generated@@75 32))))
 :pattern ( ($generated@@315 $generated@@650 ($generated@@75 32)))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@248) ($generated@@315 $generated@@651 ($generated@@75 53))) (and (= ($generated@@367 ($generated@@461 $generated@@204 $generated@@651)) $generated@@651) ($generated@@224 ($generated@@461 $generated@@204 $generated@@651) ($generated@@75 53))))
 :pattern ( ($generated@@315 $generated@@651 ($generated@@75 53)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@248) ($generated@@315 $generated@@652 ($generated@@75 100))) (and (= ($generated@@367 ($generated@@461 $generated@@212 $generated@@652)) $generated@@652) ($generated@@224 ($generated@@461 $generated@@212 $generated@@652) ($generated@@75 100))))
 :pattern ( ($generated@@315 $generated@@652 ($generated@@75 100)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (= (type $generated@@653) ($generated@@76 $generated@@248 $generated@@2)) (= (type $generated@@654) $generated@@64)) (= (type $generated@@655) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@653 ($generated@@253 $generated@@654) $generated@@655) (forall (($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@248) (< 0 ($generated ($generated@@81 $generated@@653 $generated@@656)))) ($generated@@346 $generated@@656 $generated@@654 $generated@@655))
 :pattern ( ($generated@@81 $generated@@653 $generated@@656))
))))
 :pattern ( ($generated@@74 $generated@@653 ($generated@@253 $generated@@654) $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) $generated@@239) (= (type $generated@@658) $generated@@64)) (= (type $generated@@659) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@345 $generated@@659) (and ($generated@@237 $generated@@657) (exists (($generated@@660 T@U) ) (!  (and (= (type $generated@@660) $generated@@64) ($generated@@74 $generated@@657 ($generated@@238 $generated@@658 $generated@@660) $generated@@659))
 :pattern ( ($generated@@74 $generated@@657 ($generated@@238 $generated@@658 $generated@@660) $generated@@659))
))))) ($generated@@346 ($generated@@246 $generated@@657) $generated@@658 $generated@@659))
 :pattern ( ($generated@@346 ($generated@@246 $generated@@657) $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (= (type $generated@@661) $generated@@239) (= (type $generated@@662) $generated@@64)) (= (type $generated@@663) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@345 $generated@@663) (and ($generated@@237 $generated@@661) (exists (($generated@@664 T@U) ) (!  (and (= (type $generated@@664) $generated@@64) ($generated@@74 $generated@@661 ($generated@@238 $generated@@664 $generated@@662) $generated@@663))
 :pattern ( ($generated@@74 $generated@@661 ($generated@@238 $generated@@664 $generated@@662) $generated@@663))
))))) ($generated@@346 ($generated@@247 $generated@@661) $generated@@662 $generated@@663))
 :pattern ( ($generated@@346 ($generated@@247 $generated@@661) $generated@@662 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) $generated@@248) (= (type $generated@@666) $generated@@248)) (= ($generated@@314 ($generated@@336 $generated@@665) ($generated@@336 $generated@@666)) ($generated@@336 ($generated@@314 $generated@@665 $generated@@666))))
 :pattern ( ($generated@@314 ($generated@@336 $generated@@665) ($generated@@336 $generated@@666)))
)))
(assert (forall (($generated@@667 Int) ) (! (= ($generated@@367 ($generated@@8 ($generated@@334 $generated@@667))) ($generated@@336 ($generated@@367 ($generated@@8 $generated@@667))))
 :pattern ( ($generated@@367 ($generated@@8 ($generated@@334 $generated@@667))))
)))
(assert (forall (($generated@@668 T@U) ) (! (= ($generated@@367 ($generated@@336 $generated@@668)) ($generated@@336 ($generated@@367 $generated@@668)))
 :pattern ( ($generated@@367 ($generated@@336 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ) (! (let (($generated@@670 ($generated@@361 (type $generated@@669))))
 (=> (and (= (type $generated@@669) ($generated@@360 $generated@@670)) (= ($generated@@359 $generated@@669) 0)) (= $generated@@669 ($generated@@358 $generated@@670))))
 :pattern ( ($generated@@359 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (! (let (($generated@@674 (type $generated@@672)))
 (=> (and (and (= (type $generated@@671) ($generated@@76 $generated@@674 $generated@@2)) (= (type $generated@@673) $generated@@2)) (<= 0 ($generated $generated@@673))) (= ($generated@@380 ($generated@@82 $generated@@671 $generated@@672 $generated@@673)) (+ (- ($generated@@380 $generated@@671) ($generated ($generated@@81 $generated@@671 $generated@@672))) ($generated $generated@@673)))))
 :pattern ( ($generated@@380 ($generated@@82 $generated@@671 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@676) $generated@@2)) ($generated@@74 $generated@@676 $generated@@46 $generated@@675))
 :pattern ( ($generated@@74 $generated@@676 $generated@@46 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@678) $generated@@3)) ($generated@@74 $generated@@678 $generated@@47 $generated@@677))
 :pattern ( ($generated@@74 $generated@@678 $generated@@47 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@680) $generated@@4)) ($generated@@74 $generated@@680 $generated@@44 $generated@@679))
 :pattern ( ($generated@@74 $generated@@680 $generated@@44 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@682) $generated@@342)) ($generated@@74 $generated@@682 $generated@@45 $generated@@681))
 :pattern ( ($generated@@74 $generated@@682 $generated@@45 $generated@@681))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@684) $generated@@248)) ($generated@@74 $generated@@684 $generated@@48 $generated@@683))
 :pattern ( ($generated@@74 $generated@@684 $generated@@48 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) ($generated@@360 $generated@@248)) (= (type $generated@@686) $generated@@64)) (= ($generated@@224 $generated@@685 ($generated@@573 $generated@@686)) (forall (($generated@@687 Int) ) (!  (=> (and (<= 0 $generated@@687) (< $generated@@687 ($generated@@359 $generated@@685))) ($generated@@315 ($generated@@574 $generated@@685 $generated@@687) $generated@@686))
 :pattern ( ($generated@@574 $generated@@685 $generated@@687))
))))
 :pattern ( ($generated@@224 $generated@@685 ($generated@@573 $generated@@686)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 Int) ) (!  (=> (= (type $generated@@689) ($generated@@360 $generated@@248)) (=> (and (<= 0 $generated@@690) (< $generated@@690 ($generated@@359 $generated@@689))) (< ($generated@@612 ($generated@@461 $generated@@239 ($generated@@574 $generated@@689 $generated@@690))) ($generated@@688 $generated@@689))))
 :pattern ( ($generated@@612 ($generated@@461 $generated@@239 ($generated@@574 $generated@@689 $generated@@690))))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (and (= (type $generated@@691) ($generated@@388 $generated@@248 $generated@@248)) (= (type $generated@@692) $generated@@64)) (= (type $generated@@693) $generated@@64)) ($generated@@224 $generated@@691 ($generated@@489 $generated@@692 $generated@@693))) (and (and ($generated@@224 ($generated@@386 $generated@@691) ($generated@@324 $generated@@692)) ($generated@@224 ($generated@@429 $generated@@691) ($generated@@324 $generated@@693))) ($generated@@224 ($generated@@460 $generated@@691) ($generated@@324 ($generated@@238 $generated@@692 $generated@@693)))))
 :pattern ( ($generated@@224 $generated@@691 ($generated@@489 $generated@@692 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (and (and (= (type $generated@@694) ($generated@@406 $generated@@248 $generated@@248)) (= (type $generated@@695) $generated@@64)) (= (type $generated@@696) $generated@@64)) ($generated@@224 $generated@@694 ($generated@@497 $generated@@695 $generated@@696))) (and (and ($generated@@224 ($generated@@404 $generated@@694) ($generated@@329 $generated@@695)) ($generated@@224 ($generated@@440 $generated@@694) ($generated@@329 $generated@@696))) ($generated@@224 ($generated@@471 $generated@@694) ($generated@@329 ($generated@@238 $generated@@695 $generated@@696)))))
 :pattern ( ($generated@@224 $generated@@694 ($generated@@497 $generated@@695 $generated@@696)))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@2) ($generated@@224 $generated@@697 $generated@@46))
 :pattern ( ($generated@@224 $generated@@697 $generated@@46))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@3) ($generated@@224 $generated@@698 $generated@@47))
 :pattern ( ($generated@@224 $generated@@698 $generated@@47))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@4) ($generated@@224 $generated@@699 $generated@@44))
 :pattern ( ($generated@@224 $generated@@699 $generated@@44))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (= (type $generated@@700) $generated@@342) ($generated@@224 $generated@@700 $generated@@45))
 :pattern ( ($generated@@224 $generated@@700 $generated@@45))
)))
(assert (forall (($generated@@701 T@U) ) (!  (=> (= (type $generated@@701) $generated@@248) ($generated@@224 $generated@@701 $generated@@48))
 :pattern ( ($generated@@224 $generated@@701 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () Int)
(declare-fun $generated@@708 (T@U) Bool)
(declare-fun $generated@@709 () Int)
(assert  (and (and (and (= (type $generated@@702) $generated@@342) (= (type $generated@@704) ($generated@@260 $generated@@77 $generated@@4))) (= (type $generated@@705) $generated@@77)) (= (type $generated@@706) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@710 true))
(let (($generated@@711  (=> (and (< ($generated@@341 $generated@@702) ($generated@@341 ($generated@@340 ($generated@@334 0)))) (= (ControlFlow 0 4) 1)) $generated@@710)))
(let (($generated@@712  (=> (and (<= ($generated@@341 ($generated@@340 ($generated@@334 0))) ($generated@@341 $generated@@702)) (= $generated@@703 ($generated@@334 128))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@703) (< $generated@@703 65536))) (=> (and (<= 0 $generated@@703) (< $generated@@703 65536)) (=> (= (ControlFlow 0 2) 1) $generated@@710))))))
(let (($generated@@713  (=> (and (= $generated@@704 ($generated@@259 $generated@@705 $generated@@706 $generated@@60 false)) (= $generated@@707 ($generated@@334 0))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 $generated@@707) (< $generated@@707 65536))) (=> (and (<= 0 $generated@@707) (< $generated@@707 65536)) (and (=> (= (ControlFlow 0 5) 2) $generated@@712) (=> (= (ControlFlow 0 5) 4) $generated@@711)))))))
(let (($generated@@714  (=> (and (and (and ($generated@@345 $generated@@706) ($generated@@708 $generated@@706)) ($generated@@224 $generated@@702 $generated@@45)) (and (= 1 $generated@@709) (= (ControlFlow 0 7) 5))) $generated@@713)))
$generated@@714))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 1)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 1))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 2)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 2))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 3)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 3))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 4)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 4))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 7)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 7))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 8)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 8))
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 ((_ BitVec 15)) T@U)
(declare-fun $generated@@182 (T@U) (_ BitVec 15))
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 ((_ BitVec 16)) T@U)
(declare-fun $generated@@190 (T@U) (_ BitVec 16))
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 ((_ BitVec 32)) T@U)
(declare-fun $generated@@198 (T@U) (_ BitVec 32))
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 ((_ BitVec 53)) T@U)
(declare-fun $generated@@206 (T@U) (_ BitVec 53))
(declare-fun $generated@@212 () T@T)
(declare-fun $generated@@213 ((_ BitVec 100)) T@U)
(declare-fun $generated@@214 (T@U) (_ BitVec 100))
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 () T@T)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 () T@T)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@259 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U T@U) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@330 (Int) Int)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (Int) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@338 () T@T)
(declare-fun $generated@@341 (T@U) Bool)
(declare-fun $generated@@342 (T@U T@U T@U) Bool)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@354 (T@T) T@U)
(declare-fun $generated@@355 (T@U) Int)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@368 (T@U) Int)
(declare-fun $generated@@369 (T@T) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@T) T@U)
(declare-fun $generated@@376 (T@T T@T) T@T)
(declare-fun $generated@@377 (T@T) T@T)
(declare-fun $generated@@378 (T@T) T@T)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@T T@T) T@U)
(declare-fun $generated@@394 (T@T T@T) T@T)
(declare-fun $generated@@395 (T@T) T@T)
(declare-fun $generated@@396 (T@T) T@T)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@449 (T@T T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@477 (T@U T@U) T@U)
(declare-fun $generated@@485 (T@U T@U) T@U)
(declare-fun $generated@@493 (T@T) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@559 (T@U Int) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(declare-fun $generated@@597 (T@U) Int)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@673 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 1)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 1)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 1) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 2)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 2)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 2) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 3)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 3)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
 :pattern ( ($generated@@74 $generated@@154 ($generated@@75 3) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 4)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 17)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 4)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
 :pattern ( ($generated@@74 $generated@@162 ($generated@@75 4) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 7)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 18)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 7)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
 :pattern ( ($generated@@74 $generated@@170 ($generated@@75 7) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 8)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 19)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 8)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@75 8) $generated@@179))
)))
(assert  (and (and (and (forall (($generated@@183 (_ BitVec 15)) ) (! (= ($generated@@182 ($generated@@181 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@181 $generated@@183))
)) (= ($generated@@1 $generated@@180) 20)) (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@180) (= ($generated@@181 ($generated@@182 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@182 $generated@@184))
))) (forall (($generated@@185 (_ BitVec 15)) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@180)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@180) (= (type $generated@@187) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
 :pattern ( ($generated@@74 $generated@@186 ($generated@@75 15) $generated@@187))
)))
(assert  (and (and (and (forall (($generated@@191 (_ BitVec 16)) ) (! (= ($generated@@190 ($generated@@189 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@191))
)) (= ($generated@@1 $generated@@188) 21)) (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@188) (= ($generated@@189 ($generated@@190 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@190 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 16)) ) (! (= (type ($generated@@189 $generated@@193)) $generated@@188)
 :pattern ( ($generated@@189 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@188) (= (type $generated@@195) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
 :pattern ( ($generated@@74 $generated@@194 ($generated@@75 16) $generated@@195))
)))
(assert  (and (and (and (forall (($generated@@199 (_ BitVec 32)) ) (! (= ($generated@@198 ($generated@@197 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@197 $generated@@199))
)) (= ($generated@@1 $generated@@196) 22)) (forall (($generated@@200 T@U) ) (!  (=> (= (type $generated@@200) $generated@@196) (= ($generated@@197 ($generated@@198 $generated@@200)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@200))
))) (forall (($generated@@201 (_ BitVec 32)) ) (! (= (type ($generated@@197 $generated@@201)) $generated@@196)
 :pattern ( ($generated@@197 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@196) (= (type $generated@@203) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
 :pattern ( ($generated@@74 $generated@@202 ($generated@@75 32) $generated@@203))
)))
(assert  (and (and (and (forall (($generated@@207 (_ BitVec 53)) ) (! (= ($generated@@206 ($generated@@205 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@207))
)) (= ($generated@@1 $generated@@204) 23)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@204) (= ($generated@@205 ($generated@@206 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@206 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 53)) ) (! (= (type ($generated@@205 $generated@@209)) $generated@@204)
 :pattern ( ($generated@@205 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@204) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
 :pattern ( ($generated@@74 $generated@@210 ($generated@@75 53) $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@215 (_ BitVec 100)) ) (! (= ($generated@@214 ($generated@@213 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@215))
)) (= ($generated@@1 $generated@@212) 24)) (forall (($generated@@216 T@U) ) (!  (=> (= (type $generated@@216) $generated@@212) (= ($generated@@213 ($generated@@214 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@216))
))) (forall (($generated@@217 (_ BitVec 100)) ) (! (= (type ($generated@@213 $generated@@217)) $generated@@212)
 :pattern ( ($generated@@213 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@212) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
 :pattern ( ($generated@@74 $generated@@218 ($generated@@75 100) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@2) ($generated@@220 $generated@@221 ($generated@@75 0)))
 :pattern ( ($generated@@220 $generated@@221 ($generated@@75 0)))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (= (type $generated@@222) $generated@@132) ($generated@@220 $generated@@222 ($generated@@75 1)))
 :pattern ( ($generated@@220 $generated@@222 ($generated@@75 1)))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@140) ($generated@@220 $generated@@223 ($generated@@75 2)))
 :pattern ( ($generated@@220 $generated@@223 ($generated@@75 2)))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (= (type $generated@@224) $generated@@148) ($generated@@220 $generated@@224 ($generated@@75 3)))
 :pattern ( ($generated@@220 $generated@@224 ($generated@@75 3)))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@156) ($generated@@220 $generated@@225 ($generated@@75 4)))
 :pattern ( ($generated@@220 $generated@@225 ($generated@@75 4)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@164) ($generated@@220 $generated@@226 ($generated@@75 7)))
 :pattern ( ($generated@@220 $generated@@226 ($generated@@75 7)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@172) ($generated@@220 $generated@@227 ($generated@@75 8)))
 :pattern ( ($generated@@220 $generated@@227 ($generated@@75 8)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@180) ($generated@@220 $generated@@228 ($generated@@75 15)))
 :pattern ( ($generated@@220 $generated@@228 ($generated@@75 15)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@188) ($generated@@220 $generated@@229 ($generated@@75 16)))
 :pattern ( ($generated@@220 $generated@@229 ($generated@@75 16)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@196) ($generated@@220 $generated@@230 ($generated@@75 32)))
 :pattern ( ($generated@@220 $generated@@230 ($generated@@75 32)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@204) ($generated@@220 $generated@@231 ($generated@@75 53)))
 :pattern ( ($generated@@220 $generated@@231 ($generated@@75 53)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@212) ($generated@@220 $generated@@232 ($generated@@75 100)))
 :pattern ( ($generated@@220 $generated@@232 ($generated@@75 100)))
)))
(assert  (and (= ($generated@@1 $generated@@235) 25) (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@64) (= (type $generated@@239) $generated@@64)) (= (type $generated@@240) $generated@@235)) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239))) ($generated@@233 $generated@@240))
 :pattern ( ($generated@@233 $generated@@240) ($generated@@220 $generated@@240 ($generated@@234 $generated@@238 $generated@@239)))
)))
(assert  (and (and (= ($generated@@1 $generated@@244) 26) (forall (($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@242 $generated@@245))
))) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@246)) $generated@@244)
 :pattern ( ($generated@@243 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@235) (= (type $generated@@248) $generated@@235)) true) (= ($generated@@241 $generated@@247 $generated@@248)  (and (= ($generated@@242 $generated@@247) ($generated@@242 $generated@@248)) (= ($generated@@243 $generated@@247) ($generated@@243 $generated@@248)))))
 :pattern ( ($generated@@241 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@249 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@253) $generated@@64)) ($generated@@220 $generated@@252 ($generated@@249 $generated@@253))) ($generated@@250 $generated@@252))
 :pattern ( ($generated@@220 $generated@@252 ($generated@@249 $generated@@253)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@260 $generated@@261)) 27)) (forall (($generated@@262 T@T) ($generated@@263 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@262 $generated@@263)) $generated@@262)
 :pattern ( ($generated@@256 $generated@@262 $generated@@263))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@264 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@256 $generated@@264 $generated@@265))
))) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@258 (type $generated@@266))))
(= (type ($generated@@254 $generated@@266 $generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@254 $generated@@266 $generated@@267 $generated@@268))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(let (($generated@@275 (type $generated@@271)))
(= (type ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273)) ($generated@@256 $generated@@275 $generated@@274))))
 :pattern ( ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273))
))) (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@258 (type $generated@@276))))
 (=> (= (type $generated@@279) $generated@@280) (= ($generated@@254 ($generated@@259 $generated@@276 $generated@@277 $generated@@278 $generated@@279) $generated@@277 $generated@@278) $generated@@279)))
 :weight 0
))) (and (and (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (or (= $generated@@283 $generated@@285) (= ($generated@@254 ($generated@@259 $generated@@282 $generated@@283 $generated@@284 $generated@@281) $generated@@285 $generated@@286) ($generated@@254 $generated@@282 $generated@@285 $generated@@286)))
 :weight 0
)) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (or (= $generated@@290 $generated@@292) (= ($generated@@254 ($generated@@259 $generated@@288 $generated@@289 $generated@@290 $generated@@287) $generated@@291 $generated@@292) ($generated@@254 $generated@@288 $generated@@291 $generated@@292)))
 :weight 0
))) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (or true (= ($generated@@254 ($generated@@259 $generated@@294 $generated@@295 $generated@@296 $generated@@293) $generated@@297 $generated@@298) ($generated@@254 $generated@@294 $generated@@297 $generated@@298)))
 :weight 0
)))) (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Bool) ) (! (= (type ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302)) ($generated@@256 $generated@@77 $generated@@4))
 :pattern ( ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ($generated@@307 T@U) ($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@67 (type $generated@@308))))
 (=> (and (and (and (and (= (type $generated@@303) $generated@@77) (= (type $generated@@304) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@305) ($generated@@66 $generated@@4))) (= (type $generated@@307) $generated@@77)) (= (type $generated@@308) ($generated@@66 $generated@@309))) (= ($generated@@0 ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))  (=> (and (not (= $generated@@307 $generated@@303)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@304 $generated@@307) $generated@@305))) $generated@@306))))
 :pattern ( ($generated@@254 ($generated@@255 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (= (type ($generated@@310 $generated@@312 $generated@@313)) $generated@@235)
 :pattern ( ($generated@@310 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@64) (= (type $generated@@315) $generated@@64)) (= (type $generated@@316) $generated@@244)) (= (type $generated@@317) $generated@@244)) (= ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315))  (and ($generated@@311 $generated@@316 $generated@@314) ($generated@@311 $generated@@317 $generated@@315))))
 :pattern ( ($generated@@220 ($generated@@310 $generated@@316 $generated@@317) ($generated@@234 $generated@@314 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@235) (= (type $generated@@319) $generated@@235)) (= ($generated@@241 $generated@@318 $generated@@319) (= $generated@@318 $generated@@319)))
 :pattern ( ($generated@@241 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@64)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@323) $generated@@64)) (= ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@244) ($generated@@0 ($generated@@81 $generated@@322 $generated@@324))) ($generated@@311 $generated@@324 $generated@@323))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
))))
 :pattern ( ($generated@@220 $generated@@322 ($generated@@320 $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@64)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@328) $generated@@64)) (= ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@244) ($generated@@0 ($generated@@81 $generated@@327 $generated@@329))) ($generated@@311 $generated@@329 $generated@@328))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@220 $generated@@327 ($generated@@325 $generated@@328)))
)))
(assert (forall (($generated@@331 Int) ) (! (= ($generated@@330 $generated@@331) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
(= (type ($generated@@332 $generated@@333)) $generated@@334))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (= ($generated@@332 $generated@@335) $generated@@335)
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert  (and (= ($generated@@1 $generated@@338) 28) (forall (($generated@@339 Int) ) (! (= (type ($generated@@336 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@336 $generated@@339))
))))
(assert (forall (($generated@@340 Int) ) (!  (=> (and (<= 0 $generated@@340) (< $generated@@340 65536)) (= ($generated@@337 ($generated@@336 $generated@@340)) $generated@@340))
 :pattern ( ($generated@@336 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@343) $generated@@64) (= (type $generated@@344) $generated@@64)) (= (type $generated@@345) $generated@@244)) (= (type $generated@@346) $generated@@244)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@341 $generated@@347)) (= ($generated@@74 ($generated@@310 $generated@@345 $generated@@346) ($generated@@234 $generated@@343 $generated@@344) $generated@@347)  (and ($generated@@342 $generated@@345 $generated@@343 $generated@@347) ($generated@@342 $generated@@346 $generated@@344 $generated@@347))))
 :pattern ( ($generated@@74 ($generated@@310 $generated@@345 $generated@@346) ($generated@@234 $generated@@343 $generated@@344) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (= (type ($generated@@348 $generated@@349)) $generated@@68)
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@235) (= ($generated@@233 $generated@@350) (= ($generated@@348 $generated@@350) $generated@@61)))
 :pattern ( ($generated@@233 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@235) ($generated@@233 $generated@@351)) (exists (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (and (and (= (type $generated@@352) $generated@@244) (= (type $generated@@353) $generated@@244)) (= $generated@@351 ($generated@@310 $generated@@352 $generated@@353)))
 :no-pattern (type $generated@@352)
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
)))
 :pattern ( ($generated@@233 $generated@@351))
)))
(assert  (and (and (forall (($generated@@358 T@T) ) (= ($generated@@1 ($generated@@356 $generated@@358)) 29)) (forall (($generated@@359 T@T) ) (! (= ($generated@@357 ($generated@@356 $generated@@359)) $generated@@359)
 :pattern ( ($generated@@356 $generated@@359))
))) (forall (($generated@@360 T@T) ) (! (= (type ($generated@@354 $generated@@360)) ($generated@@356 $generated@@360))
 :pattern ( ($generated@@354 $generated@@360))
))))
(assert (forall (($generated@@361 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@361)) 0)
 :pattern ( ($generated@@354 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@338) (and (and (= ($generated@@336 ($generated@@337 $generated@@362)) $generated@@362) (<= 0 ($generated@@337 $generated@@362))) (< ($generated@@337 $generated@@362) 65536)))
 :pattern ( ($generated@@337 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (= (type ($generated@@363 $generated@@364)) $generated@@244)
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@64) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@342 ($generated@@363 $generated@@365) $generated@@366 $generated@@367) ($generated@@74 $generated@@365 $generated@@366 $generated@@367)))
 :pattern ( ($generated@@342 ($generated@@363 $generated@@365) $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@370 T@T) ) (! (= (type ($generated@@369 $generated@@370)) ($generated@@76 $generated@@370 $generated@@2))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@79 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@76 $generated@@372 $generated@@2)) (and (= (= ($generated@@368 $generated@@371) 0) (= $generated@@371 ($generated@@369 $generated@@372))) (=> (not (= ($generated@@368 $generated@@371) 0)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (< 0 ($generated ($generated@@81 $generated@@371 $generated@@373))))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert  (and (and (and (and (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (= ($generated@@1 ($generated@@376 $generated@@379 $generated@@380)) 30)) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= ($generated@@377 ($generated@@376 $generated@@381 $generated@@382)) $generated@@381)
 :pattern ( ($generated@@376 $generated@@381 $generated@@382))
))) (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (! (= ($generated@@378 ($generated@@376 $generated@@383 $generated@@384)) $generated@@384)
 :pattern ( ($generated@@376 $generated@@383 $generated@@384))
))) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@377 (type $generated@@385))))
(= (type ($generated@@374 $generated@@385)) ($generated@@76 $generated@@386 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@385))
))) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= (type ($generated@@375 $generated@@387 $generated@@388)) ($generated@@376 $generated@@387 $generated@@388))
 :pattern ( ($generated@@375 $generated@@387 $generated@@388))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@T) ) (! (let (($generated@@391 (type $generated@@389)))
 (not ($generated@@0 ($generated@@81 ($generated@@374 ($generated@@375 $generated@@391 $generated@@390)) $generated@@389))))
 :pattern ( (let (($generated@@391 (type $generated@@389)))
($generated@@81 ($generated@@374 ($generated@@375 $generated@@391 $generated@@390)) $generated@@389)))
)))
(assert  (and (and (and (and (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (= ($generated@@1 ($generated@@394 $generated@@397 $generated@@398)) 31)) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= ($generated@@395 ($generated@@394 $generated@@399 $generated@@400)) $generated@@399)
 :pattern ( ($generated@@394 $generated@@399 $generated@@400))
))) (forall (($generated@@401 T@T) ($generated@@402 T@T) ) (! (= ($generated@@396 ($generated@@394 $generated@@401 $generated@@402)) $generated@@402)
 :pattern ( ($generated@@394 $generated@@401 $generated@@402))
))) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@395 (type $generated@@403))))
(= (type ($generated@@392 $generated@@403)) ($generated@@76 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@403))
))) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= (type ($generated@@393 $generated@@405 $generated@@406)) ($generated@@394 $generated@@405 $generated@@406))
 :pattern ( ($generated@@393 $generated@@405 $generated@@406))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@T) ) (! (let (($generated@@409 (type $generated@@407)))
 (not ($generated@@0 ($generated@@81 ($generated@@392 ($generated@@393 $generated@@409 $generated@@408)) $generated@@407))))
 :pattern ( (let (($generated@@409 (type $generated@@407)))
($generated@@81 ($generated@@392 ($generated@@393 $generated@@409 $generated@@408)) $generated@@407)))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@79 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@76 $generated@@411 $generated@@2)) (= ($generated@@250 $generated@@410) (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@411) (and (<= 0 ($generated ($generated@@81 $generated@@410 $generated@@412))) (<= ($generated ($generated@@81 $generated@@410 $generated@@412)) ($generated@@368 $generated@@410))))
 :pattern ( ($generated@@81 $generated@@410 $generated@@412))
)))))
 :pattern ( ($generated@@250 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@378 (type $generated@@413))))
(let (($generated@@415 ($generated@@377 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@376 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@375 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@413) $generated@@416)))
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@374 $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@378 (type $generated@@418))))
(= (type ($generated@@417 $generated@@418)) ($generated@@76 $generated@@419 $generated@@4)))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@378 (type $generated@@420))))
(let (($generated@@422 ($generated@@377 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@376 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@375 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@421) ($generated@@0 ($generated@@81 ($generated@@417 $generated@@420) $generated@@423)))
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@417 $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@396 (type $generated@@424))))
(let (($generated@@426 ($generated@@395 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@394 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@393 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) ($generated@@0 ($generated@@81 ($generated@@392 $generated@@424) $generated@@427)))
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@392 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@396 (type $generated@@429))))
(= (type ($generated@@428 $generated@@429)) ($generated@@76 $generated@@430 $generated@@4)))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@396 (type $generated@@431))))
(let (($generated@@433 ($generated@@395 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@394 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@393 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@432) ($generated@@0 ($generated@@81 ($generated@@428 $generated@@431) $generated@@434)))
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@428 $generated@@431))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@436) $generated@@64)) (= ($generated@@220 $generated@@435 ($generated@@249 $generated@@436)) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@435 $generated@@437)))) ($generated@@311 $generated@@437 $generated@@436))
 :pattern ( ($generated@@81 $generated@@435 $generated@@437))
))))
 :pattern ( ($generated@@220 $generated@@435 ($generated@@249 $generated@@436)))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (= (type $generated@@438) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@439) $generated@@64)) (= (type $generated@@440) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@438 ($generated@@320 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@244) ($generated@@0 ($generated@@81 $generated@@438 $generated@@441))) ($generated@@342 $generated@@441 $generated@@439 $generated@@440))
 :pattern ( ($generated@@81 $generated@@438 $generated@@441))
))))
 :pattern ( ($generated@@74 $generated@@438 ($generated@@320 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (= (type $generated@@442) ($generated@@76 $generated@@244 $generated@@4)) (= (type $generated@@443) $generated@@64)) (= (type $generated@@444) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@442 ($generated@@325 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@244) ($generated@@0 ($generated@@81 $generated@@442 $generated@@445))) ($generated@@342 $generated@@445 $generated@@443 $generated@@444))
 :pattern ( ($generated@@81 $generated@@442 $generated@@445))
))))
 :pattern ( ($generated@@74 $generated@@442 ($generated@@325 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(= ($generated ($generated@@81 ($generated@@369 $generated@@447) $generated@@446)) 0))
 :pattern ( (let (($generated@@447 (type $generated@@446)))
($generated@@81 ($generated@@369 $generated@@447) $generated@@446)))
)))
(assert  (and (and (forall (($generated@@451 T@U) ) (! (= (type ($generated@@448 $generated@@451)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@448 $generated@@451))
)) (forall (($generated@@452 T@T) ($generated@@453 T@U) ) (! (= (type ($generated@@449 $generated@@452 $generated@@453)) $generated@@452)
 :pattern ( ($generated@@449 $generated@@452 $generated@@453))
))) (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@378 (type $generated@@454))))
(let (($generated@@456 ($generated@@377 (type $generated@@454))))
(= (type ($generated@@450 $generated@@454)) ($generated@@76 $generated@@456 $generated@@455))))
 :pattern ( ($generated@@450 $generated@@454))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) ($generated@@376 $generated@@244 $generated@@244)) (= (type $generated@@458) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@448 $generated@@457) $generated@@458))  (and ($generated@@0 ($generated@@81 ($generated@@374 $generated@@457) ($generated@@242 ($generated@@449 $generated@@235 $generated@@458)))) (= ($generated@@81 ($generated@@450 $generated@@457) ($generated@@242 ($generated@@449 $generated@@235 $generated@@458))) ($generated@@243 ($generated@@449 $generated@@235 $generated@@458))))))
 :pattern ( ($generated@@81 ($generated@@448 $generated@@457) $generated@@458))
)))
(assert  (and (forall (($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@461)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@459 $generated@@461))
)) (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@396 (type $generated@@462))))
(let (($generated@@464 ($generated@@395 (type $generated@@462))))
(= (type ($generated@@460 $generated@@462)) ($generated@@76 $generated@@464 $generated@@463))))
 :pattern ( ($generated@@460 $generated@@462))
))))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) ($generated@@394 $generated@@244 $generated@@244)) (= (type $generated@@466) $generated@@244)) (= ($generated@@0 ($generated@@81 ($generated@@459 $generated@@465) $generated@@466))  (and ($generated@@0 ($generated@@81 ($generated@@392 $generated@@465) ($generated@@242 ($generated@@449 $generated@@235 $generated@@466)))) (= ($generated@@81 ($generated@@460 $generated@@465) ($generated@@242 ($generated@@449 $generated@@235 $generated@@466))) ($generated@@243 ($generated@@449 $generated@@235 $generated@@466))))))
 :pattern ( ($generated@@81 ($generated@@459 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (! (let (($generated@@469 (type $generated@@468)))
(let (($generated@@470 ($generated@@377 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@376 $generated@@470 $generated@@469)) (= ($generated@@0 ($generated@@81 ($generated@@417 $generated@@467) $generated@@468)) (exists (($generated@@471 T@U) ) (!  (and (= (type $generated@@471) $generated@@470) (and ($generated@@0 ($generated@@81 ($generated@@374 $generated@@467) $generated@@471)) (= $generated@@468 ($generated@@81 ($generated@@450 $generated@@467) $generated@@471))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@467) $generated@@471))
 :pattern ( ($generated@@81 ($generated@@450 $generated@@467) $generated@@471))
))))))
 :pattern ( ($generated@@81 ($generated@@417 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (let (($generated@@474 (type $generated@@473)))
(let (($generated@@475 ($generated@@395 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@394 $generated@@475 $generated@@474)) (= ($generated@@0 ($generated@@81 ($generated@@428 $generated@@472) $generated@@473)) (exists (($generated@@476 T@U) ) (!  (and (= (type $generated@@476) $generated@@475) (and ($generated@@0 ($generated@@81 ($generated@@392 $generated@@472) $generated@@476)) (= $generated@@473 ($generated@@81 ($generated@@460 $generated@@472) $generated@@476))))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@472) $generated@@476))
 :pattern ( ($generated@@81 ($generated@@460 $generated@@472) $generated@@476))
))))))
 :pattern ( ($generated@@81 ($generated@@428 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (and (= (type $generated@@480) ($generated@@376 $generated@@244 $generated@@244)) (= (type $generated@@481) $generated@@64)) (= (type $generated@@482) $generated@@64)) (= (type $generated@@483) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@480 ($generated@@477 $generated@@481 $generated@@482) $generated@@483) (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@480) $generated@@484))) (and ($generated@@342 ($generated@@81 ($generated@@450 $generated@@480) $generated@@484) $generated@@482 $generated@@483) ($generated@@342 $generated@@484 $generated@@481 $generated@@483)))
 :pattern ( ($generated@@81 ($generated@@450 $generated@@480) $generated@@484))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@480) $generated@@484))
))))
 :pattern ( ($generated@@74 $generated@@480 ($generated@@477 $generated@@481 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (and (= (type $generated@@488) ($generated@@394 $generated@@244 $generated@@244)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491) (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@392 $generated@@488) $generated@@492))) (and ($generated@@342 ($generated@@81 ($generated@@460 $generated@@488) $generated@@492) $generated@@490 $generated@@491) ($generated@@342 $generated@@492 $generated@@489 $generated@@491)))
 :pattern ( ($generated@@81 ($generated@@460 $generated@@488) $generated@@492))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@488) $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 T@T) ) (! (= (type ($generated@@493 $generated@@494)) ($generated@@76 $generated@@494 $generated@@4))
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@396 (type $generated@@495))))
(let (($generated@@497 ($generated@@395 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@394 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@393 $generated@@497 $generated@@496)) (= ($generated@@392 $generated@@495) ($generated@@493 $generated@@497))))))
 :pattern ( ($generated@@392 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@396 (type $generated@@498))))
(let (($generated@@500 ($generated@@395 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@394 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@393 $generated@@500 $generated@@499)) (= ($generated@@428 $generated@@498) ($generated@@493 $generated@@499))))))
 :pattern ( ($generated@@428 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@396 (type $generated@@501))))
(let (($generated@@503 ($generated@@395 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@394 $generated@@503 $generated@@502)) (= (= $generated@@501 ($generated@@393 $generated@@503 $generated@@502)) (= ($generated@@459 $generated@@501) ($generated@@493 $generated@@244))))))
 :pattern ( ($generated@@459 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@378 (type $generated@@504))))
(let (($generated@@506 ($generated@@377 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@376 $generated@@506 $generated@@505)) (or (= $generated@@504 ($generated@@375 $generated@@506 $generated@@505)) (exists (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (and (and (= (type $generated@@507) $generated@@244) (= (type $generated@@508) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@448 $generated@@504) ($generated@@363 ($generated@@310 $generated@@507 $generated@@508)))))
 :no-pattern (type $generated@@507)
 :no-pattern (type $generated@@508)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
 :no-pattern ($generated $generated@@508)
 :no-pattern ($generated@@0 $generated@@508)
))))))
 :pattern ( ($generated@@448 $generated@@504))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@396 (type $generated@@509))))
(let (($generated@@511 ($generated@@395 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@394 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@393 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (and (and (= (type $generated@@512) $generated@@244) (= (type $generated@@513) $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@459 $generated@@509) ($generated@@363 ($generated@@310 $generated@@512 $generated@@513)))))
 :no-pattern (type $generated@@512)
 :no-pattern (type $generated@@513)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
))))))
 :pattern ( ($generated@@459 $generated@@509))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@244) ($generated@@311 $generated@@514 $generated@@46)) (and (= ($generated@@363 ($generated@@449 $generated@@2 $generated@@514)) $generated@@514) ($generated@@220 ($generated@@449 $generated@@2 $generated@@514) $generated@@46)))
 :pattern ( ($generated@@311 $generated@@514 $generated@@46))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@244) ($generated@@311 $generated@@515 $generated@@47)) (and (= ($generated@@363 ($generated@@449 $generated@@3 $generated@@515)) $generated@@515) ($generated@@220 ($generated@@449 $generated@@3 $generated@@515) $generated@@47)))
 :pattern ( ($generated@@311 $generated@@515 $generated@@47))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@244) ($generated@@311 $generated@@516 $generated@@44)) (and (= ($generated@@363 ($generated@@449 $generated@@4 $generated@@516)) $generated@@516) ($generated@@220 ($generated@@449 $generated@@4 $generated@@516) $generated@@44)))
 :pattern ( ($generated@@311 $generated@@516 $generated@@44))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@244) ($generated@@311 $generated@@517 $generated@@45)) (and (= ($generated@@363 ($generated@@449 $generated@@338 $generated@@517)) $generated@@517) ($generated@@220 ($generated@@449 $generated@@338 $generated@@517) $generated@@45)))
 :pattern ( ($generated@@311 $generated@@517 $generated@@45))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@311 ($generated@@363 $generated@@518) $generated@@519) ($generated@@220 $generated@@518 $generated@@519)))
 :pattern ( ($generated@@311 ($generated@@363 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@79 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@76 $generated@@521 $generated@@2)) (<= 0 ($generated@@368 $generated@@520))))
 :pattern ( ($generated@@368 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 ($generated@@357 (type $generated@@522))))
 (=> (= (type $generated@@522) ($generated@@356 $generated@@523)) (<= 0 ($generated@@355 $generated@@522))))
 :pattern ( ($generated@@355 $generated@@522))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@64)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@64) (= (type $generated@@527) $generated@@64)) (= ($generated@@524 ($generated@@477 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@477 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@64)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@64) (= (type $generated@@531) $generated@@64)) (= ($generated@@528 ($generated@@477 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@477 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (= ($generated@@72 ($generated@@477 $generated@@532 $generated@@533)) $generated@@58))
 :pattern ( ($generated@@477 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= ($generated@@534 ($generated@@485 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@485 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@538 ($generated@@485 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@485 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= ($generated@@72 ($generated@@485 $generated@@542 $generated@@543)) $generated@@59))
 :pattern ( ($generated@@485 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@244) (= (type $generated@@545) $generated@@244)) (= ($generated@@348 ($generated@@310 $generated@@544 $generated@@545)) $generated@@61))
 :pattern ( ($generated@@310 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@64)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@64) (= (type $generated@@549) $generated@@64)) (= ($generated@@546 ($generated@@234 $generated@@548 $generated@@549)) $generated@@548))
 :pattern ( ($generated@@234 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@64)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@64) (= (type $generated@@553) $generated@@64)) (= ($generated@@550 ($generated@@234 $generated@@552 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@234 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@244) (= (type $generated@@555) $generated@@244)) (= ($generated@@242 ($generated@@310 $generated@@554 $generated@@555)) $generated@@554))
 :pattern ( ($generated@@310 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@244) (= (type $generated@@557) $generated@@244)) (= ($generated@@243 ($generated@@310 $generated@@556 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@310 $generated@@556 $generated@@557))
)))
(assert  (and (forall (($generated@@560 T@U) ) (! (= (type ($generated@@558 $generated@@560)) $generated@@64)
 :pattern ( ($generated@@558 $generated@@560))
)) (forall (($generated@@561 T@U) ($generated@@562 Int) ) (! (let (($generated@@563 ($generated@@357 (type $generated@@561))))
(= (type ($generated@@559 $generated@@561 $generated@@562)) $generated@@563))
 :pattern ( ($generated@@559 $generated@@561 $generated@@562))
))))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@356 $generated@@244)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@564 ($generated@@558 $generated@@565) $generated@@566) (forall (($generated@@567 Int) ) (!  (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@355 $generated@@564))) ($generated@@342 ($generated@@559 $generated@@564 $generated@@567) $generated@@565 $generated@@566))
 :pattern ( ($generated@@559 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@74 $generated@@564 ($generated@@558 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@568 ($generated@@75 $generated@@569)) $generated@@569)
 :pattern ( ($generated@@75 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@64)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@64) (= ($generated@@570 ($generated@@320 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@320 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@64) (= ($generated@@72 ($generated@@320 $generated@@573)) $generated@@54))
 :pattern ( ($generated@@320 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@64)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@64) (= ($generated@@574 ($generated@@325 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@325 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@64) (= ($generated@@72 ($generated@@325 $generated@@577)) $generated@@55))
 :pattern ( ($generated@@325 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@64)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@64) (= ($generated@@578 ($generated@@249 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@249 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@581)) $generated@@56))
 :pattern ( ($generated@@249 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@64)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@64) (= ($generated@@582 ($generated@@558 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@558 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@64) (= ($generated@@72 ($generated@@558 $generated@@585)) $generated@@57))
 :pattern ( ($generated@@558 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
(= ($generated@@449 $generated@@587 ($generated@@363 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@363 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@376 $generated@@244 $generated@@244)) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) $generated@@64)) (= ($generated@@220 $generated@@588 ($generated@@477 $generated@@589 $generated@@590)) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@588) $generated@@591))) (and ($generated@@311 ($generated@@81 ($generated@@450 $generated@@588) $generated@@591) $generated@@590) ($generated@@311 $generated@@591 $generated@@589)))
 :pattern ( ($generated@@81 ($generated@@450 $generated@@588) $generated@@591))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@588) $generated@@591))
))))
 :pattern ( ($generated@@220 $generated@@588 ($generated@@477 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@394 $generated@@244 $generated@@244)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) (= ($generated@@220 $generated@@592 ($generated@@485 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@244) ($generated@@0 ($generated@@81 ($generated@@392 $generated@@592) $generated@@595))) (and ($generated@@311 ($generated@@81 ($generated@@460 $generated@@592) $generated@@595) $generated@@594) ($generated@@311 $generated@@595 $generated@@593)))
 :pattern ( ($generated@@81 ($generated@@460 $generated@@592) $generated@@595))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@592) $generated@@595))
))))
 :pattern ( ($generated@@220 $generated@@592 ($generated@@485 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@244) (= (type $generated@@599) $generated@@244)) (< ($generated@@596 $generated@@598) ($generated@@597 ($generated@@310 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@310 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@244) (= (type $generated@@601) $generated@@244)) (< ($generated@@596 $generated@@601) ($generated@@597 ($generated@@310 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@310 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@244) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) ($generated@@311 $generated@@602 ($generated@@477 $generated@@603 $generated@@604))) (and (= ($generated@@363 ($generated@@449 ($generated@@376 $generated@@244 $generated@@244) $generated@@602)) $generated@@602) ($generated@@220 ($generated@@449 ($generated@@376 $generated@@244 $generated@@244) $generated@@602) ($generated@@477 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@311 $generated@@602 ($generated@@477 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@244) (= (type $generated@@606) $generated@@64)) (= (type $generated@@607) $generated@@64)) ($generated@@311 $generated@@605 ($generated@@485 $generated@@606 $generated@@607))) (and (= ($generated@@363 ($generated@@449 ($generated@@394 $generated@@244 $generated@@244) $generated@@605)) $generated@@605) ($generated@@220 ($generated@@449 ($generated@@394 $generated@@244 $generated@@244) $generated@@605) ($generated@@485 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@311 $generated@@605 ($generated@@485 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@64) (= (type $generated@@609) $generated@@64)) (= (type $generated@@610) $generated@@244)) ($generated@@311 $generated@@610 ($generated@@234 $generated@@608 $generated@@609))) (and (= ($generated@@363 ($generated@@449 $generated@@235 $generated@@610)) $generated@@610) ($generated@@220 ($generated@@449 $generated@@235 $generated@@610) ($generated@@234 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@311 $generated@@610 ($generated@@234 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@611)))
 (not ($generated@@0 ($generated@@81 ($generated@@493 $generated@@612) $generated@@611))))
 :pattern ( (let (($generated@@612 (type $generated@@611)))
($generated@@81 ($generated@@493 $generated@@612) $generated@@611)))
)))
(assert (forall (($generated@@614 T@U) ) (! (= (type ($generated@@613 $generated@@614)) $generated@@69)
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@64) (= (type $generated@@616) $generated@@64)) (and (= ($generated@@72 ($generated@@234 $generated@@615 $generated@@616)) $generated@@62) (= ($generated@@613 ($generated@@234 $generated@@615 $generated@@616)) $generated@@63)))
 :pattern ( ($generated@@234 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@235) (= ($generated@@596 ($generated@@363 $generated@@617)) ($generated@@597 $generated@@617)))
 :pattern ( ($generated@@596 ($generated@@363 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@244) ($generated@@311 $generated@@618 ($generated@@75 0))) (and (= ($generated@@363 ($generated@@449 $generated@@2 $generated@@618)) $generated@@618) ($generated@@220 ($generated@@449 ($generated@@76 $generated@@244 $generated@@4) $generated@@618) ($generated@@75 0))))
 :pattern ( ($generated@@311 $generated@@618 ($generated@@75 0)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@244) ($generated@@311 $generated@@619 ($generated@@75 1))) (and (= ($generated@@363 ($generated@@449 $generated@@132 $generated@@619)) $generated@@619) ($generated@@220 ($generated@@449 $generated@@132 $generated@@619) ($generated@@75 1))))
 :pattern ( ($generated@@311 $generated@@619 ($generated@@75 1)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@244) (= (type $generated@@621) $generated@@64)) ($generated@@311 $generated@@620 ($generated@@320 $generated@@621))) (and (= ($generated@@363 ($generated@@449 ($generated@@76 $generated@@244 $generated@@4) $generated@@620)) $generated@@620) ($generated@@220 ($generated@@449 ($generated@@76 $generated@@244 $generated@@4) $generated@@620) ($generated@@320 $generated@@621))))
 :pattern ( ($generated@@311 $generated@@620 ($generated@@320 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@244) (= (type $generated@@623) $generated@@64)) ($generated@@311 $generated@@622 ($generated@@325 $generated@@623))) (and (= ($generated@@363 ($generated@@449 ($generated@@76 $generated@@244 $generated@@4) $generated@@622)) $generated@@622) ($generated@@220 ($generated@@449 ($generated@@76 $generated@@244 $generated@@4) $generated@@622) ($generated@@325 $generated@@623))))
 :pattern ( ($generated@@311 $generated@@622 ($generated@@325 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@244) (= (type $generated@@625) $generated@@64)) ($generated@@311 $generated@@624 ($generated@@249 $generated@@625))) (and (= ($generated@@363 ($generated@@449 ($generated@@76 $generated@@244 $generated@@2) $generated@@624)) $generated@@624) ($generated@@220 ($generated@@449 ($generated@@76 $generated@@244 $generated@@2) $generated@@624) ($generated@@249 $generated@@625))))
 :pattern ( ($generated@@311 $generated@@624 ($generated@@249 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@244) (= (type $generated@@627) $generated@@64)) ($generated@@311 $generated@@626 ($generated@@558 $generated@@627))) (and (= ($generated@@363 ($generated@@449 ($generated@@356 $generated@@244) $generated@@626)) $generated@@626) ($generated@@220 ($generated@@449 ($generated@@356 $generated@@244) $generated@@626) ($generated@@558 $generated@@627))))
 :pattern ( ($generated@@311 $generated@@626 ($generated@@558 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@244) ($generated@@311 $generated@@628 ($generated@@75 2))) (and (= ($generated@@363 ($generated@@449 $generated@@140 $generated@@628)) $generated@@628) ($generated@@220 ($generated@@449 $generated@@140 $generated@@628) ($generated@@75 2))))
 :pattern ( ($generated@@311 $generated@@628 ($generated@@75 2)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@244) ($generated@@311 $generated@@629 ($generated@@75 3))) (and (= ($generated@@363 ($generated@@449 $generated@@148 $generated@@629)) $generated@@629) ($generated@@220 ($generated@@449 $generated@@148 $generated@@629) ($generated@@75 3))))
 :pattern ( ($generated@@311 $generated@@629 ($generated@@75 3)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@244) ($generated@@311 $generated@@630 ($generated@@75 4))) (and (= ($generated@@363 ($generated@@449 $generated@@156 $generated@@630)) $generated@@630) ($generated@@220 ($generated@@449 $generated@@156 $generated@@630) ($generated@@75 4))))
 :pattern ( ($generated@@311 $generated@@630 ($generated@@75 4)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@244) ($generated@@311 $generated@@631 ($generated@@75 7))) (and (= ($generated@@363 ($generated@@449 $generated@@164 $generated@@631)) $generated@@631) ($generated@@220 ($generated@@449 $generated@@164 $generated@@631) ($generated@@75 7))))
 :pattern ( ($generated@@311 $generated@@631 ($generated@@75 7)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@244) ($generated@@311 $generated@@632 ($generated@@75 8))) (and (= ($generated@@363 ($generated@@449 $generated@@172 $generated@@632)) $generated@@632) ($generated@@220 ($generated@@449 $generated@@172 $generated@@632) ($generated@@75 8))))
 :pattern ( ($generated@@311 $generated@@632 ($generated@@75 8)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@244) ($generated@@311 $generated@@633 ($generated@@75 15))) (and (= ($generated@@363 ($generated@@449 $generated@@180 $generated@@633)) $generated@@633) ($generated@@220 ($generated@@449 $generated@@180 $generated@@633) ($generated@@75 15))))
 :pattern ( ($generated@@311 $generated@@633 ($generated@@75 15)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@244) ($generated@@311 $generated@@634 ($generated@@75 16))) (and (= ($generated@@363 ($generated@@449 $generated@@188 $generated@@634)) $generated@@634) ($generated@@220 ($generated@@449 $generated@@188 $generated@@634) ($generated@@75 16))))
 :pattern ( ($generated@@311 $generated@@634 ($generated@@75 16)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@244) ($generated@@311 $generated@@635 ($generated@@75 32))) (and (= ($generated@@363 ($generated@@449 $generated@@196 $generated@@635)) $generated@@635) ($generated@@220 ($generated@@449 $generated@@196 $generated@@635) ($generated@@75 32))))
 :pattern ( ($generated@@311 $generated@@635 ($generated@@75 32)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@244) ($generated@@311 $generated@@636 ($generated@@75 53))) (and (= ($generated@@363 ($generated@@449 $generated@@204 $generated@@636)) $generated@@636) ($generated@@220 ($generated@@449 $generated@@204 $generated@@636) ($generated@@75 53))))
 :pattern ( ($generated@@311 $generated@@636 ($generated@@75 53)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@244) ($generated@@311 $generated@@637 ($generated@@75 100))) (and (= ($generated@@363 ($generated@@449 $generated@@212 $generated@@637)) $generated@@637) ($generated@@220 ($generated@@449 $generated@@212 $generated@@637) ($generated@@75 100))))
 :pattern ( ($generated@@311 $generated@@637 ($generated@@75 100)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@638) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@639) $generated@@64)) (= (type $generated@@640) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@638 ($generated@@249 $generated@@639) $generated@@640) (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@244) (< 0 ($generated ($generated@@81 $generated@@638 $generated@@641)))) ($generated@@342 $generated@@641 $generated@@639 $generated@@640))
 :pattern ( ($generated@@81 $generated@@638 $generated@@641))
))))
 :pattern ( ($generated@@74 $generated@@638 ($generated@@249 $generated@@639) $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) $generated@@235) (= (type $generated@@643) $generated@@64)) (= (type $generated@@644) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@341 $generated@@644) (and ($generated@@233 $generated@@642) (exists (($generated@@645 T@U) ) (!  (and (= (type $generated@@645) $generated@@64) ($generated@@74 $generated@@642 ($generated@@234 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@74 $generated@@642 ($generated@@234 $generated@@643 $generated@@645) $generated@@644))
))))) ($generated@@342 ($generated@@242 $generated@@642) $generated@@643 $generated@@644))
 :pattern ( ($generated@@342 ($generated@@242 $generated@@642) $generated@@643 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) $generated@@235) (= (type $generated@@647) $generated@@64)) (= (type $generated@@648) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@341 $generated@@648) (and ($generated@@233 $generated@@646) (exists (($generated@@649 T@U) ) (!  (and (= (type $generated@@649) $generated@@64) ($generated@@74 $generated@@646 ($generated@@234 $generated@@649 $generated@@647) $generated@@648))
 :pattern ( ($generated@@74 $generated@@646 ($generated@@234 $generated@@649 $generated@@647) $generated@@648))
))))) ($generated@@342 ($generated@@243 $generated@@646) $generated@@647 $generated@@648))
 :pattern ( ($generated@@342 ($generated@@243 $generated@@646) $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@244) (= (type $generated@@651) $generated@@244)) (= ($generated@@310 ($generated@@332 $generated@@650) ($generated@@332 $generated@@651)) ($generated@@332 ($generated@@310 $generated@@650 $generated@@651))))
 :pattern ( ($generated@@310 ($generated@@332 $generated@@650) ($generated@@332 $generated@@651)))
)))
(assert (forall (($generated@@652 Int) ) (! (= ($generated@@363 ($generated@@8 ($generated@@330 $generated@@652))) ($generated@@332 ($generated@@363 ($generated@@8 $generated@@652))))
 :pattern ( ($generated@@363 ($generated@@8 ($generated@@330 $generated@@652))))
)))
(assert (forall (($generated@@653 T@U) ) (! (= ($generated@@363 ($generated@@332 $generated@@653)) ($generated@@332 ($generated@@363 $generated@@653)))
 :pattern ( ($generated@@363 ($generated@@332 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ) (! (let (($generated@@655 ($generated@@357 (type $generated@@654))))
 (=> (and (= (type $generated@@654) ($generated@@356 $generated@@655)) (= ($generated@@355 $generated@@654) 0)) (= $generated@@654 ($generated@@354 $generated@@655))))
 :pattern ( ($generated@@355 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (! (let (($generated@@659 (type $generated@@657)))
 (=> (and (and (= (type $generated@@656) ($generated@@76 $generated@@659 $generated@@2)) (= (type $generated@@658) $generated@@2)) (<= 0 ($generated $generated@@658))) (= ($generated@@368 ($generated@@82 $generated@@656 $generated@@657 $generated@@658)) (+ (- ($generated@@368 $generated@@656) ($generated ($generated@@81 $generated@@656 $generated@@657))) ($generated $generated@@658)))))
 :pattern ( ($generated@@368 ($generated@@82 $generated@@656 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@661) $generated@@2)) ($generated@@74 $generated@@661 $generated@@46 $generated@@660))
 :pattern ( ($generated@@74 $generated@@661 $generated@@46 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@663) $generated@@3)) ($generated@@74 $generated@@663 $generated@@47 $generated@@662))
 :pattern ( ($generated@@74 $generated@@663 $generated@@47 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@665) $generated@@4)) ($generated@@74 $generated@@665 $generated@@44 $generated@@664))
 :pattern ( ($generated@@74 $generated@@665 $generated@@44 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@667) $generated@@338)) ($generated@@74 $generated@@667 $generated@@45 $generated@@666))
 :pattern ( ($generated@@74 $generated@@667 $generated@@45 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@669) $generated@@244)) ($generated@@74 $generated@@669 $generated@@48 $generated@@668))
 :pattern ( ($generated@@74 $generated@@669 $generated@@48 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@356 $generated@@244)) (= (type $generated@@671) $generated@@64)) (= ($generated@@220 $generated@@670 ($generated@@558 $generated@@671)) (forall (($generated@@672 Int) ) (!  (=> (and (<= 0 $generated@@672) (< $generated@@672 ($generated@@355 $generated@@670))) ($generated@@311 ($generated@@559 $generated@@670 $generated@@672) $generated@@671))
 :pattern ( ($generated@@559 $generated@@670 $generated@@672))
))))
 :pattern ( ($generated@@220 $generated@@670 ($generated@@558 $generated@@671)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 Int) ) (!  (=> (= (type $generated@@674) ($generated@@356 $generated@@244)) (=> (and (<= 0 $generated@@675) (< $generated@@675 ($generated@@355 $generated@@674))) (< ($generated@@597 ($generated@@449 $generated@@235 ($generated@@559 $generated@@674 $generated@@675))) ($generated@@673 $generated@@674))))
 :pattern ( ($generated@@597 ($generated@@449 $generated@@235 ($generated@@559 $generated@@674 $generated@@675))))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (and (= (type $generated@@676) ($generated@@376 $generated@@244 $generated@@244)) (= (type $generated@@677) $generated@@64)) (= (type $generated@@678) $generated@@64)) ($generated@@220 $generated@@676 ($generated@@477 $generated@@677 $generated@@678))) (and (and ($generated@@220 ($generated@@374 $generated@@676) ($generated@@320 $generated@@677)) ($generated@@220 ($generated@@417 $generated@@676) ($generated@@320 $generated@@678))) ($generated@@220 ($generated@@448 $generated@@676) ($generated@@320 ($generated@@234 $generated@@677 $generated@@678)))))
 :pattern ( ($generated@@220 $generated@@676 ($generated@@477 $generated@@677 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (and (= (type $generated@@679) ($generated@@394 $generated@@244 $generated@@244)) (= (type $generated@@680) $generated@@64)) (= (type $generated@@681) $generated@@64)) ($generated@@220 $generated@@679 ($generated@@485 $generated@@680 $generated@@681))) (and (and ($generated@@220 ($generated@@392 $generated@@679) ($generated@@325 $generated@@680)) ($generated@@220 ($generated@@428 $generated@@679) ($generated@@325 $generated@@681))) ($generated@@220 ($generated@@459 $generated@@679) ($generated@@325 ($generated@@234 $generated@@680 $generated@@681)))))
 :pattern ( ($generated@@220 $generated@@679 ($generated@@485 $generated@@680 $generated@@681)))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@2) ($generated@@220 $generated@@682 $generated@@46))
 :pattern ( ($generated@@220 $generated@@682 $generated@@46))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@3) ($generated@@220 $generated@@683 $generated@@47))
 :pattern ( ($generated@@220 $generated@@683 $generated@@47))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@4) ($generated@@220 $generated@@684 $generated@@44))
 :pattern ( ($generated@@220 $generated@@684 $generated@@44))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@338) ($generated@@220 $generated@@685 $generated@@45))
 :pattern ( ($generated@@220 $generated@@685 $generated@@45))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@244) ($generated@@220 $generated@@686 $generated@@48))
 :pattern ( ($generated@@220 $generated@@686 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 (T@U) Bool)
(declare-fun $generated@@693 () Int)
(assert  (and (and (and (= (type $generated@@687) ($generated@@256 $generated@@77 $generated@@4)) (= (type $generated@@688) $generated@@77)) (= (type $generated@@689) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@691) $generated@@338)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@694  (=> (= $generated@@687 ($generated@@255 $generated@@688 $generated@@689 $generated@@60 false)) (=> (and (= $generated@@690 ($generated@@337 $generated@@691)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@330 0) $generated@@690) (< $generated@@690 4294967296))))))
(let (($generated@@695  (=> (and (and (and ($generated@@341 $generated@@689) ($generated@@692 $generated@@689)) ($generated@@220 $generated@@691 $generated@@45)) (and (and (= 1 $generated@@693) (<= ($generated@@337 ($generated@@336 ($generated@@330 0))) ($generated@@337 $generated@@691))) (and (< ($generated@@337 $generated@@691) ($generated@@337 ($generated@@336 ($generated@@330 128)))) (= (ControlFlow 0 3) 2)))) $generated@@694)))
$generated@@695)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
