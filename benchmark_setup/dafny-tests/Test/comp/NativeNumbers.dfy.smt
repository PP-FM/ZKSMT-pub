(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 (- 0 128))) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 (- 0 128)) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 (- 0 128)) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 128))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 (- 0 32768))) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 (- 0 32768)) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 (- 0 32768)) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 32768))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 (- 0 2147483648))) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 (- 0 2147483648)) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 (- 0 2147483648)) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 2147483648))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 (- 0 2147483648))) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 (- 0 2147483648)) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 (- 0 2147483648)) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 9223372036854775808))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 256))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 65536))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 4294967296))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 18446744073709551616))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 ((_ BitVec 7)) T@U)
(declare-fun $generated@@137 (T@U) (_ BitVec 7))
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 ((_ BitVec 8)) T@U)
(declare-fun $generated@@145 (T@U) (_ BitVec 8))
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 ((_ BitVec 15)) T@U)
(declare-fun $generated@@153 (T@U) (_ BitVec 15))
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@160 ((_ BitVec 16)) T@U)
(declare-fun $generated@@161 (T@U) (_ BitVec 16))
(declare-fun $generated@@167 (T@U) Int)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@198 (T@U T@U) T@U)
(declare-fun $generated@@199 () T@T)
(declare-fun $generated@@205 (T@U T@U) Bool)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@208 () T@T)
(declare-fun $generated@@213 (T@U) T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@218 (T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@220 (T@T T@T) T@T)
(declare-fun $generated@@221 (T@T) T@T)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@223 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@U T@U T@U) T@U)
(declare-fun $generated@@276 (T@T T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@298 (T@U T@U) T@U)
(declare-fun $generated@@299 (T@U T@U) Bool)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@318 (Int) Int)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@324 (T@U T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@337 (Int) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 () T@T)
(declare-fun $generated@@342 (T@U T@U T@U) Bool)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@359 (T@T) T@U)
(declare-fun $generated@@360 (T@U) Int)
(declare-fun $generated@@363 (T@U) Int)
(declare-fun $generated@@364 (T@U T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@390 (T@T) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@T) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@T T@T) T@U)
(declare-fun $generated@@407 (T@T T@T) T@T)
(declare-fun $generated@@408 (T@T) T@T)
(declare-fun $generated@@409 (T@T) T@T)
(declare-fun $generated@@431 (T@U Int) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@T T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@514 (T@U T@U) T@U)
(declare-fun $generated@@522 (T@U T@U) T@U)
(declare-fun $generated@@533 (T@T) T@U)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@609 (T@U) Int)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@615 (T@U) T@U)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@627 (T@U) T@U)
(declare-fun $generated@@630 (T@U) T@U)
(declare-fun $generated@@643 (T@U) Int)
(declare-fun $generated@@644 (T@U) Int)
(declare-fun $generated@@664 (T@T) T@U)
(declare-fun $generated@@672 (T@U) T@U)
(declare-fun $generated@@673 (T@U) T@U)
(declare-fun $generated@@755 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (and (forall (($generated@@138 (_ BitVec 7)) ) (! (= ($generated@@137 ($generated@@136 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@136 $generated@@138))
)) (= ($generated@@1 $generated@@135) 14)) (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@135) (= ($generated@@136 ($generated@@137 $generated@@139)) $generated@@139))
 :pattern ( ($generated@@137 $generated@@139))
))) (forall (($generated@@140 (_ BitVec 7)) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@135)
 :pattern ( ($generated@@136 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@135) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@141 ($generated@@78 7) $generated@@142))
 :pattern ( ($generated@@77 $generated@@141 ($generated@@78 7) $generated@@142))
)))
(assert  (and (and (and (forall (($generated@@146 (_ BitVec 8)) ) (! (= ($generated@@145 ($generated@@144 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@144 $generated@@146))
)) (= ($generated@@1 $generated@@143) 15)) (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@143) (= ($generated@@144 ($generated@@145 $generated@@147)) $generated@@147))
 :pattern ( ($generated@@145 $generated@@147))
))) (forall (($generated@@148 (_ BitVec 8)) ) (! (= (type ($generated@@144 $generated@@148)) $generated@@143)
 :pattern ( ($generated@@144 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@143) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@149 ($generated@@78 8) $generated@@150))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@78 8) $generated@@150))
)))
(assert  (and (and (and (forall (($generated@@154 (_ BitVec 15)) ) (! (= ($generated@@153 ($generated@@152 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@154))
)) (= ($generated@@1 $generated@@151) 16)) (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@151) (= ($generated@@152 ($generated@@153 $generated@@155)) $generated@@155))
 :pattern ( ($generated@@153 $generated@@155))
))) (forall (($generated@@156 (_ BitVec 15)) ) (! (= (type ($generated@@152 $generated@@156)) $generated@@151)
 :pattern ( ($generated@@152 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@151) (= (type $generated@@158) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@157 ($generated@@78 15) $generated@@158))
 :pattern ( ($generated@@77 $generated@@157 ($generated@@78 15) $generated@@158))
)))
(assert  (and (and (and (forall (($generated@@162 (_ BitVec 16)) ) (! (= ($generated@@161 ($generated@@160 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@160 $generated@@162))
)) (= ($generated@@1 $generated@@159) 17)) (forall (($generated@@163 T@U) ) (!  (=> (= (type $generated@@163) $generated@@159) (= ($generated@@160 ($generated@@161 $generated@@163)) $generated@@163))
 :pattern ( ($generated@@161 $generated@@163))
))) (forall (($generated@@164 (_ BitVec 16)) ) (! (= (type ($generated@@160 $generated@@164)) $generated@@159)
 :pattern ( ($generated@@160 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@159) (= (type $generated@@166) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@165 ($generated@@78 16) $generated@@166))
 :pattern ( ($generated@@77 $generated@@165 ($generated@@78 16) $generated@@166))
)))
(assert  (and (and (forall (($generated@@172 T@U) ) (! (= (type ($generated@@168 $generated@@172)) $generated@@67)
 :pattern ( ($generated@@168 $generated@@172))
)) (= (type $generated@@169) $generated@@80)) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@67)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@67) (= (type $generated@@175) $generated@@80)) (and (not (= $generated@@175 $generated@@169)) (= ($generated@@170 $generated@@175) ($generated@@168 $generated@@174)))) ($generated@@171 ($generated@@8 ($generated@@167 $generated@@175)) $generated@@46))
 :pattern ( ($generated@@167 $generated@@175) ($generated@@168 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@178) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@176 $generated@@177 $generated@@178)) (forall (($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@177 $generated@@179) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@178 $generated@@179) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@178 $generated@@179) $generated@@60))
)))
 :pattern ( ($generated@@176 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@67) (= (type $generated@@181) $generated@@80)) (= (type $generated@@182) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@181 ($generated@@168 $generated@@180) $generated@@182)  (or (= $generated@@181 $generated@@169) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@182 $generated@@181) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@181 ($generated@@168 $generated@@180) $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (and (= (type $generated@@184) $generated@@67) (= (type $generated@@185) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@186) $generated@@80)) (and (and ($generated@@183 $generated@@185) (and (not (= $generated@@186 $generated@@169)) (= ($generated@@170 $generated@@186) ($generated@@168 $generated@@184)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@185 $generated@@186) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@167 $generated@@186)) $generated@@46 $generated@@185))
 :pattern ( ($generated@@167 $generated@@186) ($generated@@86 ($generated@@84 $generated@@185 $generated@@186) $generated@@60) ($generated@@168 $generated@@184))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@2) ($generated@@171 $generated@@187 ($generated@@78 0)))
 :pattern ( ($generated@@171 $generated@@187 ($generated@@78 0)))
)))
(assert (forall (($generated@@188 T@U) ) (!  (=> (= (type $generated@@188) $generated@@135) ($generated@@171 $generated@@188 ($generated@@78 7)))
 :pattern ( ($generated@@171 $generated@@188 ($generated@@78 7)))
)))
(assert (forall (($generated@@189 T@U) ) (!  (=> (= (type $generated@@189) $generated@@143) ($generated@@171 $generated@@189 ($generated@@78 8)))
 :pattern ( ($generated@@171 $generated@@189 ($generated@@78 8)))
)))
(assert (forall (($generated@@190 T@U) ) (!  (=> (= (type $generated@@190) $generated@@151) ($generated@@171 $generated@@190 ($generated@@78 15)))
 :pattern ( ($generated@@171 $generated@@190 ($generated@@78 15)))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (= (type $generated@@191) $generated@@159) ($generated@@171 $generated@@191 ($generated@@78 16)))
 :pattern ( ($generated@@171 $generated@@191 ($generated@@78 16)))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@192 $generated@@193)) $generated@@67)
 :pattern ( ($generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@67) (= (type $generated@@195) $generated@@80)) (= (type $generated@@196) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@195 ($generated@@192 $generated@@194) $generated@@196) ($generated@@77 $generated@@195 ($generated@@168 $generated@@194) $generated@@196)))
 :pattern ( ($generated@@77 $generated@@195 ($generated@@192 $generated@@194) $generated@@196))
)))
(assert  (and (= ($generated@@1 $generated@@199) 18) (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= (type ($generated@@198 $generated@@200 $generated@@201)) $generated@@67)
 :pattern ( ($generated@@198 $generated@@200 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (and (= (type $generated@@202) $generated@@67) (= (type $generated@@203) $generated@@67)) (= (type $generated@@204) $generated@@199)) ($generated@@171 $generated@@204 ($generated@@198 $generated@@202 $generated@@203))) ($generated@@197 $generated@@204))
 :pattern ( ($generated@@197 $generated@@204) ($generated@@171 $generated@@204 ($generated@@198 $generated@@202 $generated@@203)))
)))
(assert  (and (and (= ($generated@@1 $generated@@208) 19) (forall (($generated@@209 T@U) ) (! (= (type ($generated@@206 $generated@@209)) $generated@@208)
 :pattern ( ($generated@@206 $generated@@209))
))) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@207 $generated@@210)) $generated@@208)
 :pattern ( ($generated@@207 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (and (= (type $generated@@211) $generated@@199) (= (type $generated@@212) $generated@@199)) true) (= ($generated@@205 $generated@@211 $generated@@212)  (and (= ($generated@@206 $generated@@211) ($generated@@206 $generated@@212)) (= ($generated@@207 $generated@@211) ($generated@@207 $generated@@212)))))
 :pattern ( ($generated@@205 $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@215 T@U) ) (! (= (type ($generated@@213 $generated@@215)) $generated@@67)
 :pattern ( ($generated@@213 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (and (= (type $generated@@216) ($generated@@79 $generated@@208 $generated@@2)) (= (type $generated@@217) $generated@@67)) ($generated@@171 $generated@@216 ($generated@@213 $generated@@217))) ($generated@@214 $generated@@216))
 :pattern ( ($generated@@171 $generated@@216 ($generated@@213 $generated@@217)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (= ($generated@@1 ($generated@@220 $generated@@224 $generated@@225)) 20)) (forall (($generated@@226 T@T) ($generated@@227 T@T) ) (! (= ($generated@@221 ($generated@@220 $generated@@226 $generated@@227)) $generated@@226)
 :pattern ( ($generated@@220 $generated@@226 $generated@@227))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= ($generated@@222 ($generated@@220 $generated@@228 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@220 $generated@@228 $generated@@229))
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@222 (type $generated@@230))))
(= (type ($generated@@218 $generated@@230 $generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@218 $generated@@230 $generated@@231 $generated@@232))
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 (type $generated@@237)))
(let (($generated@@239 (type $generated@@235)))
(= (type ($generated@@223 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@220 $generated@@239 $generated@@238))))
 :pattern ( ($generated@@223 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@222 (type $generated@@240))))
 (=> (= (type $generated@@243) $generated@@244) (= ($generated@@218 ($generated@@223 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@241 $generated@@242) $generated@@243)))
 :weight 0
))) (and (and (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or (= $generated@@247 $generated@@249) (= ($generated@@218 ($generated@@223 $generated@@246 $generated@@247 $generated@@248 $generated@@245) $generated@@249 $generated@@250) ($generated@@218 $generated@@246 $generated@@249 $generated@@250)))
 :weight 0
)) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (or (= $generated@@254 $generated@@256) (= ($generated@@218 ($generated@@223 $generated@@252 $generated@@253 $generated@@254 $generated@@251) $generated@@255 $generated@@256) ($generated@@218 $generated@@252 $generated@@255 $generated@@256)))
 :weight 0
))) (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (or true (= ($generated@@218 ($generated@@223 $generated@@258 $generated@@259 $generated@@260 $generated@@257) $generated@@261 $generated@@262) ($generated@@218 $generated@@258 $generated@@261 $generated@@262)))
 :weight 0
)))) (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 Bool) ) (! (= (type ($generated@@219 $generated@@263 $generated@@264 $generated@@265 $generated@@266)) ($generated@@220 $generated@@80 $generated@@4))
 :pattern ( ($generated@@219 $generated@@263 $generated@@264 $generated@@265 $generated@@266))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 Bool) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@70 (type $generated@@272))))
 (=> (and (and (and (and (= (type $generated@@267) $generated@@80) (= (type $generated@@268) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@269) ($generated@@69 $generated@@4))) (= (type $generated@@271) $generated@@80)) (= (type $generated@@272) ($generated@@69 $generated@@273))) (= ($generated@@0 ($generated@@218 ($generated@@219 $generated@@267 $generated@@268 $generated@@269 $generated@@270) $generated@@271 $generated@@272))  (=> (and (not (= $generated@@271 $generated@@267)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@268 $generated@@271) $generated@@269))) $generated@@270))))
 :pattern ( ($generated@@218 ($generated@@219 $generated@@267 $generated@@268 $generated@@269 $generated@@270) $generated@@271 $generated@@272))
)))
(assert  (and (and (and (and (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@280 $generated@@281)) 21)) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= ($generated@@278 ($generated@@276 $generated@@282 $generated@@283)) $generated@@282)
 :pattern ( ($generated@@276 $generated@@282 $generated@@283))
))) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@276 $generated@@284 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@276 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (! (let (($generated@@289 (type $generated@@288)))
(let (($generated@@290 (type $generated@@287)))
(= (type ($generated@@275 $generated@@286 $generated@@287 $generated@@288)) ($generated@@276 $generated@@290 $generated@@289))))
 :pattern ( ($generated@@275 $generated@@286 $generated@@287 $generated@@288))
))) (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@278 (type $generated@@291))))
(= (type ($generated@@277 $generated@@291)) ($generated@@79 $generated@@292 $generated@@4)))
 :pattern ( ($generated@@277 $generated@@291))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (! (let (($generated@@296 (type $generated@@295)))
(let (($generated@@297 (type $generated@@294)))
 (=> (and (= (type $generated@@293) ($generated@@276 $generated@@297 $generated@@296)) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@293) $generated@@294))) (= ($generated@@274 ($generated@@275 $generated@@293 $generated@@294 $generated@@295)) ($generated@@274 $generated@@293)))))
 :pattern ( ($generated@@274 ($generated@@275 $generated@@293 $generated@@294 $generated@@295)))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (= (type ($generated@@298 $generated@@300 $generated@@301)) $generated@@199)
 :pattern ( ($generated@@298 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (= (type $generated@@302) $generated@@67) (= (type $generated@@303) $generated@@67)) (= (type $generated@@304) $generated@@208)) (= (type $generated@@305) $generated@@208)) (= ($generated@@171 ($generated@@298 $generated@@304 $generated@@305) ($generated@@198 $generated@@302 $generated@@303))  (and ($generated@@299 $generated@@304 $generated@@302) ($generated@@299 $generated@@305 $generated@@303))))
 :pattern ( ($generated@@171 ($generated@@298 $generated@@304 $generated@@305) ($generated@@198 $generated@@302 $generated@@303)))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@199) (= (type $generated@@307) $generated@@199)) (= ($generated@@205 $generated@@306 $generated@@307) (= $generated@@306 $generated@@307)))
 :pattern ( ($generated@@205 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@67)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) ($generated@@79 $generated@@208 $generated@@4)) (= (type $generated@@311) $generated@@67)) (= ($generated@@171 $generated@@310 ($generated@@308 $generated@@311)) (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@208) ($generated@@0 ($generated@@84 $generated@@310 $generated@@312))) ($generated@@299 $generated@@312 $generated@@311))
 :pattern ( ($generated@@84 $generated@@310 $generated@@312))
))))
 :pattern ( ($generated@@171 $generated@@310 ($generated@@308 $generated@@311)))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@67)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) ($generated@@79 $generated@@208 $generated@@4)) (= (type $generated@@316) $generated@@67)) (= ($generated@@171 $generated@@315 ($generated@@313 $generated@@316)) (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@208) ($generated@@0 ($generated@@84 $generated@@315 $generated@@317))) ($generated@@299 $generated@@317 $generated@@316))
 :pattern ( ($generated@@84 $generated@@315 $generated@@317))
))))
 :pattern ( ($generated@@171 $generated@@315 ($generated@@313 $generated@@316)))
)))
(assert (forall (($generated@@319 Int) ) (! (= ($generated@@318 $generated@@319) $generated@@319)
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 (type $generated@@321)))
(= (type ($generated@@320 $generated@@321)) $generated@@322))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (= ($generated@@320 $generated@@323) $generated@@323)
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert  (and (and (and (forall (($generated@@328 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@328)) 22)) (forall (($generated@@329 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@326 $generated@@329))
))) (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (! (let (($generated@@332 (type $generated@@331)))
(= (type ($generated@@324 $generated@@330 $generated@@331)) ($generated@@326 $generated@@332)))
 :pattern ( ($generated@@324 $generated@@330 $generated@@331))
))) (forall (($generated@@333 T@U) ) (! (= (type ($generated@@325 $generated@@333)) $generated@@67)
 :pattern ( ($generated@@325 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (= (type $generated@@334) ($generated@@326 $generated@@208)) (= (type $generated@@335) $generated@@208)) (= (type $generated@@336) $generated@@67)) (and ($generated@@171 $generated@@334 ($generated@@325 $generated@@336)) ($generated@@299 $generated@@335 $generated@@336))) ($generated@@171 ($generated@@324 $generated@@334 $generated@@335) ($generated@@325 $generated@@336)))
 :pattern ( ($generated@@171 ($generated@@324 $generated@@334 $generated@@335) ($generated@@325 $generated@@336)))
)))
(assert  (and (= ($generated@@1 $generated@@339) 23) (forall (($generated@@340 Int) ) (! (= (type ($generated@@337 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@337 $generated@@340))
))))
(assert (forall (($generated@@341 Int) ) (!  (=> (and (<= 0 $generated@@341) (< $generated@@341 65536)) (= ($generated@@338 ($generated@@337 $generated@@341)) $generated@@341))
 :pattern ( ($generated@@337 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@343) $generated@@67) (= (type $generated@@344) $generated@@67)) (= (type $generated@@345) $generated@@208)) (= (type $generated@@346) $generated@@208)) (= (type $generated@@347) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@183 $generated@@347)) (= ($generated@@77 ($generated@@298 $generated@@345 $generated@@346) ($generated@@198 $generated@@343 $generated@@344) $generated@@347)  (and ($generated@@342 $generated@@345 $generated@@343 $generated@@347) ($generated@@342 $generated@@346 $generated@@344 $generated@@347))))
 :pattern ( ($generated@@77 ($generated@@298 $generated@@345 $generated@@346) ($generated@@198 $generated@@343 $generated@@344) $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(let (($generated@@352 (type $generated@@349)))
 (=> (and (= (type $generated@@348) ($generated@@276 $generated@@352 $generated@@351)) (not ($generated@@0 ($generated@@84 ($generated@@277 $generated@@348) $generated@@349)))) (= ($generated@@274 ($generated@@275 $generated@@348 $generated@@349 $generated@@350)) (+ ($generated@@274 $generated@@348) 1)))))
 :pattern ( ($generated@@274 ($generated@@275 $generated@@348 $generated@@349 $generated@@350)))
)))
(assert (forall (($generated@@354 T@U) ) (! (= (type ($generated@@353 $generated@@354)) $generated@@71)
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@199) (= ($generated@@197 $generated@@355) (= ($generated@@353 $generated@@355) $generated@@63)))
 :pattern ( ($generated@@197 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@199) ($generated@@197 $generated@@356)) (exists (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (and (and (= (type $generated@@357) $generated@@208) (= (type $generated@@358) $generated@@208)) (= $generated@@356 ($generated@@298 $generated@@357 $generated@@358)))
 :no-pattern (type $generated@@357)
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
)))
 :pattern ( ($generated@@197 $generated@@356))
)))
(assert (forall (($generated@@361 T@T) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@326 $generated@@361))
 :pattern ( ($generated@@359 $generated@@361))
)))
(assert (forall (($generated@@362 T@T) ) (! (= ($generated@@360 ($generated@@359 $generated@@362)) 0)
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(= (type ($generated@@364 $generated@@365 $generated@@366)) ($generated@@79 $generated@@367 $generated@@2)))
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
 (=> (= (type $generated@@368) ($generated@@79 $generated@@370 $generated@@2)) (= ($generated@@363 ($generated@@364 $generated@@368 $generated@@369)) (+ ($generated@@363 $generated@@368) 1))))
 :pattern ( ($generated@@363 ($generated@@364 $generated@@368 $generated@@369)))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
 (=> (= (type $generated@@371) ($generated@@326 $generated@@373)) (= ($generated@@360 ($generated@@324 $generated@@371 $generated@@372)) (+ 1 ($generated@@360 $generated@@371)))))
 :pattern ( ($generated@@324 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@339) (and (and (= ($generated@@337 ($generated@@338 $generated@@374)) $generated@@374) (<= 0 ($generated@@338 $generated@@374))) (< ($generated@@338 $generated@@374) 65536)))
 :pattern ( ($generated@@338 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@67) (= (type $generated@@376) $generated@@80)) (= ($generated@@171 $generated@@376 ($generated@@192 $generated@@375))  (and ($generated@@171 $generated@@376 ($generated@@168 $generated@@375)) (not (= $generated@@376 $generated@@169)))))
 :pattern ( ($generated@@171 $generated@@376 ($generated@@192 $generated@@375)))
)))
(assert (forall (($generated@@378 T@U) ) (! (= (type ($generated@@377 $generated@@378)) $generated@@208)
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@67) (= (type $generated@@381) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@342 ($generated@@377 $generated@@379) $generated@@380 $generated@@381) ($generated@@77 $generated@@379 $generated@@380 $generated@@381)))
 :pattern ( ($generated@@342 ($generated@@377 $generated@@379) $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@382) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@383) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@384) $generated@@208)) (= (type $generated@@385) $generated@@67)) ($generated@@176 $generated@@382 $generated@@383)) ($generated@@342 $generated@@384 $generated@@385 $generated@@382)) ($generated@@342 $generated@@384 $generated@@385 $generated@@383))
 :pattern ( ($generated@@176 $generated@@382 $generated@@383) ($generated@@342 $generated@@384 $generated@@385 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@386) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@387) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@389) $generated@@67)) ($generated@@176 $generated@@386 $generated@@387)) ($generated@@77 $generated@@388 $generated@@389 $generated@@386)) ($generated@@77 $generated@@388 $generated@@389 $generated@@387))
 :pattern ( ($generated@@176 $generated@@386 $generated@@387) ($generated@@77 $generated@@388 $generated@@389 $generated@@386))
)))
(assert (forall (($generated@@391 T@T) ) (! (= (type ($generated@@390 $generated@@391)) ($generated@@79 $generated@@391 $generated@@2))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@82 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@79 $generated@@393 $generated@@2)) (and (= (= ($generated@@363 $generated@@392) 0) (= $generated@@392 ($generated@@390 $generated@@393))) (=> (not (= ($generated@@363 $generated@@392) 0)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (< 0 ($generated ($generated@@84 $generated@@392 $generated@@394))))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@363 $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ) (! (= (type ($generated@@395 $generated@@396)) $generated@@72)
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (= (type $generated@@397) $generated@@67) (and (= ($generated@@75 ($generated@@168 $generated@@397)) $generated@@61) (= ($generated@@395 ($generated@@168 $generated@@397)) $generated@@65)))
 :pattern ( ($generated@@168 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (= (type $generated@@398) $generated@@67) (and (= ($generated@@75 ($generated@@192 $generated@@398)) $generated@@62) (= ($generated@@395 ($generated@@192 $generated@@398)) $generated@@65)))
 :pattern ( ($generated@@192 $generated@@398))
)))
(assert (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) ($generated@@276 $generated@@400 $generated@@401))
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@T) ) (! (let (($generated@@404 (type $generated@@402)))
 (not ($generated@@0 ($generated@@84 ($generated@@277 ($generated@@399 $generated@@404 $generated@@403)) $generated@@402))))
 :pattern ( (let (($generated@@404 (type $generated@@402)))
($generated@@84 ($generated@@277 ($generated@@399 $generated@@404 $generated@@403)) $generated@@402)))
)))
(assert  (and (and (and (and (forall (($generated@@410 T@T) ($generated@@411 T@T) ) (= ($generated@@1 ($generated@@407 $generated@@410 $generated@@411)) 24)) (forall (($generated@@412 T@T) ($generated@@413 T@T) ) (! (= ($generated@@408 ($generated@@407 $generated@@412 $generated@@413)) $generated@@412)
 :pattern ( ($generated@@407 $generated@@412 $generated@@413))
))) (forall (($generated@@414 T@T) ($generated@@415 T@T) ) (! (= ($generated@@409 ($generated@@407 $generated@@414 $generated@@415)) $generated@@415)
 :pattern ( ($generated@@407 $generated@@414 $generated@@415))
))) (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@408 (type $generated@@416))))
(= (type ($generated@@405 $generated@@416)) ($generated@@79 $generated@@417 $generated@@4)))
 :pattern ( ($generated@@405 $generated@@416))
))) (forall (($generated@@418 T@T) ($generated@@419 T@T) ) (! (= (type ($generated@@406 $generated@@418 $generated@@419)) ($generated@@407 $generated@@418 $generated@@419))
 :pattern ( ($generated@@406 $generated@@418 $generated@@419))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@T) ) (! (let (($generated@@422 (type $generated@@420)))
 (not ($generated@@0 ($generated@@84 ($generated@@405 ($generated@@406 $generated@@422 $generated@@421)) $generated@@420))))
 :pattern ( (let (($generated@@422 (type $generated@@420)))
($generated@@84 ($generated@@405 ($generated@@406 $generated@@422 $generated@@421)) $generated@@420)))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@82 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@79 $generated@@424 $generated@@2)) (= ($generated@@214 $generated@@423) (forall (($generated@@425 T@U) ) (!  (=> (= (type $generated@@425) $generated@@424) (and (<= 0 ($generated ($generated@@84 $generated@@423 $generated@@425))) (<= ($generated ($generated@@84 $generated@@423 $generated@@425)) ($generated@@363 $generated@@423))))
 :pattern ( ($generated@@84 $generated@@423 $generated@@425))
)))))
 :pattern ( ($generated@@214 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@67) (= (type $generated@@427) $generated@@80)) (= ($generated@@171 $generated@@427 ($generated@@168 $generated@@426))  (or (= $generated@@427 $generated@@169) (= ($generated@@170 $generated@@427) ($generated@@168 $generated@@426)))))
 :pattern ( ($generated@@171 $generated@@427 ($generated@@168 $generated@@426)))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
 (=> (= (type $generated@@428) ($generated@@79 $generated@@430 $generated@@2)) (= ($generated ($generated@@84 ($generated@@364 $generated@@428 $generated@@429) $generated@@429)) (+ ($generated ($generated@@84 $generated@@428 $generated@@429)) 1))))
 :pattern ( ($generated@@364 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 Int) ) (! (let (($generated@@434 ($generated@@327 (type $generated@@432))))
(= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@434))
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 Int) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
 (=> (= (type $generated@@435) ($generated@@326 $generated@@438)) (and (=> (= $generated@@436 ($generated@@360 $generated@@435)) (= ($generated@@431 ($generated@@324 $generated@@435 $generated@@437) $generated@@436) $generated@@437)) (=> (not (= $generated@@436 ($generated@@360 $generated@@435))) (= ($generated@@431 ($generated@@324 $generated@@435 $generated@@437) $generated@@436) ($generated@@431 $generated@@435 $generated@@436))))))
 :pattern ( ($generated@@431 ($generated@@324 $generated@@435 $generated@@437) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@440)))
 (=> (and (and (= (type $generated@@439) ($generated@@79 $generated@@442 $generated@@2)) (= (type $generated@@441) $generated@@442)) (< 0 ($generated ($generated@@84 $generated@@439 $generated@@441)))) (< 0 ($generated ($generated@@84 ($generated@@364 $generated@@439 $generated@@440) $generated@@441)))))
 :pattern ( ($generated@@364 $generated@@439 $generated@@440) ($generated@@84 $generated@@439 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@279 (type $generated@@443))))
(let (($generated@@445 ($generated@@278 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@276 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@399 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@443) $generated@@446)))
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@277 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@279 (type $generated@@448))))
(= (type ($generated@@447 $generated@@448)) ($generated@@79 $generated@@449 $generated@@4)))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@279 (type $generated@@450))))
(let (($generated@@452 ($generated@@278 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@276 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@399 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@451) ($generated@@0 ($generated@@84 ($generated@@447 $generated@@450) $generated@@453)))
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@447 $generated@@450))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@409 (type $generated@@454))))
(let (($generated@@456 ($generated@@408 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@407 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@406 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ) (!  (and (= (type $generated@@457) $generated@@456) ($generated@@0 ($generated@@84 ($generated@@405 $generated@@454) $generated@@457)))
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@405 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@409 (type $generated@@459))))
(= (type ($generated@@458 $generated@@459)) ($generated@@79 $generated@@460 $generated@@4)))
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@409 (type $generated@@461))))
(let (($generated@@463 ($generated@@408 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@407 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@406 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ) (!  (and (= (type $generated@@464) $generated@@462) ($generated@@0 ($generated@@84 ($generated@@458 $generated@@461) $generated@@464)))
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@458 $generated@@461))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 (type $generated@@466)))
 (=> (and (= (type $generated@@465) ($generated@@79 $generated@@468 $generated@@2)) (= (type $generated@@467) $generated@@468)) (= (< 0 ($generated ($generated@@84 ($generated@@364 $generated@@465 $generated@@466) $generated@@467)))  (or (= $generated@@467 $generated@@466) (< 0 ($generated ($generated@@84 $generated@@465 $generated@@467)))))))
 :pattern ( ($generated@@84 ($generated@@364 $generated@@465 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) ($generated@@79 $generated@@208 $generated@@2)) (= (type $generated@@470) $generated@@67)) (= ($generated@@171 $generated@@469 ($generated@@213 $generated@@470)) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@208) (< 0 ($generated ($generated@@84 $generated@@469 $generated@@471)))) ($generated@@299 $generated@@471 $generated@@470))
 :pattern ( ($generated@@84 $generated@@469 $generated@@471))
))))
 :pattern ( ($generated@@171 $generated@@469 ($generated@@213 $generated@@470)))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@279 (type $generated@@472))))
(let (($generated@@474 ($generated@@278 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@276 $generated@@474 $generated@@473)) (= (= ($generated@@274 $generated@@472) 0) (= $generated@@472 ($generated@@399 $generated@@474 $generated@@473))))))
 :pattern ( ($generated@@274 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@79 $generated@@208 $generated@@4)) (= (type $generated@@476) $generated@@67)) (= (type $generated@@477) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@475 ($generated@@308 $generated@@476) $generated@@477) (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@208) ($generated@@0 ($generated@@84 $generated@@475 $generated@@478))) ($generated@@342 $generated@@478 $generated@@476 $generated@@477))
 :pattern ( ($generated@@84 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@77 $generated@@475 ($generated@@308 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@479) ($generated@@79 $generated@@208 $generated@@4)) (= (type $generated@@480) $generated@@67)) (= (type $generated@@481) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@479 ($generated@@313 $generated@@480) $generated@@481) (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@208) ($generated@@0 ($generated@@84 $generated@@479 $generated@@482))) ($generated@@342 $generated@@482 $generated@@480 $generated@@481))
 :pattern ( ($generated@@84 $generated@@479 $generated@@482))
))))
 :pattern ( ($generated@@77 $generated@@479 ($generated@@313 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 (type $generated@@483)))
(= ($generated ($generated@@84 ($generated@@390 $generated@@484) $generated@@483)) 0))
 :pattern ( (let (($generated@@484 (type $generated@@483)))
($generated@@84 ($generated@@390 $generated@@484) $generated@@483)))
)))
(assert  (and (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@485 $generated@@488)) ($generated@@79 $generated@@208 $generated@@4))
 :pattern ( ($generated@@485 $generated@@488))
)) (forall (($generated@@489 T@T) ($generated@@490 T@U) ) (! (= (type ($generated@@486 $generated@@489 $generated@@490)) $generated@@489)
 :pattern ( ($generated@@486 $generated@@489 $generated@@490))
))) (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@279 (type $generated@@491))))
(let (($generated@@493 ($generated@@278 (type $generated@@491))))
(= (type ($generated@@487 $generated@@491)) ($generated@@79 $generated@@493 $generated@@492))))
 :pattern ( ($generated@@487 $generated@@491))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) ($generated@@276 $generated@@208 $generated@@208)) (= (type $generated@@495) $generated@@208)) (= ($generated@@0 ($generated@@84 ($generated@@485 $generated@@494) $generated@@495))  (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@494) ($generated@@206 ($generated@@486 $generated@@199 $generated@@495)))) (= ($generated@@84 ($generated@@487 $generated@@494) ($generated@@206 ($generated@@486 $generated@@199 $generated@@495))) ($generated@@207 ($generated@@486 $generated@@199 $generated@@495))))))
 :pattern ( ($generated@@84 ($generated@@485 $generated@@494) $generated@@495))
)))
(assert  (and (forall (($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@498)) ($generated@@79 $generated@@208 $generated@@4))
 :pattern ( ($generated@@496 $generated@@498))
)) (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@409 (type $generated@@499))))
(let (($generated@@501 ($generated@@408 (type $generated@@499))))
(= (type ($generated@@497 $generated@@499)) ($generated@@79 $generated@@501 $generated@@500))))
 :pattern ( ($generated@@497 $generated@@499))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) ($generated@@407 $generated@@208 $generated@@208)) (= (type $generated@@503) $generated@@208)) (= ($generated@@0 ($generated@@84 ($generated@@496 $generated@@502) $generated@@503))  (and ($generated@@0 ($generated@@84 ($generated@@405 $generated@@502) ($generated@@206 ($generated@@486 $generated@@199 $generated@@503)))) (= ($generated@@84 ($generated@@497 $generated@@502) ($generated@@206 ($generated@@486 $generated@@199 $generated@@503))) ($generated@@207 ($generated@@486 $generated@@199 $generated@@503))))))
 :pattern ( ($generated@@84 ($generated@@496 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(let (($generated@@507 ($generated@@278 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@276 $generated@@507 $generated@@506)) (= ($generated@@0 ($generated@@84 ($generated@@447 $generated@@504) $generated@@505)) (exists (($generated@@508 T@U) ) (!  (and (= (type $generated@@508) $generated@@507) (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@504) $generated@@508)) (= $generated@@505 ($generated@@84 ($generated@@487 $generated@@504) $generated@@508))))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@504) $generated@@508))
 :pattern ( ($generated@@84 ($generated@@487 $generated@@504) $generated@@508))
))))))
 :pattern ( ($generated@@84 ($generated@@447 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(let (($generated@@512 ($generated@@408 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@407 $generated@@512 $generated@@511)) (= ($generated@@0 ($generated@@84 ($generated@@458 $generated@@509) $generated@@510)) (exists (($generated@@513 T@U) ) (!  (and (= (type $generated@@513) $generated@@512) (and ($generated@@0 ($generated@@84 ($generated@@405 $generated@@509) $generated@@513)) (= $generated@@510 ($generated@@84 ($generated@@497 $generated@@509) $generated@@513))))
 :pattern ( ($generated@@84 ($generated@@405 $generated@@509) $generated@@513))
 :pattern ( ($generated@@84 ($generated@@497 $generated@@509) $generated@@513))
))))))
 :pattern ( ($generated@@84 ($generated@@458 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (! (= (type ($generated@@514 $generated@@515 $generated@@516)) $generated@@67)
 :pattern ( ($generated@@514 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) ($generated@@276 $generated@@208 $generated@@208)) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) (= (type $generated@@520) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@517 ($generated@@514 $generated@@518 $generated@@519) $generated@@520) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@208) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@517) $generated@@521))) (and ($generated@@342 ($generated@@84 ($generated@@487 $generated@@517) $generated@@521) $generated@@519 $generated@@520) ($generated@@342 $generated@@521 $generated@@518 $generated@@520)))
 :pattern ( ($generated@@84 ($generated@@487 $generated@@517) $generated@@521))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@517) $generated@@521))
))))
 :pattern ( ($generated@@77 $generated@@517 ($generated@@514 $generated@@518 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (! (= (type ($generated@@522 $generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@522 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) ($generated@@407 $generated@@208 $generated@@208)) (= (type $generated@@526) $generated@@67)) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@525 ($generated@@522 $generated@@526 $generated@@527) $generated@@528) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@208) ($generated@@0 ($generated@@84 ($generated@@405 $generated@@525) $generated@@529))) (and ($generated@@342 ($generated@@84 ($generated@@497 $generated@@525) $generated@@529) $generated@@527 $generated@@528) ($generated@@342 $generated@@529 $generated@@526 $generated@@528)))
 :pattern ( ($generated@@84 ($generated@@497 $generated@@525) $generated@@529))
 :pattern ( ($generated@@84 ($generated@@405 $generated@@525) $generated@@529))
))))
 :pattern ( ($generated@@77 $generated@@525 ($generated@@522 $generated@@526 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@530) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@531) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@532) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@530 $generated@@532))) (and ($generated@@176 $generated@@530 $generated@@531) ($generated@@176 $generated@@531 $generated@@532))) ($generated@@176 $generated@@530 $generated@@532))
 :pattern ( ($generated@@176 $generated@@530 $generated@@531) ($generated@@176 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@T) ) (! (= (type ($generated@@533 $generated@@534)) ($generated@@79 $generated@@534 $generated@@4))
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@409 (type $generated@@535))))
(let (($generated@@537 ($generated@@408 (type $generated@@535))))
 (=> (= (type $generated@@535) ($generated@@407 $generated@@537 $generated@@536)) (= (= $generated@@535 ($generated@@406 $generated@@537 $generated@@536)) (= ($generated@@405 $generated@@535) ($generated@@533 $generated@@537))))))
 :pattern ( ($generated@@405 $generated@@535))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@409 (type $generated@@538))))
(let (($generated@@540 ($generated@@408 (type $generated@@538))))
 (=> (= (type $generated@@538) ($generated@@407 $generated@@540 $generated@@539)) (= (= $generated@@538 ($generated@@406 $generated@@540 $generated@@539)) (= ($generated@@458 $generated@@538) ($generated@@533 $generated@@539))))))
 :pattern ( ($generated@@458 $generated@@538))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@409 (type $generated@@541))))
(let (($generated@@543 ($generated@@408 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@407 $generated@@543 $generated@@542)) (= (= $generated@@541 ($generated@@406 $generated@@543 $generated@@542)) (= ($generated@@496 $generated@@541) ($generated@@533 $generated@@208))))))
 :pattern ( ($generated@@496 $generated@@541))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@279 (type $generated@@544))))
(let (($generated@@546 ($generated@@278 (type $generated@@544))))
 (=> (= (type $generated@@544) ($generated@@276 $generated@@546 $generated@@545)) (or (= $generated@@544 ($generated@@399 $generated@@546 $generated@@545)) (exists (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (and (and (= (type $generated@@547) $generated@@208) (= (type $generated@@548) $generated@@208)) ($generated@@0 ($generated@@84 ($generated@@485 $generated@@544) ($generated@@377 ($generated@@298 $generated@@547 $generated@@548)))))
 :no-pattern (type $generated@@547)
 :no-pattern (type $generated@@548)
 :no-pattern ($generated $generated@@547)
 :no-pattern ($generated@@0 $generated@@547)
 :no-pattern ($generated $generated@@548)
 :no-pattern ($generated@@0 $generated@@548)
))))))
 :pattern ( ($generated@@485 $generated@@544))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 ($generated@@409 (type $generated@@549))))
(let (($generated@@551 ($generated@@408 (type $generated@@549))))
 (=> (= (type $generated@@549) ($generated@@407 $generated@@551 $generated@@550)) (or (= $generated@@549 ($generated@@406 $generated@@551 $generated@@550)) (exists (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (and (and (= (type $generated@@552) $generated@@208) (= (type $generated@@553) $generated@@208)) ($generated@@0 ($generated@@84 ($generated@@496 $generated@@549) ($generated@@377 ($generated@@298 $generated@@552 $generated@@553)))))
 :no-pattern (type $generated@@552)
 :no-pattern (type $generated@@553)
 :no-pattern ($generated $generated@@552)
 :no-pattern ($generated@@0 $generated@@552)
 :no-pattern ($generated $generated@@553)
 :no-pattern ($generated@@0 $generated@@553)
))))))
 :pattern ( ($generated@@496 $generated@@549))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@208) ($generated@@299 $generated@@554 $generated@@46)) (and (= ($generated@@377 ($generated@@486 $generated@@2 $generated@@554)) $generated@@554) ($generated@@171 ($generated@@486 $generated@@2 $generated@@554) $generated@@46)))
 :pattern ( ($generated@@299 $generated@@554 $generated@@46))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@208) ($generated@@299 $generated@@555 $generated@@47)) (and (= ($generated@@377 ($generated@@486 $generated@@3 $generated@@555)) $generated@@555) ($generated@@171 ($generated@@486 $generated@@3 $generated@@555) $generated@@47)))
 :pattern ( ($generated@@299 $generated@@555 $generated@@47))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@208) ($generated@@299 $generated@@556 $generated@@44)) (and (= ($generated@@377 ($generated@@486 $generated@@4 $generated@@556)) $generated@@556) ($generated@@171 ($generated@@486 $generated@@4 $generated@@556) $generated@@44)))
 :pattern ( ($generated@@299 $generated@@556 $generated@@44))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@208) ($generated@@299 $generated@@557 $generated@@45)) (and (= ($generated@@377 ($generated@@486 $generated@@339 $generated@@557)) $generated@@557) ($generated@@171 ($generated@@486 $generated@@339 $generated@@557) $generated@@45)))
 :pattern ( ($generated@@299 $generated@@557 $generated@@45))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@67) (= ($generated@@299 ($generated@@377 $generated@@558) $generated@@559) ($generated@@171 $generated@@558 $generated@@559)))
 :pattern ( ($generated@@299 ($generated@@377 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@80) (<= 0 ($generated@@167 $generated@@560)))
 :no-pattern (type $generated@@560)
 :no-pattern ($generated $generated@@560)
 :no-pattern ($generated@@0 $generated@@560)
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@82 (type $generated@@562))))
 (=> (= (type $generated@@562) ($generated@@79 $generated@@563 $generated@@4)) (<= 0 ($generated@@561 $generated@@562))))
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@82 (type $generated@@564))))
 (=> (= (type $generated@@564) ($generated@@79 $generated@@565 $generated@@2)) (<= 0 ($generated@@363 $generated@@564))))
 :pattern ( ($generated@@363 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@327 (type $generated@@566))))
 (=> (= (type $generated@@566) ($generated@@326 $generated@@567)) (<= 0 ($generated@@360 $generated@@566))))
 :pattern ( ($generated@@360 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@279 (type $generated@@568))))
(let (($generated@@570 ($generated@@278 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@276 $generated@@570 $generated@@569)) (<= 0 ($generated@@274 $generated@@568)))))
 :pattern ( ($generated@@274 $generated@@568))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@67)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@67)) (= ($generated@@571 ($generated@@514 $generated@@573 $generated@@574)) $generated@@573))
 :pattern ( ($generated@@514 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@67)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@67) (= (type $generated@@578) $generated@@67)) (= ($generated@@575 ($generated@@514 $generated@@577 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@514 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@67) (= (type $generated@@580) $generated@@67)) (= ($generated@@75 ($generated@@514 $generated@@579 $generated@@580)) $generated@@58))
 :pattern ( ($generated@@514 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@67)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@67) (= (type $generated@@584) $generated@@67)) (= ($generated@@581 ($generated@@522 $generated@@583 $generated@@584)) $generated@@583))
 :pattern ( ($generated@@522 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@67)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@67)) (= ($generated@@585 ($generated@@522 $generated@@587 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@522 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@67)) (= ($generated@@75 ($generated@@522 $generated@@589 $generated@@590)) $generated@@59))
 :pattern ( ($generated@@522 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@208) (= (type $generated@@592) $generated@@208)) (= ($generated@@353 ($generated@@298 $generated@@591 $generated@@592)) $generated@@63))
 :pattern ( ($generated@@298 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@67)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@67) (= (type $generated@@596) $generated@@67)) (= ($generated@@593 ($generated@@198 $generated@@595 $generated@@596)) $generated@@595))
 :pattern ( ($generated@@198 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@67)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@67) (= (type $generated@@600) $generated@@67)) (= ($generated@@597 ($generated@@198 $generated@@599 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@198 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@208) (= (type $generated@@602) $generated@@208)) (= ($generated@@206 ($generated@@298 $generated@@601 $generated@@602)) $generated@@601))
 :pattern ( ($generated@@298 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@208) (= (type $generated@@604) $generated@@208)) (= ($generated@@207 ($generated@@298 $generated@@603 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@298 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@605) ($generated@@326 $generated@@208)) (= (type $generated@@606) $generated@@67)) (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@605 ($generated@@325 $generated@@606) $generated@@607) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@360 $generated@@605))) ($generated@@342 ($generated@@431 $generated@@605 $generated@@608) $generated@@606 $generated@@607))
 :pattern ( ($generated@@431 $generated@@605 $generated@@608))
))))
 :pattern ( ($generated@@77 $generated@@605 ($generated@@325 $generated@@606) $generated@@607))
)))
(assert (forall (($generated@@610 Int) ) (! (= ($generated@@609 ($generated@@78 $generated@@610)) $generated@@610)
 :pattern ( ($generated@@78 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ) (! (= (type ($generated@@611 $generated@@612)) $generated@@67)
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@67) (= ($generated@@611 ($generated@@308 $generated@@613)) $generated@@613))
 :pattern ( ($generated@@308 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@67) (= ($generated@@75 ($generated@@308 $generated@@614)) $generated@@54))
 :pattern ( ($generated@@308 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ) (! (= (type ($generated@@615 $generated@@616)) $generated@@67)
 :pattern ( ($generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@67) (= ($generated@@615 ($generated@@313 $generated@@617)) $generated@@617))
 :pattern ( ($generated@@313 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@67) (= ($generated@@75 ($generated@@313 $generated@@618)) $generated@@55))
 :pattern ( ($generated@@313 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ) (! (= (type ($generated@@619 $generated@@620)) $generated@@67)
 :pattern ( ($generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@67) (= ($generated@@619 ($generated@@213 $generated@@621)) $generated@@621))
 :pattern ( ($generated@@213 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@67) (= ($generated@@75 ($generated@@213 $generated@@622)) $generated@@56))
 :pattern ( ($generated@@213 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@67)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@67) (= ($generated@@623 ($generated@@325 $generated@@625)) $generated@@625))
 :pattern ( ($generated@@325 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@67) (= ($generated@@75 ($generated@@325 $generated@@626)) $generated@@57))
 :pattern ( ($generated@@325 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ) (! (= (type ($generated@@627 $generated@@628)) $generated@@67)
 :pattern ( ($generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@67) (= ($generated@@627 ($generated@@168 $generated@@629)) $generated@@629))
 :pattern ( ($generated@@168 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ) (! (= (type ($generated@@630 $generated@@631)) $generated@@67)
 :pattern ( ($generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@67) (= ($generated@@630 ($generated@@192 $generated@@632)) $generated@@632))
 :pattern ( ($generated@@192 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 (type $generated@@633)))
(= ($generated@@486 $generated@@634 ($generated@@377 $generated@@633)) $generated@@633))
 :pattern ( ($generated@@377 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@635) ($generated@@276 $generated@@208 $generated@@208)) (= (type $generated@@636) $generated@@67)) (= (type $generated@@637) $generated@@67)) (= ($generated@@171 $generated@@635 ($generated@@514 $generated@@636 $generated@@637)) (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@208) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@635) $generated@@638))) (and ($generated@@299 ($generated@@84 ($generated@@487 $generated@@635) $generated@@638) $generated@@637) ($generated@@299 $generated@@638 $generated@@636)))
 :pattern ( ($generated@@84 ($generated@@487 $generated@@635) $generated@@638))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@635) $generated@@638))
))))
 :pattern ( ($generated@@171 $generated@@635 ($generated@@514 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@639) ($generated@@407 $generated@@208 $generated@@208)) (= (type $generated@@640) $generated@@67)) (= (type $generated@@641) $generated@@67)) (= ($generated@@171 $generated@@639 ($generated@@522 $generated@@640 $generated@@641)) (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@208) ($generated@@0 ($generated@@84 ($generated@@405 $generated@@639) $generated@@642))) (and ($generated@@299 ($generated@@84 ($generated@@497 $generated@@639) $generated@@642) $generated@@641) ($generated@@299 $generated@@642 $generated@@640)))
 :pattern ( ($generated@@84 ($generated@@497 $generated@@639) $generated@@642))
 :pattern ( ($generated@@84 ($generated@@405 $generated@@639) $generated@@642))
))))
 :pattern ( ($generated@@171 $generated@@639 ($generated@@522 $generated@@640 $generated@@641)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@208) (= (type $generated@@646) $generated@@208)) (< ($generated@@643 $generated@@645) ($generated@@644 ($generated@@298 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@298 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@208) (= (type $generated@@648) $generated@@208)) (< ($generated@@643 $generated@@648) ($generated@@644 ($generated@@298 $generated@@647 $generated@@648))))
 :pattern ( ($generated@@298 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (! (let (($generated@@653 (type $generated@@652)))
(let (($generated@@654 (type $generated@@650)))
 (=> (and (= (type $generated@@649) ($generated@@276 $generated@@654 $generated@@653)) (= (type $generated@@651) $generated@@654)) (and (=> (= $generated@@651 $generated@@650) (and ($generated@@0 ($generated@@84 ($generated@@277 ($generated@@275 $generated@@649 $generated@@650 $generated@@652)) $generated@@651)) (= ($generated@@84 ($generated@@487 ($generated@@275 $generated@@649 $generated@@650 $generated@@652)) $generated@@651) $generated@@652))) (=> (not (= $generated@@651 $generated@@650)) (and (= ($generated@@0 ($generated@@84 ($generated@@277 ($generated@@275 $generated@@649 $generated@@650 $generated@@652)) $generated@@651)) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@649) $generated@@651))) (= ($generated@@84 ($generated@@487 ($generated@@275 $generated@@649 $generated@@650 $generated@@652)) $generated@@651) ($generated@@84 ($generated@@487 $generated@@649) $generated@@651))))))))
 :pattern ( ($generated@@84 ($generated@@277 ($generated@@275 $generated@@649 $generated@@650 $generated@@652)) $generated@@651))
 :pattern ( ($generated@@84 ($generated@@487 ($generated@@275 $generated@@649 $generated@@650 $generated@@652)) $generated@@651))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) $generated@@208) (= (type $generated@@656) $generated@@67)) (= (type $generated@@657) $generated@@67)) ($generated@@299 $generated@@655 ($generated@@514 $generated@@656 $generated@@657))) (and (= ($generated@@377 ($generated@@486 ($generated@@276 $generated@@208 $generated@@208) $generated@@655)) $generated@@655) ($generated@@171 ($generated@@486 ($generated@@276 $generated@@208 $generated@@208) $generated@@655) ($generated@@514 $generated@@656 $generated@@657))))
 :pattern ( ($generated@@299 $generated@@655 ($generated@@514 $generated@@656 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) $generated@@208) (= (type $generated@@659) $generated@@67)) (= (type $generated@@660) $generated@@67)) ($generated@@299 $generated@@658 ($generated@@522 $generated@@659 $generated@@660))) (and (= ($generated@@377 ($generated@@486 ($generated@@407 $generated@@208 $generated@@208) $generated@@658)) $generated@@658) ($generated@@171 ($generated@@486 ($generated@@407 $generated@@208 $generated@@208) $generated@@658) ($generated@@522 $generated@@659 $generated@@660))))
 :pattern ( ($generated@@299 $generated@@658 ($generated@@522 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (= (type $generated@@661) $generated@@67) (= (type $generated@@662) $generated@@67)) (= (type $generated@@663) $generated@@208)) ($generated@@299 $generated@@663 ($generated@@198 $generated@@661 $generated@@662))) (and (= ($generated@@377 ($generated@@486 $generated@@199 $generated@@663)) $generated@@663) ($generated@@171 ($generated@@486 $generated@@199 $generated@@663) ($generated@@198 $generated@@661 $generated@@662))))
 :pattern ( ($generated@@299 $generated@@663 ($generated@@198 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@665 T@T) ) (! (= (type ($generated@@664 $generated@@665)) ($generated@@79 $generated@@665 $generated@@4))
 :pattern ( ($generated@@664 $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ) (! (let (($generated@@667 (type $generated@@666)))
 (not ($generated@@0 ($generated@@84 ($generated@@664 $generated@@667) $generated@@666))))
 :pattern ( (let (($generated@@667 (type $generated@@666)))
($generated@@84 ($generated@@664 $generated@@667) $generated@@666)))
)))
(assert (forall (($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@668)))
 (not ($generated@@0 ($generated@@84 ($generated@@533 $generated@@669) $generated@@668))))
 :pattern ( (let (($generated@@669 (type $generated@@668)))
($generated@@84 ($generated@@533 $generated@@669) $generated@@668)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@67) (= (type $generated@@671) $generated@@67)) (and (= ($generated@@75 ($generated@@198 $generated@@670 $generated@@671)) $generated@@64) (= ($generated@@395 ($generated@@198 $generated@@670 $generated@@671)) $generated@@66)))
 :pattern ( ($generated@@198 $generated@@670 $generated@@671))
)))
(assert  (and (forall (($generated@@674 T@U) ) (! (let (($generated@@675 ($generated@@327 (type $generated@@674))))
(= (type ($generated@@672 $generated@@674)) ($generated@@326 $generated@@675)))
 :pattern ( ($generated@@672 $generated@@674))
)) (forall (($generated@@676 T@U) ) (! (let (($generated@@677 ($generated@@327 (type $generated@@676))))
(= (type ($generated@@673 $generated@@676)) $generated@@677))
 :pattern ( ($generated@@673 $generated@@676))
))))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (! (let (($generated@@680 (type $generated@@679)))
 (=> (= (type $generated@@678) ($generated@@326 $generated@@680)) (and (= ($generated@@672 ($generated@@324 $generated@@678 $generated@@679)) $generated@@678) (= ($generated@@673 ($generated@@324 $generated@@678 $generated@@679)) $generated@@679))))
 :pattern ( ($generated@@324 $generated@@678 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@199) (= ($generated@@643 ($generated@@377 $generated@@681)) ($generated@@644 $generated@@681)))
 :pattern ( ($generated@@643 ($generated@@377 $generated@@681)))
)))
(assert (forall (($generated@@682 T@U) ) (! (let (($generated@@683 ($generated@@279 (type $generated@@682))))
(let (($generated@@684 ($generated@@278 (type $generated@@682))))
 (=> (= (type $generated@@682) ($generated@@276 $generated@@684 $generated@@683)) (= ($generated@@561 ($generated@@277 $generated@@682)) ($generated@@274 $generated@@682)))))
 :pattern ( ($generated@@561 ($generated@@277 $generated@@682)))
)))
(assert (forall (($generated@@685 T@U) ) (! (let (($generated@@686 ($generated@@279 (type $generated@@685))))
(let (($generated@@687 ($generated@@278 (type $generated@@685))))
 (=> (= (type $generated@@685) ($generated@@276 $generated@@687 $generated@@686)) (= ($generated@@561 ($generated@@485 $generated@@685)) ($generated@@274 $generated@@685)))))
 :pattern ( ($generated@@561 ($generated@@485 $generated@@685)))
)))
(assert (forall (($generated@@688 T@U) ) (! (let (($generated@@689 ($generated@@279 (type $generated@@688))))
(let (($generated@@690 ($generated@@278 (type $generated@@688))))
 (=> (= (type $generated@@688) ($generated@@276 $generated@@690 $generated@@689)) (<= ($generated@@561 ($generated@@447 $generated@@688)) ($generated@@274 $generated@@688)))))
 :pattern ( ($generated@@561 ($generated@@447 $generated@@688)))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@691) $generated@@208) ($generated@@299 $generated@@691 ($generated@@78 0))) (and (= ($generated@@377 ($generated@@486 $generated@@2 $generated@@691)) $generated@@691) ($generated@@171 ($generated@@486 ($generated@@79 $generated@@208 $generated@@4) $generated@@691) ($generated@@78 0))))
 :pattern ( ($generated@@299 $generated@@691 ($generated@@78 0)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (= (type $generated@@692) $generated@@208) (= (type $generated@@693) $generated@@67)) ($generated@@299 $generated@@692 ($generated@@308 $generated@@693))) (and (= ($generated@@377 ($generated@@486 ($generated@@79 $generated@@208 $generated@@4) $generated@@692)) $generated@@692) ($generated@@171 ($generated@@486 ($generated@@79 $generated@@208 $generated@@4) $generated@@692) ($generated@@308 $generated@@693))))
 :pattern ( ($generated@@299 $generated@@692 ($generated@@308 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (= (type $generated@@694) $generated@@208) (= (type $generated@@695) $generated@@67)) ($generated@@299 $generated@@694 ($generated@@313 $generated@@695))) (and (= ($generated@@377 ($generated@@486 ($generated@@79 $generated@@208 $generated@@4) $generated@@694)) $generated@@694) ($generated@@171 ($generated@@486 ($generated@@79 $generated@@208 $generated@@4) $generated@@694) ($generated@@313 $generated@@695))))
 :pattern ( ($generated@@299 $generated@@694 ($generated@@313 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (= (type $generated@@696) $generated@@208) (= (type $generated@@697) $generated@@67)) ($generated@@299 $generated@@696 ($generated@@213 $generated@@697))) (and (= ($generated@@377 ($generated@@486 ($generated@@79 $generated@@208 $generated@@2) $generated@@696)) $generated@@696) ($generated@@171 ($generated@@486 ($generated@@79 $generated@@208 $generated@@2) $generated@@696) ($generated@@213 $generated@@697))))
 :pattern ( ($generated@@299 $generated@@696 ($generated@@213 $generated@@697)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (and (= (type $generated@@698) $generated@@208) (= (type $generated@@699) $generated@@67)) ($generated@@299 $generated@@698 ($generated@@325 $generated@@699))) (and (= ($generated@@377 ($generated@@486 ($generated@@326 $generated@@208) $generated@@698)) $generated@@698) ($generated@@171 ($generated@@486 ($generated@@326 $generated@@208) $generated@@698) ($generated@@325 $generated@@699))))
 :pattern ( ($generated@@299 $generated@@698 ($generated@@325 $generated@@699)))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (and (= (type $generated@@700) $generated@@67) (= (type $generated@@701) $generated@@208)) ($generated@@299 $generated@@701 ($generated@@168 $generated@@700))) (and (= ($generated@@377 ($generated@@486 $generated@@80 $generated@@701)) $generated@@701) ($generated@@171 ($generated@@486 $generated@@80 $generated@@701) ($generated@@168 $generated@@700))))
 :pattern ( ($generated@@299 $generated@@701 ($generated@@168 $generated@@700)))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (= (type $generated@@702) $generated@@67) (= (type $generated@@703) $generated@@208)) ($generated@@299 $generated@@703 ($generated@@192 $generated@@702))) (and (= ($generated@@377 ($generated@@486 $generated@@80 $generated@@703)) $generated@@703) ($generated@@171 ($generated@@486 $generated@@80 $generated@@703) ($generated@@192 $generated@@702))))
 :pattern ( ($generated@@299 $generated@@703 ($generated@@192 $generated@@702)))
)))
(assert (forall (($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@704) $generated@@208) ($generated@@299 $generated@@704 ($generated@@78 7))) (and (= ($generated@@377 ($generated@@486 $generated@@135 $generated@@704)) $generated@@704) ($generated@@171 ($generated@@486 $generated@@135 $generated@@704) ($generated@@78 7))))
 :pattern ( ($generated@@299 $generated@@704 ($generated@@78 7)))
)))
(assert (forall (($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@705) $generated@@208) ($generated@@299 $generated@@705 ($generated@@78 8))) (and (= ($generated@@377 ($generated@@486 $generated@@143 $generated@@705)) $generated@@705) ($generated@@171 ($generated@@486 $generated@@143 $generated@@705) ($generated@@78 8))))
 :pattern ( ($generated@@299 $generated@@705 ($generated@@78 8)))
)))
(assert (forall (($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@706) $generated@@208) ($generated@@299 $generated@@706 ($generated@@78 15))) (and (= ($generated@@377 ($generated@@486 $generated@@151 $generated@@706)) $generated@@706) ($generated@@171 ($generated@@486 $generated@@151 $generated@@706) ($generated@@78 15))))
 :pattern ( ($generated@@299 $generated@@706 ($generated@@78 15)))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@208) ($generated@@299 $generated@@707 ($generated@@78 16))) (and (= ($generated@@377 ($generated@@486 $generated@@159 $generated@@707)) $generated@@707) ($generated@@171 ($generated@@486 $generated@@159 $generated@@707) ($generated@@78 16))))
 :pattern ( ($generated@@299 $generated@@707 ($generated@@78 16)))
)))
(assert (forall (($generated@@708 T@U) ) (! (let (($generated@@709 ($generated@@82 (type $generated@@708))))
 (=> (= (type $generated@@708) ($generated@@79 $generated@@709 $generated@@4)) (and (= (= ($generated@@561 $generated@@708) 0) (= $generated@@708 ($generated@@664 $generated@@709))) (=> (not (= ($generated@@561 $generated@@708) 0)) (exists (($generated@@710 T@U) ) (!  (and (= (type $generated@@710) $generated@@709) ($generated@@0 ($generated@@84 $generated@@708 $generated@@710)))
 :no-pattern (type $generated@@710)
 :no-pattern ($generated $generated@@710)
 :no-pattern ($generated@@0 $generated@@710)
))))))
 :pattern ( ($generated@@561 $generated@@708))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ($generated@@713 T@U) ($generated@@714 T@U) ) (! (let (($generated@@715 (type $generated@@714)))
 (=> (and (and (and (= (type $generated@@711) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@712) $generated@@80)) (= (type $generated@@713) ($generated@@69 $generated@@715))) ($generated@@183 ($generated@@85 $generated@@711 $generated@@712 ($generated@@87 ($generated@@84 $generated@@711 $generated@@712) $generated@@713 $generated@@714)))) ($generated@@176 $generated@@711 ($generated@@85 $generated@@711 $generated@@712 ($generated@@87 ($generated@@84 $generated@@711 $generated@@712) $generated@@713 $generated@@714)))))
 :pattern ( ($generated@@85 $generated@@711 $generated@@712 ($generated@@87 ($generated@@84 $generated@@711 $generated@@712) $generated@@713 $generated@@714)))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (= (type $generated@@716) ($generated@@79 $generated@@208 $generated@@2)) (= (type $generated@@717) $generated@@67)) (= (type $generated@@718) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@716 ($generated@@213 $generated@@717) $generated@@718) (forall (($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@719) $generated@@208) (< 0 ($generated ($generated@@84 $generated@@716 $generated@@719)))) ($generated@@342 $generated@@719 $generated@@717 $generated@@718))
 :pattern ( ($generated@@84 $generated@@716 $generated@@719))
))))
 :pattern ( ($generated@@77 $generated@@716 ($generated@@213 $generated@@717) $generated@@718))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (and (= (type $generated@@720) $generated@@199) (= (type $generated@@721) $generated@@67)) (= (type $generated@@722) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@183 $generated@@722) (and ($generated@@197 $generated@@720) (exists (($generated@@723 T@U) ) (!  (and (= (type $generated@@723) $generated@@67) ($generated@@77 $generated@@720 ($generated@@198 $generated@@721 $generated@@723) $generated@@722))
 :pattern ( ($generated@@77 $generated@@720 ($generated@@198 $generated@@721 $generated@@723) $generated@@722))
))))) ($generated@@342 ($generated@@206 $generated@@720) $generated@@721 $generated@@722))
 :pattern ( ($generated@@342 ($generated@@206 $generated@@720) $generated@@721 $generated@@722))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (and (and (= (type $generated@@724) $generated@@199) (= (type $generated@@725) $generated@@67)) (= (type $generated@@726) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@183 $generated@@726) (and ($generated@@197 $generated@@724) (exists (($generated@@727 T@U) ) (!  (and (= (type $generated@@727) $generated@@67) ($generated@@77 $generated@@724 ($generated@@198 $generated@@727 $generated@@725) $generated@@726))
 :pattern ( ($generated@@77 $generated@@724 ($generated@@198 $generated@@727 $generated@@725) $generated@@726))
))))) ($generated@@342 ($generated@@207 $generated@@724) $generated@@725 $generated@@726))
 :pattern ( ($generated@@342 ($generated@@207 $generated@@724) $generated@@725 $generated@@726))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ($generated@@730 T@U) ) (! (let (($generated@@731 (type $generated@@729)))
 (=> (and (and (= (type $generated@@728) ($generated@@79 $generated@@731 $generated@@2)) (= (type $generated@@730) $generated@@731)) (not (= $generated@@729 $generated@@730))) (= ($generated ($generated@@84 $generated@@728 $generated@@730)) ($generated ($generated@@84 ($generated@@364 $generated@@728 $generated@@729) $generated@@730)))))
 :pattern ( ($generated@@364 $generated@@728 $generated@@729) ($generated@@84 $generated@@728 $generated@@730))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (= (type $generated@@732) $generated@@208) (= (type $generated@@733) $generated@@208)) (= ($generated@@298 ($generated@@320 $generated@@732) ($generated@@320 $generated@@733)) ($generated@@320 ($generated@@298 $generated@@732 $generated@@733))))
 :pattern ( ($generated@@298 ($generated@@320 $generated@@732) ($generated@@320 $generated@@733)))
)))
(assert (forall (($generated@@734 Int) ) (! (= ($generated@@377 ($generated@@8 ($generated@@318 $generated@@734))) ($generated@@320 ($generated@@377 ($generated@@8 $generated@@734))))
 :pattern ( ($generated@@377 ($generated@@8 ($generated@@318 $generated@@734))))
)))
(assert (forall (($generated@@735 T@U) ) (! (= ($generated@@377 ($generated@@320 $generated@@735)) ($generated@@320 ($generated@@377 $generated@@735)))
 :pattern ( ($generated@@377 ($generated@@320 $generated@@735)))
)))
(assert (forall (($generated@@736 T@U) ) (! (let (($generated@@737 ($generated@@327 (type $generated@@736))))
 (=> (and (= (type $generated@@736) ($generated@@326 $generated@@737)) (= ($generated@@360 $generated@@736) 0)) (= $generated@@736 ($generated@@359 $generated@@737))))
 :pattern ( ($generated@@360 $generated@@736))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ($generated@@740 T@U) ) (! (let (($generated@@741 (type $generated@@739)))
 (=> (and (and (= (type $generated@@738) ($generated@@79 $generated@@741 $generated@@2)) (= (type $generated@@740) $generated@@2)) (<= 0 ($generated $generated@@740))) (= ($generated@@363 ($generated@@85 $generated@@738 $generated@@739 $generated@@740)) (+ (- ($generated@@363 $generated@@738) ($generated ($generated@@84 $generated@@738 $generated@@739))) ($generated $generated@@740)))))
 :pattern ( ($generated@@363 ($generated@@85 $generated@@738 $generated@@739 $generated@@740)))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (= (type $generated@@742) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@743) $generated@@2)) ($generated@@77 $generated@@743 $generated@@46 $generated@@742))
 :pattern ( ($generated@@77 $generated@@743 $generated@@46 $generated@@742))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (= (type $generated@@744) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@745) $generated@@3)) ($generated@@77 $generated@@745 $generated@@47 $generated@@744))
 :pattern ( ($generated@@77 $generated@@745 $generated@@47 $generated@@744))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (= (type $generated@@746) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@747) $generated@@4)) ($generated@@77 $generated@@747 $generated@@44 $generated@@746))
 :pattern ( ($generated@@77 $generated@@747 $generated@@44 $generated@@746))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ) (!  (=> (and (= (type $generated@@748) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@749) $generated@@339)) ($generated@@77 $generated@@749 $generated@@45 $generated@@748))
 :pattern ( ($generated@@77 $generated@@749 $generated@@45 $generated@@748))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (= (type $generated@@750) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@751) $generated@@208)) ($generated@@77 $generated@@751 $generated@@48 $generated@@750))
 :pattern ( ($generated@@77 $generated@@751 $generated@@48 $generated@@750))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (= (type $generated@@752) ($generated@@326 $generated@@208)) (= (type $generated@@753) $generated@@67)) (= ($generated@@171 $generated@@752 ($generated@@325 $generated@@753)) (forall (($generated@@754 Int) ) (!  (=> (and (<= 0 $generated@@754) (< $generated@@754 ($generated@@360 $generated@@752))) ($generated@@299 ($generated@@431 $generated@@752 $generated@@754) $generated@@753))
 :pattern ( ($generated@@431 $generated@@752 $generated@@754))
))))
 :pattern ( ($generated@@171 $generated@@752 ($generated@@325 $generated@@753)))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 Int) ) (!  (=> (= (type $generated@@756) ($generated@@326 $generated@@208)) (=> (and (<= 0 $generated@@757) (< $generated@@757 ($generated@@360 $generated@@756))) (< ($generated@@644 ($generated@@486 $generated@@199 ($generated@@431 $generated@@756 $generated@@757))) ($generated@@755 $generated@@756))))
 :pattern ( ($generated@@644 ($generated@@486 $generated@@199 ($generated@@431 $generated@@756 $generated@@757))))
)))
(assert (forall (($generated@@758 T@U) ($generated@@759 T@U) ($generated@@760 T@U) ) (!  (=> (and (and (and (= (type $generated@@758) ($generated@@276 $generated@@208 $generated@@208)) (= (type $generated@@759) $generated@@67)) (= (type $generated@@760) $generated@@67)) ($generated@@171 $generated@@758 ($generated@@514 $generated@@759 $generated@@760))) (and (and ($generated@@171 ($generated@@277 $generated@@758) ($generated@@308 $generated@@759)) ($generated@@171 ($generated@@447 $generated@@758) ($generated@@308 $generated@@760))) ($generated@@171 ($generated@@485 $generated@@758) ($generated@@308 ($generated@@198 $generated@@759 $generated@@760)))))
 :pattern ( ($generated@@171 $generated@@758 ($generated@@514 $generated@@759 $generated@@760)))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ($generated@@763 T@U) ) (!  (=> (and (and (and (= (type $generated@@761) ($generated@@407 $generated@@208 $generated@@208)) (= (type $generated@@762) $generated@@67)) (= (type $generated@@763) $generated@@67)) ($generated@@171 $generated@@761 ($generated@@522 $generated@@762 $generated@@763))) (and (and ($generated@@171 ($generated@@405 $generated@@761) ($generated@@313 $generated@@762)) ($generated@@171 ($generated@@458 $generated@@761) ($generated@@313 $generated@@763))) ($generated@@171 ($generated@@496 $generated@@761) ($generated@@313 ($generated@@198 $generated@@762 $generated@@763)))))
 :pattern ( ($generated@@171 $generated@@761 ($generated@@522 $generated@@762 $generated@@763)))
)))
(assert (forall (($generated@@764 T@U) ) (!  (=> (= (type $generated@@764) $generated@@2) ($generated@@171 $generated@@764 $generated@@46))
 :pattern ( ($generated@@171 $generated@@764 $generated@@46))
)))
(assert (forall (($generated@@765 T@U) ) (!  (=> (= (type $generated@@765) $generated@@3) ($generated@@171 $generated@@765 $generated@@47))
 :pattern ( ($generated@@171 $generated@@765 $generated@@47))
)))
(assert (forall (($generated@@766 T@U) ) (!  (=> (= (type $generated@@766) $generated@@4) ($generated@@171 $generated@@766 $generated@@44))
 :pattern ( ($generated@@171 $generated@@766 $generated@@44))
)))
(assert (forall (($generated@@767 T@U) ) (!  (=> (= (type $generated@@767) $generated@@339) ($generated@@171 $generated@@767 $generated@@45))
 :pattern ( ($generated@@171 $generated@@767 $generated@@45))
)))
(assert (forall (($generated@@768 T@U) ) (!  (=> (= (type $generated@@768) $generated@@208) ($generated@@171 $generated@@768 $generated@@48))
 :pattern ( ($generated@@171 $generated@@768 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@769 () T@U)
(declare-fun $generated@@770 () T@U)
(declare-fun $generated@@771 () Int)
(declare-fun $generated@@772 () Int)
(declare-fun $generated@@773 () Int)
(declare-fun $generated@@774 () Int)
(declare-fun $generated@@775 () Int)
(declare-fun $generated@@776 () Int)
(declare-fun $generated@@777 () Int)
(declare-fun $generated@@778 () Int)
(declare-fun $generated@@779 () Int)
(declare-fun $generated@@780 () Int)
(declare-fun $generated@@781 () Int)
(declare-fun $generated@@782 () Int)
(declare-fun $generated@@783 () Int)
(declare-fun $generated@@784 () Int)
(declare-fun $generated@@785 () Int)
(declare-fun $generated@@786 () Int)
(declare-fun $generated@@787 () Int)
(declare-fun $generated@@788 () Int)
(declare-fun $generated@@789 () Int)
(declare-fun $generated@@790 () Int)
(declare-fun $generated@@791 () Int)
(declare-fun $generated@@792 () Int)
(declare-fun $generated@@793 () Int)
(declare-fun $generated@@794 () Int)
(declare-fun $generated@@795 () Int)
(declare-fun $generated@@796 () Int)
(declare-fun $generated@@797 () Int)
(declare-fun $generated@@798 () Int)
(declare-fun $generated@@799 () Int)
(declare-fun $generated@@800 () T@U)
(declare-fun $generated@@801 () Int)
(declare-fun $generated@@802 () Int)
(declare-fun $generated@@803 () Int)
(declare-fun $generated@@804 () Int)
(declare-fun $generated@@805 () Int)
(declare-fun $generated@@806 () Int)
(declare-fun $generated@@807 () Int)
(declare-fun $generated@@808 () Int)
(declare-fun $generated@@809 () T@U)
(declare-fun $generated@@810 () Int)
(declare-fun $generated@@811 () Int)
(declare-fun $generated@@812 () Int)
(declare-fun $generated@@813 () Int)
(declare-fun $generated@@814 () Int)
(declare-fun $generated@@815 () Int)
(declare-fun $generated@@816 () Int)
(declare-fun $generated@@817 () Int)
(declare-fun $generated@@818 () T@U)
(declare-fun $generated@@819 () Int)
(declare-fun $generated@@820 () Int)
(declare-fun $generated@@821 () Int)
(declare-fun $generated@@822 () Int)
(declare-fun $generated@@823 () Int)
(declare-fun $generated@@824 () Int)
(declare-fun $generated@@825 () Int)
(declare-fun $generated@@826 () Int)
(declare-fun $generated@@827 () T@U)
(declare-fun $generated@@828 () Int)
(declare-fun $generated@@829 () Int)
(declare-fun $generated@@830 () Int)
(declare-fun $generated@@831 () Int)
(declare-fun $generated@@832 () Int)
(declare-fun $generated@@833 () Int)
(declare-fun $generated@@834 () Int)
(declare-fun $generated@@835 () Int)
(declare-fun $generated@@836 () T@U)
(declare-fun $generated@@837 () T@U)
(declare-fun $generated@@838 (T@U) Bool)
(declare-fun $generated@@839 () Int)
(declare-fun $generated@@840 () Int)
(declare-fun $generated@@841 () Int)
(declare-fun $generated@@842 () Int)
(declare-fun $generated@@843 () Int)
(declare-fun $generated@@844 () Int)
(declare-fun $generated@@845 () Int)
(declare-fun $generated@@846 () Int)
(declare-fun $generated@@847 () T@U)
(declare-fun $generated@@848 () Int)
(declare-fun $generated@@849 () Int)
(declare-fun $generated@@850 () Int)
(declare-fun $generated@@851 () Int)
(declare-fun $generated@@852 () Int)
(declare-fun $generated@@853 () Int)
(declare-fun $generated@@854 () Int)
(declare-fun $generated@@855 () Int)
(declare-fun $generated@@856 () Int)
(declare-fun $generated@@857 () T@U)
(declare-fun $generated@@858 () Int)
(declare-fun $generated@@859 () Int)
(declare-fun $generated@@860 () Int)
(declare-fun $generated@@861 () T@U)
(declare-fun $generated@@862 () Int)
(declare-fun $generated@@863 () Int)
(declare-fun $generated@@864 () Int)
(declare-fun $generated@@865 () Int)
(declare-fun $generated@@866 () T@U)
(declare-fun $generated@@867 () Int)
(declare-fun $generated@@868 () Int)
(declare-fun $generated@@869 () Int)
(declare-fun $generated@@870 () Int)
(declare-fun $generated@@871 () T@U)
(declare-fun $generated@@872 () Int)
(declare-fun $generated@@873 () Int)
(declare-fun $generated@@874 () Int)
(declare-fun $generated@@875 () Int)
(declare-fun $generated@@876 () T@U)
(declare-fun $generated@@877 () Int)
(declare-fun $generated@@878 () Int)
(declare-fun $generated@@879 () Int)
(declare-fun $generated@@880 () Int)
(declare-fun $generated@@881 () T@U)
(declare-fun $generated@@882 () Int)
(declare-fun $generated@@883 () Int)
(declare-fun $generated@@884 () Int)
(declare-fun $generated@@885 () Int)
(declare-fun $generated@@886 () T@U)
(declare-fun $generated@@887 () Int)
(declare-fun $generated@@888 () Int)
(declare-fun $generated@@889 () Int)
(declare-fun $generated@@890 () Int)
(declare-fun $generated@@891 () T@U)
(declare-fun $generated@@892 () Int)
(declare-fun $generated@@893 () Int)
(declare-fun $generated@@894 () Int)
(declare-fun $generated@@895 () Int)
(declare-fun $generated@@896 () T@U)
(declare-fun $generated@@897 () Int)
(declare-fun $generated@@898 () Int)
(declare-fun $generated@@899 () Int)
(declare-fun $generated@@900 () Int)
(declare-fun $generated@@901 () Int)
(declare-fun $generated@@902 () Int)
(declare-fun $generated@@903 () Int)
(declare-fun $generated@@904 () Int)
(declare-fun $generated@@905 () Int)
(declare-fun $generated@@906 () T@U)
(declare-fun $generated@@907 () T@U)
(declare-fun $generated@@908 () T@U)
(declare-fun $generated@@909 () T@U)
(declare-fun $generated@@910 () T@U)
(declare-fun $generated@@911 () T@U)
(declare-fun $generated@@912 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@769) ($generated@@220 $generated@@80 $generated@@4)) (= (type $generated@@770) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@800) ($generated@@79 $generated@@208 $generated@@4))) (= (type $generated@@809) ($generated@@79 $generated@@208 $generated@@2))) (= (type $generated@@818) ($generated@@326 $generated@@208))) (= (type $generated@@827) ($generated@@276 $generated@@208 $generated@@208))) (= (type $generated@@836) $generated@@80)) (= (type $generated@@837) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@847) $generated@@339)) (= (type $generated@@857) $generated@@339)) (= (type $generated@@861) $generated@@339)) (= (type $generated@@866) $generated@@339)) (= (type $generated@@871) $generated@@339)) (= (type $generated@@876) $generated@@339)) (= (type $generated@@881) $generated@@339)) (= (type $generated@@886) $generated@@339)) (= (type $generated@@891) $generated@@339)) (= (type $generated@@896) $generated@@339)) (= (type $generated@@906) ($generated@@79 $generated@@208 $generated@@4))) (= (type $generated@@907) ($generated@@79 $generated@@208 $generated@@2))) (= (type $generated@@908) ($generated@@326 $generated@@208))) (= (type $generated@@909) ($generated@@276 $generated@@208 $generated@@208))) (= (type $generated@@910) $generated@@80)) (= (type $generated@@911) $generated@@339)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 189) (let (($generated@@913  (=> (and (= $generated@@769 ($generated@@219 $generated@@169 $generated@@770 $generated@@60 false)) (= $generated@@771 ($generated@@318 0))) (and (=> (= (ControlFlow 0 2) (- 0 188)) (and (<= ($generated@@318 (- 0 128)) $generated@@771) (< $generated@@771 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@771) (< $generated@@771 128)) (and (=> (= (ControlFlow 0 2) (- 0 187)) (and (<= ($generated@@318 (- 0 32768)) $generated@@771) (< $generated@@771 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@771) (< $generated@@771 32768)) (and (=> (= (ControlFlow 0 2) (- 0 186)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@771) (< $generated@@771 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@771) (< $generated@@771 2147483648)) (and (=> (= (ControlFlow 0 2) (- 0 185)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@771) (< $generated@@771 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@771) (< $generated@@771 9223372036854775808)) (and (=> (= (ControlFlow 0 2) (- 0 184)) (and (<= ($generated@@318 0) $generated@@771) (< $generated@@771 256))) (=> (and (<= ($generated@@318 0) $generated@@771) (< $generated@@771 256)) (and (=> (= (ControlFlow 0 2) (- 0 183)) (and (<= ($generated@@318 0) $generated@@771) (< $generated@@771 65536))) (=> (and (<= ($generated@@318 0) $generated@@771) (< $generated@@771 65536)) (and (=> (= (ControlFlow 0 2) (- 0 182)) (and (<= ($generated@@318 0) $generated@@771) (< $generated@@771 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@771) (< $generated@@771 4294967296)) (and (=> (= (ControlFlow 0 2) (- 0 181)) (and (<= ($generated@@318 0) $generated@@771) (< $generated@@771 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@771) (< $generated@@771 18446744073709551616)) (=> (= $generated@@772 ($generated@@318 1)) (and (=> (= (ControlFlow 0 2) (- 0 180)) (and (<= ($generated@@318 (- 0 128)) $generated@@772) (< $generated@@772 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@772) (< $generated@@772 128)) (=> (= $generated@@773 ($generated@@318 1)) (and (=> (= (ControlFlow 0 2) (- 0 179)) (and (<= ($generated@@318 (- 0 128)) $generated@@773) (< $generated@@773 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@773) (< $generated@@773 128)) (and (=> (= (ControlFlow 0 2) (- 0 178)) (and (<= ($generated@@318 (- 0 32768)) $generated@@773) (< $generated@@773 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@773) (< $generated@@773 32768)) (and (=> (= (ControlFlow 0 2) (- 0 177)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@773) (< $generated@@773 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@773) (< $generated@@773 2147483648)) (and (=> (= (ControlFlow 0 2) (- 0 176)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@773) (< $generated@@773 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@773) (< $generated@@773 9223372036854775808)) (and (=> (= (ControlFlow 0 2) (- 0 175)) (and (<= ($generated@@318 0) $generated@@773) (< $generated@@773 256))) (=> (and (<= ($generated@@318 0) $generated@@773) (< $generated@@773 256)) (and (=> (= (ControlFlow 0 2) (- 0 174)) (and (<= ($generated@@318 0) $generated@@773) (< $generated@@773 65536))) (=> (and (<= ($generated@@318 0) $generated@@773) (< $generated@@773 65536)) (and (=> (= (ControlFlow 0 2) (- 0 173)) (and (<= ($generated@@318 0) $generated@@773) (< $generated@@773 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@773) (< $generated@@773 4294967296)) (and (=> (= (ControlFlow 0 2) (- 0 172)) (and (<= ($generated@@318 0) $generated@@773) (< $generated@@773 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@773) (< $generated@@773 18446744073709551616)) (=> (= $generated@@774 ($generated@@318 2)) (and (=> (= (ControlFlow 0 2) (- 0 171)) (and (<= ($generated@@318 (- 0 32768)) $generated@@774) (< $generated@@774 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@774) (< $generated@@774 32768)) (=> (= $generated@@775 ($generated@@318 2)) (and (=> (= (ControlFlow 0 2) (- 0 170)) (and (<= ($generated@@318 (- 0 128)) $generated@@775) (< $generated@@775 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@775) (< $generated@@775 128)) (and (=> (= (ControlFlow 0 2) (- 0 169)) (and (<= ($generated@@318 (- 0 32768)) $generated@@775) (< $generated@@775 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@775) (< $generated@@775 32768)) (and (=> (= (ControlFlow 0 2) (- 0 168)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@775) (< $generated@@775 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@775) (< $generated@@775 2147483648)) (and (=> (= (ControlFlow 0 2) (- 0 167)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@775) (< $generated@@775 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@775) (< $generated@@775 9223372036854775808)) (and (=> (= (ControlFlow 0 2) (- 0 166)) (and (<= ($generated@@318 0) $generated@@775) (< $generated@@775 256))) (=> (and (<= ($generated@@318 0) $generated@@775) (< $generated@@775 256)) (and (=> (= (ControlFlow 0 2) (- 0 165)) (and (<= ($generated@@318 0) $generated@@775) (< $generated@@775 65536))) (=> (and (<= ($generated@@318 0) $generated@@775) (< $generated@@775 65536)) (and (=> (= (ControlFlow 0 2) (- 0 164)) (and (<= ($generated@@318 0) $generated@@775) (< $generated@@775 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@775) (< $generated@@775 4294967296)) (and (=> (= (ControlFlow 0 2) (- 0 163)) (and (<= ($generated@@318 0) $generated@@775) (< $generated@@775 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@775) (< $generated@@775 18446744073709551616)) (=> (= $generated@@776 ($generated@@318 3)) (and (=> (= (ControlFlow 0 2) (- 0 162)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@776) (< $generated@@776 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@776) (< $generated@@776 2147483648)) (=> (= $generated@@777 ($generated@@318 3)) (and (=> (= (ControlFlow 0 2) (- 0 161)) (and (<= ($generated@@318 (- 0 128)) $generated@@777) (< $generated@@777 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@777) (< $generated@@777 128)) (and (=> (= (ControlFlow 0 2) (- 0 160)) (and (<= ($generated@@318 (- 0 32768)) $generated@@777) (< $generated@@777 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@777) (< $generated@@777 32768)) (and (=> (= (ControlFlow 0 2) (- 0 159)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@777) (< $generated@@777 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@777) (< $generated@@777 2147483648)) (and (=> (= (ControlFlow 0 2) (- 0 158)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@777) (< $generated@@777 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@777) (< $generated@@777 9223372036854775808)) (and (=> (= (ControlFlow 0 2) (- 0 157)) (and (<= ($generated@@318 0) $generated@@777) (< $generated@@777 256))) (=> (and (<= ($generated@@318 0) $generated@@777) (< $generated@@777 256)) (and (=> (= (ControlFlow 0 2) (- 0 156)) (and (<= ($generated@@318 0) $generated@@777) (< $generated@@777 65536))) (=> (and (<= ($generated@@318 0) $generated@@777) (< $generated@@777 65536)) (and (=> (= (ControlFlow 0 2) (- 0 155)) (and (<= ($generated@@318 0) $generated@@777) (< $generated@@777 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@777) (< $generated@@777 4294967296)) (and (=> (= (ControlFlow 0 2) (- 0 154)) (and (<= ($generated@@318 0) $generated@@777) (< $generated@@777 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@777) (< $generated@@777 18446744073709551616)) (=> (= $generated@@778 ($generated@@318 4)) (and (=> (= (ControlFlow 0 2) (- 0 153)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@778) (< $generated@@778 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@778) (< $generated@@778 9223372036854775808)) (=> (= $generated@@779 ($generated@@318 4)) (and (=> (= (ControlFlow 0 2) (- 0 152)) (and (<= ($generated@@318 (- 0 128)) $generated@@779) (< $generated@@779 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@779) (< $generated@@779 128)) (and (=> (= (ControlFlow 0 2) (- 0 151)) (and (<= ($generated@@318 (- 0 32768)) $generated@@779) (< $generated@@779 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@779) (< $generated@@779 32768)) (and (=> (= (ControlFlow 0 2) (- 0 150)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@779) (< $generated@@779 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@779) (< $generated@@779 2147483648)) (and (=> (= (ControlFlow 0 2) (- 0 149)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@779) (< $generated@@779 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@779) (< $generated@@779 9223372036854775808)) (and (=> (= (ControlFlow 0 2) (- 0 148)) (and (<= ($generated@@318 0) $generated@@779) (< $generated@@779 256))) (=> (and (<= ($generated@@318 0) $generated@@779) (< $generated@@779 256)) (and (=> (= (ControlFlow 0 2) (- 0 147)) (and (<= ($generated@@318 0) $generated@@779) (< $generated@@779 65536))) (=> (and (<= ($generated@@318 0) $generated@@779) (< $generated@@779 65536)) (and (=> (= (ControlFlow 0 2) (- 0 146)) (and (<= ($generated@@318 0) $generated@@779) (< $generated@@779 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@779) (< $generated@@779 4294967296)) (and (=> (= (ControlFlow 0 2) (- 0 145)) (and (<= ($generated@@318 0) $generated@@779) (< $generated@@779 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@779) (< $generated@@779 18446744073709551616)) (=> (= $generated@@780 ($generated@@318 5)) (and (=> (= (ControlFlow 0 2) (- 0 144)) (and (<= ($generated@@318 0) $generated@@780) (< $generated@@780 256))) (=> (and (<= ($generated@@318 0) $generated@@780) (< $generated@@780 256)) (=> (= $generated@@781 ($generated@@318 5)) (and (=> (= (ControlFlow 0 2) (- 0 143)) (and (<= ($generated@@318 (- 0 128)) $generated@@781) (< $generated@@781 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@781) (< $generated@@781 128)) (and (=> (= (ControlFlow 0 2) (- 0 142)) (and (<= ($generated@@318 (- 0 32768)) $generated@@781) (< $generated@@781 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@781) (< $generated@@781 32768)) (and (=> (= (ControlFlow 0 2) (- 0 141)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@781) (< $generated@@781 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@781) (< $generated@@781 2147483648)) (and (=> (= (ControlFlow 0 2) (- 0 140)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@781) (< $generated@@781 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@781) (< $generated@@781 9223372036854775808)) (and (=> (= (ControlFlow 0 2) (- 0 139)) (and (<= ($generated@@318 0) $generated@@781) (< $generated@@781 256))) (=> (and (<= ($generated@@318 0) $generated@@781) (< $generated@@781 256)) (and (=> (= (ControlFlow 0 2) (- 0 138)) (and (<= ($generated@@318 0) $generated@@781) (< $generated@@781 65536))) (=> (and (<= ($generated@@318 0) $generated@@781) (< $generated@@781 65536)) (and (=> (= (ControlFlow 0 2) (- 0 137)) (and (<= ($generated@@318 0) $generated@@781) (< $generated@@781 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@781) (< $generated@@781 4294967296)) (and (=> (= (ControlFlow 0 2) (- 0 136)) (and (<= ($generated@@318 0) $generated@@781) (< $generated@@781 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@781) (< $generated@@781 18446744073709551616)) (=> (= $generated@@782 ($generated@@318 6)) (and (=> (= (ControlFlow 0 2) (- 0 135)) (and (<= ($generated@@318 0) $generated@@782) (< $generated@@782 65536))) (=> (and (<= ($generated@@318 0) $generated@@782) (< $generated@@782 65536)) (=> (= $generated@@783 ($generated@@318 6)) (and (=> (= (ControlFlow 0 2) (- 0 134)) (and (<= ($generated@@318 (- 0 128)) $generated@@783) (< $generated@@783 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@783) (< $generated@@783 128)) (and (=> (= (ControlFlow 0 2) (- 0 133)) (and (<= ($generated@@318 (- 0 32768)) $generated@@783) (< $generated@@783 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@783) (< $generated@@783 32768)) (and (=> (= (ControlFlow 0 2) (- 0 132)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@783) (< $generated@@783 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@783) (< $generated@@783 2147483648)) (and (=> (= (ControlFlow 0 2) (- 0 131)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@783) (< $generated@@783 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@783) (< $generated@@783 9223372036854775808)) (and (=> (= (ControlFlow 0 2) (- 0 130)) (and (<= ($generated@@318 0) $generated@@783) (< $generated@@783 256))) (=> (and (<= ($generated@@318 0) $generated@@783) (< $generated@@783 256)) (and (=> (= (ControlFlow 0 2) (- 0 129)) (and (<= ($generated@@318 0) $generated@@783) (< $generated@@783 65536))) (=> (and (<= ($generated@@318 0) $generated@@783) (< $generated@@783 65536)) (and (=> (= (ControlFlow 0 2) (- 0 128)) (and (<= ($generated@@318 0) $generated@@783) (< $generated@@783 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@783) (< $generated@@783 4294967296)) (and (=> (= (ControlFlow 0 2) (- 0 127)) (and (<= ($generated@@318 0) $generated@@783) (< $generated@@783 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@783) (< $generated@@783 18446744073709551616)) (=> (= $generated@@784 ($generated@@318 7)) (and (=> (= (ControlFlow 0 2) (- 0 126)) (and (<= ($generated@@318 0) $generated@@784) (< $generated@@784 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@784) (< $generated@@784 4294967296)) (=> (= $generated@@785 ($generated@@318 7)) (and (=> (= (ControlFlow 0 2) (- 0 125)) (and (<= ($generated@@318 (- 0 128)) $generated@@785) (< $generated@@785 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@785) (< $generated@@785 128)) (and (=> (= (ControlFlow 0 2) (- 0 124)) (and (<= ($generated@@318 (- 0 32768)) $generated@@785) (< $generated@@785 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@785) (< $generated@@785 32768)) (and (=> (= (ControlFlow 0 2) (- 0 123)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@785) (< $generated@@785 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@785) (< $generated@@785 2147483648)) (and (=> (= (ControlFlow 0 2) (- 0 122)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@785) (< $generated@@785 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@785) (< $generated@@785 9223372036854775808)) (and (=> (= (ControlFlow 0 2) (- 0 121)) (and (<= ($generated@@318 0) $generated@@785) (< $generated@@785 256))) (=> (and (<= ($generated@@318 0) $generated@@785) (< $generated@@785 256)) (and (=> (= (ControlFlow 0 2) (- 0 120)) (and (<= ($generated@@318 0) $generated@@785) (< $generated@@785 65536))) (=> (and (<= ($generated@@318 0) $generated@@785) (< $generated@@785 65536)) (and (=> (= (ControlFlow 0 2) (- 0 119)) (and (<= ($generated@@318 0) $generated@@785) (< $generated@@785 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@785) (< $generated@@785 4294967296)) (and (=> (= (ControlFlow 0 2) (- 0 118)) (and (<= ($generated@@318 0) $generated@@785) (< $generated@@785 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@785) (< $generated@@785 18446744073709551616)) (=> (= $generated@@786 ($generated@@318 8)) (and (=> (= (ControlFlow 0 2) (- 0 117)) (and (<= ($generated@@318 0) $generated@@786) (< $generated@@786 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@786) (< $generated@@786 18446744073709551616)) (=> (= $generated@@787 ($generated@@318 8)) (and (=> (= (ControlFlow 0 2) (- 0 116)) (and (<= ($generated@@318 (- 0 128)) $generated@@787) (< $generated@@787 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@787) (< $generated@@787 128)) (and (=> (= (ControlFlow 0 2) (- 0 115)) (and (<= ($generated@@318 (- 0 32768)) $generated@@787) (< $generated@@787 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@787) (< $generated@@787 32768)) (and (=> (= (ControlFlow 0 2) (- 0 114)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@787) (< $generated@@787 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@787) (< $generated@@787 2147483648)) (and (=> (= (ControlFlow 0 2) (- 0 113)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@787) (< $generated@@787 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@787) (< $generated@@787 9223372036854775808)) (and (=> (= (ControlFlow 0 2) (- 0 112)) (and (<= ($generated@@318 0) $generated@@787) (< $generated@@787 256))) (=> (and (<= ($generated@@318 0) $generated@@787) (< $generated@@787 256)) (and (=> (= (ControlFlow 0 2) (- 0 111)) (and (<= ($generated@@318 0) $generated@@787) (< $generated@@787 65536))) (=> (and (<= ($generated@@318 0) $generated@@787) (< $generated@@787 65536)) (and (=> (= (ControlFlow 0 2) (- 0 110)) (and (<= ($generated@@318 0) $generated@@787) (< $generated@@787 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@787) (< $generated@@787 4294967296)) (and (=> (= (ControlFlow 0 2) (- 0 109)) (and (<= ($generated@@318 0) $generated@@787) (< $generated@@787 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@787) (< $generated@@787 18446744073709551616)) (=> (= $generated@@788 ($generated@@318 255)) (and (=> (= (ControlFlow 0 2) (- 0 108)) (and (<= ($generated@@318 0) $generated@@788) (< $generated@@788 256))) (=> (and (<= ($generated@@318 0) $generated@@788) (< $generated@@788 256)) (=> (= $generated@@789 ($generated@@318 255)) (and (=> (= (ControlFlow 0 2) (- 0 107)) (and (<= ($generated@@318 (- 0 32768)) $generated@@789) (< $generated@@789 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@789) (< $generated@@789 32768)) (and (=> (= (ControlFlow 0 2) (- 0 106)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@789) (< $generated@@789 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@789) (< $generated@@789 2147483648)) (and (=> (= (ControlFlow 0 2) (- 0 105)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@789) (< $generated@@789 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@789) (< $generated@@789 9223372036854775808)) (and (=> (= (ControlFlow 0 2) (- 0 104)) (and (<= ($generated@@318 0) $generated@@789) (< $generated@@789 256))) (=> (and (<= ($generated@@318 0) $generated@@789) (< $generated@@789 256)) (and (=> (= (ControlFlow 0 2) (- 0 103)) (and (<= ($generated@@318 0) $generated@@789) (< $generated@@789 65536))) (=> (and (<= ($generated@@318 0) $generated@@789) (< $generated@@789 65536)) (and (=> (= (ControlFlow 0 2) (- 0 102)) (and (<= ($generated@@318 0) $generated@@789) (< $generated@@789 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@789) (< $generated@@789 4294967296)) (and (=> (= (ControlFlow 0 2) (- 0 101)) (and (<= ($generated@@318 0) $generated@@789) (< $generated@@789 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@789) (< $generated@@789 18446744073709551616)) (=> (= $generated@@790 ($generated@@318 65535)) (and (=> (= (ControlFlow 0 2) (- 0 100)) (and (<= ($generated@@318 0) $generated@@790) (< $generated@@790 65536))) (=> (and (<= ($generated@@318 0) $generated@@790) (< $generated@@790 65536)) (=> (= $generated@@791 ($generated@@318 65535)) (and (=> (= (ControlFlow 0 2) (- 0 99)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@791) (< $generated@@791 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@791) (< $generated@@791 2147483648)) (and (=> (= (ControlFlow 0 2) (- 0 98)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@791) (< $generated@@791 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@791) (< $generated@@791 9223372036854775808)) (and (=> (= (ControlFlow 0 2) (- 0 97)) (and (<= ($generated@@318 0) $generated@@791) (< $generated@@791 65536))) (=> (and (<= ($generated@@318 0) $generated@@791) (< $generated@@791 65536)) (and (=> (= (ControlFlow 0 2) (- 0 96)) (and (<= ($generated@@318 0) $generated@@791) (< $generated@@791 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@791) (< $generated@@791 4294967296)) (and (=> (= (ControlFlow 0 2) (- 0 95)) (and (<= ($generated@@318 0) $generated@@791) (< $generated@@791 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@791) (< $generated@@791 18446744073709551616)) (=> (= $generated@@792 ($generated@@318 4294967295)) (and (=> (= (ControlFlow 0 2) (- 0 94)) (and (<= ($generated@@318 0) $generated@@792) (< $generated@@792 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@792) (< $generated@@792 4294967296)) (=> (= $generated@@793 ($generated@@318 4294967295)) (and (=> (= (ControlFlow 0 2) (- 0 93)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@793) (< $generated@@793 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@793) (< $generated@@793 9223372036854775808)) (and (=> (= (ControlFlow 0 2) (- 0 92)) (and (<= ($generated@@318 0) $generated@@793) (< $generated@@793 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@793) (< $generated@@793 4294967296)) (and (=> (= (ControlFlow 0 2) (- 0 91)) (and (<= ($generated@@318 0) $generated@@793) (< $generated@@793 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@793) (< $generated@@793 18446744073709551616)) (=> (= $generated@@794 ($generated@@318 18446744073709551615)) (and (=> (= (ControlFlow 0 2) (- 0 90)) (and (<= ($generated@@318 0) $generated@@794) (< $generated@@794 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@794) (< $generated@@794 18446744073709551616)) (=> (= $generated@@795 ($generated@@318 18446744073709551615)) (and (=> (= (ControlFlow 0 2) (- 0 89)) (and (<= ($generated@@318 0) $generated@@795) (< $generated@@795 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@795) (< $generated@@795 18446744073709551616)) (=> (= $generated@@796 ($generated@@318 255)) (and (=> (= (ControlFlow 0 2) (- 0 88)) (and (<= ($generated@@318 0) $generated@@796) (< $generated@@796 256))) (=> (and (<= ($generated@@318 0) $generated@@796) (< $generated@@796 256)) (=> (= $generated@@797 ($generated@@318 65535)) (and (=> (= (ControlFlow 0 2) (- 0 87)) (and (<= ($generated@@318 0) $generated@@797) (< $generated@@797 65536))) (=> (and (<= ($generated@@318 0) $generated@@797) (< $generated@@797 65536)) (=> (= $generated@@798 ($generated@@318 4294967295)) (and (=> (= (ControlFlow 0 2) (- 0 86)) (and (<= ($generated@@318 0) $generated@@798) (< $generated@@798 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@798) (< $generated@@798 4294967296)) (=> (= $generated@@799 ($generated@@318 18446744073709551615)) (and (=> (= (ControlFlow 0 2) (- 0 85)) (and (<= ($generated@@318 0) $generated@@799) (< $generated@@799 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@799) (< $generated@@799 18446744073709551616)) (=> (and (= $generated@@800 ($generated@@320 ($generated@@664 $generated@@208))) (= $generated@@801 ($generated@@561 $generated@@800))) (and (=> (= (ControlFlow 0 2) (- 0 84)) (and (<= ($generated@@318 (- 0 128)) $generated@@801) (< $generated@@801 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@801) (< $generated@@801 128)) (=> (= $generated@@802 ($generated@@561 $generated@@800)) (and (=> (= (ControlFlow 0 2) (- 0 83)) (and (<= ($generated@@318 (- 0 32768)) $generated@@802) (< $generated@@802 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@802) (< $generated@@802 32768)) (=> (= $generated@@803 ($generated@@561 $generated@@800)) (and (=> (= (ControlFlow 0 2) (- 0 82)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@803) (< $generated@@803 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@803) (< $generated@@803 2147483648)) (=> (= $generated@@804 ($generated@@561 $generated@@800)) (and (=> (= (ControlFlow 0 2) (- 0 81)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@804) (< $generated@@804 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@804) (< $generated@@804 9223372036854775808)) (=> (= $generated@@805 ($generated@@561 $generated@@800)) (and (=> (= (ControlFlow 0 2) (- 0 80)) (and (<= ($generated@@318 0) $generated@@805) (< $generated@@805 256))) (=> (and (<= ($generated@@318 0) $generated@@805) (< $generated@@805 256)) (=> (= $generated@@806 ($generated@@561 $generated@@800)) (and (=> (= (ControlFlow 0 2) (- 0 79)) (and (<= ($generated@@318 0) $generated@@806) (< $generated@@806 65536))) (=> (and (<= ($generated@@318 0) $generated@@806) (< $generated@@806 65536)) (=> (= $generated@@807 ($generated@@561 $generated@@800)) (and (=> (= (ControlFlow 0 2) (- 0 78)) (and (<= ($generated@@318 0) $generated@@807) (< $generated@@807 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@807) (< $generated@@807 4294967296)) (=> (= $generated@@808 ($generated@@561 $generated@@800)) (and (=> (= (ControlFlow 0 2) (- 0 77)) (and (<= ($generated@@318 0) $generated@@808) (< $generated@@808 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@808) (< $generated@@808 18446744073709551616)) (=> (and (= $generated@@809 ($generated@@320 ($generated@@364 ($generated@@390 $generated@@208) ($generated@@377 ($generated@@8 ($generated@@318 1)))))) (= $generated@@810 ($generated@@363 $generated@@809))) (and (=> (= (ControlFlow 0 2) (- 0 76)) (and (<= ($generated@@318 (- 0 128)) $generated@@810) (< $generated@@810 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@810) (< $generated@@810 128)) (=> (= $generated@@811 ($generated@@363 $generated@@809)) (and (=> (= (ControlFlow 0 2) (- 0 75)) (and (<= ($generated@@318 (- 0 32768)) $generated@@811) (< $generated@@811 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@811) (< $generated@@811 32768)) (=> (= $generated@@812 ($generated@@363 $generated@@809)) (and (=> (= (ControlFlow 0 2) (- 0 74)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@812) (< $generated@@812 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@812) (< $generated@@812 2147483648)) (=> (= $generated@@813 ($generated@@363 $generated@@809)) (and (=> (= (ControlFlow 0 2) (- 0 73)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@813) (< $generated@@813 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@813) (< $generated@@813 9223372036854775808)) (=> (= $generated@@814 ($generated@@363 $generated@@809)) (and (=> (= (ControlFlow 0 2) (- 0 72)) (and (<= ($generated@@318 0) $generated@@814) (< $generated@@814 256))) (=> (and (<= ($generated@@318 0) $generated@@814) (< $generated@@814 256)) (=> (= $generated@@815 ($generated@@363 $generated@@809)) (and (=> (= (ControlFlow 0 2) (- 0 71)) (and (<= ($generated@@318 0) $generated@@815) (< $generated@@815 65536))) (=> (and (<= ($generated@@318 0) $generated@@815) (< $generated@@815 65536)) (=> (= $generated@@816 ($generated@@363 $generated@@809)) (and (=> (= (ControlFlow 0 2) (- 0 70)) (and (<= ($generated@@318 0) $generated@@816) (< $generated@@816 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@816) (< $generated@@816 4294967296)) (=> (= $generated@@817 ($generated@@363 $generated@@809)) (and (=> (= (ControlFlow 0 2) (- 0 69)) (and (<= ($generated@@318 0) $generated@@817) (< $generated@@817 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@817) (< $generated@@817 18446744073709551616)) (=> (and (= $generated@@818 ($generated@@320 ($generated@@324 ($generated@@324 ($generated@@359 $generated@@208) ($generated@@377 ($generated@@8 ($generated@@318 1)))) ($generated@@377 ($generated@@8 ($generated@@318 2)))))) (= $generated@@819 ($generated@@360 $generated@@818))) (and (=> (= (ControlFlow 0 2) (- 0 68)) (and (<= ($generated@@318 (- 0 128)) $generated@@819) (< $generated@@819 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@819) (< $generated@@819 128)) (=> (= $generated@@820 ($generated@@360 $generated@@818)) (and (=> (= (ControlFlow 0 2) (- 0 67)) (and (<= ($generated@@318 (- 0 32768)) $generated@@820) (< $generated@@820 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@820) (< $generated@@820 32768)) (=> (= $generated@@821 ($generated@@360 $generated@@818)) (and (=> (= (ControlFlow 0 2) (- 0 66)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@821) (< $generated@@821 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@821) (< $generated@@821 2147483648)) (=> (= $generated@@822 ($generated@@360 $generated@@818)) (and (=> (= (ControlFlow 0 2) (- 0 65)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@822) (< $generated@@822 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@822) (< $generated@@822 9223372036854775808)) (=> (= $generated@@823 ($generated@@360 $generated@@818)) (and (=> (= (ControlFlow 0 2) (- 0 64)) (and (<= ($generated@@318 0) $generated@@823) (< $generated@@823 256))) (=> (and (<= ($generated@@318 0) $generated@@823) (< $generated@@823 256)) (=> (= $generated@@824 ($generated@@360 $generated@@818)) (and (=> (= (ControlFlow 0 2) (- 0 63)) (and (<= ($generated@@318 0) $generated@@824) (< $generated@@824 65536))) (=> (and (<= ($generated@@318 0) $generated@@824) (< $generated@@824 65536)) (=> (= $generated@@825 ($generated@@360 $generated@@818)) (and (=> (= (ControlFlow 0 2) (- 0 62)) (and (<= ($generated@@318 0) $generated@@825) (< $generated@@825 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@825) (< $generated@@825 4294967296)) (=> (= $generated@@826 ($generated@@360 $generated@@818)) (and (=> (= (ControlFlow 0 2) (- 0 61)) (and (<= ($generated@@318 0) $generated@@826) (< $generated@@826 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@826) (< $generated@@826 18446744073709551616)) (=> (and (= $generated@@827 ($generated@@320 ($generated@@275 ($generated@@275 ($generated@@275 ($generated@@399 $generated@@208 $generated@@208) ($generated@@377 ($generated@@8 ($generated@@318 1))) ($generated@@377 ($generated@@320 ($generated@@324 ($generated@@324 ($generated@@324 ($generated@@359 $generated@@208) ($generated@@377 ($generated@@337 111))) ($generated@@377 ($generated@@337 110))) ($generated@@377 ($generated@@337 101)))))) ($generated@@377 ($generated@@8 ($generated@@318 2))) ($generated@@377 ($generated@@320 ($generated@@324 ($generated@@324 ($generated@@324 ($generated@@359 $generated@@208) ($generated@@377 ($generated@@337 116))) ($generated@@377 ($generated@@337 119))) ($generated@@377 ($generated@@337 111)))))) ($generated@@377 ($generated@@8 ($generated@@318 3))) ($generated@@377 ($generated@@320 ($generated@@324 ($generated@@324 ($generated@@324 ($generated@@324 ($generated@@324 ($generated@@359 $generated@@208) ($generated@@377 ($generated@@337 116))) ($generated@@377 ($generated@@337 104))) ($generated@@377 ($generated@@337 114))) ($generated@@377 ($generated@@337 101))) ($generated@@377 ($generated@@337 101)))))))) (= $generated@@828 ($generated@@274 $generated@@827))) (and (=> (= (ControlFlow 0 2) (- 0 60)) (and (<= ($generated@@318 (- 0 128)) $generated@@828) (< $generated@@828 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@828) (< $generated@@828 128)) (=> (= $generated@@829 ($generated@@274 $generated@@827)) (and (=> (= (ControlFlow 0 2) (- 0 59)) (and (<= ($generated@@318 (- 0 32768)) $generated@@829) (< $generated@@829 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@829) (< $generated@@829 32768)) (=> (= $generated@@830 ($generated@@274 $generated@@827)) (and (=> (= (ControlFlow 0 2) (- 0 58)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@830) (< $generated@@830 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@830) (< $generated@@830 2147483648)) (=> (= $generated@@831 ($generated@@274 $generated@@827)) (and (=> (= (ControlFlow 0 2) (- 0 57)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@831) (< $generated@@831 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@831) (< $generated@@831 9223372036854775808)) (=> (= $generated@@832 ($generated@@274 $generated@@827)) (and (=> (= (ControlFlow 0 2) (- 0 56)) (and (<= ($generated@@318 0) $generated@@832) (< $generated@@832 256))) (=> (and (<= ($generated@@318 0) $generated@@832) (< $generated@@832 256)) (=> (= $generated@@833 ($generated@@274 $generated@@827)) (and (=> (= (ControlFlow 0 2) (- 0 55)) (and (<= ($generated@@318 0) $generated@@833) (< $generated@@833 65536))) (=> (and (<= ($generated@@318 0) $generated@@833) (< $generated@@833 65536)) (=> (= $generated@@834 ($generated@@274 $generated@@827)) (and (=> (= (ControlFlow 0 2) (- 0 54)) (and (<= ($generated@@318 0) $generated@@834) (< $generated@@834 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@834) (< $generated@@834 4294967296)) (=> (= $generated@@835 ($generated@@274 $generated@@827)) (and (=> (= (ControlFlow 0 2) (- 0 53)) (and (<= ($generated@@318 0) $generated@@835) (< $generated@@835 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@835) (< $generated@@835 18446744073709551616)) (and (=> (= (ControlFlow 0 2) (- 0 52)) (<= 0 ($generated@@318 4))) (=> (<= 0 ($generated@@318 4)) (=> (and (and (and (not (= $generated@@836 $generated@@169)) (= ($generated@@170 $generated@@836) ($generated@@168 $generated@@46))) (not ($generated@@0 ($generated@@86 ($generated@@84 $generated@@770 $generated@@836) $generated@@60)))) (and (and (= ($generated@@167 $generated@@836) ($generated@@318 4)) (= $generated@@837 ($generated@@85 $generated@@770 $generated@@836 ($generated@@87 ($generated@@84 $generated@@770 $generated@@836) $generated@@60 ($generated@@11 true))))) (and ($generated@@183 $generated@@837) ($generated@@838 $generated@@837)))) (and (=> (= (ControlFlow 0 2) (- 0 51)) (not (= $generated@@836 $generated@@169))) (and (=> (= (ControlFlow 0 2) (- 0 50)) (not (= $generated@@836 $generated@@169))) (=> (= $generated@@839 ($generated@@167 $generated@@836)) (and (=> (= (ControlFlow 0 2) (- 0 49)) (and (<= ($generated@@318 (- 0 128)) $generated@@839) (< $generated@@839 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@839) (< $generated@@839 128)) (and (=> (= (ControlFlow 0 2) (- 0 48)) (not (= $generated@@836 $generated@@169))) (=> (= $generated@@840 ($generated@@167 $generated@@836)) (and (=> (= (ControlFlow 0 2) (- 0 47)) (and (<= ($generated@@318 (- 0 32768)) $generated@@840) (< $generated@@840 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@840) (< $generated@@840 32768)) (and (=> (= (ControlFlow 0 2) (- 0 46)) (not (= $generated@@836 $generated@@169))) (=> (= $generated@@841 ($generated@@167 $generated@@836)) (and (=> (= (ControlFlow 0 2) (- 0 45)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@841) (< $generated@@841 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@841) (< $generated@@841 2147483648)) (and (=> (= (ControlFlow 0 2) (- 0 44)) (not (= $generated@@836 $generated@@169))) (=> (= $generated@@842 ($generated@@167 $generated@@836)) (and (=> (= (ControlFlow 0 2) (- 0 43)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@842) (< $generated@@842 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@842) (< $generated@@842 9223372036854775808)) (and (=> (= (ControlFlow 0 2) (- 0 42)) (not (= $generated@@836 $generated@@169))) (=> (= $generated@@843 ($generated@@167 $generated@@836)) (and (=> (= (ControlFlow 0 2) (- 0 41)) (and (<= ($generated@@318 0) $generated@@843) (< $generated@@843 256))) (=> (and (<= ($generated@@318 0) $generated@@843) (< $generated@@843 256)) (and (=> (= (ControlFlow 0 2) (- 0 40)) (not (= $generated@@836 $generated@@169))) (=> (= $generated@@844 ($generated@@167 $generated@@836)) (and (=> (= (ControlFlow 0 2) (- 0 39)) (and (<= ($generated@@318 0) $generated@@844) (< $generated@@844 65536))) (=> (and (<= ($generated@@318 0) $generated@@844) (< $generated@@844 65536)) (and (=> (= (ControlFlow 0 2) (- 0 38)) (not (= $generated@@836 $generated@@169))) (=> (= $generated@@845 ($generated@@167 $generated@@836)) (and (=> (= (ControlFlow 0 2) (- 0 37)) (and (<= ($generated@@318 0) $generated@@845) (< $generated@@845 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@845) (< $generated@@845 4294967296)) (and (=> (= (ControlFlow 0 2) (- 0 36)) (not (= $generated@@836 $generated@@169))) (=> (= $generated@@846 ($generated@@167 $generated@@836)) (and (=> (= (ControlFlow 0 2) (- 0 35)) (and (<= ($generated@@318 0) $generated@@846) (< $generated@@846 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@846) (< $generated@@846 18446744073709551616)) (=> (and (= $generated@@847 ($generated@@320 ($generated@@337 67))) (= $generated@@848 ($generated@@338 $generated@@847))) (and (=> (= (ControlFlow 0 2) (- 0 34)) (and (<= ($generated@@318 (- 0 128)) $generated@@848) (< $generated@@848 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@848) (< $generated@@848 128)) (=> (= $generated@@849 ($generated@@338 $generated@@847)) (and (=> (= (ControlFlow 0 2) (- 0 33)) (and (<= ($generated@@318 (- 0 32768)) $generated@@849) (< $generated@@849 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@849) (< $generated@@849 32768)) (=> (= $generated@@850 ($generated@@338 $generated@@847)) (and (=> (= (ControlFlow 0 2) (- 0 32)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@850) (< $generated@@850 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@850) (< $generated@@850 2147483648)) (=> (= $generated@@851 ($generated@@338 $generated@@847)) (and (=> (= (ControlFlow 0 2) (- 0 31)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@851) (< $generated@@851 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@851) (< $generated@@851 9223372036854775808)) (=> (= $generated@@852 ($generated@@338 $generated@@847)) (and (=> (= (ControlFlow 0 2) (- 0 30)) (and (<= ($generated@@318 0) $generated@@852) (< $generated@@852 256))) (=> (and (<= ($generated@@318 0) $generated@@852) (< $generated@@852 256)) (=> (= $generated@@853 ($generated@@338 $generated@@847)) (and (=> (= (ControlFlow 0 2) (- 0 29)) (and (<= ($generated@@318 0) $generated@@853) (< $generated@@853 65536))) (=> (and (<= ($generated@@318 0) $generated@@853) (< $generated@@853 65536)) (=> (= $generated@@854 ($generated@@338 $generated@@847)) (and (=> (= (ControlFlow 0 2) (- 0 28)) (and (<= ($generated@@318 0) $generated@@854) (< $generated@@854 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@854) (< $generated@@854 4294967296)) (=> (= $generated@@855 ($generated@@338 $generated@@847)) (and (=> (= (ControlFlow 0 2) (- 0 27)) (and (<= ($generated@@318 0) $generated@@855) (< $generated@@855 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@855) (< $generated@@855 18446744073709551616)) (=> (= $generated@@856 ($generated@@318 0)) (and (=> (= (ControlFlow 0 2) (- 0 26)) (and (<= 0 $generated@@856) (< $generated@@856 65536))) (=> (and (<= 0 $generated@@856) (< $generated@@856 65536)) (=> (= $generated@@857 ($generated@@337 $generated@@856)) (=> (and (= $generated@@858 ($generated@@338 $generated@@857)) (= $generated@@859 ($generated@@318 127))) (and (=> (= (ControlFlow 0 2) (- 0 25)) (and (<= ($generated@@318 (- 0 128)) $generated@@859) (< $generated@@859 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@859) (< $generated@@859 128)) (=> (= $generated@@860 ($generated@@318 127)) (and (=> (= (ControlFlow 0 2) (- 0 24)) (and (<= 0 $generated@@860) (< $generated@@860 65536))) (=> (and (<= 0 $generated@@860) (< $generated@@860 65536)) (=> (and (= $generated@@861 ($generated@@337 $generated@@860)) (= $generated@@862 ($generated@@338 $generated@@861))) (and (=> (= (ControlFlow 0 2) (- 0 23)) (and (<= ($generated@@318 (- 0 128)) $generated@@862) (< $generated@@862 128))) (=> (and (<= ($generated@@318 (- 0 128)) $generated@@862) (< $generated@@862 128)) (=> (and (= $generated@@863 ($generated@@338 $generated@@861)) (= $generated@@864 ($generated@@318 255))) (and (=> (= (ControlFlow 0 2) (- 0 22)) (and (<= ($generated@@318 0) $generated@@864) (< $generated@@864 256))) (=> (and (<= ($generated@@318 0) $generated@@864) (< $generated@@864 256)) (=> (= $generated@@865 ($generated@@318 255)) (and (=> (= (ControlFlow 0 2) (- 0 21)) (and (<= 0 $generated@@865) (< $generated@@865 65536))) (=> (and (<= 0 $generated@@865) (< $generated@@865 65536)) (=> (and (= $generated@@866 ($generated@@337 $generated@@865)) (= $generated@@867 ($generated@@338 $generated@@866))) (and (=> (= (ControlFlow 0 2) (- 0 20)) (and (<= ($generated@@318 0) $generated@@867) (< $generated@@867 256))) (=> (and (<= ($generated@@318 0) $generated@@867) (< $generated@@867 256)) (=> (and (= $generated@@868 ($generated@@338 $generated@@866)) (= $generated@@869 ($generated@@318 32767))) (and (=> (= (ControlFlow 0 2) (- 0 19)) (and (<= ($generated@@318 (- 0 32768)) $generated@@869) (< $generated@@869 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@869) (< $generated@@869 32768)) (=> (= $generated@@870 ($generated@@318 32767)) (and (=> (= (ControlFlow 0 2) (- 0 18)) (and (<= 0 $generated@@870) (< $generated@@870 65536))) (=> (and (<= 0 $generated@@870) (< $generated@@870 65536)) (=> (and (= $generated@@871 ($generated@@337 $generated@@870)) (= $generated@@872 ($generated@@338 $generated@@871))) (and (=> (= (ControlFlow 0 2) (- 0 17)) (and (<= ($generated@@318 (- 0 32768)) $generated@@872) (< $generated@@872 32768))) (=> (and (<= ($generated@@318 (- 0 32768)) $generated@@872) (< $generated@@872 32768)) (=> (and (= $generated@@873 ($generated@@338 $generated@@871)) (= $generated@@874 ($generated@@318 65535))) (and (=> (= (ControlFlow 0 2) (- 0 16)) (and (<= ($generated@@318 0) $generated@@874) (< $generated@@874 65536))) (=> (and (<= ($generated@@318 0) $generated@@874) (< $generated@@874 65536)) (=> (= $generated@@875 ($generated@@318 65535)) (and (=> (= (ControlFlow 0 2) (- 0 15)) (and (<= 0 $generated@@875) (< $generated@@875 65536))) (=> (and (<= 0 $generated@@875) (< $generated@@875 65536)) (=> (and (= $generated@@876 ($generated@@337 $generated@@875)) (= $generated@@877 ($generated@@338 $generated@@876))) (and (=> (= (ControlFlow 0 2) (- 0 14)) (and (<= ($generated@@318 0) $generated@@877) (< $generated@@877 65536))) (=> (and (<= ($generated@@318 0) $generated@@877) (< $generated@@877 65536)) (=> (and (= $generated@@878 ($generated@@338 $generated@@876)) (= $generated@@879 ($generated@@318 65535))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@879) (< $generated@@879 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@879) (< $generated@@879 2147483648)) (=> (= $generated@@880 ($generated@@318 65535)) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= 0 $generated@@880) (< $generated@@880 65536))) (=> (and (<= 0 $generated@@880) (< $generated@@880 65536)) (=> (and (= $generated@@881 ($generated@@337 $generated@@880)) (= $generated@@882 ($generated@@338 $generated@@881))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@882) (< $generated@@882 2147483648))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@882) (< $generated@@882 2147483648)) (=> (and (= $generated@@883 ($generated@@338 $generated@@881)) (= $generated@@884 ($generated@@318 65535))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@318 0) $generated@@884) (< $generated@@884 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@884) (< $generated@@884 4294967296)) (=> (= $generated@@885 ($generated@@318 65535)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= 0 $generated@@885) (< $generated@@885 65536))) (=> (and (<= 0 $generated@@885) (< $generated@@885 65536)) (=> (and (= $generated@@886 ($generated@@337 $generated@@885)) (= $generated@@887 ($generated@@338 $generated@@886))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@318 0) $generated@@887) (< $generated@@887 4294967296))) (=> (and (<= ($generated@@318 0) $generated@@887) (< $generated@@887 4294967296)) (=> (and (= $generated@@888 ($generated@@338 $generated@@886)) (= $generated@@889 ($generated@@318 65535))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@889) (< $generated@@889 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@889) (< $generated@@889 9223372036854775808)) (=> (= $generated@@890 ($generated@@318 65535)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 $generated@@890) (< $generated@@890 65536))) (=> (and (<= 0 $generated@@890) (< $generated@@890 65536)) (=> (and (= $generated@@891 ($generated@@337 $generated@@890)) (= $generated@@892 ($generated@@338 $generated@@891))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@318 (- 0 2147483648)) $generated@@892) (< $generated@@892 9223372036854775808))) (=> (and (<= ($generated@@318 (- 0 2147483648)) $generated@@892) (< $generated@@892 9223372036854775808)) (=> (and (= $generated@@893 ($generated@@338 $generated@@891)) (= $generated@@894 ($generated@@318 65535))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@318 0) $generated@@894) (< $generated@@894 18446744073709551616))) (=> (and (<= ($generated@@318 0) $generated@@894) (< $generated@@894 18446744073709551616)) (=> (= $generated@@895 ($generated@@318 65535)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@895) (< $generated@@895 65536))) (=> (and (<= 0 $generated@@895) (< $generated@@895 65536)) (=> (= $generated@@896 ($generated@@337 $generated@@895)) (=> (and (= $generated@@897 ($generated@@338 $generated@@896)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@318 0) $generated@@897) (< $generated@@897 18446744073709551616))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@914  (=> (and ($generated@@183 $generated@@770) ($generated@@838 $generated@@770)) (=> (and (and (and (<= ($generated@@318 (- 0 128)) $generated@@898) (< $generated@@898 128)) true) (and (and (<= ($generated@@318 (- 0 32768)) $generated@@899) (< $generated@@899 32768)) true)) (=> (and (and (and (and (<= ($generated@@318 (- 0 2147483648)) $generated@@900) (< $generated@@900 2147483648)) true) (and (and (<= ($generated@@318 (- 0 2147483648)) $generated@@901) (< $generated@@901 9223372036854775808)) true)) (and (and (and (<= ($generated@@318 0) $generated@@902) (< $generated@@902 256)) true) (and (and (<= ($generated@@318 0) $generated@@903) (< $generated@@903 65536)) true))) (=> (and (and (and (and (and (<= ($generated@@318 0) $generated@@904) (< $generated@@904 4294967296)) true) (and (and (<= ($generated@@318 0) $generated@@905) (< $generated@@905 18446744073709551616)) true)) (and (and (and ($generated@@171 $generated@@906 ($generated@@308 $generated@@46)) ($generated@@77 $generated@@906 ($generated@@308 $generated@@46) $generated@@770)) true) (and (and ($generated@@171 $generated@@907 ($generated@@213 $generated@@46)) ($generated@@77 $generated@@907 ($generated@@213 $generated@@46) $generated@@770)) true))) (and (and (and (and ($generated@@171 $generated@@908 ($generated@@325 $generated@@46)) ($generated@@77 $generated@@908 ($generated@@325 $generated@@46) $generated@@770)) true) (and (and ($generated@@171 $generated@@909 ($generated@@514 $generated@@46 ($generated@@325 $generated@@45))) ($generated@@77 $generated@@909 ($generated@@514 $generated@@46 ($generated@@325 $generated@@45)) $generated@@770)) true)) (and (and (and ($generated@@171 $generated@@910 ($generated@@192 $generated@@46)) ($generated@@77 $generated@@910 ($generated@@192 $generated@@46) $generated@@770)) true) (and (and ($generated@@171 $generated@@911 $generated@@45) true) (and (= 1 $generated@@912) (= (ControlFlow 0 189) 2)))))) $generated@@913))))))
$generated@@914)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (Int) T@U)
(declare-fun $generated@@92 (T@T T@T) T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 7)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 7))
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 ((_ BitVec 8)) T@U)
(declare-fun $generated@@158 (T@U) (_ BitVec 8))
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 ((_ BitVec 15)) T@U)
(declare-fun $generated@@166 (T@U) (_ BitVec 15))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 16)) T@U)
(declare-fun $generated@@174 (T@U) (_ BitVec 16))
(declare-fun $generated@@180 (T@U T@U) Bool)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@208 (T@U T@U) Bool)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 () T@T)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@225 () T@T)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@235 (T@U T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@237 (T@T T@T) T@T)
(declare-fun $generated@@238 (T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@291 (T@U T@U) T@U)
(declare-fun $generated@@292 (T@U T@U) Bool)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@311 (Int) Int)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@317 (T@U) Bool)
(declare-fun $generated@@318 (T@U T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@330 (T@T) T@U)
(declare-fun $generated@@331 (T@U) Int)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@352 (T@U) Int)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@T T@T) T@U)
(declare-fun $generated@@378 (T@T T@T) T@T)
(declare-fun $generated@@379 (T@T) T@T)
(declare-fun $generated@@380 (T@T) T@T)
(declare-fun $generated@@397 (T@T T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@469 (T@U T@U) T@U)
(declare-fun $generated@@477 (T@U T@U) T@U)
(declare-fun $generated@@488 (T@T) T@U)
(declare-fun $generated@@512 () T@T)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@555 (T@U Int) T@U)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@593 (T@U) Int)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@669 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@80) 6) (= (type $generated@@44) $generated@@80)) (= (type $generated@@45) $generated@@80)) (= (type $generated@@46) $generated@@80)) (= (type $generated@@47) $generated@@80)) (= (type $generated@@48) $generated@@80)) (= ($generated@@1 $generated@@81) 7)) (= (type $generated@@49) $generated@@81)) (= (type $generated@@50) $generated@@81)) (= (type $generated@@51) $generated@@81)) (= (type $generated@@52) $generated@@81)) (= (type $generated@@53) $generated@@81)) (= (type $generated@@54) $generated@@81)) (= (type $generated@@55) $generated@@81)) (= (type $generated@@56) $generated@@81)) (= (type $generated@@57) $generated@@81)) (= (type $generated@@58) $generated@@81)) (= (type $generated@@59) $generated@@81)) (forall (($generated@@86 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@86)) 8))) (forall (($generated@@87 T@T) ) (! (= ($generated@@83 ($generated@@82 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@82 $generated@@87))
))) (= (type $generated@@60) ($generated@@82 $generated@@4))) (= ($generated@@1 $generated@@84) 9)) (= (type $generated@@61) $generated@@84)) (= (type $generated@@62) $generated@@81)) (= (type $generated@@63) $generated@@81)) (= (type $generated@@64) $generated@@81)) (= (type $generated@@65) $generated@@81)) (= (type $generated@@66) $generated@@81)) (= (type $generated@@67) $generated@@81)) (= (type $generated@@68) $generated@@81)) (= (type $generated@@69) $generated@@81)) (= (type $generated@@70) $generated@@81)) (= ($generated@@1 $generated@@85) 10)) (= (type $generated@@71) $generated@@85)) (= (type $generated@@72) $generated@@85)) (= (type $generated@@73) $generated@@85)) (= (type $generated@@74) $generated@@85)) (= (type $generated@@75) $generated@@85)) (= (type $generated@@76) $generated@@85)) (= (type $generated@@77) $generated@@85)) (= (type $generated@@78) $generated@@85)) (= (type $generated@@79) $generated@@85)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79)
)
(assert (forall (($generated@@89 T@U) ) (! (= (type ($generated@@88 $generated@@89)) $generated@@81)
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (= ($generated@@88 $generated@@44) $generated@@49))
(assert (= ($generated@@88 $generated@@45) $generated@@50))
(assert (= ($generated@@88 $generated@@46) $generated@@51))
(assert (= ($generated@@88 $generated@@47) $generated@@52))
(assert (= ($generated@@88 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (= ($generated@@1 ($generated@@92 $generated@@101 $generated@@102)) 11)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@95 ($generated@@92 $generated@@103 $generated@@104)) $generated@@103)
 :pattern ( ($generated@@92 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@96 ($generated@@92 $generated@@105 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@92 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@96 (type $generated@@107))))
(= (type ($generated@@97 $generated@@107 $generated@@108)) $generated@@109))
 :pattern ( ($generated@@97 $generated@@107 $generated@@108))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 (type $generated@@112)))
(let (($generated@@114 (type $generated@@111)))
(= (type ($generated@@98 $generated@@110 $generated@@111 $generated@@112)) ($generated@@92 $generated@@114 $generated@@113))))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111 $generated@@112))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@96 (type $generated@@115))))
 (=> (= (type $generated@@117) $generated@@118) (= ($generated@@97 ($generated@@98 $generated@@115 $generated@@116 $generated@@117) $generated@@116) $generated@@117)))
 :weight 0
))) (and (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@121 $generated@@122) (= ($generated@@97 ($generated@@98 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@97 $generated@@120 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@97 $generated@@124 $generated@@126)))
 :weight 0
)))) (= ($generated@@1 $generated@@93) 12)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@83 (type $generated@@128))))
(= (type ($generated@@99 $generated@@127 $generated@@128)) $generated@@129))
 :pattern ( ($generated@@99 $generated@@127 $generated@@128))
))) (= ($generated@@1 $generated@@94) 13)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= (type ($generated@@100 $generated@@130 $generated@@131 $generated@@132)) $generated@@94)
 :pattern ( ($generated@@100 $generated@@130 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@83 (type $generated@@134))))
 (=> (= (type $generated@@135) $generated@@136) (= ($generated@@99 ($generated@@100 $generated@@133 $generated@@134 $generated@@135) $generated@@134) $generated@@135)))
 :weight 0
))) (and (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@139 $generated@@140) (= ($generated@@99 ($generated@@100 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@99 $generated@@138 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@99 $generated@@142 $generated@@144)))
 :weight 0
)))) (forall (($generated@@145 Int) ) (! (= (type ($generated@@91 $generated@@145)) $generated@@80)
 :pattern ( ($generated@@91 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@2) (= (type $generated@@147) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
 :pattern ( ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 7)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 14)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 7)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@154 ($generated@@91 7) $generated@@155))
 :pattern ( ($generated@@90 $generated@@154 ($generated@@91 7) $generated@@155))
)))
(assert  (and (and (and (forall (($generated@@159 (_ BitVec 8)) ) (! (= ($generated@@158 ($generated@@157 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@159))
)) (= ($generated@@1 $generated@@156) 15)) (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@156) (= ($generated@@157 ($generated@@158 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@158 $generated@@160))
))) (forall (($generated@@161 (_ BitVec 8)) ) (! (= (type ($generated@@157 $generated@@161)) $generated@@156)
 :pattern ( ($generated@@157 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@156) (= (type $generated@@163) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@162 ($generated@@91 8) $generated@@163))
 :pattern ( ($generated@@90 $generated@@162 ($generated@@91 8) $generated@@163))
)))
(assert  (and (and (and (forall (($generated@@167 (_ BitVec 15)) ) (! (= ($generated@@166 ($generated@@165 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@167))
)) (= ($generated@@1 $generated@@164) 16)) (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@164) (= ($generated@@165 ($generated@@166 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@166 $generated@@168))
))) (forall (($generated@@169 (_ BitVec 15)) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@164)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@164) (= (type $generated@@171) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@170 ($generated@@91 15) $generated@@171))
 :pattern ( ($generated@@90 $generated@@170 ($generated@@91 15) $generated@@171))
)))
(assert  (and (and (and (forall (($generated@@175 (_ BitVec 16)) ) (! (= ($generated@@174 ($generated@@173 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@175))
)) (= ($generated@@1 $generated@@172) 17)) (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@172) (= ($generated@@173 ($generated@@174 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@176))
))) (forall (($generated@@177 (_ BitVec 16)) ) (! (= (type ($generated@@173 $generated@@177)) $generated@@172)
 :pattern ( ($generated@@173 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@172) (= (type $generated@@179) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@178 ($generated@@91 16) $generated@@179))
 :pattern ( ($generated@@90 $generated@@178 ($generated@@91 16) $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@182) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@180 $generated@@181 $generated@@182)) (forall (($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@183) $generated@@93) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@181 $generated@@183) $generated@@60))) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@182 $generated@@183) $generated@@60)))
 :pattern ( ($generated@@99 ($generated@@97 $generated@@182 $generated@@183) $generated@@60))
)))
 :pattern ( ($generated@@180 $generated@@181 $generated@@182))
)))
(assert (= (type $generated@@184) $generated@@80))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (= (type $generated@@185) $generated@@2) (= (type $generated@@186) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@185 $generated@@184 $generated@@186))
 :pattern ( ($generated@@90 $generated@@185 $generated@@184 $generated@@186))
)))
(assert (= (type $generated@@187) $generated@@80))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (= (type $generated@@188) $generated@@2) (= (type $generated@@189) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@188 $generated@@187 $generated@@189))
 :pattern ( ($generated@@90 $generated@@188 $generated@@187 $generated@@189))
)))
(assert (= (type $generated@@190) $generated@@80))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@2) (= (type $generated@@192) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@191 $generated@@190 $generated@@192))
 :pattern ( ($generated@@90 $generated@@191 $generated@@190 $generated@@192))
)))
(assert (= (type $generated@@193) $generated@@80))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@2) (= (type $generated@@195) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@194 $generated@@193 $generated@@195))
 :pattern ( ($generated@@90 $generated@@194 $generated@@193 $generated@@195))
)))
(assert (= (type $generated@@196) $generated@@80))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@2) (= (type $generated@@198) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@197 $generated@@196 $generated@@198))
 :pattern ( ($generated@@90 $generated@@197 $generated@@196 $generated@@198))
)))
(assert (= (type $generated@@199) $generated@@80))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) $generated@@2) (= (type $generated@@201) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@200 $generated@@199 $generated@@201))
 :pattern ( ($generated@@90 $generated@@200 $generated@@199 $generated@@201))
)))
(assert (= (type $generated@@202) $generated@@80))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@2) (= (type $generated@@204) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@203 $generated@@202 $generated@@204))
 :pattern ( ($generated@@90 $generated@@203 $generated@@202 $generated@@204))
)))
(assert (= (type $generated@@205) $generated@@80))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) $generated@@2) (= (type $generated@@207) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@206 $generated@@205 $generated@@207))
 :pattern ( ($generated@@90 $generated@@206 $generated@@205 $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ) (!  (=> (= (type $generated@@209) $generated@@2) ($generated@@208 $generated@@209 ($generated@@91 0)))
 :pattern ( ($generated@@208 $generated@@209 ($generated@@91 0)))
)))
(assert (forall (($generated@@210 T@U) ) (!  (=> (= (type $generated@@210) $generated@@148) ($generated@@208 $generated@@210 ($generated@@91 7)))
 :pattern ( ($generated@@208 $generated@@210 ($generated@@91 7)))
)))
(assert (forall (($generated@@211 T@U) ) (!  (=> (= (type $generated@@211) $generated@@156) ($generated@@208 $generated@@211 ($generated@@91 8)))
 :pattern ( ($generated@@208 $generated@@211 ($generated@@91 8)))
)))
(assert (forall (($generated@@212 T@U) ) (!  (=> (= (type $generated@@212) $generated@@164) ($generated@@208 $generated@@212 ($generated@@91 15)))
 :pattern ( ($generated@@208 $generated@@212 ($generated@@91 15)))
)))
(assert (forall (($generated@@213 T@U) ) (!  (=> (= (type $generated@@213) $generated@@172) ($generated@@208 $generated@@213 ($generated@@91 16)))
 :pattern ( ($generated@@208 $generated@@213 ($generated@@91 16)))
)))
(assert  (and (= ($generated@@1 $generated@@216) 18) (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@80)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) $generated@@80)) (= (type $generated@@221) $generated@@216)) ($generated@@208 $generated@@221 ($generated@@215 $generated@@219 $generated@@220))) ($generated@@214 $generated@@221))
 :pattern ( ($generated@@214 $generated@@221) ($generated@@208 $generated@@221 ($generated@@215 $generated@@219 $generated@@220)))
)))
(assert  (and (and (= ($generated@@1 $generated@@225) 19) (forall (($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@226)) $generated@@225)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@227)) $generated@@225)
 :pattern ( ($generated@@224 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and (= (type $generated@@228) $generated@@216) (= (type $generated@@229) $generated@@216)) true) (= ($generated@@222 $generated@@228 $generated@@229)  (and (= ($generated@@223 $generated@@228) ($generated@@223 $generated@@229)) (= ($generated@@224 $generated@@228) ($generated@@224 $generated@@229)))))
 :pattern ( ($generated@@222 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@230 $generated@@232)) $generated@@80)
 :pattern ( ($generated@@230 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (= (type $generated@@233) ($generated@@92 $generated@@225 $generated@@2)) (= (type $generated@@234) $generated@@80)) ($generated@@208 $generated@@233 ($generated@@230 $generated@@234))) ($generated@@231 $generated@@233))
 :pattern ( ($generated@@208 $generated@@233 ($generated@@230 $generated@@234)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (= ($generated@@1 ($generated@@237 $generated@@241 $generated@@242)) 20)) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@238 ($generated@@237 $generated@@243 $generated@@244)) $generated@@243)
 :pattern ( ($generated@@237 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@239 ($generated@@237 $generated@@245 $generated@@246)) $generated@@246)
 :pattern ( ($generated@@237 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@239 (type $generated@@247))))
(= (type ($generated@@235 $generated@@247 $generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@235 $generated@@247 $generated@@248 $generated@@249))
))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(let (($generated@@256 (type $generated@@252)))
(= (type ($generated@@240 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@237 $generated@@256 $generated@@255))))
 :pattern ( ($generated@@240 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
))) (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@239 (type $generated@@257))))
 (=> (= (type $generated@@260) $generated@@261) (= ($generated@@235 ($generated@@240 $generated@@257 $generated@@258 $generated@@259 $generated@@260) $generated@@258 $generated@@259) $generated@@260)))
 :weight 0
))) (and (and (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (or (= $generated@@264 $generated@@266) (= ($generated@@235 ($generated@@240 $generated@@263 $generated@@264 $generated@@265 $generated@@262) $generated@@266 $generated@@267) ($generated@@235 $generated@@263 $generated@@266 $generated@@267)))
 :weight 0
)) (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (or (= $generated@@271 $generated@@273) (= ($generated@@235 ($generated@@240 $generated@@269 $generated@@270 $generated@@271 $generated@@268) $generated@@272 $generated@@273) ($generated@@235 $generated@@269 $generated@@272 $generated@@273)))
 :weight 0
))) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (or true (= ($generated@@235 ($generated@@240 $generated@@275 $generated@@276 $generated@@277 $generated@@274) $generated@@278 $generated@@279) ($generated@@235 $generated@@275 $generated@@278 $generated@@279)))
 :weight 0
)))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 Bool) ) (! (= (type ($generated@@236 $generated@@280 $generated@@281 $generated@@282 $generated@@283)) ($generated@@237 $generated@@93 $generated@@4))
 :pattern ( ($generated@@236 $generated@@280 $generated@@281 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 Bool) ($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@83 (type $generated@@289))))
 (=> (and (and (and (and (= (type $generated@@284) $generated@@93) (= (type $generated@@285) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@286) ($generated@@82 $generated@@4))) (= (type $generated@@288) $generated@@93)) (= (type $generated@@289) ($generated@@82 $generated@@290))) (= ($generated@@0 ($generated@@235 ($generated@@236 $generated@@284 $generated@@285 $generated@@286 $generated@@287) $generated@@288 $generated@@289))  (=> (and (not (= $generated@@288 $generated@@284)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@285 $generated@@288) $generated@@286))) $generated@@287))))
 :pattern ( ($generated@@235 ($generated@@236 $generated@@284 $generated@@285 $generated@@286 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (= (type ($generated@@291 $generated@@293 $generated@@294)) $generated@@216)
 :pattern ( ($generated@@291 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (= (type $generated@@295) $generated@@80) (= (type $generated@@296) $generated@@80)) (= (type $generated@@297) $generated@@225)) (= (type $generated@@298) $generated@@225)) (= ($generated@@208 ($generated@@291 $generated@@297 $generated@@298) ($generated@@215 $generated@@295 $generated@@296))  (and ($generated@@292 $generated@@297 $generated@@295) ($generated@@292 $generated@@298 $generated@@296))))
 :pattern ( ($generated@@208 ($generated@@291 $generated@@297 $generated@@298) ($generated@@215 $generated@@295 $generated@@296)))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@216) (= (type $generated@@300) $generated@@216)) (= ($generated@@222 $generated@@299 $generated@@300) (= $generated@@299 $generated@@300)))
 :pattern ( ($generated@@222 $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@80)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) ($generated@@92 $generated@@225 $generated@@4)) (= (type $generated@@304) $generated@@80)) (= ($generated@@208 $generated@@303 ($generated@@301 $generated@@304)) (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@225) ($generated@@0 ($generated@@97 $generated@@303 $generated@@305))) ($generated@@292 $generated@@305 $generated@@304))
 :pattern ( ($generated@@97 $generated@@303 $generated@@305))
))))
 :pattern ( ($generated@@208 $generated@@303 ($generated@@301 $generated@@304)))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@80)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) ($generated@@92 $generated@@225 $generated@@4)) (= (type $generated@@309) $generated@@80)) (= ($generated@@208 $generated@@308 ($generated@@306 $generated@@309)) (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@225) ($generated@@0 ($generated@@97 $generated@@308 $generated@@310))) ($generated@@292 $generated@@310 $generated@@309))
 :pattern ( ($generated@@97 $generated@@308 $generated@@310))
))))
 :pattern ( ($generated@@208 $generated@@308 ($generated@@306 $generated@@309)))
)))
(assert (forall (($generated@@312 Int) ) (! (= ($generated@@311 $generated@@312) $generated@@312)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 (type $generated@@314)))
(= (type ($generated@@313 $generated@@314)) $generated@@315))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (! (= ($generated@@313 $generated@@316) $generated@@316)
 :pattern ( ($generated@@313 $generated@@316))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@319) $generated@@80) (= (type $generated@@320) $generated@@80)) (= (type $generated@@321) $generated@@225)) (= (type $generated@@322) $generated@@225)) (= (type $generated@@323) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@317 $generated@@323)) (= ($generated@@90 ($generated@@291 $generated@@321 $generated@@322) ($generated@@215 $generated@@319 $generated@@320) $generated@@323)  (and ($generated@@318 $generated@@321 $generated@@319 $generated@@323) ($generated@@318 $generated@@322 $generated@@320 $generated@@323))))
 :pattern ( ($generated@@90 ($generated@@291 $generated@@321 $generated@@322) ($generated@@215 $generated@@319 $generated@@320) $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@84)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@216) (= ($generated@@214 $generated@@326) (= ($generated@@324 $generated@@326) $generated@@61)))
 :pattern ( ($generated@@214 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@216) ($generated@@214 $generated@@327)) (exists (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (and (and (= (type $generated@@328) $generated@@225) (= (type $generated@@329) $generated@@225)) (= $generated@@327 ($generated@@291 $generated@@328 $generated@@329)))
 :no-pattern (type $generated@@328)
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
)))
 :pattern ( ($generated@@214 $generated@@327))
)))
(assert  (and (and (forall (($generated@@334 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@334)) 21)) (forall (($generated@@335 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@332 $generated@@335))
))) (forall (($generated@@336 T@T) ) (! (= (type ($generated@@330 $generated@@336)) ($generated@@332 $generated@@336))
 :pattern ( ($generated@@330 $generated@@336))
))))
(assert (forall (($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@337)) 0)
 :pattern ( ($generated@@330 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@2) (= ($generated@@208 $generated@@338 $generated@@193)  (and (<= ($generated@@311 (- 0 2147483648)) ($generated $generated@@338)) (< ($generated $generated@@338) 9223372036854775808))))
 :pattern ( ($generated@@208 $generated@@338 $generated@@193))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@225)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@80) (= (type $generated@@343) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@318 ($generated@@339 $generated@@341) $generated@@342 $generated@@343) ($generated@@90 $generated@@341 $generated@@342 $generated@@343)))
 :pattern ( ($generated@@318 ($generated@@339 $generated@@341) $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@344) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@345) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@346) $generated@@225)) (= (type $generated@@347) $generated@@80)) ($generated@@180 $generated@@344 $generated@@345)) ($generated@@318 $generated@@346 $generated@@347 $generated@@344)) ($generated@@318 $generated@@346 $generated@@347 $generated@@345))
 :pattern ( ($generated@@180 $generated@@344 $generated@@345) ($generated@@318 $generated@@346 $generated@@347 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@348) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@349) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@351) $generated@@80)) ($generated@@180 $generated@@348 $generated@@349)) ($generated@@90 $generated@@350 $generated@@351 $generated@@348)) ($generated@@90 $generated@@350 $generated@@351 $generated@@349))
 :pattern ( ($generated@@180 $generated@@348 $generated@@349) ($generated@@90 $generated@@350 $generated@@351 $generated@@348))
)))
(assert (forall (($generated@@354 T@T) ) (! (= (type ($generated@@353 $generated@@354)) ($generated@@92 $generated@@354 $generated@@2))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@95 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@92 $generated@@356 $generated@@2)) (and (= (= ($generated@@352 $generated@@355) 0) (= $generated@@355 ($generated@@353 $generated@@356))) (=> (not (= ($generated@@352 $generated@@355) 0)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) (< 0 ($generated ($generated@@97 $generated@@355 $generated@@357))))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 22)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@92 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@97 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@97 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert  (and (and (and (and (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (= ($generated@@1 ($generated@@378 $generated@@381 $generated@@382)) 23)) (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (! (= ($generated@@379 ($generated@@378 $generated@@383 $generated@@384)) $generated@@383)
 :pattern ( ($generated@@378 $generated@@383 $generated@@384))
))) (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (! (= ($generated@@380 ($generated@@378 $generated@@385 $generated@@386)) $generated@@386)
 :pattern ( ($generated@@378 $generated@@385 $generated@@386))
))) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@379 (type $generated@@387))))
(= (type ($generated@@376 $generated@@387)) ($generated@@92 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@387))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= (type ($generated@@377 $generated@@389 $generated@@390)) ($generated@@378 $generated@@389 $generated@@390))
 :pattern ( ($generated@@377 $generated@@389 $generated@@390))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@T) ) (! (let (($generated@@393 (type $generated@@391)))
 (not ($generated@@0 ($generated@@97 ($generated@@376 ($generated@@377 $generated@@393 $generated@@392)) $generated@@391))))
 :pattern ( (let (($generated@@393 (type $generated@@391)))
($generated@@97 ($generated@@376 ($generated@@377 $generated@@393 $generated@@392)) $generated@@391)))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@95 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@92 $generated@@395 $generated@@2)) (= ($generated@@231 $generated@@394) (forall (($generated@@396 T@U) ) (!  (=> (= (type $generated@@396) $generated@@395) (and (<= 0 ($generated ($generated@@97 $generated@@394 $generated@@396))) (<= ($generated ($generated@@97 $generated@@394 $generated@@396)) ($generated@@352 $generated@@394))))
 :pattern ( ($generated@@97 $generated@@394 $generated@@396))
)))))
 :pattern ( ($generated@@231 $generated@@394))
)))
(assert (forall (($generated@@398 T@T) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@398)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@225) ($generated@@292 $generated@@400 $generated@@184)) (and (= ($generated@@339 ($generated@@397 $generated@@2 $generated@@400)) $generated@@400) ($generated@@208 ($generated@@397 $generated@@2 $generated@@400) $generated@@184)))
 :pattern ( ($generated@@292 $generated@@400 $generated@@184))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@225) ($generated@@292 $generated@@401 $generated@@187)) (and (= ($generated@@339 ($generated@@397 $generated@@2 $generated@@401)) $generated@@401) ($generated@@208 ($generated@@397 $generated@@2 $generated@@401) $generated@@187)))
 :pattern ( ($generated@@292 $generated@@401 $generated@@187))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@225) ($generated@@292 $generated@@402 $generated@@190)) (and (= ($generated@@339 ($generated@@397 $generated@@2 $generated@@402)) $generated@@402) ($generated@@208 ($generated@@397 $generated@@2 $generated@@402) $generated@@190)))
 :pattern ( ($generated@@292 $generated@@402 $generated@@190))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@225) ($generated@@292 $generated@@403 $generated@@193)) (and (= ($generated@@339 ($generated@@397 $generated@@2 $generated@@403)) $generated@@403) ($generated@@208 ($generated@@397 $generated@@2 $generated@@403) $generated@@193)))
 :pattern ( ($generated@@292 $generated@@403 $generated@@193))
)))
(assert (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@225) ($generated@@292 $generated@@404 $generated@@196)) (and (= ($generated@@339 ($generated@@397 $generated@@2 $generated@@404)) $generated@@404) ($generated@@208 ($generated@@397 $generated@@2 $generated@@404) $generated@@196)))
 :pattern ( ($generated@@292 $generated@@404 $generated@@196))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@225) ($generated@@292 $generated@@405 $generated@@199)) (and (= ($generated@@339 ($generated@@397 $generated@@2 $generated@@405)) $generated@@405) ($generated@@208 ($generated@@397 $generated@@2 $generated@@405) $generated@@199)))
 :pattern ( ($generated@@292 $generated@@405 $generated@@199))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@225) ($generated@@292 $generated@@406 $generated@@202)) (and (= ($generated@@339 ($generated@@397 $generated@@2 $generated@@406)) $generated@@406) ($generated@@208 ($generated@@397 $generated@@2 $generated@@406) $generated@@202)))
 :pattern ( ($generated@@292 $generated@@406 $generated@@202))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@225) ($generated@@292 $generated@@407 $generated@@205)) (and (= ($generated@@339 ($generated@@397 $generated@@2 $generated@@407)) $generated@@407) ($generated@@208 ($generated@@397 $generated@@2 $generated@@407) $generated@@205)))
 :pattern ( ($generated@@292 $generated@@407 $generated@@205))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@362 (type $generated@@408))))
(let (($generated@@410 ($generated@@361 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@360 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@359 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) ($generated@@0 ($generated@@97 ($generated@@358 $generated@@408) $generated@@411)))
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@358 $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@362 (type $generated@@413))))
(= (type ($generated@@412 $generated@@413)) ($generated@@92 $generated@@414 $generated@@4)))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@362 (type $generated@@415))))
(let (($generated@@417 ($generated@@361 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@360 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@359 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@416) ($generated@@0 ($generated@@97 ($generated@@412 $generated@@415) $generated@@418)))
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@412 $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@380 (type $generated@@419))))
(let (($generated@@421 ($generated@@379 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@378 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@377 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) ($generated@@0 ($generated@@97 ($generated@@376 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@376 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@380 (type $generated@@424))))
(= (type ($generated@@423 $generated@@424)) ($generated@@92 $generated@@425 $generated@@4)))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@380 (type $generated@@426))))
(let (($generated@@428 ($generated@@379 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@378 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@377 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@427) ($generated@@0 ($generated@@97 ($generated@@423 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@423 $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@92 $generated@@225 $generated@@2)) (= (type $generated@@431) $generated@@80)) (= ($generated@@208 $generated@@430 ($generated@@230 $generated@@431)) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@225) (< 0 ($generated ($generated@@97 $generated@@430 $generated@@432)))) ($generated@@292 $generated@@432 $generated@@431))
 :pattern ( ($generated@@97 $generated@@430 $generated@@432))
))))
 :pattern ( ($generated@@208 $generated@@430 ($generated@@230 $generated@@431)))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (= (type $generated@@433) ($generated@@92 $generated@@225 $generated@@4)) (= (type $generated@@434) $generated@@80)) (= (type $generated@@435) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@433 ($generated@@301 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@225) ($generated@@0 ($generated@@97 $generated@@433 $generated@@436))) ($generated@@318 $generated@@436 $generated@@434 $generated@@435))
 :pattern ( ($generated@@97 $generated@@433 $generated@@436))
))))
 :pattern ( ($generated@@90 $generated@@433 ($generated@@301 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (= (type $generated@@437) ($generated@@92 $generated@@225 $generated@@4)) (= (type $generated@@438) $generated@@80)) (= (type $generated@@439) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@437 ($generated@@306 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@225) ($generated@@0 ($generated@@97 $generated@@437 $generated@@440))) ($generated@@318 $generated@@440 $generated@@438 $generated@@439))
 :pattern ( ($generated@@97 $generated@@437 $generated@@440))
))))
 :pattern ( ($generated@@90 $generated@@437 ($generated@@306 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
(= ($generated ($generated@@97 ($generated@@353 $generated@@442) $generated@@441)) 0))
 :pattern ( (let (($generated@@442 (type $generated@@441)))
($generated@@97 ($generated@@353 $generated@@442) $generated@@441)))
)))
(assert  (and (forall (($generated@@445 T@U) ) (! (= (type ($generated@@443 $generated@@445)) ($generated@@92 $generated@@225 $generated@@4))
 :pattern ( ($generated@@443 $generated@@445))
)) (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@362 (type $generated@@446))))
(let (($generated@@448 ($generated@@361 (type $generated@@446))))
(= (type ($generated@@444 $generated@@446)) ($generated@@92 $generated@@448 $generated@@447))))
 :pattern ( ($generated@@444 $generated@@446))
))))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) ($generated@@360 $generated@@225 $generated@@225)) (= (type $generated@@450) $generated@@225)) (= ($generated@@0 ($generated@@97 ($generated@@443 $generated@@449) $generated@@450))  (and ($generated@@0 ($generated@@97 ($generated@@358 $generated@@449) ($generated@@223 ($generated@@397 $generated@@216 $generated@@450)))) (= ($generated@@97 ($generated@@444 $generated@@449) ($generated@@223 ($generated@@397 $generated@@216 $generated@@450))) ($generated@@224 ($generated@@397 $generated@@216 $generated@@450))))))
 :pattern ( ($generated@@97 ($generated@@443 $generated@@449) $generated@@450))
)))
(assert  (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@453)) ($generated@@92 $generated@@225 $generated@@4))
 :pattern ( ($generated@@451 $generated@@453))
)) (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@380 (type $generated@@454))))
(let (($generated@@456 ($generated@@379 (type $generated@@454))))
(= (type ($generated@@452 $generated@@454)) ($generated@@92 $generated@@456 $generated@@455))))
 :pattern ( ($generated@@452 $generated@@454))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) ($generated@@378 $generated@@225 $generated@@225)) (= (type $generated@@458) $generated@@225)) (= ($generated@@0 ($generated@@97 ($generated@@451 $generated@@457) $generated@@458))  (and ($generated@@0 ($generated@@97 ($generated@@376 $generated@@457) ($generated@@223 ($generated@@397 $generated@@216 $generated@@458)))) (= ($generated@@97 ($generated@@452 $generated@@457) ($generated@@223 ($generated@@397 $generated@@216 $generated@@458))) ($generated@@224 ($generated@@397 $generated@@216 $generated@@458))))))
 :pattern ( ($generated@@97 ($generated@@451 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (let (($generated@@461 (type $generated@@460)))
(let (($generated@@462 ($generated@@361 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@360 $generated@@462 $generated@@461)) (= ($generated@@0 ($generated@@97 ($generated@@412 $generated@@459) $generated@@460)) (exists (($generated@@463 T@U) ) (!  (and (= (type $generated@@463) $generated@@462) (and ($generated@@0 ($generated@@97 ($generated@@358 $generated@@459) $generated@@463)) (= $generated@@460 ($generated@@97 ($generated@@444 $generated@@459) $generated@@463))))
 :pattern ( ($generated@@97 ($generated@@358 $generated@@459) $generated@@463))
 :pattern ( ($generated@@97 ($generated@@444 $generated@@459) $generated@@463))
))))))
 :pattern ( ($generated@@97 ($generated@@412 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (! (let (($generated@@466 (type $generated@@465)))
(let (($generated@@467 ($generated@@379 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@378 $generated@@467 $generated@@466)) (= ($generated@@0 ($generated@@97 ($generated@@423 $generated@@464) $generated@@465)) (exists (($generated@@468 T@U) ) (!  (and (= (type $generated@@468) $generated@@467) (and ($generated@@0 ($generated@@97 ($generated@@376 $generated@@464) $generated@@468)) (= $generated@@465 ($generated@@97 ($generated@@452 $generated@@464) $generated@@468))))
 :pattern ( ($generated@@97 ($generated@@376 $generated@@464) $generated@@468))
 :pattern ( ($generated@@97 ($generated@@452 $generated@@464) $generated@@468))
))))))
 :pattern ( ($generated@@97 ($generated@@423 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@470 $generated@@471)) $generated@@80)
 :pattern ( ($generated@@469 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (and (= (type $generated@@472) ($generated@@360 $generated@@225 $generated@@225)) (= (type $generated@@473) $generated@@80)) (= (type $generated@@474) $generated@@80)) (= (type $generated@@475) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@472 ($generated@@469 $generated@@473 $generated@@474) $generated@@475) (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@225) ($generated@@0 ($generated@@97 ($generated@@358 $generated@@472) $generated@@476))) (and ($generated@@318 ($generated@@97 ($generated@@444 $generated@@472) $generated@@476) $generated@@474 $generated@@475) ($generated@@318 $generated@@476 $generated@@473 $generated@@475)))
 :pattern ( ($generated@@97 ($generated@@444 $generated@@472) $generated@@476))
 :pattern ( ($generated@@97 ($generated@@358 $generated@@472) $generated@@476))
))))
 :pattern ( ($generated@@90 $generated@@472 ($generated@@469 $generated@@473 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@478 $generated@@479)) $generated@@80)
 :pattern ( ($generated@@477 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (and (= (type $generated@@480) ($generated@@378 $generated@@225 $generated@@225)) (= (type $generated@@481) $generated@@80)) (= (type $generated@@482) $generated@@80)) (= (type $generated@@483) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@480 ($generated@@477 $generated@@481 $generated@@482) $generated@@483) (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@225) ($generated@@0 ($generated@@97 ($generated@@376 $generated@@480) $generated@@484))) (and ($generated@@318 ($generated@@97 ($generated@@452 $generated@@480) $generated@@484) $generated@@482 $generated@@483) ($generated@@318 $generated@@484 $generated@@481 $generated@@483)))
 :pattern ( ($generated@@97 ($generated@@452 $generated@@480) $generated@@484))
 :pattern ( ($generated@@97 ($generated@@376 $generated@@480) $generated@@484))
))))
 :pattern ( ($generated@@90 $generated@@480 ($generated@@477 $generated@@481 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@485) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@486) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@487) ($generated@@92 $generated@@93 $generated@@94))) (not (= $generated@@485 $generated@@487))) (and ($generated@@180 $generated@@485 $generated@@486) ($generated@@180 $generated@@486 $generated@@487))) ($generated@@180 $generated@@485 $generated@@487))
 :pattern ( ($generated@@180 $generated@@485 $generated@@486) ($generated@@180 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@T) ) (! (= (type ($generated@@488 $generated@@489)) ($generated@@92 $generated@@489 $generated@@4))
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@380 (type $generated@@490))))
(let (($generated@@492 ($generated@@379 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@378 $generated@@492 $generated@@491)) (= (= $generated@@490 ($generated@@377 $generated@@492 $generated@@491)) (= ($generated@@376 $generated@@490) ($generated@@488 $generated@@492))))))
 :pattern ( ($generated@@376 $generated@@490))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@380 (type $generated@@493))))
(let (($generated@@495 ($generated@@379 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@378 $generated@@495 $generated@@494)) (= (= $generated@@493 ($generated@@377 $generated@@495 $generated@@494)) (= ($generated@@423 $generated@@493) ($generated@@488 $generated@@494))))))
 :pattern ( ($generated@@423 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@380 (type $generated@@496))))
(let (($generated@@498 ($generated@@379 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@378 $generated@@498 $generated@@497)) (= (= $generated@@496 ($generated@@377 $generated@@498 $generated@@497)) (= ($generated@@451 $generated@@496) ($generated@@488 $generated@@225))))))
 :pattern ( ($generated@@451 $generated@@496))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@362 (type $generated@@499))))
(let (($generated@@501 ($generated@@361 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@360 $generated@@501 $generated@@500)) (or (= $generated@@499 ($generated@@359 $generated@@501 $generated@@500)) (exists (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (and (and (= (type $generated@@502) $generated@@225) (= (type $generated@@503) $generated@@225)) ($generated@@0 ($generated@@97 ($generated@@443 $generated@@499) ($generated@@339 ($generated@@291 $generated@@502 $generated@@503)))))
 :no-pattern (type $generated@@502)
 :no-pattern (type $generated@@503)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
))))))
 :pattern ( ($generated@@443 $generated@@499))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@380 (type $generated@@504))))
(let (($generated@@506 ($generated@@379 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@378 $generated@@506 $generated@@505)) (or (= $generated@@504 ($generated@@377 $generated@@506 $generated@@505)) (exists (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (and (and (= (type $generated@@507) $generated@@225) (= (type $generated@@508) $generated@@225)) ($generated@@0 ($generated@@97 ($generated@@451 $generated@@504) ($generated@@339 ($generated@@291 $generated@@507 $generated@@508)))))
 :no-pattern (type $generated@@507)
 :no-pattern (type $generated@@508)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
 :no-pattern ($generated $generated@@508)
 :no-pattern ($generated@@0 $generated@@508)
))))))
 :pattern ( ($generated@@451 $generated@@504))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@225) ($generated@@292 $generated@@509 $generated@@46)) (and (= ($generated@@339 ($generated@@397 $generated@@2 $generated@@509)) $generated@@509) ($generated@@208 ($generated@@397 $generated@@2 $generated@@509) $generated@@46)))
 :pattern ( ($generated@@292 $generated@@509 $generated@@46))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@225) ($generated@@292 $generated@@510 $generated@@47)) (and (= ($generated@@339 ($generated@@397 $generated@@3 $generated@@510)) $generated@@510) ($generated@@208 ($generated@@397 $generated@@3 $generated@@510) $generated@@47)))
 :pattern ( ($generated@@292 $generated@@510 $generated@@47))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@225) ($generated@@292 $generated@@511 $generated@@44)) (and (= ($generated@@339 ($generated@@397 $generated@@4 $generated@@511)) $generated@@511) ($generated@@208 ($generated@@397 $generated@@4 $generated@@511) $generated@@44)))
 :pattern ( ($generated@@292 $generated@@511 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@512) 24))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@225) ($generated@@292 $generated@@513 $generated@@45)) (and (= ($generated@@339 ($generated@@397 $generated@@512 $generated@@513)) $generated@@513) ($generated@@208 ($generated@@397 $generated@@512 $generated@@513) $generated@@45)))
 :pattern ( ($generated@@292 $generated@@513 $generated@@45))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@80) (= ($generated@@292 ($generated@@339 $generated@@514) $generated@@515) ($generated@@208 $generated@@514 $generated@@515)))
 :pattern ( ($generated@@292 ($generated@@339 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@95 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@92 $generated@@517 $generated@@2)) (<= 0 ($generated@@352 $generated@@516))))
 :pattern ( ($generated@@352 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@333 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@332 $generated@@519)) (<= 0 ($generated@@331 $generated@@518))))
 :pattern ( ($generated@@331 $generated@@518))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@80)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@80) (= (type $generated@@523) $generated@@80)) (= ($generated@@520 ($generated@@469 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@469 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@80)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@80) (= (type $generated@@527) $generated@@80)) (= ($generated@@524 ($generated@@469 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@469 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@80) (= (type $generated@@529) $generated@@80)) (= ($generated@@88 ($generated@@469 $generated@@528 $generated@@529)) $generated@@58))
 :pattern ( ($generated@@469 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@80)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@80) (= (type $generated@@533) $generated@@80)) (= ($generated@@530 ($generated@@477 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@477 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@80)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@80) (= (type $generated@@537) $generated@@80)) (= ($generated@@534 ($generated@@477 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@477 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@80) (= (type $generated@@539) $generated@@80)) (= ($generated@@88 ($generated@@477 $generated@@538 $generated@@539)) $generated@@59))
 :pattern ( ($generated@@477 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@225) (= (type $generated@@541) $generated@@225)) (= ($generated@@324 ($generated@@291 $generated@@540 $generated@@541)) $generated@@61))
 :pattern ( ($generated@@291 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@80)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@80) (= (type $generated@@545) $generated@@80)) (= ($generated@@542 ($generated@@215 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@215 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@80)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@80) (= (type $generated@@549) $generated@@80)) (= ($generated@@546 ($generated@@215 $generated@@548 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@215 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@225) (= (type $generated@@551) $generated@@225)) (= ($generated@@223 ($generated@@291 $generated@@550 $generated@@551)) $generated@@550))
 :pattern ( ($generated@@291 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@225) (= (type $generated@@553) $generated@@225)) (= ($generated@@224 ($generated@@291 $generated@@552 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@291 $generated@@552 $generated@@553))
)))
(assert  (and (forall (($generated@@556 T@U) ) (! (= (type ($generated@@554 $generated@@556)) $generated@@80)
 :pattern ( ($generated@@554 $generated@@556))
)) (forall (($generated@@557 T@U) ($generated@@558 Int) ) (! (let (($generated@@559 ($generated@@333 (type $generated@@557))))
(= (type ($generated@@555 $generated@@557 $generated@@558)) $generated@@559))
 :pattern ( ($generated@@555 $generated@@557 $generated@@558))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@332 $generated@@225)) (= (type $generated@@561) $generated@@80)) (= (type $generated@@562) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@560 ($generated@@554 $generated@@561) $generated@@562) (forall (($generated@@563 Int) ) (!  (=> (and (<= 0 $generated@@563) (< $generated@@563 ($generated@@331 $generated@@560))) ($generated@@318 ($generated@@555 $generated@@560 $generated@@563) $generated@@561 $generated@@562))
 :pattern ( ($generated@@555 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@90 $generated@@560 ($generated@@554 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@565 Int) ) (! (= ($generated@@564 ($generated@@91 $generated@@565)) $generated@@565)
 :pattern ( ($generated@@91 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@80)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@80) (= ($generated@@566 ($generated@@301 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@301 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@80) (= ($generated@@88 ($generated@@301 $generated@@569)) $generated@@54))
 :pattern ( ($generated@@301 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@80)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@80) (= ($generated@@570 ($generated@@306 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@306 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@80) (= ($generated@@88 ($generated@@306 $generated@@573)) $generated@@55))
 :pattern ( ($generated@@306 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@80)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@80) (= ($generated@@574 ($generated@@230 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@230 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@80) (= ($generated@@88 ($generated@@230 $generated@@577)) $generated@@56))
 :pattern ( ($generated@@230 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@80)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@80) (= ($generated@@578 ($generated@@554 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@554 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@80) (= ($generated@@88 ($generated@@554 $generated@@581)) $generated@@57))
 :pattern ( ($generated@@554 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 (type $generated@@582)))
(= ($generated@@397 $generated@@583 ($generated@@339 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@339 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@360 $generated@@225 $generated@@225)) (= (type $generated@@585) $generated@@80)) (= (type $generated@@586) $generated@@80)) (= ($generated@@208 $generated@@584 ($generated@@469 $generated@@585 $generated@@586)) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@225) ($generated@@0 ($generated@@97 ($generated@@358 $generated@@584) $generated@@587))) (and ($generated@@292 ($generated@@97 ($generated@@444 $generated@@584) $generated@@587) $generated@@586) ($generated@@292 $generated@@587 $generated@@585)))
 :pattern ( ($generated@@97 ($generated@@444 $generated@@584) $generated@@587))
 :pattern ( ($generated@@97 ($generated@@358 $generated@@584) $generated@@587))
))))
 :pattern ( ($generated@@208 $generated@@584 ($generated@@469 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@378 $generated@@225 $generated@@225)) (= (type $generated@@589) $generated@@80)) (= (type $generated@@590) $generated@@80)) (= ($generated@@208 $generated@@588 ($generated@@477 $generated@@589 $generated@@590)) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@225) ($generated@@0 ($generated@@97 ($generated@@376 $generated@@588) $generated@@591))) (and ($generated@@292 ($generated@@97 ($generated@@452 $generated@@588) $generated@@591) $generated@@590) ($generated@@292 $generated@@591 $generated@@589)))
 :pattern ( ($generated@@97 ($generated@@452 $generated@@588) $generated@@591))
 :pattern ( ($generated@@97 ($generated@@376 $generated@@588) $generated@@591))
))))
 :pattern ( ($generated@@208 $generated@@588 ($generated@@477 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@225) (= (type $generated@@595) $generated@@225)) (< ($generated@@592 $generated@@594) ($generated@@593 ($generated@@291 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@291 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@225) (= (type $generated@@597) $generated@@225)) (< ($generated@@592 $generated@@597) ($generated@@593 ($generated@@291 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@291 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@225) (= (type $generated@@599) $generated@@80)) (= (type $generated@@600) $generated@@80)) ($generated@@292 $generated@@598 ($generated@@469 $generated@@599 $generated@@600))) (and (= ($generated@@339 ($generated@@397 ($generated@@360 $generated@@225 $generated@@225) $generated@@598)) $generated@@598) ($generated@@208 ($generated@@397 ($generated@@360 $generated@@225 $generated@@225) $generated@@598) ($generated@@469 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@292 $generated@@598 ($generated@@469 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@225) (= (type $generated@@602) $generated@@80)) (= (type $generated@@603) $generated@@80)) ($generated@@292 $generated@@601 ($generated@@477 $generated@@602 $generated@@603))) (and (= ($generated@@339 ($generated@@397 ($generated@@378 $generated@@225 $generated@@225) $generated@@601)) $generated@@601) ($generated@@208 ($generated@@397 ($generated@@378 $generated@@225 $generated@@225) $generated@@601) ($generated@@477 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@292 $generated@@601 ($generated@@477 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@80) (= (type $generated@@605) $generated@@80)) (= (type $generated@@606) $generated@@225)) ($generated@@292 $generated@@606 ($generated@@215 $generated@@604 $generated@@605))) (and (= ($generated@@339 ($generated@@397 $generated@@216 $generated@@606)) $generated@@606) ($generated@@208 ($generated@@397 $generated@@216 $generated@@606) ($generated@@215 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@292 $generated@@606 ($generated@@215 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@607)))
 (not ($generated@@0 ($generated@@97 ($generated@@488 $generated@@608) $generated@@607))))
 :pattern ( (let (($generated@@608 (type $generated@@607)))
($generated@@97 ($generated@@488 $generated@@608) $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@85)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@80) (= (type $generated@@612) $generated@@80)) (and (= ($generated@@88 ($generated@@215 $generated@@611 $generated@@612)) $generated@@62) (= ($generated@@609 ($generated@@215 $generated@@611 $generated@@612)) $generated@@71)))
 :pattern ( ($generated@@215 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@216) (= ($generated@@592 ($generated@@339 $generated@@613)) ($generated@@593 $generated@@613)))
 :pattern ( ($generated@@592 ($generated@@339 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@225) ($generated@@292 $generated@@614 ($generated@@91 0))) (and (= ($generated@@339 ($generated@@397 $generated@@2 $generated@@614)) $generated@@614) ($generated@@208 ($generated@@397 ($generated@@92 $generated@@225 $generated@@4) $generated@@614) ($generated@@91 0))))
 :pattern ( ($generated@@292 $generated@@614 ($generated@@91 0)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@225) (= (type $generated@@616) $generated@@80)) ($generated@@292 $generated@@615 ($generated@@301 $generated@@616))) (and (= ($generated@@339 ($generated@@397 ($generated@@92 $generated@@225 $generated@@4) $generated@@615)) $generated@@615) ($generated@@208 ($generated@@397 ($generated@@92 $generated@@225 $generated@@4) $generated@@615) ($generated@@301 $generated@@616))))
 :pattern ( ($generated@@292 $generated@@615 ($generated@@301 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@225) (= (type $generated@@618) $generated@@80)) ($generated@@292 $generated@@617 ($generated@@306 $generated@@618))) (and (= ($generated@@339 ($generated@@397 ($generated@@92 $generated@@225 $generated@@4) $generated@@617)) $generated@@617) ($generated@@208 ($generated@@397 ($generated@@92 $generated@@225 $generated@@4) $generated@@617) ($generated@@306 $generated@@618))))
 :pattern ( ($generated@@292 $generated@@617 ($generated@@306 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@225) (= (type $generated@@620) $generated@@80)) ($generated@@292 $generated@@619 ($generated@@230 $generated@@620))) (and (= ($generated@@339 ($generated@@397 ($generated@@92 $generated@@225 $generated@@2) $generated@@619)) $generated@@619) ($generated@@208 ($generated@@397 ($generated@@92 $generated@@225 $generated@@2) $generated@@619) ($generated@@230 $generated@@620))))
 :pattern ( ($generated@@292 $generated@@619 ($generated@@230 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@225) (= (type $generated@@622) $generated@@80)) ($generated@@292 $generated@@621 ($generated@@554 $generated@@622))) (and (= ($generated@@339 ($generated@@397 ($generated@@332 $generated@@225) $generated@@621)) $generated@@621) ($generated@@208 ($generated@@397 ($generated@@332 $generated@@225) $generated@@621) ($generated@@554 $generated@@622))))
 :pattern ( ($generated@@292 $generated@@621 ($generated@@554 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@225) ($generated@@292 $generated@@623 ($generated@@91 7))) (and (= ($generated@@339 ($generated@@397 $generated@@148 $generated@@623)) $generated@@623) ($generated@@208 ($generated@@397 $generated@@148 $generated@@623) ($generated@@91 7))))
 :pattern ( ($generated@@292 $generated@@623 ($generated@@91 7)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@225) ($generated@@292 $generated@@624 ($generated@@91 8))) (and (= ($generated@@339 ($generated@@397 $generated@@156 $generated@@624)) $generated@@624) ($generated@@208 ($generated@@397 $generated@@156 $generated@@624) ($generated@@91 8))))
 :pattern ( ($generated@@292 $generated@@624 ($generated@@91 8)))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@225) ($generated@@292 $generated@@625 ($generated@@91 15))) (and (= ($generated@@339 ($generated@@397 $generated@@164 $generated@@625)) $generated@@625) ($generated@@208 ($generated@@397 $generated@@164 $generated@@625) ($generated@@91 15))))
 :pattern ( ($generated@@292 $generated@@625 ($generated@@91 15)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@225) ($generated@@292 $generated@@626 ($generated@@91 16))) (and (= ($generated@@339 ($generated@@397 $generated@@172 $generated@@626)) $generated@@626) ($generated@@208 ($generated@@397 $generated@@172 $generated@@626) ($generated@@91 16))))
 :pattern ( ($generated@@292 $generated@@626 ($generated@@91 16)))
)))
(assert (= ($generated@@88 $generated@@184) $generated@@63))
(assert (= ($generated@@609 $generated@@184) $generated@@72))
(assert (= ($generated@@88 $generated@@187) $generated@@64))
(assert (= ($generated@@609 $generated@@187) $generated@@73))
(assert (= ($generated@@88 $generated@@190) $generated@@65))
(assert (= ($generated@@609 $generated@@190) $generated@@74))
(assert (= ($generated@@88 $generated@@193) $generated@@66))
(assert (= ($generated@@609 $generated@@193) $generated@@75))
(assert (= ($generated@@88 $generated@@196) $generated@@67))
(assert (= ($generated@@609 $generated@@196) $generated@@76))
(assert (= ($generated@@88 $generated@@199) $generated@@68))
(assert (= ($generated@@609 $generated@@199) $generated@@77))
(assert (= ($generated@@88 $generated@@202) $generated@@69))
(assert (= ($generated@@609 $generated@@202) $generated@@78))
(assert (= ($generated@@88 $generated@@205) $generated@@70))
(assert (= ($generated@@609 $generated@@205) $generated@@79))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@627) ($generated@@92 $generated@@225 $generated@@2)) (= (type $generated@@628) $generated@@80)) (= (type $generated@@629) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@627 ($generated@@230 $generated@@628) $generated@@629) (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@225) (< 0 ($generated ($generated@@97 $generated@@627 $generated@@630)))) ($generated@@318 $generated@@630 $generated@@628 $generated@@629))
 :pattern ( ($generated@@97 $generated@@627 $generated@@630))
))))
 :pattern ( ($generated@@90 $generated@@627 ($generated@@230 $generated@@628) $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@216) (= (type $generated@@632) $generated@@80)) (= (type $generated@@633) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@317 $generated@@633) (and ($generated@@214 $generated@@631) (exists (($generated@@634 T@U) ) (!  (and (= (type $generated@@634) $generated@@80) ($generated@@90 $generated@@631 ($generated@@215 $generated@@632 $generated@@634) $generated@@633))
 :pattern ( ($generated@@90 $generated@@631 ($generated@@215 $generated@@632 $generated@@634) $generated@@633))
))))) ($generated@@318 ($generated@@223 $generated@@631) $generated@@632 $generated@@633))
 :pattern ( ($generated@@318 ($generated@@223 $generated@@631) $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) $generated@@216) (= (type $generated@@636) $generated@@80)) (= (type $generated@@637) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@317 $generated@@637) (and ($generated@@214 $generated@@635) (exists (($generated@@638 T@U) ) (!  (and (= (type $generated@@638) $generated@@80) ($generated@@90 $generated@@635 ($generated@@215 $generated@@638 $generated@@636) $generated@@637))
 :pattern ( ($generated@@90 $generated@@635 ($generated@@215 $generated@@638 $generated@@636) $generated@@637))
))))) ($generated@@318 ($generated@@224 $generated@@635) $generated@@636 $generated@@637))
 :pattern ( ($generated@@318 ($generated@@224 $generated@@635) $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@2) (= ($generated@@208 $generated@@639 $generated@@187)  (and (<= ($generated@@311 (- 0 32768)) ($generated $generated@@639)) (< ($generated $generated@@639) 32768))))
 :pattern ( ($generated@@208 $generated@@639 $generated@@187))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) (= ($generated@@208 $generated@@640 $generated@@184)  (and (<= ($generated@@311 (- 0 128)) ($generated $generated@@640)) (< ($generated $generated@@640) 128))))
 :pattern ( ($generated@@208 $generated@@640 $generated@@184))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) (= ($generated@@208 $generated@@641 $generated@@190)  (and (<= ($generated@@311 (- 0 2147483648)) ($generated $generated@@641)) (< ($generated $generated@@641) 2147483648))))
 :pattern ( ($generated@@208 $generated@@641 $generated@@190))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@2) (= ($generated@@208 $generated@@642 $generated@@196)  (and (<= ($generated@@311 0) ($generated $generated@@642)) (< ($generated $generated@@642) 256))))
 :pattern ( ($generated@@208 $generated@@642 $generated@@196))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@2) (= ($generated@@208 $generated@@643 $generated@@202)  (and (<= ($generated@@311 0) ($generated $generated@@643)) (< ($generated $generated@@643) 4294967296))))
 :pattern ( ($generated@@208 $generated@@643 $generated@@202))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@2) (= ($generated@@208 $generated@@644 $generated@@199)  (and (<= ($generated@@311 0) ($generated $generated@@644)) (< ($generated $generated@@644) 65536))))
 :pattern ( ($generated@@208 $generated@@644 $generated@@199))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@2) (= ($generated@@208 $generated@@645 $generated@@205)  (and (<= ($generated@@311 0) ($generated $generated@@645)) (< ($generated $generated@@645) 18446744073709551616))))
 :pattern ( ($generated@@208 $generated@@645 $generated@@205))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@225) (= (type $generated@@647) $generated@@225)) (= ($generated@@291 ($generated@@313 $generated@@646) ($generated@@313 $generated@@647)) ($generated@@313 ($generated@@291 $generated@@646 $generated@@647))))
 :pattern ( ($generated@@291 ($generated@@313 $generated@@646) ($generated@@313 $generated@@647)))
)))
(assert (forall (($generated@@648 Int) ) (! (= ($generated@@339 ($generated@@8 ($generated@@311 $generated@@648))) ($generated@@313 ($generated@@339 ($generated@@8 $generated@@648))))
 :pattern ( ($generated@@339 ($generated@@8 ($generated@@311 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ) (! (= ($generated@@339 ($generated@@313 $generated@@649)) ($generated@@313 ($generated@@339 $generated@@649)))
 :pattern ( ($generated@@339 ($generated@@313 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (! (let (($generated@@651 ($generated@@333 (type $generated@@650))))
 (=> (and (= (type $generated@@650) ($generated@@332 $generated@@651)) (= ($generated@@331 $generated@@650) 0)) (= $generated@@650 ($generated@@330 $generated@@651))))
 :pattern ( ($generated@@331 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (! (let (($generated@@655 (type $generated@@653)))
 (=> (and (and (= (type $generated@@652) ($generated@@92 $generated@@655 $generated@@2)) (= (type $generated@@654) $generated@@2)) (<= 0 ($generated $generated@@654))) (= ($generated@@352 ($generated@@98 $generated@@652 $generated@@653 $generated@@654)) (+ (- ($generated@@352 $generated@@652) ($generated ($generated@@97 $generated@@652 $generated@@653))) ($generated $generated@@654)))))
 :pattern ( ($generated@@352 ($generated@@98 $generated@@652 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@657) $generated@@2)) ($generated@@90 $generated@@657 $generated@@46 $generated@@656))
 :pattern ( ($generated@@90 $generated@@657 $generated@@46 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@659) $generated@@3)) ($generated@@90 $generated@@659 $generated@@47 $generated@@658))
 :pattern ( ($generated@@90 $generated@@659 $generated@@47 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@661) $generated@@4)) ($generated@@90 $generated@@661 $generated@@44 $generated@@660))
 :pattern ( ($generated@@90 $generated@@661 $generated@@44 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@663) $generated@@512)) ($generated@@90 $generated@@663 $generated@@45 $generated@@662))
 :pattern ( ($generated@@90 $generated@@663 $generated@@45 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@665) $generated@@225)) ($generated@@90 $generated@@665 $generated@@48 $generated@@664))
 :pattern ( ($generated@@90 $generated@@665 $generated@@48 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@332 $generated@@225)) (= (type $generated@@667) $generated@@80)) (= ($generated@@208 $generated@@666 ($generated@@554 $generated@@667)) (forall (($generated@@668 Int) ) (!  (=> (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@331 $generated@@666))) ($generated@@292 ($generated@@555 $generated@@666 $generated@@668) $generated@@667))
 :pattern ( ($generated@@555 $generated@@666 $generated@@668))
))))
 :pattern ( ($generated@@208 $generated@@666 ($generated@@554 $generated@@667)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 Int) ) (!  (=> (= (type $generated@@670) ($generated@@332 $generated@@225)) (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@331 $generated@@670))) (< ($generated@@593 ($generated@@397 $generated@@216 ($generated@@555 $generated@@670 $generated@@671))) ($generated@@669 $generated@@670))))
 :pattern ( ($generated@@593 ($generated@@397 $generated@@216 ($generated@@555 $generated@@670 $generated@@671))))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) ($generated@@360 $generated@@225 $generated@@225)) (= (type $generated@@673) $generated@@80)) (= (type $generated@@674) $generated@@80)) ($generated@@208 $generated@@672 ($generated@@469 $generated@@673 $generated@@674))) (and (and ($generated@@208 ($generated@@358 $generated@@672) ($generated@@301 $generated@@673)) ($generated@@208 ($generated@@412 $generated@@672) ($generated@@301 $generated@@674))) ($generated@@208 ($generated@@443 $generated@@672) ($generated@@301 ($generated@@215 $generated@@673 $generated@@674)))))
 :pattern ( ($generated@@208 $generated@@672 ($generated@@469 $generated@@673 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) ($generated@@378 $generated@@225 $generated@@225)) (= (type $generated@@676) $generated@@80)) (= (type $generated@@677) $generated@@80)) ($generated@@208 $generated@@675 ($generated@@477 $generated@@676 $generated@@677))) (and (and ($generated@@208 ($generated@@376 $generated@@675) ($generated@@306 $generated@@676)) ($generated@@208 ($generated@@423 $generated@@675) ($generated@@306 $generated@@677))) ($generated@@208 ($generated@@451 $generated@@675) ($generated@@306 ($generated@@215 $generated@@676 $generated@@677)))))
 :pattern ( ($generated@@208 $generated@@675 ($generated@@477 $generated@@676 $generated@@677)))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@2) ($generated@@208 $generated@@678 $generated@@46))
 :pattern ( ($generated@@208 $generated@@678 $generated@@46))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@3) ($generated@@208 $generated@@679 $generated@@47))
 :pattern ( ($generated@@208 $generated@@679 $generated@@47))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@4) ($generated@@208 $generated@@680 $generated@@44))
 :pattern ( ($generated@@208 $generated@@680 $generated@@44))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@512) ($generated@@208 $generated@@681 $generated@@45))
 :pattern ( ($generated@@208 $generated@@681 $generated@@45))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@225) ($generated@@208 $generated@@682 $generated@@48))
 :pattern ( ($generated@@208 $generated@@682 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(assert  (and (and (and (and (= (type $generated@@181) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@182) $generated@@46)) (= (type $generated@@183) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@190) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@194) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@203  (=> (and (= $generated@@181 ($generated@@107 $generated@@182 $generated@@183 $generated@@50 false)) (= $generated@@184 ($generated@@162 20))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@162 (- 0 128)) $generated@@184) (< $generated@@184 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@184) (< $generated@@184 128)) (=> (and (= $generated@@185 ($generated@@162 20)) (= $generated@@186 ($generated@@162 30))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@162 (- 0 128)) $generated@@186) (< $generated@@186 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@186) (< $generated@@186 128)) (=> (= $generated@@187 ($generated@@162 30)) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@188) (< $generated@@188 128)) (=> (and (and (and (and ($generated@@189 $generated@@190) ($generated@@191 $generated@@190)) (and (<= ($generated@@162 (- 0 128)) $generated@@192) (< $generated@@192 128))) (and (and (forall (($generated@@204 T@U) ) (!  (=> (= (type $generated@@204) $generated@@46) (=> (and (not (= $generated@@204 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@183 $generated@@204) $generated@@50))) (= ($generated@@49 $generated@@190 $generated@@204) ($generated@@49 $generated@@183 $generated@@204))))
 :pattern ( ($generated@@49 $generated@@190 $generated@@204))
)) ($generated@@44 $generated@@183 $generated@@190)) (and (<= ($generated@@162 (- 0 128)) $generated@@193) (< $generated@@193 128)))) (and (and (and ($generated@@189 $generated@@194) ($generated@@191 $generated@@194)) (and (<= ($generated@@162 (- 0 128)) $generated@@195) (< $generated@@195 128))) (and (and (forall (($generated@@205 T@U) ) (!  (=> (= (type $generated@@205) $generated@@46) (=> (and (not (= $generated@@205 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@190 $generated@@205) $generated@@50))) (= ($generated@@49 $generated@@194 $generated@@205) ($generated@@49 $generated@@190 $generated@@205))))
 :pattern ( ($generated@@49 $generated@@194 $generated@@205))
)) ($generated@@44 $generated@@190 $generated@@194)) (and (= $generated@@196 ($generated@@162 (- 0 2))) (= (ControlFlow 0 2) (- 0 1)))))) (and (<= ($generated@@162 (- 0 128)) $generated@@196) (< $generated@@196 128)))))))))))))
(let (($generated@@206  (=> (and ($generated@@189 $generated@@183) ($generated@@191 $generated@@183)) (=> (and (and (and (<= ($generated@@162 (- 0 128)) $generated@@197) (< $generated@@197 128)) true) (and (and (<= ($generated@@162 (- 0 128)) $generated@@198) (< $generated@@198 128)) true)) (=> (and (and (and (and (<= ($generated@@162 (- 0 128)) $generated@@199) (< $generated@@199 128)) true) (and (and (<= ($generated@@162 (- 0 128)) $generated@@200) (< $generated@@200 128)) true)) (and (and (and (<= ($generated@@162 (- 0 128)) $generated@@201) (< $generated@@201 128)) true) (and (= 2 $generated@@202) (= (ControlFlow 0 5) 2)))) $generated@@203)))))
$generated@@206)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(assert  (and (and (and (= (type $generated@@179) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@180) $generated@@47)) (= (type $generated@@181) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@182) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@188  (=> (<= $generated@@173 $generated@@174) (=> (and (= $generated@@175 (- $generated@@174 $generated@@173)) (= (ControlFlow 0 6) (- 0 5))) (and (<= ($generated@@157 (- 0 128)) $generated@@175) (< $generated@@175 128))))))
(let (($generated@@189  (=> (< $generated@@174 $generated@@173) (=> (and (= $generated@@176 (- $generated@@173 $generated@@174)) (= (ControlFlow 0 4) (- 0 3))) (and (<= ($generated@@157 (- 0 128)) $generated@@176) (< $generated@@176 128))))))
(let (($generated@@190  (=> (not (or (< $generated@@174 0) (< $generated@@173 0))) (and (=> (= (ControlFlow 0 7) 4) $generated@@189) (=> (= (ControlFlow 0 7) 6) $generated@@188)))))
(let (($generated@@191  (=> (or (< $generated@@174 0) (< $generated@@173 0)) (=> (and (= $generated@@177 ($generated@@157 18)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@157 (- 0 128)) $generated@@177) (< $generated@@177 128))))))
(let (($generated@@192  (and (=> (= (ControlFlow 0 8) 2) $generated@@191) (=> (= (ControlFlow 0 8) 7) $generated@@190))))
(let (($generated@@193  (=> (and (< $generated@@174 0) (= (ControlFlow 0 11) 8)) $generated@@192)))
(let (($generated@@194  (=> (and (<= 0 $generated@@174) (= $generated@@178 ($generated@@157 0))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= ($generated@@157 (- 0 128)) $generated@@178) (< $generated@@178 128))) (=> (and (<= ($generated@@157 (- 0 128)) $generated@@178) (< $generated@@178 128)) (=> (= (ControlFlow 0 9) 8) $generated@@192))))))
(let (($generated@@195  (=> (and (= $generated@@179 ($generated@@45 $generated@@180 $generated@@181 $generated@@182 false)) (= $generated@@183 ($generated@@157 0))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (and (<= ($generated@@157 (- 0 128)) $generated@@183) (< $generated@@183 128))) (=> (and (<= ($generated@@157 (- 0 128)) $generated@@183) (< $generated@@183 128)) (and (=> (= (ControlFlow 0 12) 9) $generated@@194) (=> (= (ControlFlow 0 12) 11) $generated@@193)))))))
(let (($generated@@196  (=> (and ($generated@@184 $generated@@181) ($generated@@185 $generated@@181)) (=> (and (and (and (<= ($generated@@157 (- 0 128)) $generated@@174) (< $generated@@174 128)) (and (<= ($generated@@157 (- 0 128)) $generated@@173) (< $generated@@173 128))) (and (and (<= ($generated@@157 (- 0 128)) $generated@@186) (< $generated@@186 128)) (and (= 1 $generated@@187) (= (ControlFlow 0 14) 12)))) $generated@@195))))
$generated@@196))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(assert  (and (and (and (and (= (type $generated@@181) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@182) $generated@@46)) (= (type $generated@@183) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@190) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@194) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@203  (=> (and (= $generated@@181 ($generated@@107 $generated@@182 $generated@@183 $generated@@50 false)) (= $generated@@184 ($generated@@162 20))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@162 (- 0 32768)) $generated@@184) (< $generated@@184 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@184) (< $generated@@184 32768)) (=> (and (= $generated@@185 ($generated@@162 20)) (= $generated@@186 ($generated@@162 30))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@162 (- 0 32768)) $generated@@186) (< $generated@@186 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@186) (< $generated@@186 32768)) (=> (= $generated@@187 ($generated@@162 30)) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@188) (< $generated@@188 32768)) (=> (and (and (and (and ($generated@@189 $generated@@190) ($generated@@191 $generated@@190)) (and (<= ($generated@@162 (- 0 32768)) $generated@@192) (< $generated@@192 32768))) (and (and (forall (($generated@@204 T@U) ) (!  (=> (= (type $generated@@204) $generated@@46) (=> (and (not (= $generated@@204 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@183 $generated@@204) $generated@@50))) (= ($generated@@49 $generated@@190 $generated@@204) ($generated@@49 $generated@@183 $generated@@204))))
 :pattern ( ($generated@@49 $generated@@190 $generated@@204))
)) ($generated@@44 $generated@@183 $generated@@190)) (and (<= ($generated@@162 (- 0 32768)) $generated@@193) (< $generated@@193 32768)))) (and (and (and ($generated@@189 $generated@@194) ($generated@@191 $generated@@194)) (and (<= ($generated@@162 (- 0 32768)) $generated@@195) (< $generated@@195 32768))) (and (and (forall (($generated@@205 T@U) ) (!  (=> (= (type $generated@@205) $generated@@46) (=> (and (not (= $generated@@205 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@190 $generated@@205) $generated@@50))) (= ($generated@@49 $generated@@194 $generated@@205) ($generated@@49 $generated@@190 $generated@@205))))
 :pattern ( ($generated@@49 $generated@@194 $generated@@205))
)) ($generated@@44 $generated@@190 $generated@@194)) (and (= $generated@@196 ($generated@@162 (- 0 2))) (= (ControlFlow 0 2) (- 0 1)))))) (and (<= ($generated@@162 (- 0 32768)) $generated@@196) (< $generated@@196 32768)))))))))))))
(let (($generated@@206  (=> (and ($generated@@189 $generated@@183) ($generated@@191 $generated@@183)) (=> (and (and (and (<= ($generated@@162 (- 0 32768)) $generated@@197) (< $generated@@197 32768)) true) (and (and (<= ($generated@@162 (- 0 32768)) $generated@@198) (< $generated@@198 32768)) true)) (=> (and (and (and (and (<= ($generated@@162 (- 0 32768)) $generated@@199) (< $generated@@199 32768)) true) (and (and (<= ($generated@@162 (- 0 32768)) $generated@@200) (< $generated@@200 32768)) true)) (and (and (and (<= ($generated@@162 (- 0 32768)) $generated@@201) (< $generated@@201 32768)) true) (and (= 2 $generated@@202) (= (ControlFlow 0 5) 2)))) $generated@@203)))))
$generated@@206)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(assert  (and (and (and (= (type $generated@@179) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@180) $generated@@47)) (= (type $generated@@181) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@182) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@188  (=> (<= $generated@@173 $generated@@174) (=> (and (= $generated@@175 (- $generated@@174 $generated@@173)) (= (ControlFlow 0 6) (- 0 5))) (and (<= ($generated@@157 (- 0 32768)) $generated@@175) (< $generated@@175 32768))))))
(let (($generated@@189  (=> (< $generated@@174 $generated@@173) (=> (and (= $generated@@176 (- $generated@@173 $generated@@174)) (= (ControlFlow 0 4) (- 0 3))) (and (<= ($generated@@157 (- 0 32768)) $generated@@176) (< $generated@@176 32768))))))
(let (($generated@@190  (=> (not (or (< $generated@@174 0) (< $generated@@173 0))) (and (=> (= (ControlFlow 0 7) 4) $generated@@189) (=> (= (ControlFlow 0 7) 6) $generated@@188)))))
(let (($generated@@191  (=> (or (< $generated@@174 0) (< $generated@@173 0)) (=> (and (= $generated@@177 ($generated@@157 18)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@157 (- 0 32768)) $generated@@177) (< $generated@@177 32768))))))
(let (($generated@@192  (and (=> (= (ControlFlow 0 8) 2) $generated@@191) (=> (= (ControlFlow 0 8) 7) $generated@@190))))
(let (($generated@@193  (=> (and (< $generated@@174 0) (= (ControlFlow 0 11) 8)) $generated@@192)))
(let (($generated@@194  (=> (and (<= 0 $generated@@174) (= $generated@@178 ($generated@@157 0))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= ($generated@@157 (- 0 32768)) $generated@@178) (< $generated@@178 32768))) (=> (and (<= ($generated@@157 (- 0 32768)) $generated@@178) (< $generated@@178 32768)) (=> (= (ControlFlow 0 9) 8) $generated@@192))))))
(let (($generated@@195  (=> (and (= $generated@@179 ($generated@@45 $generated@@180 $generated@@181 $generated@@182 false)) (= $generated@@183 ($generated@@157 0))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (and (<= ($generated@@157 (- 0 32768)) $generated@@183) (< $generated@@183 32768))) (=> (and (<= ($generated@@157 (- 0 32768)) $generated@@183) (< $generated@@183 32768)) (and (=> (= (ControlFlow 0 12) 9) $generated@@194) (=> (= (ControlFlow 0 12) 11) $generated@@193)))))))
(let (($generated@@196  (=> (and ($generated@@184 $generated@@181) ($generated@@185 $generated@@181)) (=> (and (and (and (<= ($generated@@157 (- 0 32768)) $generated@@174) (< $generated@@174 32768)) (and (<= ($generated@@157 (- 0 32768)) $generated@@173) (< $generated@@173 32768))) (and (and (<= ($generated@@157 (- 0 32768)) $generated@@186) (< $generated@@186 32768)) (and (= 1 $generated@@187) (= (ControlFlow 0 14) 12)))) $generated@@195))))
$generated@@196))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@T T@U) T@U)
(declare-fun $generated@@163 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(= (type ($generated@@157 $generated@@158)) $generated@@159))
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@157 $generated@@160) $generated@@160)
 :pattern ( ($generated@@157 $generated@@160))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 11) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@U) ) (! (= (type ($generated@@162 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@162 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ) (! (let (($generated@@168 (type $generated@@167)))
(= ($generated@@162 $generated@@168 ($generated@@161 $generated@@167)) $generated@@167))
 :pattern ( ($generated@@161 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@161 ($generated@@157 $generated@@169)) ($generated@@157 ($generated@@161 $generated@@169)))
 :pattern ( ($generated@@161 ($generated@@157 $generated@@169)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () (_ BitVec 8))
(declare-fun $generated@@175 (T@U) (_ BitVec 8))
(declare-fun $generated@@176 ((_ BitVec 8)) T@U)
(declare-fun $generated@@177 () (_ BitVec 8))
(declare-fun $generated@@178 () (_ BitVec 8))
(declare-fun $generated@@179 () (_ BitVec 8))
(declare-fun $generated@@180 () (_ BitVec 7))
(declare-fun $generated@@181 (T@U) (_ BitVec 7))
(declare-fun $generated@@182 ((_ BitVec 7)) T@U)
(declare-fun $generated@@183 () (_ BitVec 7))
(declare-fun $generated@@184 () (_ BitVec 16))
(declare-fun $generated@@185 (T@U) (_ BitVec 16))
(declare-fun $generated@@186 ((_ BitVec 16)) T@U)
(declare-fun $generated@@187 () (_ BitVec 16))
(declare-fun $generated@@188 () (_ BitVec 16))
(declare-fun $generated@@189 () (_ BitVec 16))
(declare-fun $generated@@190 () (_ BitVec 15))
(declare-fun $generated@@191 (T@U) (_ BitVec 15))
(declare-fun $generated@@192 ((_ BitVec 15)) T@U)
(declare-fun $generated@@193 () (_ BitVec 15))
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () T@T)
(declare-fun $generated@@198 () T@T)
(declare-fun $generated@@199 () T@T)
(declare-fun $generated@@200 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@170) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@171) $generated@@47)) (= (type $generated@@172) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@173) ($generated@@50 $generated@@4))) (forall (($generated@@201 (_ BitVec 8)) ) (! (= ($generated@@175 ($generated@@176 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@176 $generated@@201))
))) (= ($generated@@1 $generated@@197) 12)) (forall (($generated@@202 T@U) ) (!  (=> (= (type $generated@@202) $generated@@197) (= ($generated@@176 ($generated@@175 $generated@@202)) $generated@@202))
 :pattern ( ($generated@@175 $generated@@202))
))) (forall (($generated@@203 (_ BitVec 8)) ) (! (= (type ($generated@@176 $generated@@203)) $generated@@197)
 :pattern ( ($generated@@176 $generated@@203))
))) (forall (($generated@@204 (_ BitVec 7)) ) (! (= ($generated@@181 ($generated@@182 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@182 $generated@@204))
))) (= ($generated@@1 $generated@@198) 13)) (forall (($generated@@205 T@U) ) (!  (=> (= (type $generated@@205) $generated@@198) (= ($generated@@182 ($generated@@181 $generated@@205)) $generated@@205))
 :pattern ( ($generated@@181 $generated@@205))
))) (forall (($generated@@206 (_ BitVec 7)) ) (! (= (type ($generated@@182 $generated@@206)) $generated@@198)
 :pattern ( ($generated@@182 $generated@@206))
))) (forall (($generated@@207 (_ BitVec 16)) ) (! (= ($generated@@185 ($generated@@186 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@186 $generated@@207))
))) (= ($generated@@1 $generated@@199) 14)) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@199) (= ($generated@@186 ($generated@@185 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@185 $generated@@208))
))) (forall (($generated@@209 (_ BitVec 16)) ) (! (= (type ($generated@@186 $generated@@209)) $generated@@199)
 :pattern ( ($generated@@186 $generated@@209))
))) (forall (($generated@@210 (_ BitVec 15)) ) (! (= ($generated@@191 ($generated@@192 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@192 $generated@@210))
))) (= ($generated@@1 $generated@@200) 15)) (forall (($generated@@211 T@U) ) (!  (=> (= (type $generated@@211) $generated@@200) (= ($generated@@192 ($generated@@191 $generated@@211)) $generated@@211))
 :pattern ( ($generated@@191 $generated@@211))
))) (forall (($generated@@212 (_ BitVec 15)) ) (! (= (type ($generated@@192 $generated@@212)) $generated@@200)
 :pattern ( ($generated@@192 $generated@@212))
))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@213  (=> (and (= $generated@@170 ($generated@@45 $generated@@171 $generated@@172 $generated@@173 false)) (= $generated@@174 ($generated@@175 ($generated@@157 ($generated@@176 #xfa))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (not (= ($generated@@175 ($generated@@157 ($generated@@176 #x02))) #x00))) (=> (not (= ($generated@@175 ($generated@@157 ($generated@@176 #x02))) #x00)) (=> (= $generated@@177 (bvudiv $generated@@174 #x02)) (=> (and (= $generated@@178 (bvmul $generated@@177 #x02)) (= $generated@@179 (bvadd $generated@@178 #x06))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (= $generated@@179 ($generated@@175 ($generated@@157 ($generated@@176 #x00))))) (=> (= $generated@@179 ($generated@@175 ($generated@@157 ($generated@@176 #x00)))) (=> (and (= $generated@@180 ($generated@@181 ($generated@@157 ($generated@@182 #b1111110)))) (= $generated@@183 (bvadd $generated@@180 #b0000101))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (= $generated@@183 ($generated@@181 ($generated@@157 ($generated@@182 #b0000011))))) (=> (= $generated@@183 ($generated@@181 ($generated@@157 ($generated@@182 #b0000011)))) (=> (= $generated@@184 ($generated@@185 ($generated@@157 ($generated@@186 #xfffa)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= ($generated@@185 ($generated@@157 ($generated@@186 #x0002))) #x0000))) (=> (not (= ($generated@@185 ($generated@@157 ($generated@@186 #x0002))) #x0000)) (=> (= $generated@@187 (bvudiv $generated@@184 #x0002)) (=> (and (= $generated@@188 (bvmul $generated@@187 #x0002)) (= $generated@@189 (bvadd $generated@@188 #x000a))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= $generated@@189 ($generated@@185 ($generated@@157 ($generated@@186 #x0004))))) (=> (= $generated@@189 ($generated@@185 ($generated@@157 ($generated@@186 #x0004)))) (=> (= $generated@@190 ($generated@@191 ($generated@@157 ($generated@@192 #b111111111111011)))) (=> (and (= $generated@@193 (bvadd $generated@@190 #b000000000000110)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@193 ($generated@@191 ($generated@@157 ($generated@@192 #b000000000000001)))))))))))))))))))))))))
(let (($generated@@214  (=> (and (and ($generated@@194 $generated@@172) ($generated@@195 $generated@@172)) (and (= 1 $generated@@196) (= (ControlFlow 0 8) 2))) $generated@@213)))
$generated@@214)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () Int)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Int)
(declare-fun $generated@@208 () Int)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Int)
(declare-fun $generated@@217 () Int)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () Int)
(declare-fun $generated@@220 () Int)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () Int)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () Int)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 () Int)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () Int)
(declare-fun $generated@@232 () Int)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () Int)
(declare-fun $generated@@238 () Int)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () Int)
(declare-fun $generated@@241 () Int)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@181) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@182) $generated@@46)) (= (type $generated@@183) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@187) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@191) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@194) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@197) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@200) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@203) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@206) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@209) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@212) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@215) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@218) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@221) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@224) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@227) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@230) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@233) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@236) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@239) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@242) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@245  (=> (and (= $generated@@181 ($generated@@107 $generated@@182 $generated@@183 $generated@@50 false)) (= $generated@@184 ($generated@@162 (- 0 42)))) (and (=> (= (ControlFlow 0 2) (- 0 21)) (and (<= ($generated@@162 (- 0 128)) $generated@@184) (< $generated@@184 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@184) (< $generated@@184 128)) (=> (= $generated@@185 ($generated@@162 (- 0 42))) (=> (and (and (and ($generated@@186 $generated@@187) ($generated@@188 $generated@@187)) (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@46) (=> (and (not (= $generated@@246 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@183 $generated@@246) $generated@@50))) (= ($generated@@49 $generated@@187 $generated@@246) ($generated@@49 $generated@@183 $generated@@246))))
 :pattern ( ($generated@@49 $generated@@187 $generated@@246))
))) (and ($generated@@44 $generated@@183 $generated@@187) (= $generated@@189 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 20)) (and (<= ($generated@@162 (- 0 128)) $generated@@189) (< $generated@@189 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@189) (< $generated@@189 128)) (=> (= $generated@@190 ($generated@@162 0)) (=> (and (and (and ($generated@@186 $generated@@191) ($generated@@188 $generated@@191)) (forall (($generated@@247 T@U) ) (!  (=> (= (type $generated@@247) $generated@@46) (=> (and (not (= $generated@@247 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@187 $generated@@247) $generated@@50))) (= ($generated@@49 $generated@@191 $generated@@247) ($generated@@49 $generated@@187 $generated@@247))))
 :pattern ( ($generated@@49 $generated@@191 $generated@@247))
))) (and ($generated@@44 $generated@@187 $generated@@191) (= $generated@@192 ($generated@@162 23)))) (and (=> (= (ControlFlow 0 2) (- 0 19)) (and (<= ($generated@@162 (- 0 128)) $generated@@192) (< $generated@@192 128))) (=> (and (<= ($generated@@162 (- 0 128)) $generated@@192) (< $generated@@192 128)) (=> (= $generated@@193 ($generated@@162 23)) (=> (and (and (and ($generated@@186 $generated@@194) ($generated@@188 $generated@@194)) (forall (($generated@@248 T@U) ) (!  (=> (= (type $generated@@248) $generated@@46) (=> (and (not (= $generated@@248 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@191 $generated@@248) $generated@@50))) (= ($generated@@49 $generated@@194 $generated@@248) ($generated@@49 $generated@@191 $generated@@248))))
 :pattern ( ($generated@@49 $generated@@194 $generated@@248))
))) (and ($generated@@44 $generated@@191 $generated@@194) (= $generated@@195 ($generated@@162 (- 0 42))))) (and (=> (= (ControlFlow 0 2) (- 0 18)) (and (<= ($generated@@162 (- 0 32768)) $generated@@195) (< $generated@@195 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@195) (< $generated@@195 32768)) (=> (= $generated@@196 ($generated@@162 (- 0 42))) (=> (and (and (and ($generated@@186 $generated@@197) ($generated@@188 $generated@@197)) (forall (($generated@@249 T@U) ) (!  (=> (= (type $generated@@249) $generated@@46) (=> (and (not (= $generated@@249 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@194 $generated@@249) $generated@@50))) (= ($generated@@49 $generated@@197 $generated@@249) ($generated@@49 $generated@@194 $generated@@249))))
 :pattern ( ($generated@@49 $generated@@197 $generated@@249))
))) (and ($generated@@44 $generated@@194 $generated@@197) (= $generated@@198 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 17)) (and (<= ($generated@@162 (- 0 32768)) $generated@@198) (< $generated@@198 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@198) (< $generated@@198 32768)) (=> (= $generated@@199 ($generated@@162 0)) (=> (and (and (and ($generated@@186 $generated@@200) ($generated@@188 $generated@@200)) (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@46) (=> (and (not (= $generated@@250 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@197 $generated@@250) $generated@@50))) (= ($generated@@49 $generated@@200 $generated@@250) ($generated@@49 $generated@@197 $generated@@250))))
 :pattern ( ($generated@@49 $generated@@200 $generated@@250))
))) (and ($generated@@44 $generated@@197 $generated@@200) (= $generated@@201 ($generated@@162 23)))) (and (=> (= (ControlFlow 0 2) (- 0 16)) (and (<= ($generated@@162 (- 0 32768)) $generated@@201) (< $generated@@201 32768))) (=> (and (<= ($generated@@162 (- 0 32768)) $generated@@201) (< $generated@@201 32768)) (=> (= $generated@@202 ($generated@@162 23)) (=> (and (and (and ($generated@@186 $generated@@203) ($generated@@188 $generated@@203)) (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@46) (=> (and (not (= $generated@@251 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@200 $generated@@251) $generated@@50))) (= ($generated@@49 $generated@@203 $generated@@251) ($generated@@49 $generated@@200 $generated@@251))))
 :pattern ( ($generated@@49 $generated@@203 $generated@@251))
))) (and ($generated@@44 $generated@@200 $generated@@203) (= $generated@@204 ($generated@@162 (- 0 42))))) (and (=> (= (ControlFlow 0 2) (- 0 15)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@204) (< $generated@@204 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@204) (< $generated@@204 2147483648)) (=> (= $generated@@205 ($generated@@162 (- 0 42))) (=> (and (and (and ($generated@@186 $generated@@206) ($generated@@188 $generated@@206)) (forall (($generated@@252 T@U) ) (!  (=> (= (type $generated@@252) $generated@@46) (=> (and (not (= $generated@@252 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@203 $generated@@252) $generated@@50))) (= ($generated@@49 $generated@@206 $generated@@252) ($generated@@49 $generated@@203 $generated@@252))))
 :pattern ( ($generated@@49 $generated@@206 $generated@@252))
))) (and ($generated@@44 $generated@@203 $generated@@206) (= $generated@@207 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 14)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@207) (< $generated@@207 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@207) (< $generated@@207 2147483648)) (=> (= $generated@@208 ($generated@@162 0)) (=> (and (and (and ($generated@@186 $generated@@209) ($generated@@188 $generated@@209)) (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@46) (=> (and (not (= $generated@@253 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@206 $generated@@253) $generated@@50))) (= ($generated@@49 $generated@@209 $generated@@253) ($generated@@49 $generated@@206 $generated@@253))))
 :pattern ( ($generated@@49 $generated@@209 $generated@@253))
))) (and ($generated@@44 $generated@@206 $generated@@209) (= $generated@@210 ($generated@@162 23)))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@210) (< $generated@@210 2147483648))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@210) (< $generated@@210 2147483648)) (=> (= $generated@@211 ($generated@@162 23)) (=> (and (and (and ($generated@@186 $generated@@212) ($generated@@188 $generated@@212)) (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@46) (=> (and (not (= $generated@@254 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@209 $generated@@254) $generated@@50))) (= ($generated@@49 $generated@@212 $generated@@254) ($generated@@49 $generated@@209 $generated@@254))))
 :pattern ( ($generated@@49 $generated@@212 $generated@@254))
))) (and ($generated@@44 $generated@@209 $generated@@212) (= $generated@@213 ($generated@@162 (- 0 42))))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@213) (< $generated@@213 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@213) (< $generated@@213 9223372036854775808)) (=> (= $generated@@214 ($generated@@162 (- 0 42))) (=> (and (and (and ($generated@@186 $generated@@215) ($generated@@188 $generated@@215)) (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@46) (=> (and (not (= $generated@@255 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@212 $generated@@255) $generated@@50))) (= ($generated@@49 $generated@@215 $generated@@255) ($generated@@49 $generated@@212 $generated@@255))))
 :pattern ( ($generated@@49 $generated@@215 $generated@@255))
))) (and ($generated@@44 $generated@@212 $generated@@215) (= $generated@@216 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@216) (< $generated@@216 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@216) (< $generated@@216 9223372036854775808)) (=> (= $generated@@217 ($generated@@162 0)) (=> (and (and (and ($generated@@186 $generated@@218) ($generated@@188 $generated@@218)) (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@46) (=> (and (not (= $generated@@256 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@215 $generated@@256) $generated@@50))) (= ($generated@@49 $generated@@218 $generated@@256) ($generated@@49 $generated@@215 $generated@@256))))
 :pattern ( ($generated@@49 $generated@@218 $generated@@256))
))) (and ($generated@@44 $generated@@215 $generated@@218) (= $generated@@219 ($generated@@162 23)))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@162 (- 0 2147483648)) $generated@@219) (< $generated@@219 9223372036854775808))) (=> (and (<= ($generated@@162 (- 0 2147483648)) $generated@@219) (< $generated@@219 9223372036854775808)) (=> (= $generated@@220 ($generated@@162 23)) (=> (and (and (and ($generated@@186 $generated@@221) ($generated@@188 $generated@@221)) (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@46) (=> (and (not (= $generated@@257 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@218 $generated@@257) $generated@@50))) (= ($generated@@49 $generated@@221 $generated@@257) ($generated@@49 $generated@@218 $generated@@257))))
 :pattern ( ($generated@@49 $generated@@221 $generated@@257))
))) (and ($generated@@44 $generated@@218 $generated@@221) (= $generated@@222 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@162 0) $generated@@222) (< $generated@@222 256))) (=> (and (<= ($generated@@162 0) $generated@@222) (< $generated@@222 256)) (=> (= $generated@@223 ($generated@@162 0)) (=> (and (and (and ($generated@@186 $generated@@224) ($generated@@188 $generated@@224)) (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@46) (=> (and (not (= $generated@@258 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@221 $generated@@258) $generated@@50))) (= ($generated@@49 $generated@@224 $generated@@258) ($generated@@49 $generated@@221 $generated@@258))))
 :pattern ( ($generated@@49 $generated@@224 $generated@@258))
))) (and ($generated@@44 $generated@@221 $generated@@224) (= $generated@@225 ($generated@@162 23)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@162 0) $generated@@225) (< $generated@@225 256))) (=> (and (<= ($generated@@162 0) $generated@@225) (< $generated@@225 256)) (=> (= $generated@@226 ($generated@@162 23)) (=> (and (and (and ($generated@@186 $generated@@227) ($generated@@188 $generated@@227)) (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@46) (=> (and (not (= $generated@@259 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@224 $generated@@259) $generated@@50))) (= ($generated@@49 $generated@@227 $generated@@259) ($generated@@49 $generated@@224 $generated@@259))))
 :pattern ( ($generated@@49 $generated@@227 $generated@@259))
))) (and ($generated@@44 $generated@@224 $generated@@227) (= $generated@@228 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@162 0) $generated@@228) (< $generated@@228 65536))) (=> (and (<= ($generated@@162 0) $generated@@228) (< $generated@@228 65536)) (=> (= $generated@@229 ($generated@@162 0)) (=> (and (and (and ($generated@@186 $generated@@230) ($generated@@188 $generated@@230)) (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@46) (=> (and (not (= $generated@@260 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@227 $generated@@260) $generated@@50))) (= ($generated@@49 $generated@@230 $generated@@260) ($generated@@49 $generated@@227 $generated@@260))))
 :pattern ( ($generated@@49 $generated@@230 $generated@@260))
))) (and ($generated@@44 $generated@@227 $generated@@230) (= $generated@@231 ($generated@@162 23)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@162 0) $generated@@231) (< $generated@@231 65536))) (=> (and (<= ($generated@@162 0) $generated@@231) (< $generated@@231 65536)) (=> (= $generated@@232 ($generated@@162 23)) (=> (and (and (and ($generated@@186 $generated@@233) ($generated@@188 $generated@@233)) (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@46) (=> (and (not (= $generated@@261 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@230 $generated@@261) $generated@@50))) (= ($generated@@49 $generated@@233 $generated@@261) ($generated@@49 $generated@@230 $generated@@261))))
 :pattern ( ($generated@@49 $generated@@233 $generated@@261))
))) (and ($generated@@44 $generated@@230 $generated@@233) (= $generated@@234 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@162 0) $generated@@234) (< $generated@@234 4294967296))) (=> (and (<= ($generated@@162 0) $generated@@234) (< $generated@@234 4294967296)) (=> (= $generated@@235 ($generated@@162 0)) (=> (and (and (and ($generated@@186 $generated@@236) ($generated@@188 $generated@@236)) (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@46) (=> (and (not (= $generated@@262 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@233 $generated@@262) $generated@@50))) (= ($generated@@49 $generated@@236 $generated@@262) ($generated@@49 $generated@@233 $generated@@262))))
 :pattern ( ($generated@@49 $generated@@236 $generated@@262))
))) (and ($generated@@44 $generated@@233 $generated@@236) (= $generated@@237 ($generated@@162 23)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@162 0) $generated@@237) (< $generated@@237 4294967296))) (=> (and (<= ($generated@@162 0) $generated@@237) (< $generated@@237 4294967296)) (=> (= $generated@@238 ($generated@@162 23)) (=> (and (and (and ($generated@@186 $generated@@239) ($generated@@188 $generated@@239)) (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@46) (=> (and (not (= $generated@@263 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@236 $generated@@263) $generated@@50))) (= ($generated@@49 $generated@@239 $generated@@263) ($generated@@49 $generated@@236 $generated@@263))))
 :pattern ( ($generated@@49 $generated@@239 $generated@@263))
))) (and ($generated@@44 $generated@@236 $generated@@239) (= $generated@@240 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@162 0) $generated@@240) (< $generated@@240 18446744073709551616))) (=> (and (<= ($generated@@162 0) $generated@@240) (< $generated@@240 18446744073709551616)) (=> (= $generated@@241 ($generated@@162 0)) (=> (and ($generated@@186 $generated@@242) ($generated@@188 $generated@@242)) (=> (and (and (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@46) (=> (and (not (= $generated@@264 $generated@@182)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@239 $generated@@264) $generated@@50))) (= ($generated@@49 $generated@@242 $generated@@264) ($generated@@49 $generated@@239 $generated@@264))))
 :pattern ( ($generated@@49 $generated@@242 $generated@@264))
)) ($generated@@44 $generated@@239 $generated@@242)) (and (= $generated@@243 ($generated@@162 23)) (= (ControlFlow 0 2) (- 0 1)))) (and (<= ($generated@@162 0) $generated@@243) (< $generated@@243 18446744073709551616))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@265  (=> (and (and ($generated@@186 $generated@@183) ($generated@@188 $generated@@183)) (and (= 3 $generated@@244) (= (ControlFlow 0 22) 2))) $generated@@245)))
$generated@@265)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 ((_ BitVec 7)) T@U)
(declare-fun $generated@@129 (T@U) (_ BitVec 7))
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 ((_ BitVec 8)) T@U)
(declare-fun $generated@@137 (T@U) (_ BitVec 8))
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 ((_ BitVec 15)) T@U)
(declare-fun $generated@@145 (T@U) (_ BitVec 15))
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 ((_ BitVec 16)) T@U)
(declare-fun $generated@@153 (T@U) (_ BitVec 16))
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (Int) Int)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@221 (T@T) T@U)
(declare-fun $generated@@222 (T@U) Int)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@229 (T@U T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@231 () T@T)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 (T@T T@T) T@U)
(declare-fun $generated@@238 (T@T T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@292 (T@U T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@304 (T@U T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@U Int) T@U)
(declare-fun $generated@@353 (T@U) Int)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@373 (T@T T@U) T@U)
(declare-fun $generated@@394 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (forall (($generated@@130 (_ BitVec 7)) ) (! (= ($generated@@129 ($generated@@128 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@128 $generated@@130))
)) (= ($generated@@1 $generated@@127) 12)) (forall (($generated@@131 T@U) ) (!  (=> (= (type $generated@@131) $generated@@127) (= ($generated@@128 ($generated@@129 $generated@@131)) $generated@@131))
 :pattern ( ($generated@@129 $generated@@131))
))) (forall (($generated@@132 (_ BitVec 7)) ) (! (= (type ($generated@@128 $generated@@132)) $generated@@127)
 :pattern ( ($generated@@128 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@127) (= (type $generated@@134) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@133 ($generated@@70 7) $generated@@134))
 :pattern ( ($generated@@69 $generated@@133 ($generated@@70 7) $generated@@134))
)))
(assert  (and (and (and (forall (($generated@@138 (_ BitVec 8)) ) (! (= ($generated@@137 ($generated@@136 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@136 $generated@@138))
)) (= ($generated@@1 $generated@@135) 13)) (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@135) (= ($generated@@136 ($generated@@137 $generated@@139)) $generated@@139))
 :pattern ( ($generated@@137 $generated@@139))
))) (forall (($generated@@140 (_ BitVec 8)) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@135)
 :pattern ( ($generated@@136 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@135) (= (type $generated@@142) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@141 ($generated@@70 8) $generated@@142))
 :pattern ( ($generated@@69 $generated@@141 ($generated@@70 8) $generated@@142))
)))
(assert  (and (and (and (forall (($generated@@146 (_ BitVec 15)) ) (! (= ($generated@@145 ($generated@@144 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@144 $generated@@146))
)) (= ($generated@@1 $generated@@143) 14)) (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@143) (= ($generated@@144 ($generated@@145 $generated@@147)) $generated@@147))
 :pattern ( ($generated@@145 $generated@@147))
))) (forall (($generated@@148 (_ BitVec 15)) ) (! (= (type ($generated@@144 $generated@@148)) $generated@@143)
 :pattern ( ($generated@@144 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@143) (= (type $generated@@150) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@149 ($generated@@70 15) $generated@@150))
 :pattern ( ($generated@@69 $generated@@149 ($generated@@70 15) $generated@@150))
)))
(assert  (and (and (and (forall (($generated@@154 (_ BitVec 16)) ) (! (= ($generated@@153 ($generated@@152 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@154))
)) (= ($generated@@1 $generated@@151) 15)) (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@151) (= ($generated@@152 ($generated@@153 $generated@@155)) $generated@@155))
 :pattern ( ($generated@@153 $generated@@155))
))) (forall (($generated@@156 (_ BitVec 16)) ) (! (= (type ($generated@@152 $generated@@156)) $generated@@151)
 :pattern ( ($generated@@152 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@151) (= (type $generated@@158) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@157 ($generated@@70 16) $generated@@158))
 :pattern ( ($generated@@69 $generated@@157 ($generated@@70 16) $generated@@158))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@72 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@64 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@72) (= (type $generated@@209) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@210) ($generated@@63 $generated@@4))) (= (type $generated@@212) $generated@@72)) (= (type $generated@@213) ($generated@@63 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 Int) ) (! (= ($generated@@215 $generated@@216) $generated@@216)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(= (type ($generated@@217 $generated@@218)) $generated@@219))
 :pattern ( ($generated@@217 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= ($generated@@217 $generated@@220) $generated@@220)
 :pattern ( ($generated@@217 $generated@@220))
)))
(assert  (and (and (forall (($generated@@225 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@225)) 17)) (forall (($generated@@226 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@T) ) (! (= (type ($generated@@221 $generated@@227)) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@221 $generated@@227))
))))
(assert (forall (($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@228)) 0)
 :pattern ( ($generated@@221 $generated@@228))
)))
(assert  (and (= ($generated@@1 $generated@@231) 18) (forall (($generated@@232 T@U) ) (! (= (type ($generated@@230 $generated@@232)) $generated@@231)
 :pattern ( ($generated@@230 $generated@@232))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@61) (= (type $generated@@235) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@229 ($generated@@230 $generated@@233) $generated@@234 $generated@@235) ($generated@@69 $generated@@233 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@233) $generated@@234 $generated@@235))
)))
(assert  (and (and (and (and (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (= ($generated@@1 ($generated@@238 $generated@@241 $generated@@242)) 19)) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@239 ($generated@@238 $generated@@243 $generated@@244)) $generated@@243)
 :pattern ( ($generated@@238 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@240 ($generated@@238 $generated@@245 $generated@@246)) $generated@@246)
 :pattern ( ($generated@@238 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@239 (type $generated@@247))))
(= (type ($generated@@236 $generated@@247)) ($generated@@71 $generated@@248 $generated@@4)))
 :pattern ( ($generated@@236 $generated@@247))
))) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= (type ($generated@@237 $generated@@249 $generated@@250)) ($generated@@238 $generated@@249 $generated@@250))
 :pattern ( ($generated@@237 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@T) ) (! (let (($generated@@253 (type $generated@@251)))
 (not ($generated@@0 ($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251))))
 :pattern ( (let (($generated@@253 (type $generated@@251)))
($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251)))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 20)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@71 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@240 (type $generated@@272))))
(let (($generated@@274 ($generated@@239 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@238 $generated@@274 $generated@@273)) (or (= $generated@@272 ($generated@@237 $generated@@274 $generated@@273)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@272) $generated@@275)))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@236 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@258 (type $generated@@276))))
(let (($generated@@278 ($generated@@257 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@256 $generated@@278 $generated@@277)) (or (= $generated@@276 ($generated@@255 $generated@@278 $generated@@277)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@276) $generated@@279)))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@254 $generated@@276))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@61)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@282) ($generated@@71 $generated@@231 $generated@@4)) (= (type $generated@@283) $generated@@61)) (= (type $generated@@284) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@231) ($generated@@0 ($generated@@76 $generated@@282 $generated@@285))) ($generated@@229 $generated@@285 $generated@@283 $generated@@284))
 :pattern ( ($generated@@76 $generated@@282 $generated@@285))
))))
 :pattern ( ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@61)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (= (type $generated@@288) ($generated@@71 $generated@@231 $generated@@4)) (= (type $generated@@289) $generated@@61)) (= (type $generated@@290) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@231) ($generated@@0 ($generated@@76 $generated@@288 $generated@@291))) ($generated@@229 $generated@@291 $generated@@289 $generated@@290))
 :pattern ( ($generated@@76 $generated@@288 $generated@@291))
))))
 :pattern ( ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290))
)))
(assert  (and (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (= (type ($generated@@292 $generated@@294 $generated@@295)) $generated@@61)
 :pattern ( ($generated@@292 $generated@@294 $generated@@295))
)) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@240 (type $generated@@296))))
(let (($generated@@298 ($generated@@239 (type $generated@@296))))
(= (type ($generated@@293 $generated@@296)) ($generated@@71 $generated@@298 $generated@@297))))
 :pattern ( ($generated@@293 $generated@@296))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (= (type $generated@@299) ($generated@@238 $generated@@231 $generated@@231)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) $generated@@61)) (= (type $generated@@302) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@299 ($generated@@292 $generated@@300 $generated@@301) $generated@@302) (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@231) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@299) $generated@@303))) (and ($generated@@229 ($generated@@76 ($generated@@293 $generated@@299) $generated@@303) $generated@@301 $generated@@302) ($generated@@229 $generated@@303 $generated@@300 $generated@@302)))
 :pattern ( ($generated@@76 ($generated@@293 $generated@@299) $generated@@303))
 :pattern ( ($generated@@76 ($generated@@236 $generated@@299) $generated@@303))
))))
 :pattern ( ($generated@@69 $generated@@299 ($generated@@292 $generated@@300 $generated@@301) $generated@@302))
)))
(assert  (and (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (= (type ($generated@@304 $generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@304 $generated@@306 $generated@@307))
)) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@258 (type $generated@@308))))
(let (($generated@@310 ($generated@@257 (type $generated@@308))))
(= (type ($generated@@305 $generated@@308)) ($generated@@71 $generated@@310 $generated@@309))))
 :pattern ( ($generated@@305 $generated@@308))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@311) ($generated@@256 $generated@@231 $generated@@231)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) $generated@@61)) (= (type $generated@@314) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@231) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@311) $generated@@315))) (and ($generated@@229 ($generated@@76 ($generated@@305 $generated@@311) $generated@@315) $generated@@313 $generated@@314) ($generated@@229 $generated@@315 $generated@@312 $generated@@314)))
 :pattern ( ($generated@@76 ($generated@@305 $generated@@311) $generated@@315))
 :pattern ( ($generated@@76 ($generated@@254 $generated@@311) $generated@@315))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@71 $generated@@317 $generated@@4))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@258 (type $generated@@318))))
(let (($generated@@320 ($generated@@257 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@256 $generated@@320 $generated@@319)) (= (= $generated@@318 ($generated@@255 $generated@@320 $generated@@319)) (= ($generated@@254 $generated@@318) ($generated@@316 $generated@@320))))))
 :pattern ( ($generated@@254 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@224 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@223 $generated@@322)) (<= 0 ($generated@@222 $generated@@321))))
 :pattern ( ($generated@@222 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@61)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@61) (= (type $generated@@326) $generated@@61)) (= ($generated@@323 ($generated@@292 $generated@@325 $generated@@326)) $generated@@325))
 :pattern ( ($generated@@292 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@327 ($generated@@292 $generated@@329 $generated@@330)) $generated@@330))
 :pattern ( ($generated@@292 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@61) (= (type $generated@@332) $generated@@61)) (= ($generated@@67 ($generated@@292 $generated@@331 $generated@@332)) $generated@@58))
 :pattern ( ($generated@@292 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@61)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@61) (= (type $generated@@336) $generated@@61)) (= ($generated@@333 ($generated@@304 $generated@@335 $generated@@336)) $generated@@335))
 :pattern ( ($generated@@304 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@61) (= (type $generated@@340) $generated@@61)) (= ($generated@@337 ($generated@@304 $generated@@339 $generated@@340)) $generated@@340))
 :pattern ( ($generated@@304 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@61) (= (type $generated@@342) $generated@@61)) (= ($generated@@67 ($generated@@304 $generated@@341 $generated@@342)) $generated@@59))
 :pattern ( ($generated@@304 $generated@@341 $generated@@342))
)))
(assert  (and (forall (($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@345))
)) (forall (($generated@@346 T@U) ($generated@@347 Int) ) (! (let (($generated@@348 ($generated@@224 (type $generated@@346))))
(= (type ($generated@@344 $generated@@346 $generated@@347)) $generated@@348))
 :pattern ( ($generated@@344 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@223 $generated@@231)) (= (type $generated@@350) $generated@@61)) (= (type $generated@@351) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@349 ($generated@@343 $generated@@350) $generated@@351) (forall (($generated@@352 Int) ) (!  (=> (and (<= 0 $generated@@352) (< $generated@@352 ($generated@@222 $generated@@349))) ($generated@@229 ($generated@@344 $generated@@349 $generated@@352) $generated@@350 $generated@@351))
 :pattern ( ($generated@@344 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@69 $generated@@349 ($generated@@343 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@354 Int) ) (! (= ($generated@@353 ($generated@@70 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@70 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@355 ($generated@@280 $generated@@357)) $generated@@357))
 :pattern ( ($generated@@280 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@61) (= ($generated@@67 ($generated@@280 $generated@@358)) $generated@@54))
 :pattern ( ($generated@@280 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@359 ($generated@@286 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@286 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@67 ($generated@@286 $generated@@362)) $generated@@55))
 :pattern ( ($generated@@286 $generated@@362))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@366)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@364 ($generated@@363 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@363 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@61) (= ($generated@@67 ($generated@@363 $generated@@368)) $generated@@56))
 :pattern ( ($generated@@363 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (= (type ($generated@@369 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@369 ($generated@@343 $generated@@371)) $generated@@371))
 :pattern ( ($generated@@343 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@67 ($generated@@343 $generated@@372)) $generated@@57))
 :pattern ( ($generated@@343 $generated@@372))
)))
(assert (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated@@373 $generated@@377 ($generated@@230 $generated@@376)) $generated@@376))
 :pattern ( ($generated@@230 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
 (not ($generated@@0 ($generated@@76 ($generated@@316 $generated@@379) $generated@@378))))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@76 ($generated@@316 $generated@@379) $generated@@378)))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@71 $generated@@231 $generated@@2)) (= (type $generated@@381) $generated@@61)) (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@380 ($generated@@363 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@231) (< 0 ($generated ($generated@@76 $generated@@380 $generated@@383)))) ($generated@@229 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@76 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@69 $generated@@380 ($generated@@363 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 Int) ) (! (= ($generated@@230 ($generated@@8 ($generated@@215 $generated@@384))) ($generated@@217 ($generated@@230 ($generated@@8 $generated@@384))))
 :pattern ( ($generated@@230 ($generated@@8 ($generated@@215 $generated@@384))))
)))
(assert (forall (($generated@@385 T@U) ) (! (= ($generated@@230 ($generated@@217 $generated@@385)) ($generated@@217 ($generated@@230 $generated@@385)))
 :pattern ( ($generated@@230 ($generated@@217 $generated@@385)))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@224 (type $generated@@386))))
 (=> (and (= (type $generated@@386) ($generated@@223 $generated@@387)) (= ($generated@@222 $generated@@386) 0)) (= $generated@@386 ($generated@@221 $generated@@387))))
 :pattern ( ($generated@@222 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@389) $generated@@2)) ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
 :pattern ( ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@391) $generated@@3)) ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
 :pattern ( ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@393) $generated@@4)) ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
 :pattern ( ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
)))
(assert (= ($generated@@1 $generated@@394) 21))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@396) $generated@@394)) ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
 :pattern ( ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@398) $generated@@231)) ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
 :pattern ( ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@399 () T@U)
(declare-fun $generated@@400 () T@U)
(declare-fun $generated@@401 () T@U)
(declare-fun $generated@@402 () Int)
(declare-fun $generated@@403 () Bool)
(declare-fun $generated@@404 () Int)
(declare-fun $generated@@405 (Bool) Bool)
(declare-fun $generated@@406 () Int)
(declare-fun $generated@@407 () Bool)
(declare-fun $generated@@408 () Int)
(declare-fun $generated@@409 () Bool)
(declare-fun $generated@@410 () Int)
(declare-fun $generated@@411 () Bool)
(declare-fun $generated@@412 () Int)
(declare-fun $generated@@413 () Bool)
(declare-fun $generated@@414 () Int)
(declare-fun $generated@@415 () Bool)
(declare-fun $generated@@416 () Int)
(declare-fun $generated@@417 () Bool)
(declare-fun $generated@@418 () Int)
(declare-fun $generated@@419 () Bool)
(declare-fun $generated@@420 () Int)
(declare-fun $generated@@421 () Bool)
(declare-fun $generated@@422 () Int)
(declare-fun $generated@@423 () Bool)
(declare-fun $generated@@424 () Int)
(declare-fun $generated@@425 () Bool)
(declare-fun $generated@@426 () Int)
(declare-fun $generated@@427 (T@U) Bool)
(declare-fun $generated@@428 (T@U) Bool)
(declare-fun $generated@@429 () Int)
(assert  (and (and (= (type $generated@@399) ($generated@@161 $generated@@72 $generated@@4)) (= (type $generated@@400) $generated@@72)) (= (type $generated@@401) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@430  (=> (and (= $generated@@399 ($generated@@160 $generated@@400 $generated@@401 $generated@@60 false)) (= $generated@@402 ($generated@@215 0))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= ($generated@@215 (- 0 128)) $generated@@402) (< $generated@@402 128))) (=> (and (<= ($generated@@215 (- 0 128)) $generated@@402) (< $generated@@402 128)) (=> (= $generated@@403 (< $generated@@404 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@403) $generated@@44 $generated@@401) ($generated@@405 (< $generated@@404 0))) (and ($generated@@405 (< $generated@@404 0)) (= $generated@@406 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@215 (- 0 128)) $generated@@406) (< $generated@@406 128))) (=> (and (<= ($generated@@215 (- 0 128)) $generated@@406) (< $generated@@406 128)) (=> (= $generated@@407 (<= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@407) $generated@@44 $generated@@401) ($generated@@405 (<= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (<= $generated@@404 ($generated@@215 0))) (= $generated@@408 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@215 (- 0 128)) $generated@@408) (< $generated@@408 128))) (=> (and (<= ($generated@@215 (- 0 128)) $generated@@408) (< $generated@@408 128)) (=> (= $generated@@409 (= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@409) $generated@@44 $generated@@401) ($generated@@405 (= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (= $generated@@404 ($generated@@215 0))) (= $generated@@410 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@215 (- 0 128)) $generated@@410) (< $generated@@410 128))) (=> (and (<= ($generated@@215 (- 0 128)) $generated@@410) (< $generated@@410 128)) (=> (= $generated@@411 (not (= $generated@@404 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@411) $generated@@44 $generated@@401) ($generated@@405 (not (= $generated@@404 0)))) (and ($generated@@405 (not (= $generated@@404 0))) (= $generated@@412 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@215 (- 0 128)) $generated@@412) (< $generated@@412 128))) (=> (and (<= ($generated@@215 (- 0 128)) $generated@@412) (< $generated@@412 128)) (=> (= $generated@@413 (> $generated@@404 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@413) $generated@@44 $generated@@401) ($generated@@405 (> $generated@@404 0))) (and ($generated@@405 (> $generated@@404 0)) (= $generated@@414 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@215 (- 0 128)) $generated@@414) (< $generated@@414 128))) (=> (and (<= ($generated@@215 (- 0 128)) $generated@@414) (< $generated@@414 128)) (=> (= $generated@@415 (>= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@415) $generated@@44 $generated@@401) ($generated@@405 (>= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (>= $generated@@404 ($generated@@215 0))) (= $generated@@416 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@215 (- 0 128)) $generated@@416) (< $generated@@416 128))) (=> (and (<= ($generated@@215 (- 0 128)) $generated@@416) (< $generated@@416 128)) (=> (= $generated@@417 (< 0 $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@417) $generated@@44 $generated@@401) ($generated@@405 (< 0 $generated@@404))) (and ($generated@@405 (< 0 $generated@@404)) (= $generated@@418 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@215 (- 0 128)) $generated@@418) (< $generated@@418 128))) (=> (and (<= ($generated@@215 (- 0 128)) $generated@@418) (< $generated@@418 128)) (=> (= $generated@@419 (<= ($generated@@215 0) $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@419) $generated@@44 $generated@@401) ($generated@@405 (<= ($generated@@215 0) $generated@@404))) (and ($generated@@405 (<= ($generated@@215 0) $generated@@404)) (= $generated@@420 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@215 (- 0 128)) $generated@@420) (< $generated@@420 128))) (=> (and (<= ($generated@@215 (- 0 128)) $generated@@420) (< $generated@@420 128)) (=> (= $generated@@421 (= ($generated@@215 0) $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@421) $generated@@44 $generated@@401) ($generated@@405 (= ($generated@@215 0) $generated@@404))) (and ($generated@@405 (= ($generated@@215 0) $generated@@404)) (= $generated@@422 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@215 (- 0 128)) $generated@@422) (< $generated@@422 128))) (=> (and (<= ($generated@@215 (- 0 128)) $generated@@422) (< $generated@@422 128)) (=> (= $generated@@423 (not (= 0 $generated@@404))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@423) $generated@@44 $generated@@401) ($generated@@405 (not (= 0 $generated@@404)))) (and ($generated@@405 (not (= 0 $generated@@404))) (= $generated@@424 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@215 (- 0 128)) $generated@@424) (< $generated@@424 128))) (=> (and (<= ($generated@@215 (- 0 128)) $generated@@424) (< $generated@@424 128)) (=> (and (= $generated@@425 (> 0 $generated@@404)) ($generated@@69 ($generated@@11 $generated@@425) $generated@@44 $generated@@401)) (=> (and (and ($generated@@405 (> 0 $generated@@404)) ($generated@@405 (> 0 $generated@@404))) (and (= $generated@@426 ($generated@@215 0)) (= (ControlFlow 0 2) (- 0 1)))) (and (<= ($generated@@215 (- 0 128)) $generated@@426) (< $generated@@426 128)))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@431  (=> (and ($generated@@427 $generated@@401) ($generated@@428 $generated@@401)) (=> (and (and (<= ($generated@@215 (- 0 128)) $generated@@404) (< $generated@@404 128)) (and (= 2 $generated@@429) (= (ControlFlow 0 14) 2))) $generated@@430))))
$generated@@431)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 ((_ BitVec 7)) T@U)
(declare-fun $generated@@129 (T@U) (_ BitVec 7))
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 ((_ BitVec 8)) T@U)
(declare-fun $generated@@137 (T@U) (_ BitVec 8))
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 ((_ BitVec 15)) T@U)
(declare-fun $generated@@145 (T@U) (_ BitVec 15))
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 ((_ BitVec 16)) T@U)
(declare-fun $generated@@153 (T@U) (_ BitVec 16))
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (Int) Int)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@221 (T@T) T@U)
(declare-fun $generated@@222 (T@U) Int)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@229 (T@U T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@231 () T@T)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 (T@T T@T) T@U)
(declare-fun $generated@@238 (T@T T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@292 (T@U T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@304 (T@U T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@U Int) T@U)
(declare-fun $generated@@353 (T@U) Int)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@373 (T@T T@U) T@U)
(declare-fun $generated@@394 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (forall (($generated@@130 (_ BitVec 7)) ) (! (= ($generated@@129 ($generated@@128 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@128 $generated@@130))
)) (= ($generated@@1 $generated@@127) 12)) (forall (($generated@@131 T@U) ) (!  (=> (= (type $generated@@131) $generated@@127) (= ($generated@@128 ($generated@@129 $generated@@131)) $generated@@131))
 :pattern ( ($generated@@129 $generated@@131))
))) (forall (($generated@@132 (_ BitVec 7)) ) (! (= (type ($generated@@128 $generated@@132)) $generated@@127)
 :pattern ( ($generated@@128 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@127) (= (type $generated@@134) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@133 ($generated@@70 7) $generated@@134))
 :pattern ( ($generated@@69 $generated@@133 ($generated@@70 7) $generated@@134))
)))
(assert  (and (and (and (forall (($generated@@138 (_ BitVec 8)) ) (! (= ($generated@@137 ($generated@@136 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@136 $generated@@138))
)) (= ($generated@@1 $generated@@135) 13)) (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@135) (= ($generated@@136 ($generated@@137 $generated@@139)) $generated@@139))
 :pattern ( ($generated@@137 $generated@@139))
))) (forall (($generated@@140 (_ BitVec 8)) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@135)
 :pattern ( ($generated@@136 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@135) (= (type $generated@@142) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@141 ($generated@@70 8) $generated@@142))
 :pattern ( ($generated@@69 $generated@@141 ($generated@@70 8) $generated@@142))
)))
(assert  (and (and (and (forall (($generated@@146 (_ BitVec 15)) ) (! (= ($generated@@145 ($generated@@144 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@144 $generated@@146))
)) (= ($generated@@1 $generated@@143) 14)) (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@143) (= ($generated@@144 ($generated@@145 $generated@@147)) $generated@@147))
 :pattern ( ($generated@@145 $generated@@147))
))) (forall (($generated@@148 (_ BitVec 15)) ) (! (= (type ($generated@@144 $generated@@148)) $generated@@143)
 :pattern ( ($generated@@144 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@143) (= (type $generated@@150) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@149 ($generated@@70 15) $generated@@150))
 :pattern ( ($generated@@69 $generated@@149 ($generated@@70 15) $generated@@150))
)))
(assert  (and (and (and (forall (($generated@@154 (_ BitVec 16)) ) (! (= ($generated@@153 ($generated@@152 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@154))
)) (= ($generated@@1 $generated@@151) 15)) (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@151) (= ($generated@@152 ($generated@@153 $generated@@155)) $generated@@155))
 :pattern ( ($generated@@153 $generated@@155))
))) (forall (($generated@@156 (_ BitVec 16)) ) (! (= (type ($generated@@152 $generated@@156)) $generated@@151)
 :pattern ( ($generated@@152 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@151) (= (type $generated@@158) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@157 ($generated@@70 16) $generated@@158))
 :pattern ( ($generated@@69 $generated@@157 ($generated@@70 16) $generated@@158))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@72 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@64 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@72) (= (type $generated@@209) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@210) ($generated@@63 $generated@@4))) (= (type $generated@@212) $generated@@72)) (= (type $generated@@213) ($generated@@63 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 Int) ) (! (= ($generated@@215 $generated@@216) $generated@@216)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(= (type ($generated@@217 $generated@@218)) $generated@@219))
 :pattern ( ($generated@@217 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= ($generated@@217 $generated@@220) $generated@@220)
 :pattern ( ($generated@@217 $generated@@220))
)))
(assert  (and (and (forall (($generated@@225 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@225)) 17)) (forall (($generated@@226 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@T) ) (! (= (type ($generated@@221 $generated@@227)) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@221 $generated@@227))
))))
(assert (forall (($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@228)) 0)
 :pattern ( ($generated@@221 $generated@@228))
)))
(assert  (and (= ($generated@@1 $generated@@231) 18) (forall (($generated@@232 T@U) ) (! (= (type ($generated@@230 $generated@@232)) $generated@@231)
 :pattern ( ($generated@@230 $generated@@232))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@61) (= (type $generated@@235) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@229 ($generated@@230 $generated@@233) $generated@@234 $generated@@235) ($generated@@69 $generated@@233 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@233) $generated@@234 $generated@@235))
)))
(assert  (and (and (and (and (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (= ($generated@@1 ($generated@@238 $generated@@241 $generated@@242)) 19)) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@239 ($generated@@238 $generated@@243 $generated@@244)) $generated@@243)
 :pattern ( ($generated@@238 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@240 ($generated@@238 $generated@@245 $generated@@246)) $generated@@246)
 :pattern ( ($generated@@238 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@239 (type $generated@@247))))
(= (type ($generated@@236 $generated@@247)) ($generated@@71 $generated@@248 $generated@@4)))
 :pattern ( ($generated@@236 $generated@@247))
))) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= (type ($generated@@237 $generated@@249 $generated@@250)) ($generated@@238 $generated@@249 $generated@@250))
 :pattern ( ($generated@@237 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@T) ) (! (let (($generated@@253 (type $generated@@251)))
 (not ($generated@@0 ($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251))))
 :pattern ( (let (($generated@@253 (type $generated@@251)))
($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251)))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 20)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@71 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@240 (type $generated@@272))))
(let (($generated@@274 ($generated@@239 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@238 $generated@@274 $generated@@273)) (or (= $generated@@272 ($generated@@237 $generated@@274 $generated@@273)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@272) $generated@@275)))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@236 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@258 (type $generated@@276))))
(let (($generated@@278 ($generated@@257 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@256 $generated@@278 $generated@@277)) (or (= $generated@@276 ($generated@@255 $generated@@278 $generated@@277)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@276) $generated@@279)))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@254 $generated@@276))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@61)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@282) ($generated@@71 $generated@@231 $generated@@4)) (= (type $generated@@283) $generated@@61)) (= (type $generated@@284) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@231) ($generated@@0 ($generated@@76 $generated@@282 $generated@@285))) ($generated@@229 $generated@@285 $generated@@283 $generated@@284))
 :pattern ( ($generated@@76 $generated@@282 $generated@@285))
))))
 :pattern ( ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@61)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (= (type $generated@@288) ($generated@@71 $generated@@231 $generated@@4)) (= (type $generated@@289) $generated@@61)) (= (type $generated@@290) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@231) ($generated@@0 ($generated@@76 $generated@@288 $generated@@291))) ($generated@@229 $generated@@291 $generated@@289 $generated@@290))
 :pattern ( ($generated@@76 $generated@@288 $generated@@291))
))))
 :pattern ( ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290))
)))
(assert  (and (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (= (type ($generated@@292 $generated@@294 $generated@@295)) $generated@@61)
 :pattern ( ($generated@@292 $generated@@294 $generated@@295))
)) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@240 (type $generated@@296))))
(let (($generated@@298 ($generated@@239 (type $generated@@296))))
(= (type ($generated@@293 $generated@@296)) ($generated@@71 $generated@@298 $generated@@297))))
 :pattern ( ($generated@@293 $generated@@296))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (= (type $generated@@299) ($generated@@238 $generated@@231 $generated@@231)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) $generated@@61)) (= (type $generated@@302) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@299 ($generated@@292 $generated@@300 $generated@@301) $generated@@302) (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@231) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@299) $generated@@303))) (and ($generated@@229 ($generated@@76 ($generated@@293 $generated@@299) $generated@@303) $generated@@301 $generated@@302) ($generated@@229 $generated@@303 $generated@@300 $generated@@302)))
 :pattern ( ($generated@@76 ($generated@@293 $generated@@299) $generated@@303))
 :pattern ( ($generated@@76 ($generated@@236 $generated@@299) $generated@@303))
))))
 :pattern ( ($generated@@69 $generated@@299 ($generated@@292 $generated@@300 $generated@@301) $generated@@302))
)))
(assert  (and (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (= (type ($generated@@304 $generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@304 $generated@@306 $generated@@307))
)) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@258 (type $generated@@308))))
(let (($generated@@310 ($generated@@257 (type $generated@@308))))
(= (type ($generated@@305 $generated@@308)) ($generated@@71 $generated@@310 $generated@@309))))
 :pattern ( ($generated@@305 $generated@@308))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@311) ($generated@@256 $generated@@231 $generated@@231)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) $generated@@61)) (= (type $generated@@314) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@231) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@311) $generated@@315))) (and ($generated@@229 ($generated@@76 ($generated@@305 $generated@@311) $generated@@315) $generated@@313 $generated@@314) ($generated@@229 $generated@@315 $generated@@312 $generated@@314)))
 :pattern ( ($generated@@76 ($generated@@305 $generated@@311) $generated@@315))
 :pattern ( ($generated@@76 ($generated@@254 $generated@@311) $generated@@315))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@71 $generated@@317 $generated@@4))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@258 (type $generated@@318))))
(let (($generated@@320 ($generated@@257 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@256 $generated@@320 $generated@@319)) (= (= $generated@@318 ($generated@@255 $generated@@320 $generated@@319)) (= ($generated@@254 $generated@@318) ($generated@@316 $generated@@320))))))
 :pattern ( ($generated@@254 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@224 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@223 $generated@@322)) (<= 0 ($generated@@222 $generated@@321))))
 :pattern ( ($generated@@222 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@61)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@61) (= (type $generated@@326) $generated@@61)) (= ($generated@@323 ($generated@@292 $generated@@325 $generated@@326)) $generated@@325))
 :pattern ( ($generated@@292 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@327 ($generated@@292 $generated@@329 $generated@@330)) $generated@@330))
 :pattern ( ($generated@@292 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@61) (= (type $generated@@332) $generated@@61)) (= ($generated@@67 ($generated@@292 $generated@@331 $generated@@332)) $generated@@58))
 :pattern ( ($generated@@292 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@61)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@61) (= (type $generated@@336) $generated@@61)) (= ($generated@@333 ($generated@@304 $generated@@335 $generated@@336)) $generated@@335))
 :pattern ( ($generated@@304 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@61) (= (type $generated@@340) $generated@@61)) (= ($generated@@337 ($generated@@304 $generated@@339 $generated@@340)) $generated@@340))
 :pattern ( ($generated@@304 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@61) (= (type $generated@@342) $generated@@61)) (= ($generated@@67 ($generated@@304 $generated@@341 $generated@@342)) $generated@@59))
 :pattern ( ($generated@@304 $generated@@341 $generated@@342))
)))
(assert  (and (forall (($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@345))
)) (forall (($generated@@346 T@U) ($generated@@347 Int) ) (! (let (($generated@@348 ($generated@@224 (type $generated@@346))))
(= (type ($generated@@344 $generated@@346 $generated@@347)) $generated@@348))
 :pattern ( ($generated@@344 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@223 $generated@@231)) (= (type $generated@@350) $generated@@61)) (= (type $generated@@351) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@349 ($generated@@343 $generated@@350) $generated@@351) (forall (($generated@@352 Int) ) (!  (=> (and (<= 0 $generated@@352) (< $generated@@352 ($generated@@222 $generated@@349))) ($generated@@229 ($generated@@344 $generated@@349 $generated@@352) $generated@@350 $generated@@351))
 :pattern ( ($generated@@344 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@69 $generated@@349 ($generated@@343 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@354 Int) ) (! (= ($generated@@353 ($generated@@70 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@70 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@355 ($generated@@280 $generated@@357)) $generated@@357))
 :pattern ( ($generated@@280 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@61) (= ($generated@@67 ($generated@@280 $generated@@358)) $generated@@54))
 :pattern ( ($generated@@280 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@359 ($generated@@286 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@286 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@67 ($generated@@286 $generated@@362)) $generated@@55))
 :pattern ( ($generated@@286 $generated@@362))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@366)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@364 ($generated@@363 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@363 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@61) (= ($generated@@67 ($generated@@363 $generated@@368)) $generated@@56))
 :pattern ( ($generated@@363 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (= (type ($generated@@369 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@369 ($generated@@343 $generated@@371)) $generated@@371))
 :pattern ( ($generated@@343 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@67 ($generated@@343 $generated@@372)) $generated@@57))
 :pattern ( ($generated@@343 $generated@@372))
)))
(assert (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated@@373 $generated@@377 ($generated@@230 $generated@@376)) $generated@@376))
 :pattern ( ($generated@@230 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
 (not ($generated@@0 ($generated@@76 ($generated@@316 $generated@@379) $generated@@378))))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@76 ($generated@@316 $generated@@379) $generated@@378)))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@71 $generated@@231 $generated@@2)) (= (type $generated@@381) $generated@@61)) (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@380 ($generated@@363 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@231) (< 0 ($generated ($generated@@76 $generated@@380 $generated@@383)))) ($generated@@229 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@76 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@69 $generated@@380 ($generated@@363 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 Int) ) (! (= ($generated@@230 ($generated@@8 ($generated@@215 $generated@@384))) ($generated@@217 ($generated@@230 ($generated@@8 $generated@@384))))
 :pattern ( ($generated@@230 ($generated@@8 ($generated@@215 $generated@@384))))
)))
(assert (forall (($generated@@385 T@U) ) (! (= ($generated@@230 ($generated@@217 $generated@@385)) ($generated@@217 ($generated@@230 $generated@@385)))
 :pattern ( ($generated@@230 ($generated@@217 $generated@@385)))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@224 (type $generated@@386))))
 (=> (and (= (type $generated@@386) ($generated@@223 $generated@@387)) (= ($generated@@222 $generated@@386) 0)) (= $generated@@386 ($generated@@221 $generated@@387))))
 :pattern ( ($generated@@222 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@389) $generated@@2)) ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
 :pattern ( ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@391) $generated@@3)) ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
 :pattern ( ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@393) $generated@@4)) ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
 :pattern ( ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
)))
(assert (= ($generated@@1 $generated@@394) 21))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@396) $generated@@394)) ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
 :pattern ( ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@398) $generated@@231)) ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
 :pattern ( ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@399 () T@U)
(declare-fun $generated@@400 () T@U)
(declare-fun $generated@@401 () T@U)
(declare-fun $generated@@402 () Int)
(declare-fun $generated@@403 () Bool)
(declare-fun $generated@@404 () Int)
(declare-fun $generated@@405 (Bool) Bool)
(declare-fun $generated@@406 () Int)
(declare-fun $generated@@407 () Bool)
(declare-fun $generated@@408 () Int)
(declare-fun $generated@@409 () Bool)
(declare-fun $generated@@410 () Int)
(declare-fun $generated@@411 () Bool)
(declare-fun $generated@@412 () Int)
(declare-fun $generated@@413 () Bool)
(declare-fun $generated@@414 () Int)
(declare-fun $generated@@415 () Bool)
(declare-fun $generated@@416 () Int)
(declare-fun $generated@@417 () Bool)
(declare-fun $generated@@418 () Int)
(declare-fun $generated@@419 () Bool)
(declare-fun $generated@@420 () Int)
(declare-fun $generated@@421 () Bool)
(declare-fun $generated@@422 () Int)
(declare-fun $generated@@423 () Bool)
(declare-fun $generated@@424 () Int)
(declare-fun $generated@@425 () Bool)
(declare-fun $generated@@426 () Int)
(declare-fun $generated@@427 (T@U) Bool)
(declare-fun $generated@@428 (T@U) Bool)
(declare-fun $generated@@429 () Int)
(assert  (and (and (= (type $generated@@399) ($generated@@161 $generated@@72 $generated@@4)) (= (type $generated@@400) $generated@@72)) (= (type $generated@@401) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@430  (=> (and (= $generated@@399 ($generated@@160 $generated@@400 $generated@@401 $generated@@60 false)) (= $generated@@402 ($generated@@215 0))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= ($generated@@215 (- 0 32768)) $generated@@402) (< $generated@@402 32768))) (=> (and (<= ($generated@@215 (- 0 32768)) $generated@@402) (< $generated@@402 32768)) (=> (= $generated@@403 (< $generated@@404 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@403) $generated@@44 $generated@@401) ($generated@@405 (< $generated@@404 0))) (and ($generated@@405 (< $generated@@404 0)) (= $generated@@406 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@215 (- 0 32768)) $generated@@406) (< $generated@@406 32768))) (=> (and (<= ($generated@@215 (- 0 32768)) $generated@@406) (< $generated@@406 32768)) (=> (= $generated@@407 (<= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@407) $generated@@44 $generated@@401) ($generated@@405 (<= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (<= $generated@@404 ($generated@@215 0))) (= $generated@@408 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@215 (- 0 32768)) $generated@@408) (< $generated@@408 32768))) (=> (and (<= ($generated@@215 (- 0 32768)) $generated@@408) (< $generated@@408 32768)) (=> (= $generated@@409 (= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@409) $generated@@44 $generated@@401) ($generated@@405 (= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (= $generated@@404 ($generated@@215 0))) (= $generated@@410 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@215 (- 0 32768)) $generated@@410) (< $generated@@410 32768))) (=> (and (<= ($generated@@215 (- 0 32768)) $generated@@410) (< $generated@@410 32768)) (=> (= $generated@@411 (not (= $generated@@404 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@411) $generated@@44 $generated@@401) ($generated@@405 (not (= $generated@@404 0)))) (and ($generated@@405 (not (= $generated@@404 0))) (= $generated@@412 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@215 (- 0 32768)) $generated@@412) (< $generated@@412 32768))) (=> (and (<= ($generated@@215 (- 0 32768)) $generated@@412) (< $generated@@412 32768)) (=> (= $generated@@413 (> $generated@@404 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@413) $generated@@44 $generated@@401) ($generated@@405 (> $generated@@404 0))) (and ($generated@@405 (> $generated@@404 0)) (= $generated@@414 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@215 (- 0 32768)) $generated@@414) (< $generated@@414 32768))) (=> (and (<= ($generated@@215 (- 0 32768)) $generated@@414) (< $generated@@414 32768)) (=> (= $generated@@415 (>= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@415) $generated@@44 $generated@@401) ($generated@@405 (>= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (>= $generated@@404 ($generated@@215 0))) (= $generated@@416 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@215 (- 0 32768)) $generated@@416) (< $generated@@416 32768))) (=> (and (<= ($generated@@215 (- 0 32768)) $generated@@416) (< $generated@@416 32768)) (=> (= $generated@@417 (< 0 $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@417) $generated@@44 $generated@@401) ($generated@@405 (< 0 $generated@@404))) (and ($generated@@405 (< 0 $generated@@404)) (= $generated@@418 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@215 (- 0 32768)) $generated@@418) (< $generated@@418 32768))) (=> (and (<= ($generated@@215 (- 0 32768)) $generated@@418) (< $generated@@418 32768)) (=> (= $generated@@419 (<= ($generated@@215 0) $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@419) $generated@@44 $generated@@401) ($generated@@405 (<= ($generated@@215 0) $generated@@404))) (and ($generated@@405 (<= ($generated@@215 0) $generated@@404)) (= $generated@@420 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@215 (- 0 32768)) $generated@@420) (< $generated@@420 32768))) (=> (and (<= ($generated@@215 (- 0 32768)) $generated@@420) (< $generated@@420 32768)) (=> (= $generated@@421 (= ($generated@@215 0) $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@421) $generated@@44 $generated@@401) ($generated@@405 (= ($generated@@215 0) $generated@@404))) (and ($generated@@405 (= ($generated@@215 0) $generated@@404)) (= $generated@@422 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@215 (- 0 32768)) $generated@@422) (< $generated@@422 32768))) (=> (and (<= ($generated@@215 (- 0 32768)) $generated@@422) (< $generated@@422 32768)) (=> (= $generated@@423 (not (= 0 $generated@@404))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@423) $generated@@44 $generated@@401) ($generated@@405 (not (= 0 $generated@@404)))) (and ($generated@@405 (not (= 0 $generated@@404))) (= $generated@@424 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@215 (- 0 32768)) $generated@@424) (< $generated@@424 32768))) (=> (and (<= ($generated@@215 (- 0 32768)) $generated@@424) (< $generated@@424 32768)) (=> (and (= $generated@@425 (> 0 $generated@@404)) ($generated@@69 ($generated@@11 $generated@@425) $generated@@44 $generated@@401)) (=> (and (and ($generated@@405 (> 0 $generated@@404)) ($generated@@405 (> 0 $generated@@404))) (and (= $generated@@426 ($generated@@215 0)) (= (ControlFlow 0 2) (- 0 1)))) (and (<= ($generated@@215 (- 0 32768)) $generated@@426) (< $generated@@426 32768)))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@431  (=> (and ($generated@@427 $generated@@401) ($generated@@428 $generated@@401)) (=> (and (and (<= ($generated@@215 (- 0 32768)) $generated@@404) (< $generated@@404 32768)) (and (= 2 $generated@@429) (= (ControlFlow 0 14) 2))) $generated@@430))))
$generated@@431)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 ((_ BitVec 7)) T@U)
(declare-fun $generated@@129 (T@U) (_ BitVec 7))
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 ((_ BitVec 8)) T@U)
(declare-fun $generated@@137 (T@U) (_ BitVec 8))
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 ((_ BitVec 15)) T@U)
(declare-fun $generated@@145 (T@U) (_ BitVec 15))
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 ((_ BitVec 16)) T@U)
(declare-fun $generated@@153 (T@U) (_ BitVec 16))
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (Int) Int)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@221 (T@T) T@U)
(declare-fun $generated@@222 (T@U) Int)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@229 (T@U T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@231 () T@T)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 (T@T T@T) T@U)
(declare-fun $generated@@238 (T@T T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@292 (T@U T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@304 (T@U T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@U Int) T@U)
(declare-fun $generated@@353 (T@U) Int)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@373 (T@T T@U) T@U)
(declare-fun $generated@@394 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (forall (($generated@@130 (_ BitVec 7)) ) (! (= ($generated@@129 ($generated@@128 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@128 $generated@@130))
)) (= ($generated@@1 $generated@@127) 12)) (forall (($generated@@131 T@U) ) (!  (=> (= (type $generated@@131) $generated@@127) (= ($generated@@128 ($generated@@129 $generated@@131)) $generated@@131))
 :pattern ( ($generated@@129 $generated@@131))
))) (forall (($generated@@132 (_ BitVec 7)) ) (! (= (type ($generated@@128 $generated@@132)) $generated@@127)
 :pattern ( ($generated@@128 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@127) (= (type $generated@@134) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@133 ($generated@@70 7) $generated@@134))
 :pattern ( ($generated@@69 $generated@@133 ($generated@@70 7) $generated@@134))
)))
(assert  (and (and (and (forall (($generated@@138 (_ BitVec 8)) ) (! (= ($generated@@137 ($generated@@136 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@136 $generated@@138))
)) (= ($generated@@1 $generated@@135) 13)) (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@135) (= ($generated@@136 ($generated@@137 $generated@@139)) $generated@@139))
 :pattern ( ($generated@@137 $generated@@139))
))) (forall (($generated@@140 (_ BitVec 8)) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@135)
 :pattern ( ($generated@@136 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@135) (= (type $generated@@142) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@141 ($generated@@70 8) $generated@@142))
 :pattern ( ($generated@@69 $generated@@141 ($generated@@70 8) $generated@@142))
)))
(assert  (and (and (and (forall (($generated@@146 (_ BitVec 15)) ) (! (= ($generated@@145 ($generated@@144 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@144 $generated@@146))
)) (= ($generated@@1 $generated@@143) 14)) (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@143) (= ($generated@@144 ($generated@@145 $generated@@147)) $generated@@147))
 :pattern ( ($generated@@145 $generated@@147))
))) (forall (($generated@@148 (_ BitVec 15)) ) (! (= (type ($generated@@144 $generated@@148)) $generated@@143)
 :pattern ( ($generated@@144 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@143) (= (type $generated@@150) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@149 ($generated@@70 15) $generated@@150))
 :pattern ( ($generated@@69 $generated@@149 ($generated@@70 15) $generated@@150))
)))
(assert  (and (and (and (forall (($generated@@154 (_ BitVec 16)) ) (! (= ($generated@@153 ($generated@@152 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@154))
)) (= ($generated@@1 $generated@@151) 15)) (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@151) (= ($generated@@152 ($generated@@153 $generated@@155)) $generated@@155))
 :pattern ( ($generated@@153 $generated@@155))
))) (forall (($generated@@156 (_ BitVec 16)) ) (! (= (type ($generated@@152 $generated@@156)) $generated@@151)
 :pattern ( ($generated@@152 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@151) (= (type $generated@@158) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@157 ($generated@@70 16) $generated@@158))
 :pattern ( ($generated@@69 $generated@@157 ($generated@@70 16) $generated@@158))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@72 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@64 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@72) (= (type $generated@@209) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@210) ($generated@@63 $generated@@4))) (= (type $generated@@212) $generated@@72)) (= (type $generated@@213) ($generated@@63 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 Int) ) (! (= ($generated@@215 $generated@@216) $generated@@216)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(= (type ($generated@@217 $generated@@218)) $generated@@219))
 :pattern ( ($generated@@217 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= ($generated@@217 $generated@@220) $generated@@220)
 :pattern ( ($generated@@217 $generated@@220))
)))
(assert  (and (and (forall (($generated@@225 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@225)) 17)) (forall (($generated@@226 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@T) ) (! (= (type ($generated@@221 $generated@@227)) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@221 $generated@@227))
))))
(assert (forall (($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@228)) 0)
 :pattern ( ($generated@@221 $generated@@228))
)))
(assert  (and (= ($generated@@1 $generated@@231) 18) (forall (($generated@@232 T@U) ) (! (= (type ($generated@@230 $generated@@232)) $generated@@231)
 :pattern ( ($generated@@230 $generated@@232))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@61) (= (type $generated@@235) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@229 ($generated@@230 $generated@@233) $generated@@234 $generated@@235) ($generated@@69 $generated@@233 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@233) $generated@@234 $generated@@235))
)))
(assert  (and (and (and (and (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (= ($generated@@1 ($generated@@238 $generated@@241 $generated@@242)) 19)) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@239 ($generated@@238 $generated@@243 $generated@@244)) $generated@@243)
 :pattern ( ($generated@@238 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@240 ($generated@@238 $generated@@245 $generated@@246)) $generated@@246)
 :pattern ( ($generated@@238 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@239 (type $generated@@247))))
(= (type ($generated@@236 $generated@@247)) ($generated@@71 $generated@@248 $generated@@4)))
 :pattern ( ($generated@@236 $generated@@247))
))) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= (type ($generated@@237 $generated@@249 $generated@@250)) ($generated@@238 $generated@@249 $generated@@250))
 :pattern ( ($generated@@237 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@T) ) (! (let (($generated@@253 (type $generated@@251)))
 (not ($generated@@0 ($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251))))
 :pattern ( (let (($generated@@253 (type $generated@@251)))
($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251)))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 20)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@71 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@240 (type $generated@@272))))
(let (($generated@@274 ($generated@@239 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@238 $generated@@274 $generated@@273)) (or (= $generated@@272 ($generated@@237 $generated@@274 $generated@@273)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@272) $generated@@275)))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@236 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@258 (type $generated@@276))))
(let (($generated@@278 ($generated@@257 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@256 $generated@@278 $generated@@277)) (or (= $generated@@276 ($generated@@255 $generated@@278 $generated@@277)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@276) $generated@@279)))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@254 $generated@@276))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@61)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@282) ($generated@@71 $generated@@231 $generated@@4)) (= (type $generated@@283) $generated@@61)) (= (type $generated@@284) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@231) ($generated@@0 ($generated@@76 $generated@@282 $generated@@285))) ($generated@@229 $generated@@285 $generated@@283 $generated@@284))
 :pattern ( ($generated@@76 $generated@@282 $generated@@285))
))))
 :pattern ( ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@61)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (= (type $generated@@288) ($generated@@71 $generated@@231 $generated@@4)) (= (type $generated@@289) $generated@@61)) (= (type $generated@@290) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@231) ($generated@@0 ($generated@@76 $generated@@288 $generated@@291))) ($generated@@229 $generated@@291 $generated@@289 $generated@@290))
 :pattern ( ($generated@@76 $generated@@288 $generated@@291))
))))
 :pattern ( ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290))
)))
(assert  (and (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (= (type ($generated@@292 $generated@@294 $generated@@295)) $generated@@61)
 :pattern ( ($generated@@292 $generated@@294 $generated@@295))
)) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@240 (type $generated@@296))))
(let (($generated@@298 ($generated@@239 (type $generated@@296))))
(= (type ($generated@@293 $generated@@296)) ($generated@@71 $generated@@298 $generated@@297))))
 :pattern ( ($generated@@293 $generated@@296))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (= (type $generated@@299) ($generated@@238 $generated@@231 $generated@@231)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) $generated@@61)) (= (type $generated@@302) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@299 ($generated@@292 $generated@@300 $generated@@301) $generated@@302) (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@231) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@299) $generated@@303))) (and ($generated@@229 ($generated@@76 ($generated@@293 $generated@@299) $generated@@303) $generated@@301 $generated@@302) ($generated@@229 $generated@@303 $generated@@300 $generated@@302)))
 :pattern ( ($generated@@76 ($generated@@293 $generated@@299) $generated@@303))
 :pattern ( ($generated@@76 ($generated@@236 $generated@@299) $generated@@303))
))))
 :pattern ( ($generated@@69 $generated@@299 ($generated@@292 $generated@@300 $generated@@301) $generated@@302))
)))
(assert  (and (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (= (type ($generated@@304 $generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@304 $generated@@306 $generated@@307))
)) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@258 (type $generated@@308))))
(let (($generated@@310 ($generated@@257 (type $generated@@308))))
(= (type ($generated@@305 $generated@@308)) ($generated@@71 $generated@@310 $generated@@309))))
 :pattern ( ($generated@@305 $generated@@308))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@311) ($generated@@256 $generated@@231 $generated@@231)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) $generated@@61)) (= (type $generated@@314) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@231) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@311) $generated@@315))) (and ($generated@@229 ($generated@@76 ($generated@@305 $generated@@311) $generated@@315) $generated@@313 $generated@@314) ($generated@@229 $generated@@315 $generated@@312 $generated@@314)))
 :pattern ( ($generated@@76 ($generated@@305 $generated@@311) $generated@@315))
 :pattern ( ($generated@@76 ($generated@@254 $generated@@311) $generated@@315))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@71 $generated@@317 $generated@@4))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@258 (type $generated@@318))))
(let (($generated@@320 ($generated@@257 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@256 $generated@@320 $generated@@319)) (= (= $generated@@318 ($generated@@255 $generated@@320 $generated@@319)) (= ($generated@@254 $generated@@318) ($generated@@316 $generated@@320))))))
 :pattern ( ($generated@@254 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@224 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@223 $generated@@322)) (<= 0 ($generated@@222 $generated@@321))))
 :pattern ( ($generated@@222 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@61)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@61) (= (type $generated@@326) $generated@@61)) (= ($generated@@323 ($generated@@292 $generated@@325 $generated@@326)) $generated@@325))
 :pattern ( ($generated@@292 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@327 ($generated@@292 $generated@@329 $generated@@330)) $generated@@330))
 :pattern ( ($generated@@292 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@61) (= (type $generated@@332) $generated@@61)) (= ($generated@@67 ($generated@@292 $generated@@331 $generated@@332)) $generated@@58))
 :pattern ( ($generated@@292 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@61)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@61) (= (type $generated@@336) $generated@@61)) (= ($generated@@333 ($generated@@304 $generated@@335 $generated@@336)) $generated@@335))
 :pattern ( ($generated@@304 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@61) (= (type $generated@@340) $generated@@61)) (= ($generated@@337 ($generated@@304 $generated@@339 $generated@@340)) $generated@@340))
 :pattern ( ($generated@@304 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@61) (= (type $generated@@342) $generated@@61)) (= ($generated@@67 ($generated@@304 $generated@@341 $generated@@342)) $generated@@59))
 :pattern ( ($generated@@304 $generated@@341 $generated@@342))
)))
(assert  (and (forall (($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@345))
)) (forall (($generated@@346 T@U) ($generated@@347 Int) ) (! (let (($generated@@348 ($generated@@224 (type $generated@@346))))
(= (type ($generated@@344 $generated@@346 $generated@@347)) $generated@@348))
 :pattern ( ($generated@@344 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@223 $generated@@231)) (= (type $generated@@350) $generated@@61)) (= (type $generated@@351) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@349 ($generated@@343 $generated@@350) $generated@@351) (forall (($generated@@352 Int) ) (!  (=> (and (<= 0 $generated@@352) (< $generated@@352 ($generated@@222 $generated@@349))) ($generated@@229 ($generated@@344 $generated@@349 $generated@@352) $generated@@350 $generated@@351))
 :pattern ( ($generated@@344 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@69 $generated@@349 ($generated@@343 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@354 Int) ) (! (= ($generated@@353 ($generated@@70 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@70 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@355 ($generated@@280 $generated@@357)) $generated@@357))
 :pattern ( ($generated@@280 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@61) (= ($generated@@67 ($generated@@280 $generated@@358)) $generated@@54))
 :pattern ( ($generated@@280 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@359 ($generated@@286 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@286 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@67 ($generated@@286 $generated@@362)) $generated@@55))
 :pattern ( ($generated@@286 $generated@@362))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@366)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@364 ($generated@@363 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@363 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@61) (= ($generated@@67 ($generated@@363 $generated@@368)) $generated@@56))
 :pattern ( ($generated@@363 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (= (type ($generated@@369 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@369 ($generated@@343 $generated@@371)) $generated@@371))
 :pattern ( ($generated@@343 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@67 ($generated@@343 $generated@@372)) $generated@@57))
 :pattern ( ($generated@@343 $generated@@372))
)))
(assert (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated@@373 $generated@@377 ($generated@@230 $generated@@376)) $generated@@376))
 :pattern ( ($generated@@230 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
 (not ($generated@@0 ($generated@@76 ($generated@@316 $generated@@379) $generated@@378))))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@76 ($generated@@316 $generated@@379) $generated@@378)))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@71 $generated@@231 $generated@@2)) (= (type $generated@@381) $generated@@61)) (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@380 ($generated@@363 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@231) (< 0 ($generated ($generated@@76 $generated@@380 $generated@@383)))) ($generated@@229 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@76 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@69 $generated@@380 ($generated@@363 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 Int) ) (! (= ($generated@@230 ($generated@@8 ($generated@@215 $generated@@384))) ($generated@@217 ($generated@@230 ($generated@@8 $generated@@384))))
 :pattern ( ($generated@@230 ($generated@@8 ($generated@@215 $generated@@384))))
)))
(assert (forall (($generated@@385 T@U) ) (! (= ($generated@@230 ($generated@@217 $generated@@385)) ($generated@@217 ($generated@@230 $generated@@385)))
 :pattern ( ($generated@@230 ($generated@@217 $generated@@385)))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@224 (type $generated@@386))))
 (=> (and (= (type $generated@@386) ($generated@@223 $generated@@387)) (= ($generated@@222 $generated@@386) 0)) (= $generated@@386 ($generated@@221 $generated@@387))))
 :pattern ( ($generated@@222 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@389) $generated@@2)) ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
 :pattern ( ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@391) $generated@@3)) ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
 :pattern ( ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@393) $generated@@4)) ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
 :pattern ( ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
)))
(assert (= ($generated@@1 $generated@@394) 21))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@396) $generated@@394)) ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
 :pattern ( ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@398) $generated@@231)) ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
 :pattern ( ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@399 () T@U)
(declare-fun $generated@@400 () T@U)
(declare-fun $generated@@401 () T@U)
(declare-fun $generated@@402 () Int)
(declare-fun $generated@@403 () Bool)
(declare-fun $generated@@404 () Int)
(declare-fun $generated@@405 (Bool) Bool)
(declare-fun $generated@@406 () Int)
(declare-fun $generated@@407 () Bool)
(declare-fun $generated@@408 () Int)
(declare-fun $generated@@409 () Bool)
(declare-fun $generated@@410 () Int)
(declare-fun $generated@@411 () Bool)
(declare-fun $generated@@412 () Int)
(declare-fun $generated@@413 () Bool)
(declare-fun $generated@@414 () Int)
(declare-fun $generated@@415 () Bool)
(declare-fun $generated@@416 () Int)
(declare-fun $generated@@417 () Bool)
(declare-fun $generated@@418 () Int)
(declare-fun $generated@@419 () Bool)
(declare-fun $generated@@420 () Int)
(declare-fun $generated@@421 () Bool)
(declare-fun $generated@@422 () Int)
(declare-fun $generated@@423 () Bool)
(declare-fun $generated@@424 () Int)
(declare-fun $generated@@425 () Bool)
(declare-fun $generated@@426 () Int)
(declare-fun $generated@@427 (T@U) Bool)
(declare-fun $generated@@428 (T@U) Bool)
(declare-fun $generated@@429 () Int)
(assert  (and (and (= (type $generated@@399) ($generated@@161 $generated@@72 $generated@@4)) (= (type $generated@@400) $generated@@72)) (= (type $generated@@401) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@430  (=> (and (= $generated@@399 ($generated@@160 $generated@@400 $generated@@401 $generated@@60 false)) (= $generated@@402 ($generated@@215 0))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@402) (< $generated@@402 2147483648))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@402) (< $generated@@402 2147483648)) (=> (= $generated@@403 (< $generated@@404 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@403) $generated@@44 $generated@@401) ($generated@@405 (< $generated@@404 0))) (and ($generated@@405 (< $generated@@404 0)) (= $generated@@406 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@406) (< $generated@@406 2147483648))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@406) (< $generated@@406 2147483648)) (=> (= $generated@@407 (<= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@407) $generated@@44 $generated@@401) ($generated@@405 (<= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (<= $generated@@404 ($generated@@215 0))) (= $generated@@408 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@408) (< $generated@@408 2147483648))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@408) (< $generated@@408 2147483648)) (=> (= $generated@@409 (= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@409) $generated@@44 $generated@@401) ($generated@@405 (= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (= $generated@@404 ($generated@@215 0))) (= $generated@@410 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@410) (< $generated@@410 2147483648))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@410) (< $generated@@410 2147483648)) (=> (= $generated@@411 (not (= $generated@@404 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@411) $generated@@44 $generated@@401) ($generated@@405 (not (= $generated@@404 0)))) (and ($generated@@405 (not (= $generated@@404 0))) (= $generated@@412 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@412) (< $generated@@412 2147483648))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@412) (< $generated@@412 2147483648)) (=> (= $generated@@413 (> $generated@@404 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@413) $generated@@44 $generated@@401) ($generated@@405 (> $generated@@404 0))) (and ($generated@@405 (> $generated@@404 0)) (= $generated@@414 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@414) (< $generated@@414 2147483648))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@414) (< $generated@@414 2147483648)) (=> (= $generated@@415 (>= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@415) $generated@@44 $generated@@401) ($generated@@405 (>= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (>= $generated@@404 ($generated@@215 0))) (= $generated@@416 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@416) (< $generated@@416 2147483648))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@416) (< $generated@@416 2147483648)) (=> (= $generated@@417 (< 0 $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@417) $generated@@44 $generated@@401) ($generated@@405 (< 0 $generated@@404))) (and ($generated@@405 (< 0 $generated@@404)) (= $generated@@418 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@418) (< $generated@@418 2147483648))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@418) (< $generated@@418 2147483648)) (=> (= $generated@@419 (<= ($generated@@215 0) $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@419) $generated@@44 $generated@@401) ($generated@@405 (<= ($generated@@215 0) $generated@@404))) (and ($generated@@405 (<= ($generated@@215 0) $generated@@404)) (= $generated@@420 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@420) (< $generated@@420 2147483648))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@420) (< $generated@@420 2147483648)) (=> (= $generated@@421 (= ($generated@@215 0) $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@421) $generated@@44 $generated@@401) ($generated@@405 (= ($generated@@215 0) $generated@@404))) (and ($generated@@405 (= ($generated@@215 0) $generated@@404)) (= $generated@@422 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@422) (< $generated@@422 2147483648))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@422) (< $generated@@422 2147483648)) (=> (= $generated@@423 (not (= 0 $generated@@404))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@423) $generated@@44 $generated@@401) ($generated@@405 (not (= 0 $generated@@404)))) (and ($generated@@405 (not (= 0 $generated@@404))) (= $generated@@424 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@424) (< $generated@@424 2147483648))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@424) (< $generated@@424 2147483648)) (=> (and (= $generated@@425 (> 0 $generated@@404)) ($generated@@69 ($generated@@11 $generated@@425) $generated@@44 $generated@@401)) (=> (and (and ($generated@@405 (> 0 $generated@@404)) ($generated@@405 (> 0 $generated@@404))) (and (= $generated@@426 ($generated@@215 0)) (= (ControlFlow 0 2) (- 0 1)))) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@426) (< $generated@@426 2147483648)))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@431  (=> (and ($generated@@427 $generated@@401) ($generated@@428 $generated@@401)) (=> (and (and (<= ($generated@@215 (- 0 2147483648)) $generated@@404) (< $generated@@404 2147483648)) (and (= 2 $generated@@429) (= (ControlFlow 0 14) 2))) $generated@@430))))
$generated@@431)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 ((_ BitVec 7)) T@U)
(declare-fun $generated@@129 (T@U) (_ BitVec 7))
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 ((_ BitVec 8)) T@U)
(declare-fun $generated@@137 (T@U) (_ BitVec 8))
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 ((_ BitVec 15)) T@U)
(declare-fun $generated@@145 (T@U) (_ BitVec 15))
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 ((_ BitVec 16)) T@U)
(declare-fun $generated@@153 (T@U) (_ BitVec 16))
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (Int) Int)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@221 (T@T) T@U)
(declare-fun $generated@@222 (T@U) Int)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@229 (T@U T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@231 () T@T)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 (T@T T@T) T@U)
(declare-fun $generated@@238 (T@T T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@292 (T@U T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@304 (T@U T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@U Int) T@U)
(declare-fun $generated@@353 (T@U) Int)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@373 (T@T T@U) T@U)
(declare-fun $generated@@394 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (forall (($generated@@130 (_ BitVec 7)) ) (! (= ($generated@@129 ($generated@@128 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@128 $generated@@130))
)) (= ($generated@@1 $generated@@127) 12)) (forall (($generated@@131 T@U) ) (!  (=> (= (type $generated@@131) $generated@@127) (= ($generated@@128 ($generated@@129 $generated@@131)) $generated@@131))
 :pattern ( ($generated@@129 $generated@@131))
))) (forall (($generated@@132 (_ BitVec 7)) ) (! (= (type ($generated@@128 $generated@@132)) $generated@@127)
 :pattern ( ($generated@@128 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@127) (= (type $generated@@134) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@133 ($generated@@70 7) $generated@@134))
 :pattern ( ($generated@@69 $generated@@133 ($generated@@70 7) $generated@@134))
)))
(assert  (and (and (and (forall (($generated@@138 (_ BitVec 8)) ) (! (= ($generated@@137 ($generated@@136 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@136 $generated@@138))
)) (= ($generated@@1 $generated@@135) 13)) (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@135) (= ($generated@@136 ($generated@@137 $generated@@139)) $generated@@139))
 :pattern ( ($generated@@137 $generated@@139))
))) (forall (($generated@@140 (_ BitVec 8)) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@135)
 :pattern ( ($generated@@136 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@135) (= (type $generated@@142) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@141 ($generated@@70 8) $generated@@142))
 :pattern ( ($generated@@69 $generated@@141 ($generated@@70 8) $generated@@142))
)))
(assert  (and (and (and (forall (($generated@@146 (_ BitVec 15)) ) (! (= ($generated@@145 ($generated@@144 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@144 $generated@@146))
)) (= ($generated@@1 $generated@@143) 14)) (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@143) (= ($generated@@144 ($generated@@145 $generated@@147)) $generated@@147))
 :pattern ( ($generated@@145 $generated@@147))
))) (forall (($generated@@148 (_ BitVec 15)) ) (! (= (type ($generated@@144 $generated@@148)) $generated@@143)
 :pattern ( ($generated@@144 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@143) (= (type $generated@@150) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@149 ($generated@@70 15) $generated@@150))
 :pattern ( ($generated@@69 $generated@@149 ($generated@@70 15) $generated@@150))
)))
(assert  (and (and (and (forall (($generated@@154 (_ BitVec 16)) ) (! (= ($generated@@153 ($generated@@152 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@154))
)) (= ($generated@@1 $generated@@151) 15)) (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@151) (= ($generated@@152 ($generated@@153 $generated@@155)) $generated@@155))
 :pattern ( ($generated@@153 $generated@@155))
))) (forall (($generated@@156 (_ BitVec 16)) ) (! (= (type ($generated@@152 $generated@@156)) $generated@@151)
 :pattern ( ($generated@@152 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@151) (= (type $generated@@158) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@157 ($generated@@70 16) $generated@@158))
 :pattern ( ($generated@@69 $generated@@157 ($generated@@70 16) $generated@@158))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@72 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@64 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@72) (= (type $generated@@209) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@210) ($generated@@63 $generated@@4))) (= (type $generated@@212) $generated@@72)) (= (type $generated@@213) ($generated@@63 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 Int) ) (! (= ($generated@@215 $generated@@216) $generated@@216)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(= (type ($generated@@217 $generated@@218)) $generated@@219))
 :pattern ( ($generated@@217 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= ($generated@@217 $generated@@220) $generated@@220)
 :pattern ( ($generated@@217 $generated@@220))
)))
(assert  (and (and (forall (($generated@@225 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@225)) 17)) (forall (($generated@@226 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@T) ) (! (= (type ($generated@@221 $generated@@227)) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@221 $generated@@227))
))))
(assert (forall (($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@228)) 0)
 :pattern ( ($generated@@221 $generated@@228))
)))
(assert  (and (= ($generated@@1 $generated@@231) 18) (forall (($generated@@232 T@U) ) (! (= (type ($generated@@230 $generated@@232)) $generated@@231)
 :pattern ( ($generated@@230 $generated@@232))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@61) (= (type $generated@@235) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@229 ($generated@@230 $generated@@233) $generated@@234 $generated@@235) ($generated@@69 $generated@@233 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@233) $generated@@234 $generated@@235))
)))
(assert  (and (and (and (and (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (= ($generated@@1 ($generated@@238 $generated@@241 $generated@@242)) 19)) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@239 ($generated@@238 $generated@@243 $generated@@244)) $generated@@243)
 :pattern ( ($generated@@238 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@240 ($generated@@238 $generated@@245 $generated@@246)) $generated@@246)
 :pattern ( ($generated@@238 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@239 (type $generated@@247))))
(= (type ($generated@@236 $generated@@247)) ($generated@@71 $generated@@248 $generated@@4)))
 :pattern ( ($generated@@236 $generated@@247))
))) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= (type ($generated@@237 $generated@@249 $generated@@250)) ($generated@@238 $generated@@249 $generated@@250))
 :pattern ( ($generated@@237 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@T) ) (! (let (($generated@@253 (type $generated@@251)))
 (not ($generated@@0 ($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251))))
 :pattern ( (let (($generated@@253 (type $generated@@251)))
($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251)))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 20)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@71 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@240 (type $generated@@272))))
(let (($generated@@274 ($generated@@239 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@238 $generated@@274 $generated@@273)) (or (= $generated@@272 ($generated@@237 $generated@@274 $generated@@273)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@272) $generated@@275)))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@236 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@258 (type $generated@@276))))
(let (($generated@@278 ($generated@@257 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@256 $generated@@278 $generated@@277)) (or (= $generated@@276 ($generated@@255 $generated@@278 $generated@@277)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@276) $generated@@279)))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@254 $generated@@276))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@61)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@282) ($generated@@71 $generated@@231 $generated@@4)) (= (type $generated@@283) $generated@@61)) (= (type $generated@@284) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@231) ($generated@@0 ($generated@@76 $generated@@282 $generated@@285))) ($generated@@229 $generated@@285 $generated@@283 $generated@@284))
 :pattern ( ($generated@@76 $generated@@282 $generated@@285))
))))
 :pattern ( ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@61)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (= (type $generated@@288) ($generated@@71 $generated@@231 $generated@@4)) (= (type $generated@@289) $generated@@61)) (= (type $generated@@290) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@231) ($generated@@0 ($generated@@76 $generated@@288 $generated@@291))) ($generated@@229 $generated@@291 $generated@@289 $generated@@290))
 :pattern ( ($generated@@76 $generated@@288 $generated@@291))
))))
 :pattern ( ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290))
)))
(assert  (and (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (= (type ($generated@@292 $generated@@294 $generated@@295)) $generated@@61)
 :pattern ( ($generated@@292 $generated@@294 $generated@@295))
)) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@240 (type $generated@@296))))
(let (($generated@@298 ($generated@@239 (type $generated@@296))))
(= (type ($generated@@293 $generated@@296)) ($generated@@71 $generated@@298 $generated@@297))))
 :pattern ( ($generated@@293 $generated@@296))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (= (type $generated@@299) ($generated@@238 $generated@@231 $generated@@231)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) $generated@@61)) (= (type $generated@@302) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@299 ($generated@@292 $generated@@300 $generated@@301) $generated@@302) (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@231) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@299) $generated@@303))) (and ($generated@@229 ($generated@@76 ($generated@@293 $generated@@299) $generated@@303) $generated@@301 $generated@@302) ($generated@@229 $generated@@303 $generated@@300 $generated@@302)))
 :pattern ( ($generated@@76 ($generated@@293 $generated@@299) $generated@@303))
 :pattern ( ($generated@@76 ($generated@@236 $generated@@299) $generated@@303))
))))
 :pattern ( ($generated@@69 $generated@@299 ($generated@@292 $generated@@300 $generated@@301) $generated@@302))
)))
(assert  (and (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (= (type ($generated@@304 $generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@304 $generated@@306 $generated@@307))
)) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@258 (type $generated@@308))))
(let (($generated@@310 ($generated@@257 (type $generated@@308))))
(= (type ($generated@@305 $generated@@308)) ($generated@@71 $generated@@310 $generated@@309))))
 :pattern ( ($generated@@305 $generated@@308))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@311) ($generated@@256 $generated@@231 $generated@@231)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) $generated@@61)) (= (type $generated@@314) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@231) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@311) $generated@@315))) (and ($generated@@229 ($generated@@76 ($generated@@305 $generated@@311) $generated@@315) $generated@@313 $generated@@314) ($generated@@229 $generated@@315 $generated@@312 $generated@@314)))
 :pattern ( ($generated@@76 ($generated@@305 $generated@@311) $generated@@315))
 :pattern ( ($generated@@76 ($generated@@254 $generated@@311) $generated@@315))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@71 $generated@@317 $generated@@4))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@258 (type $generated@@318))))
(let (($generated@@320 ($generated@@257 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@256 $generated@@320 $generated@@319)) (= (= $generated@@318 ($generated@@255 $generated@@320 $generated@@319)) (= ($generated@@254 $generated@@318) ($generated@@316 $generated@@320))))))
 :pattern ( ($generated@@254 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@224 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@223 $generated@@322)) (<= 0 ($generated@@222 $generated@@321))))
 :pattern ( ($generated@@222 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@61)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@61) (= (type $generated@@326) $generated@@61)) (= ($generated@@323 ($generated@@292 $generated@@325 $generated@@326)) $generated@@325))
 :pattern ( ($generated@@292 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@327 ($generated@@292 $generated@@329 $generated@@330)) $generated@@330))
 :pattern ( ($generated@@292 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@61) (= (type $generated@@332) $generated@@61)) (= ($generated@@67 ($generated@@292 $generated@@331 $generated@@332)) $generated@@58))
 :pattern ( ($generated@@292 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@61)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@61) (= (type $generated@@336) $generated@@61)) (= ($generated@@333 ($generated@@304 $generated@@335 $generated@@336)) $generated@@335))
 :pattern ( ($generated@@304 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@61) (= (type $generated@@340) $generated@@61)) (= ($generated@@337 ($generated@@304 $generated@@339 $generated@@340)) $generated@@340))
 :pattern ( ($generated@@304 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@61) (= (type $generated@@342) $generated@@61)) (= ($generated@@67 ($generated@@304 $generated@@341 $generated@@342)) $generated@@59))
 :pattern ( ($generated@@304 $generated@@341 $generated@@342))
)))
(assert  (and (forall (($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@345))
)) (forall (($generated@@346 T@U) ($generated@@347 Int) ) (! (let (($generated@@348 ($generated@@224 (type $generated@@346))))
(= (type ($generated@@344 $generated@@346 $generated@@347)) $generated@@348))
 :pattern ( ($generated@@344 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@223 $generated@@231)) (= (type $generated@@350) $generated@@61)) (= (type $generated@@351) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@349 ($generated@@343 $generated@@350) $generated@@351) (forall (($generated@@352 Int) ) (!  (=> (and (<= 0 $generated@@352) (< $generated@@352 ($generated@@222 $generated@@349))) ($generated@@229 ($generated@@344 $generated@@349 $generated@@352) $generated@@350 $generated@@351))
 :pattern ( ($generated@@344 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@69 $generated@@349 ($generated@@343 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@354 Int) ) (! (= ($generated@@353 ($generated@@70 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@70 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@355 ($generated@@280 $generated@@357)) $generated@@357))
 :pattern ( ($generated@@280 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@61) (= ($generated@@67 ($generated@@280 $generated@@358)) $generated@@54))
 :pattern ( ($generated@@280 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@359 ($generated@@286 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@286 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@67 ($generated@@286 $generated@@362)) $generated@@55))
 :pattern ( ($generated@@286 $generated@@362))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@366)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@364 ($generated@@363 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@363 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@61) (= ($generated@@67 ($generated@@363 $generated@@368)) $generated@@56))
 :pattern ( ($generated@@363 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (= (type ($generated@@369 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@369 ($generated@@343 $generated@@371)) $generated@@371))
 :pattern ( ($generated@@343 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@67 ($generated@@343 $generated@@372)) $generated@@57))
 :pattern ( ($generated@@343 $generated@@372))
)))
(assert (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated@@373 $generated@@377 ($generated@@230 $generated@@376)) $generated@@376))
 :pattern ( ($generated@@230 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
 (not ($generated@@0 ($generated@@76 ($generated@@316 $generated@@379) $generated@@378))))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@76 ($generated@@316 $generated@@379) $generated@@378)))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@71 $generated@@231 $generated@@2)) (= (type $generated@@381) $generated@@61)) (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@380 ($generated@@363 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@231) (< 0 ($generated ($generated@@76 $generated@@380 $generated@@383)))) ($generated@@229 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@76 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@69 $generated@@380 ($generated@@363 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 Int) ) (! (= ($generated@@230 ($generated@@8 ($generated@@215 $generated@@384))) ($generated@@217 ($generated@@230 ($generated@@8 $generated@@384))))
 :pattern ( ($generated@@230 ($generated@@8 ($generated@@215 $generated@@384))))
)))
(assert (forall (($generated@@385 T@U) ) (! (= ($generated@@230 ($generated@@217 $generated@@385)) ($generated@@217 ($generated@@230 $generated@@385)))
 :pattern ( ($generated@@230 ($generated@@217 $generated@@385)))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@224 (type $generated@@386))))
 (=> (and (= (type $generated@@386) ($generated@@223 $generated@@387)) (= ($generated@@222 $generated@@386) 0)) (= $generated@@386 ($generated@@221 $generated@@387))))
 :pattern ( ($generated@@222 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@389) $generated@@2)) ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
 :pattern ( ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@391) $generated@@3)) ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
 :pattern ( ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@393) $generated@@4)) ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
 :pattern ( ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
)))
(assert (= ($generated@@1 $generated@@394) 21))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@396) $generated@@394)) ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
 :pattern ( ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@398) $generated@@231)) ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
 :pattern ( ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@399 () T@U)
(declare-fun $generated@@400 () T@U)
(declare-fun $generated@@401 () T@U)
(declare-fun $generated@@402 () Int)
(declare-fun $generated@@403 () Bool)
(declare-fun $generated@@404 () Int)
(declare-fun $generated@@405 (Bool) Bool)
(declare-fun $generated@@406 () Int)
(declare-fun $generated@@407 () Bool)
(declare-fun $generated@@408 () Int)
(declare-fun $generated@@409 () Bool)
(declare-fun $generated@@410 () Int)
(declare-fun $generated@@411 () Bool)
(declare-fun $generated@@412 () Int)
(declare-fun $generated@@413 () Bool)
(declare-fun $generated@@414 () Int)
(declare-fun $generated@@415 () Bool)
(declare-fun $generated@@416 () Int)
(declare-fun $generated@@417 () Bool)
(declare-fun $generated@@418 () Int)
(declare-fun $generated@@419 () Bool)
(declare-fun $generated@@420 () Int)
(declare-fun $generated@@421 () Bool)
(declare-fun $generated@@422 () Int)
(declare-fun $generated@@423 () Bool)
(declare-fun $generated@@424 () Int)
(declare-fun $generated@@425 () Bool)
(declare-fun $generated@@426 () Int)
(declare-fun $generated@@427 (T@U) Bool)
(declare-fun $generated@@428 (T@U) Bool)
(declare-fun $generated@@429 () Int)
(assert  (and (and (= (type $generated@@399) ($generated@@161 $generated@@72 $generated@@4)) (= (type $generated@@400) $generated@@72)) (= (type $generated@@401) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@430  (=> (and (= $generated@@399 ($generated@@160 $generated@@400 $generated@@401 $generated@@60 false)) (= $generated@@402 ($generated@@215 0))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@402) (< $generated@@402 9223372036854775808))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@402) (< $generated@@402 9223372036854775808)) (=> (= $generated@@403 (< $generated@@404 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@403) $generated@@44 $generated@@401) ($generated@@405 (< $generated@@404 0))) (and ($generated@@405 (< $generated@@404 0)) (= $generated@@406 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@406) (< $generated@@406 9223372036854775808))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@406) (< $generated@@406 9223372036854775808)) (=> (= $generated@@407 (<= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@407) $generated@@44 $generated@@401) ($generated@@405 (<= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (<= $generated@@404 ($generated@@215 0))) (= $generated@@408 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@408) (< $generated@@408 9223372036854775808))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@408) (< $generated@@408 9223372036854775808)) (=> (= $generated@@409 (= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@409) $generated@@44 $generated@@401) ($generated@@405 (= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (= $generated@@404 ($generated@@215 0))) (= $generated@@410 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@410) (< $generated@@410 9223372036854775808))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@410) (< $generated@@410 9223372036854775808)) (=> (= $generated@@411 (not (= $generated@@404 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@411) $generated@@44 $generated@@401) ($generated@@405 (not (= $generated@@404 0)))) (and ($generated@@405 (not (= $generated@@404 0))) (= $generated@@412 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@412) (< $generated@@412 9223372036854775808))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@412) (< $generated@@412 9223372036854775808)) (=> (= $generated@@413 (> $generated@@404 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@413) $generated@@44 $generated@@401) ($generated@@405 (> $generated@@404 0))) (and ($generated@@405 (> $generated@@404 0)) (= $generated@@414 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@414) (< $generated@@414 9223372036854775808))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@414) (< $generated@@414 9223372036854775808)) (=> (= $generated@@415 (>= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@415) $generated@@44 $generated@@401) ($generated@@405 (>= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (>= $generated@@404 ($generated@@215 0))) (= $generated@@416 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@416) (< $generated@@416 9223372036854775808))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@416) (< $generated@@416 9223372036854775808)) (=> (= $generated@@417 (< 0 $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@417) $generated@@44 $generated@@401) ($generated@@405 (< 0 $generated@@404))) (and ($generated@@405 (< 0 $generated@@404)) (= $generated@@418 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@418) (< $generated@@418 9223372036854775808))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@418) (< $generated@@418 9223372036854775808)) (=> (= $generated@@419 (<= ($generated@@215 0) $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@419) $generated@@44 $generated@@401) ($generated@@405 (<= ($generated@@215 0) $generated@@404))) (and ($generated@@405 (<= ($generated@@215 0) $generated@@404)) (= $generated@@420 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@420) (< $generated@@420 9223372036854775808))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@420) (< $generated@@420 9223372036854775808)) (=> (= $generated@@421 (= ($generated@@215 0) $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@421) $generated@@44 $generated@@401) ($generated@@405 (= ($generated@@215 0) $generated@@404))) (and ($generated@@405 (= ($generated@@215 0) $generated@@404)) (= $generated@@422 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@422) (< $generated@@422 9223372036854775808))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@422) (< $generated@@422 9223372036854775808)) (=> (= $generated@@423 (not (= 0 $generated@@404))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@423) $generated@@44 $generated@@401) ($generated@@405 (not (= 0 $generated@@404)))) (and ($generated@@405 (not (= 0 $generated@@404))) (= $generated@@424 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@424) (< $generated@@424 9223372036854775808))) (=> (and (<= ($generated@@215 (- 0 2147483648)) $generated@@424) (< $generated@@424 9223372036854775808)) (=> (and (= $generated@@425 (> 0 $generated@@404)) ($generated@@69 ($generated@@11 $generated@@425) $generated@@44 $generated@@401)) (=> (and (and ($generated@@405 (> 0 $generated@@404)) ($generated@@405 (> 0 $generated@@404))) (and (= $generated@@426 ($generated@@215 0)) (= (ControlFlow 0 2) (- 0 1)))) (and (<= ($generated@@215 (- 0 2147483648)) $generated@@426) (< $generated@@426 9223372036854775808)))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@431  (=> (and ($generated@@427 $generated@@401) ($generated@@428 $generated@@401)) (=> (and (and (<= ($generated@@215 (- 0 2147483648)) $generated@@404) (< $generated@@404 9223372036854775808)) (and (= 2 $generated@@429) (= (ControlFlow 0 14) 2))) $generated@@430))))
$generated@@431)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 ((_ BitVec 7)) T@U)
(declare-fun $generated@@129 (T@U) (_ BitVec 7))
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 ((_ BitVec 8)) T@U)
(declare-fun $generated@@137 (T@U) (_ BitVec 8))
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 ((_ BitVec 15)) T@U)
(declare-fun $generated@@145 (T@U) (_ BitVec 15))
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 ((_ BitVec 16)) T@U)
(declare-fun $generated@@153 (T@U) (_ BitVec 16))
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (Int) Int)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@221 (T@T) T@U)
(declare-fun $generated@@222 (T@U) Int)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@229 (T@U T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@231 () T@T)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 (T@T T@T) T@U)
(declare-fun $generated@@238 (T@T T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@292 (T@U T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@304 (T@U T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@U Int) T@U)
(declare-fun $generated@@353 (T@U) Int)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@373 (T@T T@U) T@U)
(declare-fun $generated@@394 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (forall (($generated@@130 (_ BitVec 7)) ) (! (= ($generated@@129 ($generated@@128 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@128 $generated@@130))
)) (= ($generated@@1 $generated@@127) 12)) (forall (($generated@@131 T@U) ) (!  (=> (= (type $generated@@131) $generated@@127) (= ($generated@@128 ($generated@@129 $generated@@131)) $generated@@131))
 :pattern ( ($generated@@129 $generated@@131))
))) (forall (($generated@@132 (_ BitVec 7)) ) (! (= (type ($generated@@128 $generated@@132)) $generated@@127)
 :pattern ( ($generated@@128 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@127) (= (type $generated@@134) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@133 ($generated@@70 7) $generated@@134))
 :pattern ( ($generated@@69 $generated@@133 ($generated@@70 7) $generated@@134))
)))
(assert  (and (and (and (forall (($generated@@138 (_ BitVec 8)) ) (! (= ($generated@@137 ($generated@@136 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@136 $generated@@138))
)) (= ($generated@@1 $generated@@135) 13)) (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@135) (= ($generated@@136 ($generated@@137 $generated@@139)) $generated@@139))
 :pattern ( ($generated@@137 $generated@@139))
))) (forall (($generated@@140 (_ BitVec 8)) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@135)
 :pattern ( ($generated@@136 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@135) (= (type $generated@@142) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@141 ($generated@@70 8) $generated@@142))
 :pattern ( ($generated@@69 $generated@@141 ($generated@@70 8) $generated@@142))
)))
(assert  (and (and (and (forall (($generated@@146 (_ BitVec 15)) ) (! (= ($generated@@145 ($generated@@144 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@144 $generated@@146))
)) (= ($generated@@1 $generated@@143) 14)) (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@143) (= ($generated@@144 ($generated@@145 $generated@@147)) $generated@@147))
 :pattern ( ($generated@@145 $generated@@147))
))) (forall (($generated@@148 (_ BitVec 15)) ) (! (= (type ($generated@@144 $generated@@148)) $generated@@143)
 :pattern ( ($generated@@144 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@143) (= (type $generated@@150) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@149 ($generated@@70 15) $generated@@150))
 :pattern ( ($generated@@69 $generated@@149 ($generated@@70 15) $generated@@150))
)))
(assert  (and (and (and (forall (($generated@@154 (_ BitVec 16)) ) (! (= ($generated@@153 ($generated@@152 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@154))
)) (= ($generated@@1 $generated@@151) 15)) (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@151) (= ($generated@@152 ($generated@@153 $generated@@155)) $generated@@155))
 :pattern ( ($generated@@153 $generated@@155))
))) (forall (($generated@@156 (_ BitVec 16)) ) (! (= (type ($generated@@152 $generated@@156)) $generated@@151)
 :pattern ( ($generated@@152 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@151) (= (type $generated@@158) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@157 ($generated@@70 16) $generated@@158))
 :pattern ( ($generated@@69 $generated@@157 ($generated@@70 16) $generated@@158))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@72 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@64 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@72) (= (type $generated@@209) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@210) ($generated@@63 $generated@@4))) (= (type $generated@@212) $generated@@72)) (= (type $generated@@213) ($generated@@63 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 Int) ) (! (= ($generated@@215 $generated@@216) $generated@@216)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(= (type ($generated@@217 $generated@@218)) $generated@@219))
 :pattern ( ($generated@@217 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= ($generated@@217 $generated@@220) $generated@@220)
 :pattern ( ($generated@@217 $generated@@220))
)))
(assert  (and (and (forall (($generated@@225 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@225)) 17)) (forall (($generated@@226 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@T) ) (! (= (type ($generated@@221 $generated@@227)) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@221 $generated@@227))
))))
(assert (forall (($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@228)) 0)
 :pattern ( ($generated@@221 $generated@@228))
)))
(assert  (and (= ($generated@@1 $generated@@231) 18) (forall (($generated@@232 T@U) ) (! (= (type ($generated@@230 $generated@@232)) $generated@@231)
 :pattern ( ($generated@@230 $generated@@232))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@61) (= (type $generated@@235) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@229 ($generated@@230 $generated@@233) $generated@@234 $generated@@235) ($generated@@69 $generated@@233 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@233) $generated@@234 $generated@@235))
)))
(assert  (and (and (and (and (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (= ($generated@@1 ($generated@@238 $generated@@241 $generated@@242)) 19)) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@239 ($generated@@238 $generated@@243 $generated@@244)) $generated@@243)
 :pattern ( ($generated@@238 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@240 ($generated@@238 $generated@@245 $generated@@246)) $generated@@246)
 :pattern ( ($generated@@238 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@239 (type $generated@@247))))
(= (type ($generated@@236 $generated@@247)) ($generated@@71 $generated@@248 $generated@@4)))
 :pattern ( ($generated@@236 $generated@@247))
))) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= (type ($generated@@237 $generated@@249 $generated@@250)) ($generated@@238 $generated@@249 $generated@@250))
 :pattern ( ($generated@@237 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@T) ) (! (let (($generated@@253 (type $generated@@251)))
 (not ($generated@@0 ($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251))))
 :pattern ( (let (($generated@@253 (type $generated@@251)))
($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251)))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 20)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@71 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@240 (type $generated@@272))))
(let (($generated@@274 ($generated@@239 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@238 $generated@@274 $generated@@273)) (or (= $generated@@272 ($generated@@237 $generated@@274 $generated@@273)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@272) $generated@@275)))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@236 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@258 (type $generated@@276))))
(let (($generated@@278 ($generated@@257 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@256 $generated@@278 $generated@@277)) (or (= $generated@@276 ($generated@@255 $generated@@278 $generated@@277)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@276) $generated@@279)))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@254 $generated@@276))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@61)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@282) ($generated@@71 $generated@@231 $generated@@4)) (= (type $generated@@283) $generated@@61)) (= (type $generated@@284) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@231) ($generated@@0 ($generated@@76 $generated@@282 $generated@@285))) ($generated@@229 $generated@@285 $generated@@283 $generated@@284))
 :pattern ( ($generated@@76 $generated@@282 $generated@@285))
))))
 :pattern ( ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@61)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (= (type $generated@@288) ($generated@@71 $generated@@231 $generated@@4)) (= (type $generated@@289) $generated@@61)) (= (type $generated@@290) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@231) ($generated@@0 ($generated@@76 $generated@@288 $generated@@291))) ($generated@@229 $generated@@291 $generated@@289 $generated@@290))
 :pattern ( ($generated@@76 $generated@@288 $generated@@291))
))))
 :pattern ( ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290))
)))
(assert  (and (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (= (type ($generated@@292 $generated@@294 $generated@@295)) $generated@@61)
 :pattern ( ($generated@@292 $generated@@294 $generated@@295))
)) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@240 (type $generated@@296))))
(let (($generated@@298 ($generated@@239 (type $generated@@296))))
(= (type ($generated@@293 $generated@@296)) ($generated@@71 $generated@@298 $generated@@297))))
 :pattern ( ($generated@@293 $generated@@296))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (= (type $generated@@299) ($generated@@238 $generated@@231 $generated@@231)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) $generated@@61)) (= (type $generated@@302) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@299 ($generated@@292 $generated@@300 $generated@@301) $generated@@302) (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@231) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@299) $generated@@303))) (and ($generated@@229 ($generated@@76 ($generated@@293 $generated@@299) $generated@@303) $generated@@301 $generated@@302) ($generated@@229 $generated@@303 $generated@@300 $generated@@302)))
 :pattern ( ($generated@@76 ($generated@@293 $generated@@299) $generated@@303))
 :pattern ( ($generated@@76 ($generated@@236 $generated@@299) $generated@@303))
))))
 :pattern ( ($generated@@69 $generated@@299 ($generated@@292 $generated@@300 $generated@@301) $generated@@302))
)))
(assert  (and (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (= (type ($generated@@304 $generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@304 $generated@@306 $generated@@307))
)) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@258 (type $generated@@308))))
(let (($generated@@310 ($generated@@257 (type $generated@@308))))
(= (type ($generated@@305 $generated@@308)) ($generated@@71 $generated@@310 $generated@@309))))
 :pattern ( ($generated@@305 $generated@@308))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@311) ($generated@@256 $generated@@231 $generated@@231)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) $generated@@61)) (= (type $generated@@314) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@231) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@311) $generated@@315))) (and ($generated@@229 ($generated@@76 ($generated@@305 $generated@@311) $generated@@315) $generated@@313 $generated@@314) ($generated@@229 $generated@@315 $generated@@312 $generated@@314)))
 :pattern ( ($generated@@76 ($generated@@305 $generated@@311) $generated@@315))
 :pattern ( ($generated@@76 ($generated@@254 $generated@@311) $generated@@315))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@71 $generated@@317 $generated@@4))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@258 (type $generated@@318))))
(let (($generated@@320 ($generated@@257 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@256 $generated@@320 $generated@@319)) (= (= $generated@@318 ($generated@@255 $generated@@320 $generated@@319)) (= ($generated@@254 $generated@@318) ($generated@@316 $generated@@320))))))
 :pattern ( ($generated@@254 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@224 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@223 $generated@@322)) (<= 0 ($generated@@222 $generated@@321))))
 :pattern ( ($generated@@222 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@61)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@61) (= (type $generated@@326) $generated@@61)) (= ($generated@@323 ($generated@@292 $generated@@325 $generated@@326)) $generated@@325))
 :pattern ( ($generated@@292 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@327 ($generated@@292 $generated@@329 $generated@@330)) $generated@@330))
 :pattern ( ($generated@@292 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@61) (= (type $generated@@332) $generated@@61)) (= ($generated@@67 ($generated@@292 $generated@@331 $generated@@332)) $generated@@58))
 :pattern ( ($generated@@292 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@61)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@61) (= (type $generated@@336) $generated@@61)) (= ($generated@@333 ($generated@@304 $generated@@335 $generated@@336)) $generated@@335))
 :pattern ( ($generated@@304 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@61) (= (type $generated@@340) $generated@@61)) (= ($generated@@337 ($generated@@304 $generated@@339 $generated@@340)) $generated@@340))
 :pattern ( ($generated@@304 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@61) (= (type $generated@@342) $generated@@61)) (= ($generated@@67 ($generated@@304 $generated@@341 $generated@@342)) $generated@@59))
 :pattern ( ($generated@@304 $generated@@341 $generated@@342))
)))
(assert  (and (forall (($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@345))
)) (forall (($generated@@346 T@U) ($generated@@347 Int) ) (! (let (($generated@@348 ($generated@@224 (type $generated@@346))))
(= (type ($generated@@344 $generated@@346 $generated@@347)) $generated@@348))
 :pattern ( ($generated@@344 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@223 $generated@@231)) (= (type $generated@@350) $generated@@61)) (= (type $generated@@351) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@349 ($generated@@343 $generated@@350) $generated@@351) (forall (($generated@@352 Int) ) (!  (=> (and (<= 0 $generated@@352) (< $generated@@352 ($generated@@222 $generated@@349))) ($generated@@229 ($generated@@344 $generated@@349 $generated@@352) $generated@@350 $generated@@351))
 :pattern ( ($generated@@344 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@69 $generated@@349 ($generated@@343 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@354 Int) ) (! (= ($generated@@353 ($generated@@70 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@70 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@355 ($generated@@280 $generated@@357)) $generated@@357))
 :pattern ( ($generated@@280 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@61) (= ($generated@@67 ($generated@@280 $generated@@358)) $generated@@54))
 :pattern ( ($generated@@280 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@359 ($generated@@286 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@286 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@67 ($generated@@286 $generated@@362)) $generated@@55))
 :pattern ( ($generated@@286 $generated@@362))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@366)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@364 ($generated@@363 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@363 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@61) (= ($generated@@67 ($generated@@363 $generated@@368)) $generated@@56))
 :pattern ( ($generated@@363 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (= (type ($generated@@369 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@369 ($generated@@343 $generated@@371)) $generated@@371))
 :pattern ( ($generated@@343 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@67 ($generated@@343 $generated@@372)) $generated@@57))
 :pattern ( ($generated@@343 $generated@@372))
)))
(assert (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated@@373 $generated@@377 ($generated@@230 $generated@@376)) $generated@@376))
 :pattern ( ($generated@@230 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
 (not ($generated@@0 ($generated@@76 ($generated@@316 $generated@@379) $generated@@378))))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@76 ($generated@@316 $generated@@379) $generated@@378)))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@71 $generated@@231 $generated@@2)) (= (type $generated@@381) $generated@@61)) (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@380 ($generated@@363 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@231) (< 0 ($generated ($generated@@76 $generated@@380 $generated@@383)))) ($generated@@229 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@76 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@69 $generated@@380 ($generated@@363 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 Int) ) (! (= ($generated@@230 ($generated@@8 ($generated@@215 $generated@@384))) ($generated@@217 ($generated@@230 ($generated@@8 $generated@@384))))
 :pattern ( ($generated@@230 ($generated@@8 ($generated@@215 $generated@@384))))
)))
(assert (forall (($generated@@385 T@U) ) (! (= ($generated@@230 ($generated@@217 $generated@@385)) ($generated@@217 ($generated@@230 $generated@@385)))
 :pattern ( ($generated@@230 ($generated@@217 $generated@@385)))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@224 (type $generated@@386))))
 (=> (and (= (type $generated@@386) ($generated@@223 $generated@@387)) (= ($generated@@222 $generated@@386) 0)) (= $generated@@386 ($generated@@221 $generated@@387))))
 :pattern ( ($generated@@222 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@389) $generated@@2)) ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
 :pattern ( ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@391) $generated@@3)) ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
 :pattern ( ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@393) $generated@@4)) ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
 :pattern ( ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
)))
(assert (= ($generated@@1 $generated@@394) 21))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@396) $generated@@394)) ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
 :pattern ( ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@398) $generated@@231)) ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
 :pattern ( ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@399 () T@U)
(declare-fun $generated@@400 () T@U)
(declare-fun $generated@@401 () T@U)
(declare-fun $generated@@402 () Int)
(declare-fun $generated@@403 () Bool)
(declare-fun $generated@@404 () Int)
(declare-fun $generated@@405 (Bool) Bool)
(declare-fun $generated@@406 () Int)
(declare-fun $generated@@407 () Bool)
(declare-fun $generated@@408 () Int)
(declare-fun $generated@@409 () Bool)
(declare-fun $generated@@410 () Int)
(declare-fun $generated@@411 () Bool)
(declare-fun $generated@@412 () Int)
(declare-fun $generated@@413 () Bool)
(declare-fun $generated@@414 () Int)
(declare-fun $generated@@415 () Bool)
(declare-fun $generated@@416 () Int)
(declare-fun $generated@@417 () Bool)
(declare-fun $generated@@418 () Int)
(declare-fun $generated@@419 () Bool)
(declare-fun $generated@@420 () Int)
(declare-fun $generated@@421 () Bool)
(declare-fun $generated@@422 () Int)
(declare-fun $generated@@423 () Bool)
(declare-fun $generated@@424 () Int)
(declare-fun $generated@@425 () Bool)
(declare-fun $generated@@426 () Int)
(declare-fun $generated@@427 (T@U) Bool)
(declare-fun $generated@@428 (T@U) Bool)
(declare-fun $generated@@429 () Int)
(assert  (and (and (= (type $generated@@399) ($generated@@161 $generated@@72 $generated@@4)) (= (type $generated@@400) $generated@@72)) (= (type $generated@@401) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@430  (=> (and (= $generated@@399 ($generated@@160 $generated@@400 $generated@@401 $generated@@60 false)) (= $generated@@402 ($generated@@215 0))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= ($generated@@215 0) $generated@@402) (< $generated@@402 256))) (=> (and (<= ($generated@@215 0) $generated@@402) (< $generated@@402 256)) (=> (= $generated@@403 (< $generated@@404 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@403) $generated@@44 $generated@@401) ($generated@@405 (< $generated@@404 0))) (and ($generated@@405 (< $generated@@404 0)) (= $generated@@406 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@215 0) $generated@@406) (< $generated@@406 256))) (=> (and (<= ($generated@@215 0) $generated@@406) (< $generated@@406 256)) (=> (= $generated@@407 (<= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@407) $generated@@44 $generated@@401) ($generated@@405 (<= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (<= $generated@@404 ($generated@@215 0))) (= $generated@@408 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@215 0) $generated@@408) (< $generated@@408 256))) (=> (and (<= ($generated@@215 0) $generated@@408) (< $generated@@408 256)) (=> (= $generated@@409 (= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@409) $generated@@44 $generated@@401) ($generated@@405 (= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (= $generated@@404 ($generated@@215 0))) (= $generated@@410 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@215 0) $generated@@410) (< $generated@@410 256))) (=> (and (<= ($generated@@215 0) $generated@@410) (< $generated@@410 256)) (=> (= $generated@@411 (not (= $generated@@404 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@411) $generated@@44 $generated@@401) ($generated@@405 (not (= $generated@@404 0)))) (and ($generated@@405 (not (= $generated@@404 0))) (= $generated@@412 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@215 0) $generated@@412) (< $generated@@412 256))) (=> (and (<= ($generated@@215 0) $generated@@412) (< $generated@@412 256)) (=> (= $generated@@413 (> $generated@@404 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@413) $generated@@44 $generated@@401) ($generated@@405 (> $generated@@404 0))) (and ($generated@@405 (> $generated@@404 0)) (= $generated@@414 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@215 0) $generated@@414) (< $generated@@414 256))) (=> (and (<= ($generated@@215 0) $generated@@414) (< $generated@@414 256)) (=> (= $generated@@415 (>= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@415) $generated@@44 $generated@@401) ($generated@@405 (>= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (>= $generated@@404 ($generated@@215 0))) (= $generated@@416 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@215 0) $generated@@416) (< $generated@@416 256))) (=> (and (<= ($generated@@215 0) $generated@@416) (< $generated@@416 256)) (=> (= $generated@@417 (< 0 $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@417) $generated@@44 $generated@@401) ($generated@@405 (< 0 $generated@@404))) (and ($generated@@405 (< 0 $generated@@404)) (= $generated@@418 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@215 0) $generated@@418) (< $generated@@418 256))) (=> (and (<= ($generated@@215 0) $generated@@418) (< $generated@@418 256)) (=> (= $generated@@419 (<= ($generated@@215 0) $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@419) $generated@@44 $generated@@401) ($generated@@405 (<= ($generated@@215 0) $generated@@404))) (and ($generated@@405 (<= ($generated@@215 0) $generated@@404)) (= $generated@@420 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@215 0) $generated@@420) (< $generated@@420 256))) (=> (and (<= ($generated@@215 0) $generated@@420) (< $generated@@420 256)) (=> (= $generated@@421 (= ($generated@@215 0) $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@421) $generated@@44 $generated@@401) ($generated@@405 (= ($generated@@215 0) $generated@@404))) (and ($generated@@405 (= ($generated@@215 0) $generated@@404)) (= $generated@@422 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@215 0) $generated@@422) (< $generated@@422 256))) (=> (and (<= ($generated@@215 0) $generated@@422) (< $generated@@422 256)) (=> (= $generated@@423 (not (= 0 $generated@@404))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@423) $generated@@44 $generated@@401) ($generated@@405 (not (= 0 $generated@@404)))) (and ($generated@@405 (not (= 0 $generated@@404))) (= $generated@@424 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@215 0) $generated@@424) (< $generated@@424 256))) (=> (and (<= ($generated@@215 0) $generated@@424) (< $generated@@424 256)) (=> (and (= $generated@@425 (> 0 $generated@@404)) ($generated@@69 ($generated@@11 $generated@@425) $generated@@44 $generated@@401)) (=> (and (and ($generated@@405 (> 0 $generated@@404)) ($generated@@405 (> 0 $generated@@404))) (and (= $generated@@426 ($generated@@215 0)) (= (ControlFlow 0 2) (- 0 1)))) (and (<= ($generated@@215 0) $generated@@426) (< $generated@@426 256)))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@431  (=> (and ($generated@@427 $generated@@401) ($generated@@428 $generated@@401)) (=> (and (and (<= ($generated@@215 0) $generated@@404) (< $generated@@404 256)) (and (= 2 $generated@@429) (= (ControlFlow 0 14) 2))) $generated@@430))))
$generated@@431)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 ((_ BitVec 7)) T@U)
(declare-fun $generated@@129 (T@U) (_ BitVec 7))
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 ((_ BitVec 8)) T@U)
(declare-fun $generated@@137 (T@U) (_ BitVec 8))
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 ((_ BitVec 15)) T@U)
(declare-fun $generated@@145 (T@U) (_ BitVec 15))
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 ((_ BitVec 16)) T@U)
(declare-fun $generated@@153 (T@U) (_ BitVec 16))
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (Int) Int)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@221 (T@T) T@U)
(declare-fun $generated@@222 (T@U) Int)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@229 (T@U T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@231 () T@T)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 (T@T T@T) T@U)
(declare-fun $generated@@238 (T@T T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@292 (T@U T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@304 (T@U T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@U Int) T@U)
(declare-fun $generated@@353 (T@U) Int)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@373 (T@T T@U) T@U)
(declare-fun $generated@@394 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (forall (($generated@@130 (_ BitVec 7)) ) (! (= ($generated@@129 ($generated@@128 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@128 $generated@@130))
)) (= ($generated@@1 $generated@@127) 12)) (forall (($generated@@131 T@U) ) (!  (=> (= (type $generated@@131) $generated@@127) (= ($generated@@128 ($generated@@129 $generated@@131)) $generated@@131))
 :pattern ( ($generated@@129 $generated@@131))
))) (forall (($generated@@132 (_ BitVec 7)) ) (! (= (type ($generated@@128 $generated@@132)) $generated@@127)
 :pattern ( ($generated@@128 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@127) (= (type $generated@@134) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@133 ($generated@@70 7) $generated@@134))
 :pattern ( ($generated@@69 $generated@@133 ($generated@@70 7) $generated@@134))
)))
(assert  (and (and (and (forall (($generated@@138 (_ BitVec 8)) ) (! (= ($generated@@137 ($generated@@136 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@136 $generated@@138))
)) (= ($generated@@1 $generated@@135) 13)) (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@135) (= ($generated@@136 ($generated@@137 $generated@@139)) $generated@@139))
 :pattern ( ($generated@@137 $generated@@139))
))) (forall (($generated@@140 (_ BitVec 8)) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@135)
 :pattern ( ($generated@@136 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@135) (= (type $generated@@142) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@141 ($generated@@70 8) $generated@@142))
 :pattern ( ($generated@@69 $generated@@141 ($generated@@70 8) $generated@@142))
)))
(assert  (and (and (and (forall (($generated@@146 (_ BitVec 15)) ) (! (= ($generated@@145 ($generated@@144 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@144 $generated@@146))
)) (= ($generated@@1 $generated@@143) 14)) (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@143) (= ($generated@@144 ($generated@@145 $generated@@147)) $generated@@147))
 :pattern ( ($generated@@145 $generated@@147))
))) (forall (($generated@@148 (_ BitVec 15)) ) (! (= (type ($generated@@144 $generated@@148)) $generated@@143)
 :pattern ( ($generated@@144 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@143) (= (type $generated@@150) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@149 ($generated@@70 15) $generated@@150))
 :pattern ( ($generated@@69 $generated@@149 ($generated@@70 15) $generated@@150))
)))
(assert  (and (and (and (forall (($generated@@154 (_ BitVec 16)) ) (! (= ($generated@@153 ($generated@@152 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@154))
)) (= ($generated@@1 $generated@@151) 15)) (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@151) (= ($generated@@152 ($generated@@153 $generated@@155)) $generated@@155))
 :pattern ( ($generated@@153 $generated@@155))
))) (forall (($generated@@156 (_ BitVec 16)) ) (! (= (type ($generated@@152 $generated@@156)) $generated@@151)
 :pattern ( ($generated@@152 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@151) (= (type $generated@@158) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@157 ($generated@@70 16) $generated@@158))
 :pattern ( ($generated@@69 $generated@@157 ($generated@@70 16) $generated@@158))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@72 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@64 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@72) (= (type $generated@@209) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@210) ($generated@@63 $generated@@4))) (= (type $generated@@212) $generated@@72)) (= (type $generated@@213) ($generated@@63 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 Int) ) (! (= ($generated@@215 $generated@@216) $generated@@216)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(= (type ($generated@@217 $generated@@218)) $generated@@219))
 :pattern ( ($generated@@217 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= ($generated@@217 $generated@@220) $generated@@220)
 :pattern ( ($generated@@217 $generated@@220))
)))
(assert  (and (and (forall (($generated@@225 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@225)) 17)) (forall (($generated@@226 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@T) ) (! (= (type ($generated@@221 $generated@@227)) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@221 $generated@@227))
))))
(assert (forall (($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@228)) 0)
 :pattern ( ($generated@@221 $generated@@228))
)))
(assert  (and (= ($generated@@1 $generated@@231) 18) (forall (($generated@@232 T@U) ) (! (= (type ($generated@@230 $generated@@232)) $generated@@231)
 :pattern ( ($generated@@230 $generated@@232))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@61) (= (type $generated@@235) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@229 ($generated@@230 $generated@@233) $generated@@234 $generated@@235) ($generated@@69 $generated@@233 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@233) $generated@@234 $generated@@235))
)))
(assert  (and (and (and (and (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (= ($generated@@1 ($generated@@238 $generated@@241 $generated@@242)) 19)) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@239 ($generated@@238 $generated@@243 $generated@@244)) $generated@@243)
 :pattern ( ($generated@@238 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@240 ($generated@@238 $generated@@245 $generated@@246)) $generated@@246)
 :pattern ( ($generated@@238 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@239 (type $generated@@247))))
(= (type ($generated@@236 $generated@@247)) ($generated@@71 $generated@@248 $generated@@4)))
 :pattern ( ($generated@@236 $generated@@247))
))) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= (type ($generated@@237 $generated@@249 $generated@@250)) ($generated@@238 $generated@@249 $generated@@250))
 :pattern ( ($generated@@237 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@T) ) (! (let (($generated@@253 (type $generated@@251)))
 (not ($generated@@0 ($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251))))
 :pattern ( (let (($generated@@253 (type $generated@@251)))
($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251)))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 20)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@71 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@240 (type $generated@@272))))
(let (($generated@@274 ($generated@@239 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@238 $generated@@274 $generated@@273)) (or (= $generated@@272 ($generated@@237 $generated@@274 $generated@@273)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@272) $generated@@275)))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@236 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@258 (type $generated@@276))))
(let (($generated@@278 ($generated@@257 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@256 $generated@@278 $generated@@277)) (or (= $generated@@276 ($generated@@255 $generated@@278 $generated@@277)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@276) $generated@@279)))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@254 $generated@@276))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@61)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@282) ($generated@@71 $generated@@231 $generated@@4)) (= (type $generated@@283) $generated@@61)) (= (type $generated@@284) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@231) ($generated@@0 ($generated@@76 $generated@@282 $generated@@285))) ($generated@@229 $generated@@285 $generated@@283 $generated@@284))
 :pattern ( ($generated@@76 $generated@@282 $generated@@285))
))))
 :pattern ( ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@61)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (= (type $generated@@288) ($generated@@71 $generated@@231 $generated@@4)) (= (type $generated@@289) $generated@@61)) (= (type $generated@@290) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@231) ($generated@@0 ($generated@@76 $generated@@288 $generated@@291))) ($generated@@229 $generated@@291 $generated@@289 $generated@@290))
 :pattern ( ($generated@@76 $generated@@288 $generated@@291))
))))
 :pattern ( ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290))
)))
(assert  (and (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (= (type ($generated@@292 $generated@@294 $generated@@295)) $generated@@61)
 :pattern ( ($generated@@292 $generated@@294 $generated@@295))
)) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@240 (type $generated@@296))))
(let (($generated@@298 ($generated@@239 (type $generated@@296))))
(= (type ($generated@@293 $generated@@296)) ($generated@@71 $generated@@298 $generated@@297))))
 :pattern ( ($generated@@293 $generated@@296))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (= (type $generated@@299) ($generated@@238 $generated@@231 $generated@@231)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) $generated@@61)) (= (type $generated@@302) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@299 ($generated@@292 $generated@@300 $generated@@301) $generated@@302) (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@231) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@299) $generated@@303))) (and ($generated@@229 ($generated@@76 ($generated@@293 $generated@@299) $generated@@303) $generated@@301 $generated@@302) ($generated@@229 $generated@@303 $generated@@300 $generated@@302)))
 :pattern ( ($generated@@76 ($generated@@293 $generated@@299) $generated@@303))
 :pattern ( ($generated@@76 ($generated@@236 $generated@@299) $generated@@303))
))))
 :pattern ( ($generated@@69 $generated@@299 ($generated@@292 $generated@@300 $generated@@301) $generated@@302))
)))
(assert  (and (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (= (type ($generated@@304 $generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@304 $generated@@306 $generated@@307))
)) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@258 (type $generated@@308))))
(let (($generated@@310 ($generated@@257 (type $generated@@308))))
(= (type ($generated@@305 $generated@@308)) ($generated@@71 $generated@@310 $generated@@309))))
 :pattern ( ($generated@@305 $generated@@308))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@311) ($generated@@256 $generated@@231 $generated@@231)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) $generated@@61)) (= (type $generated@@314) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@231) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@311) $generated@@315))) (and ($generated@@229 ($generated@@76 ($generated@@305 $generated@@311) $generated@@315) $generated@@313 $generated@@314) ($generated@@229 $generated@@315 $generated@@312 $generated@@314)))
 :pattern ( ($generated@@76 ($generated@@305 $generated@@311) $generated@@315))
 :pattern ( ($generated@@76 ($generated@@254 $generated@@311) $generated@@315))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@71 $generated@@317 $generated@@4))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@258 (type $generated@@318))))
(let (($generated@@320 ($generated@@257 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@256 $generated@@320 $generated@@319)) (= (= $generated@@318 ($generated@@255 $generated@@320 $generated@@319)) (= ($generated@@254 $generated@@318) ($generated@@316 $generated@@320))))))
 :pattern ( ($generated@@254 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@224 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@223 $generated@@322)) (<= 0 ($generated@@222 $generated@@321))))
 :pattern ( ($generated@@222 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@61)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@61) (= (type $generated@@326) $generated@@61)) (= ($generated@@323 ($generated@@292 $generated@@325 $generated@@326)) $generated@@325))
 :pattern ( ($generated@@292 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@327 ($generated@@292 $generated@@329 $generated@@330)) $generated@@330))
 :pattern ( ($generated@@292 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@61) (= (type $generated@@332) $generated@@61)) (= ($generated@@67 ($generated@@292 $generated@@331 $generated@@332)) $generated@@58))
 :pattern ( ($generated@@292 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@61)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@61) (= (type $generated@@336) $generated@@61)) (= ($generated@@333 ($generated@@304 $generated@@335 $generated@@336)) $generated@@335))
 :pattern ( ($generated@@304 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@61) (= (type $generated@@340) $generated@@61)) (= ($generated@@337 ($generated@@304 $generated@@339 $generated@@340)) $generated@@340))
 :pattern ( ($generated@@304 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@61) (= (type $generated@@342) $generated@@61)) (= ($generated@@67 ($generated@@304 $generated@@341 $generated@@342)) $generated@@59))
 :pattern ( ($generated@@304 $generated@@341 $generated@@342))
)))
(assert  (and (forall (($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@345))
)) (forall (($generated@@346 T@U) ($generated@@347 Int) ) (! (let (($generated@@348 ($generated@@224 (type $generated@@346))))
(= (type ($generated@@344 $generated@@346 $generated@@347)) $generated@@348))
 :pattern ( ($generated@@344 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@223 $generated@@231)) (= (type $generated@@350) $generated@@61)) (= (type $generated@@351) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@349 ($generated@@343 $generated@@350) $generated@@351) (forall (($generated@@352 Int) ) (!  (=> (and (<= 0 $generated@@352) (< $generated@@352 ($generated@@222 $generated@@349))) ($generated@@229 ($generated@@344 $generated@@349 $generated@@352) $generated@@350 $generated@@351))
 :pattern ( ($generated@@344 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@69 $generated@@349 ($generated@@343 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@354 Int) ) (! (= ($generated@@353 ($generated@@70 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@70 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@355 ($generated@@280 $generated@@357)) $generated@@357))
 :pattern ( ($generated@@280 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@61) (= ($generated@@67 ($generated@@280 $generated@@358)) $generated@@54))
 :pattern ( ($generated@@280 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@359 ($generated@@286 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@286 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@67 ($generated@@286 $generated@@362)) $generated@@55))
 :pattern ( ($generated@@286 $generated@@362))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@366)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@364 ($generated@@363 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@363 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@61) (= ($generated@@67 ($generated@@363 $generated@@368)) $generated@@56))
 :pattern ( ($generated@@363 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (= (type ($generated@@369 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@369 ($generated@@343 $generated@@371)) $generated@@371))
 :pattern ( ($generated@@343 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@67 ($generated@@343 $generated@@372)) $generated@@57))
 :pattern ( ($generated@@343 $generated@@372))
)))
(assert (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated@@373 $generated@@377 ($generated@@230 $generated@@376)) $generated@@376))
 :pattern ( ($generated@@230 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
 (not ($generated@@0 ($generated@@76 ($generated@@316 $generated@@379) $generated@@378))))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@76 ($generated@@316 $generated@@379) $generated@@378)))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@71 $generated@@231 $generated@@2)) (= (type $generated@@381) $generated@@61)) (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@380 ($generated@@363 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@231) (< 0 ($generated ($generated@@76 $generated@@380 $generated@@383)))) ($generated@@229 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@76 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@69 $generated@@380 ($generated@@363 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 Int) ) (! (= ($generated@@230 ($generated@@8 ($generated@@215 $generated@@384))) ($generated@@217 ($generated@@230 ($generated@@8 $generated@@384))))
 :pattern ( ($generated@@230 ($generated@@8 ($generated@@215 $generated@@384))))
)))
(assert (forall (($generated@@385 T@U) ) (! (= ($generated@@230 ($generated@@217 $generated@@385)) ($generated@@217 ($generated@@230 $generated@@385)))
 :pattern ( ($generated@@230 ($generated@@217 $generated@@385)))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@224 (type $generated@@386))))
 (=> (and (= (type $generated@@386) ($generated@@223 $generated@@387)) (= ($generated@@222 $generated@@386) 0)) (= $generated@@386 ($generated@@221 $generated@@387))))
 :pattern ( ($generated@@222 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@389) $generated@@2)) ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
 :pattern ( ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@391) $generated@@3)) ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
 :pattern ( ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@393) $generated@@4)) ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
 :pattern ( ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
)))
(assert (= ($generated@@1 $generated@@394) 21))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@396) $generated@@394)) ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
 :pattern ( ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@398) $generated@@231)) ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
 :pattern ( ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@399 () T@U)
(declare-fun $generated@@400 () T@U)
(declare-fun $generated@@401 () T@U)
(declare-fun $generated@@402 () Int)
(declare-fun $generated@@403 () Bool)
(declare-fun $generated@@404 () Int)
(declare-fun $generated@@405 (Bool) Bool)
(declare-fun $generated@@406 () Int)
(declare-fun $generated@@407 () Bool)
(declare-fun $generated@@408 () Int)
(declare-fun $generated@@409 () Bool)
(declare-fun $generated@@410 () Int)
(declare-fun $generated@@411 () Bool)
(declare-fun $generated@@412 () Int)
(declare-fun $generated@@413 () Bool)
(declare-fun $generated@@414 () Int)
(declare-fun $generated@@415 () Bool)
(declare-fun $generated@@416 () Int)
(declare-fun $generated@@417 () Bool)
(declare-fun $generated@@418 () Int)
(declare-fun $generated@@419 () Bool)
(declare-fun $generated@@420 () Int)
(declare-fun $generated@@421 () Bool)
(declare-fun $generated@@422 () Int)
(declare-fun $generated@@423 () Bool)
(declare-fun $generated@@424 () Int)
(declare-fun $generated@@425 () Bool)
(declare-fun $generated@@426 () Int)
(declare-fun $generated@@427 (T@U) Bool)
(declare-fun $generated@@428 (T@U) Bool)
(declare-fun $generated@@429 () Int)
(assert  (and (and (= (type $generated@@399) ($generated@@161 $generated@@72 $generated@@4)) (= (type $generated@@400) $generated@@72)) (= (type $generated@@401) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@430  (=> (and (= $generated@@399 ($generated@@160 $generated@@400 $generated@@401 $generated@@60 false)) (= $generated@@402 ($generated@@215 0))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= ($generated@@215 0) $generated@@402) (< $generated@@402 65536))) (=> (and (<= ($generated@@215 0) $generated@@402) (< $generated@@402 65536)) (=> (= $generated@@403 (< $generated@@404 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@403) $generated@@44 $generated@@401) ($generated@@405 (< $generated@@404 0))) (and ($generated@@405 (< $generated@@404 0)) (= $generated@@406 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@215 0) $generated@@406) (< $generated@@406 65536))) (=> (and (<= ($generated@@215 0) $generated@@406) (< $generated@@406 65536)) (=> (= $generated@@407 (<= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@407) $generated@@44 $generated@@401) ($generated@@405 (<= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (<= $generated@@404 ($generated@@215 0))) (= $generated@@408 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@215 0) $generated@@408) (< $generated@@408 65536))) (=> (and (<= ($generated@@215 0) $generated@@408) (< $generated@@408 65536)) (=> (= $generated@@409 (= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@409) $generated@@44 $generated@@401) ($generated@@405 (= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (= $generated@@404 ($generated@@215 0))) (= $generated@@410 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@215 0) $generated@@410) (< $generated@@410 65536))) (=> (and (<= ($generated@@215 0) $generated@@410) (< $generated@@410 65536)) (=> (= $generated@@411 (not (= $generated@@404 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@411) $generated@@44 $generated@@401) ($generated@@405 (not (= $generated@@404 0)))) (and ($generated@@405 (not (= $generated@@404 0))) (= $generated@@412 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@215 0) $generated@@412) (< $generated@@412 65536))) (=> (and (<= ($generated@@215 0) $generated@@412) (< $generated@@412 65536)) (=> (= $generated@@413 (> $generated@@404 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@413) $generated@@44 $generated@@401) ($generated@@405 (> $generated@@404 0))) (and ($generated@@405 (> $generated@@404 0)) (= $generated@@414 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@215 0) $generated@@414) (< $generated@@414 65536))) (=> (and (<= ($generated@@215 0) $generated@@414) (< $generated@@414 65536)) (=> (= $generated@@415 (>= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@415) $generated@@44 $generated@@401) ($generated@@405 (>= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (>= $generated@@404 ($generated@@215 0))) (= $generated@@416 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@215 0) $generated@@416) (< $generated@@416 65536))) (=> (and (<= ($generated@@215 0) $generated@@416) (< $generated@@416 65536)) (=> (= $generated@@417 (< 0 $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@417) $generated@@44 $generated@@401) ($generated@@405 (< 0 $generated@@404))) (and ($generated@@405 (< 0 $generated@@404)) (= $generated@@418 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@215 0) $generated@@418) (< $generated@@418 65536))) (=> (and (<= ($generated@@215 0) $generated@@418) (< $generated@@418 65536)) (=> (= $generated@@419 (<= ($generated@@215 0) $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@419) $generated@@44 $generated@@401) ($generated@@405 (<= ($generated@@215 0) $generated@@404))) (and ($generated@@405 (<= ($generated@@215 0) $generated@@404)) (= $generated@@420 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@215 0) $generated@@420) (< $generated@@420 65536))) (=> (and (<= ($generated@@215 0) $generated@@420) (< $generated@@420 65536)) (=> (= $generated@@421 (= ($generated@@215 0) $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@421) $generated@@44 $generated@@401) ($generated@@405 (= ($generated@@215 0) $generated@@404))) (and ($generated@@405 (= ($generated@@215 0) $generated@@404)) (= $generated@@422 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@215 0) $generated@@422) (< $generated@@422 65536))) (=> (and (<= ($generated@@215 0) $generated@@422) (< $generated@@422 65536)) (=> (= $generated@@423 (not (= 0 $generated@@404))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@423) $generated@@44 $generated@@401) ($generated@@405 (not (= 0 $generated@@404)))) (and ($generated@@405 (not (= 0 $generated@@404))) (= $generated@@424 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@215 0) $generated@@424) (< $generated@@424 65536))) (=> (and (<= ($generated@@215 0) $generated@@424) (< $generated@@424 65536)) (=> (and (= $generated@@425 (> 0 $generated@@404)) ($generated@@69 ($generated@@11 $generated@@425) $generated@@44 $generated@@401)) (=> (and (and ($generated@@405 (> 0 $generated@@404)) ($generated@@405 (> 0 $generated@@404))) (and (= $generated@@426 ($generated@@215 0)) (= (ControlFlow 0 2) (- 0 1)))) (and (<= ($generated@@215 0) $generated@@426) (< $generated@@426 65536)))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@431  (=> (and ($generated@@427 $generated@@401) ($generated@@428 $generated@@401)) (=> (and (and (<= ($generated@@215 0) $generated@@404) (< $generated@@404 65536)) (and (= 2 $generated@@429) (= (ControlFlow 0 14) 2))) $generated@@430))))
$generated@@431)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 ((_ BitVec 7)) T@U)
(declare-fun $generated@@129 (T@U) (_ BitVec 7))
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 ((_ BitVec 8)) T@U)
(declare-fun $generated@@137 (T@U) (_ BitVec 8))
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 ((_ BitVec 15)) T@U)
(declare-fun $generated@@145 (T@U) (_ BitVec 15))
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 ((_ BitVec 16)) T@U)
(declare-fun $generated@@153 (T@U) (_ BitVec 16))
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (Int) Int)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@221 (T@T) T@U)
(declare-fun $generated@@222 (T@U) Int)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@229 (T@U T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@231 () T@T)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 (T@T T@T) T@U)
(declare-fun $generated@@238 (T@T T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@292 (T@U T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@304 (T@U T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@U Int) T@U)
(declare-fun $generated@@353 (T@U) Int)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@373 (T@T T@U) T@U)
(declare-fun $generated@@394 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (forall (($generated@@130 (_ BitVec 7)) ) (! (= ($generated@@129 ($generated@@128 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@128 $generated@@130))
)) (= ($generated@@1 $generated@@127) 12)) (forall (($generated@@131 T@U) ) (!  (=> (= (type $generated@@131) $generated@@127) (= ($generated@@128 ($generated@@129 $generated@@131)) $generated@@131))
 :pattern ( ($generated@@129 $generated@@131))
))) (forall (($generated@@132 (_ BitVec 7)) ) (! (= (type ($generated@@128 $generated@@132)) $generated@@127)
 :pattern ( ($generated@@128 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@127) (= (type $generated@@134) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@133 ($generated@@70 7) $generated@@134))
 :pattern ( ($generated@@69 $generated@@133 ($generated@@70 7) $generated@@134))
)))
(assert  (and (and (and (forall (($generated@@138 (_ BitVec 8)) ) (! (= ($generated@@137 ($generated@@136 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@136 $generated@@138))
)) (= ($generated@@1 $generated@@135) 13)) (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@135) (= ($generated@@136 ($generated@@137 $generated@@139)) $generated@@139))
 :pattern ( ($generated@@137 $generated@@139))
))) (forall (($generated@@140 (_ BitVec 8)) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@135)
 :pattern ( ($generated@@136 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@135) (= (type $generated@@142) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@141 ($generated@@70 8) $generated@@142))
 :pattern ( ($generated@@69 $generated@@141 ($generated@@70 8) $generated@@142))
)))
(assert  (and (and (and (forall (($generated@@146 (_ BitVec 15)) ) (! (= ($generated@@145 ($generated@@144 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@144 $generated@@146))
)) (= ($generated@@1 $generated@@143) 14)) (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@143) (= ($generated@@144 ($generated@@145 $generated@@147)) $generated@@147))
 :pattern ( ($generated@@145 $generated@@147))
))) (forall (($generated@@148 (_ BitVec 15)) ) (! (= (type ($generated@@144 $generated@@148)) $generated@@143)
 :pattern ( ($generated@@144 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@143) (= (type $generated@@150) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@149 ($generated@@70 15) $generated@@150))
 :pattern ( ($generated@@69 $generated@@149 ($generated@@70 15) $generated@@150))
)))
(assert  (and (and (and (forall (($generated@@154 (_ BitVec 16)) ) (! (= ($generated@@153 ($generated@@152 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@154))
)) (= ($generated@@1 $generated@@151) 15)) (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@151) (= ($generated@@152 ($generated@@153 $generated@@155)) $generated@@155))
 :pattern ( ($generated@@153 $generated@@155))
))) (forall (($generated@@156 (_ BitVec 16)) ) (! (= (type ($generated@@152 $generated@@156)) $generated@@151)
 :pattern ( ($generated@@152 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@151) (= (type $generated@@158) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@157 ($generated@@70 16) $generated@@158))
 :pattern ( ($generated@@69 $generated@@157 ($generated@@70 16) $generated@@158))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@72 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@64 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@72) (= (type $generated@@209) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@210) ($generated@@63 $generated@@4))) (= (type $generated@@212) $generated@@72)) (= (type $generated@@213) ($generated@@63 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 Int) ) (! (= ($generated@@215 $generated@@216) $generated@@216)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(= (type ($generated@@217 $generated@@218)) $generated@@219))
 :pattern ( ($generated@@217 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= ($generated@@217 $generated@@220) $generated@@220)
 :pattern ( ($generated@@217 $generated@@220))
)))
(assert  (and (and (forall (($generated@@225 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@225)) 17)) (forall (($generated@@226 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@T) ) (! (= (type ($generated@@221 $generated@@227)) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@221 $generated@@227))
))))
(assert (forall (($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@228)) 0)
 :pattern ( ($generated@@221 $generated@@228))
)))
(assert  (and (= ($generated@@1 $generated@@231) 18) (forall (($generated@@232 T@U) ) (! (= (type ($generated@@230 $generated@@232)) $generated@@231)
 :pattern ( ($generated@@230 $generated@@232))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@61) (= (type $generated@@235) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@229 ($generated@@230 $generated@@233) $generated@@234 $generated@@235) ($generated@@69 $generated@@233 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@233) $generated@@234 $generated@@235))
)))
(assert  (and (and (and (and (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (= ($generated@@1 ($generated@@238 $generated@@241 $generated@@242)) 19)) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@239 ($generated@@238 $generated@@243 $generated@@244)) $generated@@243)
 :pattern ( ($generated@@238 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@240 ($generated@@238 $generated@@245 $generated@@246)) $generated@@246)
 :pattern ( ($generated@@238 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@239 (type $generated@@247))))
(= (type ($generated@@236 $generated@@247)) ($generated@@71 $generated@@248 $generated@@4)))
 :pattern ( ($generated@@236 $generated@@247))
))) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= (type ($generated@@237 $generated@@249 $generated@@250)) ($generated@@238 $generated@@249 $generated@@250))
 :pattern ( ($generated@@237 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@T) ) (! (let (($generated@@253 (type $generated@@251)))
 (not ($generated@@0 ($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251))))
 :pattern ( (let (($generated@@253 (type $generated@@251)))
($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251)))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 20)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@71 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@240 (type $generated@@272))))
(let (($generated@@274 ($generated@@239 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@238 $generated@@274 $generated@@273)) (or (= $generated@@272 ($generated@@237 $generated@@274 $generated@@273)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@272) $generated@@275)))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@236 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@258 (type $generated@@276))))
(let (($generated@@278 ($generated@@257 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@256 $generated@@278 $generated@@277)) (or (= $generated@@276 ($generated@@255 $generated@@278 $generated@@277)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@276) $generated@@279)))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@254 $generated@@276))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@61)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@282) ($generated@@71 $generated@@231 $generated@@4)) (= (type $generated@@283) $generated@@61)) (= (type $generated@@284) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@231) ($generated@@0 ($generated@@76 $generated@@282 $generated@@285))) ($generated@@229 $generated@@285 $generated@@283 $generated@@284))
 :pattern ( ($generated@@76 $generated@@282 $generated@@285))
))))
 :pattern ( ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@61)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (= (type $generated@@288) ($generated@@71 $generated@@231 $generated@@4)) (= (type $generated@@289) $generated@@61)) (= (type $generated@@290) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@231) ($generated@@0 ($generated@@76 $generated@@288 $generated@@291))) ($generated@@229 $generated@@291 $generated@@289 $generated@@290))
 :pattern ( ($generated@@76 $generated@@288 $generated@@291))
))))
 :pattern ( ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290))
)))
(assert  (and (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (= (type ($generated@@292 $generated@@294 $generated@@295)) $generated@@61)
 :pattern ( ($generated@@292 $generated@@294 $generated@@295))
)) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@240 (type $generated@@296))))
(let (($generated@@298 ($generated@@239 (type $generated@@296))))
(= (type ($generated@@293 $generated@@296)) ($generated@@71 $generated@@298 $generated@@297))))
 :pattern ( ($generated@@293 $generated@@296))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (= (type $generated@@299) ($generated@@238 $generated@@231 $generated@@231)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) $generated@@61)) (= (type $generated@@302) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@299 ($generated@@292 $generated@@300 $generated@@301) $generated@@302) (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@231) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@299) $generated@@303))) (and ($generated@@229 ($generated@@76 ($generated@@293 $generated@@299) $generated@@303) $generated@@301 $generated@@302) ($generated@@229 $generated@@303 $generated@@300 $generated@@302)))
 :pattern ( ($generated@@76 ($generated@@293 $generated@@299) $generated@@303))
 :pattern ( ($generated@@76 ($generated@@236 $generated@@299) $generated@@303))
))))
 :pattern ( ($generated@@69 $generated@@299 ($generated@@292 $generated@@300 $generated@@301) $generated@@302))
)))
(assert  (and (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (= (type ($generated@@304 $generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@304 $generated@@306 $generated@@307))
)) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@258 (type $generated@@308))))
(let (($generated@@310 ($generated@@257 (type $generated@@308))))
(= (type ($generated@@305 $generated@@308)) ($generated@@71 $generated@@310 $generated@@309))))
 :pattern ( ($generated@@305 $generated@@308))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@311) ($generated@@256 $generated@@231 $generated@@231)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) $generated@@61)) (= (type $generated@@314) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@231) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@311) $generated@@315))) (and ($generated@@229 ($generated@@76 ($generated@@305 $generated@@311) $generated@@315) $generated@@313 $generated@@314) ($generated@@229 $generated@@315 $generated@@312 $generated@@314)))
 :pattern ( ($generated@@76 ($generated@@305 $generated@@311) $generated@@315))
 :pattern ( ($generated@@76 ($generated@@254 $generated@@311) $generated@@315))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@71 $generated@@317 $generated@@4))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@258 (type $generated@@318))))
(let (($generated@@320 ($generated@@257 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@256 $generated@@320 $generated@@319)) (= (= $generated@@318 ($generated@@255 $generated@@320 $generated@@319)) (= ($generated@@254 $generated@@318) ($generated@@316 $generated@@320))))))
 :pattern ( ($generated@@254 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@224 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@223 $generated@@322)) (<= 0 ($generated@@222 $generated@@321))))
 :pattern ( ($generated@@222 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@61)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@61) (= (type $generated@@326) $generated@@61)) (= ($generated@@323 ($generated@@292 $generated@@325 $generated@@326)) $generated@@325))
 :pattern ( ($generated@@292 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@327 ($generated@@292 $generated@@329 $generated@@330)) $generated@@330))
 :pattern ( ($generated@@292 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@61) (= (type $generated@@332) $generated@@61)) (= ($generated@@67 ($generated@@292 $generated@@331 $generated@@332)) $generated@@58))
 :pattern ( ($generated@@292 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@61)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@61) (= (type $generated@@336) $generated@@61)) (= ($generated@@333 ($generated@@304 $generated@@335 $generated@@336)) $generated@@335))
 :pattern ( ($generated@@304 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@61) (= (type $generated@@340) $generated@@61)) (= ($generated@@337 ($generated@@304 $generated@@339 $generated@@340)) $generated@@340))
 :pattern ( ($generated@@304 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@61) (= (type $generated@@342) $generated@@61)) (= ($generated@@67 ($generated@@304 $generated@@341 $generated@@342)) $generated@@59))
 :pattern ( ($generated@@304 $generated@@341 $generated@@342))
)))
(assert  (and (forall (($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@345))
)) (forall (($generated@@346 T@U) ($generated@@347 Int) ) (! (let (($generated@@348 ($generated@@224 (type $generated@@346))))
(= (type ($generated@@344 $generated@@346 $generated@@347)) $generated@@348))
 :pattern ( ($generated@@344 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@223 $generated@@231)) (= (type $generated@@350) $generated@@61)) (= (type $generated@@351) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@349 ($generated@@343 $generated@@350) $generated@@351) (forall (($generated@@352 Int) ) (!  (=> (and (<= 0 $generated@@352) (< $generated@@352 ($generated@@222 $generated@@349))) ($generated@@229 ($generated@@344 $generated@@349 $generated@@352) $generated@@350 $generated@@351))
 :pattern ( ($generated@@344 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@69 $generated@@349 ($generated@@343 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@354 Int) ) (! (= ($generated@@353 ($generated@@70 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@70 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@355 ($generated@@280 $generated@@357)) $generated@@357))
 :pattern ( ($generated@@280 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@61) (= ($generated@@67 ($generated@@280 $generated@@358)) $generated@@54))
 :pattern ( ($generated@@280 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@359 ($generated@@286 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@286 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@67 ($generated@@286 $generated@@362)) $generated@@55))
 :pattern ( ($generated@@286 $generated@@362))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@366)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@364 ($generated@@363 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@363 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@61) (= ($generated@@67 ($generated@@363 $generated@@368)) $generated@@56))
 :pattern ( ($generated@@363 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (= (type ($generated@@369 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@369 ($generated@@343 $generated@@371)) $generated@@371))
 :pattern ( ($generated@@343 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@67 ($generated@@343 $generated@@372)) $generated@@57))
 :pattern ( ($generated@@343 $generated@@372))
)))
(assert (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated@@373 $generated@@377 ($generated@@230 $generated@@376)) $generated@@376))
 :pattern ( ($generated@@230 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
 (not ($generated@@0 ($generated@@76 ($generated@@316 $generated@@379) $generated@@378))))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@76 ($generated@@316 $generated@@379) $generated@@378)))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@71 $generated@@231 $generated@@2)) (= (type $generated@@381) $generated@@61)) (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@380 ($generated@@363 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@231) (< 0 ($generated ($generated@@76 $generated@@380 $generated@@383)))) ($generated@@229 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@76 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@69 $generated@@380 ($generated@@363 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 Int) ) (! (= ($generated@@230 ($generated@@8 ($generated@@215 $generated@@384))) ($generated@@217 ($generated@@230 ($generated@@8 $generated@@384))))
 :pattern ( ($generated@@230 ($generated@@8 ($generated@@215 $generated@@384))))
)))
(assert (forall (($generated@@385 T@U) ) (! (= ($generated@@230 ($generated@@217 $generated@@385)) ($generated@@217 ($generated@@230 $generated@@385)))
 :pattern ( ($generated@@230 ($generated@@217 $generated@@385)))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@224 (type $generated@@386))))
 (=> (and (= (type $generated@@386) ($generated@@223 $generated@@387)) (= ($generated@@222 $generated@@386) 0)) (= $generated@@386 ($generated@@221 $generated@@387))))
 :pattern ( ($generated@@222 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@389) $generated@@2)) ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
 :pattern ( ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@391) $generated@@3)) ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
 :pattern ( ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@393) $generated@@4)) ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
 :pattern ( ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
)))
(assert (= ($generated@@1 $generated@@394) 21))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@396) $generated@@394)) ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
 :pattern ( ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@398) $generated@@231)) ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
 :pattern ( ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@399 () T@U)
(declare-fun $generated@@400 () T@U)
(declare-fun $generated@@401 () T@U)
(declare-fun $generated@@402 () Int)
(declare-fun $generated@@403 () Bool)
(declare-fun $generated@@404 () Int)
(declare-fun $generated@@405 (Bool) Bool)
(declare-fun $generated@@406 () Int)
(declare-fun $generated@@407 () Bool)
(declare-fun $generated@@408 () Int)
(declare-fun $generated@@409 () Bool)
(declare-fun $generated@@410 () Int)
(declare-fun $generated@@411 () Bool)
(declare-fun $generated@@412 () Int)
(declare-fun $generated@@413 () Bool)
(declare-fun $generated@@414 () Int)
(declare-fun $generated@@415 () Bool)
(declare-fun $generated@@416 () Int)
(declare-fun $generated@@417 () Bool)
(declare-fun $generated@@418 () Int)
(declare-fun $generated@@419 () Bool)
(declare-fun $generated@@420 () Int)
(declare-fun $generated@@421 () Bool)
(declare-fun $generated@@422 () Int)
(declare-fun $generated@@423 () Bool)
(declare-fun $generated@@424 () Int)
(declare-fun $generated@@425 () Bool)
(declare-fun $generated@@426 () Int)
(declare-fun $generated@@427 (T@U) Bool)
(declare-fun $generated@@428 (T@U) Bool)
(declare-fun $generated@@429 () Int)
(assert  (and (and (= (type $generated@@399) ($generated@@161 $generated@@72 $generated@@4)) (= (type $generated@@400) $generated@@72)) (= (type $generated@@401) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@430  (=> (and (= $generated@@399 ($generated@@160 $generated@@400 $generated@@401 $generated@@60 false)) (= $generated@@402 ($generated@@215 0))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= ($generated@@215 0) $generated@@402) (< $generated@@402 4294967296))) (=> (and (<= ($generated@@215 0) $generated@@402) (< $generated@@402 4294967296)) (=> (= $generated@@403 (< $generated@@404 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@403) $generated@@44 $generated@@401) ($generated@@405 (< $generated@@404 0))) (and ($generated@@405 (< $generated@@404 0)) (= $generated@@406 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@215 0) $generated@@406) (< $generated@@406 4294967296))) (=> (and (<= ($generated@@215 0) $generated@@406) (< $generated@@406 4294967296)) (=> (= $generated@@407 (<= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@407) $generated@@44 $generated@@401) ($generated@@405 (<= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (<= $generated@@404 ($generated@@215 0))) (= $generated@@408 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@215 0) $generated@@408) (< $generated@@408 4294967296))) (=> (and (<= ($generated@@215 0) $generated@@408) (< $generated@@408 4294967296)) (=> (= $generated@@409 (= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@409) $generated@@44 $generated@@401) ($generated@@405 (= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (= $generated@@404 ($generated@@215 0))) (= $generated@@410 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@215 0) $generated@@410) (< $generated@@410 4294967296))) (=> (and (<= ($generated@@215 0) $generated@@410) (< $generated@@410 4294967296)) (=> (= $generated@@411 (not (= $generated@@404 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@411) $generated@@44 $generated@@401) ($generated@@405 (not (= $generated@@404 0)))) (and ($generated@@405 (not (= $generated@@404 0))) (= $generated@@412 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@215 0) $generated@@412) (< $generated@@412 4294967296))) (=> (and (<= ($generated@@215 0) $generated@@412) (< $generated@@412 4294967296)) (=> (= $generated@@413 (> $generated@@404 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@413) $generated@@44 $generated@@401) ($generated@@405 (> $generated@@404 0))) (and ($generated@@405 (> $generated@@404 0)) (= $generated@@414 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@215 0) $generated@@414) (< $generated@@414 4294967296))) (=> (and (<= ($generated@@215 0) $generated@@414) (< $generated@@414 4294967296)) (=> (= $generated@@415 (>= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@415) $generated@@44 $generated@@401) ($generated@@405 (>= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (>= $generated@@404 ($generated@@215 0))) (= $generated@@416 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@215 0) $generated@@416) (< $generated@@416 4294967296))) (=> (and (<= ($generated@@215 0) $generated@@416) (< $generated@@416 4294967296)) (=> (= $generated@@417 (< 0 $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@417) $generated@@44 $generated@@401) ($generated@@405 (< 0 $generated@@404))) (and ($generated@@405 (< 0 $generated@@404)) (= $generated@@418 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@215 0) $generated@@418) (< $generated@@418 4294967296))) (=> (and (<= ($generated@@215 0) $generated@@418) (< $generated@@418 4294967296)) (=> (= $generated@@419 (<= ($generated@@215 0) $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@419) $generated@@44 $generated@@401) ($generated@@405 (<= ($generated@@215 0) $generated@@404))) (and ($generated@@405 (<= ($generated@@215 0) $generated@@404)) (= $generated@@420 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@215 0) $generated@@420) (< $generated@@420 4294967296))) (=> (and (<= ($generated@@215 0) $generated@@420) (< $generated@@420 4294967296)) (=> (= $generated@@421 (= ($generated@@215 0) $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@421) $generated@@44 $generated@@401) ($generated@@405 (= ($generated@@215 0) $generated@@404))) (and ($generated@@405 (= ($generated@@215 0) $generated@@404)) (= $generated@@422 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@215 0) $generated@@422) (< $generated@@422 4294967296))) (=> (and (<= ($generated@@215 0) $generated@@422) (< $generated@@422 4294967296)) (=> (= $generated@@423 (not (= 0 $generated@@404))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@423) $generated@@44 $generated@@401) ($generated@@405 (not (= 0 $generated@@404)))) (and ($generated@@405 (not (= 0 $generated@@404))) (= $generated@@424 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@215 0) $generated@@424) (< $generated@@424 4294967296))) (=> (and (<= ($generated@@215 0) $generated@@424) (< $generated@@424 4294967296)) (=> (and (= $generated@@425 (> 0 $generated@@404)) ($generated@@69 ($generated@@11 $generated@@425) $generated@@44 $generated@@401)) (=> (and (and ($generated@@405 (> 0 $generated@@404)) ($generated@@405 (> 0 $generated@@404))) (and (= $generated@@426 ($generated@@215 0)) (= (ControlFlow 0 2) (- 0 1)))) (and (<= ($generated@@215 0) $generated@@426) (< $generated@@426 4294967296)))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@431  (=> (and ($generated@@427 $generated@@401) ($generated@@428 $generated@@401)) (=> (and (and (<= ($generated@@215 0) $generated@@404) (< $generated@@404 4294967296)) (and (= 2 $generated@@429) (= (ControlFlow 0 14) 2))) $generated@@430))))
$generated@@431)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 ((_ BitVec 7)) T@U)
(declare-fun $generated@@129 (T@U) (_ BitVec 7))
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 ((_ BitVec 8)) T@U)
(declare-fun $generated@@137 (T@U) (_ BitVec 8))
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 ((_ BitVec 15)) T@U)
(declare-fun $generated@@145 (T@U) (_ BitVec 15))
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 ((_ BitVec 16)) T@U)
(declare-fun $generated@@153 (T@U) (_ BitVec 16))
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (Int) Int)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@221 (T@T) T@U)
(declare-fun $generated@@222 (T@U) Int)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@229 (T@U T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@231 () T@T)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 (T@T T@T) T@U)
(declare-fun $generated@@238 (T@T T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@292 (T@U T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@304 (T@U T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@U Int) T@U)
(declare-fun $generated@@353 (T@U) Int)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@373 (T@T T@U) T@U)
(declare-fun $generated@@394 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (forall (($generated@@130 (_ BitVec 7)) ) (! (= ($generated@@129 ($generated@@128 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@128 $generated@@130))
)) (= ($generated@@1 $generated@@127) 12)) (forall (($generated@@131 T@U) ) (!  (=> (= (type $generated@@131) $generated@@127) (= ($generated@@128 ($generated@@129 $generated@@131)) $generated@@131))
 :pattern ( ($generated@@129 $generated@@131))
))) (forall (($generated@@132 (_ BitVec 7)) ) (! (= (type ($generated@@128 $generated@@132)) $generated@@127)
 :pattern ( ($generated@@128 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@127) (= (type $generated@@134) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@133 ($generated@@70 7) $generated@@134))
 :pattern ( ($generated@@69 $generated@@133 ($generated@@70 7) $generated@@134))
)))
(assert  (and (and (and (forall (($generated@@138 (_ BitVec 8)) ) (! (= ($generated@@137 ($generated@@136 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@136 $generated@@138))
)) (= ($generated@@1 $generated@@135) 13)) (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@135) (= ($generated@@136 ($generated@@137 $generated@@139)) $generated@@139))
 :pattern ( ($generated@@137 $generated@@139))
))) (forall (($generated@@140 (_ BitVec 8)) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@135)
 :pattern ( ($generated@@136 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@135) (= (type $generated@@142) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@141 ($generated@@70 8) $generated@@142))
 :pattern ( ($generated@@69 $generated@@141 ($generated@@70 8) $generated@@142))
)))
(assert  (and (and (and (forall (($generated@@146 (_ BitVec 15)) ) (! (= ($generated@@145 ($generated@@144 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@144 $generated@@146))
)) (= ($generated@@1 $generated@@143) 14)) (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@143) (= ($generated@@144 ($generated@@145 $generated@@147)) $generated@@147))
 :pattern ( ($generated@@145 $generated@@147))
))) (forall (($generated@@148 (_ BitVec 15)) ) (! (= (type ($generated@@144 $generated@@148)) $generated@@143)
 :pattern ( ($generated@@144 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@143) (= (type $generated@@150) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@149 ($generated@@70 15) $generated@@150))
 :pattern ( ($generated@@69 $generated@@149 ($generated@@70 15) $generated@@150))
)))
(assert  (and (and (and (forall (($generated@@154 (_ BitVec 16)) ) (! (= ($generated@@153 ($generated@@152 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@154))
)) (= ($generated@@1 $generated@@151) 15)) (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@151) (= ($generated@@152 ($generated@@153 $generated@@155)) $generated@@155))
 :pattern ( ($generated@@153 $generated@@155))
))) (forall (($generated@@156 (_ BitVec 16)) ) (! (= (type ($generated@@152 $generated@@156)) $generated@@151)
 :pattern ( ($generated@@152 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@151) (= (type $generated@@158) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@157 ($generated@@70 16) $generated@@158))
 :pattern ( ($generated@@69 $generated@@157 ($generated@@70 16) $generated@@158))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@72 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@64 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@72) (= (type $generated@@209) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@210) ($generated@@63 $generated@@4))) (= (type $generated@@212) $generated@@72)) (= (type $generated@@213) ($generated@@63 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 Int) ) (! (= ($generated@@215 $generated@@216) $generated@@216)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(= (type ($generated@@217 $generated@@218)) $generated@@219))
 :pattern ( ($generated@@217 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= ($generated@@217 $generated@@220) $generated@@220)
 :pattern ( ($generated@@217 $generated@@220))
)))
(assert  (and (and (forall (($generated@@225 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@225)) 17)) (forall (($generated@@226 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@T) ) (! (= (type ($generated@@221 $generated@@227)) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@221 $generated@@227))
))))
(assert (forall (($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@228)) 0)
 :pattern ( ($generated@@221 $generated@@228))
)))
(assert  (and (= ($generated@@1 $generated@@231) 18) (forall (($generated@@232 T@U) ) (! (= (type ($generated@@230 $generated@@232)) $generated@@231)
 :pattern ( ($generated@@230 $generated@@232))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@61) (= (type $generated@@235) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@229 ($generated@@230 $generated@@233) $generated@@234 $generated@@235) ($generated@@69 $generated@@233 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@233) $generated@@234 $generated@@235))
)))
(assert  (and (and (and (and (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (= ($generated@@1 ($generated@@238 $generated@@241 $generated@@242)) 19)) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@239 ($generated@@238 $generated@@243 $generated@@244)) $generated@@243)
 :pattern ( ($generated@@238 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@240 ($generated@@238 $generated@@245 $generated@@246)) $generated@@246)
 :pattern ( ($generated@@238 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@239 (type $generated@@247))))
(= (type ($generated@@236 $generated@@247)) ($generated@@71 $generated@@248 $generated@@4)))
 :pattern ( ($generated@@236 $generated@@247))
))) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= (type ($generated@@237 $generated@@249 $generated@@250)) ($generated@@238 $generated@@249 $generated@@250))
 :pattern ( ($generated@@237 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@T) ) (! (let (($generated@@253 (type $generated@@251)))
 (not ($generated@@0 ($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251))))
 :pattern ( (let (($generated@@253 (type $generated@@251)))
($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251)))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 20)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@71 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@76 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@240 (type $generated@@272))))
(let (($generated@@274 ($generated@@239 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@238 $generated@@274 $generated@@273)) (or (= $generated@@272 ($generated@@237 $generated@@274 $generated@@273)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@272) $generated@@275)))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@236 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@258 (type $generated@@276))))
(let (($generated@@278 ($generated@@257 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@256 $generated@@278 $generated@@277)) (or (= $generated@@276 ($generated@@255 $generated@@278 $generated@@277)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@276) $generated@@279)))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@254 $generated@@276))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@61)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@282) ($generated@@71 $generated@@231 $generated@@4)) (= (type $generated@@283) $generated@@61)) (= (type $generated@@284) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@231) ($generated@@0 ($generated@@76 $generated@@282 $generated@@285))) ($generated@@229 $generated@@285 $generated@@283 $generated@@284))
 :pattern ( ($generated@@76 $generated@@282 $generated@@285))
))))
 :pattern ( ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@61)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (= (type $generated@@288) ($generated@@71 $generated@@231 $generated@@4)) (= (type $generated@@289) $generated@@61)) (= (type $generated@@290) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@231) ($generated@@0 ($generated@@76 $generated@@288 $generated@@291))) ($generated@@229 $generated@@291 $generated@@289 $generated@@290))
 :pattern ( ($generated@@76 $generated@@288 $generated@@291))
))))
 :pattern ( ($generated@@69 $generated@@288 ($generated@@286 $generated@@289) $generated@@290))
)))
(assert  (and (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (= (type ($generated@@292 $generated@@294 $generated@@295)) $generated@@61)
 :pattern ( ($generated@@292 $generated@@294 $generated@@295))
)) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@240 (type $generated@@296))))
(let (($generated@@298 ($generated@@239 (type $generated@@296))))
(= (type ($generated@@293 $generated@@296)) ($generated@@71 $generated@@298 $generated@@297))))
 :pattern ( ($generated@@293 $generated@@296))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (= (type $generated@@299) ($generated@@238 $generated@@231 $generated@@231)) (= (type $generated@@300) $generated@@61)) (= (type $generated@@301) $generated@@61)) (= (type $generated@@302) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@299 ($generated@@292 $generated@@300 $generated@@301) $generated@@302) (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@231) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@299) $generated@@303))) (and ($generated@@229 ($generated@@76 ($generated@@293 $generated@@299) $generated@@303) $generated@@301 $generated@@302) ($generated@@229 $generated@@303 $generated@@300 $generated@@302)))
 :pattern ( ($generated@@76 ($generated@@293 $generated@@299) $generated@@303))
 :pattern ( ($generated@@76 ($generated@@236 $generated@@299) $generated@@303))
))))
 :pattern ( ($generated@@69 $generated@@299 ($generated@@292 $generated@@300 $generated@@301) $generated@@302))
)))
(assert  (and (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (= (type ($generated@@304 $generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@304 $generated@@306 $generated@@307))
)) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@258 (type $generated@@308))))
(let (($generated@@310 ($generated@@257 (type $generated@@308))))
(= (type ($generated@@305 $generated@@308)) ($generated@@71 $generated@@310 $generated@@309))))
 :pattern ( ($generated@@305 $generated@@308))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@311) ($generated@@256 $generated@@231 $generated@@231)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) $generated@@61)) (= (type $generated@@314) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@231) ($generated@@0 ($generated@@76 ($generated@@254 $generated@@311) $generated@@315))) (and ($generated@@229 ($generated@@76 ($generated@@305 $generated@@311) $generated@@315) $generated@@313 $generated@@314) ($generated@@229 $generated@@315 $generated@@312 $generated@@314)))
 :pattern ( ($generated@@76 ($generated@@305 $generated@@311) $generated@@315))
 :pattern ( ($generated@@76 ($generated@@254 $generated@@311) $generated@@315))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@304 $generated@@312 $generated@@313) $generated@@314))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@71 $generated@@317 $generated@@4))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@258 (type $generated@@318))))
(let (($generated@@320 ($generated@@257 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@256 $generated@@320 $generated@@319)) (= (= $generated@@318 ($generated@@255 $generated@@320 $generated@@319)) (= ($generated@@254 $generated@@318) ($generated@@316 $generated@@320))))))
 :pattern ( ($generated@@254 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@224 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@223 $generated@@322)) (<= 0 ($generated@@222 $generated@@321))))
 :pattern ( ($generated@@222 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@61)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@61) (= (type $generated@@326) $generated@@61)) (= ($generated@@323 ($generated@@292 $generated@@325 $generated@@326)) $generated@@325))
 :pattern ( ($generated@@292 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@327 ($generated@@292 $generated@@329 $generated@@330)) $generated@@330))
 :pattern ( ($generated@@292 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@61) (= (type $generated@@332) $generated@@61)) (= ($generated@@67 ($generated@@292 $generated@@331 $generated@@332)) $generated@@58))
 :pattern ( ($generated@@292 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@61)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@61) (= (type $generated@@336) $generated@@61)) (= ($generated@@333 ($generated@@304 $generated@@335 $generated@@336)) $generated@@335))
 :pattern ( ($generated@@304 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@61) (= (type $generated@@340) $generated@@61)) (= ($generated@@337 ($generated@@304 $generated@@339 $generated@@340)) $generated@@340))
 :pattern ( ($generated@@304 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@61) (= (type $generated@@342) $generated@@61)) (= ($generated@@67 ($generated@@304 $generated@@341 $generated@@342)) $generated@@59))
 :pattern ( ($generated@@304 $generated@@341 $generated@@342))
)))
(assert  (and (forall (($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@345))
)) (forall (($generated@@346 T@U) ($generated@@347 Int) ) (! (let (($generated@@348 ($generated@@224 (type $generated@@346))))
(= (type ($generated@@344 $generated@@346 $generated@@347)) $generated@@348))
 :pattern ( ($generated@@344 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@223 $generated@@231)) (= (type $generated@@350) $generated@@61)) (= (type $generated@@351) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@349 ($generated@@343 $generated@@350) $generated@@351) (forall (($generated@@352 Int) ) (!  (=> (and (<= 0 $generated@@352) (< $generated@@352 ($generated@@222 $generated@@349))) ($generated@@229 ($generated@@344 $generated@@349 $generated@@352) $generated@@350 $generated@@351))
 :pattern ( ($generated@@344 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@69 $generated@@349 ($generated@@343 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@354 Int) ) (! (= ($generated@@353 ($generated@@70 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@70 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@355 ($generated@@280 $generated@@357)) $generated@@357))
 :pattern ( ($generated@@280 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@61) (= ($generated@@67 ($generated@@280 $generated@@358)) $generated@@54))
 :pattern ( ($generated@@280 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@359 ($generated@@286 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@286 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@67 ($generated@@286 $generated@@362)) $generated@@55))
 :pattern ( ($generated@@286 $generated@@362))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@366)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@364 ($generated@@363 $generated@@367)) $generated@@367))
 :pattern ( ($generated@@363 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@61) (= ($generated@@67 ($generated@@363 $generated@@368)) $generated@@56))
 :pattern ( ($generated@@363 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (= (type ($generated@@369 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@369 ($generated@@343 $generated@@371)) $generated@@371))
 :pattern ( ($generated@@343 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@67 ($generated@@343 $generated@@372)) $generated@@57))
 :pattern ( ($generated@@343 $generated@@372))
)))
(assert (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated@@373 $generated@@377 ($generated@@230 $generated@@376)) $generated@@376))
 :pattern ( ($generated@@230 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
 (not ($generated@@0 ($generated@@76 ($generated@@316 $generated@@379) $generated@@378))))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@76 ($generated@@316 $generated@@379) $generated@@378)))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@71 $generated@@231 $generated@@2)) (= (type $generated@@381) $generated@@61)) (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@380 ($generated@@363 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@231) (< 0 ($generated ($generated@@76 $generated@@380 $generated@@383)))) ($generated@@229 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@76 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@69 $generated@@380 ($generated@@363 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 Int) ) (! (= ($generated@@230 ($generated@@8 ($generated@@215 $generated@@384))) ($generated@@217 ($generated@@230 ($generated@@8 $generated@@384))))
 :pattern ( ($generated@@230 ($generated@@8 ($generated@@215 $generated@@384))))
)))
(assert (forall (($generated@@385 T@U) ) (! (= ($generated@@230 ($generated@@217 $generated@@385)) ($generated@@217 ($generated@@230 $generated@@385)))
 :pattern ( ($generated@@230 ($generated@@217 $generated@@385)))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@224 (type $generated@@386))))
 (=> (and (= (type $generated@@386) ($generated@@223 $generated@@387)) (= ($generated@@222 $generated@@386) 0)) (= $generated@@386 ($generated@@221 $generated@@387))))
 :pattern ( ($generated@@222 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@389) $generated@@2)) ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
 :pattern ( ($generated@@69 $generated@@389 $generated@@46 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@391) $generated@@3)) ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
 :pattern ( ($generated@@69 $generated@@391 $generated@@47 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@393) $generated@@4)) ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
 :pattern ( ($generated@@69 $generated@@393 $generated@@44 $generated@@392))
)))
(assert (= ($generated@@1 $generated@@394) 21))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@396) $generated@@394)) ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
 :pattern ( ($generated@@69 $generated@@396 $generated@@45 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@398) $generated@@231)) ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
 :pattern ( ($generated@@69 $generated@@398 $generated@@48 $generated@@397))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@399 () T@U)
(declare-fun $generated@@400 () T@U)
(declare-fun $generated@@401 () T@U)
(declare-fun $generated@@402 () Int)
(declare-fun $generated@@403 () Bool)
(declare-fun $generated@@404 () Int)
(declare-fun $generated@@405 (Bool) Bool)
(declare-fun $generated@@406 () Int)
(declare-fun $generated@@407 () Bool)
(declare-fun $generated@@408 () Int)
(declare-fun $generated@@409 () Bool)
(declare-fun $generated@@410 () Int)
(declare-fun $generated@@411 () Bool)
(declare-fun $generated@@412 () Int)
(declare-fun $generated@@413 () Bool)
(declare-fun $generated@@414 () Int)
(declare-fun $generated@@415 () Bool)
(declare-fun $generated@@416 () Int)
(declare-fun $generated@@417 () Bool)
(declare-fun $generated@@418 () Int)
(declare-fun $generated@@419 () Bool)
(declare-fun $generated@@420 () Int)
(declare-fun $generated@@421 () Bool)
(declare-fun $generated@@422 () Int)
(declare-fun $generated@@423 () Bool)
(declare-fun $generated@@424 () Int)
(declare-fun $generated@@425 () Bool)
(declare-fun $generated@@426 () Int)
(declare-fun $generated@@427 (T@U) Bool)
(declare-fun $generated@@428 (T@U) Bool)
(declare-fun $generated@@429 () Int)
(assert  (and (and (= (type $generated@@399) ($generated@@161 $generated@@72 $generated@@4)) (= (type $generated@@400) $generated@@72)) (= (type $generated@@401) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@430  (=> (and (= $generated@@399 ($generated@@160 $generated@@400 $generated@@401 $generated@@60 false)) (= $generated@@402 ($generated@@215 0))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= ($generated@@215 0) $generated@@402) (< $generated@@402 18446744073709551616))) (=> (and (<= ($generated@@215 0) $generated@@402) (< $generated@@402 18446744073709551616)) (=> (= $generated@@403 (< $generated@@404 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@403) $generated@@44 $generated@@401) ($generated@@405 (< $generated@@404 0))) (and ($generated@@405 (< $generated@@404 0)) (= $generated@@406 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@215 0) $generated@@406) (< $generated@@406 18446744073709551616))) (=> (and (<= ($generated@@215 0) $generated@@406) (< $generated@@406 18446744073709551616)) (=> (= $generated@@407 (<= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@407) $generated@@44 $generated@@401) ($generated@@405 (<= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (<= $generated@@404 ($generated@@215 0))) (= $generated@@408 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@215 0) $generated@@408) (< $generated@@408 18446744073709551616))) (=> (and (<= ($generated@@215 0) $generated@@408) (< $generated@@408 18446744073709551616)) (=> (= $generated@@409 (= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@409) $generated@@44 $generated@@401) ($generated@@405 (= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (= $generated@@404 ($generated@@215 0))) (= $generated@@410 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@215 0) $generated@@410) (< $generated@@410 18446744073709551616))) (=> (and (<= ($generated@@215 0) $generated@@410) (< $generated@@410 18446744073709551616)) (=> (= $generated@@411 (not (= $generated@@404 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@411) $generated@@44 $generated@@401) ($generated@@405 (not (= $generated@@404 0)))) (and ($generated@@405 (not (= $generated@@404 0))) (= $generated@@412 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@215 0) $generated@@412) (< $generated@@412 18446744073709551616))) (=> (and (<= ($generated@@215 0) $generated@@412) (< $generated@@412 18446744073709551616)) (=> (= $generated@@413 (> $generated@@404 0)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@413) $generated@@44 $generated@@401) ($generated@@405 (> $generated@@404 0))) (and ($generated@@405 (> $generated@@404 0)) (= $generated@@414 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@215 0) $generated@@414) (< $generated@@414 18446744073709551616))) (=> (and (<= ($generated@@215 0) $generated@@414) (< $generated@@414 18446744073709551616)) (=> (= $generated@@415 (>= $generated@@404 ($generated@@215 0))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@415) $generated@@44 $generated@@401) ($generated@@405 (>= $generated@@404 ($generated@@215 0)))) (and ($generated@@405 (>= $generated@@404 ($generated@@215 0))) (= $generated@@416 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@215 0) $generated@@416) (< $generated@@416 18446744073709551616))) (=> (and (<= ($generated@@215 0) $generated@@416) (< $generated@@416 18446744073709551616)) (=> (= $generated@@417 (< 0 $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@417) $generated@@44 $generated@@401) ($generated@@405 (< 0 $generated@@404))) (and ($generated@@405 (< 0 $generated@@404)) (= $generated@@418 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@215 0) $generated@@418) (< $generated@@418 18446744073709551616))) (=> (and (<= ($generated@@215 0) $generated@@418) (< $generated@@418 18446744073709551616)) (=> (= $generated@@419 (<= ($generated@@215 0) $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@419) $generated@@44 $generated@@401) ($generated@@405 (<= ($generated@@215 0) $generated@@404))) (and ($generated@@405 (<= ($generated@@215 0) $generated@@404)) (= $generated@@420 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@215 0) $generated@@420) (< $generated@@420 18446744073709551616))) (=> (and (<= ($generated@@215 0) $generated@@420) (< $generated@@420 18446744073709551616)) (=> (= $generated@@421 (= ($generated@@215 0) $generated@@404)) (=> (and (and ($generated@@69 ($generated@@11 $generated@@421) $generated@@44 $generated@@401) ($generated@@405 (= ($generated@@215 0) $generated@@404))) (and ($generated@@405 (= ($generated@@215 0) $generated@@404)) (= $generated@@422 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@215 0) $generated@@422) (< $generated@@422 18446744073709551616))) (=> (and (<= ($generated@@215 0) $generated@@422) (< $generated@@422 18446744073709551616)) (=> (= $generated@@423 (not (= 0 $generated@@404))) (=> (and (and ($generated@@69 ($generated@@11 $generated@@423) $generated@@44 $generated@@401) ($generated@@405 (not (= 0 $generated@@404)))) (and ($generated@@405 (not (= 0 $generated@@404))) (= $generated@@424 ($generated@@215 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@215 0) $generated@@424) (< $generated@@424 18446744073709551616))) (=> (and (<= ($generated@@215 0) $generated@@424) (< $generated@@424 18446744073709551616)) (=> (and (= $generated@@425 (> 0 $generated@@404)) ($generated@@69 ($generated@@11 $generated@@425) $generated@@44 $generated@@401)) (=> (and (and ($generated@@405 (> 0 $generated@@404)) ($generated@@405 (> 0 $generated@@404))) (and (= $generated@@426 ($generated@@215 0)) (= (ControlFlow 0 2) (- 0 1)))) (and (<= ($generated@@215 0) $generated@@426) (< $generated@@426 18446744073709551616)))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@431  (=> (and ($generated@@427 $generated@@401) ($generated@@428 $generated@@401)) (=> (and (and (<= ($generated@@215 0) $generated@@404) (< $generated@@404 18446744073709551616)) (and (= 2 $generated@@429) (= (ControlFlow 0 14) 2))) $generated@@430))))
$generated@@431)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
