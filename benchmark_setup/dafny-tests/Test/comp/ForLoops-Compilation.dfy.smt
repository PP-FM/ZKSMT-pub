(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 256))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 (- 0 128))) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 (- 0 128)) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 (- 0 128)) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 128))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@71)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@533 $generated@@534)) $generated@@63) (= ($generated@@531 ($generated@@144 $generated@@533 $generated@@534)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@154) ($generated@@221 $generated@@536 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@536)) $generated@@536) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@536) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@77 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@66)) ($generated@@221 $generated@@537 ($generated@@230 $generated@@538))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537)) $generated@@537) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537) ($generated@@230 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@230 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@66)) ($generated@@221 $generated@@539 ($generated@@235 $generated@@540))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@235 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@235 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@66)) ($generated@@221 $generated@@541 ($generated@@159 $generated@@542))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541) ($generated@@159 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@159 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@154) (= (type $generated@@544) $generated@@66)) ($generated@@221 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@531 $generated@@138) $generated@@64))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@545 $generated@@548)))) ($generated@@247 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@83 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@551) (and ($generated@@143 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@66) ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@555) (and ($generated@@143 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@66) ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@268 $generated@@560)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@262 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@261 $generated@@562)) (= ($generated@@260 $generated@@561) 0)) (= $generated@@561 ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@260 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@281 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@434)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@154)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@261 $generated@@154)) (= (type $generated@@578) $generated@@66)) (= ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@260 $generated@@577))) ($generated@@221 ($generated@@477 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@477 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@581))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585))) (and (and ($generated@@141 ($generated@@287 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@141 ($generated@@334 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@141 ($generated@@365 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@305 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@141 ($generated@@345 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@141 ($generated@@373 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@141 $generated@@589 $generated@@46))
 :pattern ( ($generated@@141 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@141 $generated@@590 $generated@@47))
 :pattern ( ($generated@@141 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@141 $generated@@591 $generated@@44))
 :pattern ( ($generated@@141 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@434) ($generated@@141 $generated@@592 $generated@@45))
 :pattern ( ($generated@@141 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@141 $generated@@593 $generated@@48))
 :pattern ( ($generated@@141 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 (T@U) Bool)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () Int)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () Int)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () Int)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () Int)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@594) ($generated@@166 $generated@@79 $generated@@4)) (= (type $generated@@595) $generated@@79)) (= (type $generated@@596) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@599) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@603) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@606) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@609) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@619) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@624) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@629) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@634) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@639) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@644) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@649) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@654) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@657) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@660) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@663) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@666) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@669) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@672) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@675) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@678) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 51) (let (($generated@@681  (=> (= $generated@@594 ($generated@@165 $generated@@595 $generated@@596 $generated@@60 false)) (=> (and (= $generated@@597 ($generated@@240 0)) (= $generated@@598 ($generated@@240 0))) (and (=> (= (ControlFlow 0 2) (- 0 50)) (<= $generated@@597 $generated@@598)) (=> (<= $generated@@597 $generated@@598) (=> (and ($generated@@246 $generated@@599) ($generated@@600 $generated@@599)) (=> (and (and (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@79) (=> (and (not (= $generated@@682 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@596 $generated@@682) $generated@@60))) (= ($generated@@83 $generated@@599 $generated@@682) ($generated@@83 $generated@@596 $generated@@682))))
 :pattern ( ($generated@@83 $generated@@599 $generated@@682))
)) ($generated@@134 $generated@@596 $generated@@599)) (and (= $generated@@601 ($generated@@240 (- 0 2))) (= $generated@@602 ($generated@@240 2)))) (and (=> (= (ControlFlow 0 2) (- 0 49)) (<= $generated@@601 $generated@@602)) (=> (<= $generated@@601 $generated@@602) (=> (and ($generated@@246 $generated@@603) ($generated@@600 $generated@@603)) (=> (and (and (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@79) (=> (and (not (= $generated@@683 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@599 $generated@@683) $generated@@60))) (= ($generated@@83 $generated@@603 $generated@@683) ($generated@@83 $generated@@599 $generated@@683))))
 :pattern ( ($generated@@83 $generated@@603 $generated@@683))
)) ($generated@@134 $generated@@599 $generated@@603)) (and (= $generated@@604 ($generated@@240 (- 0 2))) (= $generated@@605 ($generated@@240 3)))) (and (=> (= (ControlFlow 0 2) (- 0 48)) (<= $generated@@604 $generated@@605)) (=> (<= $generated@@604 $generated@@605) (=> (and ($generated@@246 $generated@@606) ($generated@@600 $generated@@606)) (=> (and (and (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@79) (=> (and (not (= $generated@@684 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@603 $generated@@684) $generated@@60))) (= ($generated@@83 $generated@@606 $generated@@684) ($generated@@83 $generated@@603 $generated@@684))))
 :pattern ( ($generated@@83 $generated@@606 $generated@@684))
)) ($generated@@134 $generated@@603 $generated@@606)) (and (= $generated@@607 ($generated@@240 10)) (= $generated@@608 ($generated@@240 20)))) (and (=> (= (ControlFlow 0 2) (- 0 47)) (<= $generated@@607 $generated@@608)) (=> (<= $generated@@607 $generated@@608) (=> (and (and (and ($generated@@246 $generated@@609) ($generated@@600 $generated@@609)) (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@79) (=> (and (not (= $generated@@685 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@606 $generated@@685) $generated@@60))) (= ($generated@@83 $generated@@609 $generated@@685) ($generated@@83 $generated@@606 $generated@@685))))
 :pattern ( ($generated@@83 $generated@@609 $generated@@685))
))) (and ($generated@@134 $generated@@606 $generated@@609) (= $generated@@610 ($generated@@240 0)))) (and (=> (= (ControlFlow 0 2) (- 0 46)) (and (<= ($generated@@240 0) $generated@@610) (< $generated@@610 256))) (=> (and (<= ($generated@@240 0) $generated@@610) (< $generated@@610 256)) (=> (and (= $generated@@611 ($generated@@240 0)) (= $generated@@612 ($generated@@240 0))) (and (=> (= (ControlFlow 0 2) (- 0 45)) (and (<= ($generated@@240 0) $generated@@612) (< $generated@@612 256))) (=> (and (<= ($generated@@240 0) $generated@@612) (< $generated@@612 256)) (=> (= $generated@@613 ($generated@@240 0)) (and (=> (= (ControlFlow 0 2) (- 0 44)) (<= $generated@@611 $generated@@613)) (=> (<= $generated@@611 $generated@@613) (=> (and (and (and ($generated@@246 $generated@@614) ($generated@@600 $generated@@614)) (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@79) (=> (and (not (= $generated@@686 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@609 $generated@@686) $generated@@60))) (= ($generated@@83 $generated@@614 $generated@@686) ($generated@@83 $generated@@609 $generated@@686))))
 :pattern ( ($generated@@83 $generated@@614 $generated@@686))
))) (and ($generated@@134 $generated@@609 $generated@@614) (= $generated@@615 ($generated@@240 28)))) (and (=> (= (ControlFlow 0 2) (- 0 43)) (and (<= ($generated@@240 0) $generated@@615) (< $generated@@615 256))) (=> (and (<= ($generated@@240 0) $generated@@615) (< $generated@@615 256)) (=> (and (= $generated@@616 ($generated@@240 28)) (= $generated@@617 ($generated@@240 28))) (and (=> (= (ControlFlow 0 2) (- 0 42)) (and (<= ($generated@@240 0) $generated@@617) (< $generated@@617 256))) (=> (and (<= ($generated@@240 0) $generated@@617) (< $generated@@617 256)) (=> (= $generated@@618 ($generated@@240 28)) (and (=> (= (ControlFlow 0 2) (- 0 41)) (<= $generated@@616 $generated@@618)) (=> (<= $generated@@616 $generated@@618) (=> (and (and (and ($generated@@246 $generated@@619) ($generated@@600 $generated@@619)) (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@79) (=> (and (not (= $generated@@687 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@614 $generated@@687) $generated@@60))) (= ($generated@@83 $generated@@619 $generated@@687) ($generated@@83 $generated@@614 $generated@@687))))
 :pattern ( ($generated@@83 $generated@@619 $generated@@687))
))) (and ($generated@@134 $generated@@614 $generated@@619) (= $generated@@620 ($generated@@240 28)))) (and (=> (= (ControlFlow 0 2) (- 0 40)) (and (<= ($generated@@240 0) $generated@@620) (< $generated@@620 256))) (=> (and (<= ($generated@@240 0) $generated@@620) (< $generated@@620 256)) (=> (and (= $generated@@621 ($generated@@240 28)) (= $generated@@622 ($generated@@240 30))) (and (=> (= (ControlFlow 0 2) (- 0 39)) (and (<= ($generated@@240 0) $generated@@622) (< $generated@@622 256))) (=> (and (<= ($generated@@240 0) $generated@@622) (< $generated@@622 256)) (=> (= $generated@@623 ($generated@@240 30)) (and (=> (= (ControlFlow 0 2) (- 0 38)) (<= $generated@@621 $generated@@623)) (=> (<= $generated@@621 $generated@@623) (=> (and (and (and ($generated@@246 $generated@@624) ($generated@@600 $generated@@624)) (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@79) (=> (and (not (= $generated@@688 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@619 $generated@@688) $generated@@60))) (= ($generated@@83 $generated@@624 $generated@@688) ($generated@@83 $generated@@619 $generated@@688))))
 :pattern ( ($generated@@83 $generated@@624 $generated@@688))
))) (and ($generated@@134 $generated@@619 $generated@@624) (= $generated@@625 ($generated@@240 255)))) (and (=> (= (ControlFlow 0 2) (- 0 37)) (and (<= ($generated@@240 0) $generated@@625) (< $generated@@625 256))) (=> (and (<= ($generated@@240 0) $generated@@625) (< $generated@@625 256)) (=> (and (= $generated@@626 ($generated@@240 255)) (= $generated@@627 ($generated@@240 255))) (and (=> (= (ControlFlow 0 2) (- 0 36)) (and (<= ($generated@@240 0) $generated@@627) (< $generated@@627 256))) (=> (and (<= ($generated@@240 0) $generated@@627) (< $generated@@627 256)) (=> (= $generated@@628 ($generated@@240 255)) (and (=> (= (ControlFlow 0 2) (- 0 35)) (<= $generated@@626 $generated@@628)) (=> (<= $generated@@626 $generated@@628) (=> (and (and (and ($generated@@246 $generated@@629) ($generated@@600 $generated@@629)) (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@79) (=> (and (not (= $generated@@689 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@624 $generated@@689) $generated@@60))) (= ($generated@@83 $generated@@629 $generated@@689) ($generated@@83 $generated@@624 $generated@@689))))
 :pattern ( ($generated@@83 $generated@@629 $generated@@689))
))) (and ($generated@@134 $generated@@624 $generated@@629) (= $generated@@630 ($generated@@240 0)))) (and (=> (= (ControlFlow 0 2) (- 0 34)) (and (<= ($generated@@240 0) $generated@@630) (< $generated@@630 256))) (=> (and (<= ($generated@@240 0) $generated@@630) (< $generated@@630 256)) (=> (and (= $generated@@631 ($generated@@240 0)) (= $generated@@632 ($generated@@240 255))) (and (=> (= (ControlFlow 0 2) (- 0 33)) (and (<= ($generated@@240 0) $generated@@632) (< $generated@@632 256))) (=> (and (<= ($generated@@240 0) $generated@@632) (< $generated@@632 256)) (=> (= $generated@@633 ($generated@@240 255)) (and (=> (= (ControlFlow 0 2) (- 0 32)) (<= $generated@@631 $generated@@633)) (=> (<= $generated@@631 $generated@@633) (=> (and (and (and ($generated@@246 $generated@@634) ($generated@@600 $generated@@634)) (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@79) (=> (and (not (= $generated@@690 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@629 $generated@@690) $generated@@60))) (= ($generated@@83 $generated@@634 $generated@@690) ($generated@@83 $generated@@629 $generated@@690))))
 :pattern ( ($generated@@83 $generated@@634 $generated@@690))
))) (and ($generated@@134 $generated@@629 $generated@@634) (= $generated@@635 ($generated@@240 (- 0 128))))) (and (=> (= (ControlFlow 0 2) (- 0 31)) (and (<= ($generated@@240 (- 0 128)) $generated@@635) (< $generated@@635 128))) (=> (and (<= ($generated@@240 (- 0 128)) $generated@@635) (< $generated@@635 128)) (=> (and (= $generated@@636 ($generated@@240 (- 0 128))) (= $generated@@637 ($generated@@240 (- 0 128)))) (and (=> (= (ControlFlow 0 2) (- 0 30)) (and (<= ($generated@@240 (- 0 128)) $generated@@637) (< $generated@@637 128))) (=> (and (<= ($generated@@240 (- 0 128)) $generated@@637) (< $generated@@637 128)) (=> (= $generated@@638 ($generated@@240 (- 0 128))) (and (=> (= (ControlFlow 0 2) (- 0 29)) (<= $generated@@636 $generated@@638)) (=> (<= $generated@@636 $generated@@638) (=> (and (and (and ($generated@@246 $generated@@639) ($generated@@600 $generated@@639)) (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@79) (=> (and (not (= $generated@@691 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@634 $generated@@691) $generated@@60))) (= ($generated@@83 $generated@@639 $generated@@691) ($generated@@83 $generated@@634 $generated@@691))))
 :pattern ( ($generated@@83 $generated@@639 $generated@@691))
))) (and ($generated@@134 $generated@@634 $generated@@639) (= $generated@@640 ($generated@@240 (- 0 128))))) (and (=> (= (ControlFlow 0 2) (- 0 28)) (and (<= ($generated@@240 (- 0 128)) $generated@@640) (< $generated@@640 128))) (=> (and (<= ($generated@@240 (- 0 128)) $generated@@640) (< $generated@@640 128)) (=> (and (= $generated@@641 ($generated@@240 (- 0 128))) (= $generated@@642 ($generated@@240 (- 0 127)))) (and (=> (= (ControlFlow 0 2) (- 0 27)) (and (<= ($generated@@240 (- 0 128)) $generated@@642) (< $generated@@642 128))) (=> (and (<= ($generated@@240 (- 0 128)) $generated@@642) (< $generated@@642 128)) (=> (= $generated@@643 ($generated@@240 (- 0 127))) (and (=> (= (ControlFlow 0 2) (- 0 26)) (<= $generated@@641 $generated@@643)) (=> (<= $generated@@641 $generated@@643) (=> (and (and (and ($generated@@246 $generated@@644) ($generated@@600 $generated@@644)) (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@79) (=> (and (not (= $generated@@692 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@639 $generated@@692) $generated@@60))) (= ($generated@@83 $generated@@644 $generated@@692) ($generated@@83 $generated@@639 $generated@@692))))
 :pattern ( ($generated@@83 $generated@@644 $generated@@692))
))) (and ($generated@@134 $generated@@639 $generated@@644) (= $generated@@645 ($generated@@240 126)))) (and (=> (= (ControlFlow 0 2) (- 0 25)) (and (<= ($generated@@240 (- 0 128)) $generated@@645) (< $generated@@645 128))) (=> (and (<= ($generated@@240 (- 0 128)) $generated@@645) (< $generated@@645 128)) (=> (and (= $generated@@646 ($generated@@240 126)) (= $generated@@647 ($generated@@240 127))) (and (=> (= (ControlFlow 0 2) (- 0 24)) (and (<= ($generated@@240 (- 0 128)) $generated@@647) (< $generated@@647 128))) (=> (and (<= ($generated@@240 (- 0 128)) $generated@@647) (< $generated@@647 128)) (=> (= $generated@@648 ($generated@@240 127)) (and (=> (= (ControlFlow 0 2) (- 0 23)) (<= $generated@@646 $generated@@648)) (=> (<= $generated@@646 $generated@@648) (=> (and (and (and ($generated@@246 $generated@@649) ($generated@@600 $generated@@649)) (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@79) (=> (and (not (= $generated@@693 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@644 $generated@@693) $generated@@60))) (= ($generated@@83 $generated@@649 $generated@@693) ($generated@@83 $generated@@644 $generated@@693))))
 :pattern ( ($generated@@83 $generated@@649 $generated@@693))
))) (and ($generated@@134 $generated@@644 $generated@@649) (= $generated@@650 ($generated@@240 127)))) (and (=> (= (ControlFlow 0 2) (- 0 22)) (and (<= ($generated@@240 (- 0 128)) $generated@@650) (< $generated@@650 128))) (=> (and (<= ($generated@@240 (- 0 128)) $generated@@650) (< $generated@@650 128)) (=> (and (= $generated@@651 ($generated@@240 127)) (= $generated@@652 ($generated@@240 127))) (and (=> (= (ControlFlow 0 2) (- 0 21)) (and (<= ($generated@@240 (- 0 128)) $generated@@652) (< $generated@@652 128))) (=> (and (<= ($generated@@240 (- 0 128)) $generated@@652) (< $generated@@652 128)) (=> (= $generated@@653 ($generated@@240 127)) (and (=> (= (ControlFlow 0 2) (- 0 20)) (<= $generated@@651 $generated@@653)) (=> (<= $generated@@651 $generated@@653) (=> (and (and ($generated@@246 $generated@@654) ($generated@@600 $generated@@654)) (and (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@79) (=> (and (not (= $generated@@694 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@649 $generated@@694) $generated@@60))) (= ($generated@@83 $generated@@654 $generated@@694) ($generated@@83 $generated@@649 $generated@@694))))
 :pattern ( ($generated@@83 $generated@@654 $generated@@694))
)) ($generated@@134 $generated@@649 $generated@@654))) (and (=> (= (ControlFlow 0 2) (- 0 19)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (= $generated@@655 ($generated@@240 0)) (and (=> (= (ControlFlow 0 2) (- 0 18)) ($generated@@141 ($generated@@8 ($generated@@240 2)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 2)) $generated@@138) (=> (= $generated@@656 ($generated@@240 2)) (=> (and (and ($generated@@246 $generated@@657) ($generated@@600 $generated@@657)) (and (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@79) (=> (and (not (= $generated@@695 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@654 $generated@@695) $generated@@60))) (= ($generated@@83 $generated@@657 $generated@@695) ($generated@@83 $generated@@654 $generated@@695))))
 :pattern ( ($generated@@83 $generated@@657 $generated@@695))
)) ($generated@@134 $generated@@654 $generated@@657))) (and (=> (= (ControlFlow 0 2) (- 0 17)) ($generated@@141 ($generated@@8 ($generated@@240 2)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 2)) $generated@@138) (=> (= $generated@@658 ($generated@@240 2)) (and (=> (= (ControlFlow 0 2) (- 0 16)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (= $generated@@659 ($generated@@240 0)) (=> (and (and ($generated@@246 $generated@@660) ($generated@@600 $generated@@660)) (and (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@79) (=> (and (not (= $generated@@696 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@657 $generated@@696) $generated@@60))) (= ($generated@@83 $generated@@660 $generated@@696) ($generated@@83 $generated@@657 $generated@@696))))
 :pattern ( ($generated@@83 $generated@@660 $generated@@696))
)) ($generated@@134 $generated@@657 $generated@@660))) (and (=> (= (ControlFlow 0 2) (- 0 15)) ($generated@@141 ($generated@@8 ($generated@@240 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 1)) $generated@@138) (=> (= $generated@@661 ($generated@@240 1)) (and (=> (= (ControlFlow 0 2) (- 0 14)) ($generated@@141 ($generated@@8 ($generated@@240 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 1)) $generated@@138) (=> (= $generated@@662 ($generated@@240 1)) (=> (and (and ($generated@@246 $generated@@663) ($generated@@600 $generated@@663)) (and (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@79) (=> (and (not (= $generated@@697 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@660 $generated@@697) $generated@@60))) (= ($generated@@83 $generated@@663 $generated@@697) ($generated@@83 $generated@@660 $generated@@697))))
 :pattern ( ($generated@@83 $generated@@663 $generated@@697))
)) ($generated@@134 $generated@@660 $generated@@663))) (and (=> (= (ControlFlow 0 2) (- 0 13)) ($generated@@141 ($generated@@8 ($generated@@240 6)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 6)) $generated@@138) (=> (= $generated@@664 ($generated@@240 6)) (and (=> (= (ControlFlow 0 2) (- 0 12)) ($generated@@141 ($generated@@8 ($generated@@240 5)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 5)) $generated@@138) (=> (= $generated@@665 ($generated@@240 5)) (=> (and (and ($generated@@246 $generated@@666) ($generated@@600 $generated@@666)) (and (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@79) (=> (and (not (= $generated@@698 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@663 $generated@@698) $generated@@60))) (= ($generated@@83 $generated@@666 $generated@@698) ($generated@@83 $generated@@663 $generated@@698))))
 :pattern ( ($generated@@83 $generated@@666 $generated@@698))
)) ($generated@@134 $generated@@663 $generated@@666))) (and (=> (= (ControlFlow 0 2) (- 0 11)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (= $generated@@667 ($generated@@240 0)) (and (=> (= (ControlFlow 0 2) (- 0 10)) ($generated@@141 ($generated@@8 ($generated@@240 3)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 3)) $generated@@138) (=> (= $generated@@668 ($generated@@240 3)) (=> (and (and ($generated@@246 $generated@@669) ($generated@@600 $generated@@669)) (and (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@79) (=> (and (not (= $generated@@699 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@666 $generated@@699) $generated@@60))) (= ($generated@@83 $generated@@669 $generated@@699) ($generated@@83 $generated@@666 $generated@@699))))
 :pattern ( ($generated@@83 $generated@@669 $generated@@699))
)) ($generated@@134 $generated@@666 $generated@@669))) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@141 ($generated@@8 ($generated@@240 3)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 3)) $generated@@138) (=> (= $generated@@670 ($generated@@240 3)) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (= $generated@@671 ($generated@@240 0)) (=> (and (and ($generated@@246 $generated@@672) ($generated@@600 $generated@@672)) (and (forall (($generated@@700 T@U) ) (!  (=> (= (type $generated@@700) $generated@@79) (=> (and (not (= $generated@@700 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@669 $generated@@700) $generated@@60))) (= ($generated@@83 $generated@@672 $generated@@700) ($generated@@83 $generated@@669 $generated@@700))))
 :pattern ( ($generated@@83 $generated@@672 $generated@@700))
)) ($generated@@134 $generated@@669 $generated@@672))) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@141 ($generated@@8 ($generated@@240 4)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 4)) $generated@@138) (=> (= $generated@@673 ($generated@@240 4)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (= $generated@@674 ($generated@@240 0)) (=> (and (and ($generated@@246 $generated@@675) ($generated@@600 $generated@@675)) (and (forall (($generated@@701 T@U) ) (!  (=> (= (type $generated@@701) $generated@@79) (=> (and (not (= $generated@@701 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@672 $generated@@701) $generated@@60))) (= ($generated@@83 $generated@@675 $generated@@701) ($generated@@83 $generated@@672 $generated@@701))))
 :pattern ( ($generated@@83 $generated@@675 $generated@@701))
)) ($generated@@134 $generated@@672 $generated@@675))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (= $generated@@676 ($generated@@240 0)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (= $generated@@677 ($generated@@240 0)) (=> (and (and ($generated@@246 $generated@@678) ($generated@@600 $generated@@678)) (and (forall (($generated@@702 T@U) ) (!  (=> (= (type $generated@@702) $generated@@79) (=> (and (not (= $generated@@702 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@675 $generated@@702) $generated@@60))) (= ($generated@@83 $generated@@678 $generated@@702) ($generated@@83 $generated@@675 $generated@@702))))
 :pattern ( ($generated@@83 $generated@@678 $generated@@702))
)) ($generated@@134 $generated@@675 $generated@@678))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@141 ($generated@@8 ($generated@@240 19)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 19)) $generated@@138) (=> (and (= $generated@@679 ($generated@@240 19)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@141 ($generated@@8 ($generated@@240 14)) $generated@@138))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@703  (=> (and (and ($generated@@246 $generated@@596) ($generated@@600 $generated@@596)) (and (= 3 $generated@@680) (= (ControlFlow 0 51) 2))) $generated@@681)))
$generated@@703)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 () Int)
(assert  (and (and (and (= (type $generated@@165) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@166) $generated@@46)) (= (type $generated@@167) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@171) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@174  (=> (= $generated@@165 ($generated@@107 $generated@@166 $generated@@167 $generated@@50 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= $generated@@168 $generated@@169)) (=> (<= $generated@@168 $generated@@169) (=> (and (and (and ($generated@@170 $generated@@171) ($generated@@172 $generated@@171)) (forall (($generated@@175 T@U) ) (!  (=> (= (type $generated@@175) $generated@@46) (=> (and (not (= $generated@@175 $generated@@166)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@167 $generated@@175) $generated@@50))) (= ($generated@@49 $generated@@171 $generated@@175) ($generated@@49 $generated@@167 $generated@@175))))
 :pattern ( ($generated@@49 $generated@@171 $generated@@175))
))) (and ($generated@@44 $generated@@167 $generated@@171) (= (ControlFlow 0 2) (- 0 1)))) (<= $generated@@168 $generated@@169)))))))
(let (($generated@@176  (=> (and (and (and ($generated@@170 $generated@@167) ($generated@@172 $generated@@167)) (= 1 $generated@@173)) (and (<= $generated@@168 $generated@@169) (= (ControlFlow 0 4) 2))) $generated@@174)))
$generated@@176)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@188 () Int)
(assert  (and (and (= (type $generated@@181) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@182) $generated@@46)) (= (type $generated@@183) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@189  (=> (and (= $generated@@181 ($generated@@107 $generated@@182 $generated@@183 $generated@@50 false)) (= (ControlFlow 0 2) (- 0 1))) (<= $generated@@184 $generated@@185))))
(let (($generated@@190  (=> (and (and ($generated@@186 $generated@@183) ($generated@@187 $generated@@183)) (and (<= ($generated@@162 0) $generated@@184) (< $generated@@184 256))) (=> (and (and (and (<= ($generated@@162 0) $generated@@185) (< $generated@@185 256)) (= 2 $generated@@188)) (and (<= $generated@@184 $generated@@185) (= (ControlFlow 0 3) 2))) $generated@@189))))
$generated@@190)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@188 () Int)
(assert  (and (and (= (type $generated@@181) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@182) $generated@@46)) (= (type $generated@@183) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@189  (=> (and (= $generated@@181 ($generated@@107 $generated@@182 $generated@@183 $generated@@50 false)) (= (ControlFlow 0 2) (- 0 1))) (<= $generated@@184 $generated@@185))))
(let (($generated@@190  (=> (and (and ($generated@@186 $generated@@183) ($generated@@187 $generated@@183)) (and (<= ($generated@@162 (- 0 128)) $generated@@184) (< $generated@@184 128))) (=> (and (and (and (<= ($generated@@162 (- 0 128)) $generated@@185) (< $generated@@185 128)) (= 2 $generated@@188)) (and (<= $generated@@184 $generated@@185) (= (ControlFlow 0 3) 2))) $generated@@189))))
$generated@@190)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Bool)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Bool)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 () Int)
(assert  (and (and (= (type $generated@@188) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@189) $generated@@46)) (= (type $generated@@190) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@195 true))
(let (($generated@@196 true))
(let (($generated@@197  (=> $generated@@181 (and (=> (= (ControlFlow 0 8) 6) $generated@@196) (=> (= (ControlFlow 0 8) 7) $generated@@195)))))
(let (($generated@@198 true))
(let (($generated@@199  (and (=> (= (ControlFlow 0 9) 5) $generated@@198) (=> (= (ControlFlow 0 9) 8) $generated@@197))))
(let (($generated@@200 true))
(let (($generated@@201  (=> (and (and (and (and (not false) (= $generated@@182 0)) (= $generated@@183 0)) $generated@@184) (and (and (and (<= $generated@@185 $generated@@186) (<= $generated@@186 $generated@@187)) (forall (($generated@@202 T@U) ) (!  (=> (= (type $generated@@202) $generated@@46) (=> (and (not (= $generated@@202 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@202) $generated@@50))) (= ($generated@@49 $generated@@188 $generated@@202) ($generated@@49 $generated@@188 $generated@@202))))
 :pattern ( ($generated@@49 $generated@@188 $generated@@202))
))) (and ($generated@@44 $generated@@188 $generated@@188) (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@55 (type $generated@@204))))
 (=> (and (and (= (type $generated@@203) $generated@@46) (= (type $generated@@204) ($generated@@54 $generated@@205))) (and (not (= $generated@@203 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@203) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@188 $generated@@203) $generated@@204) ($generated@@48 ($generated@@49 $generated@@188 $generated@@203) $generated@@204)) ($generated@@0 ($generated@@106 $generated@@190 $generated@@203 $generated@@204)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@188 $generated@@203) $generated@@204))
))))) (and (=> (= (ControlFlow 0 10) 4) $generated@@200) (=> (= (ControlFlow 0 10) 9) $generated@@199)))))
(let (($generated@@206  (=> (= $generated@@191 $generated@@187) (and (=> (= (ControlFlow 0 11) (- 0 12)) (<= $generated@@185 $generated@@187)) (=> (<= $generated@@185 $generated@@187) (=> (= (ControlFlow 0 11) 10) $generated@@201))))))
(let (($generated@@207 true))
(let (($generated@@208  (=> $generated@@184 (and (=> (= (ControlFlow 0 13) 11) $generated@@206) (=> (= (ControlFlow 0 13) 3) $generated@@207)))))
(let (($generated@@209 true))
(let (($generated@@210  (and (=> (= (ControlFlow 0 14) 2) $generated@@209) (=> (= (ControlFlow 0 14) 13) $generated@@208))))
(let (($generated@@211 true))
(let (($generated@@212  (=> (and (and (and (and (= $generated@@183 0) (not false)) (= $generated@@182 0)) (= $generated@@183 0)) (and (and (and (<= $generated@@185 $generated@@191) (<= $generated@@191 $generated@@187)) (forall (($generated@@213 T@U) ) (!  (=> (= (type $generated@@213) $generated@@46) (=> (and (not (= $generated@@213 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@213) $generated@@50))) (= ($generated@@49 $generated@@188 $generated@@213) ($generated@@49 $generated@@188 $generated@@213))))
 :pattern ( ($generated@@49 $generated@@188 $generated@@213))
))) (and ($generated@@44 $generated@@188 $generated@@188) (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@55 (type $generated@@215))))
 (=> (and (and (= (type $generated@@214) $generated@@46) (= (type $generated@@215) ($generated@@54 $generated@@216))) (and (not (= $generated@@214 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@214) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@188 $generated@@214) $generated@@215) ($generated@@48 ($generated@@49 $generated@@188 $generated@@214) $generated@@215)) ($generated@@0 ($generated@@106 $generated@@190 $generated@@214 $generated@@215)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@188 $generated@@214) $generated@@215))
))))) (and (=> (= (ControlFlow 0 15) 1) $generated@@211) (=> (= (ControlFlow 0 15) 14) $generated@@210)))))
(let (($generated@@217  (=> (= $generated@@190 ($generated@@107 $generated@@189 $generated@@188 $generated@@50 false)) (=> (and (= $generated@@182 ($generated@@162 0)) (= $generated@@183 ($generated@@162 0))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (<= $generated@@185 $generated@@187)) (=> (<= $generated@@185 $generated@@187) (=> (= (ControlFlow 0 16) 15) $generated@@212)))))))
(let (($generated@@218  (=> (and (and (and ($generated@@192 $generated@@188) ($generated@@193 $generated@@188)) (= 0 $generated@@194)) (and (<= $generated@@185 $generated@@187) (= (ControlFlow 0 18) 16))) $generated@@217)))
$generated@@218)))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Bool)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@204 () Int)
(assert  (and (and (= (type $generated@@192) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@193) $generated@@46)) (= (type $generated@@194) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 31) (let (($generated@@205  (=> (and (not (= $generated@@181 (- $generated@@182 1))) (= $generated@@183 (+ $generated@@184 $generated@@181))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (or (<= 0 $generated@@185) (= (- $generated@@181 $generated@@182) $generated@@185))) (=> (or (<= 0 $generated@@185) (= (- $generated@@181 $generated@@182) $generated@@185)) (and (=> (= (ControlFlow 0 13) (- 0 14)) (< (- $generated@@181 $generated@@182) $generated@@185)) (=> (< (- $generated@@181 $generated@@182) $generated@@185) (=> (= (ControlFlow 0 13) (- 0 12)) (=> $generated@@186 (<= $generated@@182 $generated@@181))))))))))
(let (($generated@@206 true))
(let (($generated@@207  (=> ($generated@@0 ($generated@@164 ($generated@@11 true))) (=> (and (= $generated@@185 (- $generated@@187 $generated@@182)) (= $generated@@181 (- $generated@@187 1))) (and (=> (= (ControlFlow 0 16) 11) $generated@@206) (=> (= (ControlFlow 0 16) 13) $generated@@205))))))
(let (($generated@@208 true))
(let (($generated@@209  (=> $generated@@186 (and (=> (= (ControlFlow 0 17) 10) $generated@@208) (=> (= (ControlFlow 0 17) 16) $generated@@207)))))
(let (($generated@@210 true))
(let (($generated@@211  (and (=> (= (ControlFlow 0 18) 9) $generated@@210) (=> (= (ControlFlow 0 18) 17) $generated@@209))))
(let (($generated@@212 true))
(let (($generated@@213  (=> (and (and (and (and (not false) (= $generated@@188 0)) (= $generated@@189 0)) $generated@@190) (and (and (and (<= $generated@@187 $generated@@191) (=> $generated@@186 true)) (and (=> $generated@@186 (<= $generated@@182 $generated@@187)) (forall (($generated@@214 T@U) ) (!  (=> (= (type $generated@@214) $generated@@46) (=> (and (not (= $generated@@214 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@50))) (= ($generated@@49 $generated@@192 $generated@@214) ($generated@@49 $generated@@192 $generated@@214))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@214))
)))) (and (and ($generated@@44 $generated@@192 $generated@@192) (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@55 (type $generated@@216))))
 (=> (and (and (= (type $generated@@215) $generated@@46) (= (type $generated@@216) ($generated@@54 $generated@@217))) (and (not (= $generated@@215 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@215) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@192 $generated@@215) $generated@@216) ($generated@@48 ($generated@@49 $generated@@192 $generated@@215) $generated@@216)) ($generated@@0 ($generated@@106 $generated@@194 $generated@@215 $generated@@216)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@192 $generated@@215) $generated@@216))
))) (and (<= (- $generated@@187 $generated@@182) $generated@@195) (=> (= (- $generated@@187 $generated@@182) $generated@@195) true))))) (and (=> (= (ControlFlow 0 19) 8) $generated@@212) (=> (= (ControlFlow 0 19) 18) $generated@@211)))))
(let (($generated@@218  (=> (and (< $generated@@182 $generated@@191) (= $generated@@195 (- $generated@@191 $generated@@182))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (=> $generated@@186 (<= $generated@@182 $generated@@191))) (=> (=> $generated@@186 (<= $generated@@182 $generated@@191)) (=> (= (ControlFlow 0 20) 19) $generated@@213))))))
(let (($generated@@219 true))
(let (($generated@@220  (and (=> (= (ControlFlow 0 22) 20) $generated@@218) (=> (= (ControlFlow 0 22) 7) $generated@@219))))
(let (($generated@@221  (=> (and (= $generated@@196 $generated@@191) (= (ControlFlow 0 24) 22)) $generated@@220)))
(let (($generated@@222  (=> (and (not ($generated@@0 ($generated@@164 ($generated@@11 true)))) (= (ControlFlow 0 23) 22)) $generated@@220)))
(let (($generated@@223  (=> (not (= $generated@@196 $generated@@191)) (=> (and (= $generated@@197 (+ $generated@@198 $generated@@196)) (= $generated@@199 (+ $generated@@196 1))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (<= 0 $generated@@200) (= (- $generated@@191 $generated@@199) $generated@@200))) (=> (or (<= 0 $generated@@200) (= (- $generated@@191 $generated@@199) $generated@@200)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< (- $generated@@191 $generated@@199) $generated@@200)) (=> (< (- $generated@@191 $generated@@199) $generated@@200) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@190 (<= $generated@@199 $generated@@191)))))))))))
(let (($generated@@224  (=> (and ($generated@@0 ($generated@@164 ($generated@@11 true))) (= $generated@@200 (- $generated@@191 $generated@@196))) (and (=> (= (ControlFlow 0 25) 24) $generated@@221) (=> (= (ControlFlow 0 25) 4) $generated@@223)))))
(let (($generated@@225  (=> $generated@@190 (and (=> (= (ControlFlow 0 26) 23) $generated@@222) (=> (= (ControlFlow 0 26) 25) $generated@@224)))))
(let (($generated@@226 true))
(let (($generated@@227  (and (=> (= (ControlFlow 0 27) 2) $generated@@226) (=> (= (ControlFlow 0 27) 26) $generated@@225))))
(let (($generated@@228 true))
(let (($generated@@229  (=> (and (and (and (and (= $generated@@189 0) (not false)) (= $generated@@188 0)) (= $generated@@189 0)) (and (and (and (<= $generated@@182 $generated@@196) (=> $generated@@190 true)) (and (=> $generated@@190 (<= $generated@@196 $generated@@191)) (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@46) (=> (and (not (= $generated@@230 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@230) $generated@@50))) (= ($generated@@49 $generated@@192 $generated@@230) ($generated@@49 $generated@@192 $generated@@230))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@230))
)))) (and (and ($generated@@44 $generated@@192 $generated@@192) (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@55 (type $generated@@232))))
 (=> (and (and (= (type $generated@@231) $generated@@46) (= (type $generated@@232) ($generated@@54 $generated@@233))) (and (not (= $generated@@231 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@231) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@192 $generated@@231) $generated@@232) ($generated@@48 ($generated@@49 $generated@@192 $generated@@231) $generated@@232)) ($generated@@0 ($generated@@106 $generated@@194 $generated@@231 $generated@@232)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@192 $generated@@231) $generated@@232))
))) (and (<= (- $generated@@191 $generated@@196) $generated@@201) (=> (= (- $generated@@191 $generated@@196) $generated@@201) true))))) (and (=> (= (ControlFlow 0 28) 1) $generated@@228) (=> (= (ControlFlow 0 28) 27) $generated@@227)))))
(let (($generated@@234  (=> (and (and (= $generated@@194 ($generated@@107 $generated@@193 $generated@@192 $generated@@50 false)) (= $generated@@188 ($generated@@162 0))) (and (= $generated@@189 ($generated@@162 0)) (= $generated@@201 (- $generated@@191 $generated@@182)))) (and (=> (= (ControlFlow 0 29) (- 0 30)) (=> $generated@@190 (<= $generated@@182 $generated@@191))) (=> (=> $generated@@190 (<= $generated@@182 $generated@@191)) (=> (= (ControlFlow 0 29) 28) $generated@@229))))))
(let (($generated@@235  (=> (and (and (and ($generated@@202 $generated@@192) ($generated@@203 $generated@@192)) (= 0 $generated@@204)) (and (<= $generated@@182 $generated@@191) (= (ControlFlow 0 31) 29))) $generated@@234)))
$generated@@235))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@325 (T@T T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@390 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@154)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@66) (= (type $generated@@271) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@267 $generated@@269) $generated@@270 $generated@@271) ($generated@@76 $generated@@269 $generated@@270 $generated@@271)))
 :pattern ( ($generated@@247 ($generated@@267 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@274) $generated@@154)) (= (type $generated@@275) $generated@@66)) ($generated@@134 $generated@@272 $generated@@273)) ($generated@@247 $generated@@274 $generated@@275 $generated@@272)) ($generated@@247 $generated@@274 $generated@@275 $generated@@273))
 :pattern ( ($generated@@134 $generated@@272 $generated@@273) ($generated@@247 $generated@@274 $generated@@275 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@276) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@279) $generated@@66)) ($generated@@134 $generated@@276 $generated@@277)) ($generated@@76 $generated@@278 $generated@@279 $generated@@276)) ($generated@@76 $generated@@278 $generated@@279 $generated@@277))
 :pattern ( ($generated@@134 $generated@@276 $generated@@277) ($generated@@76 $generated@@278 $generated@@279 $generated@@276))
)))
(assert (forall (($generated@@282 T@T) ) (! (= (type ($generated@@281 $generated@@282)) ($generated@@78 $generated@@282 $generated@@2))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@81 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@78 $generated@@284 $generated@@2)) (and (= (= ($generated@@280 $generated@@283) 0) (= $generated@@283 ($generated@@281 $generated@@284))) (=> (not (= ($generated@@280 $generated@@283) 0)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) (< 0 ($generated ($generated@@83 $generated@@283 $generated@@285))))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@78 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@83 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@83 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@78 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@81 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@78 $generated@@323 $generated@@2)) (= ($generated@@160 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@83 $generated@@322 $generated@@324))) (<= ($generated ($generated@@83 $generated@@322 $generated@@324)) ($generated@@280 $generated@@322))))
 :pattern ( ($generated@@83 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@160 $generated@@322))
)))
(assert (forall (($generated@@326 T@T) ($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@325 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@154) ($generated@@221 $generated@@328 $generated@@138)) (and (= ($generated@@267 ($generated@@325 $generated@@2 $generated@@328)) $generated@@328) ($generated@@141 ($generated@@325 $generated@@2 $generated@@328) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@328 $generated@@138))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@290 (type $generated@@329))))
(let (($generated@@331 ($generated@@289 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@288 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@287 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@286 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@290 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@78 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@290 (type $generated@@336))))
(let (($generated@@338 ($generated@@289 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@288 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@287 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@308 (type $generated@@340))))
(let (($generated@@342 ($generated@@307 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@306 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@305 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@304 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@308 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@78 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@308 (type $generated@@347))))
(let (($generated@@349 ($generated@@307 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@306 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@305 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@83 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@352) $generated@@66)) (= ($generated@@141 $generated@@351 ($generated@@159 $generated@@352)) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@351 $generated@@353)))) ($generated@@221 $generated@@353 $generated@@352))
 :pattern ( ($generated@@83 $generated@@351 $generated@@353))
))))
 :pattern ( ($generated@@141 $generated@@351 ($generated@@159 $generated@@352)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@355) $generated@@66)) (= (type $generated@@356) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@354 ($generated@@230 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@154) ($generated@@0 ($generated@@83 $generated@@354 $generated@@357))) ($generated@@247 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@83 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@76 $generated@@354 ($generated@@230 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@359) $generated@@66)) (= (type $generated@@360) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@358 ($generated@@235 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@154) ($generated@@0 ($generated@@83 $generated@@358 $generated@@361))) ($generated@@247 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@83 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@76 $generated@@358 ($generated@@235 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@83 ($generated@@281 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@83 ($generated@@281 $generated@@363) $generated@@362)))
)))
(assert  (and (forall (($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@366)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@364 $generated@@366))
)) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@290 (type $generated@@367))))
(let (($generated@@369 ($generated@@289 (type $generated@@367))))
(= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@369 $generated@@368))))
 :pattern ( ($generated@@365 $generated@@367))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@371) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@364 $generated@@370) $generated@@371))  (and ($generated@@0 ($generated@@83 ($generated@@286 $generated@@370) ($generated@@152 ($generated@@325 $generated@@145 $generated@@371)))) (= ($generated@@83 ($generated@@365 $generated@@370) ($generated@@152 ($generated@@325 $generated@@145 $generated@@371))) ($generated@@153 ($generated@@325 $generated@@145 $generated@@371))))))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@370) $generated@@371))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@308 (type $generated@@375))))
(let (($generated@@377 ($generated@@307 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@379) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@378) ($generated@@152 ($generated@@325 $generated@@145 $generated@@379)))) (= ($generated@@83 ($generated@@373 $generated@@378) ($generated@@152 ($generated@@325 $generated@@145 $generated@@379))) ($generated@@153 ($generated@@325 $generated@@145 $generated@@379))))))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@289 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@288 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@83 ($generated@@333 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@83 ($generated@@286 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@83 ($generated@@365 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@380) $generated@@384))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@307 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@306 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@83 ($generated@@344 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@83 ($generated@@373 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@385) $generated@@389))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@83 ($generated@@344 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@391 $generated@@392)) $generated@@66)
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@393) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@394) $generated@@66)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@393) $generated@@397))) (and ($generated@@247 ($generated@@83 ($generated@@365 $generated@@393) $generated@@397) $generated@@395 $generated@@396) ($generated@@247 $generated@@397 $generated@@394 $generated@@396)))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@393) $generated@@397))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@393) $generated@@397))
))))
 :pattern ( ($generated@@76 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@66)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@401) $generated@@405))) (and ($generated@@247 ($generated@@83 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@247 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@406) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@406 $generated@@408))) (and ($generated@@134 $generated@@406 $generated@@407) ($generated@@134 $generated@@407 $generated@@408))) ($generated@@134 $generated@@406 $generated@@408))
 :pattern ( ($generated@@134 $generated@@406 $generated@@407) ($generated@@134 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@78 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@308 (type $generated@@411))))
(let (($generated@@413 ($generated@@307 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@306 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@305 $generated@@413 $generated@@412)) (= ($generated@@304 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@304 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@308 (type $generated@@414))))
(let (($generated@@416 ($generated@@307 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@306 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@305 $generated@@416 $generated@@415)) (= ($generated@@344 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@344 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@308 (type $generated@@417))))
(let (($generated@@419 ($generated@@307 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@306 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@305 $generated@@419 $generated@@418)) (= ($generated@@372 $generated@@417) ($generated@@409 $generated@@154))))))
 :pattern ( ($generated@@372 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@290 (type $generated@@420))))
(let (($generated@@422 ($generated@@289 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@288 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@287 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@154) (= (type $generated@@424) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@364 $generated@@420) ($generated@@267 ($generated@@220 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@364 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@308 (type $generated@@425))))
(let (($generated@@427 ($generated@@307 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@306 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@305 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@154) (= (type $generated@@429) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@372 $generated@@425) ($generated@@267 ($generated@@220 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@372 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@154) ($generated@@221 $generated@@430 $generated@@46)) (and (= ($generated@@267 ($generated@@325 $generated@@2 $generated@@430)) $generated@@430) ($generated@@141 ($generated@@325 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@47)) (and (= ($generated@@267 ($generated@@325 $generated@@3 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@325 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@44)) (and (= ($generated@@267 ($generated@@325 $generated@@4 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@325 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 20))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@154) ($generated@@221 $generated@@434 $generated@@45)) (and (= ($generated@@267 ($generated@@325 $generated@@433 $generated@@434)) $generated@@434) ($generated@@141 ($generated@@325 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@66) (= ($generated@@221 ($generated@@267 $generated@@435) $generated@@436) ($generated@@141 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@221 ($generated@@267 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@81 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@78 $generated@@438 $generated@@2)) (<= 0 ($generated@@280 $generated@@437))))
 :pattern ( ($generated@@280 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@262 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@261 $generated@@440)) (<= 0 ($generated@@260 $generated@@439))))
 :pattern ( ($generated@@260 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@390 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@390 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@66)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@66) (= (type $generated@@448) $generated@@66)) (= ($generated@@445 ($generated@@390 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@390 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@74 ($generated@@390 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@390 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@398 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@398 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@398 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@74 ($generated@@398 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@398 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@154) (= (type $generated@@462) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@461 $generated@@462)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@144 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@144 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@144 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@144 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@154) (= (type $generated@@472) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@220 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@154) (= (type $generated@@474) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@220 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@262 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@261 $generated@@154)) (= (type $generated@@482) $generated@@66)) (= (type $generated@@483) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@260 $generated@@481))) ($generated@@247 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@77 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@77 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@487 ($generated@@230 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@230 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@491 ($generated@@235 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@235 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@495 ($generated@@159 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@159 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@499 ($generated@@475 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@475 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@74 ($generated@@475 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@325 $generated@@504 ($generated@@267 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@267 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@506) $generated@@66)) (= (type $generated@@507) $generated@@66)) (= ($generated@@141 $generated@@505 ($generated@@390 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@505) $generated@@508))) (and ($generated@@221 ($generated@@83 ($generated@@365 $generated@@505) $generated@@508) $generated@@507) ($generated@@221 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@505) $generated@@508))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@141 $generated@@505 ($generated@@390 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@510) $generated@@66)) (= (type $generated@@511) $generated@@66)) (= ($generated@@141 $generated@@509 ($generated@@398 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@509) $generated@@512))) (and ($generated@@221 ($generated@@83 ($generated@@373 $generated@@509) $generated@@512) $generated@@511) ($generated@@221 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@509) $generated@@512))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@141 $generated@@509 ($generated@@398 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@154) (= (type $generated@@516) $generated@@154)) (< ($generated@@513 $generated@@515) ($generated@@514 ($generated@@220 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@220 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@154) (= (type $generated@@518) $generated@@154)) (< ($generated@@513 $generated@@518) ($generated@@514 ($generated@@220 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@220 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@154) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) ($generated@@221 $generated@@519 ($generated@@390 $generated@@520 $generated@@521))) (and (= ($generated@@267 ($generated@@325 ($generated@@288 $generated@@154 $generated@@154) $generated@@519)) $generated@@519) ($generated@@141 ($generated@@325 ($generated@@288 $generated@@154 $generated@@154) $generated@@519) ($generated@@390 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@221 $generated@@519 ($generated@@390 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@154) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@221 $generated@@522 ($generated@@398 $generated@@523 $generated@@524))) (and (= ($generated@@267 ($generated@@325 ($generated@@306 $generated@@154 $generated@@154) $generated@@522)) $generated@@522) ($generated@@141 ($generated@@325 ($generated@@306 $generated@@154 $generated@@154) $generated@@522) ($generated@@398 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@221 $generated@@522 ($generated@@398 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@66) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@154)) ($generated@@221 $generated@@527 ($generated@@144 $generated@@525 $generated@@526))) (and (= ($generated@@267 ($generated@@325 $generated@@145 $generated@@527)) $generated@@527) ($generated@@141 ($generated@@325 $generated@@145 $generated@@527) ($generated@@144 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@221 $generated@@527 ($generated@@144 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@83 ($generated@@409 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@83 ($generated@@409 $generated@@529) $generated@@528)))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@71)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@66) (= (type $generated@@533) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@532 $generated@@533)) $generated@@62) (= ($generated@@530 ($generated@@144 $generated@@532 $generated@@533)) $generated@@64)))
 :pattern ( ($generated@@144 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@145) (= ($generated@@513 ($generated@@267 $generated@@534)) ($generated@@514 $generated@@534)))
 :pattern ( ($generated@@513 ($generated@@267 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@154) ($generated@@221 $generated@@535 ($generated@@77 0))) (and (= ($generated@@267 ($generated@@325 $generated@@2 $generated@@535)) $generated@@535) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@535) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@535 ($generated@@77 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@154) (= (type $generated@@537) $generated@@66)) ($generated@@221 $generated@@536 ($generated@@230 $generated@@537))) (and (= ($generated@@267 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@536)) $generated@@536) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@536) ($generated@@230 $generated@@537))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@230 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@154) (= (type $generated@@539) $generated@@66)) ($generated@@221 $generated@@538 ($generated@@235 $generated@@539))) (and (= ($generated@@267 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@538)) $generated@@538) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@538) ($generated@@235 $generated@@539))))
 :pattern ( ($generated@@221 $generated@@538 ($generated@@235 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@154) (= (type $generated@@541) $generated@@66)) ($generated@@221 $generated@@540 ($generated@@159 $generated@@541))) (and (= ($generated@@267 ($generated@@325 ($generated@@78 $generated@@154 $generated@@2) $generated@@540)) $generated@@540) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@2) $generated@@540) ($generated@@159 $generated@@541))))
 :pattern ( ($generated@@221 $generated@@540 ($generated@@159 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@66)) ($generated@@221 $generated@@542 ($generated@@475 $generated@@543))) (and (= ($generated@@267 ($generated@@325 ($generated@@261 $generated@@154) $generated@@542)) $generated@@542) ($generated@@141 ($generated@@325 ($generated@@261 $generated@@154) $generated@@542) ($generated@@475 $generated@@543))))
 :pattern ( ($generated@@221 $generated@@542 ($generated@@475 $generated@@543)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@63))
(assert (= ($generated@@530 $generated@@138) $generated@@65))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@544 ($generated@@159 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@544 $generated@@547)))) ($generated@@247 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@83 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@76 $generated@@544 ($generated@@159 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@550) (and ($generated@@143 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@66) ($generated@@76 $generated@@548 ($generated@@144 $generated@@549 $generated@@551) $generated@@550))
 :pattern ( ($generated@@76 $generated@@548 ($generated@@144 $generated@@549 $generated@@551) $generated@@550))
))))) ($generated@@247 ($generated@@152 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@554) (and ($generated@@143 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@66) ($generated@@76 $generated@@552 ($generated@@144 $generated@@555 $generated@@553) $generated@@554))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@144 $generated@@555 $generated@@553) $generated@@554))
))))) ($generated@@247 ($generated@@153 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@2) (= ($generated@@141 $generated@@556 $generated@@138)  (and (<= ($generated@@240 0) ($generated $generated@@556)) (< ($generated $generated@@556) 256))))
 :pattern ( ($generated@@141 $generated@@556 $generated@@138))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@267 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@267 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@267 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@267 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@267 $generated@@560)))
 :pattern ( ($generated@@267 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@262 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@261 $generated@@562)) (= ($generated@@260 $generated@@561) 0)) (= $generated@@561 ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@260 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@280 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@280 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@280 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@433)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@154)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@261 $generated@@154)) (= (type $generated@@578) $generated@@66)) (= ($generated@@141 $generated@@577 ($generated@@475 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@260 $generated@@577))) ($generated@@221 ($generated@@476 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@476 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@577 ($generated@@475 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@581))) (< ($generated@@514 ($generated@@325 $generated@@145 ($generated@@476 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@514 ($generated@@325 $generated@@145 ($generated@@476 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@141 $generated@@583 ($generated@@390 $generated@@584 $generated@@585))) (and (and ($generated@@141 ($generated@@286 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@141 ($generated@@333 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@141 ($generated@@364 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@390 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@398 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@304 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@141 ($generated@@344 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@141 ($generated@@372 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@398 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@141 $generated@@589 $generated@@46))
 :pattern ( ($generated@@141 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@141 $generated@@590 $generated@@47))
 :pattern ( ($generated@@141 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@141 $generated@@591 $generated@@44))
 :pattern ( ($generated@@141 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@433) ($generated@@141 $generated@@592 $generated@@45))
 :pattern ( ($generated@@141 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@141 $generated@@593 $generated@@48))
 :pattern ( ($generated@@141 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () Bool)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Bool)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 (T@U) Bool)
(declare-fun $generated@@608 () Int)
(assert  (and (and (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@602) $generated@@79)) (= (type $generated@@603) ($generated@@166 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@609 true))
(let (($generated@@610 true))
(let (($generated@@611  (=> $generated@@594 (and (=> (= (ControlFlow 0 8) 6) $generated@@610) (=> (= (ControlFlow 0 8) 7) $generated@@609)))))
(let (($generated@@612 true))
(let (($generated@@613  (and (=> (= (ControlFlow 0 9) 5) $generated@@612) (=> (= (ControlFlow 0 9) 8) $generated@@611))))
(let (($generated@@614 true))
(let (($generated@@615  (=> (and (and (and (and (not false) (= $generated@@595 0)) (= $generated@@596 0)) $generated@@597) (and (and (and (<= $generated@@598 $generated@@599) (<= $generated@@599 $generated@@600)) (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@79) (=> (and (not (= $generated@@616 $generated@@602)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@601 $generated@@616) $generated@@60))) (= ($generated@@83 $generated@@601 $generated@@616) ($generated@@83 $generated@@601 $generated@@616))))
 :pattern ( ($generated@@83 $generated@@601 $generated@@616))
))) (and ($generated@@134 $generated@@601 $generated@@601) (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (! (let (($generated@@619 ($generated@@69 (type $generated@@618))))
 (=> (and (and (= (type $generated@@617) $generated@@79) (= (type $generated@@618) ($generated@@68 $generated@@619))) (and (not (= $generated@@617 $generated@@602)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@601 $generated@@617) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@601 $generated@@617) $generated@@618) ($generated@@85 ($generated@@83 $generated@@601 $generated@@617) $generated@@618)) ($generated@@0 ($generated@@164 $generated@@603 $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@601 $generated@@617) $generated@@618))
))))) (and (=> (= (ControlFlow 0 10) 4) $generated@@614) (=> (= (ControlFlow 0 10) 9) $generated@@613)))))
(let (($generated@@620  (=> (= $generated@@604 $generated@@600) (and (=> (= (ControlFlow 0 11) (- 0 13)) (<= $generated@@598 $generated@@600)) (=> (<= $generated@@598 $generated@@600) (=> (and (<= $generated@@598 $generated@@605) (<= $generated@@605 $generated@@600)) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@141 ($generated@@8 $generated@@605) $generated@@138)) (=> ($generated@@141 ($generated@@8 $generated@@605) $generated@@138) (=> (= (ControlFlow 0 11) 10) $generated@@615)))))))))
(let (($generated@@621 true))
(let (($generated@@622  (=> $generated@@597 (and (=> (= (ControlFlow 0 14) 11) $generated@@620) (=> (= (ControlFlow 0 14) 3) $generated@@621)))))
(let (($generated@@623 true))
(let (($generated@@624  (and (=> (= (ControlFlow 0 15) 2) $generated@@623) (=> (= (ControlFlow 0 15) 14) $generated@@622))))
(let (($generated@@625 true))
(let (($generated@@626  (=> (and (and (and (and (= $generated@@596 0) (not false)) (= $generated@@595 0)) (= $generated@@596 0)) (and (and (and (<= $generated@@598 $generated@@604) (<= $generated@@604 $generated@@600)) (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@79) (=> (and (not (= $generated@@627 $generated@@602)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@601 $generated@@627) $generated@@60))) (= ($generated@@83 $generated@@601 $generated@@627) ($generated@@83 $generated@@601 $generated@@627))))
 :pattern ( ($generated@@83 $generated@@601 $generated@@627))
))) (and ($generated@@134 $generated@@601 $generated@@601) (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (! (let (($generated@@630 ($generated@@69 (type $generated@@629))))
 (=> (and (and (= (type $generated@@628) $generated@@79) (= (type $generated@@629) ($generated@@68 $generated@@630))) (and (not (= $generated@@628 $generated@@602)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@601 $generated@@628) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@601 $generated@@628) $generated@@629) ($generated@@85 ($generated@@83 $generated@@601 $generated@@628) $generated@@629)) ($generated@@0 ($generated@@164 $generated@@603 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@601 $generated@@628) $generated@@629))
))))) (and (=> (= (ControlFlow 0 16) 1) $generated@@625) (=> (= (ControlFlow 0 16) 15) $generated@@624)))))
(let (($generated@@631  (=> (= $generated@@603 ($generated@@165 $generated@@602 $generated@@601 $generated@@60 false)) (=> (and (= $generated@@595 ($generated@@240 0)) (= $generated@@596 ($generated@@240 0))) (and (=> (= (ControlFlow 0 17) (- 0 19)) (<= $generated@@598 $generated@@600)) (=> (<= $generated@@598 $generated@@600) (=> (and (<= $generated@@598 $generated@@606) (<= $generated@@606 $generated@@600)) (and (=> (= (ControlFlow 0 17) (- 0 18)) ($generated@@141 ($generated@@8 $generated@@606) $generated@@138)) (=> ($generated@@141 ($generated@@8 $generated@@606) $generated@@138) (=> (= (ControlFlow 0 17) 16) $generated@@626))))))))))
(let (($generated@@632  (=> (and (and ($generated@@246 $generated@@601) ($generated@@607 $generated@@601)) (and (<= ($generated@@240 0) $generated@@598) (< $generated@@598 256))) (=> (and (and (and (<= ($generated@@240 0) $generated@@600) (< $generated@@600 256)) (= 1 $generated@@608)) (and (<= $generated@@598 $generated@@600) (= (ControlFlow 0 20) 17))) $generated@@631))))
$generated@@632)))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@325 (T@T T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@390 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@154)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@66) (= (type $generated@@271) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@267 $generated@@269) $generated@@270 $generated@@271) ($generated@@76 $generated@@269 $generated@@270 $generated@@271)))
 :pattern ( ($generated@@247 ($generated@@267 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@274) $generated@@154)) (= (type $generated@@275) $generated@@66)) ($generated@@134 $generated@@272 $generated@@273)) ($generated@@247 $generated@@274 $generated@@275 $generated@@272)) ($generated@@247 $generated@@274 $generated@@275 $generated@@273))
 :pattern ( ($generated@@134 $generated@@272 $generated@@273) ($generated@@247 $generated@@274 $generated@@275 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@276) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@279) $generated@@66)) ($generated@@134 $generated@@276 $generated@@277)) ($generated@@76 $generated@@278 $generated@@279 $generated@@276)) ($generated@@76 $generated@@278 $generated@@279 $generated@@277))
 :pattern ( ($generated@@134 $generated@@276 $generated@@277) ($generated@@76 $generated@@278 $generated@@279 $generated@@276))
)))
(assert (forall (($generated@@282 T@T) ) (! (= (type ($generated@@281 $generated@@282)) ($generated@@78 $generated@@282 $generated@@2))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@81 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@78 $generated@@284 $generated@@2)) (and (= (= ($generated@@280 $generated@@283) 0) (= $generated@@283 ($generated@@281 $generated@@284))) (=> (not (= ($generated@@280 $generated@@283) 0)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) (< 0 ($generated ($generated@@83 $generated@@283 $generated@@285))))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@78 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@83 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@83 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@78 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@81 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@78 $generated@@323 $generated@@2)) (= ($generated@@160 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@83 $generated@@322 $generated@@324))) (<= ($generated ($generated@@83 $generated@@322 $generated@@324)) ($generated@@280 $generated@@322))))
 :pattern ( ($generated@@83 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@160 $generated@@322))
)))
(assert (forall (($generated@@326 T@T) ($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@325 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@154) ($generated@@221 $generated@@328 $generated@@138)) (and (= ($generated@@267 ($generated@@325 $generated@@2 $generated@@328)) $generated@@328) ($generated@@141 ($generated@@325 $generated@@2 $generated@@328) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@328 $generated@@138))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@290 (type $generated@@329))))
(let (($generated@@331 ($generated@@289 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@288 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@287 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@286 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@290 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@78 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@290 (type $generated@@336))))
(let (($generated@@338 ($generated@@289 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@288 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@287 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@308 (type $generated@@340))))
(let (($generated@@342 ($generated@@307 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@306 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@305 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@304 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@308 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@78 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@308 (type $generated@@347))))
(let (($generated@@349 ($generated@@307 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@306 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@305 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@83 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@352) $generated@@66)) (= ($generated@@141 $generated@@351 ($generated@@159 $generated@@352)) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@351 $generated@@353)))) ($generated@@221 $generated@@353 $generated@@352))
 :pattern ( ($generated@@83 $generated@@351 $generated@@353))
))))
 :pattern ( ($generated@@141 $generated@@351 ($generated@@159 $generated@@352)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@355) $generated@@66)) (= (type $generated@@356) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@354 ($generated@@230 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@154) ($generated@@0 ($generated@@83 $generated@@354 $generated@@357))) ($generated@@247 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@83 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@76 $generated@@354 ($generated@@230 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@359) $generated@@66)) (= (type $generated@@360) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@358 ($generated@@235 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@154) ($generated@@0 ($generated@@83 $generated@@358 $generated@@361))) ($generated@@247 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@83 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@76 $generated@@358 ($generated@@235 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@83 ($generated@@281 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@83 ($generated@@281 $generated@@363) $generated@@362)))
)))
(assert  (and (forall (($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@366)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@364 $generated@@366))
)) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@290 (type $generated@@367))))
(let (($generated@@369 ($generated@@289 (type $generated@@367))))
(= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@369 $generated@@368))))
 :pattern ( ($generated@@365 $generated@@367))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@371) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@364 $generated@@370) $generated@@371))  (and ($generated@@0 ($generated@@83 ($generated@@286 $generated@@370) ($generated@@152 ($generated@@325 $generated@@145 $generated@@371)))) (= ($generated@@83 ($generated@@365 $generated@@370) ($generated@@152 ($generated@@325 $generated@@145 $generated@@371))) ($generated@@153 ($generated@@325 $generated@@145 $generated@@371))))))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@370) $generated@@371))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@308 (type $generated@@375))))
(let (($generated@@377 ($generated@@307 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@379) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@378) ($generated@@152 ($generated@@325 $generated@@145 $generated@@379)))) (= ($generated@@83 ($generated@@373 $generated@@378) ($generated@@152 ($generated@@325 $generated@@145 $generated@@379))) ($generated@@153 ($generated@@325 $generated@@145 $generated@@379))))))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@289 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@288 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@83 ($generated@@333 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@83 ($generated@@286 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@83 ($generated@@365 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@380) $generated@@384))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@307 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@306 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@83 ($generated@@344 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@83 ($generated@@373 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@385) $generated@@389))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@83 ($generated@@344 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@391 $generated@@392)) $generated@@66)
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@393) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@394) $generated@@66)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@393) $generated@@397))) (and ($generated@@247 ($generated@@83 ($generated@@365 $generated@@393) $generated@@397) $generated@@395 $generated@@396) ($generated@@247 $generated@@397 $generated@@394 $generated@@396)))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@393) $generated@@397))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@393) $generated@@397))
))))
 :pattern ( ($generated@@76 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@66)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@401) $generated@@405))) (and ($generated@@247 ($generated@@83 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@247 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@406) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@406 $generated@@408))) (and ($generated@@134 $generated@@406 $generated@@407) ($generated@@134 $generated@@407 $generated@@408))) ($generated@@134 $generated@@406 $generated@@408))
 :pattern ( ($generated@@134 $generated@@406 $generated@@407) ($generated@@134 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@78 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@308 (type $generated@@411))))
(let (($generated@@413 ($generated@@307 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@306 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@305 $generated@@413 $generated@@412)) (= ($generated@@304 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@304 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@308 (type $generated@@414))))
(let (($generated@@416 ($generated@@307 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@306 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@305 $generated@@416 $generated@@415)) (= ($generated@@344 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@344 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@308 (type $generated@@417))))
(let (($generated@@419 ($generated@@307 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@306 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@305 $generated@@419 $generated@@418)) (= ($generated@@372 $generated@@417) ($generated@@409 $generated@@154))))))
 :pattern ( ($generated@@372 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@290 (type $generated@@420))))
(let (($generated@@422 ($generated@@289 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@288 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@287 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@154) (= (type $generated@@424) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@364 $generated@@420) ($generated@@267 ($generated@@220 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@364 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@308 (type $generated@@425))))
(let (($generated@@427 ($generated@@307 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@306 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@305 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@154) (= (type $generated@@429) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@372 $generated@@425) ($generated@@267 ($generated@@220 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@372 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@154) ($generated@@221 $generated@@430 $generated@@46)) (and (= ($generated@@267 ($generated@@325 $generated@@2 $generated@@430)) $generated@@430) ($generated@@141 ($generated@@325 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@47)) (and (= ($generated@@267 ($generated@@325 $generated@@3 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@325 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@44)) (and (= ($generated@@267 ($generated@@325 $generated@@4 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@325 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 20))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@154) ($generated@@221 $generated@@434 $generated@@45)) (and (= ($generated@@267 ($generated@@325 $generated@@433 $generated@@434)) $generated@@434) ($generated@@141 ($generated@@325 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@66) (= ($generated@@221 ($generated@@267 $generated@@435) $generated@@436) ($generated@@141 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@221 ($generated@@267 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@81 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@78 $generated@@438 $generated@@2)) (<= 0 ($generated@@280 $generated@@437))))
 :pattern ( ($generated@@280 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@262 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@261 $generated@@440)) (<= 0 ($generated@@260 $generated@@439))))
 :pattern ( ($generated@@260 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@390 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@390 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@66)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@66) (= (type $generated@@448) $generated@@66)) (= ($generated@@445 ($generated@@390 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@390 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@74 ($generated@@390 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@390 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@398 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@398 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@398 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@74 ($generated@@398 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@398 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@154) (= (type $generated@@462) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@461 $generated@@462)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@144 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@144 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@144 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@144 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@154) (= (type $generated@@472) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@220 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@154) (= (type $generated@@474) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@220 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@262 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@261 $generated@@154)) (= (type $generated@@482) $generated@@66)) (= (type $generated@@483) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@260 $generated@@481))) ($generated@@247 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@77 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@77 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@487 ($generated@@230 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@230 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@491 ($generated@@235 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@235 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@495 ($generated@@159 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@159 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@499 ($generated@@475 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@475 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@74 ($generated@@475 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@325 $generated@@504 ($generated@@267 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@267 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@506) $generated@@66)) (= (type $generated@@507) $generated@@66)) (= ($generated@@141 $generated@@505 ($generated@@390 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@505) $generated@@508))) (and ($generated@@221 ($generated@@83 ($generated@@365 $generated@@505) $generated@@508) $generated@@507) ($generated@@221 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@505) $generated@@508))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@141 $generated@@505 ($generated@@390 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@510) $generated@@66)) (= (type $generated@@511) $generated@@66)) (= ($generated@@141 $generated@@509 ($generated@@398 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@509) $generated@@512))) (and ($generated@@221 ($generated@@83 ($generated@@373 $generated@@509) $generated@@512) $generated@@511) ($generated@@221 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@509) $generated@@512))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@141 $generated@@509 ($generated@@398 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@154) (= (type $generated@@516) $generated@@154)) (< ($generated@@513 $generated@@515) ($generated@@514 ($generated@@220 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@220 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@154) (= (type $generated@@518) $generated@@154)) (< ($generated@@513 $generated@@518) ($generated@@514 ($generated@@220 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@220 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@154) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) ($generated@@221 $generated@@519 ($generated@@390 $generated@@520 $generated@@521))) (and (= ($generated@@267 ($generated@@325 ($generated@@288 $generated@@154 $generated@@154) $generated@@519)) $generated@@519) ($generated@@141 ($generated@@325 ($generated@@288 $generated@@154 $generated@@154) $generated@@519) ($generated@@390 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@221 $generated@@519 ($generated@@390 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@154) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@221 $generated@@522 ($generated@@398 $generated@@523 $generated@@524))) (and (= ($generated@@267 ($generated@@325 ($generated@@306 $generated@@154 $generated@@154) $generated@@522)) $generated@@522) ($generated@@141 ($generated@@325 ($generated@@306 $generated@@154 $generated@@154) $generated@@522) ($generated@@398 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@221 $generated@@522 ($generated@@398 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@66) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@154)) ($generated@@221 $generated@@527 ($generated@@144 $generated@@525 $generated@@526))) (and (= ($generated@@267 ($generated@@325 $generated@@145 $generated@@527)) $generated@@527) ($generated@@141 ($generated@@325 $generated@@145 $generated@@527) ($generated@@144 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@221 $generated@@527 ($generated@@144 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@83 ($generated@@409 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@83 ($generated@@409 $generated@@529) $generated@@528)))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@71)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@66) (= (type $generated@@533) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@532 $generated@@533)) $generated@@62) (= ($generated@@530 ($generated@@144 $generated@@532 $generated@@533)) $generated@@64)))
 :pattern ( ($generated@@144 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@145) (= ($generated@@513 ($generated@@267 $generated@@534)) ($generated@@514 $generated@@534)))
 :pattern ( ($generated@@513 ($generated@@267 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@154) ($generated@@221 $generated@@535 ($generated@@77 0))) (and (= ($generated@@267 ($generated@@325 $generated@@2 $generated@@535)) $generated@@535) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@535) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@535 ($generated@@77 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@154) (= (type $generated@@537) $generated@@66)) ($generated@@221 $generated@@536 ($generated@@230 $generated@@537))) (and (= ($generated@@267 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@536)) $generated@@536) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@536) ($generated@@230 $generated@@537))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@230 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@154) (= (type $generated@@539) $generated@@66)) ($generated@@221 $generated@@538 ($generated@@235 $generated@@539))) (and (= ($generated@@267 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@538)) $generated@@538) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@538) ($generated@@235 $generated@@539))))
 :pattern ( ($generated@@221 $generated@@538 ($generated@@235 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@154) (= (type $generated@@541) $generated@@66)) ($generated@@221 $generated@@540 ($generated@@159 $generated@@541))) (and (= ($generated@@267 ($generated@@325 ($generated@@78 $generated@@154 $generated@@2) $generated@@540)) $generated@@540) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@2) $generated@@540) ($generated@@159 $generated@@541))))
 :pattern ( ($generated@@221 $generated@@540 ($generated@@159 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@66)) ($generated@@221 $generated@@542 ($generated@@475 $generated@@543))) (and (= ($generated@@267 ($generated@@325 ($generated@@261 $generated@@154) $generated@@542)) $generated@@542) ($generated@@141 ($generated@@325 ($generated@@261 $generated@@154) $generated@@542) ($generated@@475 $generated@@543))))
 :pattern ( ($generated@@221 $generated@@542 ($generated@@475 $generated@@543)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@63))
(assert (= ($generated@@530 $generated@@138) $generated@@65))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@544 ($generated@@159 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@544 $generated@@547)))) ($generated@@247 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@83 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@76 $generated@@544 ($generated@@159 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@550) (and ($generated@@143 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@66) ($generated@@76 $generated@@548 ($generated@@144 $generated@@549 $generated@@551) $generated@@550))
 :pattern ( ($generated@@76 $generated@@548 ($generated@@144 $generated@@549 $generated@@551) $generated@@550))
))))) ($generated@@247 ($generated@@152 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@554) (and ($generated@@143 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@66) ($generated@@76 $generated@@552 ($generated@@144 $generated@@555 $generated@@553) $generated@@554))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@144 $generated@@555 $generated@@553) $generated@@554))
))))) ($generated@@247 ($generated@@153 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@2) (= ($generated@@141 $generated@@556 $generated@@138)  (and (<= ($generated@@240 (- 0 128)) ($generated $generated@@556)) (< ($generated $generated@@556) 128))))
 :pattern ( ($generated@@141 $generated@@556 $generated@@138))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@267 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@267 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@267 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@267 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@267 $generated@@560)))
 :pattern ( ($generated@@267 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@262 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@261 $generated@@562)) (= ($generated@@260 $generated@@561) 0)) (= $generated@@561 ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@260 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@280 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@280 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@280 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@433)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@154)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@261 $generated@@154)) (= (type $generated@@578) $generated@@66)) (= ($generated@@141 $generated@@577 ($generated@@475 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@260 $generated@@577))) ($generated@@221 ($generated@@476 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@476 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@577 ($generated@@475 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@581))) (< ($generated@@514 ($generated@@325 $generated@@145 ($generated@@476 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@514 ($generated@@325 $generated@@145 ($generated@@476 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@141 $generated@@583 ($generated@@390 $generated@@584 $generated@@585))) (and (and ($generated@@141 ($generated@@286 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@141 ($generated@@333 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@141 ($generated@@364 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@390 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@398 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@304 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@141 ($generated@@344 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@141 ($generated@@372 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@398 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@141 $generated@@589 $generated@@46))
 :pattern ( ($generated@@141 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@141 $generated@@590 $generated@@47))
 :pattern ( ($generated@@141 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@141 $generated@@591 $generated@@44))
 :pattern ( ($generated@@141 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@433) ($generated@@141 $generated@@592 $generated@@45))
 :pattern ( ($generated@@141 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@141 $generated@@593 $generated@@48))
 :pattern ( ($generated@@141 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () Bool)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Bool)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 (T@U) Bool)
(declare-fun $generated@@608 () Int)
(assert  (and (and (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@602) $generated@@79)) (= (type $generated@@603) ($generated@@166 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@609 true))
(let (($generated@@610 true))
(let (($generated@@611  (=> $generated@@594 (and (=> (= (ControlFlow 0 8) 6) $generated@@610) (=> (= (ControlFlow 0 8) 7) $generated@@609)))))
(let (($generated@@612 true))
(let (($generated@@613  (and (=> (= (ControlFlow 0 9) 5) $generated@@612) (=> (= (ControlFlow 0 9) 8) $generated@@611))))
(let (($generated@@614 true))
(let (($generated@@615  (=> (and (and (and (and (not false) (= $generated@@595 0)) (= $generated@@596 0)) $generated@@597) (and (and (and (<= $generated@@598 $generated@@599) (<= $generated@@599 $generated@@600)) (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@79) (=> (and (not (= $generated@@616 $generated@@602)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@601 $generated@@616) $generated@@60))) (= ($generated@@83 $generated@@601 $generated@@616) ($generated@@83 $generated@@601 $generated@@616))))
 :pattern ( ($generated@@83 $generated@@601 $generated@@616))
))) (and ($generated@@134 $generated@@601 $generated@@601) (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (! (let (($generated@@619 ($generated@@69 (type $generated@@618))))
 (=> (and (and (= (type $generated@@617) $generated@@79) (= (type $generated@@618) ($generated@@68 $generated@@619))) (and (not (= $generated@@617 $generated@@602)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@601 $generated@@617) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@601 $generated@@617) $generated@@618) ($generated@@85 ($generated@@83 $generated@@601 $generated@@617) $generated@@618)) ($generated@@0 ($generated@@164 $generated@@603 $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@601 $generated@@617) $generated@@618))
))))) (and (=> (= (ControlFlow 0 10) 4) $generated@@614) (=> (= (ControlFlow 0 10) 9) $generated@@613)))))
(let (($generated@@620  (=> (= $generated@@604 $generated@@600) (and (=> (= (ControlFlow 0 11) (- 0 13)) (<= $generated@@598 $generated@@600)) (=> (<= $generated@@598 $generated@@600) (=> (and (<= $generated@@598 $generated@@605) (<= $generated@@605 $generated@@600)) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@141 ($generated@@8 $generated@@605) $generated@@138)) (=> ($generated@@141 ($generated@@8 $generated@@605) $generated@@138) (=> (= (ControlFlow 0 11) 10) $generated@@615)))))))))
(let (($generated@@621 true))
(let (($generated@@622  (=> $generated@@597 (and (=> (= (ControlFlow 0 14) 11) $generated@@620) (=> (= (ControlFlow 0 14) 3) $generated@@621)))))
(let (($generated@@623 true))
(let (($generated@@624  (and (=> (= (ControlFlow 0 15) 2) $generated@@623) (=> (= (ControlFlow 0 15) 14) $generated@@622))))
(let (($generated@@625 true))
(let (($generated@@626  (=> (and (and (and (and (= $generated@@596 0) (not false)) (= $generated@@595 0)) (= $generated@@596 0)) (and (and (and (<= $generated@@598 $generated@@604) (<= $generated@@604 $generated@@600)) (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@79) (=> (and (not (= $generated@@627 $generated@@602)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@601 $generated@@627) $generated@@60))) (= ($generated@@83 $generated@@601 $generated@@627) ($generated@@83 $generated@@601 $generated@@627))))
 :pattern ( ($generated@@83 $generated@@601 $generated@@627))
))) (and ($generated@@134 $generated@@601 $generated@@601) (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (! (let (($generated@@630 ($generated@@69 (type $generated@@629))))
 (=> (and (and (= (type $generated@@628) $generated@@79) (= (type $generated@@629) ($generated@@68 $generated@@630))) (and (not (= $generated@@628 $generated@@602)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@601 $generated@@628) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@601 $generated@@628) $generated@@629) ($generated@@85 ($generated@@83 $generated@@601 $generated@@628) $generated@@629)) ($generated@@0 ($generated@@164 $generated@@603 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@601 $generated@@628) $generated@@629))
))))) (and (=> (= (ControlFlow 0 16) 1) $generated@@625) (=> (= (ControlFlow 0 16) 15) $generated@@624)))))
(let (($generated@@631  (=> (= $generated@@603 ($generated@@165 $generated@@602 $generated@@601 $generated@@60 false)) (=> (and (= $generated@@595 ($generated@@240 0)) (= $generated@@596 ($generated@@240 0))) (and (=> (= (ControlFlow 0 17) (- 0 19)) (<= $generated@@598 $generated@@600)) (=> (<= $generated@@598 $generated@@600) (=> (and (<= $generated@@598 $generated@@606) (<= $generated@@606 $generated@@600)) (and (=> (= (ControlFlow 0 17) (- 0 18)) ($generated@@141 ($generated@@8 $generated@@606) $generated@@138)) (=> ($generated@@141 ($generated@@8 $generated@@606) $generated@@138) (=> (= (ControlFlow 0 17) 16) $generated@@626))))))))))
(let (($generated@@632  (=> (and (and ($generated@@246 $generated@@601) ($generated@@607 $generated@@601)) (and (<= ($generated@@240 (- 0 128)) $generated@@598) (< $generated@@598 128))) (=> (and (and (and (<= ($generated@@240 (- 0 128)) $generated@@600) (< $generated@@600 128)) (= 1 $generated@@608)) (and (<= $generated@@598 $generated@@600) (= (ControlFlow 0 20) 17))) $generated@@631))))
$generated@@632)))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Bool)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Bool)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 (T@U) Bool)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@207 () Int)
(declare-fun $generated@@208 () Int)
(declare-fun $generated@@209 () Int)
(assert  (and (and (= (type $generated@@198) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@199) $generated@@46)) (= (type $generated@@200) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@210  (=> (and (and (not (= $generated@@181 $generated@@182)) (= $generated@@183 (- $generated@@181 1))) (and (= $generated@@184 (+ $generated@@185 1)) (= $generated@@186 (+ $generated@@187 3)))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (<= ($generated@@162 0) $generated@@186)) (=> (<= ($generated@@162 0) $generated@@186) (=> (= $generated@@188 (+ $generated@@187 3)) (=> (and (= $generated@@189 (+ $generated@@190 2)) (= (ControlFlow 0 9) (- 0 8))) (<= ($generated@@162 0) $generated@@189))))))))
(let (($generated@@211  (=> (= $generated@@181 $generated@@182) (=> (and (= $generated@@191 (+ $generated@@190 5)) (= (ControlFlow 0 7) (- 0 6))) (<= ($generated@@162 0) $generated@@191)))))
(let (($generated@@212  (=> $generated@@192 (and (=> (= (ControlFlow 0 11) 7) $generated@@211) (=> (= (ControlFlow 0 11) 9) $generated@@210)))))
(let (($generated@@213 true))
(let (($generated@@214  (and (=> (= (ControlFlow 0 12) 5) $generated@@213) (=> (= (ControlFlow 0 12) 11) $generated@@212))))
(let (($generated@@215 true))
(let (($generated@@216  (=> (and (<= ($generated@@162 0) $generated@@187) (<= ($generated@@162 0) $generated@@190)) (=> (and (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@185)) (<= 0 $generated@@193)) (= $generated@@194 0)) (<= 0 $generated@@195)) $generated@@196) (<= 0 $generated@@181)) (= $generated@@182 0)) (<= 0 $generated@@197)) (and (and (and (<= $generated@@182 $generated@@181) (<= $generated@@181 $generated@@197)) (forall (($generated@@217 T@U) ) (!  (=> (= (type $generated@@217) $generated@@46) (=> (and (not (= $generated@@217 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@217) $generated@@50))) (= ($generated@@49 $generated@@198 $generated@@217) ($generated@@49 $generated@@198 $generated@@217))))
 :pattern ( ($generated@@49 $generated@@198 $generated@@217))
))) (and ($generated@@44 $generated@@198 $generated@@198) (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@55 (type $generated@@219))))
 (=> (and (and (= (type $generated@@218) $generated@@46) (= (type $generated@@219) ($generated@@54 $generated@@220))) (and (not (= $generated@@218 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@218) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@198 $generated@@218) $generated@@219) ($generated@@48 ($generated@@49 $generated@@198 $generated@@218) $generated@@219)) ($generated@@0 ($generated@@106 $generated@@200 $generated@@218 $generated@@219)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@198 $generated@@218) $generated@@219))
))))) (and (=> (= (ControlFlow 0 13) 4) $generated@@215) (=> (= (ControlFlow 0 13) 12) $generated@@214))))))
(let (($generated@@221  (=> (and (not (= $generated@@193 $generated@@195)) (= $generated@@182 ($generated@@162 0))) (and (=> (= (ControlFlow 0 14) (- 0 15)) (<= $generated@@182 $generated@@197)) (=> (<= $generated@@182 $generated@@197) (=> (= (ControlFlow 0 14) 13) $generated@@216))))))
(let (($generated@@222 true))
(let (($generated@@223  (=> $generated@@196 (and (=> (= (ControlFlow 0 16) 3) $generated@@222) (=> (= (ControlFlow 0 16) 14) $generated@@221)))))
(let (($generated@@224 true))
(let (($generated@@225  (and (=> (= (ControlFlow 0 17) 2) $generated@@224) (=> (= (ControlFlow 0 17) 16) $generated@@223))))
(let (($generated@@226 true))
(let (($generated@@227  (=> (and (<= ($generated@@162 0) $generated@@201) (<= ($generated@@162 0) $generated@@202)) (=> (and (and (and (and (and (not false) (<= 0 $generated@@203)) (<= 0 $generated@@193)) (= $generated@@194 0)) (<= 0 $generated@@195)) (and (and (and (<= $generated@@194 $generated@@193) (<= $generated@@193 $generated@@195)) (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@46) (=> (and (not (= $generated@@228 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@228) $generated@@50))) (= ($generated@@49 $generated@@198 $generated@@228) ($generated@@49 $generated@@198 $generated@@228))))
 :pattern ( ($generated@@49 $generated@@198 $generated@@228))
))) (and ($generated@@44 $generated@@198 $generated@@198) (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@55 (type $generated@@230))))
 (=> (and (and (= (type $generated@@229) $generated@@46) (= (type $generated@@230) ($generated@@54 $generated@@231))) (and (not (= $generated@@229 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@229) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@198 $generated@@229) $generated@@230) ($generated@@48 ($generated@@49 $generated@@198 $generated@@229) $generated@@230)) ($generated@@0 ($generated@@106 $generated@@200 $generated@@229 $generated@@230)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@198 $generated@@229) $generated@@230))
))))) (and (=> (= (ControlFlow 0 18) 1) $generated@@226) (=> (= (ControlFlow 0 18) 17) $generated@@225))))))
(let (($generated@@232  (=> (= $generated@@200 ($generated@@107 $generated@@199 $generated@@198 $generated@@50 false)) (=> (and (= $generated@@204 ($generated@@162 0)) (= $generated@@194 ($generated@@162 0))) (and (=> (= (ControlFlow 0 19) (- 0 20)) (<= $generated@@194 $generated@@195)) (=> (<= $generated@@194 $generated@@195) (=> (= (ControlFlow 0 19) 18) $generated@@227)))))))
(let (($generated@@233  (=> (and ($generated@@205 $generated@@198) ($generated@@206 $generated@@198)) (=> (and (and (and (<= ($generated@@162 0) $generated@@195) (<= ($generated@@162 0) $generated@@197)) (and (<= ($generated@@162 0) $generated@@207) true)) (and (and (<= ($generated@@162 0) $generated@@208) true) (and (= 1 $generated@@209) (= (ControlFlow 0 21) 19)))) $generated@@232))))
$generated@@233)))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@180 Int) ($generated@@181 Int) ) (! (= ($generated@@179 $generated@@180 $generated@@181) (mod $generated@@180 $generated@@181))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@182))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@183)) ($generated@@164 ($generated@@171 $generated@@183)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@183)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Bool)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Bool)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () Int)
(declare-fun $generated@@206 () Int)
(declare-fun $generated@@207 () Int)
(declare-fun $generated@@208 () Bool)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 () Int)
(assert  (and (and (= (type $generated@@198) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@199) $generated@@46)) (= (type $generated@@200) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 52) (let (($generated@@216 true))
(let (($generated@@217  (=> (and (< $generated@@184 0) (= (ControlFlow 0 24) 22)) $generated@@216)))
(let (($generated@@218  (=> (and (not ($generated@@0 ($generated@@164 ($generated@@11 true)))) (= (ControlFlow 0 23) 22)) $generated@@216)))
(let (($generated@@219  (=> (and (<= 0 $generated@@184) (= $generated@@185 (+ $generated@@186 1))) (and (=> (= (ControlFlow 0 19) (- 0 21)) (or (<= 0 $generated@@187) (= $generated@@184 $generated@@187))) (=> (or (<= 0 $generated@@187) (= $generated@@184 $generated@@187)) (and (=> (= (ControlFlow 0 19) (- 0 20)) (< $generated@@184 $generated@@187)) (=> (< $generated@@184 $generated@@187) (=> (= (ControlFlow 0 19) (- 0 18)) (=> $generated@@188 (<= ($generated@@162 0) $generated@@184))))))))))
(let (($generated@@220  (=> (and ($generated@@0 ($generated@@164 ($generated@@11 true))) (= $generated@@184 (- $generated@@187 1))) (and (=> (= (ControlFlow 0 25) 24) $generated@@217) (=> (= (ControlFlow 0 25) 19) $generated@@219)))))
(let (($generated@@221  (=> $generated@@188 (and (=> (= (ControlFlow 0 26) 23) $generated@@218) (=> (= (ControlFlow 0 26) 25) $generated@@220)))))
(let (($generated@@222 true))
(let (($generated@@223  (and (=> (= (ControlFlow 0 27) 17) $generated@@222) (=> (= (ControlFlow 0 27) 26) $generated@@221))))
(let (($generated@@224 true))
(let (($generated@@225  (=> (and (and (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@186)) (<= 0 $generated@@189)) (= $generated@@190 0)) (= $generated@@191 7)) $generated@@192) (= $generated@@193 2)) (= $generated@@194 2)) (= $generated@@195 3)) $generated@@196) (and (and (and (<= $generated@@187 $generated@@197) (=> $generated@@188 true)) (and (=> $generated@@188 (<= ($generated@@162 0) $generated@@187)) (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@46) (=> (and (not (= $generated@@226 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@226) $generated@@50))) (= ($generated@@49 $generated@@198 $generated@@226) ($generated@@49 $generated@@198 $generated@@226))))
 :pattern ( ($generated@@49 $generated@@198 $generated@@226))
)))) (and (and ($generated@@44 $generated@@198 $generated@@198) (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@55 (type $generated@@228))))
 (=> (and (and (= (type $generated@@227) $generated@@46) (= (type $generated@@228) ($generated@@54 $generated@@229))) (and (not (= $generated@@227 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@227) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@198 $generated@@227) $generated@@228) ($generated@@48 ($generated@@49 $generated@@198 $generated@@227) $generated@@228)) ($generated@@0 ($generated@@106 $generated@@200 $generated@@227 $generated@@228)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@198 $generated@@227) $generated@@228))
))) (and (<= $generated@@187 $generated@@197) (=> (= $generated@@187 $generated@@197) true))))) (and (=> (= (ControlFlow 0 28) 16) $generated@@224) (=> (= (ControlFlow 0 28) 27) $generated@@223)))))
(let (($generated@@230  (=> (not (= $generated@@193 $generated@@195)) (and (=> (= (ControlFlow 0 29) (- 0 30)) (=> $generated@@188 (<= ($generated@@162 0) $generated@@197))) (=> (=> $generated@@188 (<= ($generated@@162 0) $generated@@197)) (=> (= (ControlFlow 0 29) 28) $generated@@225))))))
(let (($generated@@231 true))
(let (($generated@@232  (=> $generated@@196 (and (=> (= (ControlFlow 0 31) 15) $generated@@231) (=> (= (ControlFlow 0 31) 29) $generated@@230)))))
(let (($generated@@233 true))
(let (($generated@@234  (and (=> (= (ControlFlow 0 32) 14) $generated@@233) (=> (= (ControlFlow 0 32) 31) $generated@@232))))
(let (($generated@@235 true))
(let (($generated@@236  (=> (and (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@201)) (<= 0 $generated@@189)) (= $generated@@190 0)) (= $generated@@191 7)) $generated@@192) (<= 2 $generated@@193)) (= $generated@@194 2)) (= $generated@@195 3)) (and (and (and (<= $generated@@194 $generated@@193) (<= $generated@@193 $generated@@195)) (forall (($generated@@237 T@U) ) (!  (=> (= (type $generated@@237) $generated@@46) (=> (and (not (= $generated@@237 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@237) $generated@@50))) (= ($generated@@49 $generated@@198 $generated@@237) ($generated@@49 $generated@@198 $generated@@237))))
 :pattern ( ($generated@@49 $generated@@198 $generated@@237))
))) (and ($generated@@44 $generated@@198 $generated@@198) (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@55 (type $generated@@239))))
 (=> (and (and (= (type $generated@@238) $generated@@46) (= (type $generated@@239) ($generated@@54 $generated@@240))) (and (not (= $generated@@238 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@238) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@198 $generated@@238) $generated@@239) ($generated@@48 ($generated@@49 $generated@@198 $generated@@238) $generated@@239)) ($generated@@0 ($generated@@106 $generated@@200 $generated@@238 $generated@@239)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@198 $generated@@238) $generated@@239))
))))) (and (=> (= (ControlFlow 0 33) 13) $generated@@235) (=> (= (ControlFlow 0 33) 32) $generated@@234)))))
(let (($generated@@241  (=> (and (= $generated@@194 ($generated@@162 2)) (= $generated@@195 ($generated@@162 3))) (and (=> (= (ControlFlow 0 34) (- 0 35)) (<= $generated@@194 $generated@@195)) (=> (<= $generated@@194 $generated@@195) (=> (= (ControlFlow 0 34) 33) $generated@@236))))))
(let (($generated@@242  (=> (and (not (= ($generated@@179 $generated@@202 ($generated@@162 2)) ($generated@@162 0))) (= (ControlFlow 0 38) 34)) $generated@@241)))
(let (($generated@@243  (=> (and (= ($generated@@179 $generated@@202 ($generated@@162 2)) ($generated@@162 0)) (= (ControlFlow 0 37) 34)) $generated@@241)))
(let (($generated@@244  (=> (= $generated@@202 $generated@@203) (and (=> (= (ControlFlow 0 39) (- 0 40)) (not (= ($generated@@162 2) 0))) (=> (not (= ($generated@@162 2) 0)) (and (=> (= (ControlFlow 0 39) 37) $generated@@243) (=> (= (ControlFlow 0 39) 38) $generated@@242)))))))
(let (($generated@@245  (=> (and (= $generated@@189 $generated@@191) (= (ControlFlow 0 36) 34)) $generated@@241)))
(let (($generated@@246 true))
(let (($generated@@247  (=> (and (< $generated@@203 $generated@@202) (= (ControlFlow 0 11) 9)) $generated@@246)))
(let (($generated@@248  (=> (and (not ($generated@@0 ($generated@@164 ($generated@@11 true)))) (= (ControlFlow 0 10) 9)) $generated@@246)))
(let (($generated@@249  (=> (<= $generated@@202 $generated@@203) (=> (and (= $generated@@204 (+ $generated@@205 1)) (= $generated@@206 (+ $generated@@202 1))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (<= 0 $generated@@207) (= (- $generated@@203 $generated@@206) $generated@@207))) (=> (or (<= 0 $generated@@207) (= (- $generated@@203 $generated@@206) $generated@@207)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (< (- $generated@@203 $generated@@206) $generated@@207)) (=> (< (- $generated@@203 $generated@@206) $generated@@207) (=> (= (ControlFlow 0 6) (- 0 5)) (=> $generated@@208 (<= $generated@@206 $generated@@203)))))))))))
(let (($generated@@250  (=> (not (= $generated@@202 $generated@@203)) (and (=> (= (ControlFlow 0 12) 11) $generated@@247) (=> (= (ControlFlow 0 12) 6) $generated@@249)))))
(let (($generated@@251  (=> (and ($generated@@0 ($generated@@164 ($generated@@11 true))) (= $generated@@207 (- $generated@@203 $generated@@202))) (and (=> (= (ControlFlow 0 41) 39) $generated@@244) (=> (= (ControlFlow 0 41) 12) $generated@@250)))))
(let (($generated@@252  (=> $generated@@208 (and (=> (= (ControlFlow 0 42) 10) $generated@@248) (=> (= (ControlFlow 0 42) 41) $generated@@251)))))
(let (($generated@@253 true))
(let (($generated@@254  (and (=> (= (ControlFlow 0 43) 4) $generated@@253) (=> (= (ControlFlow 0 43) 42) $generated@@252))))
(let (($generated@@255 true))
(let (($generated@@256  (=> (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@205)) (<= 0 $generated@@189)) (= $generated@@190 0)) (= $generated@@191 7)) $generated@@192) (<= 0 $generated@@202)) (= $generated@@209 0)) (and (and (and (<= $generated@@209 $generated@@202) (=> $generated@@208 true)) (and (=> $generated@@208 (<= $generated@@202 $generated@@203)) (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@46) (=> (and (not (= $generated@@257 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@257) $generated@@50))) (= ($generated@@49 $generated@@198 $generated@@257) ($generated@@49 $generated@@198 $generated@@257))))
 :pattern ( ($generated@@49 $generated@@198 $generated@@257))
)))) (and (and ($generated@@44 $generated@@198 $generated@@198) (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@55 (type $generated@@259))))
 (=> (and (and (= (type $generated@@258) $generated@@46) (= (type $generated@@259) ($generated@@54 $generated@@260))) (and (not (= $generated@@258 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@258) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@198 $generated@@258) $generated@@259) ($generated@@48 ($generated@@49 $generated@@198 $generated@@258) $generated@@259)) ($generated@@0 ($generated@@106 $generated@@200 $generated@@258 $generated@@259)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@198 $generated@@258) $generated@@259))
))) (and (<= (- $generated@@203 $generated@@202) $generated@@210) (=> (= (- $generated@@203 $generated@@202) $generated@@210) true))))) (and (=> (= (ControlFlow 0 44) 3) $generated@@255) (=> (= (ControlFlow 0 44) 43) $generated@@254)))))
(let (($generated@@261  (=> (not (= $generated@@189 $generated@@191)) (=> (and (= $generated@@209 ($generated@@162 0)) (= $generated@@210 (- $generated@@203 $generated@@209))) (and (=> (= (ControlFlow 0 45) (- 0 46)) (=> $generated@@208 (<= $generated@@209 $generated@@203))) (=> (=> $generated@@208 (<= $generated@@209 $generated@@203)) (=> (= (ControlFlow 0 45) 44) $generated@@256)))))))
(let (($generated@@262  (=> $generated@@192 (and (=> (= (ControlFlow 0 47) 36) $generated@@245) (=> (= (ControlFlow 0 47) 45) $generated@@261)))))
(let (($generated@@263 true))
(let (($generated@@264  (and (=> (= (ControlFlow 0 48) 2) $generated@@263) (=> (= (ControlFlow 0 48) 47) $generated@@262))))
(let (($generated@@265 true))
(let (($generated@@266  (=> (and (and (and (and (and (not false) (<= 0 $generated@@211)) (<= 0 $generated@@189)) (= $generated@@190 0)) (= $generated@@191 7)) (and (and (and (<= $generated@@190 $generated@@189) (<= $generated@@189 $generated@@191)) (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@46) (=> (and (not (= $generated@@267 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@267) $generated@@50))) (= ($generated@@49 $generated@@198 $generated@@267) ($generated@@49 $generated@@198 $generated@@267))))
 :pattern ( ($generated@@49 $generated@@198 $generated@@267))
))) (and ($generated@@44 $generated@@198 $generated@@198) (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@55 (type $generated@@269))))
 (=> (and (and (= (type $generated@@268) $generated@@46) (= (type $generated@@269) ($generated@@54 $generated@@270))) (and (not (= $generated@@268 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@268) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@198 $generated@@268) $generated@@269) ($generated@@48 ($generated@@49 $generated@@198 $generated@@268) $generated@@269)) ($generated@@0 ($generated@@106 $generated@@200 $generated@@268 $generated@@269)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@198 $generated@@268) $generated@@269))
))))) (and (=> (= (ControlFlow 0 49) 1) $generated@@265) (=> (= (ControlFlow 0 49) 48) $generated@@264)))))
(let (($generated@@271  (=> (and (and (= $generated@@200 ($generated@@107 $generated@@199 $generated@@198 $generated@@50 false)) (= $generated@@212 ($generated@@162 0))) (and (= $generated@@190 ($generated@@162 0)) (= $generated@@191 ($generated@@162 7)))) (and (=> (= (ControlFlow 0 50) (- 0 51)) (<= $generated@@190 $generated@@191)) (=> (<= $generated@@190 $generated@@191) (=> (= (ControlFlow 0 50) 49) $generated@@266))))))
(let (($generated@@272  (=> (and ($generated@@213 $generated@@198) ($generated@@214 $generated@@198)) (=> (and (and (<= ($generated@@162 0) $generated@@203) (<= ($generated@@162 0) $generated@@197)) (and (= 1 $generated@@215) (= (ControlFlow 0 52) 50))) $generated@@271))))
$generated@@272))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (Int Int) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 Int) ($generated@@533 Int) ) (! (= ($generated@@531 $generated@@532 $generated@@533) (mod $generated@@532 $generated@@533))
 :pattern ( ($generated@@531 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@71)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@66) (= (type $generated@@537) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@536 $generated@@537)) $generated@@63) (= ($generated@@534 ($generated@@144 $generated@@536 $generated@@537)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@538)) ($generated@@515 $generated@@538)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@154) ($generated@@221 $generated@@539 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@77 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@154) (= (type $generated@@541) $generated@@66)) ($generated@@221 $generated@@540 ($generated@@230 $generated@@541))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@540)) $generated@@540) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@540) ($generated@@230 $generated@@541))))
 :pattern ( ($generated@@221 $generated@@540 ($generated@@230 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@66)) ($generated@@221 $generated@@542 ($generated@@235 $generated@@543))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@542)) $generated@@542) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@542) ($generated@@235 $generated@@543))))
 :pattern ( ($generated@@221 $generated@@542 ($generated@@235 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@154) (= (type $generated@@545) $generated@@66)) ($generated@@221 $generated@@544 ($generated@@159 $generated@@545))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@544)) $generated@@544) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@544) ($generated@@159 $generated@@545))))
 :pattern ( ($generated@@221 $generated@@544 ($generated@@159 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@154) (= (type $generated@@547) $generated@@66)) ($generated@@221 $generated@@546 ($generated@@476 $generated@@547))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@546)) $generated@@546) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@546) ($generated@@476 $generated@@547))))
 :pattern ( ($generated@@221 $generated@@546 ($generated@@476 $generated@@547)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@534 $generated@@138) $generated@@64))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@548 ($generated@@159 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@548 $generated@@551)))) ($generated@@247 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@83 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@76 $generated@@548 ($generated@@159 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@554) (and ($generated@@143 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@66) ($generated@@76 $generated@@552 ($generated@@144 $generated@@553 $generated@@555) $generated@@554))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@144 $generated@@553 $generated@@555) $generated@@554))
))))) ($generated@@247 ($generated@@152 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@66)) (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@558) (and ($generated@@143 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@66) ($generated@@76 $generated@@556 ($generated@@144 $generated@@559 $generated@@557) $generated@@558))
 :pattern ( ($generated@@76 $generated@@556 ($generated@@144 $generated@@559 $generated@@557) $generated@@558))
))))) ($generated@@247 ($generated@@153 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@154) (= (type $generated@@561) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@560) ($generated@@242 $generated@@561)) ($generated@@242 ($generated@@220 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@560) ($generated@@242 $generated@@561)))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@562))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@562))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@563)) ($generated@@242 ($generated@@268 $generated@@563)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@262 (type $generated@@564))))
 (=> (and (= (type $generated@@564) ($generated@@261 $generated@@565)) (= ($generated@@260 $generated@@564) 0)) (= $generated@@564 ($generated@@259 $generated@@565))))
 :pattern ( ($generated@@260 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@567)))
 (=> (and (and (= (type $generated@@566) ($generated@@78 $generated@@569 $generated@@2)) (= (type $generated@@568) $generated@@2)) (<= 0 ($generated $generated@@568))) (= ($generated@@281 ($generated@@84 $generated@@566 $generated@@567 $generated@@568)) (+ (- ($generated@@281 $generated@@566) ($generated ($generated@@83 $generated@@566 $generated@@567))) ($generated $generated@@568)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@566 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) $generated@@2)) ($generated@@76 $generated@@571 $generated@@46 $generated@@570))
 :pattern ( ($generated@@76 $generated@@571 $generated@@46 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@3)) ($generated@@76 $generated@@573 $generated@@47 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@47 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@4)) ($generated@@76 $generated@@575 $generated@@44 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@44 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@577) $generated@@434)) ($generated@@76 $generated@@577 $generated@@45 $generated@@576))
 :pattern ( ($generated@@76 $generated@@577 $generated@@45 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@154)) ($generated@@76 $generated@@579 $generated@@48 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@48 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@261 $generated@@154)) (= (type $generated@@581) $generated@@66)) (= ($generated@@141 $generated@@580 ($generated@@476 $generated@@581)) (forall (($generated@@582 Int) ) (!  (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@580))) ($generated@@221 ($generated@@477 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@477 $generated@@580 $generated@@582))
))))
 :pattern ( ($generated@@141 $generated@@580 ($generated@@476 $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 Int) ) (!  (=> (= (type $generated@@584) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@260 $generated@@584))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@584 $generated@@585))) ($generated@@583 $generated@@584))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@584 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@391 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@287 $generated@@586) ($generated@@230 $generated@@587)) ($generated@@141 ($generated@@334 $generated@@586) ($generated@@230 $generated@@588))) ($generated@@141 ($generated@@365 $generated@@586) ($generated@@230 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@391 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@590) $generated@@66)) (= (type $generated@@591) $generated@@66)) ($generated@@141 $generated@@589 ($generated@@399 $generated@@590 $generated@@591))) (and (and ($generated@@141 ($generated@@305 $generated@@589) ($generated@@235 $generated@@590)) ($generated@@141 ($generated@@345 $generated@@589) ($generated@@235 $generated@@591))) ($generated@@141 ($generated@@373 $generated@@589) ($generated@@235 ($generated@@144 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@141 $generated@@589 ($generated@@399 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@2) ($generated@@141 $generated@@592 $generated@@46))
 :pattern ( ($generated@@141 $generated@@592 $generated@@46))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@3) ($generated@@141 $generated@@593 $generated@@47))
 :pattern ( ($generated@@141 $generated@@593 $generated@@47))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@4) ($generated@@141 $generated@@594 $generated@@44))
 :pattern ( ($generated@@141 $generated@@594 $generated@@44))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@434) ($generated@@141 $generated@@595 $generated@@45))
 :pattern ( ($generated@@141 $generated@@595 $generated@@45))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@154) ($generated@@141 $generated@@596 $generated@@48))
 :pattern ( ($generated@@141 $generated@@596 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Bool)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 (T@U) Bool)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () Int)
(assert  (and (and (= (type $generated@@606) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@607) $generated@@79)) (= (type $generated@@608) ($generated@@166 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@614  (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (<= 0 $generated@@597) (= (- 10 $generated@@598) $generated@@597))) (=> (or (<= 0 $generated@@597) (= (- 10 $generated@@598) $generated@@597)) (=> (= (ControlFlow 0 6) (- 0 5)) (< (- 10 $generated@@598) $generated@@597))))))
(let (($generated@@615  (=> (and (and (not (= $generated@@599 ($generated@@240 7))) (= $generated@@600 (+ $generated@@599 1))) (and (= $generated@@598 $generated@@600) (= (ControlFlow 0 9) 6))) $generated@@614)))
(let (($generated@@616  (=> (and (and (= ($generated@@531 $generated@@599 ($generated@@240 2)) ($generated@@240 0)) (= $generated@@601 (+ $generated@@599 3))) (and (= $generated@@598 $generated@@601) (= (ControlFlow 0 8) 6))) $generated@@614)))
(let (($generated@@617 true))
(let (($generated@@618  (=> (not (= ($generated@@531 $generated@@599 ($generated@@240 2)) ($generated@@240 0))) (and (=> (= (ControlFlow 0 10) 4) $generated@@617) (=> (= (ControlFlow 0 10) 9) $generated@@615)))))
(let (($generated@@619  (=> (and (< $generated@@599 10) (= $generated@@597 (- 10 $generated@@599))) (and (=> (= (ControlFlow 0 11) (- 0 13)) ($generated@@141 ($generated@@8 (+ $generated@@602 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@602 1)) $generated@@138) (=> (= $generated@@603 (+ $generated@@602 1)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (not (= ($generated@@240 2) 0))) (=> (not (= ($generated@@240 2) 0)) (and (=> (= (ControlFlow 0 11) 8) $generated@@616) (=> (= (ControlFlow 0 11) 10) $generated@@618))))))))))
(let (($generated@@620 true))
(let (($generated@@621  (=> $generated@@604 (and (=> (= (ControlFlow 0 14) 3) $generated@@620) (=> (= (ControlFlow 0 14) 11) $generated@@619)))))
(let (($generated@@622 true))
(let (($generated@@623  (and (=> (= (ControlFlow 0 15) 2) $generated@@622) (=> (= (ControlFlow 0 15) 14) $generated@@621))))
(let (($generated@@624 true))
(let (($generated@@625  (=> (<= ($generated@@240 0) $generated@@602) (=> (and (and (and (and (and (<= 0 $generated@@602) (not false)) (<= 0 $generated@@599)) (= $generated@@605 10)) (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@79) (=> (and (not (= $generated@@626 $generated@@607)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@606 $generated@@626) $generated@@60))) (= ($generated@@83 $generated@@606 $generated@@626) ($generated@@83 $generated@@606 $generated@@626))))
 :pattern ( ($generated@@83 $generated@@606 $generated@@626))
))) (and (and ($generated@@134 $generated@@606 $generated@@606) (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (! (let (($generated@@629 ($generated@@69 (type $generated@@628))))
 (=> (and (and (= (type $generated@@627) $generated@@79) (= (type $generated@@628) ($generated@@68 $generated@@629))) (and (not (= $generated@@627 $generated@@607)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@606 $generated@@627) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@606 $generated@@627) $generated@@628) ($generated@@85 ($generated@@83 $generated@@606 $generated@@627) $generated@@628)) ($generated@@0 ($generated@@164 $generated@@608 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@606 $generated@@627) $generated@@628))
))) (and (<= (- 10 $generated@@599) $generated@@605) (=> (= (- 10 $generated@@599) $generated@@605) true)))) (and (=> (= (ControlFlow 0 16) 1) $generated@@624) (=> (= (ControlFlow 0 16) 15) $generated@@623))))))
(let (($generated@@630  (=> (= $generated@@608 ($generated@@165 $generated@@607 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) (- 0 18)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (and (and (= $generated@@609 ($generated@@240 0)) (= $generated@@610 ($generated@@240 0))) (and (= $generated@@605 (- 10 $generated@@610)) (= (ControlFlow 0 17) 16))) $generated@@625))))))
(let (($generated@@631  (=> (and (and (and ($generated@@246 $generated@@606) ($generated@@611 $generated@@606)) (<= ($generated@@240 0) $generated@@612)) (and (= 1 $generated@@613) (= (ControlFlow 0 19) 17))) $generated@@630)))
$generated@@631)))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (Int Int) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 Int) ($generated@@533 Int) ) (! (= ($generated@@531 $generated@@532 $generated@@533) (mod $generated@@532 $generated@@533))
 :pattern ( ($generated@@531 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@71)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@66) (= (type $generated@@537) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@536 $generated@@537)) $generated@@63) (= ($generated@@534 ($generated@@144 $generated@@536 $generated@@537)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@538)) ($generated@@515 $generated@@538)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@154) ($generated@@221 $generated@@539 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@77 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@154) (= (type $generated@@541) $generated@@66)) ($generated@@221 $generated@@540 ($generated@@230 $generated@@541))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@540)) $generated@@540) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@540) ($generated@@230 $generated@@541))))
 :pattern ( ($generated@@221 $generated@@540 ($generated@@230 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@66)) ($generated@@221 $generated@@542 ($generated@@235 $generated@@543))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@542)) $generated@@542) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@542) ($generated@@235 $generated@@543))))
 :pattern ( ($generated@@221 $generated@@542 ($generated@@235 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@154) (= (type $generated@@545) $generated@@66)) ($generated@@221 $generated@@544 ($generated@@159 $generated@@545))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@544)) $generated@@544) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@544) ($generated@@159 $generated@@545))))
 :pattern ( ($generated@@221 $generated@@544 ($generated@@159 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@154) (= (type $generated@@547) $generated@@66)) ($generated@@221 $generated@@546 ($generated@@476 $generated@@547))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@546)) $generated@@546) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@546) ($generated@@476 $generated@@547))))
 :pattern ( ($generated@@221 $generated@@546 ($generated@@476 $generated@@547)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@534 $generated@@138) $generated@@64))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@548 ($generated@@159 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@548 $generated@@551)))) ($generated@@247 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@83 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@76 $generated@@548 ($generated@@159 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@554) (and ($generated@@143 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@66) ($generated@@76 $generated@@552 ($generated@@144 $generated@@553 $generated@@555) $generated@@554))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@144 $generated@@553 $generated@@555) $generated@@554))
))))) ($generated@@247 ($generated@@152 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@66)) (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@558) (and ($generated@@143 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@66) ($generated@@76 $generated@@556 ($generated@@144 $generated@@559 $generated@@557) $generated@@558))
 :pattern ( ($generated@@76 $generated@@556 ($generated@@144 $generated@@559 $generated@@557) $generated@@558))
))))) ($generated@@247 ($generated@@153 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@154) (= (type $generated@@561) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@560) ($generated@@242 $generated@@561)) ($generated@@242 ($generated@@220 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@560) ($generated@@242 $generated@@561)))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@562))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@562))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@563)) ($generated@@242 ($generated@@268 $generated@@563)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@262 (type $generated@@564))))
 (=> (and (= (type $generated@@564) ($generated@@261 $generated@@565)) (= ($generated@@260 $generated@@564) 0)) (= $generated@@564 ($generated@@259 $generated@@565))))
 :pattern ( ($generated@@260 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@567)))
 (=> (and (and (= (type $generated@@566) ($generated@@78 $generated@@569 $generated@@2)) (= (type $generated@@568) $generated@@2)) (<= 0 ($generated $generated@@568))) (= ($generated@@281 ($generated@@84 $generated@@566 $generated@@567 $generated@@568)) (+ (- ($generated@@281 $generated@@566) ($generated ($generated@@83 $generated@@566 $generated@@567))) ($generated $generated@@568)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@566 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) $generated@@2)) ($generated@@76 $generated@@571 $generated@@46 $generated@@570))
 :pattern ( ($generated@@76 $generated@@571 $generated@@46 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@3)) ($generated@@76 $generated@@573 $generated@@47 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@47 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@4)) ($generated@@76 $generated@@575 $generated@@44 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@44 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@577) $generated@@434)) ($generated@@76 $generated@@577 $generated@@45 $generated@@576))
 :pattern ( ($generated@@76 $generated@@577 $generated@@45 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@154)) ($generated@@76 $generated@@579 $generated@@48 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@48 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@261 $generated@@154)) (= (type $generated@@581) $generated@@66)) (= ($generated@@141 $generated@@580 ($generated@@476 $generated@@581)) (forall (($generated@@582 Int) ) (!  (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@580))) ($generated@@221 ($generated@@477 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@477 $generated@@580 $generated@@582))
))))
 :pattern ( ($generated@@141 $generated@@580 ($generated@@476 $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 Int) ) (!  (=> (= (type $generated@@584) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@260 $generated@@584))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@584 $generated@@585))) ($generated@@583 $generated@@584))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@584 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@391 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@287 $generated@@586) ($generated@@230 $generated@@587)) ($generated@@141 ($generated@@334 $generated@@586) ($generated@@230 $generated@@588))) ($generated@@141 ($generated@@365 $generated@@586) ($generated@@230 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@391 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@590) $generated@@66)) (= (type $generated@@591) $generated@@66)) ($generated@@141 $generated@@589 ($generated@@399 $generated@@590 $generated@@591))) (and (and ($generated@@141 ($generated@@305 $generated@@589) ($generated@@235 $generated@@590)) ($generated@@141 ($generated@@345 $generated@@589) ($generated@@235 $generated@@591))) ($generated@@141 ($generated@@373 $generated@@589) ($generated@@235 ($generated@@144 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@141 $generated@@589 ($generated@@399 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@2) ($generated@@141 $generated@@592 $generated@@46))
 :pattern ( ($generated@@141 $generated@@592 $generated@@46))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@3) ($generated@@141 $generated@@593 $generated@@47))
 :pattern ( ($generated@@141 $generated@@593 $generated@@47))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@4) ($generated@@141 $generated@@594 $generated@@44))
 :pattern ( ($generated@@141 $generated@@594 $generated@@44))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@434) ($generated@@141 $generated@@595 $generated@@45))
 :pattern ( ($generated@@141 $generated@@595 $generated@@45))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@154) ($generated@@141 $generated@@596 $generated@@48))
 :pattern ( ($generated@@141 $generated@@596 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Bool)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 (T@U) Bool)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(assert  (and (and (= (type $generated@@607) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@608) $generated@@79)) (= (type $generated@@609) ($generated@@166 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 30) (let (($generated@@615  (=> (and (and (< $generated@@597 10) (= $generated@@597 ($generated@@240 7))) (= (ControlFlow 0 14) (- 0 13))) ($generated@@141 ($generated@@8 (+ $generated@@598 1)) $generated@@138))))
(let (($generated@@616  (=> (and (<= 10 $generated@@597) (= (ControlFlow 0 16) 14)) $generated@@615)))
(let (($generated@@617  (=> (and (< $generated@@597 10) (= (ControlFlow 0 15) 14)) $generated@@615)))
(let (($generated@@618  (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (<= 0 $generated@@599) (= (- 10 $generated@@600) $generated@@599))) (=> (or (<= 0 $generated@@599) (= (- 10 $generated@@600) $generated@@599)) (=> (= (ControlFlow 0 6) (- 0 5)) (< (- 10 $generated@@600) $generated@@599))))))
(let (($generated@@619  (=> (and (and (< $generated@@597 10) (not (= $generated@@597 7))) (= ($generated@@531 $generated@@597 ($generated@@240 2)) ($generated@@240 1))) (and (=> (= (ControlFlow 0 17) (- 0 18)) ($generated@@141 ($generated@@8 (+ $generated@@598 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@598 1)) $generated@@138) (=> (and (and (= $generated@@601 (+ $generated@@598 1)) (= $generated@@602 (+ $generated@@597 1))) (and (= $generated@@600 $generated@@602) (= (ControlFlow 0 17) 6))) $generated@@618))))))
(let (($generated@@620  (=> (and (not (and (< $generated@@597 10) (not (= $generated@@597 7)))) (= (ControlFlow 0 21) 17)) $generated@@619)))
(let (($generated@@621  (=> (and (< $generated@@597 10) (not (= $generated@@597 7))) (and (=> (= (ControlFlow 0 19) (- 0 20)) (not (= ($generated@@240 2) 0))) (=> (not (= ($generated@@240 2) 0)) (=> (= (ControlFlow 0 19) 17) $generated@@619))))))
(let (($generated@@622  (=> (<= 10 $generated@@597) (and (=> (= (ControlFlow 0 23) 19) $generated@@621) (=> (= (ControlFlow 0 23) 21) $generated@@620)))))
(let (($generated@@623  (=> (< $generated@@597 10) (and (=> (= (ControlFlow 0 22) 19) $generated@@621) (=> (= (ControlFlow 0 22) 21) $generated@@620)))))
(let (($generated@@624  (=> (and (< $generated@@597 10) (= ($generated@@531 $generated@@597 ($generated@@240 2)) ($generated@@240 0))) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@141 ($generated@@8 (+ $generated@@598 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@598 1)) $generated@@138) (=> (and (and (= $generated@@603 (+ $generated@@598 1)) (= $generated@@604 (+ $generated@@597 3))) (and (= $generated@@600 $generated@@604) (= (ControlFlow 0 8) 6))) $generated@@618))))))
(let (($generated@@625  (=> (and (<= 10 $generated@@597) (= (ControlFlow 0 12) 8)) $generated@@624)))
(let (($generated@@626  (=> (< $generated@@597 10) (and (=> (= (ControlFlow 0 10) (- 0 11)) (not (= ($generated@@240 2) 0))) (=> (not (= ($generated@@240 2) 0)) (=> (= (ControlFlow 0 10) 8) $generated@@624))))))
(let (($generated@@627 true))
(let (($generated@@628  (=> (and ($generated@@0 ($generated@@242 ($generated@@11 true))) (= $generated@@599 (- 10 $generated@@597))) (and (and (and (and (and (and (=> (= (ControlFlow 0 24) 4) $generated@@627) (=> (= (ControlFlow 0 24) 22) $generated@@623)) (=> (= (ControlFlow 0 24) 23) $generated@@622)) (=> (= (ControlFlow 0 24) 15) $generated@@617)) (=> (= (ControlFlow 0 24) 16) $generated@@616)) (=> (= (ControlFlow 0 24) 10) $generated@@626)) (=> (= (ControlFlow 0 24) 12) $generated@@625)))))
(let (($generated@@629 true))
(let (($generated@@630  (=> $generated@@605 (and (=> (= (ControlFlow 0 25) 3) $generated@@629) (=> (= (ControlFlow 0 25) 24) $generated@@628)))))
(let (($generated@@631 true))
(let (($generated@@632  (and (=> (= (ControlFlow 0 26) 2) $generated@@631) (=> (= (ControlFlow 0 26) 25) $generated@@630))))
(let (($generated@@633 true))
(let (($generated@@634  (=> (<= ($generated@@240 0) $generated@@598) (=> (and (and (and (and (and (<= 0 $generated@@598) (not false)) (<= 0 $generated@@597)) (= $generated@@606 10)) (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@79) (=> (and (not (= $generated@@635 $generated@@608)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@607 $generated@@635) $generated@@60))) (= ($generated@@83 $generated@@607 $generated@@635) ($generated@@83 $generated@@607 $generated@@635))))
 :pattern ( ($generated@@83 $generated@@607 $generated@@635))
))) (and (and ($generated@@134 $generated@@607 $generated@@607) (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (! (let (($generated@@638 ($generated@@69 (type $generated@@637))))
 (=> (and (and (= (type $generated@@636) $generated@@79) (= (type $generated@@637) ($generated@@68 $generated@@638))) (and (not (= $generated@@636 $generated@@608)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@607 $generated@@636) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@607 $generated@@636) $generated@@637) ($generated@@85 ($generated@@83 $generated@@607 $generated@@636) $generated@@637)) ($generated@@0 ($generated@@164 $generated@@609 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@607 $generated@@636) $generated@@637))
))) (and (<= (- 10 $generated@@597) $generated@@606) (=> (= (- 10 $generated@@597) $generated@@606) true)))) (and (=> (= (ControlFlow 0 27) 1) $generated@@633) (=> (= (ControlFlow 0 27) 26) $generated@@632))))))
(let (($generated@@639  (=> (= $generated@@609 ($generated@@165 $generated@@608 $generated@@607 $generated@@60 false)) (and (=> (= (ControlFlow 0 28) (- 0 29)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (and (and (= $generated@@610 ($generated@@240 0)) (= $generated@@611 ($generated@@240 0))) (and (= $generated@@606 (- 10 $generated@@611)) (= (ControlFlow 0 28) 27))) $generated@@634))))))
(let (($generated@@640  (=> (and (and (and ($generated@@246 $generated@@607) ($generated@@612 $generated@@607)) (<= ($generated@@240 0) $generated@@613)) (and (= 1 $generated@@614) (= (ControlFlow 0 30) 28))) $generated@@639)))
$generated@@640)))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (Int Int) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 Int) ($generated@@533 Int) ) (! (= ($generated@@531 $generated@@532 $generated@@533) (mod $generated@@532 $generated@@533))
 :pattern ( ($generated@@531 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@71)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@66) (= (type $generated@@537) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@536 $generated@@537)) $generated@@63) (= ($generated@@534 ($generated@@144 $generated@@536 $generated@@537)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@538)) ($generated@@515 $generated@@538)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@154) ($generated@@221 $generated@@539 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@77 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@154) (= (type $generated@@541) $generated@@66)) ($generated@@221 $generated@@540 ($generated@@230 $generated@@541))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@540)) $generated@@540) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@540) ($generated@@230 $generated@@541))))
 :pattern ( ($generated@@221 $generated@@540 ($generated@@230 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@66)) ($generated@@221 $generated@@542 ($generated@@235 $generated@@543))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@542)) $generated@@542) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@542) ($generated@@235 $generated@@543))))
 :pattern ( ($generated@@221 $generated@@542 ($generated@@235 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@154) (= (type $generated@@545) $generated@@66)) ($generated@@221 $generated@@544 ($generated@@159 $generated@@545))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@544)) $generated@@544) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@544) ($generated@@159 $generated@@545))))
 :pattern ( ($generated@@221 $generated@@544 ($generated@@159 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@154) (= (type $generated@@547) $generated@@66)) ($generated@@221 $generated@@546 ($generated@@476 $generated@@547))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@546)) $generated@@546) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@546) ($generated@@476 $generated@@547))))
 :pattern ( ($generated@@221 $generated@@546 ($generated@@476 $generated@@547)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@534 $generated@@138) $generated@@64))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@548 ($generated@@159 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@548 $generated@@551)))) ($generated@@247 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@83 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@76 $generated@@548 ($generated@@159 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@554) (and ($generated@@143 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@66) ($generated@@76 $generated@@552 ($generated@@144 $generated@@553 $generated@@555) $generated@@554))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@144 $generated@@553 $generated@@555) $generated@@554))
))))) ($generated@@247 ($generated@@152 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@66)) (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@558) (and ($generated@@143 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@66) ($generated@@76 $generated@@556 ($generated@@144 $generated@@559 $generated@@557) $generated@@558))
 :pattern ( ($generated@@76 $generated@@556 ($generated@@144 $generated@@559 $generated@@557) $generated@@558))
))))) ($generated@@247 ($generated@@153 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@154) (= (type $generated@@561) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@560) ($generated@@242 $generated@@561)) ($generated@@242 ($generated@@220 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@560) ($generated@@242 $generated@@561)))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@562))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@562))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@563)) ($generated@@242 ($generated@@268 $generated@@563)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@262 (type $generated@@564))))
 (=> (and (= (type $generated@@564) ($generated@@261 $generated@@565)) (= ($generated@@260 $generated@@564) 0)) (= $generated@@564 ($generated@@259 $generated@@565))))
 :pattern ( ($generated@@260 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@567)))
 (=> (and (and (= (type $generated@@566) ($generated@@78 $generated@@569 $generated@@2)) (= (type $generated@@568) $generated@@2)) (<= 0 ($generated $generated@@568))) (= ($generated@@281 ($generated@@84 $generated@@566 $generated@@567 $generated@@568)) (+ (- ($generated@@281 $generated@@566) ($generated ($generated@@83 $generated@@566 $generated@@567))) ($generated $generated@@568)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@566 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) $generated@@2)) ($generated@@76 $generated@@571 $generated@@46 $generated@@570))
 :pattern ( ($generated@@76 $generated@@571 $generated@@46 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@3)) ($generated@@76 $generated@@573 $generated@@47 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@47 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@4)) ($generated@@76 $generated@@575 $generated@@44 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@44 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@577) $generated@@434)) ($generated@@76 $generated@@577 $generated@@45 $generated@@576))
 :pattern ( ($generated@@76 $generated@@577 $generated@@45 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@154)) ($generated@@76 $generated@@579 $generated@@48 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@48 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@261 $generated@@154)) (= (type $generated@@581) $generated@@66)) (= ($generated@@141 $generated@@580 ($generated@@476 $generated@@581)) (forall (($generated@@582 Int) ) (!  (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@580))) ($generated@@221 ($generated@@477 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@477 $generated@@580 $generated@@582))
))))
 :pattern ( ($generated@@141 $generated@@580 ($generated@@476 $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 Int) ) (!  (=> (= (type $generated@@584) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@260 $generated@@584))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@584 $generated@@585))) ($generated@@583 $generated@@584))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@584 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@391 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@287 $generated@@586) ($generated@@230 $generated@@587)) ($generated@@141 ($generated@@334 $generated@@586) ($generated@@230 $generated@@588))) ($generated@@141 ($generated@@365 $generated@@586) ($generated@@230 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@391 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@590) $generated@@66)) (= (type $generated@@591) $generated@@66)) ($generated@@141 $generated@@589 ($generated@@399 $generated@@590 $generated@@591))) (and (and ($generated@@141 ($generated@@305 $generated@@589) ($generated@@235 $generated@@590)) ($generated@@141 ($generated@@345 $generated@@589) ($generated@@235 $generated@@591))) ($generated@@141 ($generated@@373 $generated@@589) ($generated@@235 ($generated@@144 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@141 $generated@@589 ($generated@@399 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@2) ($generated@@141 $generated@@592 $generated@@46))
 :pattern ( ($generated@@141 $generated@@592 $generated@@46))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@3) ($generated@@141 $generated@@593 $generated@@47))
 :pattern ( ($generated@@141 $generated@@593 $generated@@47))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@4) ($generated@@141 $generated@@594 $generated@@44))
 :pattern ( ($generated@@141 $generated@@594 $generated@@44))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@434) ($generated@@141 $generated@@595 $generated@@45))
 :pattern ( ($generated@@141 $generated@@595 $generated@@45))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@154) ($generated@@141 $generated@@596 $generated@@48))
 :pattern ( ($generated@@141 $generated@@596 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Bool)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 (T@U) Bool)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () Int)
(assert  (and (and (= (type $generated@@606) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@607) $generated@@79)) (= (type $generated@@608) ($generated@@166 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@614 true))
(let (($generated@@615 true))
(let (($generated@@616  (=> (= $generated@@597 ($generated@@240 7)) (and (=> (= (ControlFlow 0 9) 7) $generated@@615) (=> (= (ControlFlow 0 9) 8) $generated@@614)))))
(let (($generated@@617 true))
(let (($generated@@618  (=> (not (= $generated@@597 ($generated@@240 7))) (=> (and (= $generated@@598 (+ $generated@@597 1)) (= (ControlFlow 0 6) 4)) $generated@@617))))
(let (($generated@@619  (=> (not (= ($generated@@531 $generated@@597 ($generated@@240 2)) ($generated@@240 0))) (and (=> (= (ControlFlow 0 10) 9) $generated@@616) (=> (= (ControlFlow 0 10) 6) $generated@@618)))))
(let (($generated@@620  (=> (= ($generated@@531 $generated@@597 ($generated@@240 2)) ($generated@@240 0)) (=> (and (= $generated@@599 (+ $generated@@597 3)) (= (ControlFlow 0 5) 4)) $generated@@617))))
(let (($generated@@621  (=> (not (= $generated@@600 $generated@@601)) (and (=> (= (ControlFlow 0 11) (- 0 13)) ($generated@@141 ($generated@@8 (+ $generated@@602 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@602 1)) $generated@@138) (=> (= $generated@@603 (+ $generated@@602 1)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (not (= ($generated@@240 2) 0))) (=> (not (= ($generated@@240 2) 0)) (and (=> (= (ControlFlow 0 11) 5) $generated@@620) (=> (= (ControlFlow 0 11) 10) $generated@@619))))))))))
(let (($generated@@622 true))
(let (($generated@@623  (=> $generated@@604 (and (=> (= (ControlFlow 0 14) 3) $generated@@622) (=> (= (ControlFlow 0 14) 11) $generated@@621)))))
(let (($generated@@624 true))
(let (($generated@@625  (and (=> (= (ControlFlow 0 15) 2) $generated@@624) (=> (= (ControlFlow 0 15) 14) $generated@@623))))
(let (($generated@@626 true))
(let (($generated@@627  (=> (<= ($generated@@240 0) $generated@@602) (=> (and (and (and (and (and (and (<= 0 $generated@@602) (not false)) (<= 0 $generated@@597)) (<= 0 $generated@@600)) (= $generated@@605 0)) (= $generated@@601 10)) (and (and (and (<= $generated@@605 $generated@@600) (<= $generated@@600 $generated@@601)) (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@79) (=> (and (not (= $generated@@628 $generated@@607)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@606 $generated@@628) $generated@@60))) (= ($generated@@83 $generated@@606 $generated@@628) ($generated@@83 $generated@@606 $generated@@628))))
 :pattern ( ($generated@@83 $generated@@606 $generated@@628))
))) (and ($generated@@134 $generated@@606 $generated@@606) (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@69 (type $generated@@630))))
 (=> (and (and (= (type $generated@@629) $generated@@79) (= (type $generated@@630) ($generated@@68 $generated@@631))) (and (not (= $generated@@629 $generated@@607)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@606 $generated@@629) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@606 $generated@@629) $generated@@630) ($generated@@85 ($generated@@83 $generated@@606 $generated@@629) $generated@@630)) ($generated@@0 ($generated@@164 $generated@@608 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@606 $generated@@629) $generated@@630))
))))) (and (=> (= (ControlFlow 0 16) 1) $generated@@626) (=> (= (ControlFlow 0 16) 15) $generated@@625))))))
(let (($generated@@632  (=> (= $generated@@608 ($generated@@165 $generated@@607 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) (- 0 19)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (and (and (= $generated@@609 ($generated@@240 0)) (= $generated@@610 ($generated@@240 0))) (and (= $generated@@605 ($generated@@240 0)) (= $generated@@601 ($generated@@240 10)))) (and (=> (= (ControlFlow 0 17) (- 0 18)) (<= $generated@@605 $generated@@601)) (=> (<= $generated@@605 $generated@@601) (=> (= (ControlFlow 0 17) 16) $generated@@627)))))))))
(let (($generated@@633  (=> (and (and (and ($generated@@246 $generated@@606) ($generated@@611 $generated@@606)) (<= ($generated@@240 0) $generated@@612)) (and (= 1 $generated@@613) (= (ControlFlow 0 20) 17))) $generated@@632)))
$generated@@633)))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Bool)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Bool)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 () Int)
(assert  (and (and (= (type $generated@@189) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@190) $generated@@46)) (= (type $generated@@191) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 33) (let (($generated@@195 true))
(let (($generated@@196  (=> (= (ControlFlow 0 16) 10) $generated@@195)))
(let (($generated@@197  (=> (and (and (= $generated@@181 ($generated@@162 0)) (= $generated@@182 ($generated@@162 3))) (= (ControlFlow 0 18) 16)) $generated@@196)))
(let (($generated@@198  (=> (and (= $generated@@182 $generated@@183) (= (ControlFlow 0 17) 16)) $generated@@196)))
(let (($generated@@199  (=> (and (and (= $generated@@181 ($generated@@162 1)) (= $generated@@182 ($generated@@162 4))) (= (ControlFlow 0 11) 10)) $generated@@195)))
(let (($generated@@200 true))
(let (($generated@@201  (=> (and (not (= $generated@@182 ($generated@@162 2))) (= (ControlFlow 0 8) 6)) $generated@@200)))
(let (($generated@@202  (=> (and (= $generated@@182 ($generated@@162 2)) (= (ControlFlow 0 7) 6)) $generated@@200)))
(let (($generated@@203  (=> (not (and (= $generated@@181 ($generated@@162 1)) (= $generated@@182 ($generated@@162 4)))) (and (=> (= (ControlFlow 0 9) 7) $generated@@202) (=> (= (ControlFlow 0 9) 8) $generated@@201)))))
(let (($generated@@204  (and (=> (= (ControlFlow 0 12) 11) $generated@@199) (=> (= (ControlFlow 0 12) 9) $generated@@203))))
(let (($generated@@205  (=> (and (not (= $generated@@181 ($generated@@162 1))) (= (ControlFlow 0 14) 12)) $generated@@204)))
(let (($generated@@206  (=> (and (= $generated@@181 ($generated@@162 1)) (= (ControlFlow 0 13) 12)) $generated@@204)))
(let (($generated@@207  (=> (not (and (= $generated@@181 ($generated@@162 0)) (= $generated@@182 ($generated@@162 3)))) (and (=> (= (ControlFlow 0 15) 13) $generated@@206) (=> (= (ControlFlow 0 15) 14) $generated@@205)))))
(let (($generated@@208  (and (=> (= (ControlFlow 0 19) 18) $generated@@197) (=> (= (ControlFlow 0 19) 15) $generated@@207))))
(let (($generated@@209  (=> (and (not (= $generated@@181 ($generated@@162 0))) (= (ControlFlow 0 21) 19)) $generated@@208)))
(let (($generated@@210  (=> (and (= $generated@@181 ($generated@@162 0)) (= (ControlFlow 0 20) 19)) $generated@@208)))
(let (($generated@@211  (=> (not (= $generated@@182 $generated@@183)) (and (=> (= (ControlFlow 0 22) 20) $generated@@210) (=> (= (ControlFlow 0 22) 21) $generated@@209)))))
(let (($generated@@212  (=> $generated@@184 (and (=> (= (ControlFlow 0 23) 17) $generated@@198) (=> (= (ControlFlow 0 23) 22) $generated@@211)))))
(let (($generated@@213 true))
(let (($generated@@214  (and (=> (= (ControlFlow 0 24) 5) $generated@@213) (=> (= (ControlFlow 0 24) 23) $generated@@212))))
(let (($generated@@215 true))
(let (($generated@@216  (=> (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@181)) (= $generated@@185 0)) (= $generated@@186 10)) $generated@@187) (<= 0 $generated@@182)) (= $generated@@188 0)) (= $generated@@183 10)) (and (and (and (<= $generated@@188 $generated@@182) (<= $generated@@182 $generated@@183)) (forall (($generated@@217 T@U) ) (!  (=> (= (type $generated@@217) $generated@@46) (=> (and (not (= $generated@@217 $generated@@190)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@189 $generated@@217) $generated@@50))) (= ($generated@@49 $generated@@189 $generated@@217) ($generated@@49 $generated@@189 $generated@@217))))
 :pattern ( ($generated@@49 $generated@@189 $generated@@217))
))) (and ($generated@@44 $generated@@189 $generated@@189) (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@55 (type $generated@@219))))
 (=> (and (and (= (type $generated@@218) $generated@@46) (= (type $generated@@219) ($generated@@54 $generated@@220))) (and (not (= $generated@@218 $generated@@190)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@189 $generated@@218) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@189 $generated@@218) $generated@@219) ($generated@@48 ($generated@@49 $generated@@189 $generated@@218) $generated@@219)) ($generated@@0 ($generated@@106 $generated@@191 $generated@@218 $generated@@219)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@189 $generated@@218) $generated@@219))
))))) (and (=> (= (ControlFlow 0 25) 4) $generated@@215) (=> (= (ControlFlow 0 25) 24) $generated@@214)))))
(let (($generated@@221  (=> (not (= $generated@@181 $generated@@186)) (=> (and (= $generated@@188 ($generated@@162 0)) (= $generated@@183 ($generated@@162 10))) (and (=> (= (ControlFlow 0 26) (- 0 27)) (<= $generated@@188 $generated@@183)) (=> (<= $generated@@188 $generated@@183) (=> (= (ControlFlow 0 26) 25) $generated@@216)))))))
(let (($generated@@222 true))
(let (($generated@@223  (=> $generated@@187 (and (=> (= (ControlFlow 0 28) 3) $generated@@222) (=> (= (ControlFlow 0 28) 26) $generated@@221)))))
(let (($generated@@224 true))
(let (($generated@@225  (and (=> (= (ControlFlow 0 29) 2) $generated@@224) (=> (= (ControlFlow 0 29) 28) $generated@@223))))
(let (($generated@@226 true))
(let (($generated@@227  (=> (and (and (and (and (not false) (<= 0 $generated@@181)) (= $generated@@185 0)) (= $generated@@186 10)) (and (and (and (<= $generated@@185 $generated@@181) (<= $generated@@181 $generated@@186)) (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@46) (=> (and (not (= $generated@@228 $generated@@190)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@189 $generated@@228) $generated@@50))) (= ($generated@@49 $generated@@189 $generated@@228) ($generated@@49 $generated@@189 $generated@@228))))
 :pattern ( ($generated@@49 $generated@@189 $generated@@228))
))) (and ($generated@@44 $generated@@189 $generated@@189) (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@55 (type $generated@@230))))
 (=> (and (and (= (type $generated@@229) $generated@@46) (= (type $generated@@230) ($generated@@54 $generated@@231))) (and (not (= $generated@@229 $generated@@190)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@189 $generated@@229) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@189 $generated@@229) $generated@@230) ($generated@@48 ($generated@@49 $generated@@189 $generated@@229) $generated@@230)) ($generated@@0 ($generated@@106 $generated@@191 $generated@@229 $generated@@230)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@189 $generated@@229) $generated@@230))
))))) (and (=> (= (ControlFlow 0 30) 1) $generated@@226) (=> (= (ControlFlow 0 30) 29) $generated@@225)))))
(let (($generated@@232  (=> (= $generated@@191 ($generated@@107 $generated@@190 $generated@@189 $generated@@50 false)) (=> (and (= $generated@@185 ($generated@@162 0)) (= $generated@@186 ($generated@@162 10))) (and (=> (= (ControlFlow 0 31) (- 0 32)) (<= $generated@@185 $generated@@186)) (=> (<= $generated@@185 $generated@@186) (=> (= (ControlFlow 0 31) 30) $generated@@227)))))))
(let (($generated@@233  (=> (and (and ($generated@@192 $generated@@189) ($generated@@193 $generated@@189)) (and (= 1 $generated@@194) (= (ControlFlow 0 33) 31))) $generated@@232)))
$generated@@233))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Bool)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Bool)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Bool)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Bool)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Bool)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@204 () Int)
(assert  (and (and (= (type $generated@@196) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@197) $generated@@46)) (= (type $generated@@198) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 42) (let (($generated@@205  (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (<= 0 $generated@@181) (= (- 10 $generated@@182) $generated@@181))) (=> (or (<= 0 $generated@@181) (= (- 10 $generated@@182) $generated@@181)) (=> (= (ControlFlow 0 13) (- 0 12)) (< (- 10 $generated@@182) $generated@@181))))))
(let (($generated@@206  (=> (= (ControlFlow 0 20) 13) $generated@@205)))
(let (($generated@@207  (=> (and (and (= (- $generated@@182 1) ($generated@@162 0)) (= $generated@@183 ($generated@@162 3))) (= (ControlFlow 0 23) 20)) $generated@@206)))
(let (($generated@@208  (=> (and (and (not (and (< $generated@@183 10) (not $generated@@184))) (not (and (< $generated@@183 10) $generated@@184))) (= (ControlFlow 0 22) 20)) $generated@@206)))
(let (($generated@@209  (=> (and (not ($generated@@0 ($generated@@164 ($generated@@11 true)))) (= (ControlFlow 0 21) 20)) $generated@@206)))
(let (($generated@@210  (=> (and (and (= (- $generated@@182 1) ($generated@@162 1)) (= $generated@@183 ($generated@@162 4))) (= (ControlFlow 0 15) 13)) $generated@@205)))
(let (($generated@@211  (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (<= 0 $generated@@185) (= (- 10 $generated@@186) $generated@@185))) (=> (or (<= 0 $generated@@185) (= (- 10 $generated@@186) $generated@@185)) (=> (= (ControlFlow 0 7) (- 0 6)) (or (< (- 10 $generated@@186) $generated@@185) (and (= (- 10 $generated@@186) $generated@@185) (and (not $generated@@187) $generated@@184))))))))
(let (($generated@@212  (=> (and (< $generated@@183 10) $generated@@184) (=> (and (and (= $generated@@188 ($generated@@0 ($generated@@164 ($generated@@11 false)))) (= $generated@@186 $generated@@183)) (and (= $generated@@187 $generated@@188) (= (ControlFlow 0 30) 7))) $generated@@211))))
(let (($generated@@213  (=> (and (<= 10 $generated@@183) (= (ControlFlow 0 32) 30)) $generated@@212)))
(let (($generated@@214  (=> (and (< $generated@@183 10) (= (ControlFlow 0 31) 30)) $generated@@212)))
(let (($generated@@215  (=> (not (= $generated@@183 ($generated@@162 1))) (=> (and (and (= $generated@@189 (+ $generated@@183 1)) (= $generated@@186 $generated@@189)) (and (= $generated@@187 $generated@@184) (= (ControlFlow 0 10) 7))) $generated@@211))))
(let (($generated@@216  (=> (= $generated@@183 ($generated@@162 1)) (=> (and (and (= $generated@@190 (+ $generated@@183 1)) (= $generated@@186 $generated@@190)) (and (= $generated@@187 $generated@@184) (= (ControlFlow 0 9) 7))) $generated@@211))))
(let (($generated@@217  (=> (not (and (= (- $generated@@182 1) ($generated@@162 1)) (= $generated@@183 ($generated@@162 4)))) (and (=> (= (ControlFlow 0 11) 9) $generated@@216) (=> (= (ControlFlow 0 11) 10) $generated@@215)))))
(let (($generated@@218  (and (=> (= (ControlFlow 0 16) 15) $generated@@210) (=> (= (ControlFlow 0 16) 11) $generated@@217))))
(let (($generated@@219  (=> (and (not (= (- $generated@@182 1) ($generated@@162 1))) (= (ControlFlow 0 18) 16)) $generated@@218)))
(let (($generated@@220  (=> (and (= (- $generated@@182 1) ($generated@@162 1)) (= (ControlFlow 0 17) 16)) $generated@@218)))
(let (($generated@@221  (=> (not (and (= (- $generated@@182 1) ($generated@@162 0)) (= $generated@@183 ($generated@@162 3)))) (and (=> (= (ControlFlow 0 19) 17) $generated@@220) (=> (= (ControlFlow 0 19) 18) $generated@@219)))))
(let (($generated@@222  (and (=> (= (ControlFlow 0 24) 23) $generated@@207) (=> (= (ControlFlow 0 24) 19) $generated@@221))))
(let (($generated@@223  (=> (and (not (= (- $generated@@182 1) ($generated@@162 0))) (= (ControlFlow 0 26) 24)) $generated@@222)))
(let (($generated@@224  (=> (and (= (- $generated@@182 1) ($generated@@162 0)) (= (ControlFlow 0 25) 24)) $generated@@222)))
(let (($generated@@225  (=> (and (< $generated@@183 10) (not $generated@@184)) (and (=> (= (ControlFlow 0 27) 25) $generated@@224) (=> (= (ControlFlow 0 27) 26) $generated@@223)))))
(let (($generated@@226  (=> (and (<= 10 $generated@@183) (= (ControlFlow 0 29) 27)) $generated@@225)))
(let (($generated@@227  (=> (and (< $generated@@183 10) (= (ControlFlow 0 28) 27)) $generated@@225)))
(let (($generated@@228  (=> (and ($generated@@0 ($generated@@164 ($generated@@11 true))) (= $generated@@185 (- 10 $generated@@183))) (and (and (and (and (=> (= (ControlFlow 0 33) 22) $generated@@208) (=> (= (ControlFlow 0 33) 31) $generated@@214)) (=> (= (ControlFlow 0 33) 32) $generated@@213)) (=> (= (ControlFlow 0 33) 28) $generated@@227)) (=> (= (ControlFlow 0 33) 29) $generated@@226)))))
(let (($generated@@229  (=> $generated@@191 (and (=> (= (ControlFlow 0 34) 21) $generated@@209) (=> (= (ControlFlow 0 34) 33) $generated@@228)))))
(let (($generated@@230 true))
(let (($generated@@231  (and (=> (= (ControlFlow 0 35) 5) $generated@@230) (=> (= (ControlFlow 0 35) 34) $generated@@229))))
(let (($generated@@232 true))
(let (($generated@@233  (=> (and (and (and (and (and (and (and (and (and (not false) (and (<= 1 $generated@@182) (< $generated@@182 11))) (= $generated@@192 10)) $generated@@193) (and (<= 1 $generated@@181) (< $generated@@181 11))) (and (<= 0 $generated@@183) (< $generated@@183 11))) (= $generated@@194 10)) $generated@@195) (forall (($generated@@234 T@U) ) (!  (=> (= (type $generated@@234) $generated@@46) (=> (and (not (= $generated@@234 $generated@@197)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@196 $generated@@234) $generated@@50))) (= ($generated@@49 $generated@@196 $generated@@234) ($generated@@49 $generated@@196 $generated@@234))))
 :pattern ( ($generated@@49 $generated@@196 $generated@@234))
))) (and (and ($generated@@44 $generated@@196 $generated@@196) (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@55 (type $generated@@236))))
 (=> (and (and (= (type $generated@@235) $generated@@46) (= (type $generated@@236) ($generated@@54 $generated@@237))) (and (not (= $generated@@235 $generated@@197)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@196 $generated@@235) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@196 $generated@@235) $generated@@236) ($generated@@48 ($generated@@49 $generated@@196 $generated@@235) $generated@@236)) ($generated@@0 ($generated@@106 $generated@@198 $generated@@235 $generated@@236)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@196 $generated@@235) $generated@@236))
))) (and (<= (- 10 $generated@@183) $generated@@194) (=> (= (- 10 $generated@@183) $generated@@194) (and (=> $generated@@184 $generated@@195) (=> (= $generated@@184 $generated@@195) true)))))) (and (=> (= (ControlFlow 0 36) 4) $generated@@232) (=> (= (ControlFlow 0 36) 35) $generated@@231)))))
(let (($generated@@238  (=> (< $generated@@199 10) (=> (and (= $generated@@181 (- 10 $generated@@199)) (= $generated@@182 (+ $generated@@199 1))) (=> (and (and (= $generated@@200 ($generated@@162 0)) (= $generated@@195 ($generated@@0 ($generated@@164 ($generated@@11 true))))) (and (= $generated@@194 (- 10 $generated@@200)) (= (ControlFlow 0 37) 36))) $generated@@233)))))
(let (($generated@@239 true))
(let (($generated@@240  (=> $generated@@193 (and (=> (= (ControlFlow 0 38) 3) $generated@@239) (=> (= (ControlFlow 0 38) 37) $generated@@238)))))
(let (($generated@@241 true))
(let (($generated@@242  (and (=> (= (ControlFlow 0 39) 2) $generated@@241) (=> (= (ControlFlow 0 39) 38) $generated@@240))))
(let (($generated@@243 true))
(let (($generated@@244  (=> (and (and (and (and (not false) (and (<= 0 $generated@@199) (< $generated@@199 11))) (= $generated@@192 10)) (forall (($generated@@245 T@U) ) (!  (=> (= (type $generated@@245) $generated@@46) (=> (and (not (= $generated@@245 $generated@@197)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@196 $generated@@245) $generated@@50))) (= ($generated@@49 $generated@@196 $generated@@245) ($generated@@49 $generated@@196 $generated@@245))))
 :pattern ( ($generated@@49 $generated@@196 $generated@@245))
))) (and (and ($generated@@44 $generated@@196 $generated@@196) (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@55 (type $generated@@247))))
 (=> (and (and (= (type $generated@@246) $generated@@46) (= (type $generated@@247) ($generated@@54 $generated@@248))) (and (not (= $generated@@246 $generated@@197)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@196 $generated@@246) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@196 $generated@@246) $generated@@247) ($generated@@48 ($generated@@49 $generated@@196 $generated@@246) $generated@@247)) ($generated@@0 ($generated@@106 $generated@@198 $generated@@246 $generated@@247)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@196 $generated@@246) $generated@@247))
))) (and (<= (- 10 $generated@@199) $generated@@192) (=> (= (- 10 $generated@@199) $generated@@192) true)))) (and (=> (= (ControlFlow 0 40) 1) $generated@@243) (=> (= (ControlFlow 0 40) 39) $generated@@242)))))
(let (($generated@@249  (=> (and (and (= $generated@@198 ($generated@@107 $generated@@197 $generated@@196 $generated@@50 false)) (= $generated@@201 ($generated@@162 0))) (and (= $generated@@192 (- 10 $generated@@201)) (= (ControlFlow 0 41) 40))) $generated@@244)))
(let (($generated@@250  (=> (and (and ($generated@@202 $generated@@196) ($generated@@203 $generated@@196)) (and (= 1 $generated@@204) (= (ControlFlow 0 42) 41))) $generated@@249)))
$generated@@250)))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Bool)
(declare-fun $generated@@186 () Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 () Int)
(assert  (and (and (= (type $generated@@188) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@189) $generated@@46)) (= (type $generated@@190) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@195 true))
(let (($generated@@196  (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (<= 0 $generated@@181) (= (- 10 $generated@@182) $generated@@181))) (=> (or (<= 0 $generated@@181) (= (- 10 $generated@@182) $generated@@181)) (=> (= (ControlFlow 0 6) (- 0 5)) (< (- 10 $generated@@182) $generated@@181))))))
(let (($generated@@197  (=> ($generated@@0 ($generated@@164 ($generated@@11 false))) (=> (and (= $generated@@182 $generated@@183) (= (ControlFlow 0 11) 6)) $generated@@196))))
(let (($generated@@198  (=> (= $generated@@183 ($generated@@162 929)) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@0 ($generated@@164 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@164 ($generated@@11 false))) (and (=> (= (ControlFlow 0 12) 10) $generated@@195) (=> (= (ControlFlow 0 12) 11) $generated@@197)))))))
(let (($generated@@199  (=> (and (and (< $generated@@183 7) (= $generated@@184 (+ $generated@@183 1))) (and (= $generated@@182 $generated@@184) (= (ControlFlow 0 8) 6))) $generated@@196)))
(let (($generated@@200 true))
(let (($generated@@201  (=> (not (= $generated@@183 ($generated@@162 929))) (and (=> (= (ControlFlow 0 9) 8) $generated@@199) (=> (= (ControlFlow 0 9) 4) $generated@@200)))))
(let (($generated@@202  (=> (and (< $generated@@183 10) (= $generated@@181 (- 10 $generated@@183))) (and (=> (= (ControlFlow 0 14) 12) $generated@@198) (=> (= (ControlFlow 0 14) 9) $generated@@201)))))
(let (($generated@@203 true))
(let (($generated@@204  (=> $generated@@185 (and (=> (= (ControlFlow 0 15) 3) $generated@@203) (=> (= (ControlFlow 0 15) 14) $generated@@202)))))
(let (($generated@@205 true))
(let (($generated@@206  (and (=> (= (ControlFlow 0 16) 2) $generated@@205) (=> (= (ControlFlow 0 16) 15) $generated@@204))))
(let (($generated@@207 true))
(let (($generated@@208  (=> (and (and (and (and (and (not $generated@@186) (not false)) (and (<= 0 $generated@@183) (< $generated@@183 8))) (= $generated@@187 10)) (forall (($generated@@209 T@U) ) (!  (=> (= (type $generated@@209) $generated@@46) (=> (and (not (= $generated@@209 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@209) $generated@@50))) (= ($generated@@49 $generated@@188 $generated@@209) ($generated@@49 $generated@@188 $generated@@209))))
 :pattern ( ($generated@@49 $generated@@188 $generated@@209))
))) (and (and ($generated@@44 $generated@@188 $generated@@188) (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@55 (type $generated@@211))))
 (=> (and (and (= (type $generated@@210) $generated@@46) (= (type $generated@@211) ($generated@@54 $generated@@212))) (and (not (= $generated@@210 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@210) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@188 $generated@@210) $generated@@211) ($generated@@48 ($generated@@49 $generated@@188 $generated@@210) $generated@@211)) ($generated@@0 ($generated@@106 $generated@@190 $generated@@210 $generated@@211)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@188 $generated@@210) $generated@@211))
))) (and (<= (- 10 $generated@@183) $generated@@187) (=> (= (- 10 $generated@@183) $generated@@187) true)))) (and (=> (= (ControlFlow 0 17) 1) $generated@@207) (=> (= (ControlFlow 0 17) 16) $generated@@206)))))
(let (($generated@@213  (=> (= $generated@@190 ($generated@@107 $generated@@189 $generated@@188 $generated@@50 false)) (=> (and (and (= $generated@@186 ($generated@@0 ($generated@@164 ($generated@@11 false)))) (= $generated@@191 ($generated@@162 0))) (and (= $generated@@187 (- 10 $generated@@191)) (= (ControlFlow 0 18) 17))) $generated@@208))))
(let (($generated@@214  (=> (and (and ($generated@@192 $generated@@188) ($generated@@193 $generated@@188)) (and (= 1 $generated@@194) (= (ControlFlow 0 19) 18))) $generated@@213)))
$generated@@214)))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Bool)
(declare-fun $generated@@186 () Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 () Int)
(assert  (and (and (= (type $generated@@188) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@189) $generated@@46)) (= (type $generated@@190) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@195 true))
(let (($generated@@196  (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (<= 0 $generated@@181) (= (- 10 $generated@@182) $generated@@181))) (=> (or (<= 0 $generated@@181) (= (- 10 $generated@@182) $generated@@181)) (=> (= (ControlFlow 0 7) (- 0 6)) (< (- 10 $generated@@182) $generated@@181))))))
(let (($generated@@197  (=> ($generated@@0 ($generated@@164 ($generated@@11 false))) (=> (and (= $generated@@182 $generated@@183) (= (ControlFlow 0 12) 7)) $generated@@196))))
(let (($generated@@198  (=> (= $generated@@183 ($generated@@162 929)) (and (=> (= (ControlFlow 0 13) (- 0 14)) ($generated@@0 ($generated@@164 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@164 ($generated@@11 false))) (and (=> (= (ControlFlow 0 13) 11) $generated@@195) (=> (= (ControlFlow 0 13) 12) $generated@@197)))))))
(let (($generated@@199  (=> (and (and (< $generated@@183 7) (= $generated@@184 (+ $generated@@183 1))) (and (= $generated@@182 $generated@@184) (= (ControlFlow 0 9) 7))) $generated@@196)))
(let (($generated@@200 true))
(let (($generated@@201  (=> (not (= $generated@@183 ($generated@@162 929))) (and (=> (= (ControlFlow 0 10) 9) $generated@@199) (=> (= (ControlFlow 0 10) 5) $generated@@200)))))
(let (($generated@@202  (=> (< $generated@@183 10) (and (=> (= (ControlFlow 0 15) 13) $generated@@198) (=> (= (ControlFlow 0 15) 10) $generated@@201)))))
(let (($generated@@203 true))
(let (($generated@@204  (=> (and ($generated@@0 ($generated@@164 ($generated@@11 true))) (= $generated@@181 (- 10 $generated@@183))) (and (=> (= (ControlFlow 0 16) 15) $generated@@202) (=> (= (ControlFlow 0 16) 4) $generated@@203)))))
(let (($generated@@205 true))
(let (($generated@@206  (=> $generated@@185 (and (=> (= (ControlFlow 0 17) 3) $generated@@205) (=> (= (ControlFlow 0 17) 16) $generated@@204)))))
(let (($generated@@207 true))
(let (($generated@@208  (and (=> (= (ControlFlow 0 18) 2) $generated@@207) (=> (= (ControlFlow 0 18) 17) $generated@@206))))
(let (($generated@@209 true))
(let (($generated@@210  (=> (and (and (and (and (and (not $generated@@186) (not false)) (and (<= 0 $generated@@183) (< $generated@@183 8))) (= $generated@@187 10)) (forall (($generated@@211 T@U) ) (!  (=> (= (type $generated@@211) $generated@@46) (=> (and (not (= $generated@@211 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@211) $generated@@50))) (= ($generated@@49 $generated@@188 $generated@@211) ($generated@@49 $generated@@188 $generated@@211))))
 :pattern ( ($generated@@49 $generated@@188 $generated@@211))
))) (and (and ($generated@@44 $generated@@188 $generated@@188) (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@55 (type $generated@@213))))
 (=> (and (and (= (type $generated@@212) $generated@@46) (= (type $generated@@213) ($generated@@54 $generated@@214))) (and (not (= $generated@@212 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@212) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@188 $generated@@212) $generated@@213) ($generated@@48 ($generated@@49 $generated@@188 $generated@@212) $generated@@213)) ($generated@@0 ($generated@@106 $generated@@190 $generated@@212 $generated@@213)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@188 $generated@@212) $generated@@213))
))) (and (<= (- 10 $generated@@183) $generated@@187) (=> (= (- 10 $generated@@183) $generated@@187) true)))) (and (=> (= (ControlFlow 0 19) 1) $generated@@209) (=> (= (ControlFlow 0 19) 18) $generated@@208)))))
(let (($generated@@215  (=> (= $generated@@190 ($generated@@107 $generated@@189 $generated@@188 $generated@@50 false)) (=> (and (and (= $generated@@186 ($generated@@0 ($generated@@164 ($generated@@11 false)))) (= $generated@@191 ($generated@@162 0))) (and (= $generated@@187 (- 10 $generated@@191)) (= (ControlFlow 0 20) 19))) $generated@@210))))
(let (($generated@@216  (=> (and (and ($generated@@192 $generated@@188) ($generated@@193 $generated@@188)) (and (= 1 $generated@@194) (= (ControlFlow 0 21) 20))) $generated@@215)))
$generated@@216)))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Bool)
(declare-fun $generated@@184 () Bool)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@191 () Int)
(assert  (and (and (= (type $generated@@186) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@187) $generated@@46)) (= (type $generated@@188) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@192 true))
(let (($generated@@193 true))
(let (($generated@@194  (=> (and ($generated@@0 ($generated@@164 ($generated@@11 false))) (= (ControlFlow 0 9) 5)) $generated@@193)))
(let (($generated@@195  (=> (= $generated@@181 ($generated@@162 929)) (and (=> (= (ControlFlow 0 10) (- 0 11)) ($generated@@0 ($generated@@164 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@164 ($generated@@11 false))) (and (=> (= (ControlFlow 0 10) 8) $generated@@192) (=> (= (ControlFlow 0 10) 9) $generated@@194)))))))
(let (($generated@@196  (=> (and (< $generated@@181 7) (= (ControlFlow 0 6) 5)) $generated@@193)))
(let (($generated@@197 true))
(let (($generated@@198  (=> (not (= $generated@@181 ($generated@@162 929))) (and (=> (= (ControlFlow 0 7) 6) $generated@@196) (=> (= (ControlFlow 0 7) 4) $generated@@197)))))
(let (($generated@@199  (=> (not (= $generated@@181 $generated@@182)) (and (=> (= (ControlFlow 0 12) 10) $generated@@195) (=> (= (ControlFlow 0 12) 7) $generated@@198)))))
(let (($generated@@200 true))
(let (($generated@@201  (=> $generated@@183 (and (=> (= (ControlFlow 0 13) 3) $generated@@200) (=> (= (ControlFlow 0 13) 12) $generated@@199)))))
(let (($generated@@202 true))
(let (($generated@@203  (and (=> (= (ControlFlow 0 14) 2) $generated@@202) (=> (= (ControlFlow 0 14) 13) $generated@@201))))
(let (($generated@@204 true))
(let (($generated@@205  (=> (and (and (and (and (and (not $generated@@184) (not false)) (and (<= 0 $generated@@181) (< $generated@@181 8))) (= $generated@@185 0)) (= $generated@@182 10)) (and (and (and (<= $generated@@185 $generated@@181) (<= $generated@@181 $generated@@182)) (forall (($generated@@206 T@U) ) (!  (=> (= (type $generated@@206) $generated@@46) (=> (and (not (= $generated@@206 $generated@@187)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@186 $generated@@206) $generated@@50))) (= ($generated@@49 $generated@@186 $generated@@206) ($generated@@49 $generated@@186 $generated@@206))))
 :pattern ( ($generated@@49 $generated@@186 $generated@@206))
))) (and ($generated@@44 $generated@@186 $generated@@186) (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@55 (type $generated@@208))))
 (=> (and (and (= (type $generated@@207) $generated@@46) (= (type $generated@@208) ($generated@@54 $generated@@209))) (and (not (= $generated@@207 $generated@@187)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@186 $generated@@207) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@186 $generated@@207) $generated@@208) ($generated@@48 ($generated@@49 $generated@@186 $generated@@207) $generated@@208)) ($generated@@0 ($generated@@106 $generated@@188 $generated@@207 $generated@@208)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@186 $generated@@207) $generated@@208))
))))) (and (=> (= (ControlFlow 0 15) 1) $generated@@204) (=> (= (ControlFlow 0 15) 14) $generated@@203)))))
(let (($generated@@210  (=> (and (and (= $generated@@188 ($generated@@107 $generated@@187 $generated@@186 $generated@@50 false)) (= $generated@@184 ($generated@@0 ($generated@@164 ($generated@@11 false))))) (and (= $generated@@185 ($generated@@162 0)) (= $generated@@182 ($generated@@162 10)))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (<= $generated@@185 $generated@@182)) (=> (<= $generated@@185 $generated@@182) (=> (= (ControlFlow 0 16) 15) $generated@@205))))))
(let (($generated@@211  (=> (and (and ($generated@@189 $generated@@186) ($generated@@190 $generated@@186)) (and (= 1 $generated@@191) (= (ControlFlow 0 18) 16))) $generated@@210)))
$generated@@211)))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@71)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@533 $generated@@534)) $generated@@63) (= ($generated@@531 ($generated@@144 $generated@@533 $generated@@534)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@154) ($generated@@221 $generated@@536 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@536)) $generated@@536) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@536) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@77 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@66)) ($generated@@221 $generated@@537 ($generated@@230 $generated@@538))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537)) $generated@@537) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537) ($generated@@230 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@230 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@66)) ($generated@@221 $generated@@539 ($generated@@235 $generated@@540))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@235 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@235 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@66)) ($generated@@221 $generated@@541 ($generated@@159 $generated@@542))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541) ($generated@@159 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@159 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@154) (= (type $generated@@544) $generated@@66)) ($generated@@221 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@531 $generated@@138) $generated@@64))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@545 $generated@@548)))) ($generated@@247 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@83 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@551) (and ($generated@@143 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@66) ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@555) (and ($generated@@143 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@66) ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@268 $generated@@560)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@262 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@261 $generated@@562)) (= ($generated@@260 $generated@@561) 0)) (= $generated@@561 ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@260 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@281 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@434)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@154)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@261 $generated@@154)) (= (type $generated@@578) $generated@@66)) (= ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@260 $generated@@577))) ($generated@@221 ($generated@@477 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@477 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@581))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585))) (and (and ($generated@@141 ($generated@@287 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@141 ($generated@@334 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@141 ($generated@@365 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@305 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@141 ($generated@@345 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@141 ($generated@@373 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@141 $generated@@589 $generated@@46))
 :pattern ( ($generated@@141 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@141 $generated@@590 $generated@@47))
 :pattern ( ($generated@@141 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@141 $generated@@591 $generated@@44))
 :pattern ( ($generated@@141 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@434) ($generated@@141 $generated@@592 $generated@@45))
 :pattern ( ($generated@@141 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@141 $generated@@593 $generated@@48))
 :pattern ( ($generated@@141 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Bool)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Bool)
(declare-fun $generated@@604 () Bool)
(declare-fun $generated@@605 () Bool)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () Bool)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () Bool)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 (T@U) Bool)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () Int)
(assert  (and (and (= (type $generated@@611) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@612) $generated@@79)) (= (type $generated@@613) ($generated@@166 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 66) (let (($generated@@627  (=> (not (= $generated@@594 ($generated@@240 5))) (and (=> (= (ControlFlow 0 40) (- 0 41)) ($generated@@141 ($generated@@8 (+ $generated@@595 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@595 1)) $generated@@138) (=> (= $generated@@596 (+ $generated@@595 1)) (=> (and (and (= $generated@@597 (+ $generated@@594 1)) (= (ControlFlow 0 40) (- 0 39))) $generated@@598) (<= $generated@@597 ($generated@@240 5)))))))))
(let (($generated@@628  (=> (and (= $generated@@594 $generated@@599) (= (ControlFlow 0 37) (- 0 36))) false)))
(let (($generated@@629 true))
(let (($generated@@630 true))
(let (($generated@@631  (=> (and (not (= $generated@@600 ($generated@@240 5))) (= (ControlFlow 0 20) (- 0 19))) ($generated@@141 ($generated@@8 (+ $generated@@601 1)) $generated@@138))))
(let (($generated@@632 true))
(let (($generated@@633  (=> (not (= $generated@@600 $generated@@602)) (and (=> (= (ControlFlow 0 21) 18) $generated@@632) (=> (= (ControlFlow 0 21) 20) $generated@@631)))))
(let (($generated@@634 true))
(let (($generated@@635  (=> $generated@@603 (and (=> (= (ControlFlow 0 22) 17) $generated@@634) (=> (= (ControlFlow 0 22) 21) $generated@@633)))))
(let (($generated@@636 true))
(let (($generated@@637  (and (=> (= (ControlFlow 0 23) 16) $generated@@636) (=> (= (ControlFlow 0 23) 22) $generated@@635))))
(let (($generated@@638 true))
(let (($generated@@639  (=> (<= ($generated@@240 0) $generated@@601) (=> (and (and (and (and (and (and (and (and (and (and (and (<= 0 $generated@@601) (not false)) $generated@@604) $generated@@605) (<= 0 $generated@@606)) (= $generated@@607 0)) (= $generated@@608 100)) $generated@@609) (<= 0 $generated@@600)) (= $generated@@610 0)) (= $generated@@602 10)) (and (and (and (<= $generated@@610 $generated@@600) (<= $generated@@600 $generated@@602)) (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@79) (=> (and (not (= $generated@@640 $generated@@612)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@611 $generated@@640) $generated@@60))) (= ($generated@@83 $generated@@611 $generated@@640) ($generated@@83 $generated@@611 $generated@@640))))
 :pattern ( ($generated@@83 $generated@@611 $generated@@640))
))) (and ($generated@@134 $generated@@611 $generated@@611) (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (! (let (($generated@@643 ($generated@@69 (type $generated@@642))))
 (=> (and (and (= (type $generated@@641) $generated@@79) (= (type $generated@@642) ($generated@@68 $generated@@643))) (and (not (= $generated@@641 $generated@@612)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@611 $generated@@641) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@611 $generated@@641) $generated@@642) ($generated@@85 ($generated@@83 $generated@@611 $generated@@641) $generated@@642)) ($generated@@0 ($generated@@164 $generated@@613 $generated@@641 $generated@@642)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@611 $generated@@641) $generated@@642))
))))) (and (=> (= (ControlFlow 0 24) 15) $generated@@638) (=> (= (ControlFlow 0 24) 23) $generated@@637))))))
(let (($generated@@644  (=> (not (= $generated@@606 $generated@@608)) (=> (and (= $generated@@610 ($generated@@240 0)) (= $generated@@602 ($generated@@240 10))) (and (=> (= (ControlFlow 0 25) (- 0 26)) (<= $generated@@610 $generated@@602)) (=> (<= $generated@@610 $generated@@602) (=> (= (ControlFlow 0 25) 24) $generated@@639)))))))
(let (($generated@@645 true))
(let (($generated@@646  (=> $generated@@609 (and (=> (= (ControlFlow 0 27) 14) $generated@@645) (=> (= (ControlFlow 0 27) 25) $generated@@644)))))
(let (($generated@@647 true))
(let (($generated@@648  (and (=> (= (ControlFlow 0 28) 13) $generated@@647) (=> (= (ControlFlow 0 28) 27) $generated@@646))))
(let (($generated@@649 true))
(let (($generated@@650  (=> (<= ($generated@@240 0) $generated@@614) (=> (and (and (and (and (and (and (and (<= 0 $generated@@614) (not false)) $generated@@604) $generated@@605) (<= 0 $generated@@606)) (= $generated@@607 0)) (= $generated@@608 100)) (and (and (and (<= $generated@@607 $generated@@606) (<= $generated@@606 $generated@@608)) (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@79) (=> (and (not (= $generated@@651 $generated@@612)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@611 $generated@@651) $generated@@60))) (= ($generated@@83 $generated@@611 $generated@@651) ($generated@@83 $generated@@611 $generated@@651))))
 :pattern ( ($generated@@83 $generated@@611 $generated@@651))
))) (and ($generated@@134 $generated@@611 $generated@@611) (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 ($generated@@69 (type $generated@@653))))
 (=> (and (and (= (type $generated@@652) $generated@@79) (= (type $generated@@653) ($generated@@68 $generated@@654))) (and (not (= $generated@@652 $generated@@612)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@611 $generated@@652) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@611 $generated@@652) $generated@@653) ($generated@@85 ($generated@@83 $generated@@611 $generated@@652) $generated@@653)) ($generated@@0 ($generated@@164 $generated@@613 $generated@@652 $generated@@653)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@611 $generated@@652) $generated@@653))
))))) (and (=> (= (ControlFlow 0 29) 12) $generated@@649) (=> (= (ControlFlow 0 29) 28) $generated@@648))))))
(let (($generated@@655  (=> (and (= $generated@@607 ($generated@@240 0)) (= $generated@@608 ($generated@@240 100))) (and (=> (= (ControlFlow 0 30) (- 0 31)) (<= $generated@@607 $generated@@608)) (=> (<= $generated@@607 $generated@@608) (=> (= (ControlFlow 0 30) 29) $generated@@650))))))
(let (($generated@@656  (=> (and (= $generated@@594 ($generated@@240 5)) (= (ControlFlow 0 38) 30)) $generated@@655)))
(let (($generated@@657  (=> (not (= $generated@@594 $generated@@599)) (and (=> (= (ControlFlow 0 42) 38) $generated@@656) (=> (= (ControlFlow 0 42) 40) $generated@@627)))))
(let (($generated@@658  (=> $generated@@598 (and (=> (= (ControlFlow 0 43) 37) $generated@@628) (=> (= (ControlFlow 0 43) 42) $generated@@657)))))
(let (($generated@@659  (and (=> (= (ControlFlow 0 44) 35) $generated@@629) (=> (= (ControlFlow 0 44) 43) $generated@@658))))
(let (($generated@@660  (=> (<= ($generated@@240 0) $generated@@595) (=> (and (and (and (and (and (and (and (<= 0 $generated@@595) (not false)) $generated@@604) $generated@@605) (<= 0 $generated@@594)) (= $generated@@615 0)) (= $generated@@599 10)) (and (and (and (<= $generated@@615 $generated@@594) (<= $generated@@594 $generated@@599)) (=> $generated@@598 true)) (and (and (=> $generated@@598 (<= $generated@@594 ($generated@@240 5))) (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@79) (=> (and (not (= $generated@@661 $generated@@612)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@611 $generated@@661) $generated@@60))) (= ($generated@@83 $generated@@611 $generated@@661) ($generated@@83 $generated@@611 $generated@@661))))
 :pattern ( ($generated@@83 $generated@@611 $generated@@661))
))) (and ($generated@@134 $generated@@611 $generated@@611) (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (! (let (($generated@@664 ($generated@@69 (type $generated@@663))))
 (=> (and (and (= (type $generated@@662) $generated@@79) (= (type $generated@@663) ($generated@@68 $generated@@664))) (and (not (= $generated@@662 $generated@@612)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@611 $generated@@662) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@611 $generated@@662) $generated@@663) ($generated@@85 ($generated@@83 $generated@@611 $generated@@662) $generated@@663)) ($generated@@0 ($generated@@164 $generated@@613 $generated@@662 $generated@@663)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@611 $generated@@662) $generated@@663))
)))))) (and (=> (= (ControlFlow 0 45) 34) $generated@@630) (=> (= (ControlFlow 0 45) 44) $generated@@659))))))
(let (($generated@@665  (=> ($generated@@0 ($generated@@242 ($generated@@11 true))) (=> (and (= $generated@@615 ($generated@@240 0)) (= $generated@@599 ($generated@@240 10))) (and (=> (= (ControlFlow 0 46) (- 0 48)) (<= $generated@@615 $generated@@599)) (=> (<= $generated@@615 $generated@@599) (and (=> (= (ControlFlow 0 46) (- 0 47)) (=> $generated@@598 (<= $generated@@615 ($generated@@240 5)))) (=> (=> $generated@@598 (<= $generated@@615 ($generated@@240 5))) (=> (= (ControlFlow 0 46) 45) $generated@@660)))))))))
(let (($generated@@666  (=> (and (not ($generated@@0 ($generated@@242 ($generated@@11 true)))) (= (ControlFlow 0 33) 30)) $generated@@655)))
(let (($generated@@667  (=> ($generated@@0 ($generated@@242 ($generated@@11 true))) (and (=> (= (ControlFlow 0 49) 46) $generated@@665) (=> (= (ControlFlow 0 49) 33) $generated@@666)))))
(let (($generated@@668  (=> (and (not ($generated@@0 ($generated@@242 ($generated@@11 true)))) (= (ControlFlow 0 32) 30)) $generated@@655)))
(let (($generated@@669  (=> $generated@@605 (and (=> (= (ControlFlow 0 50) 32) $generated@@668) (=> (= (ControlFlow 0 50) 49) $generated@@667)))))
(let (($generated@@670 true))
(let (($generated@@671  (and (=> (= (ControlFlow 0 51) 11) $generated@@670) (=> (= (ControlFlow 0 51) 50) $generated@@669))))
(let (($generated@@672 true))
(let (($generated@@673  (=> (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@79) (=> (and (not (= $generated@@674 $generated@@612)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@611 $generated@@674) $generated@@60))) (= ($generated@@83 $generated@@611 $generated@@674) ($generated@@83 $generated@@611 $generated@@674))))
 :pattern ( ($generated@@83 $generated@@611 $generated@@674))
)) (=> (and ($generated@@134 $generated@@611 $generated@@611) (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (! (let (($generated@@677 ($generated@@69 (type $generated@@676))))
 (=> (and (and (= (type $generated@@675) $generated@@79) (= (type $generated@@676) ($generated@@68 $generated@@677))) (and (not (= $generated@@675 $generated@@612)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@611 $generated@@675) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@611 $generated@@675) $generated@@676) ($generated@@85 ($generated@@83 $generated@@611 $generated@@675) $generated@@676)) ($generated@@0 ($generated@@164 $generated@@613 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@611 $generated@@675) $generated@@676))
))) (and (=> (= (ControlFlow 0 52) 10) $generated@@672) (=> (= (ControlFlow 0 52) 51) $generated@@671))))))
(let (($generated@@678  (=> (and (= $generated@@616 ($generated@@240 5)) (= (ControlFlow 0 54) 52)) $generated@@673)))
(let (($generated@@679  (=> (and (not ($generated@@0 ($generated@@242 ($generated@@11 true)))) (= (ControlFlow 0 53) 52)) $generated@@673)))
(let (($generated@@680  (=> (not (= $generated@@616 ($generated@@240 5))) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@141 ($generated@@8 (+ $generated@@617 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@617 1)) $generated@@138) (=> (= $generated@@618 (+ $generated@@617 1)) (=> (and (and (= $generated@@619 (+ $generated@@616 1)) (= (ControlFlow 0 8) (- 0 7))) $generated@@620) (<= $generated@@619 ($generated@@240 5)))))))))
(let (($generated@@681  (=> (not (= $generated@@616 $generated@@621)) (and (=> (= (ControlFlow 0 55) 54) $generated@@678) (=> (= (ControlFlow 0 55) 8) $generated@@680)))))
(let (($generated@@682  (=> (and (= $generated@@616 $generated@@621) (= (ControlFlow 0 6) (- 0 5))) false)))
(let (($generated@@683  (=> $generated@@620 (and (=> (= (ControlFlow 0 56) 6) $generated@@682) (=> (= (ControlFlow 0 56) 55) $generated@@681)))))
(let (($generated@@684 true))
(let (($generated@@685  (and (=> (= (ControlFlow 0 57) 4) $generated@@684) (=> (= (ControlFlow 0 57) 56) $generated@@683))))
(let (($generated@@686 true))
(let (($generated@@687  (=> (<= ($generated@@240 0) $generated@@617) (=> (and (and (and (and (and (and (<= 0 $generated@@617) (not false)) $generated@@604) (<= 0 $generated@@616)) (= $generated@@622 0)) (= $generated@@621 10)) (and (and (and (<= $generated@@622 $generated@@616) (<= $generated@@616 $generated@@621)) (=> $generated@@620 true)) (and (and (=> $generated@@620 (<= $generated@@616 ($generated@@240 5))) (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@79) (=> (and (not (= $generated@@688 $generated@@612)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@611 $generated@@688) $generated@@60))) (= ($generated@@83 $generated@@611 $generated@@688) ($generated@@83 $generated@@611 $generated@@688))))
 :pattern ( ($generated@@83 $generated@@611 $generated@@688))
))) (and ($generated@@134 $generated@@611 $generated@@611) (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (! (let (($generated@@691 ($generated@@69 (type $generated@@690))))
 (=> (and (and (= (type $generated@@689) $generated@@79) (= (type $generated@@690) ($generated@@68 $generated@@691))) (and (not (= $generated@@689 $generated@@612)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@611 $generated@@689) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@611 $generated@@689) $generated@@690) ($generated@@85 ($generated@@83 $generated@@611 $generated@@689) $generated@@690)) ($generated@@0 ($generated@@164 $generated@@613 $generated@@689 $generated@@690)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@611 $generated@@689) $generated@@690))
)))))) (and (=> (= (ControlFlow 0 58) 3) $generated@@686) (=> (= (ControlFlow 0 58) 57) $generated@@685))))))
(let (($generated@@692  (=> ($generated@@0 ($generated@@242 ($generated@@11 true))) (=> (and (= $generated@@622 ($generated@@240 0)) (= $generated@@621 ($generated@@240 10))) (and (=> (= (ControlFlow 0 59) (- 0 61)) (<= $generated@@622 $generated@@621)) (=> (<= $generated@@622 $generated@@621) (and (=> (= (ControlFlow 0 59) (- 0 60)) (=> $generated@@620 (<= $generated@@622 ($generated@@240 5)))) (=> (=> $generated@@620 (<= $generated@@622 ($generated@@240 5))) (=> (= (ControlFlow 0 59) 58) $generated@@687)))))))))
(let (($generated@@693  (=> $generated@@604 (and (=> (= (ControlFlow 0 62) 53) $generated@@679) (=> (= (ControlFlow 0 62) 59) $generated@@692)))))
(let (($generated@@694 true))
(let (($generated@@695  (and (=> (= (ControlFlow 0 63) 2) $generated@@694) (=> (= (ControlFlow 0 63) 62) $generated@@693))))
(let (($generated@@696 true))
(let (($generated@@697  (=> (= $generated@@613 ($generated@@165 $generated@@612 $generated@@611 $generated@@60 false)) (and (=> (= (ControlFlow 0 64) (- 0 65)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (and (and (= $generated@@623 ($generated@@240 0)) (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@79) (=> (and (not (= $generated@@698 $generated@@612)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@611 $generated@@698) $generated@@60))) (= ($generated@@83 $generated@@611 $generated@@698) ($generated@@83 $generated@@611 $generated@@698))))
 :pattern ( ($generated@@83 $generated@@611 $generated@@698))
))) (and ($generated@@134 $generated@@611 $generated@@611) (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (! (let (($generated@@701 ($generated@@69 (type $generated@@700))))
 (=> (and (and (= (type $generated@@699) $generated@@79) (= (type $generated@@700) ($generated@@68 $generated@@701))) (and (not (= $generated@@699 $generated@@612)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@611 $generated@@699) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@611 $generated@@699) $generated@@700) ($generated@@85 ($generated@@83 $generated@@611 $generated@@699) $generated@@700)) ($generated@@0 ($generated@@164 $generated@@613 $generated@@699 $generated@@700)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@611 $generated@@699) $generated@@700))
)))) (and (=> (= (ControlFlow 0 64) 1) $generated@@696) (=> (= (ControlFlow 0 64) 63) $generated@@695))))))))
(let (($generated@@702  (=> (and (and (and ($generated@@246 $generated@@611) ($generated@@624 $generated@@611)) (<= ($generated@@240 0) $generated@@625)) (and (= 1 $generated@@626) (= (ControlFlow 0 66) 64))) $generated@@697)))
$generated@@702)))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@T) T@U)
(declare-fun $generated@@427 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (Int Int) Int)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@149)) (= (type $generated@@246) $generated@@149)) (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@241 $generated@@247)) (= ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@140) (= ($generated@@138 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@140) ($generated@@138 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@149) (= (type $generated@@253) $generated@@149)) (= $generated@@251 ($generated@@215 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@138 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) $generated@@149)) (= (type $generated@@270) $generated@@64)) ($generated@@132 $generated@@267 $generated@@268)) ($generated@@242 $generated@@269 $generated@@270 $generated@@267)) ($generated@@242 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@132 $generated@@267 $generated@@268) ($generated@@242 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@274) $generated@@64)) ($generated@@132 $generated@@271 $generated@@272)) ($generated@@74 $generated@@273 $generated@@274 $generated@@271)) ($generated@@74 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@132 $generated@@271 $generated@@272) ($generated@@74 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@155 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@155 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@216 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@346) $generated@@64)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@149) ($generated@@0 ($generated@@81 $generated@@345 $generated@@348))) ($generated@@242 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@149) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@242 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@354) $generated@@353)) 0))
 :pattern ( (let (($generated@@354 (type $generated@@353)))
($generated@@81 ($generated@@276 $generated@@354) $generated@@353)))
)))
(assert  (and (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@355 $generated@@358)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@355 $generated@@358))
)) (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@356 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@356 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@285 (type $generated@@361))))
(let (($generated@@363 ($generated@@284 (type $generated@@361))))
(= (type ($generated@@357 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@357 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@365) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365)))) (= ($generated@@81 ($generated@@357 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@303 (type $generated@@369))))
(let (($generated@@371 ($generated@@302 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@373) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373)))) (= ($generated@@81 ($generated@@367 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@284 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@283 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@302 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@301 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))) (and ($generated@@242 ($generated@@81 ($generated@@357 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@242 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))) (and ($generated@@242 ($generated@@81 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@242 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@400 $generated@@402))) (and ($generated@@132 $generated@@400 $generated@@401) ($generated@@132 $generated@@401 $generated@@402))) ($generated@@132 $generated@@400 $generated@@402))
 :pattern ( ($generated@@132 $generated@@400 $generated@@401) ($generated@@132 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@T) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@76 $generated@@404 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@303 (type $generated@@405))))
(let (($generated@@407 ($generated@@302 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@301 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@300 $generated@@407 $generated@@406)) (= ($generated@@299 $generated@@405) ($generated@@403 $generated@@407))))))
 :pattern ( ($generated@@299 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@303 (type $generated@@408))))
(let (($generated@@410 ($generated@@302 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@301 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@300 $generated@@410 $generated@@409)) (= ($generated@@335 $generated@@408) ($generated@@403 $generated@@409))))))
 :pattern ( ($generated@@335 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@303 (type $generated@@411))))
(let (($generated@@413 ($generated@@302 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@301 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@300 $generated@@413 $generated@@412)) (= ($generated@@366 $generated@@411) ($generated@@403 $generated@@149))))))
 :pattern ( ($generated@@366 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@285 (type $generated@@414))))
(let (($generated@@416 ($generated@@284 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@283 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@282 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@149) (= (type $generated@@418) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@414) ($generated@@262 ($generated@@215 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@355 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@303 (type $generated@@419))))
(let (($generated@@421 ($generated@@302 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@301 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@300 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@149) (= (type $generated@@423) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@419) ($generated@@262 ($generated@@215 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@366 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@149) ($generated@@216 $generated@@424 $generated@@46)) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@424)) $generated@@424) ($generated@@136 ($generated@@356 $generated@@2 $generated@@424) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@424 $generated@@46))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@149) ($generated@@216 $generated@@425 $generated@@47)) (and (= ($generated@@262 ($generated@@356 $generated@@3 $generated@@425)) $generated@@425) ($generated@@136 ($generated@@356 $generated@@3 $generated@@425) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@425 $generated@@47))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@149) ($generated@@216 $generated@@426 $generated@@44)) (and (= ($generated@@262 ($generated@@356 $generated@@4 $generated@@426)) $generated@@426) ($generated@@136 ($generated@@356 $generated@@4 $generated@@426) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@426 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@427) 20))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@149) ($generated@@216 $generated@@428 $generated@@45)) (and (= ($generated@@262 ($generated@@356 $generated@@427 $generated@@428)) $generated@@428) ($generated@@136 ($generated@@356 $generated@@427 $generated@@428) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@428 $generated@@45))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@64) (= ($generated@@216 ($generated@@262 $generated@@429) $generated@@430) ($generated@@136 $generated@@429 $generated@@430)))
 :pattern ( ($generated@@216 ($generated@@262 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@79 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@76 $generated@@432 $generated@@2)) (<= 0 ($generated@@275 $generated@@431))))
 :pattern ( ($generated@@275 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@257 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@256 $generated@@434)) (<= 0 ($generated@@255 $generated@@433))))
 :pattern ( ($generated@@255 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@384 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@384 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@384 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@384 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@384 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@392 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@392 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@392 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@392 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@392 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@149) (= (type $generated@@456) $generated@@149)) (= ($generated@@248 ($generated@@215 $generated@@455 $generated@@456)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@139 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@139 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@139 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@139 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@149) (= (type $generated@@466) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@215 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@149) (= (type $generated@@468) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@215 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@257 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@256 $generated@@149)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@255 $generated@@475))) ($generated@@242 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@75 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@75 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@225 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@225 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@230 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@230 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@154 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@154 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated@@356 $generated@@498 ($generated@@262 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@262 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) (= ($generated@@136 $generated@@499 ($generated@@384 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@499) $generated@@502))) (and ($generated@@216 ($generated@@81 ($generated@@357 $generated@@499) $generated@@502) $generated@@501) ($generated@@216 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@499) $generated@@502))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@136 $generated@@499 ($generated@@384 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@136 $generated@@503 ($generated@@392 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@503) $generated@@506))) (and ($generated@@216 ($generated@@81 ($generated@@367 $generated@@503) $generated@@506) $generated@@505) ($generated@@216 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@136 $generated@@503 ($generated@@392 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@149) (= (type $generated@@510) $generated@@149)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@215 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@215 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@149) (= (type $generated@@512) $generated@@149)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@215 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@215 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@149) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@216 $generated@@513 ($generated@@384 $generated@@514 $generated@@515))) (and (= ($generated@@262 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@513)) $generated@@513) ($generated@@136 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@513) ($generated@@384 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@216 $generated@@513 ($generated@@384 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@149) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) ($generated@@216 $generated@@516 ($generated@@392 $generated@@517 $generated@@518))) (and (= ($generated@@262 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@516)) $generated@@516) ($generated@@136 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@516) ($generated@@392 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@216 $generated@@516 ($generated@@392 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@149)) ($generated@@216 $generated@@521 ($generated@@139 $generated@@519 $generated@@520))) (and (= ($generated@@262 ($generated@@356 $generated@@140 $generated@@521)) $generated@@521) ($generated@@136 ($generated@@356 $generated@@140 $generated@@521) ($generated@@139 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@216 $generated@@521 ($generated@@139 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@81 ($generated@@403 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@81 ($generated@@403 $generated@@523) $generated@@522)))
)))
(assert (forall (($generated@@525 Int) ($generated@@526 Int) ) (! (= ($generated@@524 $generated@@525 $generated@@526) (mod $generated@@525 $generated@@526))
 :pattern ( ($generated@@524 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@69)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@529 $generated@@530)) $generated@@62) (= ($generated@@527 ($generated@@139 $generated@@529 $generated@@530)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@140) (= ($generated@@507 ($generated@@262 $generated@@531)) ($generated@@508 $generated@@531)))
 :pattern ( ($generated@@507 ($generated@@262 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@149) ($generated@@216 $generated@@532 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@532)) $generated@@532) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@532) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@532 ($generated@@75 0)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@149) (= (type $generated@@534) $generated@@64)) ($generated@@216 $generated@@533 ($generated@@225 $generated@@534))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@533)) $generated@@533) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@533) ($generated@@225 $generated@@534))))
 :pattern ( ($generated@@216 $generated@@533 ($generated@@225 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@149) (= (type $generated@@536) $generated@@64)) ($generated@@216 $generated@@535 ($generated@@230 $generated@@536))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@535)) $generated@@535) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@535) ($generated@@230 $generated@@536))))
 :pattern ( ($generated@@216 $generated@@535 ($generated@@230 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@149) (= (type $generated@@538) $generated@@64)) ($generated@@216 $generated@@537 ($generated@@154 $generated@@538))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@537)) $generated@@537) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@537) ($generated@@154 $generated@@538))))
 :pattern ( ($generated@@216 $generated@@537 ($generated@@154 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@149) (= (type $generated@@540) $generated@@64)) ($generated@@216 $generated@@539 ($generated@@469 $generated@@540))) (and (= ($generated@@262 ($generated@@356 ($generated@@256 $generated@@149) $generated@@539)) $generated@@539) ($generated@@136 ($generated@@356 ($generated@@256 $generated@@149) $generated@@539) ($generated@@469 $generated@@540))))
 :pattern ( ($generated@@216 $generated@@539 ($generated@@469 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@541 ($generated@@154 $generated@@542) $generated@@543) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@541 $generated@@544)))) ($generated@@242 $generated@@544 $generated@@542 $generated@@543))
 :pattern ( ($generated@@81 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@74 $generated@@541 ($generated@@154 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@140) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@547) (and ($generated@@138 $generated@@545) (exists (($generated@@548 T@U) ) (!  (and (= (type $generated@@548) $generated@@64) ($generated@@74 $generated@@545 ($generated@@139 $generated@@546 $generated@@548) $generated@@547))
 :pattern ( ($generated@@74 $generated@@545 ($generated@@139 $generated@@546 $generated@@548) $generated@@547))
))))) ($generated@@242 ($generated@@147 $generated@@545) $generated@@546 $generated@@547))
 :pattern ( ($generated@@242 ($generated@@147 $generated@@545) $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@140) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@551) (and ($generated@@138 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@64) ($generated@@74 $generated@@549 ($generated@@139 $generated@@552 $generated@@550) $generated@@551))
 :pattern ( ($generated@@74 $generated@@549 ($generated@@139 $generated@@552 $generated@@550) $generated@@551))
))))) ($generated@@242 ($generated@@148 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@242 ($generated@@148 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@149) (= (type $generated@@554) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@553) ($generated@@237 $generated@@554)) ($generated@@237 ($generated@@215 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@553) ($generated@@237 $generated@@554)))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@262 ($generated@@8 ($generated@@235 $generated@@555))) ($generated@@237 ($generated@@262 ($generated@@8 $generated@@555))))
 :pattern ( ($generated@@262 ($generated@@8 ($generated@@235 $generated@@555))))
)))
(assert (forall (($generated@@556 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@556)) ($generated@@237 ($generated@@262 $generated@@556)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@257 (type $generated@@557))))
 (=> (and (= (type $generated@@557) ($generated@@256 $generated@@558)) (= ($generated@@255 $generated@@557) 0)) (= $generated@@557 ($generated@@254 $generated@@558))))
 :pattern ( ($generated@@255 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@560)))
 (=> (and (and (= (type $generated@@559) ($generated@@76 $generated@@562 $generated@@2)) (= (type $generated@@561) $generated@@2)) (<= 0 ($generated $generated@@561))) (= ($generated@@275 ($generated@@82 $generated@@559 $generated@@560 $generated@@561)) (+ (- ($generated@@275 $generated@@559) ($generated ($generated@@81 $generated@@559 $generated@@560))) ($generated $generated@@561)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@559 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@564) $generated@@2)) ($generated@@74 $generated@@564 $generated@@46 $generated@@563))
 :pattern ( ($generated@@74 $generated@@564 $generated@@46 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@566) $generated@@3)) ($generated@@74 $generated@@566 $generated@@47 $generated@@565))
 :pattern ( ($generated@@74 $generated@@566 $generated@@47 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@4)) ($generated@@74 $generated@@568 $generated@@44 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@44 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@427)) ($generated@@74 $generated@@570 $generated@@45 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@45 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@149)) ($generated@@74 $generated@@572 $generated@@48 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@48 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@256 $generated@@149)) (= (type $generated@@574) $generated@@64)) (= ($generated@@136 $generated@@573 ($generated@@469 $generated@@574)) (forall (($generated@@575 Int) ) (!  (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@255 $generated@@573))) ($generated@@216 ($generated@@470 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@470 $generated@@573 $generated@@575))
))))
 :pattern ( ($generated@@136 $generated@@573 ($generated@@469 $generated@@574)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 Int) ) (!  (=> (= (type $generated@@577) ($generated@@256 $generated@@149)) (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@255 $generated@@577))) (< ($generated@@508 ($generated@@356 $generated@@140 ($generated@@470 $generated@@577 $generated@@578))) ($generated@@576 $generated@@577))))
 :pattern ( ($generated@@508 ($generated@@356 $generated@@140 ($generated@@470 $generated@@577 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@136 $generated@@579 ($generated@@384 $generated@@580 $generated@@581))) (and (and ($generated@@136 ($generated@@281 $generated@@579) ($generated@@225 $generated@@580)) ($generated@@136 ($generated@@324 $generated@@579) ($generated@@225 $generated@@581))) ($generated@@136 ($generated@@355 $generated@@579) ($generated@@225 ($generated@@139 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@136 $generated@@579 ($generated@@384 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@136 $generated@@582 ($generated@@392 $generated@@583 $generated@@584))) (and (and ($generated@@136 ($generated@@299 $generated@@582) ($generated@@230 $generated@@583)) ($generated@@136 ($generated@@335 $generated@@582) ($generated@@230 $generated@@584))) ($generated@@136 ($generated@@366 $generated@@582) ($generated@@230 ($generated@@139 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@136 $generated@@582 ($generated@@392 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@2) ($generated@@136 $generated@@585 $generated@@46))
 :pattern ( ($generated@@136 $generated@@585 $generated@@46))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@3) ($generated@@136 $generated@@586 $generated@@47))
 :pattern ( ($generated@@136 $generated@@586 $generated@@47))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@4) ($generated@@136 $generated@@587 $generated@@44))
 :pattern ( ($generated@@136 $generated@@587 $generated@@44))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@427) ($generated@@136 $generated@@588 $generated@@45))
 :pattern ( ($generated@@136 $generated@@588 $generated@@45))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@149) ($generated@@136 $generated@@589 $generated@@48))
 :pattern ( ($generated@@136 $generated@@589 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 () Int)
(declare-fun $generated@@592 () Bool)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Bool)
(declare-fun $generated@@597 () Bool)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () Bool)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 (T@U) Bool)
(declare-fun $generated@@609 () Int)
(assert  (and (and (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@600) $generated@@77)) (= (type $generated@@601) ($generated@@161 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 51) (let (($generated@@610 true))
(let (($generated@@611 true))
(let (($generated@@612 true))
(let (($generated@@613 true))
(let (($generated@@614  (=> (and (not (= ($generated@@524 $generated@@590 ($generated@@235 2)) ($generated@@235 0))) (= (ControlFlow 0 14) 12)) $generated@@613)))
(let (($generated@@615  (=> (and (= $generated@@590 $generated@@591) (= (ControlFlow 0 13) 12)) $generated@@613)))
(let (($generated@@616 true))
(let (($generated@@617  (=> (not (= $generated@@590 $generated@@591)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (not (= ($generated@@235 2) 0))) (=> (not (= ($generated@@235 2) 0)) (and (=> (= (ControlFlow 0 15) 11) $generated@@616) (=> (= (ControlFlow 0 15) 14) $generated@@614)))))))
(let (($generated@@618  (=> $generated@@592 (and (=> (= (ControlFlow 0 17) 13) $generated@@615) (=> (= (ControlFlow 0 17) 15) $generated@@617)))))
(let (($generated@@619 true))
(let (($generated@@620  (and (=> (= (ControlFlow 0 18) 10) $generated@@619) (=> (= (ControlFlow 0 18) 17) $generated@@618))))
(let (($generated@@621 true))
(let (($generated@@622  (=> (and (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@593)) (= $generated@@594 0)) (= $generated@@595 10)) $generated@@596) $generated@@597) (<= 0 $generated@@590)) (= $generated@@598 0)) (= $generated@@591 10)) (and (and (and (<= $generated@@598 $generated@@590) (<= $generated@@590 $generated@@591)) (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@77) (=> (and (not (= $generated@@623 $generated@@600)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@599 $generated@@623) $generated@@60))) (= ($generated@@81 $generated@@599 $generated@@623) ($generated@@81 $generated@@599 $generated@@623))))
 :pattern ( ($generated@@81 $generated@@599 $generated@@623))
))) (and ($generated@@132 $generated@@599 $generated@@599) (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@67 (type $generated@@625))))
 (=> (and (and (= (type $generated@@624) $generated@@77) (= (type $generated@@625) ($generated@@66 $generated@@626))) (and (not (= $generated@@624 $generated@@600)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@599 $generated@@624) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@599 $generated@@624) $generated@@625) ($generated@@83 ($generated@@81 $generated@@599 $generated@@624) $generated@@625)) ($generated@@0 ($generated@@159 $generated@@601 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@599 $generated@@624) $generated@@625))
))))) (and (=> (= (ControlFlow 0 19) 9) $generated@@621) (=> (= (ControlFlow 0 19) 18) $generated@@620)))))
(let (($generated@@627  (=> (= ($generated@@237 ($generated@@215 ($generated@@262 ($generated@@8 ($generated@@235 0))) ($generated@@262 ($generated@@8 ($generated@@235 0))))) ($generated@@215 ($generated@@262 ($generated@@8 $generated@@602)) ($generated@@262 ($generated@@8 $generated@@603)))) (=> (and (= $generated@@598 ($generated@@235 0)) (= $generated@@591 ($generated@@235 10))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (<= $generated@@598 $generated@@591)) (=> (<= $generated@@598 $generated@@591) (=> (= (ControlFlow 0 20) 19) $generated@@622)))))))
(let (($generated@@628 true))
(let (($generated@@629  (and (=> (= (ControlFlow 0 22) 20) $generated@@627) (=> (= (ControlFlow 0 22) 8) $generated@@628))))
(let (($generated@@630  (=> (and (not (= ($generated@@524 $generated@@604 ($generated@@235 2)) ($generated@@235 0))) (= (ControlFlow 0 29) 22)) $generated@@629)))
(let (($generated@@631  (=> (not (= $generated@@604 $generated@@605)) (and (=> (= (ControlFlow 0 30) (- 0 31)) (not (= ($generated@@235 2) 0))) (=> (not (= ($generated@@235 2) 0)) (and (=> (= (ControlFlow 0 30) 28) $generated@@610) (=> (= (ControlFlow 0 30) 29) $generated@@630)))))))
(let (($generated@@632  (=> (and (= $generated@@604 $generated@@605) (= (ControlFlow 0 27) 22)) $generated@@629)))
(let (($generated@@633  (=> $generated@@606 (and (=> (= (ControlFlow 0 32) 27) $generated@@632) (=> (= (ControlFlow 0 32) 30) $generated@@631)))))
(let (($generated@@634  (and (=> (= (ControlFlow 0 33) 26) $generated@@611) (=> (= (ControlFlow 0 33) 32) $generated@@633))))
(let (($generated@@635  (=> (and (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@593)) (= $generated@@594 0)) (= $generated@@595 10)) $generated@@596) $generated@@597) (<= 0 $generated@@604)) (= $generated@@607 0)) (= $generated@@605 10)) (and (and (and (<= $generated@@607 $generated@@604) (<= $generated@@604 $generated@@605)) (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@77) (=> (and (not (= $generated@@636 $generated@@600)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@599 $generated@@636) $generated@@60))) (= ($generated@@81 $generated@@599 $generated@@636) ($generated@@81 $generated@@599 $generated@@636))))
 :pattern ( ($generated@@81 $generated@@599 $generated@@636))
))) (and ($generated@@132 $generated@@599 $generated@@599) (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (! (let (($generated@@639 ($generated@@67 (type $generated@@638))))
 (=> (and (and (= (type $generated@@637) $generated@@77) (= (type $generated@@638) ($generated@@66 $generated@@639))) (and (not (= $generated@@637 $generated@@600)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@599 $generated@@637) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@599 $generated@@637) $generated@@638) ($generated@@83 ($generated@@81 $generated@@599 $generated@@637) $generated@@638)) ($generated@@0 ($generated@@159 $generated@@601 $generated@@637 $generated@@638)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@599 $generated@@637) $generated@@638))
))))) (and (=> (= (ControlFlow 0 34) 25) $generated@@612) (=> (= (ControlFlow 0 34) 33) $generated@@634)))))
(let (($generated@@640  (=> ($generated@@0 ($generated@@237 ($generated@@11 true))) (=> (and (= $generated@@607 ($generated@@235 0)) (= $generated@@605 ($generated@@235 10))) (and (=> (= (ControlFlow 0 35) (- 0 36)) (<= $generated@@607 $generated@@605)) (=> (<= $generated@@607 $generated@@605) (=> (= (ControlFlow 0 35) 34) $generated@@635)))))))
(let (($generated@@641  (=> (and (not ($generated@@0 ($generated@@237 ($generated@@11 true)))) (= (ControlFlow 0 24) 22)) $generated@@629)))
(let (($generated@@642  (=> ($generated@@0 ($generated@@237 ($generated@@11 true))) (and (=> (= (ControlFlow 0 37) 35) $generated@@640) (=> (= (ControlFlow 0 37) 24) $generated@@641)))))
(let (($generated@@643  (=> (and (not ($generated@@0 ($generated@@237 ($generated@@11 true)))) (= (ControlFlow 0 23) 22)) $generated@@629)))
(let (($generated@@644  (=> $generated@@597 (and (=> (= (ControlFlow 0 38) 23) $generated@@643) (=> (= (ControlFlow 0 38) 37) $generated@@642)))))
(let (($generated@@645 true))
(let (($generated@@646  (and (=> (= (ControlFlow 0 39) 7) $generated@@645) (=> (= (ControlFlow 0 39) 38) $generated@@644))))
(let (($generated@@647 true))
(let (($generated@@648  (=> (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@77) (=> (and (not (= $generated@@649 $generated@@600)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@599 $generated@@649) $generated@@60))) (= ($generated@@81 $generated@@599 $generated@@649) ($generated@@81 $generated@@599 $generated@@649))))
 :pattern ( ($generated@@81 $generated@@599 $generated@@649))
)) (=> (and ($generated@@132 $generated@@599 $generated@@599) (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (! (let (($generated@@652 ($generated@@67 (type $generated@@651))))
 (=> (and (and (= (type $generated@@650) $generated@@77) (= (type $generated@@651) ($generated@@66 $generated@@652))) (and (not (= $generated@@650 $generated@@600)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@599 $generated@@650) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@599 $generated@@650) $generated@@651) ($generated@@83 ($generated@@81 $generated@@599 $generated@@650) $generated@@651)) ($generated@@0 ($generated@@159 $generated@@601 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@599 $generated@@650) $generated@@651))
))) (and (=> (= (ControlFlow 0 40) 6) $generated@@647) (=> (= (ControlFlow 0 40) 39) $generated@@646))))))
(let (($generated@@653  (=> (and (not (= ($generated@@524 $generated@@593 ($generated@@235 2)) ($generated@@235 0))) (= (ControlFlow 0 42) 40)) $generated@@648)))
(let (($generated@@654  (=> (and (= $generated@@593 $generated@@595) (= (ControlFlow 0 41) 40)) $generated@@648)))
(let (($generated@@655 true))
(let (($generated@@656  (=> (not (= $generated@@593 $generated@@595)) (and (=> (= (ControlFlow 0 43) (- 0 44)) (not (= ($generated@@235 2) 0))) (=> (not (= ($generated@@235 2) 0)) (and (=> (= (ControlFlow 0 43) 5) $generated@@655) (=> (= (ControlFlow 0 43) 42) $generated@@653)))))))
(let (($generated@@657  (=> $generated@@596 (and (=> (= (ControlFlow 0 45) 41) $generated@@654) (=> (= (ControlFlow 0 45) 43) $generated@@656)))))
(let (($generated@@658 true))
(let (($generated@@659  (and (=> (= (ControlFlow 0 46) 4) $generated@@658) (=> (= (ControlFlow 0 46) 45) $generated@@657))))
(let (($generated@@660 true))
(let (($generated@@661  (=> (and (and (and (and (not false) (<= 0 $generated@@593)) (= $generated@@594 0)) (= $generated@@595 10)) (and (and (and (<= $generated@@594 $generated@@593) (<= $generated@@593 $generated@@595)) (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@77) (=> (and (not (= $generated@@662 $generated@@600)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@599 $generated@@662) $generated@@60))) (= ($generated@@81 $generated@@599 $generated@@662) ($generated@@81 $generated@@599 $generated@@662))))
 :pattern ( ($generated@@81 $generated@@599 $generated@@662))
))) (and ($generated@@132 $generated@@599 $generated@@599) (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@67 (type $generated@@664))))
 (=> (and (and (= (type $generated@@663) $generated@@77) (= (type $generated@@664) ($generated@@66 $generated@@665))) (and (not (= $generated@@663 $generated@@600)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@599 $generated@@663) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@599 $generated@@663) $generated@@664) ($generated@@83 ($generated@@81 $generated@@599 $generated@@663) $generated@@664)) ($generated@@0 ($generated@@159 $generated@@601 $generated@@663 $generated@@664)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@599 $generated@@663) $generated@@664))
))))) (and (=> (= (ControlFlow 0 47) 3) $generated@@660) (=> (= (ControlFlow 0 47) 46) $generated@@659)))))
(let (($generated@@666  (=> ($generated@@0 ($generated@@237 ($generated@@11 true))) (=> (and (= $generated@@594 ($generated@@235 0)) (= $generated@@595 ($generated@@235 10))) (and (=> (= (ControlFlow 0 48) (- 0 49)) (<= $generated@@594 $generated@@595)) (=> (<= $generated@@594 $generated@@595) (=> (= (ControlFlow 0 48) 47) $generated@@661)))))))
(let (($generated@@667  (=> (and (not ($generated@@0 ($generated@@237 ($generated@@11 true)))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@668  (=> (= $generated@@601 ($generated@@160 $generated@@600 $generated@@599 $generated@@60 false)) (and (=> (= (ControlFlow 0 50) 48) $generated@@666) (=> (= (ControlFlow 0 50) 2) $generated@@667)))))
(let (($generated@@669  (=> (and (and ($generated@@241 $generated@@599) ($generated@@608 $generated@@599)) (and (= 1 $generated@@609) (= (ControlFlow 0 51) 50))) $generated@@668)))
$generated@@669)))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
