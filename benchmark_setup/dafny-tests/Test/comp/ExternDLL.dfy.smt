(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () Bool)
(declare-fun $generated@@159 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert  (=> (<= 1 $generated@@157) (=> (or $generated@@158 (not (= 1 $generated@@157))) (> $generated@@159 0))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@160) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@161) $generated@@47)) (= (type $generated@@162) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@163) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@166 true))
(let (($generated@@167  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@168  (=> (= $generated@@160 ($generated@@45 $generated@@161 $generated@@162 $generated@@163 false)) (and (=> (= (ControlFlow 0 4) 2) $generated@@167) (=> (= (ControlFlow 0 4) 3) $generated@@166)))))
(let (($generated@@169  (=> (and (and ($generated@@164 $generated@@162) ($generated@@165 $generated@@162)) (and (= 1 $generated@@157) (= (ControlFlow 0 5) 4))) $generated@@168)))
$generated@@169)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 () Int)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@172 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 (T@T T@U T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@281 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@314 () T@U)
(declare-fun $generated@@315 () T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@360 (T@U T@U) Bool)
(declare-fun $generated@@371 (T@T T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@443 (T@U T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@T) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 () T@T)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@534 (T@U Int) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@638 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@75 $generated@@82))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@62) $generated@@78)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@74)) (= ($generated@@1 $generated@@79) 11)) (= (type $generated@@66) $generated@@79)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@80) 12)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (= ($generated@@83 $generated@@60) 0))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@74)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@77)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@60) $generated@@61))
(assert  (and (and (= ($generated@@1 $generated@@90) 13) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@89 $generated@@93)) $generated@@90)
 :pattern ( ($generated@@89 $generated@@93))
))) (= (type $generated@@92) $generated@@73)))
(assert  (=> (< 1 $generated@@88) (forall (($generated@@94 T@U) ) (!  (=> (= (type $generated@@94) $generated@@90) ($generated@@91 ($generated@@89 $generated@@94) $generated@@92))
 :pattern ( ($generated@@89 $generated@@94))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (= ($generated@@1 ($generated@@97 $generated@@105 $generated@@106)) 14)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@99 ($generated@@97 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@97 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@109 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@97 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@100 (type $generated@@111))))
(= (type ($generated@@101 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@101 $generated@@111 $generated@@112))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 (type $generated@@116)))
(let (($generated@@118 (type $generated@@115)))
(= (type ($generated@@102 $generated@@114 $generated@@115 $generated@@116)) ($generated@@97 $generated@@118 $generated@@117))))
 :pattern ( ($generated@@102 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@100 (type $generated@@119))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@101 ($generated@@102 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@101 ($generated@@102 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@101 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@101 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@76 (type $generated@@132))))
(= (type ($generated@@103 $generated@@131 $generated@@132)) $generated@@133))
 :pattern ( ($generated@@103 $generated@@131 $generated@@132))
))) (= ($generated@@1 $generated@@98) 15)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= (type ($generated@@104 $generated@@134 $generated@@135 $generated@@136)) $generated@@98)
 :pattern ( ($generated@@104 $generated@@134 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@76 (type $generated@@138))))
 (=> (= (type $generated@@139) $generated@@140) (= ($generated@@103 ($generated@@104 $generated@@137 $generated@@138 $generated@@139) $generated@@138) $generated@@139)))
 :weight 0
))) (and (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@143 $generated@@144) (= ($generated@@103 ($generated@@104 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@103 $generated@@142 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or true (= ($generated@@103 ($generated@@104 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@103 $generated@@146 $generated@@148)))
 :weight 0
)))) (forall (($generated@@149 Int) ) (! (= (type ($generated@@96 $generated@@149)) $generated@@73)
 :pattern ( ($generated@@96 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@2) (= (type $generated@@151) ($generated@@97 $generated@@90 $generated@@98))) ($generated@@95 $generated@@150 ($generated@@96 0) $generated@@151))
 :pattern ( ($generated@@95 $generated@@150 ($generated@@96 0) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@97 $generated@@90 $generated@@98)) (= (type $generated@@154) ($generated@@97 $generated@@90 $generated@@98))) ($generated@@152 $generated@@153 $generated@@154)) (forall (($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@90) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@153 $generated@@155) $generated@@60))) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@154 $generated@@155) $generated@@60)))
 :pattern ( ($generated@@103 ($generated@@101 $generated@@154 $generated@@155) $generated@@60))
)))
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert  (and (= (type $generated@@156) $generated@@73) (= (type $generated@@157) $generated@@90)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@90) (= (type $generated@@159) ($generated@@97 $generated@@90 $generated@@98))) (= ($generated@@95 $generated@@158 $generated@@156 $generated@@159)  (or (= $generated@@158 $generated@@157) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@159 $generated@@158) $generated@@60)))))
 :pattern ( ($generated@@95 $generated@@158 $generated@@156 $generated@@159))
)))
(assert (= (type $generated@@160) $generated@@73))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@90) (= (type $generated@@162) ($generated@@97 $generated@@90 $generated@@98))) (= ($generated@@95 $generated@@161 $generated@@160 $generated@@162)  (or (= $generated@@161 $generated@@157) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@162 $generated@@161) $generated@@60)))))
 :pattern ( ($generated@@95 $generated@@161 $generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> (= (type $generated@@163) $generated@@2) ($generated@@91 $generated@@163 ($generated@@96 0)))
 :pattern ( ($generated@@91 $generated@@163 ($generated@@96 0)))
)))
(assert  (and (= ($generated@@1 $generated@@166) 16) (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@167 $generated@@168)) $generated@@73)
 :pattern ( ($generated@@165 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@73) (= (type $generated@@170) $generated@@73)) (= (type $generated@@171) $generated@@166)) ($generated@@91 $generated@@171 ($generated@@165 $generated@@169 $generated@@170))) ($generated@@164 $generated@@171))
 :pattern ( ($generated@@164 $generated@@171) ($generated@@91 $generated@@171 ($generated@@165 $generated@@169 $generated@@170)))
)))
(assert  (and (and (= ($generated@@1 $generated@@175) 17) (forall (($generated@@176 T@U) ) (! (= (type ($generated@@173 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@176))
))) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@175)
 :pattern ( ($generated@@174 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@166) (= (type $generated@@179) $generated@@166)) true) (= ($generated@@172 $generated@@178 $generated@@179)  (and (= ($generated@@173 $generated@@178) ($generated@@173 $generated@@179)) (= ($generated@@174 $generated@@178) ($generated@@174 $generated@@179)))))
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@73)
 :pattern ( ($generated@@180 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) ($generated@@97 $generated@@175 $generated@@2)) (= (type $generated@@184) $generated@@73)) ($generated@@91 $generated@@183 ($generated@@180 $generated@@184))) ($generated@@181 $generated@@183))
 :pattern ( ($generated@@91 $generated@@183 ($generated@@180 $generated@@184)))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@185 $generated@@186)) $generated@@73)
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@90) (= ($generated@@91 $generated@@187 $generated@@156)  (or (= $generated@@187 $generated@@157) (= ($generated@@185 $generated@@187) $generated@@156))))
 :pattern ( ($generated@@91 $generated@@187 $generated@@156))
)))
(assert (forall (($generated@@188 T@U) ) (!  (=> (= (type $generated@@188) $generated@@90) (= ($generated@@91 $generated@@188 $generated@@160)  (or (= $generated@@188 $generated@@157) (= ($generated@@185 $generated@@188) $generated@@160))))
 :pattern ( ($generated@@91 $generated@@188 $generated@@160))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 18)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@90 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@76 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@90) (= (type $generated@@239) ($generated@@97 $generated@@90 $generated@@98))) (= (type $generated@@240) ($generated@@75 $generated@@4))) (= (type $generated@@242) $generated@@90)) (= (type $generated@@243) ($generated@@75 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@90) (= (type $generated@@246) ($generated@@97 $generated@@90 $generated@@98))) (= ($generated@@95 $generated@@245 $generated@@92 $generated@@246) ($generated@@95 $generated@@245 $generated@@156 $generated@@246)))
 :pattern ( ($generated@@95 $generated@@245 $generated@@92 $generated@@246))
)))
(assert (= (type $generated@@247) $generated@@73))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@90) (= (type $generated@@249) ($generated@@97 $generated@@90 $generated@@98))) (= ($generated@@95 $generated@@248 $generated@@247 $generated@@249) ($generated@@95 $generated@@248 $generated@@160 $generated@@249)))
 :pattern ( ($generated@@95 $generated@@248 $generated@@247 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@166)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@73) (= (type $generated@@255) $generated@@73)) (= (type $generated@@256) $generated@@175)) (= (type $generated@@257) $generated@@175)) (= ($generated@@91 ($generated@@250 $generated@@256 $generated@@257) ($generated@@165 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@91 ($generated@@250 $generated@@256 $generated@@257) ($generated@@165 $generated@@254 $generated@@255)))
)))
(assert (= (type $generated@@258) ($generated@@75 $generated@@90)))
(assert (= ($generated@@83 $generated@@258) 0))
(assert (forall (($generated@@260 T@T) ($generated@@261 T@U) ($generated@@262 T@U) ) (! (= (type ($generated@@259 $generated@@260 $generated@@261 $generated@@262)) ($generated@@75 $generated@@260))
 :pattern ( ($generated@@259 $generated@@260 $generated@@261 $generated@@262))
)))
(assert (= ($generated@@259 $generated@@90 $generated@@66 $generated@@72) $generated@@258))
(assert  (not ($generated@@263 $generated@@258)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@166) (= (type $generated@@265) $generated@@166)) (= ($generated@@172 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@172 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@73)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@97 $generated@@175 $generated@@4)) (= (type $generated@@269) $generated@@73)) (= ($generated@@91 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@175) ($generated@@0 ($generated@@101 $generated@@268 $generated@@270))) ($generated@@251 $generated@@270 $generated@@269))
 :pattern ( ($generated@@101 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@91 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@73)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@97 $generated@@175 $generated@@4)) (= (type $generated@@274) $generated@@73)) (= ($generated@@91 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@175) ($generated@@0 ($generated@@101 $generated@@273 $generated@@275))) ($generated@@251 $generated@@275 $generated@@274))
 :pattern ( ($generated@@101 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@91 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(= (type ($generated@@276 $generated@@277)) $generated@@278))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= ($generated@@276 $generated@@279) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@282) $generated@@73) (= (type $generated@@283) $generated@@73)) (= (type $generated@@284) $generated@@175)) (= (type $generated@@285) $generated@@175)) (= (type $generated@@286) ($generated@@97 $generated@@90 $generated@@98))) ($generated@@280 $generated@@286)) (= ($generated@@95 ($generated@@250 $generated@@284 $generated@@285) ($generated@@165 $generated@@282 $generated@@283) $generated@@286)  (and ($generated@@281 $generated@@284 $generated@@282 $generated@@286) ($generated@@281 $generated@@285 $generated@@283 $generated@@286))))
 :pattern ( ($generated@@95 ($generated@@250 $generated@@284 $generated@@285) ($generated@@165 $generated@@282 $generated@@283) $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@78)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@166) (= ($generated@@164 $generated@@289) (= ($generated@@287 $generated@@289) $generated@@62)))
 :pattern ( ($generated@@164 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@166) ($generated@@164 $generated@@290)) (exists (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (and (and (= (type $generated@@291) $generated@@175) (= (type $generated@@292) $generated@@175)) (= $generated@@290 ($generated@@250 $generated@@291 $generated@@292)))
 :no-pattern (type $generated@@291)
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
)))
 :pattern ( ($generated@@164 $generated@@290))
)))
(assert  (and (and (forall (($generated@@297 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@297)) 19)) (forall (($generated@@298 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@295 $generated@@298))
))) (forall (($generated@@299 T@T) ) (! (= (type ($generated@@293 $generated@@299)) ($generated@@295 $generated@@299))
 :pattern ( ($generated@@293 $generated@@299))
))))
(assert (forall (($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@300)) 0)
 :pattern ( ($generated@@293 $generated@@300))
)))
(assert ($generated@@263 $generated@@60))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@175)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@73) (= (type $generated@@305) ($generated@@97 $generated@@90 $generated@@98))) (= ($generated@@281 ($generated@@301 $generated@@303) $generated@@304 $generated@@305) ($generated@@95 $generated@@303 $generated@@304 $generated@@305)))
 :pattern ( ($generated@@281 ($generated@@301 $generated@@303) $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@306) ($generated@@97 $generated@@90 $generated@@98)) (= (type $generated@@307) ($generated@@97 $generated@@90 $generated@@98))) (= (type $generated@@308) $generated@@175)) (= (type $generated@@309) $generated@@73)) ($generated@@152 $generated@@306 $generated@@307)) ($generated@@281 $generated@@308 $generated@@309 $generated@@306)) ($generated@@281 $generated@@308 $generated@@309 $generated@@307))
 :pattern ( ($generated@@152 $generated@@306 $generated@@307) ($generated@@281 $generated@@308 $generated@@309 $generated@@306))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@310) ($generated@@97 $generated@@90 $generated@@98)) (= (type $generated@@311) ($generated@@97 $generated@@90 $generated@@98))) (= (type $generated@@313) $generated@@73)) ($generated@@152 $generated@@310 $generated@@311)) ($generated@@95 $generated@@312 $generated@@313 $generated@@310)) ($generated@@95 $generated@@312 $generated@@313 $generated@@311))
 :pattern ( ($generated@@152 $generated@@310 $generated@@311) ($generated@@95 $generated@@312 $generated@@313 $generated@@310))
)))
(assert (= (type $generated@@314) $generated@@90))
(assert  (=> (< 1 $generated@@88) ($generated@@91 $generated@@314 $generated@@92)))
(assert (= (type $generated@@315) $generated@@90))
(assert  (=> (< 1 $generated@@88) ($generated@@91 $generated@@315 $generated@@92)))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@97 $generated@@318 $generated@@2))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@99 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@97 $generated@@320 $generated@@2)) (and (= (= ($generated@@316 $generated@@319) 0) (= $generated@@319 ($generated@@317 $generated@@320))) (=> (not (= ($generated@@316 $generated@@319) 0)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) (< 0 ($generated ($generated@@101 $generated@@319 $generated@@321))))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 20)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@97 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@101 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@101 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 21)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@97 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@101 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@101 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (=> (< 1 $generated@@88) (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@97 $generated@@90 $generated@@98)) (= (type $generated@@359) $generated@@90)) (and ($generated@@280 $generated@@358) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@358 $generated@@359) $generated@@60)))) ($generated@@95 ($generated@@89 $generated@@359) $generated@@92 $generated@@358))
 :pattern ( ($generated@@89 $generated@@359) ($generated@@103 ($generated@@101 $generated@@358 $generated@@359) $generated@@60))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@97 $generated@@90 $generated@@98)) (= (type $generated@@362) ($generated@@97 $generated@@90 $generated@@98))) ($generated@@360 $generated@@361 $generated@@362)) (and ($generated@@152 $generated@@361 $generated@@362) (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@76 (type $generated@@364))))
 (=> (and (and (= (type $generated@@363) $generated@@90) (= (type $generated@@364) ($generated@@75 $generated@@365))) (not ($generated@@263 $generated@@364))) (= ($generated@@103 ($generated@@101 $generated@@361 $generated@@363) $generated@@364) ($generated@@103 ($generated@@101 $generated@@362 $generated@@363) $generated@@364))))
 :pattern ( ($generated@@103 ($generated@@101 $generated@@362 $generated@@363) $generated@@364))
))))
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert  (=> (< 1 $generated@@88) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@97 $generated@@90 $generated@@98)) ($generated@@280 $generated@@366)) ($generated@@95 $generated@@314 $generated@@92 $generated@@366))
 :pattern ( ($generated@@95 $generated@@314 $generated@@92 $generated@@366))
))))
(assert  (=> (< 1 $generated@@88) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@97 $generated@@90 $generated@@98)) ($generated@@280 $generated@@367)) ($generated@@95 $generated@@315 $generated@@92 $generated@@367))
 :pattern ( ($generated@@95 $generated@@315 $generated@@92 $generated@@367))
))))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@99 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@97 $generated@@369 $generated@@2)) (= ($generated@@181 $generated@@368) (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@369) (and (<= 0 ($generated ($generated@@101 $generated@@368 $generated@@370))) (<= ($generated ($generated@@101 $generated@@368 $generated@@370)) ($generated@@316 $generated@@368))))
 :pattern ( ($generated@@101 $generated@@368 $generated@@370))
)))))
 :pattern ( ($generated@@181 $generated@@368))
)))
(assert (forall (($generated@@372 T@T) ($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@371 $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@175) ($generated@@251 $generated@@374 $generated@@156)) (and (= ($generated@@301 ($generated@@371 $generated@@90 $generated@@374)) $generated@@374) ($generated@@91 ($generated@@371 $generated@@90 $generated@@374) $generated@@156)))
 :pattern ( ($generated@@251 $generated@@374 $generated@@156))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@175) ($generated@@251 $generated@@375 $generated@@92)) (and (= ($generated@@301 ($generated@@371 $generated@@90 $generated@@375)) $generated@@375) ($generated@@91 ($generated@@371 $generated@@90 $generated@@375) $generated@@92)))
 :pattern ( ($generated@@251 $generated@@375 $generated@@92))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@175) ($generated@@251 $generated@@376 $generated@@160)) (and (= ($generated@@301 ($generated@@371 $generated@@90 $generated@@376)) $generated@@376) ($generated@@91 ($generated@@371 $generated@@90 $generated@@376) $generated@@160)))
 :pattern ( ($generated@@251 $generated@@376 $generated@@160))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@175) ($generated@@251 $generated@@377 $generated@@247)) (and (= ($generated@@301 ($generated@@371 $generated@@90 $generated@@377)) $generated@@377) ($generated@@91 ($generated@@371 $generated@@90 $generated@@377) $generated@@247)))
 :pattern ( ($generated@@251 $generated@@377 $generated@@247))
)))
(assert (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@90) (= ($generated@@91 $generated@@378 $generated@@92)  (and ($generated@@91 $generated@@378 $generated@@156) (not (= $generated@@378 $generated@@157)))))
 :pattern ( ($generated@@91 $generated@@378 $generated@@92))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@90) (= ($generated@@91 $generated@@379 $generated@@247)  (and ($generated@@91 $generated@@379 $generated@@160) (not (= $generated@@379 $generated@@157)))))
 :pattern ( ($generated@@91 $generated@@379 $generated@@247))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@326 (type $generated@@380))))
(let (($generated@@382 ($generated@@325 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@324 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@323 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) ($generated@@0 ($generated@@101 ($generated@@322 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@322 $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@326 (type $generated@@385))))
(= (type ($generated@@384 $generated@@385)) ($generated@@97 $generated@@386 $generated@@4)))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@326 (type $generated@@387))))
(let (($generated@@389 ($generated@@325 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@324 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@323 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@388) ($generated@@0 ($generated@@101 ($generated@@384 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@384 $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@344 (type $generated@@391))))
(let (($generated@@393 ($generated@@343 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@342 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@341 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) ($generated@@0 ($generated@@101 ($generated@@340 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@340 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@344 (type $generated@@396))))
(= (type ($generated@@395 $generated@@396)) ($generated@@97 $generated@@397 $generated@@4)))
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@344 (type $generated@@398))))
(let (($generated@@400 ($generated@@343 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@342 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@341 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@399) ($generated@@0 ($generated@@101 ($generated@@395 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@395 $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@97 $generated@@175 $generated@@2)) (= (type $generated@@403) $generated@@73)) (= ($generated@@91 $generated@@402 ($generated@@180 $generated@@403)) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@175) (< 0 ($generated ($generated@@101 $generated@@402 $generated@@404)))) ($generated@@251 $generated@@404 $generated@@403))
 :pattern ( ($generated@@101 $generated@@402 $generated@@404))
))))
 :pattern ( ($generated@@91 $generated@@402 ($generated@@180 $generated@@403)))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@97 $generated@@90 $generated@@98)) (= (type $generated@@406) $generated@@90)) (=> (and (and ($generated@@280 $generated@@405) (and (not (= $generated@@406 $generated@@157)) (= ($generated@@185 $generated@@406) $generated@@160))) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@405 $generated@@406) $generated@@60))) ($generated@@95 ($generated@@103 ($generated@@101 $generated@@405 $generated@@406) $generated@@258) $generated@@92 $generated@@405)))
 :pattern ( ($generated@@103 ($generated@@101 $generated@@405 $generated@@406) $generated@@258))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (= (type $generated@@407) ($generated@@97 $generated@@175 $generated@@4)) (= (type $generated@@408) $generated@@73)) (= (type $generated@@409) ($generated@@97 $generated@@90 $generated@@98))) (= ($generated@@95 $generated@@407 ($generated@@266 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@175) ($generated@@0 ($generated@@101 $generated@@407 $generated@@410))) ($generated@@281 $generated@@410 $generated@@408 $generated@@409))
 :pattern ( ($generated@@101 $generated@@407 $generated@@410))
))))
 :pattern ( ($generated@@95 $generated@@407 ($generated@@266 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@97 $generated@@175 $generated@@4)) (= (type $generated@@412) $generated@@73)) (= (type $generated@@413) ($generated@@97 $generated@@90 $generated@@98))) (= ($generated@@95 $generated@@411 ($generated@@271 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@175) ($generated@@0 ($generated@@101 $generated@@411 $generated@@414))) ($generated@@281 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@101 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@95 $generated@@411 ($generated@@271 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(= ($generated ($generated@@101 ($generated@@317 $generated@@416) $generated@@415)) 0))
 :pattern ( (let (($generated@@416 (type $generated@@415)))
($generated@@101 ($generated@@317 $generated@@416) $generated@@415)))
)))
(assert  (and (forall (($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@419)) ($generated@@97 $generated@@175 $generated@@4))
 :pattern ( ($generated@@417 $generated@@419))
)) (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@326 (type $generated@@420))))
(let (($generated@@422 ($generated@@325 (type $generated@@420))))
(= (type ($generated@@418 $generated@@420)) ($generated@@97 $generated@@422 $generated@@421))))
 :pattern ( ($generated@@418 $generated@@420))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@324 $generated@@175 $generated@@175)) (= (type $generated@@424) $generated@@175)) (= ($generated@@0 ($generated@@101 ($generated@@417 $generated@@423) $generated@@424))  (and ($generated@@0 ($generated@@101 ($generated@@322 $generated@@423) ($generated@@173 ($generated@@371 $generated@@166 $generated@@424)))) (= ($generated@@101 ($generated@@418 $generated@@423) ($generated@@173 ($generated@@371 $generated@@166 $generated@@424))) ($generated@@174 ($generated@@371 $generated@@166 $generated@@424))))))
 :pattern ( ($generated@@101 ($generated@@417 $generated@@423) $generated@@424))
)))
(assert  (and (forall (($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@427)) ($generated@@97 $generated@@175 $generated@@4))
 :pattern ( ($generated@@425 $generated@@427))
)) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@344 (type $generated@@428))))
(let (($generated@@430 ($generated@@343 (type $generated@@428))))
(= (type ($generated@@426 $generated@@428)) ($generated@@97 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@426 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@342 $generated@@175 $generated@@175)) (= (type $generated@@432) $generated@@175)) (= ($generated@@0 ($generated@@101 ($generated@@425 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@101 ($generated@@340 $generated@@431) ($generated@@173 ($generated@@371 $generated@@166 $generated@@432)))) (= ($generated@@101 ($generated@@426 $generated@@431) ($generated@@173 ($generated@@371 $generated@@166 $generated@@432))) ($generated@@174 ($generated@@371 $generated@@166 $generated@@432))))))
 :pattern ( ($generated@@101 ($generated@@425 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@325 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@324 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@101 ($generated@@384 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@101 ($generated@@322 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@101 ($generated@@418 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@101 ($generated@@322 $generated@@433) $generated@@437))
 :pattern ( ($generated@@101 ($generated@@418 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@101 ($generated@@384 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (let (($generated@@440 (type $generated@@439)))
(let (($generated@@441 ($generated@@343 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@342 $generated@@441 $generated@@440)) (= ($generated@@0 ($generated@@101 ($generated@@395 $generated@@438) $generated@@439)) (exists (($generated@@442 T@U) ) (!  (and (= (type $generated@@442) $generated@@441) (and ($generated@@0 ($generated@@101 ($generated@@340 $generated@@438) $generated@@442)) (= $generated@@439 ($generated@@101 ($generated@@426 $generated@@438) $generated@@442))))
 :pattern ( ($generated@@101 ($generated@@340 $generated@@438) $generated@@442))
 :pattern ( ($generated@@101 ($generated@@426 $generated@@438) $generated@@442))
))))))
 :pattern ( ($generated@@101 ($generated@@395 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (= (type ($generated@@443 $generated@@444 $generated@@445)) $generated@@73)
 :pattern ( ($generated@@443 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (and (= (type $generated@@446) ($generated@@324 $generated@@175 $generated@@175)) (= (type $generated@@447) $generated@@73)) (= (type $generated@@448) $generated@@73)) (= (type $generated@@449) ($generated@@97 $generated@@90 $generated@@98))) (= ($generated@@95 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@175) ($generated@@0 ($generated@@101 ($generated@@322 $generated@@446) $generated@@450))) (and ($generated@@281 ($generated@@101 ($generated@@418 $generated@@446) $generated@@450) $generated@@448 $generated@@449) ($generated@@281 $generated@@450 $generated@@447 $generated@@449)))
 :pattern ( ($generated@@101 ($generated@@418 $generated@@446) $generated@@450))
 :pattern ( ($generated@@101 ($generated@@322 $generated@@446) $generated@@450))
))))
 :pattern ( ($generated@@95 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@73)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@342 $generated@@175 $generated@@175)) (= (type $generated@@455) $generated@@73)) (= (type $generated@@456) $generated@@73)) (= (type $generated@@457) ($generated@@97 $generated@@90 $generated@@98))) (= ($generated@@95 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@175) ($generated@@0 ($generated@@101 ($generated@@340 $generated@@454) $generated@@458))) (and ($generated@@281 ($generated@@101 ($generated@@426 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@281 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@101 ($generated@@426 $generated@@454) $generated@@458))
 :pattern ( ($generated@@101 ($generated@@340 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@95 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@459) ($generated@@97 $generated@@90 $generated@@98)) (= (type $generated@@460) ($generated@@97 $generated@@90 $generated@@98))) (= (type $generated@@461) ($generated@@97 $generated@@90 $generated@@98))) (not (= $generated@@459 $generated@@461))) (and ($generated@@152 $generated@@459 $generated@@460) ($generated@@152 $generated@@460 $generated@@461))) ($generated@@152 $generated@@459 $generated@@461))
 :pattern ( ($generated@@152 $generated@@459 $generated@@460) ($generated@@152 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@T) ) (! (= (type ($generated@@462 $generated@@463)) ($generated@@97 $generated@@463 $generated@@4))
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@344 (type $generated@@464))))
(let (($generated@@466 ($generated@@343 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@342 $generated@@466 $generated@@465)) (= (= $generated@@464 ($generated@@341 $generated@@466 $generated@@465)) (= ($generated@@340 $generated@@464) ($generated@@462 $generated@@466))))))
 :pattern ( ($generated@@340 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@344 (type $generated@@467))))
(let (($generated@@469 ($generated@@343 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@342 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@341 $generated@@469 $generated@@468)) (= ($generated@@395 $generated@@467) ($generated@@462 $generated@@468))))))
 :pattern ( ($generated@@395 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@344 (type $generated@@470))))
(let (($generated@@472 ($generated@@343 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@342 $generated@@472 $generated@@471)) (= (= $generated@@470 ($generated@@341 $generated@@472 $generated@@471)) (= ($generated@@425 $generated@@470) ($generated@@462 $generated@@175))))))
 :pattern ( ($generated@@425 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@326 (type $generated@@473))))
(let (($generated@@475 ($generated@@325 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@324 $generated@@475 $generated@@474)) (or (= $generated@@473 ($generated@@323 $generated@@475 $generated@@474)) (exists (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (and (and (= (type $generated@@476) $generated@@175) (= (type $generated@@477) $generated@@175)) ($generated@@0 ($generated@@101 ($generated@@417 $generated@@473) ($generated@@301 ($generated@@250 $generated@@476 $generated@@477)))))
 :no-pattern (type $generated@@476)
 :no-pattern (type $generated@@477)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
))))))
 :pattern ( ($generated@@417 $generated@@473))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@344 (type $generated@@478))))
(let (($generated@@480 ($generated@@343 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@342 $generated@@480 $generated@@479)) (or (= $generated@@478 ($generated@@341 $generated@@480 $generated@@479)) (exists (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (and (and (= (type $generated@@481) $generated@@175) (= (type $generated@@482) $generated@@175)) ($generated@@0 ($generated@@101 ($generated@@425 $generated@@478) ($generated@@301 ($generated@@250 $generated@@481 $generated@@482)))))
 :no-pattern (type $generated@@481)
 :no-pattern (type $generated@@482)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
))))))
 :pattern ( ($generated@@425 $generated@@478))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@79)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@T) ) (!  (=> (and (= (type $generated@@485) $generated@@79) (= (type $generated@@486) $generated@@77)) (and (= ($generated@@483 ($generated@@259 $generated@@487 $generated@@485 $generated@@486)) $generated@@485) (= ($generated@@86 ($generated@@259 $generated@@487 $generated@@485 $generated@@486)) $generated@@486)))
 :pattern ( ($generated@@259 $generated@@487 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@175) ($generated@@251 $generated@@488 $generated@@46)) (and (= ($generated@@301 ($generated@@371 $generated@@2 $generated@@488)) $generated@@488) ($generated@@91 ($generated@@371 $generated@@2 $generated@@488) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@488 $generated@@46))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@175) ($generated@@251 $generated@@489 $generated@@47)) (and (= ($generated@@301 ($generated@@371 $generated@@3 $generated@@489)) $generated@@489) ($generated@@91 ($generated@@371 $generated@@3 $generated@@489) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@489 $generated@@47))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@175) ($generated@@251 $generated@@490 $generated@@44)) (and (= ($generated@@301 ($generated@@371 $generated@@4 $generated@@490)) $generated@@490) ($generated@@91 ($generated@@371 $generated@@4 $generated@@490) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@490 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@491) 22))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@175) ($generated@@251 $generated@@492 $generated@@45)) (and (= ($generated@@301 ($generated@@371 $generated@@491 $generated@@492)) $generated@@492) ($generated@@91 ($generated@@371 $generated@@491 $generated@@492) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@492 $generated@@45))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@73) (= ($generated@@251 ($generated@@301 $generated@@493) $generated@@494) ($generated@@91 $generated@@493 $generated@@494)))
 :pattern ( ($generated@@251 ($generated@@301 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@99 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@97 $generated@@496 $generated@@2)) (<= 0 ($generated@@316 $generated@@495))))
 :pattern ( ($generated@@316 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@296 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@295 $generated@@498)) (<= 0 ($generated@@294 $generated@@497))))
 :pattern ( ($generated@@294 $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@73)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@73) (= (type $generated@@502) $generated@@73)) (= ($generated@@499 ($generated@@443 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@443 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@73)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@73) (= (type $generated@@506) $generated@@73)) (= ($generated@@503 ($generated@@443 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@443 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@73) (= (type $generated@@508) $generated@@73)) (= ($generated@@84 ($generated@@443 $generated@@507 $generated@@508)) $generated@@58))
 :pattern ( ($generated@@443 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@73)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@73) (= (type $generated@@512) $generated@@73)) (= ($generated@@509 ($generated@@451 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@451 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@73)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@73) (= (type $generated@@516) $generated@@73)) (= ($generated@@513 ($generated@@451 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@451 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@73) (= (type $generated@@518) $generated@@73)) (= ($generated@@84 ($generated@@451 $generated@@517 $generated@@518)) $generated@@59))
 :pattern ( ($generated@@451 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@175) (= (type $generated@@520) $generated@@175)) (= ($generated@@287 ($generated@@250 $generated@@519 $generated@@520)) $generated@@62))
 :pattern ( ($generated@@250 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@73)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@73) (= (type $generated@@524) $generated@@73)) (= ($generated@@521 ($generated@@165 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@165 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@73)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@73) (= (type $generated@@528) $generated@@73)) (= ($generated@@525 ($generated@@165 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@165 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@175) (= (type $generated@@530) $generated@@175)) (= ($generated@@173 ($generated@@250 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@250 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@175) (= (type $generated@@532) $generated@@175)) (= ($generated@@174 ($generated@@250 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@250 $generated@@531 $generated@@532))
)))
(assert  (and (forall (($generated@@535 T@U) ) (! (= (type ($generated@@533 $generated@@535)) $generated@@73)
 :pattern ( ($generated@@533 $generated@@535))
)) (forall (($generated@@536 T@U) ($generated@@537 Int) ) (! (let (($generated@@538 ($generated@@296 (type $generated@@536))))
(= (type ($generated@@534 $generated@@536 $generated@@537)) $generated@@538))
 :pattern ( ($generated@@534 $generated@@536 $generated@@537))
))))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@295 $generated@@175)) (= (type $generated@@540) $generated@@73)) (= (type $generated@@541) ($generated@@97 $generated@@90 $generated@@98))) (= ($generated@@95 $generated@@539 ($generated@@533 $generated@@540) $generated@@541) (forall (($generated@@542 Int) ) (!  (=> (and (<= 0 $generated@@542) (< $generated@@542 ($generated@@294 $generated@@539))) ($generated@@281 ($generated@@534 $generated@@539 $generated@@542) $generated@@540 $generated@@541))
 :pattern ( ($generated@@534 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@95 $generated@@539 ($generated@@533 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@543 ($generated@@96 $generated@@544)) $generated@@544)
 :pattern ( ($generated@@96 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@73)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@73) (= ($generated@@545 ($generated@@266 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@266 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@73) (= ($generated@@84 ($generated@@266 $generated@@548)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@73)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@73) (= ($generated@@549 ($generated@@271 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@271 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@73) (= ($generated@@84 ($generated@@271 $generated@@552)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@73)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@73) (= ($generated@@553 ($generated@@180 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@180 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@73) (= ($generated@@84 ($generated@@180 $generated@@556)) $generated@@56))
 :pattern ( ($generated@@180 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@73)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@73) (= ($generated@@557 ($generated@@533 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@533 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@73) (= ($generated@@84 ($generated@@533 $generated@@560)) $generated@@57))
 :pattern ( ($generated@@533 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
(= ($generated@@371 $generated@@562 ($generated@@301 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@301 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@324 $generated@@175 $generated@@175)) (= (type $generated@@564) $generated@@73)) (= (type $generated@@565) $generated@@73)) (= ($generated@@91 $generated@@563 ($generated@@443 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@175) ($generated@@0 ($generated@@101 ($generated@@322 $generated@@563) $generated@@566))) (and ($generated@@251 ($generated@@101 ($generated@@418 $generated@@563) $generated@@566) $generated@@565) ($generated@@251 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@101 ($generated@@418 $generated@@563) $generated@@566))
 :pattern ( ($generated@@101 ($generated@@322 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@91 $generated@@563 ($generated@@443 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@342 $generated@@175 $generated@@175)) (= (type $generated@@568) $generated@@73)) (= (type $generated@@569) $generated@@73)) (= ($generated@@91 $generated@@567 ($generated@@451 $generated@@568 $generated@@569)) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@175) ($generated@@0 ($generated@@101 ($generated@@340 $generated@@567) $generated@@570))) (and ($generated@@251 ($generated@@101 ($generated@@426 $generated@@567) $generated@@570) $generated@@569) ($generated@@251 $generated@@570 $generated@@568)))
 :pattern ( ($generated@@101 ($generated@@426 $generated@@567) $generated@@570))
 :pattern ( ($generated@@101 ($generated@@340 $generated@@567) $generated@@570))
))))
 :pattern ( ($generated@@91 $generated@@567 ($generated@@451 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@175) (= (type $generated@@574) $generated@@175)) (< ($generated@@571 $generated@@573) ($generated@@572 ($generated@@250 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@250 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@175) (= (type $generated@@576) $generated@@175)) (< ($generated@@571 $generated@@576) ($generated@@572 ($generated@@250 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@250 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@175) (= (type $generated@@578) $generated@@73)) (= (type $generated@@579) $generated@@73)) ($generated@@251 $generated@@577 ($generated@@443 $generated@@578 $generated@@579))) (and (= ($generated@@301 ($generated@@371 ($generated@@324 $generated@@175 $generated@@175) $generated@@577)) $generated@@577) ($generated@@91 ($generated@@371 ($generated@@324 $generated@@175 $generated@@175) $generated@@577) ($generated@@443 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@251 $generated@@577 ($generated@@443 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@175) (= (type $generated@@581) $generated@@73)) (= (type $generated@@582) $generated@@73)) ($generated@@251 $generated@@580 ($generated@@451 $generated@@581 $generated@@582))) (and (= ($generated@@301 ($generated@@371 ($generated@@342 $generated@@175 $generated@@175) $generated@@580)) $generated@@580) ($generated@@91 ($generated@@371 ($generated@@342 $generated@@175 $generated@@175) $generated@@580) ($generated@@451 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@251 $generated@@580 ($generated@@451 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@73) (= (type $generated@@584) $generated@@73)) (= (type $generated@@585) $generated@@175)) ($generated@@251 $generated@@585 ($generated@@165 $generated@@583 $generated@@584))) (and (= ($generated@@301 ($generated@@371 $generated@@166 $generated@@585)) $generated@@585) ($generated@@91 ($generated@@371 $generated@@166 $generated@@585) ($generated@@165 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@251 $generated@@585 ($generated@@165 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
 (not ($generated@@0 ($generated@@101 ($generated@@462 $generated@@587) $generated@@586))))
 :pattern ( (let (($generated@@587 (type $generated@@586)))
($generated@@101 ($generated@@462 $generated@@587) $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@97 $generated@@90 $generated@@98)) (= (type $generated@@589) $generated@@90)) (and ($generated@@280 $generated@@588) (and (not (= $generated@@589 $generated@@157)) (= ($generated@@185 $generated@@589) $generated@@160)))) ($generated@@91 ($generated@@103 ($generated@@101 $generated@@588 $generated@@589) $generated@@258) $generated@@92))
 :pattern ( ($generated@@103 ($generated@@101 $generated@@588 $generated@@589) $generated@@258))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@80)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@73) (= (type $generated@@593) $generated@@73)) (and (= ($generated@@84 ($generated@@165 $generated@@592 $generated@@593)) $generated@@63) (= ($generated@@590 ($generated@@165 $generated@@592 $generated@@593)) $generated@@69)))
 :pattern ( ($generated@@165 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@166) (= ($generated@@571 ($generated@@301 $generated@@594)) ($generated@@572 $generated@@594)))
 :pattern ( ($generated@@571 ($generated@@301 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@175) ($generated@@251 $generated@@595 ($generated@@96 0))) (and (= ($generated@@301 ($generated@@371 $generated@@2 $generated@@595)) $generated@@595) ($generated@@91 ($generated@@371 ($generated@@97 $generated@@175 $generated@@4) $generated@@595) ($generated@@96 0))))
 :pattern ( ($generated@@251 $generated@@595 ($generated@@96 0)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@175) (= (type $generated@@597) $generated@@73)) ($generated@@251 $generated@@596 ($generated@@266 $generated@@597))) (and (= ($generated@@301 ($generated@@371 ($generated@@97 $generated@@175 $generated@@4) $generated@@596)) $generated@@596) ($generated@@91 ($generated@@371 ($generated@@97 $generated@@175 $generated@@4) $generated@@596) ($generated@@266 $generated@@597))))
 :pattern ( ($generated@@251 $generated@@596 ($generated@@266 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@175) (= (type $generated@@599) $generated@@73)) ($generated@@251 $generated@@598 ($generated@@271 $generated@@599))) (and (= ($generated@@301 ($generated@@371 ($generated@@97 $generated@@175 $generated@@4) $generated@@598)) $generated@@598) ($generated@@91 ($generated@@371 ($generated@@97 $generated@@175 $generated@@4) $generated@@598) ($generated@@271 $generated@@599))))
 :pattern ( ($generated@@251 $generated@@598 ($generated@@271 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@175) (= (type $generated@@601) $generated@@73)) ($generated@@251 $generated@@600 ($generated@@180 $generated@@601))) (and (= ($generated@@301 ($generated@@371 ($generated@@97 $generated@@175 $generated@@2) $generated@@600)) $generated@@600) ($generated@@91 ($generated@@371 ($generated@@97 $generated@@175 $generated@@2) $generated@@600) ($generated@@180 $generated@@601))))
 :pattern ( ($generated@@251 $generated@@600 ($generated@@180 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@175) (= (type $generated@@603) $generated@@73)) ($generated@@251 $generated@@602 ($generated@@533 $generated@@603))) (and (= ($generated@@301 ($generated@@371 ($generated@@295 $generated@@175) $generated@@602)) $generated@@602) ($generated@@91 ($generated@@371 ($generated@@295 $generated@@175) $generated@@602) ($generated@@533 $generated@@603))))
 :pattern ( ($generated@@251 $generated@@602 ($generated@@533 $generated@@603)))
)))
(assert (= ($generated@@84 $generated@@156) $generated@@64))
(assert (= ($generated@@590 $generated@@156) $generated@@70))
(assert (= ($generated@@84 $generated@@92) $generated@@65))
(assert (= ($generated@@590 $generated@@92) $generated@@70))
(assert (= ($generated@@84 $generated@@160) $generated@@67))
(assert (= ($generated@@590 $generated@@160) $generated@@71))
(assert (= ($generated@@84 $generated@@247) $generated@@68))
(assert (= ($generated@@590 $generated@@247) $generated@@71))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@604) ($generated@@97 $generated@@175 $generated@@2)) (= (type $generated@@605) $generated@@73)) (= (type $generated@@606) ($generated@@97 $generated@@90 $generated@@98))) (= ($generated@@95 $generated@@604 ($generated@@180 $generated@@605) $generated@@606) (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@175) (< 0 ($generated ($generated@@101 $generated@@604 $generated@@607)))) ($generated@@281 $generated@@607 $generated@@605 $generated@@606))
 :pattern ( ($generated@@101 $generated@@604 $generated@@607))
))))
 :pattern ( ($generated@@95 $generated@@604 ($generated@@180 $generated@@605) $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@166) (= (type $generated@@609) $generated@@73)) (= (type $generated@@610) ($generated@@97 $generated@@90 $generated@@98))) (and ($generated@@280 $generated@@610) (and ($generated@@164 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@73) ($generated@@95 $generated@@608 ($generated@@165 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@95 $generated@@608 ($generated@@165 $generated@@609 $generated@@611) $generated@@610))
))))) ($generated@@281 ($generated@@173 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@281 ($generated@@173 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@166) (= (type $generated@@613) $generated@@73)) (= (type $generated@@614) ($generated@@97 $generated@@90 $generated@@98))) (and ($generated@@280 $generated@@614) (and ($generated@@164 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@73) ($generated@@95 $generated@@612 ($generated@@165 $generated@@615 $generated@@613) $generated@@614))
 :pattern ( ($generated@@95 $generated@@612 ($generated@@165 $generated@@615 $generated@@613) $generated@@614))
))))) ($generated@@281 ($generated@@174 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@281 ($generated@@174 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@175) (= (type $generated@@617) $generated@@175)) (= ($generated@@250 ($generated@@276 $generated@@616) ($generated@@276 $generated@@617)) ($generated@@276 ($generated@@250 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@250 ($generated@@276 $generated@@616) ($generated@@276 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (! (= ($generated@@301 ($generated@@276 $generated@@618)) ($generated@@276 ($generated@@301 $generated@@618)))
 :pattern ( ($generated@@301 ($generated@@276 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@296 (type $generated@@619))))
 (=> (and (= (type $generated@@619) ($generated@@295 $generated@@620)) (= ($generated@@294 $generated@@619) 0)) (= $generated@@619 ($generated@@293 $generated@@620))))
 :pattern ( ($generated@@294 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@622)))
 (=> (and (and (= (type $generated@@621) ($generated@@97 $generated@@624 $generated@@2)) (= (type $generated@@623) $generated@@2)) (<= 0 ($generated $generated@@623))) (= ($generated@@316 ($generated@@102 $generated@@621 $generated@@622 $generated@@623)) (+ (- ($generated@@316 $generated@@621) ($generated ($generated@@101 $generated@@621 $generated@@622))) ($generated $generated@@623)))))
 :pattern ( ($generated@@316 ($generated@@102 $generated@@621 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@97 $generated@@90 $generated@@98)) (= (type $generated@@626) $generated@@2)) ($generated@@95 $generated@@626 $generated@@46 $generated@@625))
 :pattern ( ($generated@@95 $generated@@626 $generated@@46 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@97 $generated@@90 $generated@@98)) (= (type $generated@@628) $generated@@3)) ($generated@@95 $generated@@628 $generated@@47 $generated@@627))
 :pattern ( ($generated@@95 $generated@@628 $generated@@47 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@97 $generated@@90 $generated@@98)) (= (type $generated@@630) $generated@@4)) ($generated@@95 $generated@@630 $generated@@44 $generated@@629))
 :pattern ( ($generated@@95 $generated@@630 $generated@@44 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@97 $generated@@90 $generated@@98)) (= (type $generated@@632) $generated@@491)) ($generated@@95 $generated@@632 $generated@@45 $generated@@631))
 :pattern ( ($generated@@95 $generated@@632 $generated@@45 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@97 $generated@@90 $generated@@98)) (= (type $generated@@634) $generated@@175)) ($generated@@95 $generated@@634 $generated@@48 $generated@@633))
 :pattern ( ($generated@@95 $generated@@634 $generated@@48 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@295 $generated@@175)) (= (type $generated@@636) $generated@@73)) (= ($generated@@91 $generated@@635 ($generated@@533 $generated@@636)) (forall (($generated@@637 Int) ) (!  (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@294 $generated@@635))) ($generated@@251 ($generated@@534 $generated@@635 $generated@@637) $generated@@636))
 :pattern ( ($generated@@534 $generated@@635 $generated@@637))
))))
 :pattern ( ($generated@@91 $generated@@635 ($generated@@533 $generated@@636)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 Int) ) (!  (=> (= (type $generated@@639) ($generated@@295 $generated@@175)) (=> (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@294 $generated@@639))) (< ($generated@@572 ($generated@@371 $generated@@166 ($generated@@534 $generated@@639 $generated@@640))) ($generated@@638 $generated@@639))))
 :pattern ( ($generated@@572 ($generated@@371 $generated@@166 ($generated@@534 $generated@@639 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@324 $generated@@175 $generated@@175)) (= (type $generated@@642) $generated@@73)) (= (type $generated@@643) $generated@@73)) ($generated@@91 $generated@@641 ($generated@@443 $generated@@642 $generated@@643))) (and (and ($generated@@91 ($generated@@322 $generated@@641) ($generated@@266 $generated@@642)) ($generated@@91 ($generated@@384 $generated@@641) ($generated@@266 $generated@@643))) ($generated@@91 ($generated@@417 $generated@@641) ($generated@@266 ($generated@@165 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@91 $generated@@641 ($generated@@443 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) ($generated@@342 $generated@@175 $generated@@175)) (= (type $generated@@645) $generated@@73)) (= (type $generated@@646) $generated@@73)) ($generated@@91 $generated@@644 ($generated@@451 $generated@@645 $generated@@646))) (and (and ($generated@@91 ($generated@@340 $generated@@644) ($generated@@271 $generated@@645)) ($generated@@91 ($generated@@395 $generated@@644) ($generated@@271 $generated@@646))) ($generated@@91 ($generated@@425 $generated@@644) ($generated@@271 ($generated@@165 $generated@@645 $generated@@646)))))
 :pattern ( ($generated@@91 $generated@@644 ($generated@@451 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@2) ($generated@@91 $generated@@647 $generated@@46))
 :pattern ( ($generated@@91 $generated@@647 $generated@@46))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@3) ($generated@@91 $generated@@648 $generated@@47))
 :pattern ( ($generated@@91 $generated@@648 $generated@@47))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@4) ($generated@@91 $generated@@649 $generated@@44))
 :pattern ( ($generated@@91 $generated@@649 $generated@@44))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@491) ($generated@@91 $generated@@650 $generated@@45))
 :pattern ( ($generated@@91 $generated@@650 $generated@@45))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@175) ($generated@@91 $generated@@651 $generated@@48))
 :pattern ( ($generated@@91 $generated@@651 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 (T@U) Bool)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () Bool)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () Bool)
(declare-fun $generated@@667 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@652) ($generated@@191 $generated@@90 $generated@@4)) (= (type $generated@@653) ($generated@@97 $generated@@90 $generated@@98))) (= (type $generated@@654) $generated@@90)) (= (type $generated@@655) ($generated@@97 $generated@@90 $generated@@98))) (= (type $generated@@657) $generated@@90)) (= (type $generated@@658) ($generated@@97 $generated@@90 $generated@@98))) (= (type $generated@@660) $generated@@90)) (= (type $generated@@661) ($generated@@97 $generated@@90 $generated@@98))) (= (type $generated@@662) $generated@@90)) (= (type $generated@@663) $generated@@90)) (= (type $generated@@664) ($generated@@97 $generated@@90 $generated@@98))) (= (type $generated@@665) $generated@@90)) (= (type $generated@@667) $generated@@90)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@668  (=> (and (= $generated@@652 ($generated@@190 $generated@@157 $generated@@653 $generated@@60 false)) (= $generated@@654 $generated@@315)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (not (= $generated@@654 $generated@@157))) (=> (not (= $generated@@654 $generated@@157)) (=> (and (and (and ($generated@@280 $generated@@655) ($generated@@656 $generated@@655)) (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@90) (=> (and (not (= $generated@@669 $generated@@157)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@653 $generated@@669) $generated@@60))) (= ($generated@@101 $generated@@655 $generated@@669) ($generated@@101 $generated@@653 $generated@@669))))
 :pattern ( ($generated@@101 $generated@@655 $generated@@669))
))) (and ($generated@@152 $generated@@653 $generated@@655) (= $generated@@657 $generated@@314))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@657 $generated@@157))) (=> (not (= $generated@@657 $generated@@157)) (=> (and (and (and (and (and ($generated@@280 $generated@@658) ($generated@@656 $generated@@658)) (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@90) (=> (and (not (= $generated@@670 $generated@@157)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@655 $generated@@670) $generated@@60))) (= ($generated@@101 $generated@@658 $generated@@670) ($generated@@101 $generated@@655 $generated@@670))))
 :pattern ( ($generated@@101 $generated@@658 $generated@@670))
))) (and ($generated@@152 $generated@@655 $generated@@658) (= $generated@@659 ($generated@@0 ($generated@@276 ($generated@@11 true)))))) (and (and (not (= $generated@@660 $generated@@157)) (and ($generated@@91 $generated@@660 $generated@@247) ($generated@@95 $generated@@660 $generated@@247 $generated@@653))) (and ($generated@@280 $generated@@661) ($generated@@656 $generated@@661)))) (and (and (and (not (= $generated@@662 $generated@@157)) (and ($generated@@91 $generated@@662 $generated@@247) ($generated@@95 $generated@@662 $generated@@247 $generated@@661))) (not ($generated@@0 ($generated@@103 ($generated@@101 $generated@@658 $generated@@662) $generated@@60)))) (and (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@90) (=> (and (not (= $generated@@671 $generated@@157)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@658 $generated@@671) $generated@@60))) (= ($generated@@101 $generated@@661 $generated@@671) ($generated@@101 $generated@@658 $generated@@671))))
 :pattern ( ($generated@@101 $generated@@661 $generated@@671))
)) ($generated@@152 $generated@@658 $generated@@661)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= $generated@@662 $generated@@157))) (=> (not (= $generated@@662 $generated@@157)) (=> (= $generated@@663 ($generated@@103 ($generated@@101 $generated@@661 $generated@@662) $generated@@258)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@663 $generated@@157))) (=> (not (= $generated@@663 $generated@@157)) (=> (and (and ($generated@@280 $generated@@664) ($generated@@656 $generated@@664)) (and (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@90) (=> (and (not (= $generated@@672 $generated@@157)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@661 $generated@@672) $generated@@60))) (= ($generated@@101 $generated@@664 $generated@@672) ($generated@@101 $generated@@661 $generated@@672))))
 :pattern ( ($generated@@101 $generated@@664 $generated@@672))
)) ($generated@@152 $generated@@661 $generated@@664))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@662 $generated@@157))) (=> (not (= $generated@@662 $generated@@157)) (=> (and (= $generated@@665 ($generated@@89 $generated@@662)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@665 $generated@@157))))))))))))))))))))))
(let (($generated@@673  (=> (and ($generated@@280 $generated@@653) ($generated@@656 $generated@@653)) (=> (and (and (=> $generated@@666 (and ($generated@@91 $generated@@667 $generated@@247) ($generated@@95 $generated@@667 $generated@@247 $generated@@653))) true) (and (= 2 $generated@@88) (= (ControlFlow 0 10) 2))) $generated@@668))))
$generated@@673)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@133 (T@T T@T) T@T)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@187 (Int) Int)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 (Int) Int)
(declare-fun $generated@@195 (Int) Bool)
(declare-fun $generated@@197 (T@T) T@U)
(declare-fun $generated@@198 (T@U) Int)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@205 (T@U T@U T@U) Bool)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@207 () T@T)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@221 (T@T T@T) T@U)
(declare-fun $generated@@222 (T@T T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@T T@T) T@U)
(declare-fun $generated@@240 (T@T T@T) T@T)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@242 (T@T) T@T)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (T@U T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@U Int) T@U)
(declare-fun $generated@@340 (T@U) Int)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@381 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and (= (type $generated@@128) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@129) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@127 $generated@@128 $generated@@129)) (forall (($generated@@130 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@128 $generated@@130) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60))
)))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@133 $generated@@137 $generated@@138)) 12)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@134 ($generated@@133 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@133 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@135 ($generated@@133 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@133 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (let (($generated@@146 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@131 $generated@@143 $generated@@144 $generated@@145)) $generated@@146))
 :pattern ( ($generated@@131 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 (type $generated@@150)))
(let (($generated@@152 (type $generated@@148)))
(= (type ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@150)) ($generated@@133 $generated@@152 $generated@@151))))
 :pattern ( ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@150))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@135 (type $generated@@153))))
 (=> (= (type $generated@@156) $generated@@157) (= ($generated@@131 ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@154 $generated@@155) $generated@@156)))
 :weight 0
))) (and (and (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@131 ($generated@@136 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@131 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)) (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@131 ($generated@@136 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@131 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or true (= ($generated@@131 ($generated@@136 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@131 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ) (! (= (type ($generated@@132 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@133 $generated@@72 $generated@@4))
 :pattern ( ($generated@@132 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@64 (type $generated@@185))))
 (=> (and (and (and (and (= (type $generated@@180) $generated@@72) (= (type $generated@@181) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@182) ($generated@@63 $generated@@4))) (= (type $generated@@184) $generated@@72)) (= (type $generated@@185) ($generated@@63 $generated@@186))) (= ($generated@@0 ($generated@@131 ($generated@@132 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (not (= $generated@@184 $generated@@180)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@181 $generated@@184) $generated@@182))) $generated@@183))))
 :pattern ( ($generated@@131 ($generated@@132 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 Int) ) (! (= ($generated@@187 $generated@@188) $generated@@188)
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(= (type ($generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@189 $generated@@192) $generated@@192)
 :pattern ( ($generated@@189 $generated@@192))
)))
(assert  (=> (<= 1 $generated@@193) (forall (($generated@@196 Int) ) (!  (=> (or ($generated@@195 $generated@@196) (not (= 1 $generated@@193))) true)
 :pattern ( ($generated@@194 $generated@@196))
))))
(assert  (and (and (forall (($generated@@201 T@T) ) (= ($generated@@1 ($generated@@199 $generated@@201)) 13)) (forall (($generated@@202 T@T) ) (! (= ($generated@@200 ($generated@@199 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@199 $generated@@202))
))) (forall (($generated@@203 T@T) ) (! (= (type ($generated@@197 $generated@@203)) ($generated@@199 $generated@@203))
 :pattern ( ($generated@@197 $generated@@203))
))))
(assert (forall (($generated@@204 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@204)) 0)
 :pattern ( ($generated@@197 $generated@@204))
)))
(assert  (and (= ($generated@@1 $generated@@207) 14) (forall (($generated@@208 T@U) ) (! (= (type ($generated@@206 $generated@@208)) $generated@@207)
 :pattern ( ($generated@@206 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@61) (= (type $generated@@211) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@205 ($generated@@206 $generated@@209) $generated@@210 $generated@@211) ($generated@@69 $generated@@209 $generated@@210 $generated@@211)))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@209) $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@212) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@213) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@214) $generated@@207)) (= (type $generated@@215) $generated@@61)) ($generated@@127 $generated@@212 $generated@@213)) ($generated@@205 $generated@@214 $generated@@215 $generated@@212)) ($generated@@205 $generated@@214 $generated@@215 $generated@@213))
 :pattern ( ($generated@@127 $generated@@212 $generated@@213) ($generated@@205 $generated@@214 $generated@@215 $generated@@212))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@216) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@217) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@219) $generated@@61)) ($generated@@127 $generated@@216 $generated@@217)) ($generated@@69 $generated@@218 $generated@@219 $generated@@216)) ($generated@@69 $generated@@218 $generated@@219 $generated@@217))
 :pattern ( ($generated@@127 $generated@@216 $generated@@217) ($generated@@69 $generated@@218 $generated@@219 $generated@@216))
)))
(assert  (and (and (and (and (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@1 ($generated@@222 $generated@@225 $generated@@226)) 15)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@223 ($generated@@222 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@222 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@224 ($generated@@222 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@222 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@223 (type $generated@@231))))
(= (type ($generated@@220 $generated@@231)) ($generated@@71 $generated@@232 $generated@@4)))
 :pattern ( ($generated@@220 $generated@@231))
))) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= (type ($generated@@221 $generated@@233 $generated@@234)) ($generated@@222 $generated@@233 $generated@@234))
 :pattern ( ($generated@@221 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@T) ) (! (let (($generated@@237 (type $generated@@235)))
 (not ($generated@@0 ($generated@@76 ($generated@@220 ($generated@@221 $generated@@237 $generated@@236)) $generated@@235))))
 :pattern ( (let (($generated@@237 (type $generated@@235)))
($generated@@76 ($generated@@220 ($generated@@221 $generated@@237 $generated@@236)) $generated@@235)))
)))
(assert  (and (and (and (and (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (= ($generated@@1 ($generated@@240 $generated@@243 $generated@@244)) 16)) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@241 ($generated@@240 $generated@@245 $generated@@246)) $generated@@245)
 :pattern ( ($generated@@240 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (! (= ($generated@@242 ($generated@@240 $generated@@247 $generated@@248)) $generated@@248)
 :pattern ( ($generated@@240 $generated@@247 $generated@@248))
))) (forall (($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@241 (type $generated@@249))))
(= (type ($generated@@238 $generated@@249)) ($generated@@71 $generated@@250 $generated@@4)))
 :pattern ( ($generated@@238 $generated@@249))
))) (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (! (= (type ($generated@@239 $generated@@251 $generated@@252)) ($generated@@240 $generated@@251 $generated@@252))
 :pattern ( ($generated@@239 $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@T) ) (! (let (($generated@@255 (type $generated@@253)))
 (not ($generated@@0 ($generated@@76 ($generated@@238 ($generated@@239 $generated@@255 $generated@@254)) $generated@@253))))
 :pattern ( (let (($generated@@255 (type $generated@@253)))
($generated@@76 ($generated@@238 ($generated@@239 $generated@@255 $generated@@254)) $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@224 (type $generated@@256))))
(let (($generated@@258 ($generated@@223 (type $generated@@256))))
 (=> (= (type $generated@@256) ($generated@@222 $generated@@258 $generated@@257)) (or (= $generated@@256 ($generated@@221 $generated@@258 $generated@@257)) (exists (($generated@@259 T@U) ) (!  (and (= (type $generated@@259) $generated@@258) ($generated@@0 ($generated@@76 ($generated@@220 $generated@@256) $generated@@259)))
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
))))))
 :pattern ( ($generated@@220 $generated@@256))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@242 (type $generated@@260))))
(let (($generated@@262 ($generated@@241 (type $generated@@260))))
 (=> (= (type $generated@@260) ($generated@@240 $generated@@262 $generated@@261)) (or (= $generated@@260 ($generated@@239 $generated@@262 $generated@@261)) (exists (($generated@@263 T@U) ) (!  (and (= (type $generated@@263) $generated@@262) ($generated@@0 ($generated@@76 ($generated@@238 $generated@@260) $generated@@263)))
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
))))))
 :pattern ( ($generated@@238 $generated@@260))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) ($generated@@71 $generated@@207 $generated@@4)) (= (type $generated@@267) $generated@@61)) (= (type $generated@@268) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@207) ($generated@@0 ($generated@@76 $generated@@266 $generated@@269))) ($generated@@205 $generated@@269 $generated@@267 $generated@@268))
 :pattern ( ($generated@@76 $generated@@266 $generated@@269))
))))
 :pattern ( ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@61)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@272) ($generated@@71 $generated@@207 $generated@@4)) (= (type $generated@@273) $generated@@61)) (= (type $generated@@274) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@272 ($generated@@270 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@207) ($generated@@0 ($generated@@76 $generated@@272 $generated@@275))) ($generated@@205 $generated@@275 $generated@@273 $generated@@274))
 :pattern ( ($generated@@76 $generated@@272 $generated@@275))
))))
 :pattern ( ($generated@@69 $generated@@272 ($generated@@270 $generated@@273) $generated@@274))
)))
(assert  (and (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@224 (type $generated@@280))))
(let (($generated@@282 ($generated@@223 (type $generated@@280))))
(= (type ($generated@@277 $generated@@280)) ($generated@@71 $generated@@282 $generated@@281))))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) ($generated@@222 $generated@@207 $generated@@207)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@207) ($generated@@0 ($generated@@76 ($generated@@220 $generated@@283) $generated@@287))) (and ($generated@@205 ($generated@@76 ($generated@@277 $generated@@283) $generated@@287) $generated@@285 $generated@@286) ($generated@@205 $generated@@287 $generated@@284 $generated@@286)))
 :pattern ( ($generated@@76 ($generated@@277 $generated@@283) $generated@@287))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@283) $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286))
)))
(assert  (and (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (= (type ($generated@@288 $generated@@290 $generated@@291)) $generated@@61)
 :pattern ( ($generated@@288 $generated@@290 $generated@@291))
)) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@242 (type $generated@@292))))
(let (($generated@@294 ($generated@@241 (type $generated@@292))))
(= (type ($generated@@289 $generated@@292)) ($generated@@71 $generated@@294 $generated@@293))))
 :pattern ( ($generated@@289 $generated@@292))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (= (type $generated@@295) ($generated@@240 $generated@@207 $generated@@207)) (= (type $generated@@296) $generated@@61)) (= (type $generated@@297) $generated@@61)) (= (type $generated@@298) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@295 ($generated@@288 $generated@@296 $generated@@297) $generated@@298) (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@207) ($generated@@0 ($generated@@76 ($generated@@238 $generated@@295) $generated@@299))) (and ($generated@@205 ($generated@@76 ($generated@@289 $generated@@295) $generated@@299) $generated@@297 $generated@@298) ($generated@@205 $generated@@299 $generated@@296 $generated@@298)))
 :pattern ( ($generated@@76 ($generated@@289 $generated@@295) $generated@@299))
 :pattern ( ($generated@@76 ($generated@@238 $generated@@295) $generated@@299))
))))
 :pattern ( ($generated@@69 $generated@@295 ($generated@@288 $generated@@296 $generated@@297) $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@300) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@302) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@300 $generated@@302))) (and ($generated@@127 $generated@@300 $generated@@301) ($generated@@127 $generated@@301 $generated@@302))) ($generated@@127 $generated@@300 $generated@@302))
 :pattern ( ($generated@@127 $generated@@300 $generated@@301) ($generated@@127 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@304 T@T) ) (! (= (type ($generated@@303 $generated@@304)) ($generated@@71 $generated@@304 $generated@@4))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@242 (type $generated@@305))))
(let (($generated@@307 ($generated@@241 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@240 $generated@@307 $generated@@306)) (= (= $generated@@305 ($generated@@239 $generated@@307 $generated@@306)) (= ($generated@@238 $generated@@305) ($generated@@303 $generated@@307))))))
 :pattern ( ($generated@@238 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@200 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@199 $generated@@309)) (<= 0 ($generated@@198 $generated@@308))))
 :pattern ( ($generated@@198 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@61)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@61) (= (type $generated@@313) $generated@@61)) (= ($generated@@310 ($generated@@276 $generated@@312 $generated@@313)) $generated@@312))
 :pattern ( ($generated@@276 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@61)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@61) (= (type $generated@@317) $generated@@61)) (= ($generated@@314 ($generated@@276 $generated@@316 $generated@@317)) $generated@@317))
 :pattern ( ($generated@@276 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@61) (= (type $generated@@319) $generated@@61)) (= ($generated@@67 ($generated@@276 $generated@@318 $generated@@319)) $generated@@58))
 :pattern ( ($generated@@276 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@61)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@61) (= (type $generated@@323) $generated@@61)) (= ($generated@@320 ($generated@@288 $generated@@322 $generated@@323)) $generated@@322))
 :pattern ( ($generated@@288 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@61)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@61) (= (type $generated@@327) $generated@@61)) (= ($generated@@324 ($generated@@288 $generated@@326 $generated@@327)) $generated@@327))
 :pattern ( ($generated@@288 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@67 ($generated@@288 $generated@@328 $generated@@329)) $generated@@59))
 :pattern ( ($generated@@288 $generated@@328 $generated@@329))
)))
(assert  (and (forall (($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@330 $generated@@332))
)) (forall (($generated@@333 T@U) ($generated@@334 Int) ) (! (let (($generated@@335 ($generated@@200 (type $generated@@333))))
(= (type ($generated@@331 $generated@@333 $generated@@334)) $generated@@335))
 :pattern ( ($generated@@331 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) ($generated@@199 $generated@@207)) (= (type $generated@@337) $generated@@61)) (= (type $generated@@338) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@336 ($generated@@330 $generated@@337) $generated@@338) (forall (($generated@@339 Int) ) (!  (=> (and (<= 0 $generated@@339) (< $generated@@339 ($generated@@198 $generated@@336))) ($generated@@205 ($generated@@331 $generated@@336 $generated@@339) $generated@@337 $generated@@338))
 :pattern ( ($generated@@331 $generated@@336 $generated@@339))
))))
 :pattern ( ($generated@@69 $generated@@336 ($generated@@330 $generated@@337) $generated@@338))
)))
(assert (forall (($generated@@341 Int) ) (! (= ($generated@@340 ($generated@@70 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@70 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@342 ($generated@@264 $generated@@344)) $generated@@344))
 :pattern ( ($generated@@264 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@67 ($generated@@264 $generated@@345)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (= (type ($generated@@346 $generated@@347)) $generated@@61)
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@61) (= ($generated@@346 ($generated@@270 $generated@@348)) $generated@@348))
 :pattern ( ($generated@@270 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@61) (= ($generated@@67 ($generated@@270 $generated@@349)) $generated@@55))
 :pattern ( ($generated@@270 $generated@@349))
)))
(assert  (and (forall (($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@352)) $generated@@61)
 :pattern ( ($generated@@350 $generated@@352))
)) (forall (($generated@@353 T@U) ) (! (= (type ($generated@@351 $generated@@353)) $generated@@61)
 :pattern ( ($generated@@351 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@61) (= ($generated@@351 ($generated@@350 $generated@@354)) $generated@@354))
 :pattern ( ($generated@@350 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@61) (= ($generated@@67 ($generated@@350 $generated@@355)) $generated@@56))
 :pattern ( ($generated@@350 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (= (type ($generated@@356 $generated@@357)) $generated@@61)
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@61) (= ($generated@@356 ($generated@@330 $generated@@358)) $generated@@358))
 :pattern ( ($generated@@330 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@61) (= ($generated@@67 ($generated@@330 $generated@@359)) $generated@@57))
 :pattern ( ($generated@@330 $generated@@359))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated@@360 $generated@@364 ($generated@@206 $generated@@363)) $generated@@363))
 :pattern ( ($generated@@206 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (not ($generated@@0 ($generated@@76 ($generated@@303 $generated@@366) $generated@@365))))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@76 ($generated@@303 $generated@@366) $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@71 $generated@@207 $generated@@2)) (= (type $generated@@368) $generated@@61)) (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@367 ($generated@@350 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@207) (< 0 ($generated ($generated@@76 $generated@@367 $generated@@370)))) ($generated@@205 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@76 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@69 $generated@@367 ($generated@@350 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 Int) ) (! (= ($generated@@206 ($generated@@8 ($generated@@187 $generated@@371))) ($generated@@189 ($generated@@206 ($generated@@8 $generated@@371))))
 :pattern ( ($generated@@206 ($generated@@8 ($generated@@187 $generated@@371))))
)))
(assert (forall (($generated@@372 T@U) ) (! (= ($generated@@206 ($generated@@189 $generated@@372)) ($generated@@189 ($generated@@206 $generated@@372)))
 :pattern ( ($generated@@206 ($generated@@189 $generated@@372)))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@200 (type $generated@@373))))
 (=> (and (= (type $generated@@373) ($generated@@199 $generated@@374)) (= ($generated@@198 $generated@@373) 0)) (= $generated@@373 ($generated@@197 $generated@@374))))
 :pattern ( ($generated@@198 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@376) $generated@@2)) ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
 :pattern ( ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@378) $generated@@3)) ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
 :pattern ( ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) $generated@@4)) ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
 :pattern ( ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
)))
(assert (= ($generated@@1 $generated@@381) 17))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@381)) ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@385) $generated@@207)) ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
 :pattern ( ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 () Int)
(declare-fun $generated@@248 () Bool)
(declare-fun $generated@@249 () Bool)
(declare-fun $generated@@250 () Int)
(declare-fun $generated@@251 () Int)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@285 (T@T T@T) T@U)
(declare-fun $generated@@286 (T@T T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@387 (T@U T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@T) T@U)
(declare-fun $generated@@427 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert  (=> (<= 2 $generated@@247) (=> (or $generated@@248 (not (= 2 $generated@@247))) (and $generated@@249 (= $generated@@250 $generated@@251)))))
(assert  (=> (<= 2 $generated@@247) (=> (or $generated@@248 (not (= 2 $generated@@247))) (and $generated@@249 (= $generated@@250 $generated@@251)))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@64) (= (type $generated@@255) $generated@@64)) (= (type $generated@@256) $generated@@145)) (= (type $generated@@257) $generated@@145)) (= (type $generated@@258) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@252 $generated@@258)) (= ($generated@@74 ($generated@@223 $generated@@256 $generated@@257) ($generated@@135 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@256 $generated@@257) ($generated@@135 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@68)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@136) (= ($generated@@134 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@261))
)))
(assert  (=> (<= 1 $generated@@247) (=> (or $generated@@249 (not (= 1 $generated@@247))) (> $generated@@251 0))))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@136) ($generated@@134 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@145) (= (type $generated@@264) $generated@@145)) (= $generated@@262 ($generated@@223 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@134 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@145)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@64) (= (type $generated@@277) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@74 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@280 T@T) ) (! (= (type ($generated@@279 $generated@@280)) ($generated@@76 $generated@@280 $generated@@2))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@79 (type $generated@@281))))
 (=> (= (type $generated@@281) ($generated@@76 $generated@@282 $generated@@2)) (and (= (= ($generated@@278 $generated@@281) 0) (= $generated@@281 ($generated@@279 $generated@@282))) (=> (not (= ($generated@@278 $generated@@281) 0)) (exists (($generated@@283 T@U) ) (!  (and (= (type $generated@@283) $generated@@282) (< 0 ($generated ($generated@@81 $generated@@281 $generated@@283))))
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
))))))
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert  (=> (<= 2 $generated@@247) (=> (or $generated@@248 (not (= 2 $generated@@247))) ($generated@@0 ($generated@@243 ($generated@@11 (> $generated@@250 0)))))))
(assert  (and (and (and (and (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@289 $generated@@290)) 18)) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@291 $generated@@292)) $generated@@291)
 :pattern ( ($generated@@286 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@286 $generated@@293 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@286 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@287 (type $generated@@295))))
(= (type ($generated@@284 $generated@@295)) ($generated@@76 $generated@@296 $generated@@4)))
 :pattern ( ($generated@@284 $generated@@295))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= (type ($generated@@285 $generated@@297 $generated@@298)) ($generated@@286 $generated@@297 $generated@@298))
 :pattern ( ($generated@@285 $generated@@297 $generated@@298))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@T) ) (! (let (($generated@@301 (type $generated@@299)))
 (not ($generated@@0 ($generated@@81 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299))))
 :pattern ( (let (($generated@@301 (type $generated@@299)))
($generated@@81 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299)))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 19)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@79 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@76 $generated@@321 $generated@@2)) (= ($generated@@151 $generated@@320) (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@321) (and (<= 0 ($generated ($generated@@81 $generated@@320 $generated@@322))) (<= ($generated ($generated@@81 $generated@@320 $generated@@322)) ($generated@@278 $generated@@320))))
 :pattern ( ($generated@@81 $generated@@320 $generated@@322))
)))))
 :pattern ( ($generated@@151 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@288 (type $generated@@323))))
(let (($generated@@325 ($generated@@287 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@286 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@285 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@284 $generated@@323))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@288 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328)) ($generated@@76 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@288 (type $generated@@330))))
(let (($generated@@332 ($generated@@287 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@286 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@285 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@331) ($generated@@0 ($generated@@81 ($generated@@327 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@306 (type $generated@@334))))
(let (($generated@@336 ($generated@@305 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@304 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@303 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@302 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@306 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@76 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@306 (type $generated@@341))))
(let (($generated@@343 ($generated@@305 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@304 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@303 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@81 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@346) $generated@@64)) (= ($generated@@132 $generated@@345 ($generated@@150 $generated@@346)) (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@345 $generated@@347)))) ($generated@@224 $generated@@347 $generated@@346))
 :pattern ( ($generated@@81 $generated@@345 $generated@@347))
))))
 :pattern ( ($generated@@132 $generated@@345 ($generated@@150 $generated@@346)))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@349) $generated@@64)) (= (type $generated@@350) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@348 ($generated@@233 $generated@@349) $generated@@350) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@145) ($generated@@0 ($generated@@81 $generated@@348 $generated@@351))) ($generated@@253 $generated@@351 $generated@@349 $generated@@350))
 :pattern ( ($generated@@81 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@74 $generated@@348 ($generated@@233 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@353) $generated@@64)) (= (type $generated@@354) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@352 ($generated@@238 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@145) ($generated@@0 ($generated@@81 $generated@@352 $generated@@355))) ($generated@@253 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@81 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@74 $generated@@352 ($generated@@238 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 (type $generated@@356)))
(= ($generated ($generated@@81 ($generated@@279 $generated@@357) $generated@@356)) 0))
 :pattern ( (let (($generated@@357 (type $generated@@356)))
($generated@@81 ($generated@@279 $generated@@357) $generated@@356)))
)))
(assert  (and (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@358 $generated@@361)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@358 $generated@@361))
)) (forall (($generated@@362 T@T) ($generated@@363 T@U) ) (! (= (type ($generated@@359 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@359 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@288 (type $generated@@364))))
(let (($generated@@366 ($generated@@287 (type $generated@@364))))
(= (type ($generated@@360 $generated@@364)) ($generated@@76 $generated@@366 $generated@@365))))
 :pattern ( ($generated@@360 $generated@@364))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@286 $generated@@145 $generated@@145)) (= (type $generated@@368) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@358 $generated@@367) $generated@@368))  (and ($generated@@0 ($generated@@81 ($generated@@284 $generated@@367) ($generated@@143 ($generated@@359 $generated@@136 $generated@@368)))) (= ($generated@@81 ($generated@@360 $generated@@367) ($generated@@143 ($generated@@359 $generated@@136 $generated@@368))) ($generated@@144 ($generated@@359 $generated@@136 $generated@@368))))))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@367) $generated@@368))
)))
(assert  (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@369 $generated@@371))
)) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@306 (type $generated@@372))))
(let (($generated@@374 ($generated@@305 (type $generated@@372))))
(= (type ($generated@@370 $generated@@372)) ($generated@@76 $generated@@374 $generated@@373))))
 :pattern ( ($generated@@370 $generated@@372))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@304 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@369 $generated@@375) $generated@@376))  (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@375) ($generated@@143 ($generated@@359 $generated@@136 $generated@@376)))) (= ($generated@@81 ($generated@@370 $generated@@375) ($generated@@143 ($generated@@359 $generated@@136 $generated@@376))) ($generated@@144 ($generated@@359 $generated@@136 $generated@@376))))))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(let (($generated@@380 ($generated@@287 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@286 $generated@@380 $generated@@379)) (= ($generated@@0 ($generated@@81 ($generated@@327 $generated@@377) $generated@@378)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) (and ($generated@@0 ($generated@@81 ($generated@@284 $generated@@377) $generated@@381)) (= $generated@@378 ($generated@@81 ($generated@@360 $generated@@377) $generated@@381))))
 :pattern ( ($generated@@81 ($generated@@284 $generated@@377) $generated@@381))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@377) $generated@@381))
))))))
 :pattern ( ($generated@@81 ($generated@@327 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@305 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@304 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@81 ($generated@@338 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@81 ($generated@@370 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@382) $generated@@386))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@81 ($generated@@338 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@388 $generated@@389)) $generated@@64)
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (= (type $generated@@390) ($generated@@286 $generated@@145 $generated@@145)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@390) $generated@@394))) (and ($generated@@253 ($generated@@81 ($generated@@360 $generated@@390) $generated@@394) $generated@@392 $generated@@393) ($generated@@253 $generated@@394 $generated@@391 $generated@@393)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@284 $generated@@390) $generated@@394))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@64)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@304 $generated@@145 $generated@@145)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@398) $generated@@402))) (and ($generated@@253 ($generated@@81 ($generated@@370 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@253 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@404 T@T) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@76 $generated@@404 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@306 (type $generated@@405))))
(let (($generated@@407 ($generated@@305 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@304 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@303 $generated@@407 $generated@@406)) (= ($generated@@302 $generated@@405) ($generated@@403 $generated@@407))))))
 :pattern ( ($generated@@302 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@306 (type $generated@@408))))
(let (($generated@@410 ($generated@@305 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@304 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@303 $generated@@410 $generated@@409)) (= ($generated@@338 $generated@@408) ($generated@@403 $generated@@409))))))
 :pattern ( ($generated@@338 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@306 (type $generated@@411))))
(let (($generated@@413 ($generated@@305 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@304 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@303 $generated@@413 $generated@@412)) (= ($generated@@369 $generated@@411) ($generated@@403 $generated@@145))))))
 :pattern ( ($generated@@369 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@288 (type $generated@@414))))
(let (($generated@@416 ($generated@@287 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@286 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@285 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@145) (= (type $generated@@418) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@358 $generated@@414) ($generated@@273 ($generated@@223 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@358 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@306 (type $generated@@419))))
(let (($generated@@421 ($generated@@305 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@304 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@303 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@145) (= (type $generated@@423) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@369 $generated@@419) ($generated@@273 ($generated@@223 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@369 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@145) ($generated@@224 $generated@@424 $generated@@46)) (and (= ($generated@@273 ($generated@@359 $generated@@2 $generated@@424)) $generated@@424) ($generated@@132 ($generated@@359 $generated@@2 $generated@@424) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@424 $generated@@46))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@224 $generated@@425 $generated@@47)) (and (= ($generated@@273 ($generated@@359 $generated@@3 $generated@@425)) $generated@@425) ($generated@@132 ($generated@@359 $generated@@3 $generated@@425) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@425 $generated@@47))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@145) ($generated@@224 $generated@@426 $generated@@44)) (and (= ($generated@@273 ($generated@@359 $generated@@4 $generated@@426)) $generated@@426) ($generated@@132 ($generated@@359 $generated@@4 $generated@@426) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@426 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@427) 20))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@145) ($generated@@224 $generated@@428 $generated@@45)) (and (= ($generated@@273 ($generated@@359 $generated@@427 $generated@@428)) $generated@@428) ($generated@@132 ($generated@@359 $generated@@427 $generated@@428) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@428 $generated@@45))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@64) (= ($generated@@224 ($generated@@273 $generated@@429) $generated@@430) ($generated@@132 $generated@@429 $generated@@430)))
 :pattern ( ($generated@@224 ($generated@@273 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@79 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@76 $generated@@432 $generated@@2)) (<= 0 ($generated@@278 $generated@@431))))
 :pattern ( ($generated@@278 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@268 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@267 $generated@@434)) (<= 0 ($generated@@266 $generated@@433))))
 :pattern ( ($generated@@266 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@387 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@387 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@387 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@387 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@72 ($generated@@387 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@387 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@395 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@395 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@395 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@395 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@395 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@395 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@145) (= (type $generated@@456) $generated@@145)) (= ($generated@@259 ($generated@@223 $generated@@455 $generated@@456)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@135 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@135 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@135 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@135 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@145) (= (type $generated@@466) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@223 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@145) (= (type $generated@@468) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@223 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@268 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@267 $generated@@145)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@266 $generated@@475))) ($generated@@253 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@75 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@75 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@233 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@233 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@238 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@238 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@150 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@150 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated@@359 $generated@@498 ($generated@@273 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@273 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@286 $generated@@145 $generated@@145)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) (= ($generated@@132 $generated@@499 ($generated@@387 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@499) $generated@@502))) (and ($generated@@224 ($generated@@81 ($generated@@360 $generated@@499) $generated@@502) $generated@@501) ($generated@@224 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@499) $generated@@502))
 :pattern ( ($generated@@81 ($generated@@284 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@132 $generated@@499 ($generated@@387 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@304 $generated@@145 $generated@@145)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@132 $generated@@503 ($generated@@395 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@503) $generated@@506))) (and ($generated@@224 ($generated@@81 ($generated@@370 $generated@@503) $generated@@506) $generated@@505) ($generated@@224 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@132 $generated@@503 ($generated@@395 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@145) (= (type $generated@@510) $generated@@145)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@223 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@223 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@145) (= (type $generated@@512) $generated@@145)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@223 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@223 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@224 $generated@@513 ($generated@@387 $generated@@514 $generated@@515))) (and (= ($generated@@273 ($generated@@359 ($generated@@286 $generated@@145 $generated@@145) $generated@@513)) $generated@@513) ($generated@@132 ($generated@@359 ($generated@@286 $generated@@145 $generated@@145) $generated@@513) ($generated@@387 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@224 $generated@@513 ($generated@@387 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@145) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) ($generated@@224 $generated@@516 ($generated@@395 $generated@@517 $generated@@518))) (and (= ($generated@@273 ($generated@@359 ($generated@@304 $generated@@145 $generated@@145) $generated@@516)) $generated@@516) ($generated@@132 ($generated@@359 ($generated@@304 $generated@@145 $generated@@145) $generated@@516) ($generated@@395 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@224 $generated@@516 ($generated@@395 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@145)) ($generated@@224 $generated@@521 ($generated@@135 $generated@@519 $generated@@520))) (and (= ($generated@@273 ($generated@@359 $generated@@136 $generated@@521)) $generated@@521) ($generated@@132 ($generated@@359 $generated@@136 $generated@@521) ($generated@@135 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@224 $generated@@521 ($generated@@135 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@81 ($generated@@403 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@81 ($generated@@403 $generated@@523) $generated@@522)))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@64) (= (type $generated@@527) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@526 $generated@@527)) $generated@@62) (= ($generated@@524 ($generated@@135 $generated@@526 $generated@@527)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@136) (= ($generated@@507 ($generated@@273 $generated@@528)) ($generated@@508 $generated@@528)))
 :pattern ( ($generated@@507 ($generated@@273 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@145) ($generated@@224 $generated@@529 ($generated@@75 0))) (and (= ($generated@@273 ($generated@@359 $generated@@2 $generated@@529)) $generated@@529) ($generated@@132 ($generated@@359 ($generated@@76 $generated@@145 $generated@@4) $generated@@529) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@529 ($generated@@75 0)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) ($generated@@224 $generated@@530 ($generated@@233 $generated@@531))) (and (= ($generated@@273 ($generated@@359 ($generated@@76 $generated@@145 $generated@@4) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@359 ($generated@@76 $generated@@145 $generated@@4) $generated@@530) ($generated@@233 $generated@@531))))
 :pattern ( ($generated@@224 $generated@@530 ($generated@@233 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) ($generated@@224 $generated@@532 ($generated@@238 $generated@@533))) (and (= ($generated@@273 ($generated@@359 ($generated@@76 $generated@@145 $generated@@4) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@359 ($generated@@76 $generated@@145 $generated@@4) $generated@@532) ($generated@@238 $generated@@533))))
 :pattern ( ($generated@@224 $generated@@532 ($generated@@238 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) ($generated@@224 $generated@@534 ($generated@@150 $generated@@535))) (and (= ($generated@@273 ($generated@@359 ($generated@@76 $generated@@145 $generated@@2) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@359 ($generated@@76 $generated@@145 $generated@@2) $generated@@534) ($generated@@150 $generated@@535))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@150 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@145) (= (type $generated@@537) $generated@@64)) ($generated@@224 $generated@@536 ($generated@@469 $generated@@537))) (and (= ($generated@@273 ($generated@@359 ($generated@@267 $generated@@145) $generated@@536)) $generated@@536) ($generated@@132 ($generated@@359 ($generated@@267 $generated@@145) $generated@@536) ($generated@@469 $generated@@537))))
 :pattern ( ($generated@@224 $generated@@536 ($generated@@469 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@538 ($generated@@150 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@538 $generated@@541)))) ($generated@@253 $generated@@541 $generated@@539 $generated@@540))
 :pattern ( ($generated@@81 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@150 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@136) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@252 $generated@@544) (and ($generated@@134 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@64) ($generated@@74 $generated@@542 ($generated@@135 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@74 $generated@@542 ($generated@@135 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@253 ($generated@@143 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@253 ($generated@@143 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@136) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@252 $generated@@548) (and ($generated@@134 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@64) ($generated@@74 $generated@@546 ($generated@@135 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@135 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@253 ($generated@@144 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@253 ($generated@@144 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@145)) (= ($generated@@223 ($generated@@243 $generated@@550) ($generated@@243 $generated@@551)) ($generated@@243 ($generated@@223 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@223 ($generated@@243 $generated@@550) ($generated@@243 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= ($generated@@273 ($generated@@243 $generated@@552)) ($generated@@243 ($generated@@273 $generated@@552)))
 :pattern ( ($generated@@273 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@268 (type $generated@@553))))
 (=> (and (= (type $generated@@553) ($generated@@267 $generated@@554)) (= ($generated@@266 $generated@@553) 0)) (= $generated@@553 ($generated@@265 $generated@@554))))
 :pattern ( ($generated@@266 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@556)))
 (=> (and (and (= (type $generated@@555) ($generated@@76 $generated@@558 $generated@@2)) (= (type $generated@@557) $generated@@2)) (<= 0 ($generated $generated@@557))) (= ($generated@@278 ($generated@@82 $generated@@555 $generated@@556 $generated@@557)) (+ (- ($generated@@278 $generated@@555) ($generated ($generated@@81 $generated@@555 $generated@@556))) ($generated $generated@@557)))))
 :pattern ( ($generated@@278 ($generated@@82 $generated@@555 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@560) $generated@@2)) ($generated@@74 $generated@@560 $generated@@46 $generated@@559))
 :pattern ( ($generated@@74 $generated@@560 $generated@@46 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@562) $generated@@3)) ($generated@@74 $generated@@562 $generated@@47 $generated@@561))
 :pattern ( ($generated@@74 $generated@@562 $generated@@47 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@564) $generated@@4)) ($generated@@74 $generated@@564 $generated@@44 $generated@@563))
 :pattern ( ($generated@@74 $generated@@564 $generated@@44 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@566) $generated@@427)) ($generated@@74 $generated@@566 $generated@@45 $generated@@565))
 :pattern ( ($generated@@74 $generated@@566 $generated@@45 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@145)) ($generated@@74 $generated@@568 $generated@@48 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@48 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@267 $generated@@145)) (= (type $generated@@570) $generated@@64)) (= ($generated@@132 $generated@@569 ($generated@@469 $generated@@570)) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@266 $generated@@569))) ($generated@@224 ($generated@@470 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@470 $generated@@569 $generated@@571))
))))
 :pattern ( ($generated@@132 $generated@@569 ($generated@@469 $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 Int) ) (!  (=> (= (type $generated@@573) ($generated@@267 $generated@@145)) (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@266 $generated@@573))) (< ($generated@@508 ($generated@@359 $generated@@136 ($generated@@470 $generated@@573 $generated@@574))) ($generated@@572 $generated@@573))))
 :pattern ( ($generated@@508 ($generated@@359 $generated@@136 ($generated@@470 $generated@@573 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@286 $generated@@145 $generated@@145)) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) $generated@@64)) ($generated@@132 $generated@@575 ($generated@@387 $generated@@576 $generated@@577))) (and (and ($generated@@132 ($generated@@284 $generated@@575) ($generated@@233 $generated@@576)) ($generated@@132 ($generated@@327 $generated@@575) ($generated@@233 $generated@@577))) ($generated@@132 ($generated@@358 $generated@@575) ($generated@@233 ($generated@@135 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@132 $generated@@575 ($generated@@387 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@304 $generated@@145 $generated@@145)) (= (type $generated@@579) $generated@@64)) (= (type $generated@@580) $generated@@64)) ($generated@@132 $generated@@578 ($generated@@395 $generated@@579 $generated@@580))) (and (and ($generated@@132 ($generated@@302 $generated@@578) ($generated@@238 $generated@@579)) ($generated@@132 ($generated@@338 $generated@@578) ($generated@@238 $generated@@580))) ($generated@@132 ($generated@@369 $generated@@578) ($generated@@238 ($generated@@135 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@132 $generated@@578 ($generated@@395 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@2) ($generated@@132 $generated@@581 $generated@@46))
 :pattern ( ($generated@@132 $generated@@581 $generated@@46))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@3) ($generated@@132 $generated@@582 $generated@@47))
 :pattern ( ($generated@@132 $generated@@582 $generated@@47))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@4) ($generated@@132 $generated@@583 $generated@@44))
 :pattern ( ($generated@@132 $generated@@583 $generated@@44))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@427) ($generated@@132 $generated@@584 $generated@@45))
 :pattern ( ($generated@@132 $generated@@584 $generated@@45))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@145) ($generated@@132 $generated@@585 $generated@@48))
 :pattern ( ($generated@@132 $generated@@585 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@586) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@587) $generated@@77)) (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@589) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@591  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@0 ($generated@@243 ($generated@@11 (> $generated@@250 0)))))))
(let (($generated@@592  (=> (and (= $generated@@586 ($generated@@211 $generated@@587 $generated@@588 $generated@@60 false)) $generated@@249) (=> (and (and (= $generated@@250 $generated@@251) $generated@@249) (and ($generated@@132 ($generated@@8 $generated@@250) $generated@@46) (= (ControlFlow 0 5) 4))) $generated@@591))))
(let (($generated@@593  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@594  (=> (= $generated@@589 ($generated@@156 $generated@@587 $generated@@588 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@593) (=> (= (ControlFlow 0 6) 5) $generated@@592)))))
(let (($generated@@595  (=> (and (and ($generated@@252 $generated@@588) ($generated@@590 $generated@@588)) (and (= 2 $generated@@247) (= (ControlFlow 0 7) 6))) $generated@@594)))
$generated@@595))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () Int)
(assert  (and (and (and (= (type $generated@@165) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@166) $generated@@46)) (= (type $generated@@167) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@173  (=> (= $generated@@165 ($generated@@107 $generated@@166 $generated@@167 $generated@@50 false)) (=> (and ($generated@@168 $generated@@169) ($generated@@170 $generated@@169)) (=> (and (and (> $generated@@171 0) (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@46) (=> (and (not (= $generated@@174 $generated@@166)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@167 $generated@@174) $generated@@50))) (= ($generated@@49 $generated@@169 $generated@@174) ($generated@@49 $generated@@167 $generated@@174))))
 :pattern ( ($generated@@49 $generated@@169 $generated@@174))
))) (and ($generated@@44 $generated@@167 $generated@@169) (= (ControlFlow 0 2) (- 0 1)))) (> $generated@@171 0))))))
(let (($generated@@175  (=> (and (and ($generated@@168 $generated@@167) ($generated@@170 $generated@@167)) (and (= 2 $generated@@172) (= (ControlFlow 0 3) 2))) $generated@@173)))
$generated@@175)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
