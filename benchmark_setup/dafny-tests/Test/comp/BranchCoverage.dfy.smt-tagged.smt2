(set-logic UFNIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@181  (=> (and (and (and (<= 100 $generated@@173) (<= 1000 $generated@@173)) (< $generated@@173 ($generated@@157 50))) (= (ControlFlow 0 7) (- 0 6))) false)))
(let (($generated@@182 true))
(let (($generated@@183 true))
(let (($generated@@184 true))
(let (($generated@@185  (=> (<= ($generated@@157 50) $generated@@173) (and (and (and (=> (= (ControlFlow 0 11) 3) $generated@@184) (=> (= (ControlFlow 0 11) 4) $generated@@183)) (=> (= (ControlFlow 0 11) 5) $generated@@182)) (=> (= (ControlFlow 0 11) 7) $generated@@181)))))
(let (($generated@@186  (=> (< $generated@@173 1000) (and (=> (= (ControlFlow 0 9) (- 0 10)) (< $generated@@173 1000000)) (=> (< $generated@@173 1000000) (and (and (and (=> (= (ControlFlow 0 9) 3) $generated@@184) (=> (= (ControlFlow 0 9) 4) $generated@@183)) (=> (= (ControlFlow 0 9) 5) $generated@@182)) (=> (= (ControlFlow 0 9) 7) $generated@@181)))))))
(let (($generated@@187  (=> (< $generated@@173 100) (and (and (and (=> (= (ControlFlow 0 8) 3) $generated@@184) (=> (= (ControlFlow 0 8) 4) $generated@@183)) (=> (= (ControlFlow 0 8) 5) $generated@@182)) (=> (= (ControlFlow 0 8) 7) $generated@@181)))))
(let (($generated@@188  (=> (and (and (and (<= 100 $generated@@173) (<= 1000 $generated@@173)) (< $generated@@173 ($generated@@157 50))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@189  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (and (=> (= (ControlFlow 0 12) 8) $generated@@187) (=> (= (ControlFlow 0 12) 9) $generated@@186)) (=> (= (ControlFlow 0 12) 11) $generated@@185)) (=> (= (ControlFlow 0 12) 2) $generated@@188)))))
(let (($generated@@190  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 13) 12))) $generated@@189)))
$generated@@190)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (Int Int) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 Int) ($generated@@533 Int) ) (! (= ($generated@@531 $generated@@532 $generated@@533) (mod $generated@@532 $generated@@533))
 :pattern ( ($generated@@531 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@71)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@66) (= (type $generated@@537) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@536 $generated@@537)) $generated@@63) (= ($generated@@534 ($generated@@144 $generated@@536 $generated@@537)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@538)) ($generated@@515 $generated@@538)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@154) ($generated@@221 $generated@@539 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@77 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@154) (= (type $generated@@541) $generated@@66)) ($generated@@221 $generated@@540 ($generated@@230 $generated@@541))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@540)) $generated@@540) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@540) ($generated@@230 $generated@@541))))
 :pattern ( ($generated@@221 $generated@@540 ($generated@@230 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@66)) ($generated@@221 $generated@@542 ($generated@@235 $generated@@543))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@542)) $generated@@542) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@542) ($generated@@235 $generated@@543))))
 :pattern ( ($generated@@221 $generated@@542 ($generated@@235 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@154) (= (type $generated@@545) $generated@@66)) ($generated@@221 $generated@@544 ($generated@@159 $generated@@545))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@544)) $generated@@544) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@544) ($generated@@159 $generated@@545))))
 :pattern ( ($generated@@221 $generated@@544 ($generated@@159 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@154) (= (type $generated@@547) $generated@@66)) ($generated@@221 $generated@@546 ($generated@@476 $generated@@547))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@546)) $generated@@546) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@546) ($generated@@476 $generated@@547))))
 :pattern ( ($generated@@221 $generated@@546 ($generated@@476 $generated@@547)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@534 $generated@@138) $generated@@64))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@548 ($generated@@159 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@548 $generated@@551)))) ($generated@@247 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@83 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@76 $generated@@548 ($generated@@159 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@554) (and ($generated@@143 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@66) ($generated@@76 $generated@@552 ($generated@@144 $generated@@553 $generated@@555) $generated@@554))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@144 $generated@@553 $generated@@555) $generated@@554))
))))) ($generated@@247 ($generated@@152 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@66)) (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@558) (and ($generated@@143 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@66) ($generated@@76 $generated@@556 ($generated@@144 $generated@@559 $generated@@557) $generated@@558))
 :pattern ( ($generated@@76 $generated@@556 ($generated@@144 $generated@@559 $generated@@557) $generated@@558))
))))) ($generated@@247 ($generated@@153 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@154) (= (type $generated@@561) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@560) ($generated@@242 $generated@@561)) ($generated@@242 ($generated@@220 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@560) ($generated@@242 $generated@@561)))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@562))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@562))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@563)) ($generated@@242 ($generated@@268 $generated@@563)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@262 (type $generated@@564))))
 (=> (and (= (type $generated@@564) ($generated@@261 $generated@@565)) (= ($generated@@260 $generated@@564) 0)) (= $generated@@564 ($generated@@259 $generated@@565))))
 :pattern ( ($generated@@260 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@567)))
 (=> (and (and (= (type $generated@@566) ($generated@@78 $generated@@569 $generated@@2)) (= (type $generated@@568) $generated@@2)) (<= 0 ($generated $generated@@568))) (= ($generated@@281 ($generated@@84 $generated@@566 $generated@@567 $generated@@568)) (+ (- ($generated@@281 $generated@@566) ($generated ($generated@@83 $generated@@566 $generated@@567))) ($generated $generated@@568)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@566 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) $generated@@2)) ($generated@@76 $generated@@571 $generated@@46 $generated@@570))
 :pattern ( ($generated@@76 $generated@@571 $generated@@46 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@3)) ($generated@@76 $generated@@573 $generated@@47 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@47 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@4)) ($generated@@76 $generated@@575 $generated@@44 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@44 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@577) $generated@@434)) ($generated@@76 $generated@@577 $generated@@45 $generated@@576))
 :pattern ( ($generated@@76 $generated@@577 $generated@@45 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@154)) ($generated@@76 $generated@@579 $generated@@48 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@48 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@261 $generated@@154)) (= (type $generated@@581) $generated@@66)) (= ($generated@@141 $generated@@580 ($generated@@476 $generated@@581)) (forall (($generated@@582 Int) ) (!  (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@580))) ($generated@@221 ($generated@@477 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@477 $generated@@580 $generated@@582))
))))
 :pattern ( ($generated@@141 $generated@@580 ($generated@@476 $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 Int) ) (!  (=> (= (type $generated@@584) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@260 $generated@@584))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@584 $generated@@585))) ($generated@@583 $generated@@584))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@584 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@391 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@287 $generated@@586) ($generated@@230 $generated@@587)) ($generated@@141 ($generated@@334 $generated@@586) ($generated@@230 $generated@@588))) ($generated@@141 ($generated@@365 $generated@@586) ($generated@@230 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@391 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@590) $generated@@66)) (= (type $generated@@591) $generated@@66)) ($generated@@141 $generated@@589 ($generated@@399 $generated@@590 $generated@@591))) (and (and ($generated@@141 ($generated@@305 $generated@@589) ($generated@@235 $generated@@590)) ($generated@@141 ($generated@@345 $generated@@589) ($generated@@235 $generated@@591))) ($generated@@141 ($generated@@373 $generated@@589) ($generated@@235 ($generated@@144 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@141 $generated@@589 ($generated@@399 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@2) ($generated@@141 $generated@@592 $generated@@46))
 :pattern ( ($generated@@141 $generated@@592 $generated@@46))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@3) ($generated@@141 $generated@@593 $generated@@47))
 :pattern ( ($generated@@141 $generated@@593 $generated@@47))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@4) ($generated@@141 $generated@@594 $generated@@44))
 :pattern ( ($generated@@141 $generated@@594 $generated@@44))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@434) ($generated@@141 $generated@@595 $generated@@45))
 :pattern ( ($generated@@141 $generated@@595 $generated@@45))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@154) ($generated@@141 $generated@@596 $generated@@48))
 :pattern ( ($generated@@141 $generated@@596 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Bool)
(declare-fun $generated@@603 () Bool)
(declare-fun $generated@@604 () Bool)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 (T@U) Bool)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(assert  (and (and (= (type $generated@@606) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@607) $generated@@79)) (= (type $generated@@608) ($generated@@166 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 39) (let (($generated@@617  (and (=> (= (ControlFlow 0 15) (- 0 16)) (or (<= 0 $generated@@597) (= $generated@@598 $generated@@597))) (=> (or (<= 0 $generated@@597) (= $generated@@598 $generated@@597)) (=> (= (ControlFlow 0 15) (- 0 14)) (< $generated@@598 $generated@@597))))))
(let (($generated@@618  (=> (not (= $generated@@597 ($generated@@240 0))) (and (=> (= (ControlFlow 0 23) (- 0 24)) ($generated@@141 ($generated@@8 (- $generated@@597 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (- $generated@@597 1)) $generated@@138) (=> (= $generated@@599 (- $generated@@597 1)) (=> (and (= $generated@@598 $generated@@599) (= (ControlFlow 0 23) 15)) $generated@@617)))))))
(let (($generated@@619  (=> (< 0 $generated@@597) (and (=> (= (ControlFlow 0 20) (- 0 21)) ($generated@@141 ($generated@@8 (- $generated@@597 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (- $generated@@597 1)) $generated@@138) (=> (= $generated@@600 (- $generated@@597 1)) (=> (and (= $generated@@598 $generated@@600) (= (ControlFlow 0 20) 15)) $generated@@617)))))))
(let (($generated@@620  (and (=> (= (ControlFlow 0 17) (- 0 19)) (not (= ($generated@@240 4) 0))) (=> (not (= ($generated@@240 4) 0)) (=> (= ($generated@@531 $generated@@597 ($generated@@240 4)) ($generated@@240 1)) (and (=> (= (ControlFlow 0 17) (- 0 18)) ($generated@@141 ($generated@@8 (- $generated@@597 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (- $generated@@597 1)) $generated@@138) (=> (= $generated@@601 (- $generated@@597 1)) (=> (and (= $generated@@598 $generated@@601) (= (ControlFlow 0 17) 15)) $generated@@617)))))))))
(let (($generated@@621 true))
(let (($generated@@622  (=> (and (= $generated@@597 ($generated@@240 0)) (= (ControlFlow 0 22) 11)) $generated@@621)))
(let (($generated@@623  (and (=> (= (ControlFlow 0 25) (- 0 26)) (not (= ($generated@@240 2) 0))) (=> (not (= ($generated@@240 2) 0)) (=> (= ($generated@@531 $generated@@597 ($generated@@240 2)) ($generated@@240 0)) (and (=> (= (ControlFlow 0 25) 22) $generated@@622) (=> (= (ControlFlow 0 25) 23) $generated@@618)))))))
(let (($generated@@624  (=> (and (and (and (not (= ($generated@@531 $generated@@597 ($generated@@240 2)) ($generated@@240 0))) (not (= ($generated@@531 $generated@@597 ($generated@@240 4)) ($generated@@240 1)))) (<= $generated@@597 0)) (= (ControlFlow 0 13) 11)) $generated@@621)))
(let (($generated@@625  (=> ($generated@@0 ($generated@@242 ($generated@@11 true))) (and (and (and (=> (= (ControlFlow 0 27) 25) $generated@@623) (=> (= (ControlFlow 0 27) 17) $generated@@620)) (=> (= (ControlFlow 0 27) 20) $generated@@619)) (=> (= (ControlFlow 0 27) 13) $generated@@624)))))
(let (($generated@@626  (=> (and (not ($generated@@0 ($generated@@242 ($generated@@11 true)))) (= (ControlFlow 0 12) 11)) $generated@@621)))
(let (($generated@@627  (=> $generated@@602 (and (=> (= (ControlFlow 0 28) 12) $generated@@626) (=> (= (ControlFlow 0 28) 27) $generated@@625)))))
(let (($generated@@628 true))
(let (($generated@@629  (and (=> (= (ControlFlow 0 29) 10) $generated@@628) (=> (= (ControlFlow 0 29) 28) $generated@@627))))
(let (($generated@@630 true))
(let (($generated@@631  (=> (<= ($generated@@240 0) $generated@@597) (=> (and (and (and (and (and (not false) $generated@@603) $generated@@604) (<= 0 $generated@@605)) (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@79) (=> (and (not (= $generated@@632 $generated@@607)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@606 $generated@@632) $generated@@60))) (= ($generated@@83 $generated@@606 $generated@@632) ($generated@@83 $generated@@606 $generated@@632))))
 :pattern ( ($generated@@83 $generated@@606 $generated@@632))
))) (and (and ($generated@@134 $generated@@606 $generated@@606) (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (! (let (($generated@@635 ($generated@@69 (type $generated@@634))))
 (=> (and (and (= (type $generated@@633) $generated@@79) (= (type $generated@@634) ($generated@@68 $generated@@635))) (and (not (= $generated@@633 $generated@@607)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@606 $generated@@633) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@606 $generated@@633) $generated@@634) ($generated@@85 ($generated@@83 $generated@@606 $generated@@633) $generated@@634)) ($generated@@0 ($generated@@164 $generated@@608 $generated@@633 $generated@@634)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@606 $generated@@633) $generated@@634))
))) (and (<= $generated@@597 $generated@@605) (=> (= $generated@@597 $generated@@605) true)))) (and (=> (= (ControlFlow 0 30) 9) $generated@@630) (=> (= (ControlFlow 0 30) 29) $generated@@629))))))
(let (($generated@@636  (=> (and $generated@@604 (= (ControlFlow 0 31) 30)) $generated@@631)))
(let (($generated@@637 true))
(let (($generated@@638  (and (=> (= (ControlFlow 0 32) 8) $generated@@637) (=> (= (ControlFlow 0 32) 31) $generated@@636))))
(let (($generated@@639 true))
(let (($generated@@640  (=> (and (and (<= $generated@@609 $generated@@605) (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@79) (=> (and (not (= $generated@@641 $generated@@607)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@606 $generated@@641) $generated@@60))) (= ($generated@@83 $generated@@606 $generated@@641) ($generated@@83 $generated@@606 $generated@@641))))
 :pattern ( ($generated@@83 $generated@@606 $generated@@641))
))) (and ($generated@@134 $generated@@606 $generated@@606) (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (! (let (($generated@@644 ($generated@@69 (type $generated@@643))))
 (=> (and (and (= (type $generated@@642) $generated@@79) (= (type $generated@@643) ($generated@@68 $generated@@644))) (and (not (= $generated@@642 $generated@@607)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@606 $generated@@642) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@606 $generated@@642) $generated@@643) ($generated@@85 ($generated@@83 $generated@@606 $generated@@642) $generated@@643)) ($generated@@0 ($generated@@164 $generated@@608 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@606 $generated@@642) $generated@@643))
)))) (and (=> (= (ControlFlow 0 33) 7) $generated@@639) (=> (= (ControlFlow 0 33) 32) $generated@@638)))))
(let (($generated@@645  (=> (and (< $generated@@605 $generated@@609) (= $generated@@610 (- $generated@@609 $generated@@605))) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@141 ($generated@@8 (+ $generated@@605 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@605 1)) $generated@@138) (=> (= $generated@@611 (+ $generated@@605 1)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@610) (= (- $generated@@609 $generated@@611) $generated@@610))) (=> (or (<= 0 $generated@@610) (= (- $generated@@609 $generated@@611) $generated@@610)) (=> (= (ControlFlow 0 4) (- 0 3)) (< (- $generated@@609 $generated@@611) $generated@@610))))))))))
(let (($generated@@646  (=> $generated@@603 (and (=> (= (ControlFlow 0 34) 33) $generated@@640) (=> (= (ControlFlow 0 34) 4) $generated@@645)))))
(let (($generated@@647 true))
(let (($generated@@648  (and (=> (= (ControlFlow 0 35) 2) $generated@@647) (=> (= (ControlFlow 0 35) 34) $generated@@646))))
(let (($generated@@649 true))
(let (($generated@@650  (=> (<= ($generated@@240 0) $generated@@605) (=> (and (and (and (not false) (<= 0 $generated@@605)) (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@79) (=> (and (not (= $generated@@651 $generated@@607)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@606 $generated@@651) $generated@@60))) (= ($generated@@83 $generated@@606 $generated@@651) ($generated@@83 $generated@@606 $generated@@651))))
 :pattern ( ($generated@@83 $generated@@606 $generated@@651))
))) (and (and ($generated@@134 $generated@@606 $generated@@606) (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 ($generated@@69 (type $generated@@653))))
 (=> (and (and (= (type $generated@@652) $generated@@79) (= (type $generated@@653) ($generated@@68 $generated@@654))) (and (not (= $generated@@652 $generated@@607)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@606 $generated@@652) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@606 $generated@@652) $generated@@653) ($generated@@85 ($generated@@83 $generated@@606 $generated@@652) $generated@@653)) ($generated@@0 ($generated@@164 $generated@@608 $generated@@652 $generated@@653)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@606 $generated@@652) $generated@@653))
))) (and (<= (- $generated@@609 $generated@@605) $generated@@612) (=> (= (- $generated@@609 $generated@@605) $generated@@612) true)))) (and (=> (= (ControlFlow 0 36) 1) $generated@@649) (=> (= (ControlFlow 0 36) 35) $generated@@648))))))
(let (($generated@@655  (=> (= $generated@@608 ($generated@@165 $generated@@607 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 37) (- 0 38)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (= $generated@@613 ($generated@@240 0)) (=> (and (= $generated@@612 (- $generated@@609 $generated@@613)) (= (ControlFlow 0 37) 36)) $generated@@650)))))))
(let (($generated@@656  (=> (and ($generated@@246 $generated@@606) ($generated@@614 $generated@@606)) (=> (and (and (<= ($generated@@240 0) $generated@@615) true) (and (= 1 $generated@@616) (= (ControlFlow 0 39) 37))) $generated@@655))))
$generated@@656)))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 (T@U Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (Int) Int)
(declare-fun $generated@@240 () T@T)
(declare-fun $generated@@241 (Int) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@336 (T@T T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 () T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U Int) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@141)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@66) (= (type $generated@@233) $generated@@66)) (= (type $generated@@234) $generated@@150)) (= (type $generated@@235) $generated@@150)) (= ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233)))
)))
(assert  (and (and (= ($generated@@1 $generated@@240) 17) (forall (($generated@@243 T@U) ) (! (= (type ($generated@@238 $generated@@243)) $generated@@240)
 :pattern ( ($generated@@238 $generated@@243))
))) (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@242 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@242 $generated@@244))
))))
(assert  (=> (<= 1 $generated@@236) (forall (($generated@@246 T@U) ($generated@@247 Int) ) (!  (=> (and (= (type $generated@@246) $generated@@240) (or ($generated@@241 ($generated@@239 $generated@@247)) (and (not (= 1 $generated@@236)) (<= ($generated@@239 0) $generated@@247)))) (and (=> (not ($generated@@0 ($generated@@242 ($generated@@11 (< $generated@@247 2))))) (=> (not ($generated@@0 ($generated@@242 ($generated@@11 false)))) (and ($generated@@241 ($generated@@239 (- $generated@@247 2))) ($generated@@241 ($generated@@239 (- $generated@@247 1)))))) (= ($generated@@237 ($generated@@238 $generated@@246) ($generated@@239 $generated@@247)) (ite (< $generated@@247 2) $generated@@247 (ite false 8 (+ ($generated@@237 ($generated@@238 $generated@@246) ($generated@@239 (- $generated@@247 2))) ($generated@@237 ($generated@@238 $generated@@246) ($generated@@239 (- $generated@@247 1)))))))))
 :weight 3
 :pattern ( ($generated@@237 ($generated@@238 $generated@@246) ($generated@@239 $generated@@247)))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@141) (= (type $generated@@249) $generated@@141)) (= ($generated@@147 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@147 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@66)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@253) $generated@@66)) (= ($generated@@137 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@150) ($generated@@0 ($generated@@83 $generated@@252 $generated@@254))) ($generated@@229 $generated@@254 $generated@@253))
 :pattern ( ($generated@@83 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@137 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@66)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@258) $generated@@66)) (= ($generated@@137 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@150) ($generated@@0 ($generated@@83 $generated@@257 $generated@@259))) ($generated@@229 $generated@@259 $generated@@258))
 :pattern ( ($generated@@83 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@137 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@239 $generated@@260) $generated@@260)
 :pattern ( ($generated@@239 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@242 $generated@@261) $generated@@261)
 :pattern ( ($generated@@242 $generated@@261))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@66) (= (type $generated@@265) $generated@@66)) (= (type $generated@@266) $generated@@150)) (= (type $generated@@267) $generated@@150)) (= (type $generated@@268) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@262 $generated@@268)) (= ($generated@@76 ($generated@@228 $generated@@266 $generated@@267) ($generated@@140 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@76 ($generated@@228 $generated@@266 $generated@@267) ($generated@@140 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@70)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@141) (= ($generated@@139 $generated@@271) (= ($generated@@269 $generated@@271) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@141) ($generated@@139 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@150) (= (type $generated@@274) $generated@@150)) (= $generated@@272 ($generated@@228 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@139 $generated@@272))
)))
(assert  (and (and (forall (($generated@@279 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@279)) 18)) (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
))) (forall (($generated@@281 T@T) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@277 $generated@@281))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@282)) 0)
 :pattern ( ($generated@@275 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@2) (= ($generated@@137 $generated@@283 $generated@@134) (<= ($generated@@239 0) ($generated $generated@@283))))
 :pattern ( ($generated@@137 $generated@@283 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@236) (forall (($generated@@284 T@U) ($generated@@285 Int) ) (!  (=> (and (= (type $generated@@284) $generated@@240) (or ($generated@@241 $generated@@285) (and (not (= 1 $generated@@236)) (<= ($generated@@239 0) $generated@@285)))) (<= ($generated@@239 0) ($generated@@237 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@237 $generated@@284 $generated@@285))
))))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@150)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@66) (= (type $generated@@290) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@263 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@76 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@263 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@78 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@81 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@78 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@83 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@78 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@83 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@83 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 20)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@78 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@83 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@83 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@81 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@78 $generated@@334 $generated@@2)) (= ($generated@@156 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@83 $generated@@333 $generated@@335))) (<= ($generated ($generated@@83 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@83 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@156 $generated@@333))
)))
(assert (forall (($generated@@337 T@T) ($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@150) ($generated@@229 $generated@@339 $generated@@134)) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@339)) $generated@@339) ($generated@@137 ($generated@@336 $generated@@2 $generated@@339) $generated@@134)))
 :pattern ( ($generated@@229 $generated@@339 $generated@@134))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@301 (type $generated@@340))))
(let (($generated@@342 ($generated@@300 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@299 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@298 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@297 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@301 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@78 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@301 (type $generated@@347))))
(let (($generated@@349 ($generated@@300 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@299 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@298 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@83 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@319 (type $generated@@351))))
(let (($generated@@353 ($generated@@318 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@317 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@316 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@315 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@319 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@78 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@319 (type $generated@@358))))
(let (($generated@@360 ($generated@@318 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@317 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@316 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@83 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@363) $generated@@66)) (= ($generated@@137 $generated@@362 ($generated@@155 $generated@@363)) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@362 $generated@@364)))) ($generated@@229 $generated@@364 $generated@@363))
 :pattern ( ($generated@@83 $generated@@362 $generated@@364))
))))
 :pattern ( ($generated@@137 $generated@@362 ($generated@@155 $generated@@363)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@366) $generated@@66)) (= (type $generated@@367) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@365 ($generated@@250 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@150) ($generated@@0 ($generated@@83 $generated@@365 $generated@@368))) ($generated@@263 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@83 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@76 $generated@@365 ($generated@@250 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@370) $generated@@66)) (= (type $generated@@371) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@369 ($generated@@255 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@150) ($generated@@0 ($generated@@83 $generated@@369 $generated@@372))) ($generated@@263 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@83 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@76 $generated@@369 ($generated@@255 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(= ($generated ($generated@@83 ($generated@@292 $generated@@374) $generated@@373)) 0))
 :pattern ( (let (($generated@@374 (type $generated@@373)))
($generated@@83 ($generated@@292 $generated@@374) $generated@@373)))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@301 (type $generated@@378))))
(let (($generated@@380 ($generated@@300 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@78 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@299 $generated@@150 $generated@@150)) (= (type $generated@@382) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@83 ($generated@@297 $generated@@381) ($generated@@148 ($generated@@336 $generated@@141 $generated@@382)))) (= ($generated@@83 ($generated@@376 $generated@@381) ($generated@@148 ($generated@@336 $generated@@141 $generated@@382))) ($generated@@149 ($generated@@336 $generated@@141 $generated@@382))))))
 :pattern ( ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@319 (type $generated@@386))))
(let (($generated@@388 ($generated@@318 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@78 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@317 $generated@@150 $generated@@150)) (= (type $generated@@390) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@83 ($generated@@315 $generated@@389) ($generated@@148 ($generated@@336 $generated@@141 $generated@@390)))) (= ($generated@@83 ($generated@@384 $generated@@389) ($generated@@148 ($generated@@336 $generated@@141 $generated@@390))) ($generated@@149 ($generated@@336 $generated@@141 $generated@@390))))))
 :pattern ( ($generated@@83 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@300 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@299 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@83 ($generated@@344 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@83 ($generated@@297 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@83 ($generated@@376 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@391) $generated@@395))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@83 ($generated@@344 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@318 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@317 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@83 ($generated@@355 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@83 ($generated@@315 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@83 ($generated@@384 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@83 ($generated@@355 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@66)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@299 $generated@@150 $generated@@150)) (= (type $generated@@405) $generated@@66)) (= (type $generated@@406) $generated@@66)) (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@404) $generated@@408))) (and ($generated@@263 ($generated@@83 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@263 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@66)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@317 $generated@@150 $generated@@150)) (= (type $generated@@413) $generated@@66)) (= (type $generated@@414) $generated@@66)) (= (type $generated@@415) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@412) $generated@@416))) (and ($generated@@263 ($generated@@83 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@263 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@76 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@78 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@319 (type $generated@@419))))
(let (($generated@@421 ($generated@@318 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@317 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@316 $generated@@421 $generated@@420)) (= ($generated@@315 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@315 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@319 (type $generated@@422))))
(let (($generated@@424 ($generated@@318 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@317 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@316 $generated@@424 $generated@@423)) (= ($generated@@355 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@355 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@319 (type $generated@@425))))
(let (($generated@@427 ($generated@@318 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@317 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@316 $generated@@427 $generated@@426)) (= ($generated@@383 $generated@@425) ($generated@@417 $generated@@150))))))
 :pattern ( ($generated@@383 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@301 (type $generated@@428))))
(let (($generated@@430 ($generated@@300 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@299 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@298 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@150) (= (type $generated@@432) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@375 $generated@@428) ($generated@@286 ($generated@@228 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@375 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@319 (type $generated@@433))))
(let (($generated@@435 ($generated@@318 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@317 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@316 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@150) (= (type $generated@@437) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@383 $generated@@433) ($generated@@286 ($generated@@228 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@383 $generated@@433))
)))
(assert  (=> (<= 1 $generated@@236) (forall (($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (= (type $generated@@438) $generated@@240) (or ($generated@@241 $generated@@439) (and (not (= 1 $generated@@236)) (<= ($generated@@239 0) $generated@@439)))) (and (=> (<= 2 $generated@@439) (=> (not ($generated@@0 ($generated@@242 ($generated@@11 false)))) (and ($generated@@241 (- $generated@@439 2)) ($generated@@241 (- $generated@@439 1))))) (= ($generated@@237 ($generated@@238 $generated@@438) $generated@@439) (ite (< $generated@@439 2) $generated@@439 (ite false 8 (+ ($generated@@237 $generated@@438 (- $generated@@439 2)) ($generated@@237 $generated@@438 (- $generated@@439 1))))))))
 :pattern ( ($generated@@237 ($generated@@238 $generated@@438) $generated@@439))
))))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@150) ($generated@@229 $generated@@440 $generated@@46)) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@440)) $generated@@440) ($generated@@137 ($generated@@336 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@150) ($generated@@229 $generated@@441 $generated@@47)) (and (= ($generated@@286 ($generated@@336 $generated@@3 $generated@@441)) $generated@@441) ($generated@@137 ($generated@@336 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@150) ($generated@@229 $generated@@442 $generated@@44)) (and (= ($generated@@286 ($generated@@336 $generated@@4 $generated@@442)) $generated@@442) ($generated@@137 ($generated@@336 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 21))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@150) ($generated@@229 $generated@@444 $generated@@45)) (and (= ($generated@@286 ($generated@@336 $generated@@443 $generated@@444)) $generated@@444) ($generated@@137 ($generated@@336 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@66) (= ($generated@@229 ($generated@@286 $generated@@445) $generated@@446) ($generated@@137 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@229 ($generated@@286 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@81 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@78 $generated@@448 $generated@@2)) (<= 0 ($generated@@291 $generated@@447))))
 :pattern ( ($generated@@291 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@278 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@277 $generated@@450)) (<= 0 ($generated@@276 $generated@@449))))
 :pattern ( ($generated@@276 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@401 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@401 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@401 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@74 ($generated@@401 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@461 ($generated@@409 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@409 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@66)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@465 ($generated@@409 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@409 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@74 ($generated@@409 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@409 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@150) (= (type $generated@@472) $generated@@150)) (= ($generated@@269 ($generated@@228 $generated@@471 $generated@@472)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@66)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@473 ($generated@@140 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@140 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@140 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@140 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@150) (= (type $generated@@482) $generated@@150)) (= ($generated@@148 ($generated@@228 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@150) (= (type $generated@@484) $generated@@150)) (= ($generated@@149 ($generated@@228 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@228 $generated@@483 $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@240)
 :pattern ( ($generated@@485 $generated@@487))
)) (= (type $generated@@486) $generated@@240)))
(assert (forall (($generated@@488 T@U) ($generated@@489 Int) ) (!  (=> (= (type $generated@@488) $generated@@240) (= ($generated@@237 $generated@@488 $generated@@489) ($generated@@237 $generated@@486 $generated@@489)))
 :pattern ( ($generated@@237 ($generated@@485 $generated@@488) $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ($generated@@494 Int) ) (! (let (($generated@@495 ($generated@@278 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493 $generated@@494)) $generated@@495))
 :pattern ( ($generated@@491 $generated@@493 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@277 $generated@@150)) (= (type $generated@@497) $generated@@66)) (= (type $generated@@498) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@496 ($generated@@490 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@276 $generated@@496))) ($generated@@263 ($generated@@491 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@491 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@76 $generated@@496 ($generated@@490 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@77 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@77 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@502 ($generated@@250 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@250 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@74 ($generated@@250 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@66)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@506 ($generated@@255 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@255 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@74 ($generated@@255 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@510 ($generated@@155 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@155 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@66)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@514 ($generated@@490 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@490 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@74 ($generated@@490 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@490 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@336 $generated@@519 ($generated@@286 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@286 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@299 $generated@@150 $generated@@150)) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) (= ($generated@@137 $generated@@520 ($generated@@401 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@520) $generated@@523))) (and ($generated@@229 ($generated@@83 ($generated@@376 $generated@@520) $generated@@523) $generated@@522) ($generated@@229 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@520) $generated@@523))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@137 $generated@@520 ($generated@@401 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@317 $generated@@150 $generated@@150)) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@66)) (= ($generated@@137 $generated@@524 ($generated@@409 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@524) $generated@@527))) (and ($generated@@229 ($generated@@83 ($generated@@384 $generated@@524) $generated@@527) $generated@@526) ($generated@@229 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@524) $generated@@527))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@137 $generated@@524 ($generated@@409 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@150) (= (type $generated@@531) $generated@@150)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@228 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@228 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@150) (= (type $generated@@533) $generated@@150)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@228 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@228 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 Int) ) (!  (=> (= (type $generated@@534) $generated@@240) (= ($generated@@237 ($generated@@238 $generated@@534) $generated@@535) ($generated@@237 $generated@@534 $generated@@535)))
 :pattern ( ($generated@@237 ($generated@@238 $generated@@534) $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@150) (= (type $generated@@537) $generated@@66)) (= (type $generated@@538) $generated@@66)) ($generated@@229 $generated@@536 ($generated@@401 $generated@@537 $generated@@538))) (and (= ($generated@@286 ($generated@@336 ($generated@@299 $generated@@150 $generated@@150) $generated@@536)) $generated@@536) ($generated@@137 ($generated@@336 ($generated@@299 $generated@@150 $generated@@150) $generated@@536) ($generated@@401 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@229 $generated@@536 ($generated@@401 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@150) (= (type $generated@@540) $generated@@66)) (= (type $generated@@541) $generated@@66)) ($generated@@229 $generated@@539 ($generated@@409 $generated@@540 $generated@@541))) (and (= ($generated@@286 ($generated@@336 ($generated@@317 $generated@@150 $generated@@150) $generated@@539)) $generated@@539) ($generated@@137 ($generated@@336 ($generated@@317 $generated@@150 $generated@@150) $generated@@539) ($generated@@409 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@229 $generated@@539 ($generated@@409 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@66) (= (type $generated@@543) $generated@@66)) (= (type $generated@@544) $generated@@150)) ($generated@@229 $generated@@544 ($generated@@140 $generated@@542 $generated@@543))) (and (= ($generated@@286 ($generated@@336 $generated@@141 $generated@@544)) $generated@@544) ($generated@@137 ($generated@@336 $generated@@141 $generated@@544) ($generated@@140 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@229 $generated@@544 ($generated@@140 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (not ($generated@@0 ($generated@@83 ($generated@@417 $generated@@546) $generated@@545))))
 :pattern ( (let (($generated@@546 (type $generated@@545)))
($generated@@83 ($generated@@417 $generated@@546) $generated@@545)))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@71)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@66) (= (type $generated@@550) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@549 $generated@@550)) $generated@@63) (= ($generated@@547 ($generated@@140 $generated@@549 $generated@@550)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@141) (= ($generated@@528 ($generated@@286 $generated@@551)) ($generated@@529 $generated@@551)))
 :pattern ( ($generated@@528 ($generated@@286 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@150) ($generated@@229 $generated@@552 ($generated@@77 0))) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@552)) $generated@@552) ($generated@@137 ($generated@@336 ($generated@@78 $generated@@150 $generated@@4) $generated@@552) ($generated@@77 0))))
 :pattern ( ($generated@@229 $generated@@552 ($generated@@77 0)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@150) (= (type $generated@@554) $generated@@66)) ($generated@@229 $generated@@553 ($generated@@250 $generated@@554))) (and (= ($generated@@286 ($generated@@336 ($generated@@78 $generated@@150 $generated@@4) $generated@@553)) $generated@@553) ($generated@@137 ($generated@@336 ($generated@@78 $generated@@150 $generated@@4) $generated@@553) ($generated@@250 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@250 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@150) (= (type $generated@@556) $generated@@66)) ($generated@@229 $generated@@555 ($generated@@255 $generated@@556))) (and (= ($generated@@286 ($generated@@336 ($generated@@78 $generated@@150 $generated@@4) $generated@@555)) $generated@@555) ($generated@@137 ($generated@@336 ($generated@@78 $generated@@150 $generated@@4) $generated@@555) ($generated@@255 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@555 ($generated@@255 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@150) (= (type $generated@@558) $generated@@66)) ($generated@@229 $generated@@557 ($generated@@155 $generated@@558))) (and (= ($generated@@286 ($generated@@336 ($generated@@78 $generated@@150 $generated@@2) $generated@@557)) $generated@@557) ($generated@@137 ($generated@@336 ($generated@@78 $generated@@150 $generated@@2) $generated@@557) ($generated@@155 $generated@@558))))
 :pattern ( ($generated@@229 $generated@@557 ($generated@@155 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@150) (= (type $generated@@560) $generated@@66)) ($generated@@229 $generated@@559 ($generated@@490 $generated@@560))) (and (= ($generated@@286 ($generated@@336 ($generated@@277 $generated@@150) $generated@@559)) $generated@@559) ($generated@@137 ($generated@@336 ($generated@@277 $generated@@150) $generated@@559) ($generated@@490 $generated@@560))))
 :pattern ( ($generated@@229 $generated@@559 ($generated@@490 $generated@@560)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@547 $generated@@134) $generated@@64))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@562) $generated@@66)) (= (type $generated@@563) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@561 ($generated@@155 $generated@@562) $generated@@563) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@561 $generated@@564)))) ($generated@@263 $generated@@564 $generated@@562 $generated@@563))
 :pattern ( ($generated@@83 $generated@@561 $generated@@564))
))))
 :pattern ( ($generated@@76 $generated@@561 ($generated@@155 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@141) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@262 $generated@@567) (and ($generated@@139 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@66) ($generated@@76 $generated@@565 ($generated@@140 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@76 $generated@@565 ($generated@@140 $generated@@566 $generated@@568) $generated@@567))
))))) ($generated@@263 ($generated@@148 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@263 ($generated@@148 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@141) (= (type $generated@@570) $generated@@66)) (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@262 $generated@@571) (and ($generated@@139 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@66) ($generated@@76 $generated@@569 ($generated@@140 $generated@@572 $generated@@570) $generated@@571))
 :pattern ( ($generated@@76 $generated@@569 ($generated@@140 $generated@@572 $generated@@570) $generated@@571))
))))) ($generated@@263 ($generated@@149 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@263 ($generated@@149 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@150) (= (type $generated@@574) $generated@@150)) (= ($generated@@228 ($generated@@242 $generated@@573) ($generated@@242 $generated@@574)) ($generated@@242 ($generated@@228 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@228 ($generated@@242 $generated@@573) ($generated@@242 $generated@@574)))
)))
(assert (forall (($generated@@575 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@239 $generated@@575))) ($generated@@242 ($generated@@286 ($generated@@8 $generated@@575))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@239 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@286 ($generated@@242 $generated@@576)) ($generated@@242 ($generated@@286 $generated@@576)))
 :pattern ( ($generated@@286 ($generated@@242 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@278 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@277 $generated@@578)) (= ($generated@@276 $generated@@577) 0)) (= $generated@@577 ($generated@@275 $generated@@578))))
 :pattern ( ($generated@@276 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@78 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@291 ($generated@@84 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@291 $generated@@579) ($generated ($generated@@83 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@291 ($generated@@84 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@584) $generated@@2)) ($generated@@76 $generated@@584 $generated@@46 $generated@@583))
 :pattern ( ($generated@@76 $generated@@584 $generated@@46 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@586) $generated@@3)) ($generated@@76 $generated@@586 $generated@@47 $generated@@585))
 :pattern ( ($generated@@76 $generated@@586 $generated@@47 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@588) $generated@@4)) ($generated@@76 $generated@@588 $generated@@44 $generated@@587))
 :pattern ( ($generated@@76 $generated@@588 $generated@@44 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@590) $generated@@443)) ($generated@@76 $generated@@590 $generated@@45 $generated@@589))
 :pattern ( ($generated@@76 $generated@@590 $generated@@45 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@592) $generated@@150)) ($generated@@76 $generated@@592 $generated@@48 $generated@@591))
 :pattern ( ($generated@@76 $generated@@592 $generated@@48 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@277 $generated@@150)) (= (type $generated@@594) $generated@@66)) (= ($generated@@137 $generated@@593 ($generated@@490 $generated@@594)) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@276 $generated@@593))) ($generated@@229 ($generated@@491 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@491 $generated@@593 $generated@@595))
))))
 :pattern ( ($generated@@137 $generated@@593 ($generated@@490 $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 Int) ) (!  (=> (= (type $generated@@597) ($generated@@277 $generated@@150)) (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@276 $generated@@597))) (< ($generated@@529 ($generated@@336 $generated@@141 ($generated@@491 $generated@@597 $generated@@598))) ($generated@@596 $generated@@597))))
 :pattern ( ($generated@@529 ($generated@@336 $generated@@141 ($generated@@491 $generated@@597 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@299 $generated@@150 $generated@@150)) (= (type $generated@@600) $generated@@66)) (= (type $generated@@601) $generated@@66)) ($generated@@137 $generated@@599 ($generated@@401 $generated@@600 $generated@@601))) (and (and ($generated@@137 ($generated@@297 $generated@@599) ($generated@@250 $generated@@600)) ($generated@@137 ($generated@@344 $generated@@599) ($generated@@250 $generated@@601))) ($generated@@137 ($generated@@375 $generated@@599) ($generated@@250 ($generated@@140 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@137 $generated@@599 ($generated@@401 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@317 $generated@@150 $generated@@150)) (= (type $generated@@603) $generated@@66)) (= (type $generated@@604) $generated@@66)) ($generated@@137 $generated@@602 ($generated@@409 $generated@@603 $generated@@604))) (and (and ($generated@@137 ($generated@@315 $generated@@602) ($generated@@255 $generated@@603)) ($generated@@137 ($generated@@355 $generated@@602) ($generated@@255 $generated@@604))) ($generated@@137 ($generated@@383 $generated@@602) ($generated@@255 ($generated@@140 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@137 $generated@@602 ($generated@@409 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@2) ($generated@@137 $generated@@605 $generated@@46))
 :pattern ( ($generated@@137 $generated@@605 $generated@@46))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@3) ($generated@@137 $generated@@606 $generated@@47))
 :pattern ( ($generated@@137 $generated@@606 $generated@@47))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@4) ($generated@@137 $generated@@607 $generated@@44))
 :pattern ( ($generated@@137 $generated@@607 $generated@@44))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@443) ($generated@@137 $generated@@608 $generated@@45))
 :pattern ( ($generated@@137 $generated@@608 $generated@@45))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@150) ($generated@@137 $generated@@609 $generated@@48))
 :pattern ( ($generated@@137 $generated@@609 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@612) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@614) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@615) $generated@@79)) (= (type $generated@@616) ($generated@@162 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@618  (=> (not ($generated@@0 ($generated@@242 ($generated@@11 false)))) (and (=> (= (ControlFlow 0 6) (- 0 12)) ($generated@@137 ($generated@@8 (- $generated@@610 2)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@610 2)) $generated@@134) (=> (and (= $generated@@611 (- $generated@@610 2)) ($generated@@76 ($generated@@8 $generated@@611) $generated@@134 $generated@@612)) (and (=> (= (ControlFlow 0 6) (- 0 11)) (or (<= 0 $generated@@610) (= $generated@@611 $generated@@610))) (=> (or (<= 0 $generated@@610) (= $generated@@611 $generated@@610)) (and (=> (= (ControlFlow 0 6) (- 0 10)) (< $generated@@611 $generated@@610)) (=> (< $generated@@611 $generated@@610) (=> ($generated@@241 (- $generated@@610 2)) (and (=> (= (ControlFlow 0 6) (- 0 9)) ($generated@@137 ($generated@@8 (- $generated@@610 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@610 1)) $generated@@134) (=> (and (= $generated@@613 (- $generated@@610 1)) ($generated@@76 ($generated@@8 $generated@@613) $generated@@134 $generated@@612)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (<= 0 $generated@@610) (= $generated@@613 $generated@@610))) (=> (or (<= 0 $generated@@610) (= $generated@@613 $generated@@610)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (< $generated@@613 $generated@@610)) (=> (< $generated@@613 $generated@@610) (=> (and ($generated@@241 (- $generated@@610 1)) (= (ControlFlow 0 6) (- 0 5))) ($generated@@137 ($generated@@8 (+ ($generated@@237 ($generated@@238 $generated@@486) (- $generated@@610 2)) ($generated@@237 ($generated@@238 $generated@@486) (- $generated@@610 1)))) $generated@@134))))))))))))))))))))
(let (($generated@@619  (=> (and ($generated@@0 ($generated@@242 ($generated@@11 false))) (= (ControlFlow 0 4) (- 0 3))) ($generated@@137 ($generated@@8 ($generated@@239 8)) $generated@@134))))
(let (($generated@@620  (=> (<= 2 $generated@@610) (and (=> (= (ControlFlow 0 13) 4) $generated@@619) (=> (= (ControlFlow 0 13) 6) $generated@@618)))))
(let (($generated@@621 true))
(let (($generated@@622  (=> (= $generated@@614 ($generated@@216 $generated@@615 $generated@@612 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 2) $generated@@621) (=> (= (ControlFlow 0 14) 13) $generated@@620)))))
(let (($generated@@623 true))
(let (($generated@@624  (=> (= $generated@@616 ($generated@@161 $generated@@615 $generated@@612 $generated@@60 false)) (and (=> (= (ControlFlow 0 15) 1) $generated@@623) (=> (= (ControlFlow 0 15) 14) $generated@@622)))))
(let (($generated@@625  (=> (and (and (and ($generated@@262 $generated@@612) ($generated@@617 $generated@@612)) (<= ($generated@@239 0) $generated@@610)) (and (= 1 $generated@@236) (= (ControlFlow 0 16) 15))) $generated@@624)))
$generated@@625)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 () Int)
(declare-fun $generated@@239 (T@U Int) Int)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@242 () T@T)
(declare-fun $generated@@243 (Int) Bool)
(declare-fun $generated@@244 (Int Int) Int)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@337 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@T) T@U)
(declare-fun $generated@@442 () T@T)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@485 () T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@599 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@141)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@66) (= (type $generated@@233) $generated@@66)) (= (type $generated@@234) $generated@@150)) (= (type $generated@@235) $generated@@150)) (= ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@141) (= (type $generated@@237) $generated@@141)) (= ($generated@@147 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@147 $generated@@236 $generated@@237))
)))
(assert  (and (= ($generated@@1 $generated@@242) 17) (forall (($generated@@245 T@U) ) (! (= (type ($generated@@240 $generated@@245)) $generated@@242)
 :pattern ( ($generated@@240 $generated@@245))
))))
(assert  (=> (<= 1 $generated@@238) (forall (($generated@@246 T@U) ($generated@@247 Int) ) (!  (=> (and (= (type $generated@@246) $generated@@242) (or ($generated@@243 ($generated@@241 $generated@@247)) (and (not (= 1 $generated@@238)) (<= ($generated@@241 0) $generated@@247)))) (and (=> (not (= ($generated@@241 $generated@@247) ($generated@@241 0))) ($generated@@243 ($generated@@241 (- $generated@@247 1)))) (= ($generated@@239 ($generated@@240 $generated@@246) ($generated@@241 $generated@@247)) (ite (= ($generated@@241 $generated@@247) ($generated@@241 0)) 1 ($generated@@244 ($generated@@241 $generated@@247) ($generated@@241 ($generated@@239 ($generated@@240 $generated@@246) ($generated@@241 (- $generated@@247 1)))))))))
 :weight 3
 :pattern ( ($generated@@239 ($generated@@240 $generated@@246) ($generated@@241 $generated@@247)))
))))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@66)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@251) $generated@@66)) (= ($generated@@137 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@150) ($generated@@0 ($generated@@83 $generated@@250 $generated@@252))) ($generated@@229 $generated@@252 $generated@@251))
 :pattern ( ($generated@@83 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@137 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@66)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@256) $generated@@66)) (= ($generated@@137 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@150) ($generated@@0 ($generated@@83 $generated@@255 $generated@@257))) ($generated@@229 $generated@@257 $generated@@256))
 :pattern ( ($generated@@83 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@137 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@258 Int) ) (! (= ($generated@@241 $generated@@258) $generated@@258)
 :pattern ( ($generated@@241 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@66) (= (type $generated@@266) $generated@@66)) (= (type $generated@@267) $generated@@150)) (= (type $generated@@268) $generated@@150)) (= (type $generated@@269) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@263 $generated@@269)) (= ($generated@@76 ($generated@@228 $generated@@267 $generated@@268) ($generated@@140 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@76 ($generated@@228 $generated@@267 $generated@@268) ($generated@@140 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@70)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@141) (= ($generated@@139 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@141) ($generated@@139 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@150) (= (type $generated@@275) $generated@@150)) (= $generated@@273 ($generated@@228 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@139 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 18)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@2) (= ($generated@@137 $generated@@284 $generated@@134) (<= ($generated@@241 0) ($generated $generated@@284))))
 :pattern ( ($generated@@137 $generated@@284 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@238) (forall (($generated@@285 T@U) ($generated@@286 Int) ) (!  (=> (and (= (type $generated@@285) $generated@@242) (or ($generated@@243 $generated@@286) (and (not (= 1 $generated@@238)) (<= ($generated@@241 0) $generated@@286)))) (<= ($generated@@241 0) ($generated@@239 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@239 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@150)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@66) (= (type $generated@@291) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@264 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@76 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@264 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@78 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@81 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@78 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@83 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 19)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@78 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@83 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@83 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 20)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@78 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@83 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@83 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@81 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@78 $generated@@335 $generated@@2)) (= ($generated@@156 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@83 $generated@@334 $generated@@336))) (<= ($generated ($generated@@83 $generated@@334 $generated@@336)) ($generated@@292 $generated@@334))))
 :pattern ( ($generated@@83 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@156 $generated@@334))
)))
(assert (forall (($generated@@338 T@T) ($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@150) ($generated@@229 $generated@@340 $generated@@134)) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@340)) $generated@@340) ($generated@@137 ($generated@@337 $generated@@2 $generated@@340) $generated@@134)))
 :pattern ( ($generated@@229 $generated@@340 $generated@@134))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@302 (type $generated@@341))))
(let (($generated@@343 ($generated@@301 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@300 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@299 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@298 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@298 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@302 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@302 (type $generated@@348))))
(let (($generated@@350 ($generated@@301 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@300 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@299 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@320 (type $generated@@352))))
(let (($generated@@354 ($generated@@319 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@318 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@317 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@83 ($generated@@316 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@316 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@320 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@78 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@320 (type $generated@@359))))
(let (($generated@@361 ($generated@@319 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@318 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@317 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@83 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@364) $generated@@66)) (= ($generated@@137 $generated@@363 ($generated@@155 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@363 $generated@@365)))) ($generated@@229 $generated@@365 $generated@@364))
 :pattern ( ($generated@@83 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@137 $generated@@363 ($generated@@155 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@367) $generated@@66)) (= (type $generated@@368) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@366 ($generated@@248 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@150) ($generated@@0 ($generated@@83 $generated@@366 $generated@@369))) ($generated@@264 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@83 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@76 $generated@@366 ($generated@@248 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@371) $generated@@66)) (= (type $generated@@372) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@370 ($generated@@253 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@150) ($generated@@0 ($generated@@83 $generated@@370 $generated@@373))) ($generated@@264 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@83 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@76 $generated@@370 ($generated@@253 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated ($generated@@83 ($generated@@293 $generated@@375) $generated@@374)) 0))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@83 ($generated@@293 $generated@@375) $generated@@374)))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@302 (type $generated@@379))))
(let (($generated@@381 ($generated@@301 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@78 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@300 $generated@@150 $generated@@150)) (= (type $generated@@383) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@83 ($generated@@298 $generated@@382) ($generated@@148 ($generated@@337 $generated@@141 $generated@@383)))) (= ($generated@@83 ($generated@@377 $generated@@382) ($generated@@148 ($generated@@337 $generated@@141 $generated@@383))) ($generated@@149 ($generated@@337 $generated@@141 $generated@@383))))))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert  (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@384 $generated@@386))
)) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@320 (type $generated@@387))))
(let (($generated@@389 ($generated@@319 (type $generated@@387))))
(= (type ($generated@@385 $generated@@387)) ($generated@@78 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@385 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@318 $generated@@150 $generated@@150)) (= (type $generated@@391) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@384 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@83 ($generated@@316 $generated@@390) ($generated@@148 ($generated@@337 $generated@@141 $generated@@391)))) (= ($generated@@83 ($generated@@385 $generated@@390) ($generated@@148 ($generated@@337 $generated@@141 $generated@@391))) ($generated@@149 ($generated@@337 $generated@@141 $generated@@391))))))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@301 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@300 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@83 ($generated@@298 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@83 ($generated@@377 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@83 ($generated@@298 $generated@@392) $generated@@396))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@319 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@318 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@83 ($generated@@356 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@83 ($generated@@316 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@83 ($generated@@385 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@83 ($generated@@316 $generated@@397) $generated@@401))
 :pattern ( ($generated@@83 ($generated@@385 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@83 ($generated@@356 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@66)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@300 $generated@@150 $generated@@150)) (= (type $generated@@406) $generated@@66)) (= (type $generated@@407) $generated@@66)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@298 $generated@@405) $generated@@409))) (and ($generated@@264 ($generated@@83 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@264 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@83 ($generated@@298 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@76 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@66)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@318 $generated@@150 $generated@@150)) (= (type $generated@@414) $generated@@66)) (= (type $generated@@415) $generated@@66)) (= (type $generated@@416) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@316 $generated@@413) $generated@@417))) (and ($generated@@264 ($generated@@83 ($generated@@385 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@264 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@83 ($generated@@385 $generated@@413) $generated@@417))
 :pattern ( ($generated@@83 ($generated@@316 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@76 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@419 T@T) ) (! (= (type ($generated@@418 $generated@@419)) ($generated@@78 $generated@@419 $generated@@4))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@320 (type $generated@@420))))
(let (($generated@@422 ($generated@@319 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@318 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@317 $generated@@422 $generated@@421)) (= ($generated@@316 $generated@@420) ($generated@@418 $generated@@422))))))
 :pattern ( ($generated@@316 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@320 (type $generated@@423))))
(let (($generated@@425 ($generated@@319 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@318 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@317 $generated@@425 $generated@@424)) (= ($generated@@356 $generated@@423) ($generated@@418 $generated@@424))))))
 :pattern ( ($generated@@356 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@320 (type $generated@@426))))
(let (($generated@@428 ($generated@@319 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@318 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@317 $generated@@428 $generated@@427)) (= ($generated@@384 $generated@@426) ($generated@@418 $generated@@150))))))
 :pattern ( ($generated@@384 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@302 (type $generated@@429))))
(let (($generated@@431 ($generated@@301 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@300 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@299 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@150) (= (type $generated@@433) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@376 $generated@@429) ($generated@@287 ($generated@@228 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@376 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@320 (type $generated@@434))))
(let (($generated@@436 ($generated@@319 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@318 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@317 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@150) (= (type $generated@@438) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@384 $generated@@434) ($generated@@287 ($generated@@228 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@384 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@150) ($generated@@229 $generated@@439 $generated@@46)) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@439)) $generated@@439) ($generated@@137 ($generated@@337 $generated@@2 $generated@@439) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@439 $generated@@46))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@150) ($generated@@229 $generated@@440 $generated@@47)) (and (= ($generated@@287 ($generated@@337 $generated@@3 $generated@@440)) $generated@@440) ($generated@@137 ($generated@@337 $generated@@3 $generated@@440) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@47))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@150) ($generated@@229 $generated@@441 $generated@@44)) (and (= ($generated@@287 ($generated@@337 $generated@@4 $generated@@441)) $generated@@441) ($generated@@137 ($generated@@337 $generated@@4 $generated@@441) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@441 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@442) 21))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@150) ($generated@@229 $generated@@443 $generated@@45)) (and (= ($generated@@287 ($generated@@337 $generated@@442 $generated@@443)) $generated@@443) ($generated@@137 ($generated@@337 $generated@@442 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (= (type $generated@@445) $generated@@66) (= ($generated@@229 ($generated@@287 $generated@@444) $generated@@445) ($generated@@137 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@229 ($generated@@287 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@81 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@78 $generated@@447 $generated@@2)) (<= 0 ($generated@@292 $generated@@446))))
 :pattern ( ($generated@@292 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@279 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@278 $generated@@449)) (<= 0 ($generated@@277 $generated@@448))))
 :pattern ( ($generated@@277 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@66)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@66) (= (type $generated@@453) $generated@@66)) (= ($generated@@450 ($generated@@402 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@402 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@66)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@66) (= (type $generated@@457) $generated@@66)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@74 ($generated@@402 $generated@@458 $generated@@459)) $generated@@58))
 :pattern ( ($generated@@402 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@66) (= (type $generated@@463) $generated@@66)) (= ($generated@@460 ($generated@@410 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@410 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@410 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@410 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@74 ($generated@@410 $generated@@468 $generated@@469)) $generated@@59))
 :pattern ( ($generated@@410 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@150) (= (type $generated@@471) $generated@@150)) (= ($generated@@270 ($generated@@228 $generated@@470 $generated@@471)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@66) (= (type $generated@@475) $generated@@66)) (= ($generated@@472 ($generated@@140 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@140 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@66) (= (type $generated@@479) $generated@@66)) (= ($generated@@476 ($generated@@140 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@140 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@150) (= (type $generated@@481) $generated@@150)) (= ($generated@@148 ($generated@@228 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@228 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@150) (= (type $generated@@483) $generated@@150)) (= ($generated@@149 ($generated@@228 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@228 $generated@@482 $generated@@483))
)))
(assert  (and (forall (($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@486)) $generated@@242)
 :pattern ( ($generated@@484 $generated@@486))
)) (= (type $generated@@485) $generated@@242)))
(assert (forall (($generated@@487 T@U) ($generated@@488 Int) ) (!  (=> (= (type $generated@@487) $generated@@242) (= ($generated@@239 $generated@@487 $generated@@488) ($generated@@239 $generated@@485 $generated@@488)))
 :pattern ( ($generated@@239 ($generated@@484 $generated@@487) $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@279 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@278 $generated@@150)) (= (type $generated@@496) $generated@@66)) (= (type $generated@@497) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@277 $generated@@495))) ($generated@@264 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@76 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@77 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@77 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@501 ($generated@@248 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@248 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@74 ($generated@@248 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@505 ($generated@@253 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@253 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@74 ($generated@@253 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@509 ($generated@@155 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@155 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@74 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@337 $generated@@518 ($generated@@287 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@287 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@300 $generated@@150 $generated@@150)) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) (= ($generated@@137 $generated@@519 ($generated@@402 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@298 $generated@@519) $generated@@522))) (and ($generated@@229 ($generated@@83 ($generated@@377 $generated@@519) $generated@@522) $generated@@521) ($generated@@229 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@519) $generated@@522))
 :pattern ( ($generated@@83 ($generated@@298 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@137 $generated@@519 ($generated@@402 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@318 $generated@@150 $generated@@150)) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) (= ($generated@@137 $generated@@523 ($generated@@410 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@316 $generated@@523) $generated@@526))) (and ($generated@@229 ($generated@@83 ($generated@@385 $generated@@523) $generated@@526) $generated@@525) ($generated@@229 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@83 ($generated@@385 $generated@@523) $generated@@526))
 :pattern ( ($generated@@83 ($generated@@316 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@137 $generated@@523 ($generated@@410 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@150) (= (type $generated@@530) $generated@@150)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@228 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@228 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@150) (= (type $generated@@532) $generated@@150)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@228 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@228 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 Int) ) (!  (=> (= (type $generated@@533) $generated@@242) (= ($generated@@239 ($generated@@240 $generated@@533) $generated@@534) ($generated@@239 $generated@@533 $generated@@534)))
 :pattern ( ($generated@@239 ($generated@@240 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@150) (= (type $generated@@536) $generated@@66)) (= (type $generated@@537) $generated@@66)) ($generated@@229 $generated@@535 ($generated@@402 $generated@@536 $generated@@537))) (and (= ($generated@@287 ($generated@@337 ($generated@@300 $generated@@150 $generated@@150) $generated@@535)) $generated@@535) ($generated@@137 ($generated@@337 ($generated@@300 $generated@@150 $generated@@150) $generated@@535) ($generated@@402 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@229 $generated@@535 ($generated@@402 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@150) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) $generated@@66)) ($generated@@229 $generated@@538 ($generated@@410 $generated@@539 $generated@@540))) (and (= ($generated@@287 ($generated@@337 ($generated@@318 $generated@@150 $generated@@150) $generated@@538)) $generated@@538) ($generated@@137 ($generated@@337 ($generated@@318 $generated@@150 $generated@@150) $generated@@538) ($generated@@410 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@229 $generated@@538 ($generated@@410 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@66) (= (type $generated@@542) $generated@@66)) (= (type $generated@@543) $generated@@150)) ($generated@@229 $generated@@543 ($generated@@140 $generated@@541 $generated@@542))) (and (= ($generated@@287 ($generated@@337 $generated@@141 $generated@@543)) $generated@@543) ($generated@@137 ($generated@@337 $generated@@141 $generated@@543) ($generated@@140 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@229 $generated@@543 ($generated@@140 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@83 ($generated@@418 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@83 ($generated@@418 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@71)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@66) (= (type $generated@@549) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@548 $generated@@549)) $generated@@63) (= ($generated@@546 ($generated@@140 $generated@@548 $generated@@549)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 Int) ($generated@@551 Int) ) (! (= ($generated@@244 $generated@@550 $generated@@551) (* $generated@@550 $generated@@551))
 :pattern ( ($generated@@244 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@141) (= ($generated@@527 ($generated@@287 $generated@@552)) ($generated@@528 $generated@@552)))
 :pattern ( ($generated@@527 ($generated@@287 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@150) ($generated@@229 $generated@@553 ($generated@@77 0))) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@553)) $generated@@553) ($generated@@137 ($generated@@337 ($generated@@78 $generated@@150 $generated@@4) $generated@@553) ($generated@@77 0))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@77 0)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@150) (= (type $generated@@555) $generated@@66)) ($generated@@229 $generated@@554 ($generated@@248 $generated@@555))) (and (= ($generated@@287 ($generated@@337 ($generated@@78 $generated@@150 $generated@@4) $generated@@554)) $generated@@554) ($generated@@137 ($generated@@337 ($generated@@78 $generated@@150 $generated@@4) $generated@@554) ($generated@@248 $generated@@555))))
 :pattern ( ($generated@@229 $generated@@554 ($generated@@248 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@150) (= (type $generated@@557) $generated@@66)) ($generated@@229 $generated@@556 ($generated@@253 $generated@@557))) (and (= ($generated@@287 ($generated@@337 ($generated@@78 $generated@@150 $generated@@4) $generated@@556)) $generated@@556) ($generated@@137 ($generated@@337 ($generated@@78 $generated@@150 $generated@@4) $generated@@556) ($generated@@253 $generated@@557))))
 :pattern ( ($generated@@229 $generated@@556 ($generated@@253 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@150) (= (type $generated@@559) $generated@@66)) ($generated@@229 $generated@@558 ($generated@@155 $generated@@559))) (and (= ($generated@@287 ($generated@@337 ($generated@@78 $generated@@150 $generated@@2) $generated@@558)) $generated@@558) ($generated@@137 ($generated@@337 ($generated@@78 $generated@@150 $generated@@2) $generated@@558) ($generated@@155 $generated@@559))))
 :pattern ( ($generated@@229 $generated@@558 ($generated@@155 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@150) (= (type $generated@@561) $generated@@66)) ($generated@@229 $generated@@560 ($generated@@489 $generated@@561))) (and (= ($generated@@287 ($generated@@337 ($generated@@278 $generated@@150) $generated@@560)) $generated@@560) ($generated@@137 ($generated@@337 ($generated@@278 $generated@@150) $generated@@560) ($generated@@489 $generated@@561))))
 :pattern ( ($generated@@229 $generated@@560 ($generated@@489 $generated@@561)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@546 $generated@@134) $generated@@64))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@562 ($generated@@155 $generated@@563) $generated@@564) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@562 $generated@@565)))) ($generated@@264 $generated@@565 $generated@@563 $generated@@564))
 :pattern ( ($generated@@83 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@76 $generated@@562 ($generated@@155 $generated@@563) $generated@@564))
)))
(assert  (=> (<= 1 $generated@@238) (forall (($generated@@566 T@U) ($generated@@567 Int) ) (!  (=> (and (= (type $generated@@566) $generated@@242) (or ($generated@@243 $generated@@567) (and (not (= 1 $generated@@238)) (<= ($generated@@241 0) $generated@@567)))) (and (=> (not (= $generated@@567 ($generated@@241 0))) ($generated@@243 (- $generated@@567 1))) (= ($generated@@239 ($generated@@240 $generated@@566) $generated@@567) (ite (= $generated@@567 ($generated@@241 0)) 1 ($generated@@244 $generated@@567 ($generated@@239 $generated@@566 (- $generated@@567 1)))))))
 :pattern ( ($generated@@239 ($generated@@240 $generated@@566) $generated@@567))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@141) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@263 $generated@@570) (and ($generated@@139 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@66) ($generated@@76 $generated@@568 ($generated@@140 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@76 $generated@@568 ($generated@@140 $generated@@569 $generated@@571) $generated@@570))
))))) ($generated@@264 ($generated@@148 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@264 ($generated@@148 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@141) (= (type $generated@@573) $generated@@66)) (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@263 $generated@@574) (and ($generated@@139 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@66) ($generated@@76 $generated@@572 ($generated@@140 $generated@@575 $generated@@573) $generated@@574))
 :pattern ( ($generated@@76 $generated@@572 ($generated@@140 $generated@@575 $generated@@573) $generated@@574))
))))) ($generated@@264 ($generated@@149 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@264 ($generated@@149 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@150) (= (type $generated@@577) $generated@@150)) (= ($generated@@228 ($generated@@259 $generated@@576) ($generated@@259 $generated@@577)) ($generated@@259 ($generated@@228 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@228 ($generated@@259 $generated@@576) ($generated@@259 $generated@@577)))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@241 $generated@@578))) ($generated@@259 ($generated@@287 ($generated@@8 $generated@@578))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@241 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ) (! (= ($generated@@287 ($generated@@259 $generated@@579)) ($generated@@259 ($generated@@287 $generated@@579)))
 :pattern ( ($generated@@287 ($generated@@259 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@279 (type $generated@@580))))
 (=> (and (= (type $generated@@580) ($generated@@278 $generated@@581)) (= ($generated@@277 $generated@@580) 0)) (= $generated@@580 ($generated@@276 $generated@@581))))
 :pattern ( ($generated@@277 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@583)))
 (=> (and (and (= (type $generated@@582) ($generated@@78 $generated@@585 $generated@@2)) (= (type $generated@@584) $generated@@2)) (<= 0 ($generated $generated@@584))) (= ($generated@@292 ($generated@@84 $generated@@582 $generated@@583 $generated@@584)) (+ (- ($generated@@292 $generated@@582) ($generated ($generated@@83 $generated@@582 $generated@@583))) ($generated $generated@@584)))))
 :pattern ( ($generated@@292 ($generated@@84 $generated@@582 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@587) $generated@@2)) ($generated@@76 $generated@@587 $generated@@46 $generated@@586))
 :pattern ( ($generated@@76 $generated@@587 $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@589) $generated@@3)) ($generated@@76 $generated@@589 $generated@@47 $generated@@588))
 :pattern ( ($generated@@76 $generated@@589 $generated@@47 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@591) $generated@@4)) ($generated@@76 $generated@@591 $generated@@44 $generated@@590))
 :pattern ( ($generated@@76 $generated@@591 $generated@@44 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@593) $generated@@442)) ($generated@@76 $generated@@593 $generated@@45 $generated@@592))
 :pattern ( ($generated@@76 $generated@@593 $generated@@45 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@595) $generated@@150)) ($generated@@76 $generated@@595 $generated@@48 $generated@@594))
 :pattern ( ($generated@@76 $generated@@595 $generated@@48 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@278 $generated@@150)) (= (type $generated@@597) $generated@@66)) (= ($generated@@137 $generated@@596 ($generated@@489 $generated@@597)) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@277 $generated@@596))) ($generated@@229 ($generated@@490 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@490 $generated@@596 $generated@@598))
))))
 :pattern ( ($generated@@137 $generated@@596 ($generated@@489 $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 Int) ) (!  (=> (= (type $generated@@600) ($generated@@278 $generated@@150)) (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@277 $generated@@600))) (< ($generated@@528 ($generated@@337 $generated@@141 ($generated@@490 $generated@@600 $generated@@601))) ($generated@@599 $generated@@600))))
 :pattern ( ($generated@@528 ($generated@@337 $generated@@141 ($generated@@490 $generated@@600 $generated@@601))))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@300 $generated@@150 $generated@@150)) (= (type $generated@@603) $generated@@66)) (= (type $generated@@604) $generated@@66)) ($generated@@137 $generated@@602 ($generated@@402 $generated@@603 $generated@@604))) (and (and ($generated@@137 ($generated@@298 $generated@@602) ($generated@@248 $generated@@603)) ($generated@@137 ($generated@@345 $generated@@602) ($generated@@248 $generated@@604))) ($generated@@137 ($generated@@376 $generated@@602) ($generated@@248 ($generated@@140 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@137 $generated@@602 ($generated@@402 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@318 $generated@@150 $generated@@150)) (= (type $generated@@606) $generated@@66)) (= (type $generated@@607) $generated@@66)) ($generated@@137 $generated@@605 ($generated@@410 $generated@@606 $generated@@607))) (and (and ($generated@@137 ($generated@@316 $generated@@605) ($generated@@253 $generated@@606)) ($generated@@137 ($generated@@356 $generated@@605) ($generated@@253 $generated@@607))) ($generated@@137 ($generated@@384 $generated@@605) ($generated@@253 ($generated@@140 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@137 $generated@@605 ($generated@@410 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@2) ($generated@@137 $generated@@608 $generated@@46))
 :pattern ( ($generated@@137 $generated@@608 $generated@@46))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@3) ($generated@@137 $generated@@609 $generated@@47))
 :pattern ( ($generated@@137 $generated@@609 $generated@@47))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@4) ($generated@@137 $generated@@610 $generated@@44))
 :pattern ( ($generated@@137 $generated@@610 $generated@@44))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@442) ($generated@@137 $generated@@611 $generated@@45))
 :pattern ( ($generated@@137 $generated@@611 $generated@@45))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@150) ($generated@@137 $generated@@612 $generated@@48))
 :pattern ( ($generated@@137 $generated@@612 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@615) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@616) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@617) $generated@@79)) (= (type $generated@@618) ($generated@@162 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@620  (=> (not (= $generated@@613 ($generated@@241 0))) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@137 ($generated@@8 (- $generated@@613 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@613 1)) $generated@@134) (=> (and (= $generated@@614 (- $generated@@613 1)) ($generated@@76 ($generated@@8 $generated@@614) $generated@@134 $generated@@615)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (<= 0 $generated@@613) (= $generated@@614 $generated@@613))) (=> (or (<= 0 $generated@@613) (= $generated@@614 $generated@@613)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< $generated@@614 $generated@@613)) (=> (< $generated@@614 $generated@@613) (=> (and ($generated@@243 (- $generated@@613 1)) (= (ControlFlow 0 5) (- 0 4))) ($generated@@137 ($generated@@8 ($generated@@244 $generated@@613 ($generated@@239 ($generated@@240 $generated@@485) (- $generated@@613 1)))) $generated@@134))))))))))))
(let (($generated@@621  (=> (and (= $generated@@613 ($generated@@241 0)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@137 ($generated@@8 ($generated@@241 1)) $generated@@134))))
(let (($generated@@622  (=> (= $generated@@616 ($generated@@216 $generated@@617 $generated@@615 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 3) $generated@@621) (=> (= (ControlFlow 0 9) 5) $generated@@620)))))
(let (($generated@@623 true))
(let (($generated@@624  (=> (= $generated@@618 ($generated@@161 $generated@@617 $generated@@615 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@623) (=> (= (ControlFlow 0 10) 9) $generated@@622)))))
(let (($generated@@625  (=> (and (and (and ($generated@@263 $generated@@615) ($generated@@619 $generated@@615)) (<= ($generated@@241 0) $generated@@613)) (and (= 1 $generated@@238) (= (ControlFlow 0 11) 10))) $generated@@624)))
$generated@@625)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 () Int)
(declare-fun $generated@@231 (T@U Int) Int)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@233 (Int) Int)
(declare-fun $generated@@234 () T@T)
(declare-fun $generated@@235 (Int) Bool)
(declare-fun $generated@@236 (Int Int) Int)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@337 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@T) T@U)
(declare-fun $generated@@445 () T@T)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@488 () T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@493 (T@U Int) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert  (and (= ($generated@@1 $generated@@234) 17) (forall (($generated@@237 T@U) ) (! (= (type ($generated@@232 $generated@@237)) $generated@@234)
 :pattern ( ($generated@@232 $generated@@237))
))))
(assert  (=> (<= 1 $generated@@230) (forall (($generated@@238 T@U) ($generated@@239 Int) ) (!  (=> (and (= (type $generated@@238) $generated@@234) (or ($generated@@235 ($generated@@233 $generated@@239)) (and (not (= 1 $generated@@230)) (<= ($generated@@233 0) $generated@@239)))) (and (=> (not (= ($generated@@233 $generated@@239) ($generated@@233 0))) ($generated@@235 ($generated@@233 (- $generated@@239 1)))) (= ($generated@@231 ($generated@@232 $generated@@238) ($generated@@233 $generated@@239)) (ite (= ($generated@@233 $generated@@239) ($generated@@233 0)) 1 ($generated@@236 ($generated@@233 $generated@@239) ($generated@@233 ($generated@@231 ($generated@@232 $generated@@238) ($generated@@233 (- $generated@@239 1)))))))))
 :weight 3
 :pattern ( ($generated@@231 ($generated@@232 $generated@@238) ($generated@@233 $generated@@239)))
))))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@66)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@243) $generated@@66)) (= ($generated@@141 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@154) ($generated@@0 ($generated@@83 $generated@@242 $generated@@244))) ($generated@@221 $generated@@244 $generated@@243))
 :pattern ( ($generated@@83 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@141 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@66)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@248) $generated@@66)) (= ($generated@@141 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@154) ($generated@@0 ($generated@@83 $generated@@247 $generated@@249))) ($generated@@221 $generated@@249 $generated@@248))
 :pattern ( ($generated@@83 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@141 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@233 $generated@@250) $generated@@250)
 :pattern ( ($generated@@233 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@66) (= (type $generated@@258) $generated@@66)) (= (type $generated@@259) $generated@@154)) (= (type $generated@@260) $generated@@154)) (= (type $generated@@261) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@255 $generated@@261)) (= ($generated@@76 ($generated@@220 $generated@@259 $generated@@260) ($generated@@144 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@259 $generated@@260) ($generated@@144 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@70)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@145) (= ($generated@@143 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@145) ($generated@@143 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@154) (= (type $generated@@267) $generated@@154)) (= $generated@@265 ($generated@@220 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@143 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 18)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@2) (= ($generated@@141 $generated@@276 $generated@@138) (<= ($generated@@233 0) ($generated $generated@@276))))
 :pattern ( ($generated@@141 $generated@@276 $generated@@138))
)))
(assert  (=> (<= 1 $generated@@230) (forall (($generated@@277 T@U) ($generated@@278 Int) ) (!  (=> (and (= (type $generated@@277) $generated@@234) (or ($generated@@235 $generated@@278) (and (not (= 1 $generated@@230)) (<= ($generated@@233 0) $generated@@278)))) (<= ($generated@@233 0) ($generated@@231 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@231 $generated@@277 $generated@@278))
))))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@154)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@66) (= (type $generated@@283) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@256 ($generated@@279 $generated@@281) $generated@@282 $generated@@283) ($generated@@76 $generated@@281 $generated@@282 $generated@@283)))
 :pattern ( ($generated@@256 ($generated@@279 $generated@@281) $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@285) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@286) $generated@@154)) (= (type $generated@@287) $generated@@66)) ($generated@@134 $generated@@284 $generated@@285)) ($generated@@256 $generated@@286 $generated@@287 $generated@@284)) ($generated@@256 $generated@@286 $generated@@287 $generated@@285))
 :pattern ( ($generated@@134 $generated@@284 $generated@@285) ($generated@@256 $generated@@286 $generated@@287 $generated@@284))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@288) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@289) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@291) $generated@@66)) ($generated@@134 $generated@@288 $generated@@289)) ($generated@@76 $generated@@290 $generated@@291 $generated@@288)) ($generated@@76 $generated@@290 $generated@@291 $generated@@289))
 :pattern ( ($generated@@134 $generated@@288 $generated@@289) ($generated@@76 $generated@@290 $generated@@291 $generated@@288))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@78 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@81 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@78 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@83 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 19)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@78 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@83 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@83 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 20)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@78 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@83 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@83 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@81 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@78 $generated@@335 $generated@@2)) (= ($generated@@160 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@83 $generated@@334 $generated@@336))) (<= ($generated ($generated@@83 $generated@@334 $generated@@336)) ($generated@@292 $generated@@334))))
 :pattern ( ($generated@@83 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@160 $generated@@334))
)))
(assert (forall (($generated@@338 T@T) ($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@154) ($generated@@221 $generated@@340 $generated@@138)) (and (= ($generated@@279 ($generated@@337 $generated@@2 $generated@@340)) $generated@@340) ($generated@@141 ($generated@@337 $generated@@2 $generated@@340) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@340 $generated@@138))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@302 (type $generated@@341))))
(let (($generated@@343 ($generated@@301 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@300 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@299 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@298 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@298 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@302 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@302 (type $generated@@348))))
(let (($generated@@350 ($generated@@301 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@300 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@299 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@320 (type $generated@@352))))
(let (($generated@@354 ($generated@@319 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@318 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@317 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@83 ($generated@@316 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@316 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@320 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@78 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@320 (type $generated@@359))))
(let (($generated@@361 ($generated@@319 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@318 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@317 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@83 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@364) $generated@@66)) (= ($generated@@141 $generated@@363 ($generated@@159 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@363 $generated@@365)))) ($generated@@221 $generated@@365 $generated@@364))
 :pattern ( ($generated@@83 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@141 $generated@@363 ($generated@@159 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@367) $generated@@66)) (= (type $generated@@368) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@366 ($generated@@240 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@154) ($generated@@0 ($generated@@83 $generated@@366 $generated@@369))) ($generated@@256 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@83 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@76 $generated@@366 ($generated@@240 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@371) $generated@@66)) (= (type $generated@@372) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@370 ($generated@@245 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@154) ($generated@@0 ($generated@@83 $generated@@370 $generated@@373))) ($generated@@256 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@83 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@76 $generated@@370 ($generated@@245 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated ($generated@@83 ($generated@@293 $generated@@375) $generated@@374)) 0))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@83 ($generated@@293 $generated@@375) $generated@@374)))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@302 (type $generated@@379))))
(let (($generated@@381 ($generated@@301 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@78 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@300 $generated@@154 $generated@@154)) (= (type $generated@@383) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@83 ($generated@@298 $generated@@382) ($generated@@152 ($generated@@337 $generated@@145 $generated@@383)))) (= ($generated@@83 ($generated@@377 $generated@@382) ($generated@@152 ($generated@@337 $generated@@145 $generated@@383))) ($generated@@153 ($generated@@337 $generated@@145 $generated@@383))))))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert  (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@384 $generated@@386))
)) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@320 (type $generated@@387))))
(let (($generated@@389 ($generated@@319 (type $generated@@387))))
(= (type ($generated@@385 $generated@@387)) ($generated@@78 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@385 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@318 $generated@@154 $generated@@154)) (= (type $generated@@391) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@384 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@83 ($generated@@316 $generated@@390) ($generated@@152 ($generated@@337 $generated@@145 $generated@@391)))) (= ($generated@@83 ($generated@@385 $generated@@390) ($generated@@152 ($generated@@337 $generated@@145 $generated@@391))) ($generated@@153 ($generated@@337 $generated@@145 $generated@@391))))))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@301 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@300 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@83 ($generated@@298 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@83 ($generated@@377 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@83 ($generated@@298 $generated@@392) $generated@@396))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@319 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@318 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@83 ($generated@@356 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@83 ($generated@@316 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@83 ($generated@@385 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@83 ($generated@@316 $generated@@397) $generated@@401))
 :pattern ( ($generated@@83 ($generated@@385 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@83 ($generated@@356 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@66)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@300 $generated@@154 $generated@@154)) (= (type $generated@@406) $generated@@66)) (= (type $generated@@407) $generated@@66)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@298 $generated@@405) $generated@@409))) (and ($generated@@256 ($generated@@83 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@256 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@83 ($generated@@298 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@76 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@66)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@318 $generated@@154 $generated@@154)) (= (type $generated@@414) $generated@@66)) (= (type $generated@@415) $generated@@66)) (= (type $generated@@416) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@316 $generated@@413) $generated@@417))) (and ($generated@@256 ($generated@@83 ($generated@@385 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@256 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@83 ($generated@@385 $generated@@413) $generated@@417))
 :pattern ( ($generated@@83 ($generated@@316 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@76 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@418) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@419) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@420) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@418 $generated@@420))) (and ($generated@@134 $generated@@418 $generated@@419) ($generated@@134 $generated@@419 $generated@@420))) ($generated@@134 $generated@@418 $generated@@420))
 :pattern ( ($generated@@134 $generated@@418 $generated@@419) ($generated@@134 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@T) ) (! (= (type ($generated@@421 $generated@@422)) ($generated@@78 $generated@@422 $generated@@4))
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@320 (type $generated@@423))))
(let (($generated@@425 ($generated@@319 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@318 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@317 $generated@@425 $generated@@424)) (= ($generated@@316 $generated@@423) ($generated@@421 $generated@@425))))))
 :pattern ( ($generated@@316 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@320 (type $generated@@426))))
(let (($generated@@428 ($generated@@319 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@318 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@317 $generated@@428 $generated@@427)) (= ($generated@@356 $generated@@426) ($generated@@421 $generated@@427))))))
 :pattern ( ($generated@@356 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@320 (type $generated@@429))))
(let (($generated@@431 ($generated@@319 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@318 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@317 $generated@@431 $generated@@430)) (= ($generated@@384 $generated@@429) ($generated@@421 $generated@@154))))))
 :pattern ( ($generated@@384 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@302 (type $generated@@432))))
(let (($generated@@434 ($generated@@301 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@300 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@299 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@154) (= (type $generated@@436) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@376 $generated@@432) ($generated@@279 ($generated@@220 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@376 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@320 (type $generated@@437))))
(let (($generated@@439 ($generated@@319 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@318 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@317 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@154) (= (type $generated@@441) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@384 $generated@@437) ($generated@@279 ($generated@@220 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@384 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@154) ($generated@@221 $generated@@442 $generated@@46)) (and (= ($generated@@279 ($generated@@337 $generated@@2 $generated@@442)) $generated@@442) ($generated@@141 ($generated@@337 $generated@@2 $generated@@442) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@442 $generated@@46))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@154) ($generated@@221 $generated@@443 $generated@@47)) (and (= ($generated@@279 ($generated@@337 $generated@@3 $generated@@443)) $generated@@443) ($generated@@141 ($generated@@337 $generated@@3 $generated@@443) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@443 $generated@@47))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@154) ($generated@@221 $generated@@444 $generated@@44)) (and (= ($generated@@279 ($generated@@337 $generated@@4 $generated@@444)) $generated@@444) ($generated@@141 ($generated@@337 $generated@@4 $generated@@444) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@444 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@445) 21))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@154) ($generated@@221 $generated@@446 $generated@@45)) (and (= ($generated@@279 ($generated@@337 $generated@@445 $generated@@446)) $generated@@446) ($generated@@141 ($generated@@337 $generated@@445 $generated@@446) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@446 $generated@@45))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (= (type $generated@@448) $generated@@66) (= ($generated@@221 ($generated@@279 $generated@@447) $generated@@448) ($generated@@141 $generated@@447 $generated@@448)))
 :pattern ( ($generated@@221 ($generated@@279 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@81 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@78 $generated@@450 $generated@@2)) (<= 0 ($generated@@292 $generated@@449))))
 :pattern ( ($generated@@292 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@271 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@270 $generated@@452)) (<= 0 ($generated@@269 $generated@@451))))
 :pattern ( ($generated@@269 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@66)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@453 ($generated@@402 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@402 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@457 ($generated@@402 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@402 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@74 ($generated@@402 $generated@@461 $generated@@462)) $generated@@58))
 :pattern ( ($generated@@402 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@410 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@410 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@410 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@410 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@74 ($generated@@410 $generated@@471 $generated@@472)) $generated@@59))
 :pattern ( ($generated@@410 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@154) (= (type $generated@@474) $generated@@154)) (= ($generated@@262 ($generated@@220 $generated@@473 $generated@@474)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@66) (= (type $generated@@478) $generated@@66)) (= ($generated@@475 ($generated@@144 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@144 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@66) (= (type $generated@@482) $generated@@66)) (= ($generated@@479 ($generated@@144 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@144 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@154) (= (type $generated@@484) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@220 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@154) (= (type $generated@@486) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@220 $generated@@485 $generated@@486))
)))
(assert  (and (forall (($generated@@489 T@U) ) (! (= (type ($generated@@487 $generated@@489)) $generated@@234)
 :pattern ( ($generated@@487 $generated@@489))
)) (= (type $generated@@488) $generated@@234)))
(assert (forall (($generated@@490 T@U) ($generated@@491 Int) ) (!  (=> (= (type $generated@@490) $generated@@234) (= ($generated@@231 $generated@@490 $generated@@491) ($generated@@231 $generated@@488 $generated@@491)))
 :pattern ( ($generated@@231 ($generated@@487 $generated@@490) $generated@@491))
)))
(assert  (and (forall (($generated@@494 T@U) ) (! (= (type ($generated@@492 $generated@@494)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@494))
)) (forall (($generated@@495 T@U) ($generated@@496 Int) ) (! (let (($generated@@497 ($generated@@271 (type $generated@@495))))
(= (type ($generated@@493 $generated@@495 $generated@@496)) $generated@@497))
 :pattern ( ($generated@@493 $generated@@495 $generated@@496))
))))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@270 $generated@@154)) (= (type $generated@@499) $generated@@66)) (= (type $generated@@500) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@498 ($generated@@492 $generated@@499) $generated@@500) (forall (($generated@@501 Int) ) (!  (=> (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@269 $generated@@498))) ($generated@@256 ($generated@@493 $generated@@498 $generated@@501) $generated@@499 $generated@@500))
 :pattern ( ($generated@@493 $generated@@498 $generated@@501))
))))
 :pattern ( ($generated@@76 $generated@@498 ($generated@@492 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@502 ($generated@@77 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@77 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@504 ($generated@@240 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@240 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@74 ($generated@@240 $generated@@507)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@508 ($generated@@245 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@245 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@74 ($generated@@245 $generated@@511)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@512 ($generated@@159 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@159 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@515)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@66)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@516 ($generated@@492 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@492 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@66) (= ($generated@@74 ($generated@@492 $generated@@519)) $generated@@57))
 :pattern ( ($generated@@492 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
(= ($generated@@337 $generated@@521 ($generated@@279 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@279 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@300 $generated@@154 $generated@@154)) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) (= ($generated@@141 $generated@@522 ($generated@@402 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@298 $generated@@522) $generated@@525))) (and ($generated@@221 ($generated@@83 ($generated@@377 $generated@@522) $generated@@525) $generated@@524) ($generated@@221 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@522) $generated@@525))
 :pattern ( ($generated@@83 ($generated@@298 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@141 $generated@@522 ($generated@@402 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@318 $generated@@154 $generated@@154)) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@66)) (= ($generated@@141 $generated@@526 ($generated@@410 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@316 $generated@@526) $generated@@529))) (and ($generated@@221 ($generated@@83 ($generated@@385 $generated@@526) $generated@@529) $generated@@528) ($generated@@221 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@83 ($generated@@385 $generated@@526) $generated@@529))
 :pattern ( ($generated@@83 ($generated@@316 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@141 $generated@@526 ($generated@@410 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@154) (= (type $generated@@533) $generated@@154)) (< ($generated@@530 $generated@@532) ($generated@@531 ($generated@@220 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@220 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@154) (= (type $generated@@535) $generated@@154)) (< ($generated@@530 $generated@@535) ($generated@@531 ($generated@@220 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@220 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 Int) ) (!  (=> (= (type $generated@@536) $generated@@234) (= ($generated@@231 ($generated@@232 $generated@@536) $generated@@537) ($generated@@231 $generated@@536 $generated@@537)))
 :pattern ( ($generated@@231 ($generated@@232 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@154) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) $generated@@66)) ($generated@@221 $generated@@538 ($generated@@402 $generated@@539 $generated@@540))) (and (= ($generated@@279 ($generated@@337 ($generated@@300 $generated@@154 $generated@@154) $generated@@538)) $generated@@538) ($generated@@141 ($generated@@337 ($generated@@300 $generated@@154 $generated@@154) $generated@@538) ($generated@@402 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@538 ($generated@@402 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@66)) (= (type $generated@@543) $generated@@66)) ($generated@@221 $generated@@541 ($generated@@410 $generated@@542 $generated@@543))) (and (= ($generated@@279 ($generated@@337 ($generated@@318 $generated@@154 $generated@@154) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@337 ($generated@@318 $generated@@154 $generated@@154) $generated@@541) ($generated@@410 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@410 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@66) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) $generated@@154)) ($generated@@221 $generated@@546 ($generated@@144 $generated@@544 $generated@@545))) (and (= ($generated@@279 ($generated@@337 $generated@@145 $generated@@546)) $generated@@546) ($generated@@141 ($generated@@337 $generated@@145 $generated@@546) ($generated@@144 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@221 $generated@@546 ($generated@@144 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (not ($generated@@0 ($generated@@83 ($generated@@421 $generated@@548) $generated@@547))))
 :pattern ( (let (($generated@@548 (type $generated@@547)))
($generated@@83 ($generated@@421 $generated@@548) $generated@@547)))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@71)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@66) (= (type $generated@@552) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@551 $generated@@552)) $generated@@63) (= ($generated@@549 ($generated@@144 $generated@@551 $generated@@552)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 Int) ($generated@@554 Int) ) (! (= ($generated@@236 $generated@@553 $generated@@554) (* $generated@@553 $generated@@554))
 :pattern ( ($generated@@236 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@145) (= ($generated@@530 ($generated@@279 $generated@@555)) ($generated@@531 $generated@@555)))
 :pattern ( ($generated@@530 ($generated@@279 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@154) ($generated@@221 $generated@@556 ($generated@@77 0))) (and (= ($generated@@279 ($generated@@337 $generated@@2 $generated@@556)) $generated@@556) ($generated@@141 ($generated@@337 ($generated@@78 $generated@@154 $generated@@4) $generated@@556) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@556 ($generated@@77 0)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@66)) ($generated@@221 $generated@@557 ($generated@@240 $generated@@558))) (and (= ($generated@@279 ($generated@@337 ($generated@@78 $generated@@154 $generated@@4) $generated@@557)) $generated@@557) ($generated@@141 ($generated@@337 ($generated@@78 $generated@@154 $generated@@4) $generated@@557) ($generated@@240 $generated@@558))))
 :pattern ( ($generated@@221 $generated@@557 ($generated@@240 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@154) (= (type $generated@@560) $generated@@66)) ($generated@@221 $generated@@559 ($generated@@245 $generated@@560))) (and (= ($generated@@279 ($generated@@337 ($generated@@78 $generated@@154 $generated@@4) $generated@@559)) $generated@@559) ($generated@@141 ($generated@@337 ($generated@@78 $generated@@154 $generated@@4) $generated@@559) ($generated@@245 $generated@@560))))
 :pattern ( ($generated@@221 $generated@@559 ($generated@@245 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@154) (= (type $generated@@562) $generated@@66)) ($generated@@221 $generated@@561 ($generated@@159 $generated@@562))) (and (= ($generated@@279 ($generated@@337 ($generated@@78 $generated@@154 $generated@@2) $generated@@561)) $generated@@561) ($generated@@141 ($generated@@337 ($generated@@78 $generated@@154 $generated@@2) $generated@@561) ($generated@@159 $generated@@562))))
 :pattern ( ($generated@@221 $generated@@561 ($generated@@159 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@66)) ($generated@@221 $generated@@563 ($generated@@492 $generated@@564))) (and (= ($generated@@279 ($generated@@337 ($generated@@270 $generated@@154) $generated@@563)) $generated@@563) ($generated@@141 ($generated@@337 ($generated@@270 $generated@@154) $generated@@563) ($generated@@492 $generated@@564))))
 :pattern ( ($generated@@221 $generated@@563 ($generated@@492 $generated@@564)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@549 $generated@@138) $generated@@64))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@565 ($generated@@159 $generated@@566) $generated@@567) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@565 $generated@@568)))) ($generated@@256 $generated@@568 $generated@@566 $generated@@567))
 :pattern ( ($generated@@83 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@76 $generated@@565 ($generated@@159 $generated@@566) $generated@@567))
)))
(assert  (=> (<= 1 $generated@@230) (forall (($generated@@569 T@U) ($generated@@570 Int) ) (!  (=> (and (= (type $generated@@569) $generated@@234) (or ($generated@@235 $generated@@570) (and (not (= 1 $generated@@230)) (<= ($generated@@233 0) $generated@@570)))) (and (=> (not (= $generated@@570 ($generated@@233 0))) ($generated@@235 (- $generated@@570 1))) (= ($generated@@231 ($generated@@232 $generated@@569) $generated@@570) (ite (= $generated@@570 ($generated@@233 0)) 1 ($generated@@236 $generated@@570 ($generated@@231 $generated@@569 (- $generated@@570 1)))))))
 :pattern ( ($generated@@231 ($generated@@232 $generated@@569) $generated@@570))
))))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@145) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@255 $generated@@573) (and ($generated@@143 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@66) ($generated@@76 $generated@@571 ($generated@@144 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@76 $generated@@571 ($generated@@144 $generated@@572 $generated@@574) $generated@@573))
))))) ($generated@@256 ($generated@@152 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@256 ($generated@@152 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@145) (= (type $generated@@576) $generated@@66)) (= (type $generated@@577) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@255 $generated@@577) (and ($generated@@143 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@66) ($generated@@76 $generated@@575 ($generated@@144 $generated@@578 $generated@@576) $generated@@577))
 :pattern ( ($generated@@76 $generated@@575 ($generated@@144 $generated@@578 $generated@@576) $generated@@577))
))))) ($generated@@256 ($generated@@153 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@256 ($generated@@153 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@154)) (= ($generated@@220 ($generated@@251 $generated@@579) ($generated@@251 $generated@@580)) ($generated@@251 ($generated@@220 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@220 ($generated@@251 $generated@@579) ($generated@@251 $generated@@580)))
)))
(assert (forall (($generated@@581 Int) ) (! (= ($generated@@279 ($generated@@8 ($generated@@233 $generated@@581))) ($generated@@251 ($generated@@279 ($generated@@8 $generated@@581))))
 :pattern ( ($generated@@279 ($generated@@8 ($generated@@233 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ) (! (= ($generated@@279 ($generated@@251 $generated@@582)) ($generated@@251 ($generated@@279 $generated@@582)))
 :pattern ( ($generated@@279 ($generated@@251 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@271 (type $generated@@583))))
 (=> (and (= (type $generated@@583) ($generated@@270 $generated@@584)) (= ($generated@@269 $generated@@583) 0)) (= $generated@@583 ($generated@@268 $generated@@584))))
 :pattern ( ($generated@@269 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@586)))
 (=> (and (and (= (type $generated@@585) ($generated@@78 $generated@@588 $generated@@2)) (= (type $generated@@587) $generated@@2)) (<= 0 ($generated $generated@@587))) (= ($generated@@292 ($generated@@84 $generated@@585 $generated@@586 $generated@@587)) (+ (- ($generated@@292 $generated@@585) ($generated ($generated@@83 $generated@@585 $generated@@586))) ($generated $generated@@587)))))
 :pattern ( ($generated@@292 ($generated@@84 $generated@@585 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@590) $generated@@2)) ($generated@@76 $generated@@590 $generated@@46 $generated@@589))
 :pattern ( ($generated@@76 $generated@@590 $generated@@46 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@592) $generated@@3)) ($generated@@76 $generated@@592 $generated@@47 $generated@@591))
 :pattern ( ($generated@@76 $generated@@592 $generated@@47 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@594) $generated@@4)) ($generated@@76 $generated@@594 $generated@@44 $generated@@593))
 :pattern ( ($generated@@76 $generated@@594 $generated@@44 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@596) $generated@@445)) ($generated@@76 $generated@@596 $generated@@45 $generated@@595))
 :pattern ( ($generated@@76 $generated@@596 $generated@@45 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@598) $generated@@154)) ($generated@@76 $generated@@598 $generated@@48 $generated@@597))
 :pattern ( ($generated@@76 $generated@@598 $generated@@48 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@270 $generated@@154)) (= (type $generated@@600) $generated@@66)) (= ($generated@@141 $generated@@599 ($generated@@492 $generated@@600)) (forall (($generated@@601 Int) ) (!  (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@269 $generated@@599))) ($generated@@221 ($generated@@493 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@493 $generated@@599 $generated@@601))
))))
 :pattern ( ($generated@@141 $generated@@599 ($generated@@492 $generated@@600)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 Int) ) (!  (=> (= (type $generated@@603) ($generated@@270 $generated@@154)) (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@269 $generated@@603))) (< ($generated@@531 ($generated@@337 $generated@@145 ($generated@@493 $generated@@603 $generated@@604))) ($generated@@602 $generated@@603))))
 :pattern ( ($generated@@531 ($generated@@337 $generated@@145 ($generated@@493 $generated@@603 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@300 $generated@@154 $generated@@154)) (= (type $generated@@606) $generated@@66)) (= (type $generated@@607) $generated@@66)) ($generated@@141 $generated@@605 ($generated@@402 $generated@@606 $generated@@607))) (and (and ($generated@@141 ($generated@@298 $generated@@605) ($generated@@240 $generated@@606)) ($generated@@141 ($generated@@345 $generated@@605) ($generated@@240 $generated@@607))) ($generated@@141 ($generated@@376 $generated@@605) ($generated@@240 ($generated@@144 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@141 $generated@@605 ($generated@@402 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@318 $generated@@154 $generated@@154)) (= (type $generated@@609) $generated@@66)) (= (type $generated@@610) $generated@@66)) ($generated@@141 $generated@@608 ($generated@@410 $generated@@609 $generated@@610))) (and (and ($generated@@141 ($generated@@316 $generated@@608) ($generated@@245 $generated@@609)) ($generated@@141 ($generated@@356 $generated@@608) ($generated@@245 $generated@@610))) ($generated@@141 ($generated@@384 $generated@@608) ($generated@@245 ($generated@@144 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@141 $generated@@608 ($generated@@410 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@2) ($generated@@141 $generated@@611 $generated@@46))
 :pattern ( ($generated@@141 $generated@@611 $generated@@46))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@3) ($generated@@141 $generated@@612 $generated@@47))
 :pattern ( ($generated@@141 $generated@@612 $generated@@47))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@4) ($generated@@141 $generated@@613 $generated@@44))
 :pattern ( ($generated@@141 $generated@@613 $generated@@44))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@445) ($generated@@141 $generated@@614 $generated@@45))
 :pattern ( ($generated@@141 $generated@@614 $generated@@45))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@154) ($generated@@141 $generated@@615 $generated@@48))
 :pattern ( ($generated@@141 $generated@@615 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () Int)
(assert  (and (and (and (= (type $generated@@622) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@625) $generated@@79)) (= (type $generated@@626) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@627) ($generated@@166 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@629  (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@616 ($generated@@236 ($generated@@231 ($generated@@232 ($generated@@232 $generated@@488)) $generated@@617) $generated@@618)))))
(let (($generated@@630  (=> (not (= $generated@@617 ($generated@@233 0))) (and (=> (= (ControlFlow 0 4) (- 0 9)) ($generated@@141 ($generated@@8 (- $generated@@617 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (- $generated@@617 1)) $generated@@138) (=> (= $generated@@619 (- $generated@@617 1)) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@141 ($generated@@8 ($generated@@236 $generated@@618 $generated@@617)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@236 $generated@@618 $generated@@617)) $generated@@138) (=> (= $generated@@620 ($generated@@236 $generated@@618 $generated@@617)) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 $generated@@617) (= $generated@@619 $generated@@617))) (=> (or (<= 0 $generated@@617) (= $generated@@619 $generated@@617)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (or (<= 0 $generated@@618) (< $generated@@619 $generated@@617)) (= $generated@@620 $generated@@618))) (=> (or (or (<= 0 $generated@@618) (< $generated@@619 $generated@@617)) (= $generated@@620 $generated@@618)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (< $generated@@619 $generated@@617) (and (= $generated@@619 $generated@@617) (< $generated@@620 $generated@@618)))) (=> (or (< $generated@@619 $generated@@617) (and (= $generated@@619 $generated@@617) (< $generated@@620 $generated@@618))) (=> (<= ($generated@@233 0) $generated@@621) (=> (and (and (and (and ($generated@@255 $generated@@622) ($generated@@623 $generated@@622)) (<= ($generated@@233 0) $generated@@624)) (and ($generated@@235 $generated@@619) (= $generated@@624 ($generated@@236 ($generated@@231 ($generated@@232 ($generated@@232 $generated@@488)) $generated@@619) $generated@@620)))) (and (and (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@79) (=> (and (not (= $generated@@631 $generated@@625)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@626 $generated@@631) $generated@@60))) (= ($generated@@83 $generated@@622 $generated@@631) ($generated@@83 $generated@@626 $generated@@631))))
 :pattern ( ($generated@@83 $generated@@622 $generated@@631))
)) ($generated@@134 $generated@@626 $generated@@622)) (and (= $generated@@616 $generated@@624) (= (ControlFlow 0 4) 2)))) $generated@@629)))))))))))))))))
(let (($generated@@632  (=> (= $generated@@617 ($generated@@233 0)) (=> (and (= $generated@@616 $generated@@618) (= (ControlFlow 0 3) 2)) $generated@@629))))
(let (($generated@@633  (=> (= $generated@@627 ($generated@@165 $generated@@625 $generated@@626 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 3) $generated@@632) (=> (= (ControlFlow 0 10) 4) $generated@@630)))))
(let (($generated@@634  (=> (and (and (and ($generated@@255 $generated@@626) ($generated@@623 $generated@@626)) (<= ($generated@@233 0) $generated@@617)) (and (and (<= ($generated@@233 0) $generated@@618) (<= ($generated@@233 0) $generated@@628)) (and (= 2 $generated@@230) (= (ControlFlow 0 11) 10)))) $generated@@633)))
$generated@@634))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@241 () Int)
(declare-fun $generated@@242 (T@U Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@245 () T@T)
(declare-fun $generated@@246 (Int) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@255 (T@U Int) Int)
(declare-fun $generated@@256 (Int) Bool)
(declare-fun $generated@@257 (Int Int) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@T) T@U)
(declare-fun $generated@@469 () T@T)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@512 () T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@519 (T@U Int) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@556 (T@U) Int)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@630 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@137 $generated@@138 $generated@@139)) (forall (($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@138 $generated@@140) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60))
)))
 :pattern ( ($generated@@137 $generated@@138 $generated@@139))
)))
(assert (= (type $generated@@141) $generated@@69))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@142 $generated@@141 $generated@@143))
 :pattern ( ($generated@@79 $generated@@142 $generated@@141 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@82)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@82) (= (type $generated@@147) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@146 $generated@@144 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@80 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@152) 14) (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@153 $generated@@154)) $generated@@69)
 :pattern ( ($generated@@151 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@69) (= (type $generated@@156) $generated@@69)) (= (type $generated@@157) $generated@@152)) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156))) ($generated@@150 $generated@@157))
 :pattern ( ($generated@@150 $generated@@157) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156)))
)))
(assert  (and (and (= ($generated@@1 $generated@@161) 15) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@162))
))) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@161)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@152) (= (type $generated@@165) $generated@@152)) true) (= ($generated@@158 $generated@@164 $generated@@165)  (and (= ($generated@@159 $generated@@164) ($generated@@159 $generated@@165)) (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)))))
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@69)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@170) $generated@@69)) ($generated@@148 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@148 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@69)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@82) (= ($generated@@148 $generated@@173 $generated@@144)  (or (= $generated@@173 $generated@@145) (= ($generated@@171 $generated@@173) $generated@@144))))
 :pattern ( ($generated@@148 $generated@@173 $generated@@144))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@82 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@72 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@82) (= (type $generated@@224) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@225) ($generated@@71 $generated@@4))) (= (type $generated@@227) $generated@@82)) (= (type $generated@@228) ($generated@@71 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (= (type $generated@@230) $generated@@69))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@82) (= (type $generated@@232) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@231 $generated@@230 $generated@@232) ($generated@@79 $generated@@231 $generated@@144 $generated@@232)))
 :pattern ( ($generated@@79 $generated@@231 $generated@@230 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@152)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@69) (= (type $generated@@238) $generated@@69)) (= (type $generated@@239) $generated@@161)) (= (type $generated@@240) $generated@@161)) (= ($generated@@148 ($generated@@233 $generated@@239 $generated@@240) ($generated@@151 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@148 ($generated@@233 $generated@@239 $generated@@240) ($generated@@151 $generated@@237 $generated@@238)))
)))
(assert  (and (and (= ($generated@@1 $generated@@245) 17) (forall (($generated@@248 T@U) ) (! (= (type ($generated@@243 $generated@@248)) $generated@@245)
 :pattern ( ($generated@@243 $generated@@248))
))) (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@247 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@247 $generated@@249))
))))
(assert  (=> (<= 1 $generated@@241) (forall (($generated@@251 T@U) ($generated@@252 Int) ) (!  (=> (and (= (type $generated@@251) $generated@@245) (or ($generated@@246 ($generated@@244 $generated@@252)) (and (not (= 1 $generated@@241)) (<= ($generated@@244 0) $generated@@252)))) (and (=> (not ($generated@@0 ($generated@@247 ($generated@@11 (< $generated@@252 2))))) (=> (not ($generated@@0 ($generated@@247 ($generated@@11 false)))) (and ($generated@@246 ($generated@@244 (- $generated@@252 2))) ($generated@@246 ($generated@@244 (- $generated@@252 1)))))) (= ($generated@@242 ($generated@@243 $generated@@251) ($generated@@244 $generated@@252)) (ite (< $generated@@252 2) $generated@@252 (ite false 8 (+ ($generated@@242 ($generated@@243 $generated@@251) ($generated@@244 (- $generated@@252 2))) ($generated@@242 ($generated@@243 $generated@@251) ($generated@@244 (- $generated@@252 1)))))))))
 :weight 3
 :pattern ( ($generated@@242 ($generated@@243 $generated@@251) ($generated@@244 $generated@@252)))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@152) (= (type $generated@@254) $generated@@152)) (= ($generated@@158 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@158 $generated@@253 $generated@@254))
)))
(assert  (=> (<= 1 $generated@@241) (forall (($generated@@258 T@U) ($generated@@259 Int) ) (!  (=> (and (= (type $generated@@258) $generated@@245) (or ($generated@@256 ($generated@@244 $generated@@259)) (and (not (= 1 $generated@@241)) (<= ($generated@@244 0) $generated@@259)))) (and (=> (not (= ($generated@@244 $generated@@259) ($generated@@244 0))) ($generated@@256 ($generated@@244 (- $generated@@259 1)))) (= ($generated@@255 ($generated@@243 $generated@@258) ($generated@@244 $generated@@259)) (ite (= ($generated@@244 $generated@@259) ($generated@@244 0)) 1 ($generated@@257 ($generated@@244 $generated@@259) ($generated@@244 ($generated@@255 ($generated@@243 $generated@@258) ($generated@@244 (- $generated@@259 1)))))))))
 :weight 3
 :pattern ( ($generated@@255 ($generated@@243 $generated@@258) ($generated@@244 $generated@@259)))
))))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@69)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@263) $generated@@69)) (= ($generated@@148 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@161) ($generated@@0 ($generated@@86 $generated@@262 $generated@@264))) ($generated@@234 $generated@@264 $generated@@263))
 :pattern ( ($generated@@86 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@148 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@69)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@268) $generated@@69)) (= ($generated@@148 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@161) ($generated@@0 ($generated@@86 $generated@@267 $generated@@269))) ($generated@@234 $generated@@269 $generated@@268))
 :pattern ( ($generated@@86 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@148 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@244 $generated@@270) $generated@@270)
 :pattern ( ($generated@@244 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@247 $generated@@271) $generated@@271)
 :pattern ( ($generated@@247 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@69) (= (type $generated@@275) $generated@@69)) (= (type $generated@@276) $generated@@161)) (= (type $generated@@277) $generated@@161)) (= (type $generated@@278) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@272 $generated@@278)) (= ($generated@@79 ($generated@@233 $generated@@276 $generated@@277) ($generated@@151 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@79 ($generated@@233 $generated@@276 $generated@@277) ($generated@@151 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@73)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@152) (= ($generated@@150 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@62)))
 :pattern ( ($generated@@150 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@152) ($generated@@150 $generated@@282)) (exists (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (and (and (= (type $generated@@283) $generated@@161) (= (type $generated@@284) $generated@@161)) (= $generated@@282 ($generated@@233 $generated@@283 $generated@@284)))
 :no-pattern (type $generated@@283)
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
)))
 :pattern ( ($generated@@150 $generated@@282))
)))
(assert  (and (and (forall (($generated@@289 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@289)) 18)) (forall (($generated@@290 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@287 $generated@@290))
))) (forall (($generated@@291 T@T) ) (! (= (type ($generated@@285 $generated@@291)) ($generated@@287 $generated@@291))
 :pattern ( ($generated@@285 $generated@@291))
))))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@292)) 0)
 :pattern ( ($generated@@285 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@2) (= ($generated@@148 $generated@@293 $generated@@141) (<= ($generated@@244 0) ($generated $generated@@293))))
 :pattern ( ($generated@@148 $generated@@293 $generated@@141))
)))
(assert  (=> (<= 1 $generated@@241) (forall (($generated@@294 T@U) ($generated@@295 Int) ) (!  (=> (and (= (type $generated@@294) $generated@@245) (or ($generated@@246 $generated@@295) (and (not (= 1 $generated@@241)) (<= ($generated@@244 0) $generated@@295)))) (<= ($generated@@244 0) ($generated@@242 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@242 $generated@@294 $generated@@295))
))))
(assert  (=> (<= 1 $generated@@241) (forall (($generated@@296 T@U) ($generated@@297 Int) ) (!  (=> (and (= (type $generated@@296) $generated@@245) (or ($generated@@256 $generated@@297) (and (not (= 1 $generated@@241)) (<= ($generated@@244 0) $generated@@297)))) (<= ($generated@@244 0) ($generated@@255 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@255 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@161)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@69) (= (type $generated@@302) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@273 ($generated@@298 $generated@@300) $generated@@301 $generated@@302) ($generated@@79 $generated@@300 $generated@@301 $generated@@302)))
 :pattern ( ($generated@@273 ($generated@@298 $generated@@300) $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@304) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@305) $generated@@161)) (= (type $generated@@306) $generated@@69)) ($generated@@137 $generated@@303 $generated@@304)) ($generated@@273 $generated@@305 $generated@@306 $generated@@303)) ($generated@@273 $generated@@305 $generated@@306 $generated@@304))
 :pattern ( ($generated@@137 $generated@@303 $generated@@304) ($generated@@273 $generated@@305 $generated@@306 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@307) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@308) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@310) $generated@@69)) ($generated@@137 $generated@@307 $generated@@308)) ($generated@@79 $generated@@309 $generated@@310 $generated@@307)) ($generated@@79 $generated@@309 $generated@@310 $generated@@308))
 :pattern ( ($generated@@137 $generated@@307 $generated@@308) ($generated@@79 $generated@@309 $generated@@310 $generated@@307))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@81 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@84 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@81 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@86 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 19)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@81 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@86 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@86 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 20)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@81 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@86 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@86 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@84 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@81 $generated@@354 $generated@@2)) (= ($generated@@167 $generated@@353) (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@354) (and (<= 0 ($generated ($generated@@86 $generated@@353 $generated@@355))) (<= ($generated ($generated@@86 $generated@@353 $generated@@355)) ($generated@@311 $generated@@353))))
 :pattern ( ($generated@@86 $generated@@353 $generated@@355))
)))))
 :pattern ( ($generated@@167 $generated@@353))
)))
(assert (forall (($generated@@357 T@T) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@357)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@161) ($generated@@234 $generated@@359 $generated@@141)) (and (= ($generated@@298 ($generated@@356 $generated@@2 $generated@@359)) $generated@@359) ($generated@@148 ($generated@@356 $generated@@2 $generated@@359) $generated@@141)))
 :pattern ( ($generated@@234 $generated@@359 $generated@@141))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@161) ($generated@@234 $generated@@360 $generated@@144)) (and (= ($generated@@298 ($generated@@356 $generated@@82 $generated@@360)) $generated@@360) ($generated@@148 ($generated@@356 $generated@@82 $generated@@360) $generated@@144)))
 :pattern ( ($generated@@234 $generated@@360 $generated@@144))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@161) ($generated@@234 $generated@@361 $generated@@230)) (and (= ($generated@@298 ($generated@@356 $generated@@82 $generated@@361)) $generated@@361) ($generated@@148 ($generated@@356 $generated@@82 $generated@@361) $generated@@230)))
 :pattern ( ($generated@@234 $generated@@361 $generated@@230))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@82) (= ($generated@@148 $generated@@362 $generated@@230)  (and ($generated@@148 $generated@@362 $generated@@144) (not (= $generated@@362 $generated@@145)))))
 :pattern ( ($generated@@148 $generated@@362 $generated@@230))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@321 (type $generated@@363))))
(let (($generated@@365 ($generated@@320 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@319 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@318 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@86 ($generated@@317 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@317 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@321 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@81 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@321 (type $generated@@370))))
(let (($generated@@372 ($generated@@320 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@319 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@318 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@86 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@339 (type $generated@@374))))
(let (($generated@@376 ($generated@@338 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@337 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@336 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@86 ($generated@@335 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@335 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@339 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@81 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@339 (type $generated@@381))))
(let (($generated@@383 ($generated@@338 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@337 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@336 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@86 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@386) $generated@@69)) (= ($generated@@148 $generated@@385 ($generated@@166 $generated@@386)) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@161) (< 0 ($generated ($generated@@86 $generated@@385 $generated@@387)))) ($generated@@234 $generated@@387 $generated@@386))
 :pattern ( ($generated@@86 $generated@@385 $generated@@387))
))))
 :pattern ( ($generated@@148 $generated@@385 ($generated@@166 $generated@@386)))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@389) $generated@@69)) (= (type $generated@@390) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@388 ($generated@@260 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@161) ($generated@@0 ($generated@@86 $generated@@388 $generated@@391))) ($generated@@273 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@86 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@79 $generated@@388 ($generated@@260 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@393) $generated@@69)) (= (type $generated@@394) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@392 ($generated@@265 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@161) ($generated@@0 ($generated@@86 $generated@@392 $generated@@395))) ($generated@@273 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@86 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@79 $generated@@392 ($generated@@265 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(= ($generated ($generated@@86 ($generated@@312 $generated@@397) $generated@@396)) 0))
 :pattern ( (let (($generated@@397 (type $generated@@396)))
($generated@@86 ($generated@@312 $generated@@397) $generated@@396)))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@81 $generated@@161 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@321 (type $generated@@401))))
(let (($generated@@403 ($generated@@320 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@81 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@319 $generated@@161 $generated@@161)) (= (type $generated@@405) $generated@@161)) (= ($generated@@0 ($generated@@86 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@86 ($generated@@317 $generated@@404) ($generated@@159 ($generated@@356 $generated@@152 $generated@@405)))) (= ($generated@@86 ($generated@@399 $generated@@404) ($generated@@159 ($generated@@356 $generated@@152 $generated@@405))) ($generated@@160 ($generated@@356 $generated@@152 $generated@@405))))))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@81 $generated@@161 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@339 (type $generated@@409))))
(let (($generated@@411 ($generated@@338 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@81 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@337 $generated@@161 $generated@@161)) (= (type $generated@@413) $generated@@161)) (= ($generated@@0 ($generated@@86 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@86 ($generated@@335 $generated@@412) ($generated@@159 ($generated@@356 $generated@@152 $generated@@413)))) (= ($generated@@86 ($generated@@407 $generated@@412) ($generated@@159 ($generated@@356 $generated@@152 $generated@@413))) ($generated@@160 ($generated@@356 $generated@@152 $generated@@413))))))
 :pattern ( ($generated@@86 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@320 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@319 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@86 ($generated@@367 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@86 ($generated@@317 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@86 ($generated@@399 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@86 ($generated@@317 $generated@@414) $generated@@418))
 :pattern ( ($generated@@86 ($generated@@399 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@86 ($generated@@367 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@338 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@337 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@86 ($generated@@378 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@86 ($generated@@335 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@86 ($generated@@407 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@86 ($generated@@335 $generated@@419) $generated@@423))
 :pattern ( ($generated@@86 ($generated@@407 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@86 ($generated@@378 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@69)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@319 $generated@@161 $generated@@161)) (= (type $generated@@428) $generated@@69)) (= (type $generated@@429) $generated@@69)) (= (type $generated@@430) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@317 $generated@@427) $generated@@431))) (and ($generated@@273 ($generated@@86 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@273 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@86 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@86 ($generated@@317 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@79 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@69)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@337 $generated@@161 $generated@@161)) (= (type $generated@@436) $generated@@69)) (= (type $generated@@437) $generated@@69)) (= (type $generated@@438) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@335 $generated@@435) $generated@@439))) (and ($generated@@273 ($generated@@86 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@273 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@86 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@86 ($generated@@335 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@79 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@440) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@441) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@442) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@440 $generated@@442))) (and ($generated@@137 $generated@@440 $generated@@441) ($generated@@137 $generated@@441 $generated@@442))) ($generated@@137 $generated@@440 $generated@@442))
 :pattern ( ($generated@@137 $generated@@440 $generated@@441) ($generated@@137 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@T) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@81 $generated@@444 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@339 (type $generated@@445))))
(let (($generated@@447 ($generated@@338 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@337 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@336 $generated@@447 $generated@@446)) (= ($generated@@335 $generated@@445) ($generated@@443 $generated@@447))))))
 :pattern ( ($generated@@335 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@339 (type $generated@@448))))
(let (($generated@@450 ($generated@@338 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@337 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@336 $generated@@450 $generated@@449)) (= ($generated@@378 $generated@@448) ($generated@@443 $generated@@449))))))
 :pattern ( ($generated@@378 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@339 (type $generated@@451))))
(let (($generated@@453 ($generated@@338 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@337 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@336 $generated@@453 $generated@@452)) (= ($generated@@406 $generated@@451) ($generated@@443 $generated@@161))))))
 :pattern ( ($generated@@406 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@321 (type $generated@@454))))
(let (($generated@@456 ($generated@@320 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@319 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@318 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@161) (= (type $generated@@458) $generated@@161)) ($generated@@0 ($generated@@86 ($generated@@398 $generated@@454) ($generated@@298 ($generated@@233 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@398 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@339 (type $generated@@459))))
(let (($generated@@461 ($generated@@338 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@337 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@336 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@161) (= (type $generated@@463) $generated@@161)) ($generated@@0 ($generated@@86 ($generated@@406 $generated@@459) ($generated@@298 ($generated@@233 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@406 $generated@@459))
)))
(assert  (=> (<= 1 $generated@@241) (forall (($generated@@464 T@U) ($generated@@465 Int) ) (!  (=> (and (= (type $generated@@464) $generated@@245) (or ($generated@@246 $generated@@465) (and (not (= 1 $generated@@241)) (<= ($generated@@244 0) $generated@@465)))) (and (=> (<= 2 $generated@@465) (=> (not ($generated@@0 ($generated@@247 ($generated@@11 false)))) (and ($generated@@246 (- $generated@@465 2)) ($generated@@246 (- $generated@@465 1))))) (= ($generated@@242 ($generated@@243 $generated@@464) $generated@@465) (ite (< $generated@@465 2) $generated@@465 (ite false 8 (+ ($generated@@242 $generated@@464 (- $generated@@465 2)) ($generated@@242 $generated@@464 (- $generated@@465 1))))))))
 :pattern ( ($generated@@242 ($generated@@243 $generated@@464) $generated@@465))
))))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@161) ($generated@@234 $generated@@466 $generated@@46)) (and (= ($generated@@298 ($generated@@356 $generated@@2 $generated@@466)) $generated@@466) ($generated@@148 ($generated@@356 $generated@@2 $generated@@466) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@466 $generated@@46))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@161) ($generated@@234 $generated@@467 $generated@@47)) (and (= ($generated@@298 ($generated@@356 $generated@@3 $generated@@467)) $generated@@467) ($generated@@148 ($generated@@356 $generated@@3 $generated@@467) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@467 $generated@@47))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@161) ($generated@@234 $generated@@468 $generated@@44)) (and (= ($generated@@298 ($generated@@356 $generated@@4 $generated@@468)) $generated@@468) ($generated@@148 ($generated@@356 $generated@@4 $generated@@468) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@468 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@469) 21))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@161) ($generated@@234 $generated@@470 $generated@@45)) (and (= ($generated@@298 ($generated@@356 $generated@@469 $generated@@470)) $generated@@470) ($generated@@148 ($generated@@356 $generated@@469 $generated@@470) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@470 $generated@@45))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@69) (= ($generated@@234 ($generated@@298 $generated@@471) $generated@@472) ($generated@@148 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@234 ($generated@@298 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@84 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@81 $generated@@474 $generated@@2)) (<= 0 ($generated@@311 $generated@@473))))
 :pattern ( ($generated@@311 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@288 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@287 $generated@@476)) (<= 0 ($generated@@286 $generated@@475))))
 :pattern ( ($generated@@286 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@69)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@69) (= (type $generated@@480) $generated@@69)) (= ($generated@@477 ($generated@@424 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@424 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@69)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@69) (= (type $generated@@484) $generated@@69)) (= ($generated@@481 ($generated@@424 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@424 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@69) (= (type $generated@@486) $generated@@69)) (= ($generated@@77 ($generated@@424 $generated@@485 $generated@@486)) $generated@@58))
 :pattern ( ($generated@@424 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@69)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@69) (= (type $generated@@490) $generated@@69)) (= ($generated@@487 ($generated@@432 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@432 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@69)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@69) (= (type $generated@@494) $generated@@69)) (= ($generated@@491 ($generated@@432 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@432 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@69) (= (type $generated@@496) $generated@@69)) (= ($generated@@77 ($generated@@432 $generated@@495 $generated@@496)) $generated@@59))
 :pattern ( ($generated@@432 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@161) (= (type $generated@@498) $generated@@161)) (= ($generated@@279 ($generated@@233 $generated@@497 $generated@@498)) $generated@@62))
 :pattern ( ($generated@@233 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@69)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@69) (= (type $generated@@502) $generated@@69)) (= ($generated@@499 ($generated@@151 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@151 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@69)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@69) (= (type $generated@@506) $generated@@69)) (= ($generated@@503 ($generated@@151 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@151 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@161) (= (type $generated@@508) $generated@@161)) (= ($generated@@159 ($generated@@233 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@233 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@161) (= (type $generated@@510) $generated@@161)) (= ($generated@@160 ($generated@@233 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@233 $generated@@509 $generated@@510))
)))
(assert  (and (forall (($generated@@513 T@U) ) (! (= (type ($generated@@511 $generated@@513)) $generated@@245)
 :pattern ( ($generated@@511 $generated@@513))
)) (= (type $generated@@512) $generated@@245)))
(assert (forall (($generated@@514 T@U) ($generated@@515 Int) ) (!  (=> (= (type $generated@@514) $generated@@245) (= ($generated@@242 $generated@@514 $generated@@515) ($generated@@242 $generated@@512 $generated@@515)))
 :pattern ( ($generated@@242 ($generated@@511 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 Int) ) (!  (=> (= (type $generated@@516) $generated@@245) (= ($generated@@255 $generated@@516 $generated@@517) ($generated@@255 $generated@@512 $generated@@517)))
 :pattern ( ($generated@@255 ($generated@@511 $generated@@516) $generated@@517))
)))
(assert  (and (forall (($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@520)) $generated@@69)
 :pattern ( ($generated@@518 $generated@@520))
)) (forall (($generated@@521 T@U) ($generated@@522 Int) ) (! (let (($generated@@523 ($generated@@288 (type $generated@@521))))
(= (type ($generated@@519 $generated@@521 $generated@@522)) $generated@@523))
 :pattern ( ($generated@@519 $generated@@521 $generated@@522))
))))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@287 $generated@@161)) (= (type $generated@@525) $generated@@69)) (= (type $generated@@526) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@524 ($generated@@518 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@286 $generated@@524))) ($generated@@273 ($generated@@519 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@519 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@79 $generated@@524 ($generated@@518 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@80 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@80 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@69)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@69) (= ($generated@@530 ($generated@@260 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@260 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@69) (= ($generated@@77 ($generated@@260 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@69)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@69) (= ($generated@@534 ($generated@@265 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@265 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@69) (= ($generated@@77 ($generated@@265 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@69)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@69) (= ($generated@@538 ($generated@@166 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@166 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@69) (= ($generated@@77 ($generated@@166 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@69)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@69) (= ($generated@@542 ($generated@@518 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@518 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@69) (= ($generated@@77 ($generated@@518 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@518 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@356 $generated@@547 ($generated@@298 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@298 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@319 $generated@@161 $generated@@161)) (= (type $generated@@549) $generated@@69)) (= (type $generated@@550) $generated@@69)) (= ($generated@@148 $generated@@548 ($generated@@424 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@317 $generated@@548) $generated@@551))) (and ($generated@@234 ($generated@@86 ($generated@@399 $generated@@548) $generated@@551) $generated@@550) ($generated@@234 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@86 ($generated@@399 $generated@@548) $generated@@551))
 :pattern ( ($generated@@86 ($generated@@317 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@148 $generated@@548 ($generated@@424 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@337 $generated@@161 $generated@@161)) (= (type $generated@@553) $generated@@69)) (= (type $generated@@554) $generated@@69)) (= ($generated@@148 $generated@@552 ($generated@@432 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@335 $generated@@552) $generated@@555))) (and ($generated@@234 ($generated@@86 ($generated@@407 $generated@@552) $generated@@555) $generated@@554) ($generated@@234 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@86 ($generated@@407 $generated@@552) $generated@@555))
 :pattern ( ($generated@@86 ($generated@@335 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@148 $generated@@552 ($generated@@432 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@161) (= (type $generated@@559) $generated@@161)) (< ($generated@@556 $generated@@558) ($generated@@557 ($generated@@233 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@233 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@161) (= (type $generated@@561) $generated@@161)) (< ($generated@@556 $generated@@561) ($generated@@557 ($generated@@233 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@233 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 Int) ) (!  (=> (= (type $generated@@562) $generated@@245) (= ($generated@@242 ($generated@@243 $generated@@562) $generated@@563) ($generated@@242 $generated@@562 $generated@@563)))
 :pattern ( ($generated@@242 ($generated@@243 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 Int) ) (!  (=> (= (type $generated@@564) $generated@@245) (= ($generated@@255 ($generated@@243 $generated@@564) $generated@@565) ($generated@@255 $generated@@564 $generated@@565)))
 :pattern ( ($generated@@255 ($generated@@243 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@161) (= (type $generated@@567) $generated@@69)) (= (type $generated@@568) $generated@@69)) ($generated@@234 $generated@@566 ($generated@@424 $generated@@567 $generated@@568))) (and (= ($generated@@298 ($generated@@356 ($generated@@319 $generated@@161 $generated@@161) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@356 ($generated@@319 $generated@@161 $generated@@161) $generated@@566) ($generated@@424 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@234 $generated@@566 ($generated@@424 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@161) (= (type $generated@@570) $generated@@69)) (= (type $generated@@571) $generated@@69)) ($generated@@234 $generated@@569 ($generated@@432 $generated@@570 $generated@@571))) (and (= ($generated@@298 ($generated@@356 ($generated@@337 $generated@@161 $generated@@161) $generated@@569)) $generated@@569) ($generated@@148 ($generated@@356 ($generated@@337 $generated@@161 $generated@@161) $generated@@569) ($generated@@432 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@234 $generated@@569 ($generated@@432 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@69) (= (type $generated@@573) $generated@@69)) (= (type $generated@@574) $generated@@161)) ($generated@@234 $generated@@574 ($generated@@151 $generated@@572 $generated@@573))) (and (= ($generated@@298 ($generated@@356 $generated@@152 $generated@@574)) $generated@@574) ($generated@@148 ($generated@@356 $generated@@152 $generated@@574) ($generated@@151 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@234 $generated@@574 ($generated@@151 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
 (not ($generated@@0 ($generated@@86 ($generated@@443 $generated@@576) $generated@@575))))
 :pattern ( (let (($generated@@576 (type $generated@@575)))
($generated@@86 ($generated@@443 $generated@@576) $generated@@575)))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@74)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@69) (= (type $generated@@580) $generated@@69)) (and (= ($generated@@77 ($generated@@151 $generated@@579 $generated@@580)) $generated@@63) (= ($generated@@577 ($generated@@151 $generated@@579 $generated@@580)) $generated@@67)))
 :pattern ( ($generated@@151 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 Int) ($generated@@582 Int) ) (! (= ($generated@@257 $generated@@581 $generated@@582) (* $generated@@581 $generated@@582))
 :pattern ( ($generated@@257 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@152) (= ($generated@@556 ($generated@@298 $generated@@583)) ($generated@@557 $generated@@583)))
 :pattern ( ($generated@@556 ($generated@@298 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@161) ($generated@@234 $generated@@584 ($generated@@80 0))) (and (= ($generated@@298 ($generated@@356 $generated@@2 $generated@@584)) $generated@@584) ($generated@@148 ($generated@@356 ($generated@@81 $generated@@161 $generated@@4) $generated@@584) ($generated@@80 0))))
 :pattern ( ($generated@@234 $generated@@584 ($generated@@80 0)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@161) (= (type $generated@@586) $generated@@69)) ($generated@@234 $generated@@585 ($generated@@260 $generated@@586))) (and (= ($generated@@298 ($generated@@356 ($generated@@81 $generated@@161 $generated@@4) $generated@@585)) $generated@@585) ($generated@@148 ($generated@@356 ($generated@@81 $generated@@161 $generated@@4) $generated@@585) ($generated@@260 $generated@@586))))
 :pattern ( ($generated@@234 $generated@@585 ($generated@@260 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@161) (= (type $generated@@588) $generated@@69)) ($generated@@234 $generated@@587 ($generated@@265 $generated@@588))) (and (= ($generated@@298 ($generated@@356 ($generated@@81 $generated@@161 $generated@@4) $generated@@587)) $generated@@587) ($generated@@148 ($generated@@356 ($generated@@81 $generated@@161 $generated@@4) $generated@@587) ($generated@@265 $generated@@588))))
 :pattern ( ($generated@@234 $generated@@587 ($generated@@265 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@161) (= (type $generated@@590) $generated@@69)) ($generated@@234 $generated@@589 ($generated@@166 $generated@@590))) (and (= ($generated@@298 ($generated@@356 ($generated@@81 $generated@@161 $generated@@2) $generated@@589)) $generated@@589) ($generated@@148 ($generated@@356 ($generated@@81 $generated@@161 $generated@@2) $generated@@589) ($generated@@166 $generated@@590))))
 :pattern ( ($generated@@234 $generated@@589 ($generated@@166 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@161) (= (type $generated@@592) $generated@@69)) ($generated@@234 $generated@@591 ($generated@@518 $generated@@592))) (and (= ($generated@@298 ($generated@@356 ($generated@@287 $generated@@161) $generated@@591)) $generated@@591) ($generated@@148 ($generated@@356 ($generated@@287 $generated@@161) $generated@@591) ($generated@@518 $generated@@592))))
 :pattern ( ($generated@@234 $generated@@591 ($generated@@518 $generated@@592)))
)))
(assert (= ($generated@@77 $generated@@141) $generated@@61))
(assert (= ($generated@@577 $generated@@141) $generated@@66))
(assert (= ($generated@@77 $generated@@144) $generated@@64))
(assert (= ($generated@@577 $generated@@144) $generated@@68))
(assert (= ($generated@@77 $generated@@230) $generated@@65))
(assert (= ($generated@@577 $generated@@230) $generated@@68))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@593) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@594) $generated@@69)) (= (type $generated@@595) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@593 ($generated@@166 $generated@@594) $generated@@595) (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@161) (< 0 ($generated ($generated@@86 $generated@@593 $generated@@596)))) ($generated@@273 $generated@@596 $generated@@594 $generated@@595))
 :pattern ( ($generated@@86 $generated@@593 $generated@@596))
))))
 :pattern ( ($generated@@79 $generated@@593 ($generated@@166 $generated@@594) $generated@@595))
)))
(assert  (=> (<= 1 $generated@@241) (forall (($generated@@597 T@U) ($generated@@598 Int) ) (!  (=> (and (= (type $generated@@597) $generated@@245) (or ($generated@@256 $generated@@598) (and (not (= 1 $generated@@241)) (<= ($generated@@244 0) $generated@@598)))) (and (=> (not (= $generated@@598 ($generated@@244 0))) ($generated@@256 (- $generated@@598 1))) (= ($generated@@255 ($generated@@243 $generated@@597) $generated@@598) (ite (= $generated@@598 ($generated@@244 0)) 1 ($generated@@257 $generated@@598 ($generated@@255 $generated@@597 (- $generated@@598 1)))))))
 :pattern ( ($generated@@255 ($generated@@243 $generated@@597) $generated@@598))
))))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@152) (= (type $generated@@600) $generated@@69)) (= (type $generated@@601) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@272 $generated@@601) (and ($generated@@150 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@69) ($generated@@79 $generated@@599 ($generated@@151 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@79 $generated@@599 ($generated@@151 $generated@@600 $generated@@602) $generated@@601))
))))) ($generated@@273 ($generated@@159 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@273 ($generated@@159 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@152) (= (type $generated@@604) $generated@@69)) (= (type $generated@@605) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@272 $generated@@605) (and ($generated@@150 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@69) ($generated@@79 $generated@@603 ($generated@@151 $generated@@606 $generated@@604) $generated@@605))
 :pattern ( ($generated@@79 $generated@@603 ($generated@@151 $generated@@606 $generated@@604) $generated@@605))
))))) ($generated@@273 ($generated@@160 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@273 ($generated@@160 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@161) (= (type $generated@@608) $generated@@161)) (= ($generated@@233 ($generated@@247 $generated@@607) ($generated@@247 $generated@@608)) ($generated@@247 ($generated@@233 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@233 ($generated@@247 $generated@@607) ($generated@@247 $generated@@608)))
)))
(assert (forall (($generated@@609 Int) ) (! (= ($generated@@298 ($generated@@8 ($generated@@244 $generated@@609))) ($generated@@247 ($generated@@298 ($generated@@8 $generated@@609))))
 :pattern ( ($generated@@298 ($generated@@8 ($generated@@244 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ) (! (= ($generated@@298 ($generated@@247 $generated@@610)) ($generated@@247 ($generated@@298 $generated@@610)))
 :pattern ( ($generated@@298 ($generated@@247 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 ($generated@@288 (type $generated@@611))))
 (=> (and (= (type $generated@@611) ($generated@@287 $generated@@612)) (= ($generated@@286 $generated@@611) 0)) (= $generated@@611 ($generated@@285 $generated@@612))))
 :pattern ( ($generated@@286 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (! (let (($generated@@616 (type $generated@@614)))
 (=> (and (and (= (type $generated@@613) ($generated@@81 $generated@@616 $generated@@2)) (= (type $generated@@615) $generated@@2)) (<= 0 ($generated $generated@@615))) (= ($generated@@311 ($generated@@87 $generated@@613 $generated@@614 $generated@@615)) (+ (- ($generated@@311 $generated@@613) ($generated ($generated@@86 $generated@@613 $generated@@614))) ($generated $generated@@615)))))
 :pattern ( ($generated@@311 ($generated@@87 $generated@@613 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@618) $generated@@2)) ($generated@@79 $generated@@618 $generated@@46 $generated@@617))
 :pattern ( ($generated@@79 $generated@@618 $generated@@46 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@620) $generated@@3)) ($generated@@79 $generated@@620 $generated@@47 $generated@@619))
 :pattern ( ($generated@@79 $generated@@620 $generated@@47 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@622) $generated@@4)) ($generated@@79 $generated@@622 $generated@@44 $generated@@621))
 :pattern ( ($generated@@79 $generated@@622 $generated@@44 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@624) $generated@@469)) ($generated@@79 $generated@@624 $generated@@45 $generated@@623))
 :pattern ( ($generated@@79 $generated@@624 $generated@@45 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@626) $generated@@161)) ($generated@@79 $generated@@626 $generated@@48 $generated@@625))
 :pattern ( ($generated@@79 $generated@@626 $generated@@48 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@287 $generated@@161)) (= (type $generated@@628) $generated@@69)) (= ($generated@@148 $generated@@627 ($generated@@518 $generated@@628)) (forall (($generated@@629 Int) ) (!  (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@286 $generated@@627))) ($generated@@234 ($generated@@519 $generated@@627 $generated@@629) $generated@@628))
 :pattern ( ($generated@@519 $generated@@627 $generated@@629))
))))
 :pattern ( ($generated@@148 $generated@@627 ($generated@@518 $generated@@628)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 Int) ) (!  (=> (= (type $generated@@631) ($generated@@287 $generated@@161)) (=> (and (<= 0 $generated@@632) (< $generated@@632 ($generated@@286 $generated@@631))) (< ($generated@@557 ($generated@@356 $generated@@152 ($generated@@519 $generated@@631 $generated@@632))) ($generated@@630 $generated@@631))))
 :pattern ( ($generated@@557 ($generated@@356 $generated@@152 ($generated@@519 $generated@@631 $generated@@632))))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@319 $generated@@161 $generated@@161)) (= (type $generated@@634) $generated@@69)) (= (type $generated@@635) $generated@@69)) ($generated@@148 $generated@@633 ($generated@@424 $generated@@634 $generated@@635))) (and (and ($generated@@148 ($generated@@317 $generated@@633) ($generated@@260 $generated@@634)) ($generated@@148 ($generated@@367 $generated@@633) ($generated@@260 $generated@@635))) ($generated@@148 ($generated@@398 $generated@@633) ($generated@@260 ($generated@@151 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@148 $generated@@633 ($generated@@424 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) ($generated@@337 $generated@@161 $generated@@161)) (= (type $generated@@637) $generated@@69)) (= (type $generated@@638) $generated@@69)) ($generated@@148 $generated@@636 ($generated@@432 $generated@@637 $generated@@638))) (and (and ($generated@@148 ($generated@@335 $generated@@636) ($generated@@265 $generated@@637)) ($generated@@148 ($generated@@378 $generated@@636) ($generated@@265 $generated@@638))) ($generated@@148 ($generated@@406 $generated@@636) ($generated@@265 ($generated@@151 $generated@@637 $generated@@638)))))
 :pattern ( ($generated@@148 $generated@@636 ($generated@@432 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@2) ($generated@@148 $generated@@639 $generated@@46))
 :pattern ( ($generated@@148 $generated@@639 $generated@@46))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@3) ($generated@@148 $generated@@640 $generated@@47))
 :pattern ( ($generated@@148 $generated@@640 $generated@@47))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@4) ($generated@@148 $generated@@641 $generated@@44))
 :pattern ( ($generated@@148 $generated@@641 $generated@@44))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@469) ($generated@@148 $generated@@642 $generated@@45))
 :pattern ( ($generated@@148 $generated@@642 $generated@@45))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@161) ($generated@@148 $generated@@643 $generated@@48))
 :pattern ( ($generated@@148 $generated@@643 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 (T@U) Bool)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () Int)
(declare-fun $generated@@679 () Bool)
(declare-fun $generated@@680 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@644) ($generated@@176 $generated@@82 $generated@@4)) (= (type $generated@@645) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@646) $generated@@82)) (= (type $generated@@647) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@649) $generated@@82)) (= (type $generated@@650) $generated@@82)) (= (type $generated@@651) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@652) $generated@@82)) (= (type $generated@@653) $generated@@82)) (= (type $generated@@654) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@655) $generated@@82)) (= (type $generated@@657) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@658) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@659) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@661) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@662) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@663) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@665) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@667) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@669) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@671) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@673) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@680) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@681  (=> (= $generated@@644 ($generated@@175 $generated@@145 $generated@@645 $generated@@60 false)) (=> (and (and (not (= $generated@@646 $generated@@145)) (and ($generated@@148 $generated@@646 $generated@@230) ($generated@@79 $generated@@646 $generated@@230 $generated@@645))) (and ($generated@@272 $generated@@647) ($generated@@648 $generated@@647))) (=> (and (and (and (and (and (and (and (not (= $generated@@649 $generated@@145)) (and ($generated@@148 $generated@@649 $generated@@230) ($generated@@79 $generated@@649 $generated@@230 $generated@@647))) (not ($generated@@0 ($generated@@88 ($generated@@86 $generated@@645 $generated@@649) $generated@@60)))) (and (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@82) (=> (and (not (= $generated@@682 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@645 $generated@@682) $generated@@60))) (= ($generated@@86 $generated@@647 $generated@@682) ($generated@@86 $generated@@645 $generated@@682))))
 :pattern ( ($generated@@86 $generated@@647 $generated@@682))
)) ($generated@@137 $generated@@645 $generated@@647))) (and (and (not (= $generated@@650 $generated@@145)) (and ($generated@@148 $generated@@650 $generated@@230) ($generated@@79 $generated@@650 $generated@@230 $generated@@645))) (and ($generated@@272 $generated@@651) ($generated@@648 $generated@@651)))) (and (and (and (not (= $generated@@652 $generated@@145)) (and ($generated@@148 $generated@@652 $generated@@230) ($generated@@79 $generated@@652 $generated@@230 $generated@@651))) (not ($generated@@0 ($generated@@88 ($generated@@86 $generated@@647 $generated@@652) $generated@@60)))) (and (and (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@82) (=> (and (not (= $generated@@683 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@647 $generated@@683) $generated@@60))) (= ($generated@@86 $generated@@651 $generated@@683) ($generated@@86 $generated@@647 $generated@@683))))
 :pattern ( ($generated@@86 $generated@@651 $generated@@683))
)) ($generated@@137 $generated@@647 $generated@@651)) (and (not (= $generated@@653 $generated@@145)) (and ($generated@@148 $generated@@653 $generated@@230) ($generated@@79 $generated@@653 $generated@@230 $generated@@645)))))) (and (and (and (and ($generated@@272 $generated@@654) ($generated@@648 $generated@@654)) (and (not (= $generated@@655 $generated@@145)) (and ($generated@@148 $generated@@655 $generated@@230) ($generated@@79 $generated@@655 $generated@@230 $generated@@654)))) (and (and (not ($generated@@0 ($generated@@88 ($generated@@86 $generated@@651 $generated@@655) $generated@@60))) (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@82) (=> (and (not (= $generated@@684 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@651 $generated@@684) $generated@@60))) (= ($generated@@86 $generated@@654 $generated@@684) ($generated@@86 $generated@@651 $generated@@684))))
 :pattern ( ($generated@@86 $generated@@654 $generated@@684))
))) (and ($generated@@137 $generated@@651 $generated@@654) (= $generated@@656 ($generated@@244 5))))) (and (and (and ($generated@@272 $generated@@657) ($generated@@648 $generated@@657)) (and (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@82) (=> (and (not (= $generated@@685 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@654 $generated@@685) $generated@@60))) (= ($generated@@86 $generated@@657 $generated@@685) ($generated@@86 $generated@@654 $generated@@685))))
 :pattern ( ($generated@@86 $generated@@657 $generated@@685))
)) ($generated@@137 $generated@@654 $generated@@657))) (and (and ($generated@@272 $generated@@658) ($generated@@648 $generated@@658)) (and (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@82) (=> (and (not (= $generated@@686 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@657 $generated@@686) $generated@@60))) (= ($generated@@86 $generated@@658 $generated@@686) ($generated@@86 $generated@@657 $generated@@686))))
 :pattern ( ($generated@@86 $generated@@658 $generated@@686))
)) ($generated@@137 $generated@@657 $generated@@658)))))) (and (and (and (and (and (and ($generated@@272 $generated@@659) ($generated@@648 $generated@@659)) (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@82) (=> (and (not (= $generated@@687 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@658 $generated@@687) $generated@@60))) (= ($generated@@86 $generated@@659 $generated@@687) ($generated@@86 $generated@@658 $generated@@687))))
 :pattern ( ($generated@@86 $generated@@659 $generated@@687))
))) (and ($generated@@137 $generated@@658 $generated@@659) (= $generated@@660 ($generated@@244 5)))) (and (and (and ($generated@@272 $generated@@661) ($generated@@648 $generated@@661)) (and (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@82) (=> (and (not (= $generated@@688 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@659 $generated@@688) $generated@@60))) (= ($generated@@86 $generated@@661 $generated@@688) ($generated@@86 $generated@@659 $generated@@688))))
 :pattern ( ($generated@@86 $generated@@661 $generated@@688))
)) ($generated@@137 $generated@@659 $generated@@661))) (and (and ($generated@@272 $generated@@662) ($generated@@648 $generated@@662)) (and (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@82) (=> (and (not (= $generated@@689 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@661 $generated@@689) $generated@@60))) (= ($generated@@86 $generated@@662 $generated@@689) ($generated@@86 $generated@@661 $generated@@689))))
 :pattern ( ($generated@@86 $generated@@662 $generated@@689))
)) ($generated@@137 $generated@@661 $generated@@662))))) (and (and (and (and ($generated@@272 $generated@@663) ($generated@@648 $generated@@663)) (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@82) (=> (and (not (= $generated@@690 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@662 $generated@@690) $generated@@60))) (= ($generated@@86 $generated@@663 $generated@@690) ($generated@@86 $generated@@662 $generated@@690))))
 :pattern ( ($generated@@86 $generated@@663 $generated@@690))
))) (and ($generated@@137 $generated@@662 $generated@@663) (= $generated@@664 ($generated@@244 5)))) (and (and (and ($generated@@272 $generated@@665) ($generated@@648 $generated@@665)) (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@82) (=> (and (not (= $generated@@691 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@663 $generated@@691) $generated@@60))) (= ($generated@@86 $generated@@665 $generated@@691) ($generated@@86 $generated@@663 $generated@@691))))
 :pattern ( ($generated@@86 $generated@@665 $generated@@691))
))) (and ($generated@@137 $generated@@663 $generated@@665) (= $generated@@666 ($generated@@244 50)))))) (and (and (and (and (and ($generated@@272 $generated@@667) ($generated@@648 $generated@@667)) (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@82) (=> (and (not (= $generated@@692 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@665 $generated@@692) $generated@@60))) (= ($generated@@86 $generated@@667 $generated@@692) ($generated@@86 $generated@@665 $generated@@692))))
 :pattern ( ($generated@@86 $generated@@667 $generated@@692))
))) (and ($generated@@137 $generated@@665 $generated@@667) (= $generated@@668 ($generated@@244 101)))) (and (and (and ($generated@@272 $generated@@669) ($generated@@648 $generated@@669)) (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@82) (=> (and (not (= $generated@@693 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@667 $generated@@693) $generated@@60))) (= ($generated@@86 $generated@@669 $generated@@693) ($generated@@86 $generated@@667 $generated@@693))))
 :pattern ( ($generated@@86 $generated@@669 $generated@@693))
))) (and ($generated@@137 $generated@@667 $generated@@669) (= $generated@@670 ($generated@@244 1010))))) (and (and (and (and ($generated@@272 $generated@@671) ($generated@@648 $generated@@671)) (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@82) (=> (and (not (= $generated@@694 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@669 $generated@@694) $generated@@60))) (= ($generated@@86 $generated@@671 $generated@@694) ($generated@@86 $generated@@669 $generated@@694))))
 :pattern ( ($generated@@86 $generated@@671 $generated@@694))
))) (and ($generated@@137 $generated@@669 $generated@@671) (= $generated@@672 ($generated@@244 111)))) (and (and ($generated@@272 $generated@@673) ($generated@@648 $generated@@673)) (and (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@82) (=> (and (not (= $generated@@695 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@671 $generated@@695) $generated@@60))) (= ($generated@@86 $generated@@673 $generated@@695) ($generated@@86 $generated@@671 $generated@@695))))
 :pattern ( ($generated@@86 $generated@@673 $generated@@695))
)) ($generated@@137 $generated@@671 $generated@@673))))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@148 ($generated@@8 ($generated@@244 12)) $generated@@141)) (=> ($generated@@148 ($generated@@8 ($generated@@244 12)) $generated@@141) (=> (= $generated@@674 ($generated@@244 12)) (=> (and (and ($generated@@79 ($generated@@8 $generated@@674) $generated@@141 $generated@@673) ($generated@@246 ($generated@@244 12))) (and ($generated@@246 ($generated@@244 12)) (= $generated@@675 ($generated@@244 ($generated@@242 ($generated@@243 $generated@@512) ($generated@@244 12)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@148 ($generated@@8 ($generated@@244 10)) $generated@@141)) (=> ($generated@@148 ($generated@@8 ($generated@@244 10)) $generated@@141) (=> (= $generated@@676 ($generated@@244 10)) (=> (and (and ($generated@@79 ($generated@@8 $generated@@676) $generated@@141 $generated@@673) ($generated@@256 ($generated@@244 10))) (and ($generated@@256 ($generated@@244 10)) (= $generated@@677 ($generated@@244 ($generated@@255 ($generated@@243 $generated@@512) ($generated@@244 10)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@148 ($generated@@8 ($generated@@244 10)) $generated@@141)) (=> ($generated@@148 ($generated@@8 ($generated@@244 10)) $generated@@141) (=> (and (= $generated@@678 ($generated@@244 10)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@148 ($generated@@8 ($generated@@244 1)) $generated@@141)))))))))))))))))
(let (($generated@@696  (=> (and ($generated@@272 $generated@@645) ($generated@@648 $generated@@645)) (=> (and (and (=> $generated@@679 (and ($generated@@148 $generated@@680 $generated@@230) ($generated@@79 $generated@@680 $generated@@230 $generated@@645))) true) (and (= 3 $generated@@241) (= (ControlFlow 0 6) 2))) $generated@@681))))
$generated@@696)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
