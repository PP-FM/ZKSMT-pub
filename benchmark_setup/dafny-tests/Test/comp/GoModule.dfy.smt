(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@336 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@562 (T@U) Bool)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@137 $generated@@138 $generated@@139)) (forall (($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@138 $generated@@140) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60))
)))
 :pattern ( ($generated@@137 $generated@@138 $generated@@139))
)))
(assert  (and (= (type $generated@@141) $generated@@69) (= (type $generated@@142) $generated@@82)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@82) (= (type $generated@@144) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@143 $generated@@141 $generated@@144)  (or (= $generated@@143 $generated@@142) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@143 $generated@@141 $generated@@144))
)))
(assert (= (type $generated@@145) $generated@@69))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@82) (= (type $generated@@147) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@146 $generated@@145 $generated@@147)  (or (= $generated@@146 $generated@@142) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@146 $generated@@145 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@80 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@152) 14) (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@153 $generated@@154)) $generated@@69)
 :pattern ( ($generated@@151 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@69) (= (type $generated@@156) $generated@@69)) (= (type $generated@@157) $generated@@152)) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156))) ($generated@@150 $generated@@157))
 :pattern ( ($generated@@150 $generated@@157) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156)))
)))
(assert  (and (and (= ($generated@@1 $generated@@161) 15) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@162))
))) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@161)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@152) (= (type $generated@@165) $generated@@152)) true) (= ($generated@@158 $generated@@164 $generated@@165)  (and (= ($generated@@159 $generated@@164) ($generated@@159 $generated@@165)) (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)))))
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@69)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@170) $generated@@69)) ($generated@@148 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@148 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@69)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@82) (= ($generated@@148 $generated@@173 $generated@@141)  (or (= $generated@@173 $generated@@142) (= ($generated@@171 $generated@@173) $generated@@141))))
 :pattern ( ($generated@@148 $generated@@173 $generated@@141))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@82 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@72 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@82) (= (type $generated@@224) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@225) ($generated@@71 $generated@@4))) (= (type $generated@@227) $generated@@82)) (= (type $generated@@228) ($generated@@71 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (= (type $generated@@230) $generated@@69))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@82) (= (type $generated@@232) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@231 $generated@@230 $generated@@232) ($generated@@79 $generated@@231 $generated@@141 $generated@@232)))
 :pattern ( ($generated@@79 $generated@@231 $generated@@230 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@152)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@69) (= (type $generated@@238) $generated@@69)) (= (type $generated@@239) $generated@@161)) (= (type $generated@@240) $generated@@161)) (= ($generated@@148 ($generated@@233 $generated@@239 $generated@@240) ($generated@@151 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@148 ($generated@@233 $generated@@239 $generated@@240) ($generated@@151 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@152) (= (type $generated@@242) $generated@@152)) (= ($generated@@158 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@158 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@69)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@246) $generated@@69)) (= ($generated@@148 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@161) ($generated@@0 ($generated@@86 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@86 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@148 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@69)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@251) $generated@@69)) (= ($generated@@148 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@161) ($generated@@0 ($generated@@86 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@86 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@148 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@69) (= (type $generated@@260) $generated@@69)) (= (type $generated@@261) $generated@@161)) (= (type $generated@@262) $generated@@161)) (= (type $generated@@263) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@257 $generated@@263)) (= ($generated@@79 ($generated@@233 $generated@@261 $generated@@262) ($generated@@151 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@79 ($generated@@233 $generated@@261 $generated@@262) ($generated@@151 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@73)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@152) (= ($generated@@150 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@150 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@152) ($generated@@150 $generated@@267)) (exists (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (and (and (= (type $generated@@268) $generated@@161) (= (type $generated@@269) $generated@@161)) (= $generated@@267 ($generated@@233 $generated@@268 $generated@@269)))
 :no-pattern (type $generated@@268)
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
)))
 :pattern ( ($generated@@150 $generated@@267))
)))
(assert  (and (and (forall (($generated@@274 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@274)) 17)) (forall (($generated@@275 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
))) (forall (($generated@@276 T@T) ) (! (= (type ($generated@@270 $generated@@276)) ($generated@@272 $generated@@276))
 :pattern ( ($generated@@270 $generated@@276))
))))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@277)) 0)
 :pattern ( ($generated@@270 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@161)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@69) (= (type $generated@@282) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@258 ($generated@@278 $generated@@280) $generated@@281 $generated@@282) ($generated@@79 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@258 ($generated@@278 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@284) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@285) $generated@@161)) (= (type $generated@@286) $generated@@69)) ($generated@@137 $generated@@283 $generated@@284)) ($generated@@258 $generated@@285 $generated@@286 $generated@@283)) ($generated@@258 $generated@@285 $generated@@286 $generated@@284))
 :pattern ( ($generated@@137 $generated@@283 $generated@@284) ($generated@@258 $generated@@285 $generated@@286 $generated@@283))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@287) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@288) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@290) $generated@@69)) ($generated@@137 $generated@@287 $generated@@288)) ($generated@@79 $generated@@289 $generated@@290 $generated@@287)) ($generated@@79 $generated@@289 $generated@@290 $generated@@288))
 :pattern ( ($generated@@137 $generated@@287 $generated@@288) ($generated@@79 $generated@@289 $generated@@290 $generated@@287))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@81 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@84 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@81 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@86 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 18)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@81 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@86 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@86 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 19)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@81 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@86 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@86 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@84 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@81 $generated@@334 $generated@@2)) (= ($generated@@167 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@86 $generated@@333 $generated@@335))) (<= ($generated ($generated@@86 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@86 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@167 $generated@@333))
)))
(assert (forall (($generated@@337 T@T) ($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@161) ($generated@@234 $generated@@339 $generated@@230)) (and (= ($generated@@278 ($generated@@336 $generated@@82 $generated@@339)) $generated@@339) ($generated@@148 ($generated@@336 $generated@@82 $generated@@339) $generated@@230)))
 :pattern ( ($generated@@234 $generated@@339 $generated@@230))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@161) ($generated@@234 $generated@@340 $generated@@145)) (and (= ($generated@@278 ($generated@@336 $generated@@82 $generated@@340)) $generated@@340) ($generated@@148 ($generated@@336 $generated@@82 $generated@@340) $generated@@145)))
 :pattern ( ($generated@@234 $generated@@340 $generated@@145))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@161) ($generated@@234 $generated@@341 $generated@@141)) (and (= ($generated@@278 ($generated@@336 $generated@@82 $generated@@341)) $generated@@341) ($generated@@148 ($generated@@336 $generated@@82 $generated@@341) $generated@@141)))
 :pattern ( ($generated@@234 $generated@@341 $generated@@141))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@82) (= ($generated@@148 $generated@@342 $generated@@230)  (and ($generated@@148 $generated@@342 $generated@@141) (not (= $generated@@342 $generated@@142)))))
 :pattern ( ($generated@@148 $generated@@342 $generated@@230))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@301 (type $generated@@343))))
(let (($generated@@345 ($generated@@300 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@299 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@298 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@86 ($generated@@297 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@297 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@301 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@81 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@301 (type $generated@@350))))
(let (($generated@@352 ($generated@@300 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@299 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@298 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@86 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@319 (type $generated@@354))))
(let (($generated@@356 ($generated@@318 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@317 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@316 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@86 ($generated@@315 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@315 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@319 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@81 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@319 (type $generated@@361))))
(let (($generated@@363 ($generated@@318 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@317 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@316 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@86 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@366) $generated@@69)) (= ($generated@@148 $generated@@365 ($generated@@166 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@161) (< 0 ($generated ($generated@@86 $generated@@365 $generated@@367)))) ($generated@@234 $generated@@367 $generated@@366))
 :pattern ( ($generated@@86 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@148 $generated@@365 ($generated@@166 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@369) $generated@@69)) (= (type $generated@@370) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@368 ($generated@@243 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@161) ($generated@@0 ($generated@@86 $generated@@368 $generated@@371))) ($generated@@258 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@86 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@79 $generated@@368 ($generated@@243 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@373) $generated@@69)) (= (type $generated@@374) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@372 ($generated@@248 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@161) ($generated@@0 ($generated@@86 $generated@@372 $generated@@375))) ($generated@@258 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@86 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@79 $generated@@372 ($generated@@248 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated ($generated@@86 ($generated@@292 $generated@@377) $generated@@376)) 0))
 :pattern ( (let (($generated@@377 (type $generated@@376)))
($generated@@86 ($generated@@292 $generated@@377) $generated@@376)))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@81 $generated@@161 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@301 (type $generated@@381))))
(let (($generated@@383 ($generated@@300 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@81 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@299 $generated@@161 $generated@@161)) (= (type $generated@@385) $generated@@161)) (= ($generated@@0 ($generated@@86 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@86 ($generated@@297 $generated@@384) ($generated@@159 ($generated@@336 $generated@@152 $generated@@385)))) (= ($generated@@86 ($generated@@379 $generated@@384) ($generated@@159 ($generated@@336 $generated@@152 $generated@@385))) ($generated@@160 ($generated@@336 $generated@@152 $generated@@385))))))
 :pattern ( ($generated@@86 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@81 $generated@@161 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@319 (type $generated@@389))))
(let (($generated@@391 ($generated@@318 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@81 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@317 $generated@@161 $generated@@161)) (= (type $generated@@393) $generated@@161)) (= ($generated@@0 ($generated@@86 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@86 ($generated@@315 $generated@@392) ($generated@@159 ($generated@@336 $generated@@152 $generated@@393)))) (= ($generated@@86 ($generated@@387 $generated@@392) ($generated@@159 ($generated@@336 $generated@@152 $generated@@393))) ($generated@@160 ($generated@@336 $generated@@152 $generated@@393))))))
 :pattern ( ($generated@@86 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@300 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@299 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@86 ($generated@@347 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@86 ($generated@@297 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@86 ($generated@@379 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@86 ($generated@@297 $generated@@394) $generated@@398))
 :pattern ( ($generated@@86 ($generated@@379 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@86 ($generated@@347 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@318 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@317 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@86 ($generated@@358 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@86 ($generated@@315 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@86 ($generated@@387 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@86 ($generated@@315 $generated@@399) $generated@@403))
 :pattern ( ($generated@@86 ($generated@@387 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@86 ($generated@@358 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@69)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@299 $generated@@161 $generated@@161)) (= (type $generated@@408) $generated@@69)) (= (type $generated@@409) $generated@@69)) (= (type $generated@@410) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@297 $generated@@407) $generated@@411))) (and ($generated@@258 ($generated@@86 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@258 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@86 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@86 ($generated@@297 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@79 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@69)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@317 $generated@@161 $generated@@161)) (= (type $generated@@416) $generated@@69)) (= (type $generated@@417) $generated@@69)) (= (type $generated@@418) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@315 $generated@@415) $generated@@419))) (and ($generated@@258 ($generated@@86 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@258 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@86 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@86 ($generated@@315 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@79 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@420) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@421) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@422) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@420 $generated@@422))) (and ($generated@@137 $generated@@420 $generated@@421) ($generated@@137 $generated@@421 $generated@@422))) ($generated@@137 $generated@@420 $generated@@422))
 :pattern ( ($generated@@137 $generated@@420 $generated@@421) ($generated@@137 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@81 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@319 (type $generated@@425))))
(let (($generated@@427 ($generated@@318 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@317 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@316 $generated@@427 $generated@@426)) (= ($generated@@315 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@315 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@319 (type $generated@@428))))
(let (($generated@@430 ($generated@@318 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@317 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@316 $generated@@430 $generated@@429)) (= ($generated@@358 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@358 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@319 (type $generated@@431))))
(let (($generated@@433 ($generated@@318 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@317 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@316 $generated@@433 $generated@@432)) (= ($generated@@386 $generated@@431) ($generated@@423 $generated@@161))))))
 :pattern ( ($generated@@386 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@301 (type $generated@@434))))
(let (($generated@@436 ($generated@@300 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@299 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@298 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@161) (= (type $generated@@438) $generated@@161)) ($generated@@0 ($generated@@86 ($generated@@378 $generated@@434) ($generated@@278 ($generated@@233 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@378 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@319 (type $generated@@439))))
(let (($generated@@441 ($generated@@318 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@317 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@316 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@161) (= (type $generated@@443) $generated@@161)) ($generated@@0 ($generated@@86 ($generated@@386 $generated@@439) ($generated@@278 ($generated@@233 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@386 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@161) ($generated@@234 $generated@@444 $generated@@46)) (and (= ($generated@@278 ($generated@@336 $generated@@2 $generated@@444)) $generated@@444) ($generated@@148 ($generated@@336 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@161) ($generated@@234 $generated@@445 $generated@@47)) (and (= ($generated@@278 ($generated@@336 $generated@@3 $generated@@445)) $generated@@445) ($generated@@148 ($generated@@336 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@161) ($generated@@234 $generated@@446 $generated@@44)) (and (= ($generated@@278 ($generated@@336 $generated@@4 $generated@@446)) $generated@@446) ($generated@@148 ($generated@@336 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 20))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@161) ($generated@@234 $generated@@448 $generated@@45)) (and (= ($generated@@278 ($generated@@336 $generated@@447 $generated@@448)) $generated@@448) ($generated@@148 ($generated@@336 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@69) (= ($generated@@234 ($generated@@278 $generated@@449) $generated@@450) ($generated@@148 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@234 ($generated@@278 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@84 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@81 $generated@@452 $generated@@2)) (<= 0 ($generated@@291 $generated@@451))))
 :pattern ( ($generated@@291 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@273 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@272 $generated@@454)) (<= 0 ($generated@@271 $generated@@453))))
 :pattern ( ($generated@@271 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@69)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@69) (= (type $generated@@458) $generated@@69)) (= ($generated@@455 ($generated@@404 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@404 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@69)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@69) (= (type $generated@@462) $generated@@69)) (= ($generated@@459 ($generated@@404 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@404 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@69) (= (type $generated@@464) $generated@@69)) (= ($generated@@77 ($generated@@404 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@404 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@69)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@69) (= (type $generated@@468) $generated@@69)) (= ($generated@@465 ($generated@@412 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@412 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@69)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@69) (= (type $generated@@472) $generated@@69)) (= ($generated@@469 ($generated@@412 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@412 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@77 ($generated@@412 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@412 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@161) (= (type $generated@@476) $generated@@161)) (= ($generated@@264 ($generated@@233 $generated@@475 $generated@@476)) $generated@@61))
 :pattern ( ($generated@@233 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@69)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@69) (= (type $generated@@480) $generated@@69)) (= ($generated@@477 ($generated@@151 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@151 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@69)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@69) (= (type $generated@@484) $generated@@69)) (= ($generated@@481 ($generated@@151 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@151 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@161) (= (type $generated@@486) $generated@@161)) (= ($generated@@159 ($generated@@233 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@233 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@161) (= (type $generated@@488) $generated@@161)) (= ($generated@@160 ($generated@@233 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@233 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@69)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@273 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@272 $generated@@161)) (= (type $generated@@496) $generated@@69)) (= (type $generated@@497) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@271 $generated@@495))) ($generated@@258 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@79 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@80 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@80 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@69) (= ($generated@@501 ($generated@@243 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@243 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@69) (= ($generated@@77 ($generated@@243 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@69)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@69) (= ($generated@@505 ($generated@@248 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@248 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@69) (= ($generated@@77 ($generated@@248 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@69) (= ($generated@@509 ($generated@@166 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@166 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@69) (= ($generated@@77 ($generated@@166 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@69)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@69) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@69) (= ($generated@@77 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@336 $generated@@518 ($generated@@278 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@278 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@299 $generated@@161 $generated@@161)) (= (type $generated@@520) $generated@@69)) (= (type $generated@@521) $generated@@69)) (= ($generated@@148 $generated@@519 ($generated@@404 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@297 $generated@@519) $generated@@522))) (and ($generated@@234 ($generated@@86 ($generated@@379 $generated@@519) $generated@@522) $generated@@521) ($generated@@234 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@86 ($generated@@379 $generated@@519) $generated@@522))
 :pattern ( ($generated@@86 ($generated@@297 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@148 $generated@@519 ($generated@@404 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@317 $generated@@161 $generated@@161)) (= (type $generated@@524) $generated@@69)) (= (type $generated@@525) $generated@@69)) (= ($generated@@148 $generated@@523 ($generated@@412 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@315 $generated@@523) $generated@@526))) (and ($generated@@234 ($generated@@86 ($generated@@387 $generated@@523) $generated@@526) $generated@@525) ($generated@@234 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@86 ($generated@@387 $generated@@523) $generated@@526))
 :pattern ( ($generated@@86 ($generated@@315 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@148 $generated@@523 ($generated@@412 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@161) (= (type $generated@@530) $generated@@161)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@233 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@233 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@161) (= (type $generated@@532) $generated@@161)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@233 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@233 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@161) (= (type $generated@@534) $generated@@69)) (= (type $generated@@535) $generated@@69)) ($generated@@234 $generated@@533 ($generated@@404 $generated@@534 $generated@@535))) (and (= ($generated@@278 ($generated@@336 ($generated@@299 $generated@@161 $generated@@161) $generated@@533)) $generated@@533) ($generated@@148 ($generated@@336 ($generated@@299 $generated@@161 $generated@@161) $generated@@533) ($generated@@404 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@234 $generated@@533 ($generated@@404 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@161) (= (type $generated@@537) $generated@@69)) (= (type $generated@@538) $generated@@69)) ($generated@@234 $generated@@536 ($generated@@412 $generated@@537 $generated@@538))) (and (= ($generated@@278 ($generated@@336 ($generated@@317 $generated@@161 $generated@@161) $generated@@536)) $generated@@536) ($generated@@148 ($generated@@336 ($generated@@317 $generated@@161 $generated@@161) $generated@@536) ($generated@@412 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@234 $generated@@536 ($generated@@412 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@69) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@161)) ($generated@@234 $generated@@541 ($generated@@151 $generated@@539 $generated@@540))) (and (= ($generated@@278 ($generated@@336 $generated@@152 $generated@@541)) $generated@@541) ($generated@@148 ($generated@@336 $generated@@152 $generated@@541) ($generated@@151 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@234 $generated@@541 ($generated@@151 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@86 ($generated@@423 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@86 ($generated@@423 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@74)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@69) (= (type $generated@@547) $generated@@69)) (and (= ($generated@@77 ($generated@@151 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@151 $generated@@546 $generated@@547)) $generated@@66)))
 :pattern ( ($generated@@151 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@152) (= ($generated@@527 ($generated@@278 $generated@@548)) ($generated@@528 $generated@@548)))
 :pattern ( ($generated@@527 ($generated@@278 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@161) ($generated@@234 $generated@@549 ($generated@@80 0))) (and (= ($generated@@278 ($generated@@336 $generated@@2 $generated@@549)) $generated@@549) ($generated@@148 ($generated@@336 ($generated@@81 $generated@@161 $generated@@4) $generated@@549) ($generated@@80 0))))
 :pattern ( ($generated@@234 $generated@@549 ($generated@@80 0)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@161) (= (type $generated@@551) $generated@@69)) ($generated@@234 $generated@@550 ($generated@@243 $generated@@551))) (and (= ($generated@@278 ($generated@@336 ($generated@@81 $generated@@161 $generated@@4) $generated@@550)) $generated@@550) ($generated@@148 ($generated@@336 ($generated@@81 $generated@@161 $generated@@4) $generated@@550) ($generated@@243 $generated@@551))))
 :pattern ( ($generated@@234 $generated@@550 ($generated@@243 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@161) (= (type $generated@@553) $generated@@69)) ($generated@@234 $generated@@552 ($generated@@248 $generated@@553))) (and (= ($generated@@278 ($generated@@336 ($generated@@81 $generated@@161 $generated@@4) $generated@@552)) $generated@@552) ($generated@@148 ($generated@@336 ($generated@@81 $generated@@161 $generated@@4) $generated@@552) ($generated@@248 $generated@@553))))
 :pattern ( ($generated@@234 $generated@@552 ($generated@@248 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@161) (= (type $generated@@555) $generated@@69)) ($generated@@234 $generated@@554 ($generated@@166 $generated@@555))) (and (= ($generated@@278 ($generated@@336 ($generated@@81 $generated@@161 $generated@@2) $generated@@554)) $generated@@554) ($generated@@148 ($generated@@336 ($generated@@81 $generated@@161 $generated@@2) $generated@@554) ($generated@@166 $generated@@555))))
 :pattern ( ($generated@@234 $generated@@554 ($generated@@166 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@161) (= (type $generated@@557) $generated@@69)) ($generated@@234 $generated@@556 ($generated@@489 $generated@@557))) (and (= ($generated@@278 ($generated@@336 ($generated@@272 $generated@@161) $generated@@556)) $generated@@556) ($generated@@148 ($generated@@336 ($generated@@272 $generated@@161) $generated@@556) ($generated@@489 $generated@@557))))
 :pattern ( ($generated@@234 $generated@@556 ($generated@@489 $generated@@557)))
)))
(assert (= ($generated@@77 $generated@@230) $generated@@63))
(assert (= ($generated@@544 $generated@@230) $generated@@67))
(assert (= ($generated@@77 $generated@@145) $generated@@64))
(assert (= ($generated@@544 $generated@@145) $generated@@68))
(assert (= ($generated@@77 $generated@@141) $generated@@65))
(assert (= ($generated@@544 $generated@@141) $generated@@67))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@559) $generated@@69)) (= (type $generated@@560) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@558 ($generated@@166 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@161) (< 0 ($generated ($generated@@86 $generated@@558 $generated@@561)))) ($generated@@258 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@86 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@79 $generated@@558 ($generated@@166 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@82) (= ($generated@@148 $generated@@563 $generated@@145)  (or (= $generated@@563 $generated@@142) ($generated@@562 ($generated@@171 $generated@@563)))))
 :pattern ( ($generated@@148 $generated@@563 $generated@@145))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@152) (= (type $generated@@565) $generated@@69)) (= (type $generated@@566) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@257 $generated@@566) (and ($generated@@150 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@69) ($generated@@79 $generated@@564 ($generated@@151 $generated@@565 $generated@@567) $generated@@566))
 :pattern ( ($generated@@79 $generated@@564 ($generated@@151 $generated@@565 $generated@@567) $generated@@566))
))))) ($generated@@258 ($generated@@159 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@258 ($generated@@159 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@152) (= (type $generated@@569) $generated@@69)) (= (type $generated@@570) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@257 $generated@@570) (and ($generated@@150 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@69) ($generated@@79 $generated@@568 ($generated@@151 $generated@@571 $generated@@569) $generated@@570))
 :pattern ( ($generated@@79 $generated@@568 ($generated@@151 $generated@@571 $generated@@569) $generated@@570))
))))) ($generated@@258 ($generated@@160 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@258 ($generated@@160 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@161) (= (type $generated@@573) $generated@@161)) (= ($generated@@233 ($generated@@253 $generated@@572) ($generated@@253 $generated@@573)) ($generated@@253 ($generated@@233 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@233 ($generated@@253 $generated@@572) ($generated@@253 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@278 ($generated@@253 $generated@@574)) ($generated@@253 ($generated@@278 $generated@@574)))
 :pattern ( ($generated@@278 ($generated@@253 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@273 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@272 $generated@@576)) (= ($generated@@271 $generated@@575) 0)) (= $generated@@575 ($generated@@270 $generated@@576))))
 :pattern ( ($generated@@271 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@81 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@291 ($generated@@87 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@291 $generated@@577) ($generated ($generated@@86 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@291 ($generated@@87 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@582) $generated@@2)) ($generated@@79 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@79 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@584) $generated@@3)) ($generated@@79 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@79 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@586) $generated@@4)) ($generated@@79 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@79 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@588) $generated@@447)) ($generated@@79 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@79 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@590) $generated@@161)) ($generated@@79 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@79 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@272 $generated@@161)) (= (type $generated@@592) $generated@@69)) (= ($generated@@148 $generated@@591 ($generated@@489 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@271 $generated@@591))) ($generated@@234 ($generated@@490 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@490 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@148 $generated@@591 ($generated@@489 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@272 $generated@@161)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@271 $generated@@595))) (< ($generated@@528 ($generated@@336 $generated@@152 ($generated@@490 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@528 ($generated@@336 $generated@@152 ($generated@@490 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@299 $generated@@161 $generated@@161)) (= (type $generated@@598) $generated@@69)) (= (type $generated@@599) $generated@@69)) ($generated@@148 $generated@@597 ($generated@@404 $generated@@598 $generated@@599))) (and (and ($generated@@148 ($generated@@297 $generated@@597) ($generated@@243 $generated@@598)) ($generated@@148 ($generated@@347 $generated@@597) ($generated@@243 $generated@@599))) ($generated@@148 ($generated@@378 $generated@@597) ($generated@@243 ($generated@@151 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@148 $generated@@597 ($generated@@404 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@317 $generated@@161 $generated@@161)) (= (type $generated@@601) $generated@@69)) (= (type $generated@@602) $generated@@69)) ($generated@@148 $generated@@600 ($generated@@412 $generated@@601 $generated@@602))) (and (and ($generated@@148 ($generated@@315 $generated@@600) ($generated@@248 $generated@@601)) ($generated@@148 ($generated@@358 $generated@@600) ($generated@@248 $generated@@602))) ($generated@@148 ($generated@@386 $generated@@600) ($generated@@248 ($generated@@151 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@148 $generated@@600 ($generated@@412 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@148 $generated@@603 $generated@@46))
 :pattern ( ($generated@@148 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@148 $generated@@604 $generated@@47))
 :pattern ( ($generated@@148 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@148 $generated@@605 $generated@@44))
 :pattern ( ($generated@@148 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@447) ($generated@@148 $generated@@606 $generated@@45))
 :pattern ( ($generated@@148 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@161) ($generated@@148 $generated@@607 $generated@@48))
 :pattern ( ($generated@@148 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 (T@U) Bool)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () Bool)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () Int)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@608) $generated@@82) (= (type $generated@@609) $generated@@82)) (= (type $generated@@610) ($generated@@176 $generated@@82 $generated@@4))) (= (type $generated@@611) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@612) $generated@@82)) (= (type $generated@@613) $generated@@82)) (= (type $generated@@614) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@616) ($generated@@272 $generated@@161))) (= (type $generated@@618) $generated@@82)) (= (type $generated@@619) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@621  (=> (= $generated@@608 $generated@@142) (and (=> (= (ControlFlow 0 3) (- 0 8)) true) (and (=> (= (ControlFlow 0 3) (- 0 7)) (not (= $generated@@609 $generated@@142))) (and (=> (= (ControlFlow 0 3) (- 0 6)) true) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not (= $generated@@609 $generated@@142))) (and (=> (= (ControlFlow 0 3) (- 0 4)) true) (=> (= (ControlFlow 0 3) (- 0 2)) (not (= $generated@@609 $generated@@142)))))))))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (= $generated@@610 ($generated@@175 $generated@@142 $generated@@611 $generated@@60 false)) (=> (and (and ($generated@@148 $generated@@612 $generated@@230) ($generated@@79 $generated@@612 $generated@@230 $generated@@611)) (and ($generated@@148 $generated@@613 $generated@@145) ($generated@@79 $generated@@613 $generated@@145 $generated@@611))) (=> (and (and (and ($generated@@257 $generated@@614) ($generated@@615 $generated@@614)) (and ($generated@@148 $generated@@609 $generated@@230) ($generated@@79 $generated@@609 $generated@@230 $generated@@614))) (and (and ($generated@@148 $generated@@608 $generated@@145) ($generated@@79 $generated@@608 $generated@@145 $generated@@614)) (and (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@82) (=> (and (not (= $generated@@624 $generated@@142)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@611 $generated@@624) $generated@@60))) (= ($generated@@86 $generated@@614 $generated@@624) ($generated@@86 $generated@@611 $generated@@624))))
 :pattern ( ($generated@@86 $generated@@614 $generated@@624))
)) ($generated@@137 $generated@@611 $generated@@614)))) (and (=> (= (ControlFlow 0 9) 1) $generated@@622) (=> (= (ControlFlow 0 9) 3) $generated@@621)))))))
(let (($generated@@625  (=> (and ($generated@@257 $generated@@611) ($generated@@615 $generated@@611)) (=> (and (and ($generated@@148 $generated@@616 ($generated@@489 $generated@@45)) ($generated@@79 $generated@@616 ($generated@@489 $generated@@45) $generated@@611)) (and (=> $generated@@617 (and ($generated@@148 $generated@@618 $generated@@230) ($generated@@79 $generated@@618 $generated@@230 $generated@@611))) true)) (=> (and (and (and ($generated@@148 $generated@@619 $generated@@145) ($generated@@79 $generated@@619 $generated@@145 $generated@@611)) true) (and (= 1 $generated@@620) (= (ControlFlow 0 10) 9))) $generated@@623)))))
$generated@@625)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@166 (Int) T@U)
(declare-fun $generated@@167 (T@U) Int)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@171 (T@T) T@U)
(declare-fun $generated@@172 (T@U) Int)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@T T@U) T@U)
(declare-fun $generated@@194 () T@T)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (let (($generated@@164 (type $generated@@163)))
(= (type ($generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@162 $generated@@165) $generated@@165)
 :pattern ( ($generated@@162 $generated@@165))
)))
(assert  (and (= ($generated@@1 $generated@@168) 11) (forall (($generated@@169 Int) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))))
(assert (forall (($generated@@170 Int) ) (!  (=> (and (<= 0 $generated@@170) (< $generated@@170 65536)) (= ($generated@@167 ($generated@@166 $generated@@170)) $generated@@170))
 :pattern ( ($generated@@166 $generated@@170))
)))
(assert  (and (and (forall (($generated@@175 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@175)) 12)) (forall (($generated@@176 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@173 $generated@@176))
))) (forall (($generated@@177 T@T) ) (! (= (type ($generated@@171 $generated@@177)) ($generated@@173 $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
))))
(assert (forall (($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@178)) 0)
 :pattern ( ($generated@@171 $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(= (type ($generated@@179 $generated@@180 $generated@@181)) ($generated@@173 $generated@@182)))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
 (=> (= (type $generated@@183) ($generated@@173 $generated@@185)) (= ($generated@@172 ($generated@@179 $generated@@183 $generated@@184)) (+ 1 ($generated@@172 $generated@@183)))))
 :pattern ( ($generated@@179 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (!  (=> (= (type $generated@@186) $generated@@168) (and (and (= ($generated@@166 ($generated@@167 $generated@@186)) $generated@@186) (<= 0 ($generated@@167 $generated@@186))) (< ($generated@@167 $generated@@186) 65536)))
 :pattern ( ($generated@@167 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@187) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@188) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@189) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@187 $generated@@189))) (and ($generated@@44 $generated@@187 $generated@@188) ($generated@@44 $generated@@188 $generated@@189))) ($generated@@44 $generated@@187 $generated@@189))
 :pattern ( ($generated@@44 $generated@@187 $generated@@188) ($generated@@44 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@174 (type $generated@@190))))
 (=> (= (type $generated@@190) ($generated@@173 $generated@@191)) (<= 0 ($generated@@172 $generated@@190))))
 :pattern ( ($generated@@172 $generated@@190))
)))
(assert  (and (and (= ($generated@@1 $generated@@194) 13) (forall (($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@192 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@U) ) (! (= (type ($generated@@193 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@193 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(= ($generated@@193 $generated@@199 ($generated@@192 $generated@@198)) $generated@@198))
 :pattern ( ($generated@@192 $generated@@198))
)))
(assert  (and (forall (($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@174 (type $generated@@202))))
(= (type ($generated@@200 $generated@@202)) ($generated@@173 $generated@@203)))
 :pattern ( ($generated@@200 $generated@@202))
)) (forall (($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@174 (type $generated@@204))))
(= (type ($generated@@201 $generated@@204)) $generated@@205))
 :pattern ( ($generated@@201 $generated@@204))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
 (=> (= (type $generated@@206) ($generated@@173 $generated@@208)) (and (= ($generated@@200 ($generated@@179 $generated@@206 $generated@@207)) $generated@@206) (= ($generated@@201 ($generated@@179 $generated@@206 $generated@@207)) $generated@@207))))
 :pattern ( ($generated@@179 $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ) (! (= ($generated@@192 ($generated@@162 $generated@@209)) ($generated@@162 ($generated@@192 $generated@@209)))
 :pattern ( ($generated@@192 ($generated@@162 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@174 (type $generated@@210))))
 (=> (and (= (type $generated@@210) ($generated@@173 $generated@@211)) (= ($generated@@172 $generated@@210) 0)) (= $generated@@210 ($generated@@171 $generated@@211))))
 :pattern ( ($generated@@172 $generated@@210))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
