unsat
(let-proof ((prem_a0 (assume (and (or (and (p a) (p b)) (and (p b) (p c))) (not (p b))))))
(let-proof ((step_0 (true+ )))
(let-proof ((step_1 (=+1 (p b) (= (p b) true))))
(let-proof ((step_2 (=+2 (p b) true)))
(let-proof ((step_3 (res (p b) step_1 step_2)))
(let-proof ((step_4 (=-1 (p b) true)))
(let-proof ((step_5 (=+2 (p b) (= (p b) true))))
(let-proof ((step_6 (res (p b) step_4 step_5)))
(let-proof ((step_7 (res (= (p b) true) step_3 step_6)))
(let-proof ((step_8 (res true step_0 step_7)))
(let-proof ((step_9 (=-2 (p b) (= (p b) true))))
(let-proof ((step_10 (res (= (p b) (= (p b) true)) step_8 step_9)))
(let-proof ((step_11 (not+ (p b))))
(let-proof ((step_12 (cong (not (p b)) (not (= (p b) true)))))
(let-proof ((step_13 (res (= (p b) (= (p b) true)) step_8 step_12)))
(let-proof ((step_14 (=-2 (not (p b)) (not (= (p b) true)))))
(let-proof ((step_15 (res (= (not (p b)) (not (= (p b) true))) step_13 step_14)))
(let-proof ((step_16 (res (not (p b)) step_11 step_15)))
(let-proof ((step_17 (not- (= (p b) true))))
(let-proof ((step_18 (res (not (= (p b) true)) step_16 step_17)))
(let-proof ((step_19 (and- 1 (or (and (p a) (p b)) (and (p b) (p c))) (not (p b)))))
(let-proof ((step_20 (not- (p b))))
(let-proof ((step_21 (res (not (p b)) step_19 step_20)))
(let-proof ((step_22 (res (and (or (and (p a) (p b)) (and (p b) (p c))) (not (p b))) prem_a0 step_21)))
(let-proof ((step_23 (res (p b) step_18 step_22)))
(let-proof ((step_24 (and- 0 (or (and (p a) (p b)) (and (p b) (p c))) (not (p b)))))
(let-proof ((step_25 (res (and (or (and (p a) (p b)) (and (p b) (p c))) (not (p b))) prem_a0 step_24)))
(let-proof ((step_26 (or- (and (p a) (p b)) (and (p b) (p c)))))
(let-proof ((step_27 (res (or (and (p a) (p b)) (and (p b) (p c))) step_25 step_26)))
(let-proof ((step_28 (and- 0 (p b) (p c))))
(let-proof ((step_29 (res (p b) step_28 step_10)))
(let-proof ((step_30 (res (= (p b) true) step_29 step_23)))
(let-proof ((step_31 (res (and (p b) (p c)) step_27 step_30)))
(let-proof ((step_32 (and- 1 (p a) (p b))))
(let-proof ((step_33 (res (p b) step_32 step_10)))
(let-proof ((step_34 (res (= (p b) true) step_33 step_23)))
(let-proof ((step_35 (res (and (p a) (p b)) step_31 step_34)))
step_35
)))))))))))))))))))))))))))))))))))))
