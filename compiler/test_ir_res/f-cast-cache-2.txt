vars: ONE SHRT_MAX SHRT_MIN a b err f
premises:
  a0: (= SHRT_MIN (* -1 (* 32768 ONE)))
  a1: (= SHRT_MAX (* 32767 ONE))
  a2: (= b (* -1 a))
  a3: (= (f (* -1 a)) (* -1 (f a)))
  a4: (or (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) err)
  a5: (not err)
  a6: (< (f a) SHRT_MIN)
steps:
  derived clause number: 0
  rule: or_single
  expr args: []
  clause args: [premise a0]
  backptr: nil
  conclusion: (or (= SHRT_MIN (* -1 (* 32768 ONE))))

  derived clause number: 1
  rule: or_single
  expr args: []
  clause args: [premise a1]
  backptr: nil
  conclusion: (or (= SHRT_MAX (* 32767 ONE)))

  derived clause number: 2
  rule: or_single
  expr args: []
  clause args: [premise a2]
  backptr: nil
  conclusion: (or (= b (* -1 a)))

  derived clause number: 3
  rule: or_single
  expr args: []
  clause args: [premise a3]
  backptr: nil
  conclusion: (or (= (f (* -1 a)) (* -1 (f a))))

  derived clause number: 4
  rule: or_single
  expr args: []
  clause args: [premise a4]
  backptr: nil
  conclusion: (or (or (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) err))

  derived clause number: 5
  rule: or_single
  expr args: []
  clause args: [premise a5]
  backptr: nil
  conclusion: (or (not err))

  derived clause number: 6
  rule: or_single
  expr args: []
  clause args: [premise a6]
  backptr: nil
  conclusion: (or (< (f a) SHRT_MIN))

  derived clause number: 7
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (* 32768 ONE)) SHRT_MIN) (not (= SHRT_MIN (* -1 (* 32768 ONE)))))

  derived clause number: 8
  rule: trichotomy
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (< (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE)) (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE)) (< (* 0 ONE) (+ SHRT_MIN (* 32768 ONE))))

  derived clause number: 9
  rule: add_single
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN)) (* 1 SHRT_MIN))

  derived clause number: 10
  rule: or_single
  expr args: []
  clause args: [derived 9]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN)) (* 1 SHRT_MIN)))

  derived clause number: 11
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 SHRT_MIN) (+ (* 1 SHRT_MIN))) (not (= (+ (* 1 SHRT_MIN)) (* 1 SHRT_MIN))))

  derived clause number: 12
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN)) (* 1 SHRT_MIN))), (or (= (* 1 SHRT_MIN) (+ (* 1 SHRT_MIN)))), (or )]
  clause args: [derived 10, derived 11]
  backptr: nil
  conclusion: (or (= (* 1 SHRT_MIN) (+ (* 1 SHRT_MIN))))

  derived clause number: 13
  rule: add_single
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 32768 ONE)) (* 32768 ONE))

  derived clause number: 14
  rule: or_single
  expr args: []
  clause args: [derived 13]
  backptr: nil
  conclusion: (or (= (+ (* 32768 ONE)) (* 32768 ONE)))

  derived clause number: 15
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 32768 ONE) (+ (* 32768 ONE))) (not (= (+ (* 32768 ONE)) (* 32768 ONE))))

  derived clause number: 16
  rule: resolution
  expr args: [(not (= (+ (* 32768 ONE)) (* 32768 ONE))), (or (= (* 32768 ONE) (+ (* 32768 ONE)))), (or )]
  clause args: [derived 14, derived 15]
  backptr: nil
  conclusion: (or (= (* 32768 ONE) (+ (* 32768 ONE))))

  derived clause number: 17
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (* 32768 ONE)) (* -1 (+ (* 32768 ONE)))) (not (= (* 32768 ONE) (+ (* 32768 ONE)))))

  derived clause number: 18
  rule: resolution
  expr args: [(not (= (* 32768 ONE) (+ (* 32768 ONE)))), (or (= (* -1 (* 32768 ONE)) (* -1 (+ (* 32768 ONE))))), (or )]
  clause args: [derived 16, derived 17]
  backptr: nil
  conclusion: (or (= (* -1 (* 32768 ONE)) (* -1 (+ (* 32768 ONE)))))

  derived clause number: 19
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* -1 (+ (* 32768 ONE))) (+ (* -32768 ONE)))

  derived clause number: 20
  rule: or_single
  expr args: []
  clause args: [derived 19]
  backptr: nil
  conclusion: (or (= (* -1 (+ (* 32768 ONE))) (+ (* -32768 ONE))))

  derived clause number: 21
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (* 32768 ONE)) (+ (* -32768 ONE))) (not (= (* -1 (* 32768 ONE)) (* -1 (+ (* 32768 ONE))))) (not (= (* -1 (+ (* 32768 ONE))) (+ (* -32768 ONE)))))

  derived clause number: 22
  rule: resolution
  expr args: [(not (= (* -1 (* 32768 ONE)) (* -1 (+ (* 32768 ONE))))), (or (= (* -1 (* 32768 ONE)) (+ (* -32768 ONE))) (not (= (* -1 (+ (* 32768 ONE))) (+ (* -32768 ONE))))), (or )]
  clause args: [derived 18, derived 21]
  backptr: nil
  conclusion: (or (= (* -1 (* 32768 ONE)) (+ (* -32768 ONE))) (not (= (* -1 (+ (* 32768 ONE))) (+ (* -32768 ONE)))))

  derived clause number: 23
  rule: resolution
  expr args: [(not (= (* -1 (+ (* 32768 ONE))) (+ (* -32768 ONE)))), (or (= (* -1 (* 32768 ONE)) (+ (* -32768 ONE)))), (or )]
  clause args: [derived 20, derived 22]
  backptr: nil
  conclusion: (or (= (* -1 (* 32768 ONE)) (+ (* -32768 ONE))))

  derived clause number: 24
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (* -1 (* 32768 ONE))) (* -1 (+ (* -32768 ONE)))) (not (= (* -1 (* 32768 ONE)) (+ (* -32768 ONE)))))

  derived clause number: 25
  rule: resolution
  expr args: [(not (= (* -1 (* 32768 ONE)) (+ (* -32768 ONE)))), (or (= (* -1 (* -1 (* 32768 ONE))) (* -1 (+ (* -32768 ONE))))), (or )]
  clause args: [derived 23, derived 24]
  backptr: nil
  conclusion: (or (= (* -1 (* -1 (* 32768 ONE))) (* -1 (+ (* -32768 ONE)))))

  derived clause number: 26
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* -1 (+ (* -32768 ONE))) (+ (* 32768 ONE)))

  derived clause number: 27
  rule: or_single
  expr args: []
  clause args: [derived 26]
  backptr: nil
  conclusion: (or (= (* -1 (+ (* -32768 ONE))) (+ (* 32768 ONE))))

  derived clause number: 28
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (* -1 (* 32768 ONE))) (+ (* 32768 ONE))) (not (= (* -1 (* -1 (* 32768 ONE))) (* -1 (+ (* -32768 ONE))))) (not (= (* -1 (+ (* -32768 ONE))) (+ (* 32768 ONE)))))

  derived clause number: 29
  rule: resolution
  expr args: [(not (= (* -1 (* -1 (* 32768 ONE))) (* -1 (+ (* -32768 ONE))))), (or (= (* -1 (* -1 (* 32768 ONE))) (+ (* 32768 ONE))) (not (= (* -1 (+ (* -32768 ONE))) (+ (* 32768 ONE))))), (or )]
  clause args: [derived 25, derived 28]
  backptr: nil
  conclusion: (or (= (* -1 (* -1 (* 32768 ONE))) (+ (* 32768 ONE))) (not (= (* -1 (+ (* -32768 ONE))) (+ (* 32768 ONE)))))

  derived clause number: 30
  rule: resolution
  expr args: [(not (= (* -1 (+ (* -32768 ONE))) (+ (* 32768 ONE)))), (or (= (* -1 (* -1 (* 32768 ONE))) (+ (* 32768 ONE)))), (or )]
  clause args: [derived 27, derived 29]
  backptr: nil
  conclusion: (or (= (* -1 (* -1 (* 32768 ONE))) (+ (* 32768 ONE))))

  derived clause number: 31
  rule: add_single
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 0 ONE)) (* 0 ONE))

  derived clause number: 32
  rule: or_single
  expr args: []
  clause args: [derived 31]
  backptr: nil
  conclusion: (or (= (+ (* 0 ONE)) (* 0 ONE)))

  derived clause number: 33
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 0 ONE) (+ (* 0 ONE))) (not (= (+ (* 0 ONE)) (* 0 ONE))))

  derived clause number: 34
  rule: resolution
  expr args: [(not (= (+ (* 0 ONE)) (* 0 ONE))), (or (= (* 0 ONE) (+ (* 0 ONE)))), (or )]
  clause args: [derived 32, derived 33]
  backptr: nil
  conclusion: (or (= (* 0 ONE) (+ (* 0 ONE))))

  derived clause number: 35
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (* 0 ONE)) (* 1 (+ (* 0 ONE)))) (not (= (* 0 ONE) (+ (* 0 ONE)))))

  derived clause number: 36
  rule: resolution
  expr args: [(not (= (* 0 ONE) (+ (* 0 ONE)))), (or (= (* 1 (* 0 ONE)) (* 1 (+ (* 0 ONE))))), (or )]
  clause args: [derived 34, derived 35]
  backptr: nil
  conclusion: (or (= (* 1 (* 0 ONE)) (* 1 (+ (* 0 ONE)))))

  derived clause number: 37
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* 1 (+ (* 0 ONE))) (+ (* 0 ONE)))

  derived clause number: 38
  rule: or_single
  expr args: []
  clause args: [derived 37]
  backptr: nil
  conclusion: (or (= (* 1 (+ (* 0 ONE))) (+ (* 0 ONE))))

  derived clause number: 39
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (* 0 ONE)) (+ (* 0 ONE))) (not (= (* 1 (* 0 ONE)) (* 1 (+ (* 0 ONE))))) (not (= (* 1 (+ (* 0 ONE))) (+ (* 0 ONE)))))

  derived clause number: 40
  rule: resolution
  expr args: [(not (= (* 1 (* 0 ONE)) (* 1 (+ (* 0 ONE))))), (or (= (* 1 (* 0 ONE)) (+ (* 0 ONE))) (not (= (* 1 (+ (* 0 ONE))) (+ (* 0 ONE))))), (or )]
  clause args: [derived 36, derived 39]
  backptr: nil
  conclusion: (or (= (* 1 (* 0 ONE)) (+ (* 0 ONE))) (not (= (* 1 (+ (* 0 ONE))) (+ (* 0 ONE)))))

  derived clause number: 41
  rule: resolution
  expr args: [(not (= (* 1 (+ (* 0 ONE))) (+ (* 0 ONE)))), (or (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))), (or )]
  clause args: [derived 38, derived 40]
  backptr: nil
  conclusion: (or (= (* 1 (* 0 ONE)) (+ (* 0 ONE))))

  derived clause number: 42
  rule: mul_single
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* 1 SHRT_MIN) SHRT_MIN)

  derived clause number: 43
  rule: or_single
  expr args: []
  clause args: [derived 42]
  backptr: nil
  conclusion: (or (= (* 1 SHRT_MIN) SHRT_MIN))

  derived clause number: 44
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN)) SHRT_MIN) (not (= (+ (* 1 SHRT_MIN)) (* 1 SHRT_MIN))) (not (= (* 1 SHRT_MIN) SHRT_MIN)))

  derived clause number: 45
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN)) (* 1 SHRT_MIN))), (or (= (+ (* 1 SHRT_MIN)) SHRT_MIN) (not (= (* 1 SHRT_MIN) SHRT_MIN))), (or )]
  clause args: [derived 10, derived 44]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN)) SHRT_MIN) (not (= (* 1 SHRT_MIN) SHRT_MIN)))

  derived clause number: 46
  rule: resolution
  expr args: [(not (= (* 1 SHRT_MIN) SHRT_MIN)), (or (= (+ (* 1 SHRT_MIN)) SHRT_MIN)), (or )]
  clause args: [derived 43, derived 45]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN)) SHRT_MIN))

  derived clause number: 47
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= SHRT_MIN (+ (* 1 SHRT_MIN))) (not (= (+ (* 1 SHRT_MIN)) SHRT_MIN)))

  derived clause number: 48
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN)) SHRT_MIN)), (or (= SHRT_MIN (+ (* 1 SHRT_MIN)))), (or )]
  clause args: [derived 46, derived 47]
  backptr: nil
  conclusion: (or (= SHRT_MIN (+ (* 1 SHRT_MIN))))

  derived clause number: 49
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* 32768 ONE)) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)))) (not (= SHRT_MIN (+ (* 1 SHRT_MIN)))) (not (= (* 32768 ONE) (+ (* 32768 ONE)))))

  derived clause number: 50
  rule: resolution
  expr args: [(not (= SHRT_MIN (+ (* 1 SHRT_MIN)))), (or (= (+ SHRT_MIN (* 32768 ONE)) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)))) (not (= (* 32768 ONE) (+ (* 32768 ONE))))), (or )]
  clause args: [derived 48, derived 49]
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* 32768 ONE)) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)))) (not (= (* 32768 ONE) (+ (* 32768 ONE)))))

  derived clause number: 51
  rule: resolution
  expr args: [(not (= (* 32768 ONE) (+ (* 32768 ONE)))), (or (= (+ SHRT_MIN (* 32768 ONE)) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE))))), (or )]
  clause args: [derived 16, derived 50]
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* 32768 ONE)) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)))))

  derived clause number: 52
  rule: flatten
  expr args: [(+ (+ (* 32768 ONE))), (+ (+ (* 1 SHRT_MIN)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (+ (* 32768 ONE))))

  derived clause number: 53
  rule: or_single
  expr args: []
  clause args: [derived 52]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (+ (* 32768 ONE)))))

  derived clause number: 54
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN)), (+ (+ (* 32768 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))

  derived clause number: 55
  rule: or_single
  expr args: []
  clause args: [derived 54]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE))))

  derived clause number: 56
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (+ (* 32768 ONE))))) (not (= (+ (* 1 SHRT_MIN) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))))

  derived clause number: 57
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (+ (* 32768 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE))) (not (= (+ (* 1 SHRT_MIN) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE))))), (or )]
  clause args: [derived 53, derived 56]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE))) (not (= (+ (* 1 SHRT_MIN) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))))

  derived clause number: 58
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))), (or )]
  clause args: [derived 55, derived 57]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE))))

  derived clause number: 59
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* 32768 ONE)) (+ (* 1 SHRT_MIN) (* 32768 ONE))) (not (= (+ SHRT_MIN (* 32768 ONE)) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE))))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))))

  derived clause number: 60
  rule: resolution
  expr args: [(not (= (+ SHRT_MIN (* 32768 ONE)) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE))))), (or (= (+ SHRT_MIN (* 32768 ONE)) (+ (* 1 SHRT_MIN) (* 32768 ONE))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE))))), (or )]
  clause args: [derived 51, derived 59]
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* 32768 ONE)) (+ (* 1 SHRT_MIN) (* 32768 ONE))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))))

  derived clause number: 61
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))), (or (= (+ SHRT_MIN (* 32768 ONE)) (+ (* 1 SHRT_MIN) (* 32768 ONE)))), (or )]
  clause args: [derived 58, derived 60]
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* 32768 ONE)) (+ (* 1 SHRT_MIN) (* 32768 ONE))))

  derived clause number: 62
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (+ (* 1 SHRT_MIN) (* 32768 ONE)))) (not (= (+ SHRT_MIN (* 32768 ONE)) (+ (* 1 SHRT_MIN) (* 32768 ONE)))))

  derived clause number: 63
  rule: resolution
  expr args: [(not (= (+ SHRT_MIN (* 32768 ONE)) (+ (* 1 SHRT_MIN) (* 32768 ONE)))), (or (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (+ (* 1 SHRT_MIN) (* 32768 ONE))))), (or )]
  clause args: [derived 61, derived 62]
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (+ (* 1 SHRT_MIN) (* 32768 ONE)))))

  derived clause number: 64
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* -1 (+ (* 1 SHRT_MIN) (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE)))

  derived clause number: 65
  rule: or_single
  expr args: []
  clause args: [derived 64]
  backptr: nil
  conclusion: (or (= (* -1 (+ (* 1 SHRT_MIN) (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE))))

  derived clause number: 66
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (not (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (+ (* 1 SHRT_MIN) (* 32768 ONE))))) (not (= (* -1 (+ (* 1 SHRT_MIN) (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE)))))

  derived clause number: 67
  rule: resolution
  expr args: [(not (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (+ (* 1 SHRT_MIN) (* 32768 ONE))))), (or (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (not (= (* -1 (+ (* 1 SHRT_MIN) (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE))))), (or )]
  clause args: [derived 63, derived 66]
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (not (= (* -1 (+ (* 1 SHRT_MIN) (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE)))))

  derived clause number: 68
  rule: resolution
  expr args: [(not (= (* -1 (+ (* 1 SHRT_MIN) (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE)))), (or (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE)))), (or )]
  clause args: [derived 65, derived 67]
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE))))

  derived clause number: 69
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE)))) (not (= (* 1 SHRT_MIN) (+ (* 1 SHRT_MIN)))) (not (= (* -1 (* -1 (* 32768 ONE))) (+ (* 32768 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE)))))

  derived clause number: 70
  rule: resolution
  expr args: [(not (= (* 1 SHRT_MIN) (+ (* 1 SHRT_MIN)))), (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE)))) (not (= (* -1 (* -1 (* 32768 ONE))) (+ (* 32768 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE))))), (or )]
  clause args: [derived 12, derived 69]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE)))) (not (= (* -1 (* -1 (* 32768 ONE))) (+ (* 32768 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE)))))

  derived clause number: 71
  rule: resolution
  expr args: [(not (= (* -1 (* -1 (* 32768 ONE))) (+ (* 32768 ONE)))), (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE))))), (or )]
  clause args: [derived 30, derived 70]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE)))))

  derived clause number: 72
  rule: resolution
  expr args: [(not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))), (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE)))) (not (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE))))), (or )]
  clause args: [derived 41, derived 71]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE)))) (not (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE)))))

  derived clause number: 73
  rule: resolution
  expr args: [(not (= (* -1 (+ SHRT_MIN (* 32768 ONE))) (+ (* -1 SHRT_MIN) (* -32768 ONE)))), (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))))), (or )]
  clause args: [derived 68, derived 72]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE)))))

  derived clause number: 74
  rule: flatten
  expr args: [(+ (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))), (+ (+ (* 1 SHRT_MIN)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))))

  derived clause number: 75
  rule: or_single
  expr args: []
  clause args: [derived 74]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE)))))

  derived clause number: 76
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))), (+ (+ (* 32768 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))))

  derived clause number: 77
  rule: or_single
  expr args: []
  clause args: [derived 76]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE)))))

  derived clause number: 78
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE)))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))))) (not (= (+ (* 1 SHRT_MIN) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))))))

  derived clause number: 79
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE)))) (not (= (+ (* 1 SHRT_MIN) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE)))))), (or )]
  clause args: [derived 75, derived 78]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE)))) (not (= (+ (* 1 SHRT_MIN) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))))))

  derived clause number: 80
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))))), (or )]
  clause args: [derived 77, derived 79]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE)))))

  derived clause number: 81
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE))), (+ (+ (* 0 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE))))

  derived clause number: 82
  rule: or_single
  expr args: []
  clause args: [derived 81]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE)))))

  derived clause number: 83
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE)))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE))))))

  derived clause number: 84
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE)))))), (or )]
  clause args: [derived 80, derived 83]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE))))))

  derived clause number: 85
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE))))), (or )]
  clause args: [derived 82, derived 84]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE)))))

  derived clause number: 86
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)), (+ (+ (* -1 SHRT_MIN) (* -32768 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)))

  derived clause number: 87
  rule: or_single
  expr args: []
  clause args: [derived 86]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE))))

  derived clause number: 88
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE))))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)))))

  derived clause number: 89
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE))))), (or )]
  clause args: [derived 85, derived 88]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)))))

  derived clause number: 90
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)))), (or )]
  clause args: [derived 87, derived 89]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE))))

  derived clause number: 91
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE))) (not (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)))))

  derived clause number: 92
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))))), (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE))))), (or )]
  clause args: [derived 73, derived 91]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)))))

  derived clause number: 93
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN)) (+ (* 32768 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* -32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)))), (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)))), (or )]
  clause args: [derived 90, derived 92]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE))))

  derived clause number: 94
  rule: consolidate
  expr args: [(+ (* 1 SHRT_MIN) (* -1 SHRT_MIN)), (+ (* 32768 ONE) (* 0 ONE) (* -32768 ONE)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)) (+ (* 1 SHRT_MIN) (* -1 SHRT_MIN)))

  derived clause number: 95
  rule: or_single
  expr args: []
  clause args: [derived 94]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)) (+ (* 1 SHRT_MIN) (* -1 SHRT_MIN))))

  derived clause number: 96
  rule: consolidate
  expr args: [(+ ), (+ (* 1 SHRT_MIN) (* -1 SHRT_MIN)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* -1 SHRT_MIN)) (+ ))

  derived clause number: 97
  rule: or_single
  expr args: []
  clause args: [derived 96]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 SHRT_MIN)) (+ )))

  derived clause number: 98
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)) (+ )) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)) (+ (* 1 SHRT_MIN) (* -1 SHRT_MIN)))) (not (= (+ (* 1 SHRT_MIN) (* -1 SHRT_MIN)) (+ ))))

  derived clause number: 99
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)) (+ (* 1 SHRT_MIN) (* -1 SHRT_MIN)))), (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)) (+ )) (not (= (+ (* 1 SHRT_MIN) (* -1 SHRT_MIN)) (+ )))), (or )]
  clause args: [derived 95, derived 98]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)) (+ )) (not (= (+ (* 1 SHRT_MIN) (* -1 SHRT_MIN)) (+ ))))

  derived clause number: 100
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* -1 SHRT_MIN)) (+ ))), (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)) (+ ))), (or )]
  clause args: [derived 97, derived 99]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)) (+ )))

  derived clause number: 101
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ )) (not (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)) (+ ))))

  derived clause number: 102
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)))), (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ )) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)) (+ )))), (or )]
  clause args: [derived 93, derived 101]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ )) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)) (+ ))))

  derived clause number: 103
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* -1 SHRT_MIN) (* -32768 ONE)) (+ ))), (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ ))), (or )]
  clause args: [derived 100, derived 102]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ )))

  derived clause number: 104
  rule: consolidate
  expr args: [(+ ), (+ (* 0 ONE)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 0 ONE)) (+ ))

  derived clause number: 105
  rule: or_single
  expr args: []
  clause args: [derived 104]
  backptr: nil
  conclusion: (or (= (+ (* 0 ONE)) (+ )))

  derived clause number: 106
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ ) (+ (* 0 ONE))) (not (= (+ (* 0 ONE)) (+ ))))

  derived clause number: 107
  rule: resolution
  expr args: [(not (= (+ (* 0 ONE)) (+ ))), (or (= (+ ) (+ (* 0 ONE)))), (or )]
  clause args: [derived 105, derived 106]
  backptr: nil
  conclusion: (or (= (+ ) (+ (* 0 ONE))))

  derived clause number: 108
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (* 0 ONE))) (not (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ ))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 109
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ ))), (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE))))), (or )]
  clause args: [derived 103, derived 108]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 110
  rule: resolution
  expr args: [(not (= (+ ) (+ (* 0 ONE)))), (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (* 0 ONE)))), (or )]
  clause args: [derived 107, derived 109]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (* 0 ONE))))

  derived clause number: 111
  rule: or_single_rev
  expr args: []
  clause args: [derived 110]
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* -1 (* -1 (* 32768 ONE))) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* 32768 ONE)))) (+ (* 0 ONE)))

  derived clause number: 112
  rule: farkas
  expr args: []
  clause args: [derived 111]
  backptr: nil
  conclusion: (or (not (= SHRT_MIN (* -1 (* 32768 ONE)))) (not (< (* 0 ONE) (+ SHRT_MIN (* 32768 ONE)))))

  derived clause number: 113
  rule: resolution
  expr args: [(not (< (* 0 ONE) (+ SHRT_MIN (* 32768 ONE)))), (or (not (= SHRT_MIN (* -1 (* 32768 ONE))))), (or (< (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE)) (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE)))]
  clause args: [derived 8, derived 112]
  backptr: nil
  conclusion: (or (< (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE)) (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE)) (not (= SHRT_MIN (* -1 (* 32768 ONE)))))

  derived clause number: 114
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (* -1 (* 32768 ONE))) (* 1 (+ (* -32768 ONE)))) (not (= (* -1 (* 32768 ONE)) (+ (* -32768 ONE)))))

  derived clause number: 115
  rule: resolution
  expr args: [(not (= (* -1 (* 32768 ONE)) (+ (* -32768 ONE)))), (or (= (* 1 (* -1 (* 32768 ONE))) (* 1 (+ (* -32768 ONE))))), (or )]
  clause args: [derived 23, derived 114]
  backptr: nil
  conclusion: (or (= (* 1 (* -1 (* 32768 ONE))) (* 1 (+ (* -32768 ONE)))))

  derived clause number: 116
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* 1 (+ (* -32768 ONE))) (+ (* -32768 ONE)))

  derived clause number: 117
  rule: or_single
  expr args: []
  clause args: [derived 116]
  backptr: nil
  conclusion: (or (= (* 1 (+ (* -32768 ONE))) (+ (* -32768 ONE))))

  derived clause number: 118
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (* -1 (* 32768 ONE))) (+ (* -32768 ONE))) (not (= (* 1 (* -1 (* 32768 ONE))) (* 1 (+ (* -32768 ONE))))) (not (= (* 1 (+ (* -32768 ONE))) (+ (* -32768 ONE)))))

  derived clause number: 119
  rule: resolution
  expr args: [(not (= (* 1 (* -1 (* 32768 ONE))) (* 1 (+ (* -32768 ONE))))), (or (= (* 1 (* -1 (* 32768 ONE))) (+ (* -32768 ONE))) (not (= (* 1 (+ (* -32768 ONE))) (+ (* -32768 ONE))))), (or )]
  clause args: [derived 115, derived 118]
  backptr: nil
  conclusion: (or (= (* 1 (* -1 (* 32768 ONE))) (+ (* -32768 ONE))) (not (= (* 1 (+ (* -32768 ONE))) (+ (* -32768 ONE)))))

  derived clause number: 120
  rule: resolution
  expr args: [(not (= (* 1 (+ (* -32768 ONE))) (+ (* -32768 ONE)))), (or (= (* 1 (* -1 (* 32768 ONE))) (+ (* -32768 ONE)))), (or )]
  clause args: [derived 117, derived 119]
  backptr: nil
  conclusion: (or (= (* 1 (* -1 (* 32768 ONE))) (+ (* -32768 ONE))))

  derived clause number: 121
  rule: add_single
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (+ (* -1 SHRT_MIN)) (* -1 SHRT_MIN))

  derived clause number: 122
  rule: or_single
  expr args: []
  clause args: [derived 121]
  backptr: nil
  conclusion: (or (= (+ (* -1 SHRT_MIN)) (* -1 SHRT_MIN)))

  derived clause number: 123
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 SHRT_MIN) (+ (* -1 SHRT_MIN))) (not (= (+ (* -1 SHRT_MIN)) (* -1 SHRT_MIN))))

  derived clause number: 124
  rule: resolution
  expr args: [(not (= (+ (* -1 SHRT_MIN)) (* -1 SHRT_MIN))), (or (= (* -1 SHRT_MIN) (+ (* -1 SHRT_MIN)))), (or )]
  clause args: [derived 122, derived 123]
  backptr: nil
  conclusion: (or (= (* -1 SHRT_MIN) (+ (* -1 SHRT_MIN))))

  derived clause number: 125
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (* 1 (+ (* 1 SHRT_MIN) (* 32768 ONE)))) (not (= (+ SHRT_MIN (* 32768 ONE)) (+ (* 1 SHRT_MIN) (* 32768 ONE)))))

  derived clause number: 126
  rule: resolution
  expr args: [(not (= (+ SHRT_MIN (* 32768 ONE)) (+ (* 1 SHRT_MIN) (* 32768 ONE)))), (or (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (* 1 (+ (* 1 SHRT_MIN) (* 32768 ONE))))), (or )]
  clause args: [derived 61, derived 125]
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (* 1 (+ (* 1 SHRT_MIN) (* 32768 ONE)))))

  derived clause number: 127
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* 1 (+ (* 1 SHRT_MIN) (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))

  derived clause number: 128
  rule: or_single
  expr args: []
  clause args: [derived 127]
  backptr: nil
  conclusion: (or (= (* 1 (+ (* 1 SHRT_MIN) (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE))))

  derived clause number: 129
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE))) (not (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (* 1 (+ (* 1 SHRT_MIN) (* 32768 ONE))))) (not (= (* 1 (+ (* 1 SHRT_MIN) (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))))

  derived clause number: 130
  rule: resolution
  expr args: [(not (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (* 1 (+ (* 1 SHRT_MIN) (* 32768 ONE))))), (or (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE))) (not (= (* 1 (+ (* 1 SHRT_MIN) (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE))))), (or )]
  clause args: [derived 126, derived 129]
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE))) (not (= (* 1 (+ (* 1 SHRT_MIN) (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))))

  derived clause number: 131
  rule: resolution
  expr args: [(not (= (* 1 (+ (* 1 SHRT_MIN) (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))), (or (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))), (or )]
  clause args: [derived 128, derived 130]
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE))))

  derived clause number: 132
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (* 0 ONE)) (* -1 (+ (* 0 ONE)))) (not (= (* 0 ONE) (+ (* 0 ONE)))))

  derived clause number: 133
  rule: resolution
  expr args: [(not (= (* 0 ONE) (+ (* 0 ONE)))), (or (= (* -1 (* 0 ONE)) (* -1 (+ (* 0 ONE))))), (or )]
  clause args: [derived 34, derived 132]
  backptr: nil
  conclusion: (or (= (* -1 (* 0 ONE)) (* -1 (+ (* 0 ONE)))))

  derived clause number: 134
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* -1 (+ (* 0 ONE))) (+ (* 0 ONE)))

  derived clause number: 135
  rule: or_single
  expr args: []
  clause args: [derived 134]
  backptr: nil
  conclusion: (or (= (* -1 (+ (* 0 ONE))) (+ (* 0 ONE))))

  derived clause number: 136
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (* 0 ONE)) (+ (* 0 ONE))) (not (= (* -1 (* 0 ONE)) (* -1 (+ (* 0 ONE))))) (not (= (* -1 (+ (* 0 ONE))) (+ (* 0 ONE)))))

  derived clause number: 137
  rule: resolution
  expr args: [(not (= (* -1 (* 0 ONE)) (* -1 (+ (* 0 ONE))))), (or (= (* -1 (* 0 ONE)) (+ (* 0 ONE))) (not (= (* -1 (+ (* 0 ONE))) (+ (* 0 ONE))))), (or )]
  clause args: [derived 133, derived 136]
  backptr: nil
  conclusion: (or (= (* -1 (* 0 ONE)) (+ (* 0 ONE))) (not (= (* -1 (+ (* 0 ONE))) (+ (* 0 ONE)))))

  derived clause number: 138
  rule: resolution
  expr args: [(not (= (* -1 (+ (* 0 ONE))) (+ (* 0 ONE)))), (or (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))), (or )]
  clause args: [derived 135, derived 137]
  backptr: nil
  conclusion: (or (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))

  derived clause number: 139
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (* -1 (* 32768 ONE))) (+ (* -32768 ONE)))) (not (= (* -1 SHRT_MIN) (+ (* -1 SHRT_MIN)))) (not (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 140
  rule: resolution
  expr args: [(not (= (* 1 (* -1 (* 32768 ONE))) (+ (* -32768 ONE)))), (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)))) (not (= (* -1 SHRT_MIN) (+ (* -1 SHRT_MIN)))) (not (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 120, derived 139]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)))) (not (= (* -1 SHRT_MIN) (+ (* -1 SHRT_MIN)))) (not (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 141
  rule: resolution
  expr args: [(not (= (* -1 SHRT_MIN) (+ (* -1 SHRT_MIN)))), (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 124, derived 140]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 142
  rule: resolution
  expr args: [(not (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))), (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 131, derived 141]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 143
  rule: resolution
  expr args: [(not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))), (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 138, derived 142]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)))))

  derived clause number: 144
  rule: flatten
  expr args: [(+ (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))), (+ (+ (* -32768 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))))

  derived clause number: 145
  rule: or_single
  expr args: []
  clause args: [derived 144]
  backptr: nil
  conclusion: (or (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)))))

  derived clause number: 146
  rule: flatten
  expr args: [(+ (* -32768 ONE) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))), (+ (+ (* -1 SHRT_MIN)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* -32768 ONE) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))))

  derived clause number: 147
  rule: or_single
  expr args: []
  clause args: [derived 146]
  backptr: nil
  conclusion: (or (= (+ (* -32768 ONE) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)))))

  derived clause number: 148
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)))) (not (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))))) (not (= (+ (* -32768 ONE) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))))))

  derived clause number: 149
  rule: resolution
  expr args: [(not (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)))) (not (= (+ (* -32768 ONE) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 145, derived 148]
  backptr: nil
  conclusion: (or (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)))) (not (= (+ (* -32768 ONE) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))))))

  derived clause number: 150
  rule: resolution
  expr args: [(not (= (+ (* -32768 ONE) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 147, derived 149]
  backptr: nil
  conclusion: (or (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)))))

  derived clause number: 151
  rule: flatten
  expr args: [(+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 0 ONE))), (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE))))

  derived clause number: 152
  rule: or_single
  expr args: []
  clause args: [derived 151]
  backptr: nil
  conclusion: (or (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)))))

  derived clause number: 153
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)))) (not (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))))) (not (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE))))))

  derived clause number: 154
  rule: resolution
  expr args: [(not (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)))) (not (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 150, derived 153]
  backptr: nil
  conclusion: (or (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)))) (not (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE))))))

  derived clause number: 155
  rule: resolution
  expr args: [(not (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE))))), (or (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE))))), (or )]
  clause args: [derived 152, derived 154]
  backptr: nil
  conclusion: (or (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)))))

  derived clause number: 156
  rule: flatten
  expr args: [(+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE)), (+ (+ (* 0 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)))

  derived clause number: 157
  rule: or_single
  expr args: []
  clause args: [derived 156]
  backptr: nil
  conclusion: (or (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE))))

  derived clause number: 158
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE))) (not (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE))))) (not (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)))))

  derived clause number: 159
  rule: resolution
  expr args: [(not (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE))))), (or (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE))) (not (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE))))), (or )]
  clause args: [derived 155, derived 158]
  backptr: nil
  conclusion: (or (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE))) (not (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)))))

  derived clause number: 160
  rule: resolution
  expr args: [(not (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)))), (or (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)))), (or )]
  clause args: [derived 157, derived 159]
  backptr: nil
  conclusion: (or (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE))))

  derived clause number: 161
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE))) (not (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))))) (not (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)))))

  derived clause number: 162
  rule: resolution
  expr args: [(not (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))))), (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE))) (not (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE))))), (or )]
  clause args: [derived 143, derived 161]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE))) (not (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)))))

  derived clause number: 163
  rule: resolution
  expr args: [(not (= (+ (+ (* -32768 ONE)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)))), (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)))), (or )]
  clause args: [derived 160, derived 162]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE))))

  derived clause number: 164
  rule: consolidate
  expr args: [(+ (* -1 SHRT_MIN) (* 1 SHRT_MIN)), (+ (* -32768 ONE) (* 32768 ONE) (* 0 ONE)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 SHRT_MIN)))

  derived clause number: 165
  rule: or_single
  expr args: []
  clause args: [derived 164]
  backptr: nil
  conclusion: (or (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 SHRT_MIN))))

  derived clause number: 166
  rule: consolidate
  expr args: [(+ ), (+ (* -1 SHRT_MIN) (* 1 SHRT_MIN)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* -1 SHRT_MIN) (* 1 SHRT_MIN)) (+ ))

  derived clause number: 167
  rule: or_single
  expr args: []
  clause args: [derived 166]
  backptr: nil
  conclusion: (or (= (+ (* -1 SHRT_MIN) (* 1 SHRT_MIN)) (+ )))

  derived clause number: 168
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)) (+ )) (not (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 SHRT_MIN)))) (not (= (+ (* -1 SHRT_MIN) (* 1 SHRT_MIN)) (+ ))))

  derived clause number: 169
  rule: resolution
  expr args: [(not (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 SHRT_MIN)))), (or (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)) (+ )) (not (= (+ (* -1 SHRT_MIN) (* 1 SHRT_MIN)) (+ )))), (or )]
  clause args: [derived 165, derived 168]
  backptr: nil
  conclusion: (or (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)) (+ )) (not (= (+ (* -1 SHRT_MIN) (* 1 SHRT_MIN)) (+ ))))

  derived clause number: 170
  rule: resolution
  expr args: [(not (= (+ (* -1 SHRT_MIN) (* 1 SHRT_MIN)) (+ ))), (or (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)) (+ ))), (or )]
  clause args: [derived 167, derived 169]
  backptr: nil
  conclusion: (or (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)) (+ )))

  derived clause number: 171
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)))) (not (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)) (+ ))))

  derived clause number: 172
  rule: resolution
  expr args: [(not (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)))), (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)) (+ )))), (or )]
  clause args: [derived 163, derived 171]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)) (+ ))))

  derived clause number: 173
  rule: resolution
  expr args: [(not (= (+ (* -32768 ONE) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE)) (+ ))), (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ ))), (or )]
  clause args: [derived 170, derived 172]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ )))

  derived clause number: 174
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ ))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 175
  rule: resolution
  expr args: [(not (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ ))), (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE))))), (or )]
  clause args: [derived 173, derived 174]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 176
  rule: resolution
  expr args: [(not (= (+ ) (+ (* 0 ONE)))), (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (* 0 ONE)))), (or )]
  clause args: [derived 107, derived 175]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (* 0 ONE))))

  derived clause number: 177
  rule: or_single_rev
  expr args: []
  clause args: [derived 176]
  backptr: nil
  conclusion: (= (+ (* 1 (* -1 (* 32768 ONE))) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE))) (+ (* 0 ONE)))

  derived clause number: 178
  rule: farkas
  expr args: []
  clause args: [derived 177]
  backptr: nil
  conclusion: (or (not (= (* -1 (* 32768 ONE)) SHRT_MIN)) (not (< (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))))

  derived clause number: 179
  rule: resolution
  expr args: [(not (< (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))), (or (not (= (* -1 (* 32768 ONE)) SHRT_MIN))), (or (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE)) (not (= SHRT_MIN (* -1 (* 32768 ONE)))))]
  clause args: [derived 113, derived 178]
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE)) (not (= SHRT_MIN (* -1 (* 32768 ONE)))) (not (= (* -1 (* 32768 ONE)) SHRT_MIN)))

  derived clause number: 180
  rule: resolution
  expr args: [(not (= (* -1 (* 32768 ONE)) SHRT_MIN)), (or (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE)) (not (= SHRT_MIN (* -1 (* 32768 ONE))))), (or (not (= SHRT_MIN (* -1 (* 32768 ONE)))))]
  clause args: [derived 7, derived 179]
  backptr: nil
  conclusion: (or (not (= SHRT_MIN (* -1 (* 32768 ONE)))) (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE)) (not (= SHRT_MIN (* -1 (* 32768 ONE)))))

  derived clause number: 181
  rule: factoring
  expr args: []
  clause args: [derived 180]
  backptr: nil
  conclusion: (or (not (= SHRT_MIN (* -1 (* 32768 ONE)))) (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE)))

  derived clause number: 182
  rule: resolution
  expr args: [(not (= SHRT_MIN (* -1 (* 32768 ONE)))), (or (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))), (or )]
  clause args: [derived 0, derived 181]
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE)))

  derived clause number: 183
  rule: total-int
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (<= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (* 0 ONE)) (<= (* 1 ONE) (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))))

  derived clause number: 184
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 32767 ONE) SHRT_MAX) (not (= SHRT_MAX (* 32767 ONE))))

  derived clause number: 185
  rule: trichotomy
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (< (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE)) (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE)) (< (* 0 ONE) (+ SHRT_MAX (* -1 (* 32767 ONE)))))

  derived clause number: 186
  rule: add_single
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MAX)) (* 1 SHRT_MAX))

  derived clause number: 187
  rule: or_single
  expr args: []
  clause args: [derived 186]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX)) (* 1 SHRT_MAX)))

  derived clause number: 188
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 SHRT_MAX) (+ (* 1 SHRT_MAX))) (not (= (+ (* 1 SHRT_MAX)) (* 1 SHRT_MAX))))

  derived clause number: 189
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX)) (* 1 SHRT_MAX))), (or (= (* 1 SHRT_MAX) (+ (* 1 SHRT_MAX)))), (or )]
  clause args: [derived 187, derived 188]
  backptr: nil
  conclusion: (or (= (* 1 SHRT_MAX) (+ (* 1 SHRT_MAX))))

  derived clause number: 190
  rule: add_single
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 32767 ONE)) (* 32767 ONE))

  derived clause number: 191
  rule: or_single
  expr args: []
  clause args: [derived 190]
  backptr: nil
  conclusion: (or (= (+ (* 32767 ONE)) (* 32767 ONE)))

  derived clause number: 192
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 32767 ONE) (+ (* 32767 ONE))) (not (= (+ (* 32767 ONE)) (* 32767 ONE))))

  derived clause number: 193
  rule: resolution
  expr args: [(not (= (+ (* 32767 ONE)) (* 32767 ONE))), (or (= (* 32767 ONE) (+ (* 32767 ONE)))), (or )]
  clause args: [derived 191, derived 192]
  backptr: nil
  conclusion: (or (= (* 32767 ONE) (+ (* 32767 ONE))))

  derived clause number: 194
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (* 32767 ONE)) (* -1 (+ (* 32767 ONE)))) (not (= (* 32767 ONE) (+ (* 32767 ONE)))))

  derived clause number: 195
  rule: resolution
  expr args: [(not (= (* 32767 ONE) (+ (* 32767 ONE)))), (or (= (* -1 (* 32767 ONE)) (* -1 (+ (* 32767 ONE))))), (or )]
  clause args: [derived 193, derived 194]
  backptr: nil
  conclusion: (or (= (* -1 (* 32767 ONE)) (* -1 (+ (* 32767 ONE)))))

  derived clause number: 196
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* -1 (+ (* 32767 ONE))) (+ (* -32767 ONE)))

  derived clause number: 197
  rule: or_single
  expr args: []
  clause args: [derived 196]
  backptr: nil
  conclusion: (or (= (* -1 (+ (* 32767 ONE))) (+ (* -32767 ONE))))

  derived clause number: 198
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (* 32767 ONE)) (+ (* -32767 ONE))) (not (= (* -1 (* 32767 ONE)) (* -1 (+ (* 32767 ONE))))) (not (= (* -1 (+ (* 32767 ONE))) (+ (* -32767 ONE)))))

  derived clause number: 199
  rule: resolution
  expr args: [(not (= (* -1 (* 32767 ONE)) (* -1 (+ (* 32767 ONE))))), (or (= (* -1 (* 32767 ONE)) (+ (* -32767 ONE))) (not (= (* -1 (+ (* 32767 ONE))) (+ (* -32767 ONE))))), (or )]
  clause args: [derived 195, derived 198]
  backptr: nil
  conclusion: (or (= (* -1 (* 32767 ONE)) (+ (* -32767 ONE))) (not (= (* -1 (+ (* 32767 ONE))) (+ (* -32767 ONE)))))

  derived clause number: 200
  rule: resolution
  expr args: [(not (= (* -1 (+ (* 32767 ONE))) (+ (* -32767 ONE)))), (or (= (* -1 (* 32767 ONE)) (+ (* -32767 ONE)))), (or )]
  clause args: [derived 197, derived 199]
  backptr: nil
  conclusion: (or (= (* -1 (* 32767 ONE)) (+ (* -32767 ONE))))

  derived clause number: 201
  rule: mul_single
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* 1 SHRT_MAX) SHRT_MAX)

  derived clause number: 202
  rule: or_single
  expr args: []
  clause args: [derived 201]
  backptr: nil
  conclusion: (or (= (* 1 SHRT_MAX) SHRT_MAX))

  derived clause number: 203
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX)) SHRT_MAX) (not (= (+ (* 1 SHRT_MAX)) (* 1 SHRT_MAX))) (not (= (* 1 SHRT_MAX) SHRT_MAX)))

  derived clause number: 204
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX)) (* 1 SHRT_MAX))), (or (= (+ (* 1 SHRT_MAX)) SHRT_MAX) (not (= (* 1 SHRT_MAX) SHRT_MAX))), (or )]
  clause args: [derived 187, derived 203]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX)) SHRT_MAX) (not (= (* 1 SHRT_MAX) SHRT_MAX)))

  derived clause number: 205
  rule: resolution
  expr args: [(not (= (* 1 SHRT_MAX) SHRT_MAX)), (or (= (+ (* 1 SHRT_MAX)) SHRT_MAX)), (or )]
  clause args: [derived 202, derived 204]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX)) SHRT_MAX))

  derived clause number: 206
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= SHRT_MAX (+ (* 1 SHRT_MAX))) (not (= (+ (* 1 SHRT_MAX)) SHRT_MAX)))

  derived clause number: 207
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX)) SHRT_MAX)), (or (= SHRT_MAX (+ (* 1 SHRT_MAX)))), (or )]
  clause args: [derived 205, derived 206]
  backptr: nil
  conclusion: (or (= SHRT_MAX (+ (* 1 SHRT_MAX))))

  derived clause number: 208
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)))) (not (= SHRT_MAX (+ (* 1 SHRT_MAX)))) (not (= (* -1 (* 32767 ONE)) (+ (* -32767 ONE)))))

  derived clause number: 209
  rule: resolution
  expr args: [(not (= SHRT_MAX (+ (* 1 SHRT_MAX)))), (or (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)))) (not (= (* -1 (* 32767 ONE)) (+ (* -32767 ONE))))), (or )]
  clause args: [derived 207, derived 208]
  backptr: nil
  conclusion: (or (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)))) (not (= (* -1 (* 32767 ONE)) (+ (* -32767 ONE)))))

  derived clause number: 210
  rule: resolution
  expr args: [(not (= (* -1 (* 32767 ONE)) (+ (* -32767 ONE)))), (or (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE))))), (or )]
  clause args: [derived 200, derived 209]
  backptr: nil
  conclusion: (or (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)))))

  derived clause number: 211
  rule: flatten
  expr args: [(+ (+ (* -32767 ONE))), (+ (+ (* 1 SHRT_MAX)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (+ (* -32767 ONE))))

  derived clause number: 212
  rule: or_single
  expr args: []
  clause args: [derived 211]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (+ (* -32767 ONE)))))

  derived clause number: 213
  rule: flatten
  expr args: [(+ (* 1 SHRT_MAX)), (+ (+ (* -32767 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MAX) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))

  derived clause number: 214
  rule: or_single
  expr args: []
  clause args: [derived 213]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE))))

  derived clause number: 215
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (+ (* -32767 ONE))))) (not (= (+ (* 1 SHRT_MAX) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))))

  derived clause number: 216
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (+ (* -32767 ONE))))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE))) (not (= (+ (* 1 SHRT_MAX) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE))))), (or )]
  clause args: [derived 212, derived 215]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE))) (not (= (+ (* 1 SHRT_MAX) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))))

  derived clause number: 217
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))), (or )]
  clause args: [derived 214, derived 216]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE))))

  derived clause number: 218
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE))) (not (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE))))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))))

  derived clause number: 219
  rule: resolution
  expr args: [(not (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE))))), (or (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE))))), (or )]
  clause args: [derived 210, derived 218]
  backptr: nil
  conclusion: (or (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))))

  derived clause number: 220
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))), (or (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))), (or )]
  clause args: [derived 217, derived 219]
  backptr: nil
  conclusion: (or (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE))))

  derived clause number: 221
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))))

  derived clause number: 222
  rule: resolution
  expr args: [(not (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))), (or (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (+ (* 1 SHRT_MAX) (* -32767 ONE))))), (or )]
  clause args: [derived 220, derived 221]
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (+ (* 1 SHRT_MAX) (* -32767 ONE)))))

  derived clause number: 223
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* -1 (+ (* 1 SHRT_MAX) (* -32767 ONE))) (+ (* -1 SHRT_MAX) (* 32767 ONE)))

  derived clause number: 224
  rule: or_single
  expr args: []
  clause args: [derived 223]
  backptr: nil
  conclusion: (or (= (* -1 (+ (* 1 SHRT_MAX) (* -32767 ONE))) (+ (* -1 SHRT_MAX) (* 32767 ONE))))

  derived clause number: 225
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (not (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (+ (* 1 SHRT_MAX) (* -32767 ONE))))) (not (= (* -1 (+ (* 1 SHRT_MAX) (* -32767 ONE))) (+ (* -1 SHRT_MAX) (* 32767 ONE)))))

  derived clause number: 226
  rule: resolution
  expr args: [(not (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (+ (* 1 SHRT_MAX) (* -32767 ONE))))), (or (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (not (= (* -1 (+ (* 1 SHRT_MAX) (* -32767 ONE))) (+ (* -1 SHRT_MAX) (* 32767 ONE))))), (or )]
  clause args: [derived 222, derived 225]
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (not (= (* -1 (+ (* 1 SHRT_MAX) (* -32767 ONE))) (+ (* -1 SHRT_MAX) (* 32767 ONE)))))

  derived clause number: 227
  rule: resolution
  expr args: [(not (= (* -1 (+ (* 1 SHRT_MAX) (* -32767 ONE))) (+ (* -1 SHRT_MAX) (* 32767 ONE)))), (or (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* -1 SHRT_MAX) (* 32767 ONE)))), (or )]
  clause args: [derived 224, derived 226]
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* -1 SHRT_MAX) (* 32767 ONE))))

  derived clause number: 228
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE)))) (not (= (* 1 SHRT_MAX) (+ (* 1 SHRT_MAX)))) (not (= (* -1 (* 32767 ONE)) (+ (* -32767 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* -1 SHRT_MAX) (* 32767 ONE)))))

  derived clause number: 229
  rule: resolution
  expr args: [(not (= (* 1 SHRT_MAX) (+ (* 1 SHRT_MAX)))), (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE)))) (not (= (* -1 (* 32767 ONE)) (+ (* -32767 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* -1 SHRT_MAX) (* 32767 ONE))))), (or )]
  clause args: [derived 189, derived 228]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE)))) (not (= (* -1 (* 32767 ONE)) (+ (* -32767 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* -1 SHRT_MAX) (* 32767 ONE)))))

  derived clause number: 230
  rule: resolution
  expr args: [(not (= (* -1 (* 32767 ONE)) (+ (* -32767 ONE)))), (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* -1 SHRT_MAX) (* 32767 ONE))))), (or )]
  clause args: [derived 200, derived 229]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* -1 SHRT_MAX) (* 32767 ONE)))))

  derived clause number: 231
  rule: resolution
  expr args: [(not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))), (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* -1 SHRT_MAX) (* 32767 ONE))))), (or )]
  clause args: [derived 41, derived 230]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* -1 SHRT_MAX) (* 32767 ONE)))))

  derived clause number: 232
  rule: resolution
  expr args: [(not (= (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* -1 SHRT_MAX) (* 32767 ONE)))), (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))))), (or )]
  clause args: [derived 227, derived 231]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE)))))

  derived clause number: 233
  rule: flatten
  expr args: [(+ (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))), (+ (+ (* 1 SHRT_MAX)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))))

  derived clause number: 234
  rule: or_single
  expr args: []
  clause args: [derived 233]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE)))))

  derived clause number: 235
  rule: flatten
  expr args: [(+ (* 1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))), (+ (+ (* -32767 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MAX) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))))

  derived clause number: 236
  rule: or_single
  expr args: []
  clause args: [derived 235]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE)))))

  derived clause number: 237
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE)))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))))) (not (= (+ (* 1 SHRT_MAX) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))))))

  derived clause number: 238
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE)))) (not (= (+ (* 1 SHRT_MAX) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE)))))), (or )]
  clause args: [derived 234, derived 237]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE)))) (not (= (+ (* 1 SHRT_MAX) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))))))

  derived clause number: 239
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))))), (or )]
  clause args: [derived 236, derived 238]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE)))))

  derived clause number: 240
  rule: flatten
  expr args: [(+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE))), (+ (+ (* 0 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE))))

  derived clause number: 241
  rule: or_single
  expr args: []
  clause args: [derived 240]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE)))))

  derived clause number: 242
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE)))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))))) (not (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE))))))

  derived clause number: 243
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE)))) (not (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE)))))), (or )]
  clause args: [derived 239, derived 242]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE)))) (not (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE))))))

  derived clause number: 244
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE))))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE))))), (or )]
  clause args: [derived 241, derived 243]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE)))))

  derived clause number: 245
  rule: flatten
  expr args: [(+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)), (+ (+ (* -1 SHRT_MAX) (* 32767 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)))

  derived clause number: 246
  rule: or_single
  expr args: []
  clause args: [derived 245]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE))))

  derived clause number: 247
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE))))) (not (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)))))

  derived clause number: 248
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE))))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE))) (not (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE))))), (or )]
  clause args: [derived 244, derived 247]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE))) (not (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)))))

  derived clause number: 249
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)))), (or )]
  clause args: [derived 246, derived 248]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE))))

  derived clause number: 250
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE))) (not (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)))))

  derived clause number: 251
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))))), (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE))))), (or )]
  clause args: [derived 232, derived 250]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)))))

  derived clause number: 252
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -32767 ONE)) (+ (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)))), (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)))), (or )]
  clause args: [derived 249, derived 251]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE))))

  derived clause number: 253
  rule: consolidate
  expr args: [(+ (* 1 SHRT_MAX) (* -1 SHRT_MAX)), (+ (* -32767 ONE) (* 0 ONE) (* 32767 ONE)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)) (+ (* 1 SHRT_MAX) (* -1 SHRT_MAX)))

  derived clause number: 254
  rule: or_single
  expr args: []
  clause args: [derived 253]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)) (+ (* 1 SHRT_MAX) (* -1 SHRT_MAX))))

  derived clause number: 255
  rule: consolidate
  expr args: [(+ ), (+ (* 1 SHRT_MAX) (* -1 SHRT_MAX)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MAX) (* -1 SHRT_MAX)) (+ ))

  derived clause number: 256
  rule: or_single
  expr args: []
  clause args: [derived 255]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 SHRT_MAX)) (+ )))

  derived clause number: 257
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)) (+ )) (not (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)) (+ (* 1 SHRT_MAX) (* -1 SHRT_MAX)))) (not (= (+ (* 1 SHRT_MAX) (* -1 SHRT_MAX)) (+ ))))

  derived clause number: 258
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)) (+ (* 1 SHRT_MAX) (* -1 SHRT_MAX)))), (or (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)) (+ )) (not (= (+ (* 1 SHRT_MAX) (* -1 SHRT_MAX)) (+ )))), (or )]
  clause args: [derived 254, derived 257]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)) (+ )) (not (= (+ (* 1 SHRT_MAX) (* -1 SHRT_MAX)) (+ ))))

  derived clause number: 259
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -1 SHRT_MAX)) (+ ))), (or (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)) (+ ))), (or )]
  clause args: [derived 256, derived 258]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)) (+ )))

  derived clause number: 260
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ )) (not (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)))) (not (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)) (+ ))))

  derived clause number: 261
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)))), (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ )) (not (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)) (+ )))), (or )]
  clause args: [derived 252, derived 260]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ )) (not (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)) (+ ))))

  derived clause number: 262
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE) (* -1 SHRT_MAX) (* 32767 ONE)) (+ ))), (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ ))), (or )]
  clause args: [derived 259, derived 261]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ )))

  derived clause number: 263
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (* 0 ONE))) (not (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ ))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 264
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ ))), (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE))))), (or )]
  clause args: [derived 262, derived 263]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 265
  rule: resolution
  expr args: [(not (= (+ ) (+ (* 0 ONE)))), (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (* 0 ONE)))), (or )]
  clause args: [derived 107, derived 264]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (* 0 ONE))))

  derived clause number: 266
  rule: or_single_rev
  expr args: []
  clause args: [derived 265]
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MAX) (* -1 (* 32767 ONE)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MAX (* -1 (* 32767 ONE))))) (+ (* 0 ONE)))

  derived clause number: 267
  rule: farkas
  expr args: []
  clause args: [derived 266]
  backptr: nil
  conclusion: (or (not (= SHRT_MAX (* 32767 ONE))) (not (< (* 0 ONE) (+ SHRT_MAX (* -1 (* 32767 ONE))))))

  derived clause number: 268
  rule: resolution
  expr args: [(not (< (* 0 ONE) (+ SHRT_MAX (* -1 (* 32767 ONE))))), (or (not (= SHRT_MAX (* 32767 ONE)))), (or (< (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE)) (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE)))]
  clause args: [derived 185, derived 267]
  backptr: nil
  conclusion: (or (< (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE)) (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE)) (not (= SHRT_MAX (* 32767 ONE))))

  derived clause number: 269
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (* 32767 ONE)) (* 1 (+ (* 32767 ONE)))) (not (= (* 32767 ONE) (+ (* 32767 ONE)))))

  derived clause number: 270
  rule: resolution
  expr args: [(not (= (* 32767 ONE) (+ (* 32767 ONE)))), (or (= (* 1 (* 32767 ONE)) (* 1 (+ (* 32767 ONE))))), (or )]
  clause args: [derived 193, derived 269]
  backptr: nil
  conclusion: (or (= (* 1 (* 32767 ONE)) (* 1 (+ (* 32767 ONE)))))

  derived clause number: 271
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* 1 (+ (* 32767 ONE))) (+ (* 32767 ONE)))

  derived clause number: 272
  rule: or_single
  expr args: []
  clause args: [derived 271]
  backptr: nil
  conclusion: (or (= (* 1 (+ (* 32767 ONE))) (+ (* 32767 ONE))))

  derived clause number: 273
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (* 32767 ONE)) (+ (* 32767 ONE))) (not (= (* 1 (* 32767 ONE)) (* 1 (+ (* 32767 ONE))))) (not (= (* 1 (+ (* 32767 ONE))) (+ (* 32767 ONE)))))

  derived clause number: 274
  rule: resolution
  expr args: [(not (= (* 1 (* 32767 ONE)) (* 1 (+ (* 32767 ONE))))), (or (= (* 1 (* 32767 ONE)) (+ (* 32767 ONE))) (not (= (* 1 (+ (* 32767 ONE))) (+ (* 32767 ONE))))), (or )]
  clause args: [derived 270, derived 273]
  backptr: nil
  conclusion: (or (= (* 1 (* 32767 ONE)) (+ (* 32767 ONE))) (not (= (* 1 (+ (* 32767 ONE))) (+ (* 32767 ONE)))))

  derived clause number: 275
  rule: resolution
  expr args: [(not (= (* 1 (+ (* 32767 ONE))) (+ (* 32767 ONE)))), (or (= (* 1 (* 32767 ONE)) (+ (* 32767 ONE)))), (or )]
  clause args: [derived 272, derived 274]
  backptr: nil
  conclusion: (or (= (* 1 (* 32767 ONE)) (+ (* 32767 ONE))))

  derived clause number: 276
  rule: add_single
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (+ (* -1 SHRT_MAX)) (* -1 SHRT_MAX))

  derived clause number: 277
  rule: or_single
  expr args: []
  clause args: [derived 276]
  backptr: nil
  conclusion: (or (= (+ (* -1 SHRT_MAX)) (* -1 SHRT_MAX)))

  derived clause number: 278
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 SHRT_MAX) (+ (* -1 SHRT_MAX))) (not (= (+ (* -1 SHRT_MAX)) (* -1 SHRT_MAX))))

  derived clause number: 279
  rule: resolution
  expr args: [(not (= (+ (* -1 SHRT_MAX)) (* -1 SHRT_MAX))), (or (= (* -1 SHRT_MAX) (+ (* -1 SHRT_MAX)))), (or )]
  clause args: [derived 277, derived 278]
  backptr: nil
  conclusion: (or (= (* -1 SHRT_MAX) (+ (* -1 SHRT_MAX))))

  derived clause number: 280
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* 1 (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))))

  derived clause number: 281
  rule: resolution
  expr args: [(not (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))), (or (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* 1 (+ (* 1 SHRT_MAX) (* -32767 ONE))))), (or )]
  clause args: [derived 220, derived 280]
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* 1 (+ (* 1 SHRT_MAX) (* -32767 ONE)))))

  derived clause number: 282
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* 1 (+ (* 1 SHRT_MAX) (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))

  derived clause number: 283
  rule: or_single
  expr args: []
  clause args: [derived 282]
  backptr: nil
  conclusion: (or (= (* 1 (+ (* 1 SHRT_MAX) (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE))))

  derived clause number: 284
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* 1 (+ (* 1 SHRT_MAX) (* -32767 ONE))))) (not (= (* 1 (+ (* 1 SHRT_MAX) (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))))

  derived clause number: 285
  rule: resolution
  expr args: [(not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* 1 (+ (* 1 SHRT_MAX) (* -32767 ONE))))), (or (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE))) (not (= (* 1 (+ (* 1 SHRT_MAX) (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE))))), (or )]
  clause args: [derived 281, derived 284]
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE))) (not (= (* 1 (+ (* 1 SHRT_MAX) (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))))

  derived clause number: 286
  rule: resolution
  expr args: [(not (= (* 1 (+ (* 1 SHRT_MAX) (* -32767 ONE))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))), (or (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))), (or )]
  clause args: [derived 283, derived 285]
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE))))

  derived clause number: 287
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (* 32767 ONE)) (+ (* 32767 ONE)))) (not (= (* -1 SHRT_MAX) (+ (* -1 SHRT_MAX)))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 288
  rule: resolution
  expr args: [(not (= (* 1 (* 32767 ONE)) (+ (* 32767 ONE)))), (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* -1 SHRT_MAX) (+ (* -1 SHRT_MAX)))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 275, derived 287]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* -1 SHRT_MAX) (+ (* -1 SHRT_MAX)))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 289
  rule: resolution
  expr args: [(not (= (* -1 SHRT_MAX) (+ (* -1 SHRT_MAX)))), (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 279, derived 288]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 290
  rule: resolution
  expr args: [(not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))), (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 286, derived 289]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 291
  rule: resolution
  expr args: [(not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))), (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 138, derived 290]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 292
  rule: flatten
  expr args: [(+ (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))), (+ (+ (* 32767 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))

  derived clause number: 293
  rule: or_single
  expr args: []
  clause args: [derived 292]
  backptr: nil
  conclusion: (or (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 294
  rule: flatten
  expr args: [(+ (* 32767 ONE) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))), (+ (+ (* -1 SHRT_MAX)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 32767 ONE) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))

  derived clause number: 295
  rule: or_single
  expr args: []
  clause args: [derived 294]
  backptr: nil
  conclusion: (or (= (+ (* 32767 ONE) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 296
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))) (not (= (+ (* 32767 ONE) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))))

  derived clause number: 297
  rule: resolution
  expr args: [(not (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 32767 ONE) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 293, derived 296]
  backptr: nil
  conclusion: (or (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 32767 ONE) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))))

  derived clause number: 298
  rule: resolution
  expr args: [(not (= (+ (* 32767 ONE) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 295, derived 297]
  backptr: nil
  conclusion: (or (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 299
  rule: flatten
  expr args: [(+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 0 ONE))), (+ (+ (* 1 SHRT_MAX) (* -32767 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))))

  derived clause number: 300
  rule: or_single
  expr args: []
  clause args: [derived 299]
  backptr: nil
  conclusion: (or (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)))))

  derived clause number: 301
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)))) (not (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))) (not (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))))))

  derived clause number: 302
  rule: resolution
  expr args: [(not (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)))) (not (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 298, derived 301]
  backptr: nil
  conclusion: (or (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)))) (not (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))))))

  derived clause number: 303
  rule: resolution
  expr args: [(not (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))))), (or (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))))), (or )]
  clause args: [derived 300, derived 302]
  backptr: nil
  conclusion: (or (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)))))

  derived clause number: 304
  rule: flatten
  expr args: [(+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE)), (+ (+ (* 0 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))

  derived clause number: 305
  rule: or_single
  expr args: []
  clause args: [derived 304]
  backptr: nil
  conclusion: (or (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))))

  derived clause number: 306
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))) (not (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))))) (not (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))))

  derived clause number: 307
  rule: resolution
  expr args: [(not (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))))), (or (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))) (not (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))))), (or )]
  clause args: [derived 303, derived 306]
  backptr: nil
  conclusion: (or (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))) (not (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))))

  derived clause number: 308
  rule: resolution
  expr args: [(not (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))), (or (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))), (or )]
  clause args: [derived 305, derived 307]
  backptr: nil
  conclusion: (or (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))))

  derived clause number: 309
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))) (not (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))) (not (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))))

  derived clause number: 310
  rule: resolution
  expr args: [(not (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))) (not (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))))), (or )]
  clause args: [derived 291, derived 309]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))) (not (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))))

  derived clause number: 311
  rule: resolution
  expr args: [(not (= (+ (+ (* 32767 ONE)) (+ (* -1 SHRT_MAX)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))), (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))), (or )]
  clause args: [derived 308, derived 310]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))))

  derived clause number: 312
  rule: consolidate
  expr args: [(+ (* -1 SHRT_MAX) (* 1 SHRT_MAX)), (+ (* 32767 ONE) (* -32767 ONE) (* 0 ONE)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 1 SHRT_MAX)))

  derived clause number: 313
  rule: or_single
  expr args: []
  clause args: [derived 312]
  backptr: nil
  conclusion: (or (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 1 SHRT_MAX))))

  derived clause number: 314
  rule: consolidate
  expr args: [(+ ), (+ (* -1 SHRT_MAX) (* 1 SHRT_MAX)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* -1 SHRT_MAX) (* 1 SHRT_MAX)) (+ ))

  derived clause number: 315
  rule: or_single
  expr args: []
  clause args: [derived 314]
  backptr: nil
  conclusion: (or (= (+ (* -1 SHRT_MAX) (* 1 SHRT_MAX)) (+ )))

  derived clause number: 316
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ )) (not (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 1 SHRT_MAX)))) (not (= (+ (* -1 SHRT_MAX) (* 1 SHRT_MAX)) (+ ))))

  derived clause number: 317
  rule: resolution
  expr args: [(not (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* -1 SHRT_MAX) (* 1 SHRT_MAX)))), (or (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ )) (not (= (+ (* -1 SHRT_MAX) (* 1 SHRT_MAX)) (+ )))), (or )]
  clause args: [derived 313, derived 316]
  backptr: nil
  conclusion: (or (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ )) (not (= (+ (* -1 SHRT_MAX) (* 1 SHRT_MAX)) (+ ))))

  derived clause number: 318
  rule: resolution
  expr args: [(not (= (+ (* -1 SHRT_MAX) (* 1 SHRT_MAX)) (+ ))), (or (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ ))), (or )]
  clause args: [derived 315, derived 317]
  backptr: nil
  conclusion: (or (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ )))

  derived clause number: 319
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))) (not (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ ))))

  derived clause number: 320
  rule: resolution
  expr args: [(not (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))), (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ )))), (or )]
  clause args: [derived 311, derived 319]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ ))))

  derived clause number: 321
  rule: resolution
  expr args: [(not (= (+ (* 32767 ONE) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ ))), (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ ))), (or )]
  clause args: [derived 318, derived 320]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ )))

  derived clause number: 322
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ ))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 323
  rule: resolution
  expr args: [(not (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ ))), (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE))))), (or )]
  clause args: [derived 321, derived 322]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 324
  rule: resolution
  expr args: [(not (= (+ ) (+ (* 0 ONE)))), (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 0 ONE)))), (or )]
  clause args: [derived 107, derived 323]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 0 ONE))))

  derived clause number: 325
  rule: or_single_rev
  expr args: []
  clause args: [derived 324]
  backptr: nil
  conclusion: (= (+ (* 1 (* 32767 ONE)) (* -1 SHRT_MAX) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 0 ONE)))

  derived clause number: 326
  rule: farkas
  expr args: []
  clause args: [derived 325]
  backptr: nil
  conclusion: (or (not (= (* 32767 ONE) SHRT_MAX)) (not (< (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE))))

  derived clause number: 327
  rule: resolution
  expr args: [(not (< (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE))), (or (not (= (* 32767 ONE) SHRT_MAX))), (or (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE)) (not (= SHRT_MAX (* 32767 ONE))))]
  clause args: [derived 268, derived 326]
  backptr: nil
  conclusion: (or (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE)) (not (= SHRT_MAX (* 32767 ONE))) (not (= (* 32767 ONE) SHRT_MAX)))

  derived clause number: 328
  rule: resolution
  expr args: [(not (= (* 32767 ONE) SHRT_MAX)), (or (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE)) (not (= SHRT_MAX (* 32767 ONE)))), (or (not (= SHRT_MAX (* 32767 ONE))))]
  clause args: [derived 184, derived 327]
  backptr: nil
  conclusion: (or (not (= SHRT_MAX (* 32767 ONE))) (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE)) (not (= SHRT_MAX (* 32767 ONE))))

  derived clause number: 329
  rule: factoring
  expr args: []
  clause args: [derived 328]
  backptr: nil
  conclusion: (or (not (= SHRT_MAX (* 32767 ONE))) (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE)))

  derived clause number: 330
  rule: resolution
  expr args: [(not (= SHRT_MAX (* 32767 ONE))), (or (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE))), (or )]
  clause args: [derived 1, derived 329]
  backptr: nil
  conclusion: (or (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE)))

  derived clause number: 331
  rule: cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (f b) (f (* -1 a))) (not (= b (* -1 a))))

  derived clause number: 332
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (f b) (* -1 (f a))) (not (= (f b) (f (* -1 a)))) (not (= (f (* -1 a)) (* -1 (f a)))))

  derived clause number: 333
  rule: resolution
  expr args: [(not (= (f b) (f (* -1 a)))), (or (= (f b) (* -1 (f a))) (not (= (f (* -1 a)) (* -1 (f a))))), (or (not (= b (* -1 a))))]
  clause args: [derived 331, derived 332]
  backptr: nil
  conclusion: (or (not (= b (* -1 a))) (= (f b) (* -1 (f a))) (not (= (f (* -1 a)) (* -1 (f a)))))

  derived clause number: 334
  rule: resolution
  expr args: [(not (= (f (* -1 a)) (* -1 (f a)))), (or (not (= b (* -1 a))) (= (f b) (* -1 (f a)))), (or )]
  clause args: [derived 3, derived 333]
  backptr: nil
  conclusion: (or (not (= b (* -1 a))) (= (f b) (* -1 (f a))))

  derived clause number: 335
  rule: resolution
  expr args: [(not (= b (* -1 a))), (or (= (f b) (* -1 (f a)))), (or )]
  clause args: [derived 2, derived 334]
  backptr: nil
  conclusion: (or (= (f b) (* -1 (f a))))

  derived clause number: 336
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (f a)) (f b)) (not (= (f b) (* -1 (f a)))))

  derived clause number: 337
  rule: trichotomy
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (< (+ (f a) (f b)) (* 0 ONE)) (= (+ (f a) (f b)) (* 0 ONE)) (< (* 0 ONE) (+ (f a) (f b))))

  derived clause number: 338
  rule: add_single
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b))) (* 1 (f b)))

  derived clause number: 339
  rule: or_single
  expr args: []
  clause args: [derived 338]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b))) (* 1 (f b))))

  derived clause number: 340
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (f b)) (+ (* 1 (f b)))) (not (= (+ (* 1 (f b))) (* 1 (f b)))))

  derived clause number: 341
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b))) (* 1 (f b)))), (or (= (* 1 (f b)) (+ (* 1 (f b))))), (or )]
  clause args: [derived 339, derived 340]
  backptr: nil
  conclusion: (or (= (* 1 (f b)) (+ (* 1 (f b)))))

  derived clause number: 342
  rule: add_single
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (+ (* -1 (f a))) (* -1 (f a)))

  derived clause number: 343
  rule: or_single
  expr args: []
  clause args: [derived 342]
  backptr: nil
  conclusion: (or (= (+ (* -1 (f a))) (* -1 (f a))))

  derived clause number: 344
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (f a)) (+ (* -1 (f a)))) (not (= (+ (* -1 (f a))) (* -1 (f a)))))

  derived clause number: 345
  rule: resolution
  expr args: [(not (= (+ (* -1 (f a))) (* -1 (f a)))), (or (= (* -1 (f a)) (+ (* -1 (f a))))), (or )]
  clause args: [derived 343, derived 344]
  backptr: nil
  conclusion: (or (= (* -1 (f a)) (+ (* -1 (f a)))))

  derived clause number: 346
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (* -1 (f a))) (* -1 (+ (* -1 (f a))))) (not (= (* -1 (f a)) (+ (* -1 (f a))))))

  derived clause number: 347
  rule: resolution
  expr args: [(not (= (* -1 (f a)) (+ (* -1 (f a))))), (or (= (* -1 (* -1 (f a))) (* -1 (+ (* -1 (f a)))))), (or )]
  clause args: [derived 345, derived 346]
  backptr: nil
  conclusion: (or (= (* -1 (* -1 (f a))) (* -1 (+ (* -1 (f a))))))

  derived clause number: 348
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* -1 (+ (* -1 (f a)))) (+ (* 1 (f a))))

  derived clause number: 349
  rule: or_single
  expr args: []
  clause args: [derived 348]
  backptr: nil
  conclusion: (or (= (* -1 (+ (* -1 (f a)))) (+ (* 1 (f a)))))

  derived clause number: 350
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (* -1 (f a))) (+ (* 1 (f a)))) (not (= (* -1 (* -1 (f a))) (* -1 (+ (* -1 (f a)))))) (not (= (* -1 (+ (* -1 (f a)))) (+ (* 1 (f a))))))

  derived clause number: 351
  rule: resolution
  expr args: [(not (= (* -1 (* -1 (f a))) (* -1 (+ (* -1 (f a)))))), (or (= (* -1 (* -1 (f a))) (+ (* 1 (f a)))) (not (= (* -1 (+ (* -1 (f a)))) (+ (* 1 (f a)))))), (or )]
  clause args: [derived 347, derived 350]
  backptr: nil
  conclusion: (or (= (* -1 (* -1 (f a))) (+ (* 1 (f a)))) (not (= (* -1 (+ (* -1 (f a)))) (+ (* 1 (f a))))))

  derived clause number: 352
  rule: resolution
  expr args: [(not (= (* -1 (+ (* -1 (f a)))) (+ (* 1 (f a))))), (or (= (* -1 (* -1 (f a))) (+ (* 1 (f a))))), (or )]
  clause args: [derived 349, derived 351]
  backptr: nil
  conclusion: (or (= (* -1 (* -1 (f a))) (+ (* 1 (f a)))))

  derived clause number: 353
  rule: mul_single
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* 1 (f a)) (f a))

  derived clause number: 354
  rule: add_single
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f a))) (* 1 (f a)))

  derived clause number: 355
  rule: or_single
  expr args: []
  clause args: [derived 354]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a))) (* 1 (f a))))

  derived clause number: 356
  rule: or_single
  expr args: []
  clause args: [derived 353]
  backptr: nil
  conclusion: (or (= (* 1 (f a)) (f a)))

  derived clause number: 357
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a))) (f a)) (not (= (+ (* 1 (f a))) (* 1 (f a)))) (not (= (* 1 (f a)) (f a))))

  derived clause number: 358
  rule: resolution
  expr args: [(not (= (+ (* 1 (f a))) (* 1 (f a)))), (or (= (+ (* 1 (f a))) (f a)) (not (= (* 1 (f a)) (f a)))), (or )]
  clause args: [derived 355, derived 357]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a))) (f a)) (not (= (* 1 (f a)) (f a))))

  derived clause number: 359
  rule: resolution
  expr args: [(not (= (* 1 (f a)) (f a))), (or (= (+ (* 1 (f a))) (f a))), (or )]
  clause args: [derived 356, derived 358]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a))) (f a)))

  derived clause number: 360
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (f a) (+ (* 1 (f a)))) (not (= (+ (* 1 (f a))) (f a))))

  derived clause number: 361
  rule: resolution
  expr args: [(not (= (+ (* 1 (f a))) (f a))), (or (= (f a) (+ (* 1 (f a))))), (or )]
  clause args: [derived 359, derived 360]
  backptr: nil
  conclusion: (or (= (f a) (+ (* 1 (f a)))))

  derived clause number: 362
  rule: mul_single
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* 1 (f b)) (f b))

  derived clause number: 363
  rule: or_single
  expr args: []
  clause args: [derived 362]
  backptr: nil
  conclusion: (or (= (* 1 (f b)) (f b)))

  derived clause number: 364
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b))) (f b)) (not (= (+ (* 1 (f b))) (* 1 (f b)))) (not (= (* 1 (f b)) (f b))))

  derived clause number: 365
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b))) (* 1 (f b)))), (or (= (+ (* 1 (f b))) (f b)) (not (= (* 1 (f b)) (f b)))), (or )]
  clause args: [derived 339, derived 364]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b))) (f b)) (not (= (* 1 (f b)) (f b))))

  derived clause number: 366
  rule: resolution
  expr args: [(not (= (* 1 (f b)) (f b))), (or (= (+ (* 1 (f b))) (f b))), (or )]
  clause args: [derived 363, derived 365]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b))) (f b)))

  derived clause number: 367
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (f b) (+ (* 1 (f b)))) (not (= (+ (* 1 (f b))) (f b))))

  derived clause number: 368
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b))) (f b))), (or (= (f b) (+ (* 1 (f b))))), (or )]
  clause args: [derived 366, derived 367]
  backptr: nil
  conclusion: (or (= (f b) (+ (* 1 (f b)))))

  derived clause number: 369
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (f a) (f b)) (+ (+ (* 1 (f a))) (+ (* 1 (f b))))) (not (= (f a) (+ (* 1 (f a))))) (not (= (f b) (+ (* 1 (f b))))))

  derived clause number: 370
  rule: resolution
  expr args: [(not (= (f a) (+ (* 1 (f a))))), (or (= (+ (f a) (f b)) (+ (+ (* 1 (f a))) (+ (* 1 (f b))))) (not (= (f b) (+ (* 1 (f b)))))), (or )]
  clause args: [derived 361, derived 369]
  backptr: nil
  conclusion: (or (= (+ (f a) (f b)) (+ (+ (* 1 (f a))) (+ (* 1 (f b))))) (not (= (f b) (+ (* 1 (f b))))))

  derived clause number: 371
  rule: resolution
  expr args: [(not (= (f b) (+ (* 1 (f b))))), (or (= (+ (f a) (f b)) (+ (+ (* 1 (f a))) (+ (* 1 (f b)))))), (or )]
  clause args: [derived 368, derived 370]
  backptr: nil
  conclusion: (or (= (+ (f a) (f b)) (+ (+ (* 1 (f a))) (+ (* 1 (f b))))))

  derived clause number: 372
  rule: flatten
  expr args: [(+ (+ (* 1 (f b)))), (+ (+ (* 1 (f a))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 (f a))) (+ (* 1 (f b)))) (+ (* 1 (f a)) (+ (* 1 (f b)))))

  derived clause number: 373
  rule: or_single
  expr args: []
  clause args: [derived 372]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f a))) (+ (* 1 (f b)))) (+ (* 1 (f a)) (+ (* 1 (f b))))))

  derived clause number: 374
  rule: flatten
  expr args: [(+ (* 1 (f a))), (+ (+ (* 1 (f b))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f a)) (+ (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b))))

  derived clause number: 375
  rule: or_single
  expr args: []
  clause args: [derived 374]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (+ (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b)))))

  derived clause number: 376
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f a))) (+ (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b)))) (not (= (+ (+ (* 1 (f a))) (+ (* 1 (f b)))) (+ (* 1 (f a)) (+ (* 1 (f b)))))) (not (= (+ (* 1 (f a)) (+ (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b))))))

  derived clause number: 377
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f a))) (+ (* 1 (f b)))) (+ (* 1 (f a)) (+ (* 1 (f b)))))), (or (= (+ (+ (* 1 (f a))) (+ (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b)))) (not (= (+ (* 1 (f a)) (+ (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b)))))), (or )]
  clause args: [derived 373, derived 376]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f a))) (+ (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b)))) (not (= (+ (* 1 (f a)) (+ (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b))))))

  derived clause number: 378
  rule: resolution
  expr args: [(not (= (+ (* 1 (f a)) (+ (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b))))), (or (= (+ (+ (* 1 (f a))) (+ (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b))))), (or )]
  clause args: [derived 375, derived 377]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f a))) (+ (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b)))))

  derived clause number: 379
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (f a) (f b)) (+ (* 1 (f a)) (* 1 (f b)))) (not (= (+ (f a) (f b)) (+ (+ (* 1 (f a))) (+ (* 1 (f b)))))) (not (= (+ (+ (* 1 (f a))) (+ (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b))))))

  derived clause number: 380
  rule: resolution
  expr args: [(not (= (+ (f a) (f b)) (+ (+ (* 1 (f a))) (+ (* 1 (f b)))))), (or (= (+ (f a) (f b)) (+ (* 1 (f a)) (* 1 (f b)))) (not (= (+ (+ (* 1 (f a))) (+ (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b)))))), (or )]
  clause args: [derived 371, derived 379]
  backptr: nil
  conclusion: (or (= (+ (f a) (f b)) (+ (* 1 (f a)) (* 1 (f b)))) (not (= (+ (+ (* 1 (f a))) (+ (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b))))))

  derived clause number: 381
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f a))) (+ (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b))))), (or (= (+ (f a) (f b)) (+ (* 1 (f a)) (* 1 (f b))))), (or )]
  clause args: [derived 378, derived 380]
  backptr: nil
  conclusion: (or (= (+ (f a) (f b)) (+ (* 1 (f a)) (* 1 (f b)))))

  derived clause number: 382
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (+ (f a) (f b))) (* -1 (+ (* 1 (f a)) (* 1 (f b))))) (not (= (+ (f a) (f b)) (+ (* 1 (f a)) (* 1 (f b))))))

  derived clause number: 383
  rule: resolution
  expr args: [(not (= (+ (f a) (f b)) (+ (* 1 (f a)) (* 1 (f b))))), (or (= (* -1 (+ (f a) (f b))) (* -1 (+ (* 1 (f a)) (* 1 (f b)))))), (or )]
  clause args: [derived 381, derived 382]
  backptr: nil
  conclusion: (or (= (* -1 (+ (f a) (f b))) (* -1 (+ (* 1 (f a)) (* 1 (f b))))))

  derived clause number: 384
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* -1 (+ (* 1 (f a)) (* 1 (f b)))) (+ (* -1 (f a)) (* -1 (f b))))

  derived clause number: 385
  rule: or_single
  expr args: []
  clause args: [derived 384]
  backptr: nil
  conclusion: (or (= (* -1 (+ (* 1 (f a)) (* 1 (f b)))) (+ (* -1 (f a)) (* -1 (f b)))))

  derived clause number: 386
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b)))) (not (= (* -1 (+ (f a) (f b))) (* -1 (+ (* 1 (f a)) (* 1 (f b)))))) (not (= (* -1 (+ (* 1 (f a)) (* 1 (f b)))) (+ (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 387
  rule: resolution
  expr args: [(not (= (* -1 (+ (f a) (f b))) (* -1 (+ (* 1 (f a)) (* 1 (f b)))))), (or (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b)))) (not (= (* -1 (+ (* 1 (f a)) (* 1 (f b)))) (+ (* -1 (f a)) (* -1 (f b)))))), (or )]
  clause args: [derived 383, derived 386]
  backptr: nil
  conclusion: (or (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b)))) (not (= (* -1 (+ (* 1 (f a)) (* 1 (f b)))) (+ (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 388
  rule: resolution
  expr args: [(not (= (* -1 (+ (* 1 (f a)) (* 1 (f b)))) (+ (* -1 (f a)) (* -1 (f b))))), (or (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))), (or )]
  clause args: [derived 385, derived 387]
  backptr: nil
  conclusion: (or (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b)))))

  derived clause number: 389
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (f b)) (+ (* 1 (f b))))) (not (= (* -1 (* -1 (f a))) (+ (* 1 (f a))))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 390
  rule: resolution
  expr args: [(not (= (* 1 (f b)) (+ (* 1 (f b))))), (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* -1 (* -1 (f a))) (+ (* 1 (f a))))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b)))))), (or )]
  clause args: [derived 341, derived 389]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* -1 (* -1 (f a))) (+ (* 1 (f a))))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 391
  rule: resolution
  expr args: [(not (= (* -1 (* -1 (f a))) (+ (* 1 (f a))))), (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b)))))), (or )]
  clause args: [derived 352, derived 390]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 392
  rule: resolution
  expr args: [(not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))), (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b)))))), (or )]
  clause args: [derived 41, derived 391]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 393
  rule: resolution
  expr args: [(not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))), (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))))), (or )]
  clause args: [derived 388, derived 392]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 394
  rule: flatten
  expr args: [(+ (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))), (+ (+ (* 1 (f b))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))))

  derived clause number: 395
  rule: or_single
  expr args: []
  clause args: [derived 394]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 396
  rule: flatten
  expr args: [(+ (* 1 (f b)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))), (+ (+ (* 1 (f a))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))))

  derived clause number: 397
  rule: or_single
  expr args: []
  clause args: [derived 396]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 398
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))))) (not (= (+ (* 1 (f b)) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))))))

  derived clause number: 399
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))))), (or (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (+ (* 1 (f b)) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))))))), (or )]
  clause args: [derived 395, derived 398]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (+ (* 1 (f b)) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))))))

  derived clause number: 400
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))))), (or (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))))), (or )]
  clause args: [derived 397, derived 399]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 401
  rule: flatten
  expr args: [(+ (* 1 (f b)) (* 1 (f a)) (+ (* -1 (f a)) (* -1 (f b)))), (+ (+ (* 0 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b)))))

  derived clause number: 402
  rule: or_single
  expr args: []
  clause args: [derived 401]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 403
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))))) (not (= (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b)))))))

  derived clause number: 404
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))))), (or (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))))))), (or )]
  clause args: [derived 400, derived 403]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b)))))))

  derived clause number: 405
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* 1 (f a)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b)))))), (or (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b)))))), (or )]
  clause args: [derived 402, derived 404]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 406
  rule: flatten
  expr args: [(+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE)), (+ (+ (* -1 (f a)) (* -1 (f b))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))))

  derived clause number: 407
  rule: or_single
  expr args: []
  clause args: [derived 406]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b)))))

  derived clause number: 408
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b)))) (not (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b)))))) (not (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 409
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b)))))), (or (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b)))) (not (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b)))))), (or )]
  clause args: [derived 405, derived 408]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b)))) (not (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 410
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))))), (or (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))))), (or )]
  clause args: [derived 407, derived 409]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b)))))

  derived clause number: 411
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b)))) (not (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))))) (not (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 412
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))))), (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b)))) (not (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b)))))), (or )]
  clause args: [derived 393, derived 411]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b)))) (not (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 413
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b))) (+ (* 1 (f a))) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))))), (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))))), (or )]
  clause args: [derived 410, derived 412]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b)))))

  derived clause number: 414
  rule: consolidate
  expr args: [(+ (* 1 (f b)) (* 1 (f a)) (* -1 (f a)) (* -1 (f b))), (+ (* 0 ONE)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* 1 (f a)) (* -1 (f a)) (* -1 (f b))))

  derived clause number: 415
  rule: or_single
  expr args: []
  clause args: [derived 414]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* 1 (f a)) (* -1 (f a)) (* -1 (f b)))))

  derived clause number: 416
  rule: consolidate
  expr args: [(+ (* 1 (f b)) (* -1 (f b))), (+ (* 1 (f a)) (* -1 (f a))), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* 1 (f a)) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b))))

  derived clause number: 417
  rule: or_single
  expr args: []
  clause args: [derived 416]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* 1 (f a)) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b)))))

  derived clause number: 418
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b)))) (not (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* 1 (f a)) (* -1 (f a)) (* -1 (f b))))) (not (= (+ (* 1 (f b)) (* 1 (f a)) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b))))))

  derived clause number: 419
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* 1 (f a)) (* -1 (f a)) (* -1 (f b))))), (or (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b)))) (not (= (+ (* 1 (f b)) (* 1 (f a)) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b)))))), (or )]
  clause args: [derived 415, derived 418]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b)))) (not (= (+ (* 1 (f b)) (* 1 (f a)) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b))))))

  derived clause number: 420
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* 1 (f a)) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b))))), (or (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b))))), (or )]
  clause args: [derived 417, derived 419]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b)))))

  derived clause number: 421
  rule: consolidate
  expr args: [(+ ), (+ (* 1 (f b)) (* -1 (f b))), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* -1 (f b))) (+ ))

  derived clause number: 422
  rule: or_single
  expr args: []
  clause args: [derived 421]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 (f b))) (+ )))

  derived clause number: 423
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ )) (not (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b))))) (not (= (+ (* 1 (f b)) (* -1 (f b))) (+ ))))

  derived clause number: 424
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b))))), (or (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ )) (not (= (+ (* 1 (f b)) (* -1 (f b))) (+ )))), (or )]
  clause args: [derived 420, derived 423]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ )) (not (= (+ (* 1 (f b)) (* -1 (f b))) (+ ))))

  derived clause number: 425
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 (f b))) (+ ))), (or (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ ))), (or )]
  clause args: [derived 422, derived 424]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ )))

  derived clause number: 426
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ )) (not (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))))) (not (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ ))))

  derived clause number: 427
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))))), (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ )) (not (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ )))), (or )]
  clause args: [derived 413, derived 426]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ )) (not (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ ))))

  derived clause number: 428
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* 1 (f a)) (* 0 ONE) (* -1 (f a)) (* -1 (f b))) (+ ))), (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ ))), (or )]
  clause args: [derived 425, derived 427]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ )))

  derived clause number: 429
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (* 0 ONE))) (not (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ ))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 430
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ ))), (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE))))), (or )]
  clause args: [derived 428, derived 429]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 431
  rule: resolution
  expr args: [(not (= (+ ) (+ (* 0 ONE)))), (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (* 0 ONE)))), (or )]
  clause args: [derived 107, derived 430]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (* 0 ONE))))

  derived clause number: 432
  rule: or_single_rev
  expr args: []
  clause args: [derived 431]
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* -1 (* -1 (f a))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b)))) (+ (* 0 ONE)))

  derived clause number: 433
  rule: farkas
  expr args: []
  clause args: [derived 432]
  backptr: nil
  conclusion: (or (not (= (f b) (* -1 (f a)))) (not (< (* 0 ONE) (+ (f a) (f b)))))

  derived clause number: 434
  rule: resolution
  expr args: [(not (< (* 0 ONE) (+ (f a) (f b)))), (or (not (= (f b) (* -1 (f a))))), (or (< (+ (f a) (f b)) (* 0 ONE)) (= (+ (f a) (f b)) (* 0 ONE)))]
  clause args: [derived 337, derived 433]
  backptr: nil
  conclusion: (or (< (+ (f a) (f b)) (* 0 ONE)) (= (+ (f a) (f b)) (* 0 ONE)) (not (= (f b) (* -1 (f a)))))

  derived clause number: 435
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (* -1 (f a))) (* 1 (+ (* -1 (f a))))) (not (= (* -1 (f a)) (+ (* -1 (f a))))))

  derived clause number: 436
  rule: resolution
  expr args: [(not (= (* -1 (f a)) (+ (* -1 (f a))))), (or (= (* 1 (* -1 (f a))) (* 1 (+ (* -1 (f a)))))), (or )]
  clause args: [derived 345, derived 435]
  backptr: nil
  conclusion: (or (= (* 1 (* -1 (f a))) (* 1 (+ (* -1 (f a))))))

  derived clause number: 437
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* 1 (+ (* -1 (f a)))) (+ (* -1 (f a))))

  derived clause number: 438
  rule: or_single
  expr args: []
  clause args: [derived 437]
  backptr: nil
  conclusion: (or (= (* 1 (+ (* -1 (f a)))) (+ (* -1 (f a)))))

  derived clause number: 439
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (* -1 (f a))) (+ (* -1 (f a)))) (not (= (* 1 (* -1 (f a))) (* 1 (+ (* -1 (f a)))))) (not (= (* 1 (+ (* -1 (f a)))) (+ (* -1 (f a))))))

  derived clause number: 440
  rule: resolution
  expr args: [(not (= (* 1 (* -1 (f a))) (* 1 (+ (* -1 (f a)))))), (or (= (* 1 (* -1 (f a))) (+ (* -1 (f a)))) (not (= (* 1 (+ (* -1 (f a)))) (+ (* -1 (f a)))))), (or )]
  clause args: [derived 436, derived 439]
  backptr: nil
  conclusion: (or (= (* 1 (* -1 (f a))) (+ (* -1 (f a)))) (not (= (* 1 (+ (* -1 (f a)))) (+ (* -1 (f a))))))

  derived clause number: 441
  rule: resolution
  expr args: [(not (= (* 1 (+ (* -1 (f a)))) (+ (* -1 (f a))))), (or (= (* 1 (* -1 (f a))) (+ (* -1 (f a))))), (or )]
  clause args: [derived 438, derived 440]
  backptr: nil
  conclusion: (or (= (* 1 (* -1 (f a))) (+ (* -1 (f a)))))

  derived clause number: 442
  rule: add_single
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (+ (* -1 (f b))) (* -1 (f b)))

  derived clause number: 443
  rule: or_single
  expr args: []
  clause args: [derived 442]
  backptr: nil
  conclusion: (or (= (+ (* -1 (f b))) (* -1 (f b))))

  derived clause number: 444
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (f b)) (+ (* -1 (f b)))) (not (= (+ (* -1 (f b))) (* -1 (f b)))))

  derived clause number: 445
  rule: resolution
  expr args: [(not (= (+ (* -1 (f b))) (* -1 (f b)))), (or (= (* -1 (f b)) (+ (* -1 (f b))))), (or )]
  clause args: [derived 443, derived 444]
  backptr: nil
  conclusion: (or (= (* -1 (f b)) (+ (* -1 (f b)))))

  derived clause number: 446
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (+ (f a) (f b))) (* 1 (+ (* 1 (f a)) (* 1 (f b))))) (not (= (+ (f a) (f b)) (+ (* 1 (f a)) (* 1 (f b))))))

  derived clause number: 447
  rule: resolution
  expr args: [(not (= (+ (f a) (f b)) (+ (* 1 (f a)) (* 1 (f b))))), (or (= (* 1 (+ (f a) (f b))) (* 1 (+ (* 1 (f a)) (* 1 (f b)))))), (or )]
  clause args: [derived 381, derived 446]
  backptr: nil
  conclusion: (or (= (* 1 (+ (f a) (f b))) (* 1 (+ (* 1 (f a)) (* 1 (f b))))))

  derived clause number: 448
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* 1 (+ (* 1 (f a)) (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b))))

  derived clause number: 449
  rule: or_single
  expr args: []
  clause args: [derived 448]
  backptr: nil
  conclusion: (or (= (* 1 (+ (* 1 (f a)) (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b)))))

  derived clause number: 450
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (+ (f a) (f b))) (+ (* 1 (f a)) (* 1 (f b)))) (not (= (* 1 (+ (f a) (f b))) (* 1 (+ (* 1 (f a)) (* 1 (f b)))))) (not (= (* 1 (+ (* 1 (f a)) (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b))))))

  derived clause number: 451
  rule: resolution
  expr args: [(not (= (* 1 (+ (f a) (f b))) (* 1 (+ (* 1 (f a)) (* 1 (f b)))))), (or (= (* 1 (+ (f a) (f b))) (+ (* 1 (f a)) (* 1 (f b)))) (not (= (* 1 (+ (* 1 (f a)) (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b)))))), (or )]
  clause args: [derived 447, derived 450]
  backptr: nil
  conclusion: (or (= (* 1 (+ (f a) (f b))) (+ (* 1 (f a)) (* 1 (f b)))) (not (= (* 1 (+ (* 1 (f a)) (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b))))))

  derived clause number: 452
  rule: resolution
  expr args: [(not (= (* 1 (+ (* 1 (f a)) (* 1 (f b)))) (+ (* 1 (f a)) (* 1 (f b))))), (or (= (* 1 (+ (f a) (f b))) (+ (* 1 (f a)) (* 1 (f b))))), (or )]
  clause args: [derived 449, derived 451]
  backptr: nil
  conclusion: (or (= (* 1 (+ (f a) (f b))) (+ (* 1 (f a)) (* 1 (f b)))))

  derived clause number: 453
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE)))) (not (= (* 1 (* -1 (f a))) (+ (* -1 (f a))))) (not (= (* -1 (f b)) (+ (* -1 (f b))))) (not (= (* 1 (+ (f a) (f b))) (+ (* 1 (f a)) (* 1 (f b))))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 454
  rule: resolution
  expr args: [(not (= (* 1 (* -1 (f a))) (+ (* -1 (f a))))), (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE)))) (not (= (* -1 (f b)) (+ (* -1 (f b))))) (not (= (* 1 (+ (f a) (f b))) (+ (* 1 (f a)) (* 1 (f b))))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 441, derived 453]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE)))) (not (= (* -1 (f b)) (+ (* -1 (f b))))) (not (= (* 1 (+ (f a) (f b))) (+ (* 1 (f a)) (* 1 (f b))))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 455
  rule: resolution
  expr args: [(not (= (* -1 (f b)) (+ (* -1 (f b))))), (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE)))) (not (= (* 1 (+ (f a) (f b))) (+ (* 1 (f a)) (* 1 (f b))))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 445, derived 454]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE)))) (not (= (* 1 (+ (f a) (f b))) (+ (* 1 (f a)) (* 1 (f b))))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 456
  rule: resolution
  expr args: [(not (= (* 1 (+ (f a) (f b))) (+ (* 1 (f a)) (* 1 (f b))))), (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 452, derived 455]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 457
  rule: resolution
  expr args: [(not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))), (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))))), (or )]
  clause args: [derived 138, derived 456]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE)))))

  derived clause number: 458
  rule: flatten
  expr args: [(+ (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))), (+ (+ (* -1 (f a))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))))

  derived clause number: 459
  rule: or_single
  expr args: []
  clause args: [derived 458]
  backptr: nil
  conclusion: (or (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE)))))

  derived clause number: 460
  rule: flatten
  expr args: [(+ (* -1 (f a)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))), (+ (+ (* -1 (f b))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* -1 (f a)) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))))

  derived clause number: 461
  rule: or_single
  expr args: []
  clause args: [derived 460]
  backptr: nil
  conclusion: (or (= (+ (* -1 (f a)) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE)))))

  derived clause number: 462
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE)))) (not (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))))) (not (= (+ (* -1 (f a)) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))))))

  derived clause number: 463
  rule: resolution
  expr args: [(not (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))))), (or (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE)))) (not (= (+ (* -1 (f a)) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 459, derived 462]
  backptr: nil
  conclusion: (or (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE)))) (not (= (+ (* -1 (f a)) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))))))

  derived clause number: 464
  rule: resolution
  expr args: [(not (= (+ (* -1 (f a)) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))))), (or (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))))), (or )]
  clause args: [derived 461, derived 463]
  backptr: nil
  conclusion: (or (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE)))))

  derived clause number: 465
  rule: flatten
  expr args: [(+ (* -1 (f a)) (* -1 (f b)) (+ (* 0 ONE))), (+ (+ (* 1 (f a)) (* 1 (f b))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE))))

  derived clause number: 466
  rule: or_single
  expr args: []
  clause args: [derived 465]
  backptr: nil
  conclusion: (or (= (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE)))))

  derived clause number: 467
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE)))) (not (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))))) (not (= (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE))))))

  derived clause number: 468
  rule: resolution
  expr args: [(not (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))))), (or (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE)))) (not (= (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 464, derived 467]
  backptr: nil
  conclusion: (or (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE)))) (not (= (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE))))))

  derived clause number: 469
  rule: resolution
  expr args: [(not (= (+ (* -1 (f a)) (* -1 (f b)) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE))))), (or (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 466, derived 468]
  backptr: nil
  conclusion: (or (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE)))))

  derived clause number: 470
  rule: flatten
  expr args: [(+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b))), (+ (+ (* 0 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)))

  derived clause number: 471
  rule: or_single
  expr args: []
  clause args: [derived 470]
  backptr: nil
  conclusion: (or (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE))))

  derived clause number: 472
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE))) (not (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE))))) (not (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)))))

  derived clause number: 473
  rule: resolution
  expr args: [(not (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE))))), (or (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE))) (not (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE))))), (or )]
  clause args: [derived 469, derived 472]
  backptr: nil
  conclusion: (or (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE))) (not (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)))))

  derived clause number: 474
  rule: resolution
  expr args: [(not (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)))), (or (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)))), (or )]
  clause args: [derived 471, derived 473]
  backptr: nil
  conclusion: (or (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE))))

  derived clause number: 475
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE))) (not (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))))) (not (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)))))

  derived clause number: 476
  rule: resolution
  expr args: [(not (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))))), (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE))) (not (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE))))), (or )]
  clause args: [derived 457, derived 475]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE))) (not (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)))))

  derived clause number: 477
  rule: resolution
  expr args: [(not (= (+ (+ (* -1 (f a))) (+ (* -1 (f b))) (+ (* 1 (f a)) (* 1 (f b))) (+ (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)))), (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)))), (or )]
  clause args: [derived 474, derived 476]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE))))

  derived clause number: 478
  rule: consolidate
  expr args: [(+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b))), (+ (* 0 ONE)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b))))

  derived clause number: 479
  rule: or_single
  expr args: []
  clause args: [derived 478]
  backptr: nil
  conclusion: (or (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)))))

  derived clause number: 480
  rule: consolidate
  expr args: [(+ (* -1 (f b)) (* 1 (f b))), (+ (* -1 (f a)) (* 1 (f a))), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b))))

  derived clause number: 481
  rule: or_single
  expr args: []
  clause args: [derived 480]
  backptr: nil
  conclusion: (or (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b)))))

  derived clause number: 482
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ (* -1 (f b)) (* 1 (f b)))) (not (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b))))) (not (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b))))))

  derived clause number: 483
  rule: resolution
  expr args: [(not (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b))))), (or (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ (* -1 (f b)) (* 1 (f b)))) (not (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b)))))), (or )]
  clause args: [derived 479, derived 482]
  backptr: nil
  conclusion: (or (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ (* -1 (f b)) (* 1 (f b)))) (not (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b))))))

  derived clause number: 484
  rule: resolution
  expr args: [(not (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b))))), (or (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ (* -1 (f b)) (* 1 (f b))))), (or )]
  clause args: [derived 481, derived 483]
  backptr: nil
  conclusion: (or (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ (* -1 (f b)) (* 1 (f b)))))

  derived clause number: 485
  rule: consolidate
  expr args: [(+ ), (+ (* -1 (f b)) (* 1 (f b))), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* -1 (f b)) (* 1 (f b))) (+ ))

  derived clause number: 486
  rule: or_single
  expr args: []
  clause args: [derived 485]
  backptr: nil
  conclusion: (or (= (+ (* -1 (f b)) (* 1 (f b))) (+ )))

  derived clause number: 487
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ )) (not (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ (* -1 (f b)) (* 1 (f b))))) (not (= (+ (* -1 (f b)) (* 1 (f b))) (+ ))))

  derived clause number: 488
  rule: resolution
  expr args: [(not (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ (* -1 (f b)) (* 1 (f b))))), (or (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ )) (not (= (+ (* -1 (f b)) (* 1 (f b))) (+ )))), (or )]
  clause args: [derived 484, derived 487]
  backptr: nil
  conclusion: (or (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ )) (not (= (+ (* -1 (f b)) (* 1 (f b))) (+ ))))

  derived clause number: 489
  rule: resolution
  expr args: [(not (= (+ (* -1 (f b)) (* 1 (f b))) (+ ))), (or (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ ))), (or )]
  clause args: [derived 486, derived 488]
  backptr: nil
  conclusion: (or (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ )))

  derived clause number: 490
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)))) (not (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ ))))

  derived clause number: 491
  rule: resolution
  expr args: [(not (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)))), (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ )))), (or )]
  clause args: [derived 477, derived 490]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ ))))

  derived clause number: 492
  rule: resolution
  expr args: [(not (= (+ (* -1 (f a)) (* -1 (f b)) (* 1 (f a)) (* 1 (f b)) (* 0 ONE)) (+ ))), (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ ))), (or )]
  clause args: [derived 489, derived 491]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ )))

  derived clause number: 493
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ ))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 494
  rule: resolution
  expr args: [(not (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ ))), (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE))))), (or )]
  clause args: [derived 492, derived 493]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 495
  rule: resolution
  expr args: [(not (= (+ ) (+ (* 0 ONE)))), (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (* 0 ONE)))), (or )]
  clause args: [derived 107, derived 494]
  backptr: nil
  conclusion: (or (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (* 0 ONE))))

  derived clause number: 496
  rule: or_single_rev
  expr args: []
  clause args: [derived 495]
  backptr: nil
  conclusion: (= (+ (* 1 (* -1 (f a))) (* -1 (f b)) (* 1 (+ (f a) (f b))) (* -1 (* 0 ONE))) (+ (* 0 ONE)))

  derived clause number: 497
  rule: farkas
  expr args: []
  clause args: [derived 496]
  backptr: nil
  conclusion: (or (not (= (* -1 (f a)) (f b))) (not (< (+ (f a) (f b)) (* 0 ONE))))

  derived clause number: 498
  rule: resolution
  expr args: [(not (< (+ (f a) (f b)) (* 0 ONE))), (or (not (= (* -1 (f a)) (f b)))), (or (= (+ (f a) (f b)) (* 0 ONE)) (not (= (f b) (* -1 (f a)))))]
  clause args: [derived 434, derived 497]
  backptr: nil
  conclusion: (or (= (+ (f a) (f b)) (* 0 ONE)) (not (= (f b) (* -1 (f a)))) (not (= (* -1 (f a)) (f b))))

  derived clause number: 499
  rule: resolution
  expr args: [(not (= (* -1 (f a)) (f b))), (or (= (+ (f a) (f b)) (* 0 ONE)) (not (= (f b) (* -1 (f a))))), (or (not (= (f b) (* -1 (f a)))))]
  clause args: [derived 336, derived 498]
  backptr: nil
  conclusion: (or (not (= (f b) (* -1 (f a)))) (= (+ (f a) (f b)) (* 0 ONE)) (not (= (f b) (* -1 (f a)))))

  derived clause number: 500
  rule: factoring
  expr args: []
  clause args: [derived 499]
  backptr: nil
  conclusion: (or (not (= (f b) (* -1 (f a)))) (= (+ (f a) (f b)) (* 0 ONE)))

  derived clause number: 501
  rule: resolution
  expr args: [(not (= (f b) (* -1 (f a)))), (or (= (+ (f a) (f b)) (* 0 ONE))), (or )]
  clause args: [derived 335, derived 500]
  backptr: nil
  conclusion: (or (= (+ (f a) (f b)) (* 0 ONE)))

  derived clause number: 502
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 0 ONE) (+ (f a) (f b))) (not (= (+ (f a) (f b)) (* 0 ONE))))

  derived clause number: 503
  rule: total-int
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE)) (<= (* 1 ONE) (+ SHRT_MIN (* -1 (f a)))))

  derived clause number: 504
  rule: add_single
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 ONE)) (* 1 ONE))

  derived clause number: 505
  rule: or_single
  expr args: []
  clause args: [derived 504]
  backptr: nil
  conclusion: (or (= (+ (* 1 ONE)) (* 1 ONE)))

  derived clause number: 506
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 ONE) (+ (* 1 ONE))) (not (= (+ (* 1 ONE)) (* 1 ONE))))

  derived clause number: 507
  rule: resolution
  expr args: [(not (= (+ (* 1 ONE)) (* 1 ONE))), (or (= (* 1 ONE) (+ (* 1 ONE)))), (or )]
  clause args: [derived 505, derived 506]
  backptr: nil
  conclusion: (or (= (* 1 ONE) (+ (* 1 ONE))))

  derived clause number: 508
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (* 1 ONE)) (* 1 (+ (* 1 ONE)))) (not (= (* 1 ONE) (+ (* 1 ONE)))))

  derived clause number: 509
  rule: resolution
  expr args: [(not (= (* 1 ONE) (+ (* 1 ONE)))), (or (= (* 1 (* 1 ONE)) (* 1 (+ (* 1 ONE))))), (or )]
  clause args: [derived 507, derived 508]
  backptr: nil
  conclusion: (or (= (* 1 (* 1 ONE)) (* 1 (+ (* 1 ONE)))))

  derived clause number: 510
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* 1 (+ (* 1 ONE))) (+ (* 1 ONE)))

  derived clause number: 511
  rule: or_single
  expr args: []
  clause args: [derived 510]
  backptr: nil
  conclusion: (or (= (* 1 (+ (* 1 ONE))) (+ (* 1 ONE))))

  derived clause number: 512
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (* 1 ONE)) (+ (* 1 ONE))) (not (= (* 1 (* 1 ONE)) (* 1 (+ (* 1 ONE))))) (not (= (* 1 (+ (* 1 ONE))) (+ (* 1 ONE)))))

  derived clause number: 513
  rule: resolution
  expr args: [(not (= (* 1 (* 1 ONE)) (* 1 (+ (* 1 ONE))))), (or (= (* 1 (* 1 ONE)) (+ (* 1 ONE))) (not (= (* 1 (+ (* 1 ONE))) (+ (* 1 ONE))))), (or )]
  clause args: [derived 509, derived 512]
  backptr: nil
  conclusion: (or (= (* 1 (* 1 ONE)) (+ (* 1 ONE))) (not (= (* 1 (+ (* 1 ONE))) (+ (* 1 ONE)))))

  derived clause number: 514
  rule: resolution
  expr args: [(not (= (* 1 (+ (* 1 ONE))) (+ (* 1 ONE)))), (or (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))), (or )]
  clause args: [derived 511, derived 513]
  backptr: nil
  conclusion: (or (= (* 1 (* 1 ONE)) (+ (* 1 ONE))))

  derived clause number: 515
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* -1 (f a))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a))))) (not (= SHRT_MIN (+ (* 1 SHRT_MIN)))) (not (= (* -1 (f a)) (+ (* -1 (f a))))))

  derived clause number: 516
  rule: resolution
  expr args: [(not (= SHRT_MIN (+ (* 1 SHRT_MIN)))), (or (= (+ SHRT_MIN (* -1 (f a))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a))))) (not (= (* -1 (f a)) (+ (* -1 (f a)))))), (or )]
  clause args: [derived 48, derived 515]
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* -1 (f a))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a))))) (not (= (* -1 (f a)) (+ (* -1 (f a))))))

  derived clause number: 517
  rule: resolution
  expr args: [(not (= (* -1 (f a)) (+ (* -1 (f a))))), (or (= (+ SHRT_MIN (* -1 (f a))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a)))))), (or )]
  clause args: [derived 345, derived 516]
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* -1 (f a))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a))))))

  derived clause number: 518
  rule: flatten
  expr args: [(+ (+ (* -1 (f a)))), (+ (+ (* 1 SHRT_MIN)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (+ (* -1 (f a)))))

  derived clause number: 519
  rule: or_single
  expr args: []
  clause args: [derived 518]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (+ (* -1 (f a))))))

  derived clause number: 520
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN)), (+ (+ (* -1 (f a))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))

  derived clause number: 521
  rule: or_single
  expr args: []
  clause args: [derived 520]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a)))))

  derived clause number: 522
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a)))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (+ (* -1 (f a)))))) (not (= (+ (* 1 SHRT_MIN) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))))

  derived clause number: 523
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (+ (* -1 (f a)))))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a)))) (not (= (+ (* 1 SHRT_MIN) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a)))))), (or )]
  clause args: [derived 519, derived 522]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a)))) (not (= (+ (* 1 SHRT_MIN) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))))

  derived clause number: 524
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))), (or )]
  clause args: [derived 521, derived 523]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a)))))

  derived clause number: 525
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* -1 (f a))) (+ (* 1 SHRT_MIN) (* -1 (f a)))) (not (= (+ SHRT_MIN (* -1 (f a))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a)))))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))))

  derived clause number: 526
  rule: resolution
  expr args: [(not (= (+ SHRT_MIN (* -1 (f a))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a)))))), (or (= (+ SHRT_MIN (* -1 (f a))) (+ (* 1 SHRT_MIN) (* -1 (f a)))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a)))))), (or )]
  clause args: [derived 517, derived 525]
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* -1 (f a))) (+ (* 1 SHRT_MIN) (* -1 (f a)))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))))

  derived clause number: 527
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))), (or (= (+ SHRT_MIN (* -1 (f a))) (+ (* 1 SHRT_MIN) (* -1 (f a))))), (or )]
  clause args: [derived 524, derived 526]
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* -1 (f a))) (+ (* 1 SHRT_MIN) (* -1 (f a)))))

  derived clause number: 528
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (+ (* 1 SHRT_MIN) (* -1 (f a))))) (not (= (+ SHRT_MIN (* -1 (f a))) (+ (* 1 SHRT_MIN) (* -1 (f a))))))

  derived clause number: 529
  rule: resolution
  expr args: [(not (= (+ SHRT_MIN (* -1 (f a))) (+ (* 1 SHRT_MIN) (* -1 (f a))))), (or (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (+ (* 1 SHRT_MIN) (* -1 (f a)))))), (or )]
  clause args: [derived 527, derived 528]
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (+ (* 1 SHRT_MIN) (* -1 (f a))))))

  derived clause number: 530
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* -1 (+ (* 1 SHRT_MIN) (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a))))

  derived clause number: 531
  rule: or_single
  expr args: []
  clause args: [derived 530]
  backptr: nil
  conclusion: (or (= (* -1 (+ (* 1 SHRT_MIN) (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a)))))

  derived clause number: 532
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a)))) (not (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (+ (* 1 SHRT_MIN) (* -1 (f a)))))) (not (= (* -1 (+ (* 1 SHRT_MIN) (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a))))))

  derived clause number: 533
  rule: resolution
  expr args: [(not (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (+ (* 1 SHRT_MIN) (* -1 (f a)))))), (or (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a)))) (not (= (* -1 (+ (* 1 SHRT_MIN) (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a)))))), (or )]
  clause args: [derived 529, derived 532]
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a)))) (not (= (* -1 (+ (* 1 SHRT_MIN) (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a))))))

  derived clause number: 534
  rule: resolution
  expr args: [(not (= (* -1 (+ (* 1 SHRT_MIN) (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a))))), (or (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a))))), (or )]
  clause args: [derived 531, derived 533]
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a)))))

  derived clause number: 535
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE)))) (not (= SHRT_MAX (+ (* 1 SHRT_MAX)))) (not (= (* -1 (f b)) (+ (* -1 (f b))))) (not (= (* 1 ONE) (+ (* 1 ONE)))))

  derived clause number: 536
  rule: resolution
  expr args: [(not (= SHRT_MAX (+ (* 1 SHRT_MAX)))), (or (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE)))) (not (= (* -1 (f b)) (+ (* -1 (f b))))) (not (= (* 1 ONE) (+ (* 1 ONE))))), (or )]
  clause args: [derived 207, derived 535]
  backptr: nil
  conclusion: (or (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE)))) (not (= (* -1 (f b)) (+ (* -1 (f b))))) (not (= (* 1 ONE) (+ (* 1 ONE)))))

  derived clause number: 537
  rule: resolution
  expr args: [(not (= (* -1 (f b)) (+ (* -1 (f b))))), (or (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE)))) (not (= (* 1 ONE) (+ (* 1 ONE))))), (or )]
  clause args: [derived 445, derived 536]
  backptr: nil
  conclusion: (or (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE)))) (not (= (* 1 ONE) (+ (* 1 ONE)))))

  derived clause number: 538
  rule: resolution
  expr args: [(not (= (* 1 ONE) (+ (* 1 ONE)))), (or (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))))), (or )]
  clause args: [derived 507, derived 537]
  backptr: nil
  conclusion: (or (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE)))))

  derived clause number: 539
  rule: flatten
  expr args: [(+ (+ (* -1 (f b))) (+ (* 1 ONE))), (+ (+ (* 1 SHRT_MAX)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 ONE))))

  derived clause number: 540
  rule: or_single
  expr args: []
  clause args: [derived 539]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 ONE)))))

  derived clause number: 541
  rule: flatten
  expr args: [(+ (* 1 SHRT_MAX) (+ (* 1 ONE))), (+ (+ (* -1 (f b))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE))))

  derived clause number: 542
  rule: or_single
  expr args: []
  clause args: [derived 541]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE)))))

  derived clause number: 543
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE)))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 ONE))))) (not (= (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE))))))

  derived clause number: 544
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 ONE))))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE)))) (not (= (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE)))))), (or )]
  clause args: [derived 540, derived 543]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE)))) (not (= (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE))))))

  derived clause number: 545
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE))))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE))))), (or )]
  clause args: [derived 542, derived 544]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE)))))

  derived clause number: 546
  rule: flatten
  expr args: [(+ (* 1 SHRT_MAX) (* -1 (f b))), (+ (+ (* 1 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))

  derived clause number: 547
  rule: or_single
  expr args: []
  clause args: [derived 546]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))))

  derived clause number: 548
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE))))) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))))

  derived clause number: 549
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE))))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))))), (or )]
  clause args: [derived 545, derived 548]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))))

  derived clause number: 550
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))), (or )]
  clause args: [derived 547, derived 549]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))))

  derived clause number: 551
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (not (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))))

  derived clause number: 552
  rule: resolution
  expr args: [(not (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))))), (or (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))))), (or )]
  clause args: [derived 538, derived 551]
  backptr: nil
  conclusion: (or (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))))

  derived clause number: 553
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))), (or (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))), (or )]
  clause args: [derived 550, derived 552]
  backptr: nil
  conclusion: (or (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))))

  derived clause number: 554
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))) (not (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))))

  derived clause number: 555
  rule: resolution
  expr args: [(not (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))), (or (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))))), (or )]
  clause args: [derived 553, derived 554]
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))))

  derived clause number: 556
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* -1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))

  derived clause number: 557
  rule: or_single
  expr args: []
  clause args: [derived 556]
  backptr: nil
  conclusion: (or (= (* -1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE))))

  derived clause number: 558
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE))) (not (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))))) (not (= (* -1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))))

  derived clause number: 559
  rule: resolution
  expr args: [(not (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))))), (or (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE))) (not (= (* -1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE))))), (or )]
  clause args: [derived 555, derived 558]
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE))) (not (= (* -1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))))

  derived clause number: 560
  rule: resolution
  expr args: [(not (= (* -1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))), (or (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))), (or )]
  clause args: [derived 557, derived 559]
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE))))

  derived clause number: 561
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))) (not (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a))))) (not (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 562
  rule: resolution
  expr args: [(not (= (* 1 (+ SHRT_MIN (* 32768 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE)))), (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))) (not (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a))))) (not (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 131, derived 561]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))) (not (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a))))) (not (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 563
  rule: resolution
  expr args: [(not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))), (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))) (not (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a))))) (not (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 138, derived 562]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))) (not (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a))))) (not (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 564
  rule: resolution
  expr args: [(not (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))), (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a))))) (not (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 514, derived 563]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a))))) (not (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 565
  rule: resolution
  expr args: [(not (= (* -1 (+ SHRT_MIN (* -1 (f a)))) (+ (* -1 SHRT_MIN) (* 1 (f a))))), (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 534, derived 564]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 566
  rule: resolution
  expr args: [(not (= (* 1 (* 1 ONE)) (+ (* 1 ONE)))), (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 514, derived 565]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 567
  rule: resolution
  expr args: [(not (= (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))), (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 560, derived 566]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 568
  rule: resolution
  expr args: [(not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))), (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 41, derived 567]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 569
  rule: resolution
  expr args: [(not (= (* -1 (+ (f a) (f b))) (+ (* -1 (f a)) (* -1 (f b))))), (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 388, derived 568]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 570
  rule: resolution
  expr args: [(not (= (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (+ (* 1 SHRT_MAX) (* -32767 ONE)))), (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 286, derived 569]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 571
  rule: resolution
  expr args: [(not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))), (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 138, derived 570]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 572
  rule: flatten
  expr args: [(+ (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))), (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))

  derived clause number: 573
  rule: or_single
  expr args: []
  clause args: [derived 572]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 574
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))), (+ (+ (* 0 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))

  derived clause number: 575
  rule: or_single
  expr args: []
  clause args: [derived 574]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 576
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))))

  derived clause number: 577
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 573, derived 576]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))))

  derived clause number: 578
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 575, derived 577]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 579
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))), (+ (+ (* 1 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))

  derived clause number: 580
  rule: or_single
  expr args: []
  clause args: [derived 579]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 581
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))))

  derived clause number: 582
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 578, derived 581]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))))

  derived clause number: 583
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 580, derived 582]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 584
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))), (+ (+ (* -1 SHRT_MIN) (* 1 (f a))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))

  derived clause number: 585
  rule: or_single
  expr args: []
  clause args: [derived 584]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 586
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))))

  derived clause number: 587
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 583, derived 586]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))))

  derived clause number: 588
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 585, derived 587]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 589
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))), (+ (+ (* 1 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))

  derived clause number: 590
  rule: or_single
  expr args: []
  clause args: [derived 589]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 591
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))))

  derived clause number: 592
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 588, derived 591]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))))

  derived clause number: 593
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 590, derived 592]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 594
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))), (+ (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))

  derived clause number: 595
  rule: or_single
  expr args: []
  clause args: [derived 594]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 596
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))))

  derived clause number: 597
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 593, derived 596]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))))

  derived clause number: 598
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 595, derived 597]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 599
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))), (+ (+ (* 0 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))

  derived clause number: 600
  rule: or_single
  expr args: []
  clause args: [derived 599]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 601
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))))

  derived clause number: 602
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 598, derived 601]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))))

  derived clause number: 603
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 600, derived 602]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 604
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))), (+ (+ (* -1 (f a)) (* -1 (f b))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))

  derived clause number: 605
  rule: or_single
  expr args: []
  clause args: [derived 604]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 606
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))))

  derived clause number: 607
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 603, derived 606]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))))

  derived clause number: 608
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 605, derived 607]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE)))))

  derived clause number: 609
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 0 ONE))), (+ (+ (* 1 SHRT_MAX) (* -32767 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))))

  derived clause number: 610
  rule: or_single
  expr args: []
  clause args: [derived 609]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)))))

  derived clause number: 611
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)))) (not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))))))

  derived clause number: 612
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 608, derived 611]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))))))

  derived clause number: 613
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))))), (or )]
  clause args: [derived 610, derived 612]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE)))))

  derived clause number: 614
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE)), (+ (+ (* 0 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))

  derived clause number: 615
  rule: or_single
  expr args: []
  clause args: [derived 614]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))))

  derived clause number: 616
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))) (not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))))

  derived clause number: 617
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))))), (or )]
  clause args: [derived 613, derived 616]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))))

  derived clause number: 618
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))), (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))), (or )]
  clause args: [derived 615, derived 617]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))))

  derived clause number: 619
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))) (not (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))) (not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))))

  derived clause number: 620
  rule: resolution
  expr args: [(not (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))))), (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))) (not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))))), (or )]
  clause args: [derived 571, derived 619]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))) (not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))))

  derived clause number: 621
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN) (* 32768 ONE)) (+ (* 0 ONE)) (+ (* 1 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f a))) (+ (* 1 ONE)) (+ (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE)) (+ (* 0 ONE)) (+ (* -1 (f a)) (* -1 (f b))) (+ (* 1 SHRT_MAX) (* -32767 ONE)) (+ (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))), (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))), (or )]
  clause args: [derived 618, derived 620]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE))))

  derived clause number: 622
  rule: consolidate
  expr args: [(+ (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX)), (+ (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* 1 ONE) (* -1 ONE) (* 0 ONE) (* -32767 ONE) (* 0 ONE)), (+ (* 2 ONE))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX)))

  derived clause number: 623
  rule: or_single
  expr args: []
  clause args: [derived 622]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX))))

  derived clause number: 624
  rule: consolidate
  expr args: [(+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))), (+ (* -1 SHRT_MAX) (* 1 SHRT_MAX)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))))

  derived clause number: 625
  rule: or_single
  expr args: []
  clause args: [derived 624]
  backptr: nil
  conclusion: (or (= (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)))))

  derived clause number: 626
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX)))) (not (= (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 627
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX)))), (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)))) (not (= (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)))))), (or )]
  clause args: [derived 623, derived 626]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)))) (not (= (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 628
  rule: resolution
  expr args: [(not (= (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))))), (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))))), (or )]
  clause args: [derived 625, derived 627]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)))))

  derived clause number: 629
  rule: consolidate
  expr args: [(+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))), (+ (* 1 SHRT_MIN) (* -1 SHRT_MIN)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))) (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))))

  derived clause number: 630
  rule: or_single
  expr args: []
  clause args: [derived 629]
  backptr: nil
  conclusion: (or (= (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))) (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)))))

  derived clause number: 631
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))))) (not (= (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))) (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 632
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))))), (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)))) (not (= (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))) (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)))))), (or )]
  clause args: [derived 628, derived 631]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)))) (not (= (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))) (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))))))

  derived clause number: 633
  rule: resolution
  expr args: [(not (= (+ (* 2 ONE) (* 1 SHRT_MIN) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))) (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))))), (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))))), (or )]
  clause args: [derived 630, derived 632]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b)))))

  derived clause number: 634
  rule: consolidate
  expr args: [(+ (* 2 ONE) (* 1 (f b)) (* -1 (f b))), (+ (* 1 (f a)) (* -1 (f a))), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))) (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b))))

  derived clause number: 635
  rule: or_single
  expr args: []
  clause args: [derived 634]
  backptr: nil
  conclusion: (or (= (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))) (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b)))))

  derived clause number: 636
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))))) (not (= (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))) (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b))))))

  derived clause number: 637
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))))), (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b)))) (not (= (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))) (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b)))))), (or )]
  clause args: [derived 633, derived 636]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b)))) (not (= (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))) (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b))))))

  derived clause number: 638
  rule: resolution
  expr args: [(not (= (+ (* 2 ONE) (* 1 (f a)) (* 1 (f b)) (* -1 (f a)) (* -1 (f b))) (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b))))), (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b))))), (or )]
  clause args: [derived 635, derived 637]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b)))))

  derived clause number: 639
  rule: consolidate
  expr args: [(+ (* 2 ONE)), (+ (* 1 (f b)) (* -1 (f b))), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b))) (+ (* 2 ONE)))

  derived clause number: 640
  rule: or_single
  expr args: []
  clause args: [derived 639]
  backptr: nil
  conclusion: (or (= (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b))) (+ (* 2 ONE))))

  derived clause number: 641
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b))))) (not (= (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b))) (+ (* 2 ONE)))))

  derived clause number: 642
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b))))), (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE))) (not (= (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b))) (+ (* 2 ONE))))), (or )]
  clause args: [derived 638, derived 641]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE))) (not (= (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b))) (+ (* 2 ONE)))))

  derived clause number: 643
  rule: resolution
  expr args: [(not (= (+ (* 2 ONE) (* 1 (f b)) (* -1 (f b))) (+ (* 2 ONE)))), (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE)))), (or )]
  clause args: [derived 640, derived 642]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE))))

  derived clause number: 644
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 2 ONE))) (not (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE)))))

  derived clause number: 645
  rule: resolution
  expr args: [(not (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)))), (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 2 ONE))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE))))), (or )]
  clause args: [derived 621, derived 644]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 2 ONE))) (not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE)))))

  derived clause number: 646
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* 32768 ONE) (* 0 ONE) (* 1 ONE) (* -1 SHRT_MIN) (* 1 (f a)) (* 1 ONE) (* -1 SHRT_MAX) (* 1 (f b)) (* -1 ONE) (* 0 ONE) (* -1 (f a)) (* -1 (f b)) (* 1 SHRT_MAX) (* -32767 ONE) (* 0 ONE)) (+ (* 2 ONE)))), (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 2 ONE)))), (or )]
  clause args: [derived 643, derived 645]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 2 ONE))))

  derived clause number: 647
  rule: or_single_rev
  expr args: []
  clause args: [derived 646]
  backptr: nil
  conclusion: (= (+ (* 1 (+ SHRT_MIN (* 32768 ONE))) (* -1 (* 0 ONE)) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (* 1 ONE)) (* -1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (* 0 ONE)) (* -1 (+ (f a) (f b))) (* 1 (+ SHRT_MAX (* -1 (* 32767 ONE)))) (* -1 (* 0 ONE))) (+ (* 2 ONE)))

  derived clause number: 648
  rule: farkas
  expr args: []
  clause args: [derived 647]
  backptr: nil
  conclusion: (or (not (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))) (not (<= (* 1 ONE) (+ SHRT_MIN (* -1 (f a))))) (not (<= (* 1 ONE) (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)))) (not (= (* 0 ONE) (+ (f a) (f b)))) (not (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE))))

  derived clause number: 649
  rule: resolution
  expr args: [(not (<= (* 1 ONE) (+ SHRT_MIN (* -1 (f a))))), (or (not (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))) (not (<= (* 1 ONE) (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)))) (not (= (* 0 ONE) (+ (f a) (f b)))) (not (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE)))), (or (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE)))]
  clause args: [derived 503, derived 648]
  backptr: nil
  conclusion: (or (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE)) (not (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))) (not (<= (* 1 ONE) (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)))) (not (= (* 0 ONE) (+ (f a) (f b)))) (not (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE))))

  derived clause number: 650
  rule: resolution
  expr args: [(not (<= (* 1 ONE) (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)))), (or (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE)) (not (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))) (not (= (* 0 ONE) (+ (f a) (f b)))) (not (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE)))), (or (<= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (* 0 ONE)))]
  clause args: [derived 183, derived 649]
  backptr: nil
  conclusion: (or (<= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (* 0 ONE)) (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE)) (not (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))) (not (= (* 0 ONE) (+ (f a) (f b)))) (not (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE))))

  derived clause number: 651
  rule: resolution
  expr args: [(not (= (* 0 ONE) (+ (f a) (f b)))), (or (<= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (* 0 ONE)) (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE)) (not (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))) (not (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE)))), (or (not (= (+ (f a) (f b)) (* 0 ONE))))]
  clause args: [derived 502, derived 650]
  backptr: nil
  conclusion: (or (not (= (+ (f a) (f b)) (* 0 ONE))) (<= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (* 0 ONE)) (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE)) (not (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))) (not (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE))))

  derived clause number: 652
  rule: resolution
  expr args: [(not (= (+ (f a) (f b)) (* 0 ONE))), (or (<= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (* 0 ONE)) (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE)) (not (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))) (not (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE)))), (or )]
  clause args: [derived 501, derived 651]
  backptr: nil
  conclusion: (or (<= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (* 0 ONE)) (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE)) (not (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))) (not (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE))))

  derived clause number: 653
  rule: resolution
  expr args: [(not (= (+ SHRT_MAX (* -1 (* 32767 ONE))) (* 0 ONE))), (or (<= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (* 0 ONE)) (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE)) (not (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE)))), (or )]
  clause args: [derived 330, derived 652]
  backptr: nil
  conclusion: (or (<= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (* 0 ONE)) (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE)) (not (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))))

  derived clause number: 654
  rule: not+
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))) (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))

  derived clause number: 655
  rule: total
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)) (< (* 0 ONE) (+ (f b) (* -1 SHRT_MAX))))

  derived clause number: 656
  rule: or+
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))) (not (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))

  derived clause number: 657
  rule: resolution
  expr args: [(not (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))), (or (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))), (or (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))]
  clause args: [derived 654, derived 656]
  backptr: nil
  conclusion: (or (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)) (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))

  derived clause number: 658
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (f b) (* -1 SHRT_MAX)) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)))) (not (= (f b) (+ (* 1 (f b))))) (not (= (* -1 SHRT_MAX) (+ (* -1 SHRT_MAX)))))

  derived clause number: 659
  rule: resolution
  expr args: [(not (= (f b) (+ (* 1 (f b))))), (or (= (+ (f b) (* -1 SHRT_MAX)) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)))) (not (= (* -1 SHRT_MAX) (+ (* -1 SHRT_MAX))))), (or )]
  clause args: [derived 368, derived 658]
  backptr: nil
  conclusion: (or (= (+ (f b) (* -1 SHRT_MAX)) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)))) (not (= (* -1 SHRT_MAX) (+ (* -1 SHRT_MAX)))))

  derived clause number: 660
  rule: resolution
  expr args: [(not (= (* -1 SHRT_MAX) (+ (* -1 SHRT_MAX)))), (or (= (+ (f b) (* -1 SHRT_MAX)) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX))))), (or )]
  clause args: [derived 279, derived 659]
  backptr: nil
  conclusion: (or (= (+ (f b) (* -1 SHRT_MAX)) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)))))

  derived clause number: 661
  rule: flatten
  expr args: [(+ (+ (* -1 SHRT_MAX))), (+ (+ (* 1 (f b))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (+ (* -1 SHRT_MAX))))

  derived clause number: 662
  rule: or_single
  expr args: []
  clause args: [derived 661]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (+ (* -1 SHRT_MAX)))))

  derived clause number: 663
  rule: flatten
  expr args: [(+ (* 1 (f b))), (+ (+ (* -1 SHRT_MAX)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))

  derived clause number: 664
  rule: or_single
  expr args: []
  clause args: [derived 663]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX))))

  derived clause number: 665
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX))) (not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (+ (* -1 SHRT_MAX))))) (not (= (+ (* 1 (f b)) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))))

  derived clause number: 666
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (+ (* -1 SHRT_MAX))))), (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX))) (not (= (+ (* 1 (f b)) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX))))), (or )]
  clause args: [derived 662, derived 665]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX))) (not (= (+ (* 1 (f b)) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))))

  derived clause number: 667
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))), (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))), (or )]
  clause args: [derived 664, derived 666]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX))))

  derived clause number: 668
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (f b) (* -1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 SHRT_MAX))) (not (= (+ (f b) (* -1 SHRT_MAX)) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX))))) (not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))))

  derived clause number: 669
  rule: resolution
  expr args: [(not (= (+ (f b) (* -1 SHRT_MAX)) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX))))), (or (= (+ (f b) (* -1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 SHRT_MAX))) (not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX))))), (or )]
  clause args: [derived 660, derived 668]
  backptr: nil
  conclusion: (or (= (+ (f b) (* -1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 SHRT_MAX))) (not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))))

  derived clause number: 670
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))), (or (= (+ (f b) (* -1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 SHRT_MAX)))), (or )]
  clause args: [derived 667, derived 669]
  backptr: nil
  conclusion: (or (= (+ (f b) (* -1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 SHRT_MAX))))

  derived clause number: 671
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (* 1 (+ (* 1 (f b)) (* -1 SHRT_MAX)))) (not (= (+ (f b) (* -1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 SHRT_MAX)))))

  derived clause number: 672
  rule: resolution
  expr args: [(not (= (+ (f b) (* -1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 SHRT_MAX)))), (or (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (* 1 (+ (* 1 (f b)) (* -1 SHRT_MAX))))), (or )]
  clause args: [derived 670, derived 671]
  backptr: nil
  conclusion: (or (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (* 1 (+ (* 1 (f b)) (* -1 SHRT_MAX)))))

  derived clause number: 673
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* 1 (+ (* 1 (f b)) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))

  derived clause number: 674
  rule: or_single
  expr args: []
  clause args: [derived 673]
  backptr: nil
  conclusion: (or (= (* 1 (+ (* 1 (f b)) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX))))

  derived clause number: 675
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX))) (not (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (* 1 (+ (* 1 (f b)) (* -1 SHRT_MAX))))) (not (= (* 1 (+ (* 1 (f b)) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))))

  derived clause number: 676
  rule: resolution
  expr args: [(not (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (* 1 (+ (* 1 (f b)) (* -1 SHRT_MAX))))), (or (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX))) (not (= (* 1 (+ (* 1 (f b)) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX))))), (or )]
  clause args: [derived 672, derived 675]
  backptr: nil
  conclusion: (or (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX))) (not (= (* 1 (+ (* 1 (f b)) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))))

  derived clause number: 677
  rule: resolution
  expr args: [(not (= (* 1 (+ (* 1 (f b)) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))), (or (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))), (or )]
  clause args: [derived 674, derived 676]
  backptr: nil
  conclusion: (or (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX))))

  derived clause number: 678
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))) (not (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))))

  derived clause number: 679
  rule: resolution
  expr args: [(not (= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))), (or (= (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))))), (or )]
  clause args: [derived 553, derived 678]
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))))

  derived clause number: 680
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* 1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))

  derived clause number: 681
  rule: or_single
  expr args: []
  clause args: [derived 680]
  backptr: nil
  conclusion: (or (= (* 1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))))

  derived clause number: 682
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (not (= (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))))) (not (= (* 1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))))

  derived clause number: 683
  rule: resolution
  expr args: [(not (= (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* 1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))))), (or (= (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (not (= (* 1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))))), (or )]
  clause args: [derived 679, derived 682]
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (not (= (* 1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))))

  derived clause number: 684
  rule: resolution
  expr args: [(not (= (* 1 (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))), (or (= (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))), (or )]
  clause args: [derived 681, derived 683]
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE))))

  derived clause number: 685
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 686
  rule: resolution
  expr args: [(not (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))), (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 677, derived 685]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 687
  rule: resolution
  expr args: [(not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))), (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 138, derived 686]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE)))) (not (= (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 688
  rule: resolution
  expr args: [(not (= (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))), (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 684, derived 687]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 689
  rule: resolution
  expr args: [(not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))), (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 138, derived 688]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE)))))

  derived clause number: 690
  rule: flatten
  expr args: [(+ (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))), (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))))

  derived clause number: 691
  rule: or_single
  expr args: []
  clause args: [derived 690]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE)))))

  derived clause number: 692
  rule: flatten
  expr args: [(+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))), (+ (+ (* 0 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))))

  derived clause number: 693
  rule: or_single
  expr args: []
  clause args: [derived 692]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE)))))

  derived clause number: 694
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE)))) (not (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))))))

  derived clause number: 695
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 691, derived 694]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))))))

  derived clause number: 696
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 693, derived 695]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE)))))

  derived clause number: 697
  rule: flatten
  expr args: [(+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 0 ONE))), (+ (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE))))

  derived clause number: 698
  rule: or_single
  expr args: []
  clause args: [derived 697]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE)))))

  derived clause number: 699
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE)))) (not (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE))))))

  derived clause number: 700
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 696, derived 699]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE))))))

  derived clause number: 701
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE))))), (or )]
  clause args: [derived 698, derived 700]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE)))))

  derived clause number: 702
  rule: flatten
  expr args: [(+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)), (+ (+ (* 0 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)))

  derived clause number: 703
  rule: or_single
  expr args: []
  clause args: [derived 702]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE))))

  derived clause number: 704
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE))) (not (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE))))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)))))

  derived clause number: 705
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE))))), (or )]
  clause args: [derived 701, derived 704]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)))))

  derived clause number: 706
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)))), (or (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)))), (or )]
  clause args: [derived 703, derived 705]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE))))

  derived clause number: 707
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE))) (not (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))))) (not (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)))))

  derived clause number: 708
  rule: resolution
  expr args: [(not (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))))), (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE))) (not (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE))))), (or )]
  clause args: [derived 689, derived 707]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE))) (not (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)))))

  derived clause number: 709
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)))), (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)))), (or )]
  clause args: [derived 706, derived 708]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE))))

  derived clause number: 710
  rule: consolidate
  expr args: [(+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -1 (f b))), (+ (* 0 ONE) (* 1 ONE) (* 0 ONE)), (+ (* 1 ONE))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE) (* 1 (f b)) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -1 (f b))))

  derived clause number: 711
  rule: or_single
  expr args: []
  clause args: [derived 710]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE) (* 1 (f b)) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -1 (f b)))))

  derived clause number: 712
  rule: consolidate
  expr args: [(+ (* 1 ONE) (* 1 (f b)) (* -1 (f b))), (+ (* -1 SHRT_MAX) (* 1 SHRT_MAX)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 ONE) (* 1 (f b)) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -1 (f b))) (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b))))

  derived clause number: 713
  rule: or_single
  expr args: []
  clause args: [derived 712]
  backptr: nil
  conclusion: (or (= (+ (* 1 ONE) (* 1 (f b)) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -1 (f b))) (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b)))))

  derived clause number: 714
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE) (* 1 (f b)) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -1 (f b))))) (not (= (+ (* 1 ONE) (* 1 (f b)) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -1 (f b))) (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b))))))

  derived clause number: 715
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE) (* 1 (f b)) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -1 (f b))))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b)))) (not (= (+ (* 1 ONE) (* 1 (f b)) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -1 (f b))) (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b)))))), (or )]
  clause args: [derived 711, derived 714]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b)))) (not (= (+ (* 1 ONE) (* 1 (f b)) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -1 (f b))) (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b))))))

  derived clause number: 716
  rule: resolution
  expr args: [(not (= (+ (* 1 ONE) (* 1 (f b)) (* -1 SHRT_MAX) (* 1 SHRT_MAX) (* -1 (f b))) (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b))))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b))))), (or )]
  clause args: [derived 713, derived 715]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b)))))

  derived clause number: 717
  rule: consolidate
  expr args: [(+ (* 1 ONE)), (+ (* 1 (f b)) (* -1 (f b))), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b))) (+ (* 1 ONE)))

  derived clause number: 718
  rule: or_single
  expr args: []
  clause args: [derived 717]
  backptr: nil
  conclusion: (or (= (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b))) (+ (* 1 ONE))))

  derived clause number: 719
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b))))) (not (= (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b))) (+ (* 1 ONE)))))

  derived clause number: 720
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b))))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE))) (not (= (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b))) (+ (* 1 ONE))))), (or )]
  clause args: [derived 716, derived 719]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE))) (not (= (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b))) (+ (* 1 ONE)))))

  derived clause number: 721
  rule: resolution
  expr args: [(not (= (+ (* 1 ONE) (* 1 (f b)) (* -1 (f b))) (+ (* 1 ONE)))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE)))), (or )]
  clause args: [derived 718, derived 720]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE))))

  derived clause number: 722
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (* 1 ONE))) (not (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE)))))

  derived clause number: 723
  rule: resolution
  expr args: [(not (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)))), (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (* 1 ONE))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE))))), (or )]
  clause args: [derived 709, derived 722]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (* 1 ONE))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE)))))

  derived clause number: 724
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* 1 SHRT_MAX) (* -1 (f b)) (* 1 ONE) (* 0 ONE)) (+ (* 1 ONE)))), (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (* 1 ONE)))), (or )]
  clause args: [derived 721, derived 723]
  backptr: nil
  conclusion: (or (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (* 1 ONE))))

  derived clause number: 725
  rule: or_single_rev
  expr args: []
  clause args: [derived 724]
  backptr: nil
  conclusion: (= (+ (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE)) (* 1 (+ SHRT_MAX (* -1 (f b)) (* 1 ONE))) (* -1 (* 0 ONE))) (+ (* 1 ONE)))

  derived clause number: 726
  rule: farkas
  expr args: []
  clause args: [derived 725]
  backptr: nil
  conclusion: (or (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))) (not (<= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (* 0 ONE))))

  derived clause number: 727
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (+ (* 1 (f b)) (* -1 SHRT_MAX)))) (not (= (+ (f b) (* -1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 SHRT_MAX)))))

  derived clause number: 728
  rule: resolution
  expr args: [(not (= (+ (f b) (* -1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 SHRT_MAX)))), (or (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (+ (* 1 (f b)) (* -1 SHRT_MAX))))), (or )]
  clause args: [derived 670, derived 727]
  backptr: nil
  conclusion: (or (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (+ (* 1 (f b)) (* -1 SHRT_MAX)))))

  derived clause number: 729
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* -1 (+ (* 1 (f b)) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX)))

  derived clause number: 730
  rule: or_single
  expr args: []
  clause args: [derived 729]
  backptr: nil
  conclusion: (or (= (* -1 (+ (* 1 (f b)) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX))))

  derived clause number: 731
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (not (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (+ (* 1 (f b)) (* -1 SHRT_MAX))))) (not (= (* -1 (+ (* 1 (f b)) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX)))))

  derived clause number: 732
  rule: resolution
  expr args: [(not (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (+ (* 1 (f b)) (* -1 SHRT_MAX))))), (or (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (not (= (* -1 (+ (* 1 (f b)) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX))))), (or )]
  clause args: [derived 728, derived 731]
  backptr: nil
  conclusion: (or (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (not (= (* -1 (+ (* 1 (f b)) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX)))))

  derived clause number: 733
  rule: resolution
  expr args: [(not (= (* -1 (+ (* 1 (f b)) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX)))), (or (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX)))), (or )]
  clause args: [derived 730, derived 732]
  backptr: nil
  conclusion: (or (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX))))

  derived clause number: 734
  rule: resolution
  expr args: [(not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))), (or (not (<= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (* 0 ONE)))), (or (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))]
  clause args: [derived 657, derived 726]
  backptr: nil
  conclusion: (or (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))) (not (<= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (* 0 ONE))))

  derived clause number: 735
  rule: refl
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= err err))

  derived clause number: 736
  rule: =+1
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))) (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))

  derived clause number: 737
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)))) (not (= (* 1 SHRT_MAX) (+ (* 1 SHRT_MAX)))) (not (= (* -1 (f b)) (+ (* -1 (f b))))) (not (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 738
  rule: resolution
  expr args: [(not (= (* 1 SHRT_MAX) (+ (* 1 SHRT_MAX)))), (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)))) (not (= (* -1 (f b)) (+ (* -1 (f b))))) (not (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 189, derived 737]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)))) (not (= (* -1 (f b)) (+ (* -1 (f b))))) (not (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 739
  rule: resolution
  expr args: [(not (= (* -1 (f b)) (+ (* -1 (f b))))), (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)))) (not (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 445, derived 738]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)))) (not (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 740
  rule: resolution
  expr args: [(not (= (* 1 (+ (f b) (* -1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX)))), (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 677, derived 739]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 741
  rule: resolution
  expr args: [(not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))), (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 138, derived 740]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)))))

  derived clause number: 742
  rule: flatten
  expr args: [(+ (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))), (+ (+ (* 1 SHRT_MAX)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))))

  derived clause number: 743
  rule: or_single
  expr args: []
  clause args: [derived 742]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)))))

  derived clause number: 744
  rule: flatten
  expr args: [(+ (* 1 SHRT_MAX) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))), (+ (+ (* -1 (f b))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))))

  derived clause number: 745
  rule: or_single
  expr args: []
  clause args: [derived 744]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)))))

  derived clause number: 746
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))))) (not (= (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))))))

  derived clause number: 747
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 743, derived 746]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))))))

  derived clause number: 748
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 745, derived 747]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE)))))

  derived clause number: 749
  rule: flatten
  expr args: [(+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 0 ONE))), (+ (+ (* 1 (f b)) (* -1 SHRT_MAX)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE))))

  derived clause number: 750
  rule: or_single
  expr args: []
  clause args: [derived 749]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)))))

  derived clause number: 751
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))))) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE))))))

  derived clause number: 752
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 748, derived 751]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)))) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE))))))

  derived clause number: 753
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE))))), (or )]
  clause args: [derived 750, derived 752]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)))))

  derived clause number: 754
  rule: flatten
  expr args: [(+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX)), (+ (+ (* 0 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)))

  derived clause number: 755
  rule: or_single
  expr args: []
  clause args: [derived 754]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE))))

  derived clause number: 756
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE))))) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)))))

  derived clause number: 757
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE))) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE))))), (or )]
  clause args: [derived 753, derived 756]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE))) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)))))

  derived clause number: 758
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)))), (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)))), (or )]
  clause args: [derived 755, derived 757]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE))))

  derived clause number: 759
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE))) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)))))

  derived clause number: 760
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))))), (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE))))), (or )]
  clause args: [derived 741, derived 759]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE))) (not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)))))

  derived clause number: 761
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MAX)) (+ (* -1 (f b))) (+ (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)))), (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)))), (or )]
  clause args: [derived 758, derived 760]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE))))

  derived clause number: 762
  rule: consolidate
  expr args: [(+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX)), (+ (* 0 ONE)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX)))

  derived clause number: 763
  rule: or_single
  expr args: []
  clause args: [derived 762]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX))))

  derived clause number: 764
  rule: consolidate
  expr args: [(+ (* -1 (f b)) (* 1 (f b))), (+ (* 1 SHRT_MAX) (* -1 SHRT_MAX)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* -1 (f b)) (* 1 (f b))))

  derived clause number: 765
  rule: or_single
  expr args: []
  clause args: [derived 764]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* -1 (f b)) (* 1 (f b)))))

  derived clause number: 766
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ (* -1 (f b)) (* 1 (f b)))) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX)))) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* -1 (f b)) (* 1 (f b))))))

  derived clause number: 767
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX)))), (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ (* -1 (f b)) (* 1 (f b)))) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* -1 (f b)) (* 1 (f b)))))), (or )]
  clause args: [derived 763, derived 766]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ (* -1 (f b)) (* 1 (f b)))) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* -1 (f b)) (* 1 (f b))))))

  derived clause number: 768
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX)) (+ (* -1 (f b)) (* 1 (f b))))), (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ (* -1 (f b)) (* 1 (f b))))), (or )]
  clause args: [derived 765, derived 767]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ (* -1 (f b)) (* 1 (f b)))))

  derived clause number: 769
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ )) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ (* -1 (f b)) (* 1 (f b))))) (not (= (+ (* -1 (f b)) (* 1 (f b))) (+ ))))

  derived clause number: 770
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ (* -1 (f b)) (* 1 (f b))))), (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ )) (not (= (+ (* -1 (f b)) (* 1 (f b))) (+ )))), (or )]
  clause args: [derived 768, derived 769]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ )) (not (= (+ (* -1 (f b)) (* 1 (f b))) (+ ))))

  derived clause number: 771
  rule: resolution
  expr args: [(not (= (+ (* -1 (f b)) (* 1 (f b))) (+ ))), (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ ))), (or )]
  clause args: [derived 486, derived 770]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ )))

  derived clause number: 772
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)))) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ ))))

  derived clause number: 773
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)))), (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ )))), (or )]
  clause args: [derived 761, derived 772]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ ))))

  derived clause number: 774
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)) (+ ))), (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ ))), (or )]
  clause args: [derived 771, derived 773]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ )))

  derived clause number: 775
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ ))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 776
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ ))), (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE))))), (or )]
  clause args: [derived 774, derived 775]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 777
  rule: resolution
  expr args: [(not (= (+ ) (+ (* 0 ONE)))), (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (* 0 ONE)))), (or )]
  clause args: [derived 107, derived 776]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (* 0 ONE))))

  derived clause number: 778
  rule: or_single_rev
  expr args: []
  clause args: [derived 777]
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MAX) (* -1 (f b)) (* 1 (+ (f b) (* -1 SHRT_MAX))) (* -1 (* 0 ONE))) (+ (* 0 ONE)))

  derived clause number: 779
  rule: farkas
  expr args: []
  clause args: [derived 778]
  backptr: nil
  conclusion: (or (not (< SHRT_MAX (f b))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))

  derived clause number: 780
  rule: resolution
  expr args: [(not (< SHRT_MAX (f b))), (or (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))), (or (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))]
  clause args: [derived 736, derived 779]
  backptr: nil
  conclusion: (or (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))

  derived clause number: 781
  rule: total
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (<= (f b) SHRT_MAX) (< SHRT_MAX (f b)))

  derived clause number: 782
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX)))) (not (= (* 1 (f b)) (+ (* 1 (f b))))) (not (= (* -1 SHRT_MAX) (+ (* -1 SHRT_MAX)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX)))))

  derived clause number: 783
  rule: resolution
  expr args: [(not (= (* 1 (f b)) (+ (* 1 (f b))))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX)))) (not (= (* -1 SHRT_MAX) (+ (* -1 SHRT_MAX)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX))))), (or )]
  clause args: [derived 341, derived 782]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX)))) (not (= (* -1 SHRT_MAX) (+ (* -1 SHRT_MAX)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX)))))

  derived clause number: 784
  rule: resolution
  expr args: [(not (= (* -1 SHRT_MAX) (+ (* -1 SHRT_MAX)))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX))))), (or )]
  clause args: [derived 279, derived 783]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX)))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX)))))

  derived clause number: 785
  rule: resolution
  expr args: [(not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX)))) (not (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX))))), (or )]
  clause args: [derived 41, derived 784]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX)))) (not (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX)))))

  derived clause number: 786
  rule: resolution
  expr args: [(not (= (* -1 (+ (f b) (* -1 SHRT_MAX))) (+ (* -1 (f b)) (* 1 SHRT_MAX)))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))))), (or )]
  clause args: [derived 733, derived 785]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX)))))

  derived clause number: 787
  rule: flatten
  expr args: [(+ (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))), (+ (+ (* 1 (f b))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))))

  derived clause number: 788
  rule: or_single
  expr args: []
  clause args: [derived 787]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX)))))

  derived clause number: 789
  rule: flatten
  expr args: [(+ (* 1 (f b)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))), (+ (+ (* -1 SHRT_MAX)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))))

  derived clause number: 790
  rule: or_single
  expr args: []
  clause args: [derived 789]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX)))))

  derived clause number: 791
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX)))) (not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))))) (not (= (+ (* 1 (f b)) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))))))

  derived clause number: 792
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))))), (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX)))) (not (= (+ (* 1 (f b)) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX)))))), (or )]
  clause args: [derived 788, derived 791]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX)))) (not (= (+ (* 1 (f b)) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))))))

  derived clause number: 793
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))))), (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))))), (or )]
  clause args: [derived 790, derived 792]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX)))))

  derived clause number: 794
  rule: flatten
  expr args: [(+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* -1 (f b)) (* 1 SHRT_MAX))), (+ (+ (* 0 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX))))

  derived clause number: 795
  rule: or_single
  expr args: []
  clause args: [derived 794]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX)))))

  derived clause number: 796
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX)))) (not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX))))))

  derived clause number: 797
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))))), (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX)))))), (or )]
  clause args: [derived 793, derived 796]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX))))))

  derived clause number: 798
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX))))), (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX))))), (or )]
  clause args: [derived 795, derived 797]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX)))))

  derived clause number: 799
  rule: flatten
  expr args: [(+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE)), (+ (+ (* -1 (f b)) (* 1 SHRT_MAX)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)))

  derived clause number: 800
  rule: or_single
  expr args: []
  clause args: [derived 799]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX))))

  derived clause number: 801
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX))) (not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX))))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)))))

  derived clause number: 802
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX))))), (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX))))), (or )]
  clause args: [derived 798, derived 801]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)))))

  derived clause number: 803
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)))), (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)))), (or )]
  clause args: [derived 800, derived 802]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX))))

  derived clause number: 804
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))))) (not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)))))

  derived clause number: 805
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX))) (not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX))))), (or )]
  clause args: [derived 786, derived 804]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX))) (not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)))))

  derived clause number: 806
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MAX)) (+ (* 0 ONE)) (+ (* -1 (f b)) (* 1 SHRT_MAX))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)))), (or )]
  clause args: [derived 803, derived 805]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX))))

  derived clause number: 807
  rule: consolidate
  expr args: [(+ (* 1 (f b)) (* -1 SHRT_MAX) (* -1 (f b)) (* 1 SHRT_MAX)), (+ (* 0 ONE)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* -1 (f b)) (* 1 SHRT_MAX)))

  derived clause number: 808
  rule: or_single
  expr args: []
  clause args: [derived 807]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* -1 (f b)) (* 1 SHRT_MAX))))

  derived clause number: 809
  rule: consolidate
  expr args: [(+ (* 1 (f b)) (* -1 (f b))), (+ (* -1 SHRT_MAX) (* 1 SHRT_MAX)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 (f b))))

  derived clause number: 810
  rule: or_single
  expr args: []
  clause args: [derived 809]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 (f b)))))

  derived clause number: 811
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 (f b)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* -1 (f b)) (* 1 SHRT_MAX)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 (f b))))))

  derived clause number: 812
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* -1 (f b)) (* 1 SHRT_MAX)))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 (f b)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 (f b)))))), (or )]
  clause args: [derived 808, derived 811]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 (f b)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 (f b))))))

  derived clause number: 813
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 (f b))))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 (f b))))), (or )]
  clause args: [derived 810, derived 812]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 (f b)))))

  derived clause number: 814
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ )) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 (f b))))) (not (= (+ (* 1 (f b)) (* -1 (f b))) (+ ))))

  derived clause number: 815
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ (* 1 (f b)) (* -1 (f b))))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ )) (not (= (+ (* 1 (f b)) (* -1 (f b))) (+ )))), (or )]
  clause args: [derived 813, derived 814]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ )) (not (= (+ (* 1 (f b)) (* -1 (f b))) (+ ))))

  derived clause number: 816
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 (f b))) (+ ))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ ))), (or )]
  clause args: [derived 422, derived 815]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ )))

  derived clause number: 817
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ )) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ ))))

  derived clause number: 818
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ )) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ )))), (or )]
  clause args: [derived 806, derived 817]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ )) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ ))))

  derived clause number: 819
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 0 ONE) (* -1 (f b)) (* 1 SHRT_MAX)) (+ ))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ ))), (or )]
  clause args: [derived 816, derived 818]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ )))

  derived clause number: 820
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (* 0 ONE))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ ))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 821
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ ))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE))))), (or )]
  clause args: [derived 819, derived 820]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 822
  rule: resolution
  expr args: [(not (= (+ ) (+ (* 0 ONE)))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (* 0 ONE)))), (or )]
  clause args: [derived 107, derived 821]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (* 0 ONE))))

  derived clause number: 823
  rule: or_single_rev
  expr args: []
  clause args: [derived 822]
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* -1 SHRT_MAX) (* 1 (* 0 ONE)) (* -1 (+ (f b) (* -1 SHRT_MAX)))) (+ (* 0 ONE)))

  derived clause number: 824
  rule: farkas
  expr args: []
  clause args: [derived 823]
  backptr: nil
  conclusion: (or (not (<= (f b) SHRT_MAX)) (not (< (* 0 ONE) (+ (f b) (* -1 SHRT_MAX)))))

  derived clause number: 825
  rule: resolution
  expr args: [(not (< (* 0 ONE) (+ (f b) (* -1 SHRT_MAX)))), (or (not (<= (f b) SHRT_MAX))), (or (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))]
  clause args: [derived 655, derived 824]
  backptr: nil
  conclusion: (or (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)) (not (<= (f b) SHRT_MAX)))

  derived clause number: 826
  rule: not+
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (not (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))

  derived clause number: 827
  rule: resolution
  expr args: [(not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))), (or (not (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))), (or (not (<= (f b) SHRT_MAX)))]
  clause args: [derived 825, derived 826]
  backptr: nil
  conclusion: (or (not (<= (f b) SHRT_MAX)) (not (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))

  derived clause number: 828
  rule: resolution
  expr args: [(not (<= (f b) SHRT_MAX)), (or (not (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))), (or (< SHRT_MAX (f b)))]
  clause args: [derived 781, derived 827]
  backptr: nil
  conclusion: (or (< SHRT_MAX (f b)) (not (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))

  derived clause number: 829
  rule: =+2
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))) (not (< SHRT_MAX (f b))) (not (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))

  derived clause number: 830
  rule: resolution
  expr args: [(not (< SHRT_MAX (f b))), (or (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))) (not (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))), (or (not (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))]
  clause args: [derived 828, derived 829]
  backptr: nil
  conclusion: (or (not (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))) (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))) (not (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))

  derived clause number: 831
  rule: factoring
  expr args: []
  clause args: [derived 780]
  backptr: nil
  conclusion: (or (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))

  derived clause number: 832
  rule: factoring
  expr args: []
  clause args: [derived 830]
  backptr: nil
  conclusion: (or (not (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))) (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))

  derived clause number: 833
  rule: resolution
  expr args: [(not (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))), (or (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))), (or (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))]
  clause args: [derived 831, derived 832]
  backptr: nil
  conclusion: (or (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))) (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))

  derived clause number: 834
  rule: =+1
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (< (f b) SHRT_MIN) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))) (< (f b) SHRT_MIN) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))))

  derived clause number: 835
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* -1 (f b))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))))) (not (= SHRT_MIN (+ (* 1 SHRT_MIN)))) (not (= (* -1 (f b)) (+ (* -1 (f b))))))

  derived clause number: 836
  rule: resolution
  expr args: [(not (= SHRT_MIN (+ (* 1 SHRT_MIN)))), (or (= (+ SHRT_MIN (* -1 (f b))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))))) (not (= (* -1 (f b)) (+ (* -1 (f b)))))), (or )]
  clause args: [derived 48, derived 835]
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* -1 (f b))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))))) (not (= (* -1 (f b)) (+ (* -1 (f b))))))

  derived clause number: 837
  rule: resolution
  expr args: [(not (= (* -1 (f b)) (+ (* -1 (f b))))), (or (= (+ SHRT_MIN (* -1 (f b))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b)))))), (or )]
  clause args: [derived 445, derived 836]
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* -1 (f b))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))))))

  derived clause number: 838
  rule: flatten
  expr args: [(+ (+ (* -1 (f b)))), (+ (+ (* 1 SHRT_MIN)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (+ (* -1 (f b)))))

  derived clause number: 839
  rule: or_single
  expr args: []
  clause args: [derived 838]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (+ (* -1 (f b))))))

  derived clause number: 840
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN)), (+ (+ (* -1 (f b))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))

  derived clause number: 841
  rule: or_single
  expr args: []
  clause args: [derived 840]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)))))

  derived clause number: 842
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (+ (* -1 (f b)))))) (not (= (+ (* 1 SHRT_MIN) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))))

  derived clause number: 843
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (+ (* -1 (f b)))))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)))) (not (= (+ (* 1 SHRT_MIN) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)))))), (or )]
  clause args: [derived 839, derived 842]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)))) (not (= (+ (* 1 SHRT_MIN) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))))

  derived clause number: 844
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))), (or )]
  clause args: [derived 841, derived 843]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)))))

  derived clause number: 845
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* -1 (f b))) (+ (* 1 SHRT_MIN) (* -1 (f b)))) (not (= (+ SHRT_MIN (* -1 (f b))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b)))))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))))

  derived clause number: 846
  rule: resolution
  expr args: [(not (= (+ SHRT_MIN (* -1 (f b))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b)))))), (or (= (+ SHRT_MIN (* -1 (f b))) (+ (* 1 SHRT_MIN) (* -1 (f b)))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)))))), (or )]
  clause args: [derived 837, derived 845]
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* -1 (f b))) (+ (* 1 SHRT_MIN) (* -1 (f b)))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))))

  derived clause number: 847
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))), (or (= (+ SHRT_MIN (* -1 (f b))) (+ (* 1 SHRT_MIN) (* -1 (f b))))), (or )]
  clause args: [derived 844, derived 846]
  backptr: nil
  conclusion: (or (= (+ SHRT_MIN (* -1 (f b))) (+ (* 1 SHRT_MIN) (* -1 (f b)))))

  derived clause number: 848
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MIN (* -1 (f b)))) (* 1 (+ (* 1 SHRT_MIN) (* -1 (f b))))) (not (= (+ SHRT_MIN (* -1 (f b))) (+ (* 1 SHRT_MIN) (* -1 (f b))))))

  derived clause number: 849
  rule: resolution
  expr args: [(not (= (+ SHRT_MIN (* -1 (f b))) (+ (* 1 SHRT_MIN) (* -1 (f b))))), (or (= (* 1 (+ SHRT_MIN (* -1 (f b)))) (* 1 (+ (* 1 SHRT_MIN) (* -1 (f b)))))), (or )]
  clause args: [derived 847, derived 848]
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MIN (* -1 (f b)))) (* 1 (+ (* 1 SHRT_MIN) (* -1 (f b))))))

  derived clause number: 850
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* 1 (+ (* 1 SHRT_MIN) (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))

  derived clause number: 851
  rule: or_single
  expr args: []
  clause args: [derived 850]
  backptr: nil
  conclusion: (or (= (* 1 (+ (* 1 SHRT_MIN) (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)))))

  derived clause number: 852
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MIN (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)))) (not (= (* 1 (+ SHRT_MIN (* -1 (f b)))) (* 1 (+ (* 1 SHRT_MIN) (* -1 (f b)))))) (not (= (* 1 (+ (* 1 SHRT_MIN) (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))))

  derived clause number: 853
  rule: resolution
  expr args: [(not (= (* 1 (+ SHRT_MIN (* -1 (f b)))) (* 1 (+ (* 1 SHRT_MIN) (* -1 (f b)))))), (or (= (* 1 (+ SHRT_MIN (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)))) (not (= (* 1 (+ (* 1 SHRT_MIN) (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)))))), (or )]
  clause args: [derived 849, derived 852]
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MIN (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)))) (not (= (* 1 (+ (* 1 SHRT_MIN) (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))))

  derived clause number: 854
  rule: resolution
  expr args: [(not (= (* 1 (+ (* 1 SHRT_MIN) (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))), (or (= (* 1 (+ SHRT_MIN (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))), (or )]
  clause args: [derived 851, derived 853]
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MIN (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)))))

  derived clause number: 855
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE)))) (not (= (* 1 (f b)) (+ (* 1 (f b))))) (not (= (* -1 SHRT_MIN) (+ (* -1 SHRT_MIN)))) (not (= (* 1 (+ SHRT_MIN (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 856
  rule: resolution
  expr args: [(not (= (* 1 (f b)) (+ (* 1 (f b))))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE)))) (not (= (* -1 SHRT_MIN) (+ (* -1 SHRT_MIN)))) (not (= (* 1 (+ SHRT_MIN (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 341, derived 855]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE)))) (not (= (* -1 SHRT_MIN) (+ (* -1 SHRT_MIN)))) (not (= (* 1 (+ SHRT_MIN (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 857
  rule: resolution
  expr args: [(not (= (* -1 SHRT_MIN) (+ (* -1 SHRT_MIN)))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE)))) (not (= (* 1 (+ SHRT_MIN (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 124, derived 856]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE)))) (not (= (* 1 (+ SHRT_MIN (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 858
  rule: resolution
  expr args: [(not (= (* 1 (+ SHRT_MIN (* -1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b))))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 854, derived 857]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 859
  rule: resolution
  expr args: [(not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))))), (or )]
  clause args: [derived 138, derived 858]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE)))))

  derived clause number: 860
  rule: flatten
  expr args: [(+ (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))), (+ (+ (* 1 (f b))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))))

  derived clause number: 861
  rule: or_single
  expr args: []
  clause args: [derived 860]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE)))))

  derived clause number: 862
  rule: flatten
  expr args: [(+ (* 1 (f b)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))), (+ (+ (* -1 SHRT_MIN)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))))

  derived clause number: 863
  rule: or_single
  expr args: []
  clause args: [derived 862]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE)))))

  derived clause number: 864
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE)))) (not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))))) (not (= (+ (* 1 (f b)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))))))

  derived clause number: 865
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE)))) (not (= (+ (* 1 (f b)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 861, derived 864]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE)))) (not (= (+ (* 1 (f b)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))))))

  derived clause number: 866
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))))), (or )]
  clause args: [derived 863, derived 865]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE)))))

  derived clause number: 867
  rule: flatten
  expr args: [(+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 0 ONE))), (+ (+ (* 1 SHRT_MIN) (* -1 (f b))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE))))

  derived clause number: 868
  rule: or_single
  expr args: []
  clause args: [derived 867]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)))))

  derived clause number: 869
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)))) (not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE))))))

  derived clause number: 870
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 866, derived 869]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE))))))

  derived clause number: 871
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 868, derived 870]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)))))

  derived clause number: 872
  rule: flatten
  expr args: [(+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b))), (+ (+ (* 0 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)))

  derived clause number: 873
  rule: or_single
  expr args: []
  clause args: [derived 872]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE))))

  derived clause number: 874
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE))) (not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE))))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)))))

  derived clause number: 875
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE))))), (or )]
  clause args: [derived 871, derived 874]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)))))

  derived clause number: 876
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)))), (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)))), (or )]
  clause args: [derived 873, derived 875]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE))))

  derived clause number: 877
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))))) (not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)))))

  derived clause number: 878
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE))) (not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE))))), (or )]
  clause args: [derived 859, derived 877]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE))) (not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)))))

  derived clause number: 879
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f b))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)))), (or )]
  clause args: [derived 876, derived 878]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE))))

  derived clause number: 880
  rule: consolidate
  expr args: [(+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b))), (+ (* 0 ONE)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b))))

  derived clause number: 881
  rule: or_single
  expr args: []
  clause args: [derived 880]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)))))

  derived clause number: 882
  rule: consolidate
  expr args: [(+ (* 1 (f b)) (* -1 (f b))), (+ (* -1 SHRT_MIN) (* 1 SHRT_MIN)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b))))

  derived clause number: 883
  rule: or_single
  expr args: []
  clause args: [derived 882]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b)))))

  derived clause number: 884
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ (* 1 (f b)) (* -1 (f b)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b))))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b))))))

  derived clause number: 885
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b))))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ (* 1 (f b)) (* -1 (f b)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b)))))), (or )]
  clause args: [derived 881, derived 884]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ (* 1 (f b)) (* -1 (f b)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b))))))

  derived clause number: 886
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b))) (+ (* 1 (f b)) (* -1 (f b))))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ (* 1 (f b)) (* -1 (f b))))), (or )]
  clause args: [derived 883, derived 885]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ (* 1 (f b)) (* -1 (f b)))))

  derived clause number: 887
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ )) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ (* 1 (f b)) (* -1 (f b))))) (not (= (+ (* 1 (f b)) (* -1 (f b))) (+ ))))

  derived clause number: 888
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ (* 1 (f b)) (* -1 (f b))))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ )) (not (= (+ (* 1 (f b)) (* -1 (f b))) (+ )))), (or )]
  clause args: [derived 886, derived 887]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ )) (not (= (+ (* 1 (f b)) (* -1 (f b))) (+ ))))

  derived clause number: 889
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 (f b))) (+ ))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ ))), (or )]
  clause args: [derived 422, derived 888]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ )))

  derived clause number: 890
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ ))))

  derived clause number: 891
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ )))), (or )]
  clause args: [derived 879, derived 890]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ ))))

  derived clause number: 892
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)) (+ ))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ ))), (or )]
  clause args: [derived 889, derived 891]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ )))

  derived clause number: 893
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ ))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 894
  rule: resolution
  expr args: [(not (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ ))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE))))), (or )]
  clause args: [derived 892, derived 893]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 895
  rule: resolution
  expr args: [(not (= (+ ) (+ (* 0 ONE)))), (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (* 0 ONE)))), (or )]
  clause args: [derived 107, derived 894]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (* 0 ONE))))

  derived clause number: 896
  rule: or_single_rev
  expr args: []
  clause args: [derived 895]
  backptr: nil
  conclusion: (= (+ (* 1 (f b)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (* 0 ONE))) (+ (* 0 ONE)))

  derived clause number: 897
  rule: farkas
  expr args: []
  clause args: [derived 896]
  backptr: nil
  conclusion: (or (not (< (f b) SHRT_MIN)) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))))

  derived clause number: 898
  rule: resolution
  expr args: [(not (< (f b) SHRT_MIN)), (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))), (or (= (< (f b) SHRT_MIN) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))))]
  clause args: [derived 834, derived 897]
  backptr: nil
  conclusion: (or (= (< (f b) SHRT_MIN) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))))

  derived clause number: 899
  rule: total
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (<= SHRT_MIN (f b)) (< (f b) SHRT_MIN))

  derived clause number: 900
  rule: total
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)) (< (* 0 ONE) (+ SHRT_MIN (* -1 (f b)))))

  derived clause number: 901
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (+ (* 1 SHRT_MIN) (* -1 (f b))))) (not (= (+ SHRT_MIN (* -1 (f b))) (+ (* 1 SHRT_MIN) (* -1 (f b))))))

  derived clause number: 902
  rule: resolution
  expr args: [(not (= (+ SHRT_MIN (* -1 (f b))) (+ (* 1 SHRT_MIN) (* -1 (f b))))), (or (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (+ (* 1 SHRT_MIN) (* -1 (f b)))))), (or )]
  clause args: [derived 847, derived 901]
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (+ (* 1 SHRT_MIN) (* -1 (f b))))))

  derived clause number: 903
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* -1 (+ (* 1 SHRT_MIN) (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b))))

  derived clause number: 904
  rule: or_single
  expr args: []
  clause args: [derived 903]
  backptr: nil
  conclusion: (or (= (* -1 (+ (* 1 SHRT_MIN) (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b)))))

  derived clause number: 905
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (not (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (+ (* 1 SHRT_MIN) (* -1 (f b)))))) (not (= (* -1 (+ (* 1 SHRT_MIN) (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b))))))

  derived clause number: 906
  rule: resolution
  expr args: [(not (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (* -1 (+ (* 1 SHRT_MIN) (* -1 (f b)))))), (or (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (not (= (* -1 (+ (* 1 SHRT_MIN) (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b)))))), (or )]
  clause args: [derived 902, derived 905]
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (not (= (* -1 (+ (* 1 SHRT_MIN) (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b))))))

  derived clause number: 907
  rule: resolution
  expr args: [(not (= (* -1 (+ (* 1 SHRT_MIN) (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b))))), (or (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b))))), (or )]
  clause args: [derived 904, derived 906]
  backptr: nil
  conclusion: (or (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b)))))

  derived clause number: 908
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b))))) (not (= (* 1 SHRT_MIN) (+ (* 1 SHRT_MIN)))) (not (= (* -1 (f b)) (+ (* -1 (f b))))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b))))))

  derived clause number: 909
  rule: resolution
  expr args: [(not (= (* 1 SHRT_MIN) (+ (* 1 SHRT_MIN)))), (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b))))) (not (= (* -1 (f b)) (+ (* -1 (f b))))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b)))))), (or )]
  clause args: [derived 12, derived 908]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b))))) (not (= (* -1 (f b)) (+ (* -1 (f b))))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b))))))

  derived clause number: 910
  rule: resolution
  expr args: [(not (= (* -1 (f b)) (+ (* -1 (f b))))), (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b))))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b)))))), (or )]
  clause args: [derived 445, derived 909]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b))))) (not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))) (not (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b))))))

  derived clause number: 911
  rule: resolution
  expr args: [(not (= (* 1 (* 0 ONE)) (+ (* 0 ONE)))), (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b))))) (not (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b)))))), (or )]
  clause args: [derived 41, derived 910]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b))))) (not (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b))))))

  derived clause number: 912
  rule: resolution
  expr args: [(not (= (* -1 (+ SHRT_MIN (* -1 (f b)))) (+ (* -1 SHRT_MIN) (* 1 (f b))))), (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))))), (or )]
  clause args: [derived 907, derived 911]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b))))))

  derived clause number: 913
  rule: flatten
  expr args: [(+ (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))), (+ (+ (* 1 SHRT_MIN)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))))

  derived clause number: 914
  rule: or_single
  expr args: []
  clause args: [derived 913]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b))))))

  derived clause number: 915
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))), (+ (+ (* -1 (f b))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))))

  derived clause number: 916
  rule: or_single
  expr args: []
  clause args: [derived 915]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b))))))

  derived clause number: 917
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b))))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))))) (not (= (+ (* 1 SHRT_MIN) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))))))

  derived clause number: 918
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b))))) (not (= (+ (* 1 SHRT_MIN) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b))))))), (or )]
  clause args: [derived 914, derived 917]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b))))) (not (= (+ (* 1 SHRT_MIN) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))))))

  derived clause number: 919
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))))), (or )]
  clause args: [derived 916, derived 918]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b))))))

  derived clause number: 920
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* -1 SHRT_MIN) (* 1 (f b)))), (+ (+ (* 0 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b)))))

  derived clause number: 921
  rule: or_single
  expr args: []
  clause args: [derived 920]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b))))))

  derived clause number: 922
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b))))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))))) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b)))))))

  derived clause number: 923
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b))))) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b))))))), (or )]
  clause args: [derived 919, derived 922]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b))))) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b)))))))

  derived clause number: 924
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b)))))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b)))))), (or )]
  clause args: [derived 921, derived 923]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b))))))

  derived clause number: 925
  rule: flatten
  expr args: [(+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE)), (+ (+ (* -1 SHRT_MIN) (* 1 (f b))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))))

  derived clause number: 926
  rule: or_single
  expr args: []
  clause args: [derived 925]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b)))))

  derived clause number: 927
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b)))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b)))))) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))))))

  derived clause number: 928
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b)))))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b)))) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b)))))), (or )]
  clause args: [derived 924, derived 927]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b)))) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))))))

  derived clause number: 929
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))))), (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))))), (or )]
  clause args: [derived 926, derived 928]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b)))))

  derived clause number: 930
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b)))) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))))))

  derived clause number: 931
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))))), (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b)))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b)))))), (or )]
  clause args: [derived 912, derived 930]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b)))) (not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))))))

  derived clause number: 932
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 SHRT_MIN)) (+ (* -1 (f b))) (+ (* 0 ONE)) (+ (* -1 SHRT_MIN) (* 1 (f b)))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))))), (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))))), (or )]
  clause args: [derived 929, derived 931]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b)))))

  derived clause number: 933
  rule: consolidate
  expr args: [(+ (* 1 SHRT_MIN) (* -1 (f b)) (* -1 SHRT_MIN) (* 1 (f b))), (+ (* 0 ONE)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* -1 SHRT_MIN) (* 1 (f b))))

  derived clause number: 934
  rule: or_single
  expr args: []
  clause args: [derived 933]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* -1 SHRT_MIN) (* 1 (f b)))))

  derived clause number: 935
  rule: consolidate
  expr args: [(+ (* -1 (f b)) (* 1 (f b))), (+ (* 1 SHRT_MIN) (* -1 SHRT_MIN)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b))))

  derived clause number: 936
  rule: or_single
  expr args: []
  clause args: [derived 935]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b)))))

  derived clause number: 937
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b)))) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* -1 SHRT_MIN) (* 1 (f b))))) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b))))))

  derived clause number: 938
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* -1 SHRT_MIN) (* 1 (f b))))), (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b)))) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b)))))), (or )]
  clause args: [derived 934, derived 937]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b)))) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b))))))

  derived clause number: 939
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b))))), (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b))))), (or )]
  clause args: [derived 936, derived 938]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b)))))

  derived clause number: 940
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ )) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b))))) (not (= (+ (* -1 (f b)) (* 1 (f b))) (+ ))))

  derived clause number: 941
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ (* -1 (f b)) (* 1 (f b))))), (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ )) (not (= (+ (* -1 (f b)) (* 1 (f b))) (+ )))), (or )]
  clause args: [derived 939, derived 940]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ )) (not (= (+ (* -1 (f b)) (* 1 (f b))) (+ ))))

  derived clause number: 942
  rule: resolution
  expr args: [(not (= (+ (* -1 (f b)) (* 1 (f b))) (+ ))), (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ ))), (or )]
  clause args: [derived 486, derived 941]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ )))

  derived clause number: 943
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ )) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))))) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ ))))

  derived clause number: 944
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))))), (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ )) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ )))), (or )]
  clause args: [derived 932, derived 943]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ )) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ ))))

  derived clause number: 945
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 0 ONE) (* -1 SHRT_MIN) (* 1 (f b))) (+ ))), (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ ))), (or )]
  clause args: [derived 942, derived 944]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ )))

  derived clause number: 946
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (* 0 ONE))) (not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ ))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 947
  rule: resolution
  expr args: [(not (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ ))), (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE))))), (or )]
  clause args: [derived 945, derived 946]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 948
  rule: resolution
  expr args: [(not (= (+ ) (+ (* 0 ONE)))), (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (* 0 ONE)))), (or )]
  clause args: [derived 107, derived 947]
  backptr: nil
  conclusion: (or (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (* 0 ONE))))

  derived clause number: 949
  rule: or_single_rev
  expr args: []
  clause args: [derived 948]
  backptr: nil
  conclusion: (= (+ (* 1 SHRT_MIN) (* -1 (f b)) (* 1 (* 0 ONE)) (* -1 (+ SHRT_MIN (* -1 (f b))))) (+ (* 0 ONE)))

  derived clause number: 950
  rule: farkas
  expr args: []
  clause args: [derived 949]
  backptr: nil
  conclusion: (or (not (<= SHRT_MIN (f b))) (not (< (* 0 ONE) (+ SHRT_MIN (* -1 (f b))))))

  derived clause number: 951
  rule: resolution
  expr args: [(not (< (* 0 ONE) (+ SHRT_MIN (* -1 (f b))))), (or (not (<= SHRT_MIN (f b)))), (or (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))]
  clause args: [derived 900, derived 950]
  backptr: nil
  conclusion: (or (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)) (not (<= SHRT_MIN (f b))))

  derived clause number: 952
  rule: not+
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (not (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))))

  derived clause number: 953
  rule: resolution
  expr args: [(not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))), (or (not (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))))), (or (not (<= SHRT_MIN (f b))))]
  clause args: [derived 951, derived 952]
  backptr: nil
  conclusion: (or (not (<= SHRT_MIN (f b))) (not (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))))

  derived clause number: 954
  rule: resolution
  expr args: [(not (<= SHRT_MIN (f b))), (or (not (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))))), (or (< (f b) SHRT_MIN))]
  clause args: [derived 899, derived 953]
  backptr: nil
  conclusion: (or (< (f b) SHRT_MIN) (not (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))))

  derived clause number: 955
  rule: =+2
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (< (f b) SHRT_MIN) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))) (not (< (f b) SHRT_MIN)) (not (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))))

  derived clause number: 956
  rule: resolution
  expr args: [(not (< (f b) SHRT_MIN)), (or (= (< (f b) SHRT_MIN) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))) (not (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))))), (or (not (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))))]
  clause args: [derived 954, derived 955]
  backptr: nil
  conclusion: (or (not (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))) (= (< (f b) SHRT_MIN) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))) (not (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))))

  derived clause number: 957
  rule: factoring
  expr args: []
  clause args: [derived 898]
  backptr: nil
  conclusion: (or (= (< (f b) SHRT_MIN) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))))

  derived clause number: 958
  rule: factoring
  expr args: []
  clause args: [derived 956]
  backptr: nil
  conclusion: (or (not (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))) (= (< (f b) SHRT_MIN) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))))

  derived clause number: 959
  rule: resolution
  expr args: [(not (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))), (or (= (< (f b) SHRT_MIN) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))))), (or (= (< (f b) SHRT_MIN) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))))]
  clause args: [derived 957, derived 958]
  backptr: nil
  conclusion: (or (= (< (f b) SHRT_MIN) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))) (= (< (f b) SHRT_MIN) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))))

  derived clause number: 960
  rule: nary_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b))) (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) (not (= (< (f b) SHRT_MIN) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))))) (not (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))))

  derived clause number: 961
  rule: factoring
  expr args: []
  clause args: [derived 959]
  backptr: nil
  conclusion: (or (= (< (f b) SHRT_MIN) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE)))))

  derived clause number: 962
  rule: resolution
  expr args: [(not (= (< (f b) SHRT_MIN) (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))))), (or (= (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b))) (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) (not (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))), (or )]
  clause args: [derived 961, derived 960]
  backptr: nil
  conclusion: (or (= (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b))) (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) (not (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))))

  derived clause number: 963
  rule: factoring
  expr args: []
  clause args: [derived 833]
  backptr: nil
  conclusion: (or (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))

  derived clause number: 964
  rule: resolution
  expr args: [(not (= (< SHRT_MAX (f b)) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))), (or (= (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b))) (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))), (or )]
  clause args: [derived 963, derived 962]
  backptr: nil
  conclusion: (or (= (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b))) (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))))

  derived clause number: 965
  rule: not_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))) (not (= (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b))) (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))))

  derived clause number: 966
  rule: resolution
  expr args: [(not (= (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b))) (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))), (or (= (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))))), (or )]
  clause args: [derived 964, derived 965]
  backptr: nil
  conclusion: (or (= (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))))

  derived clause number: 967
  rule: nary_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (or (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) err) (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err)) (not (= (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))))) (not (= err err)))

  derived clause number: 968
  rule: resolution
  expr args: [(not (= (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))))), (or (= (or (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) err) (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err)) (not (= err err))), (or )]
  clause args: [derived 966, derived 967]
  backptr: nil
  conclusion: (or (= (or (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) err) (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err)) (not (= err err)))

  derived clause number: 969
  rule: resolution
  expr args: [(not (= err err)), (or (= (or (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) err) (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err))), (or )]
  clause args: [derived 735, derived 968]
  backptr: nil
  conclusion: (or (= (or (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) err) (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err)))

  derived clause number: 970
  rule: =-2
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (not (= (or (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) err) (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err))) (not (or (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) err)) (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err))

  derived clause number: 971
  rule: resolution
  expr args: [(not (= (or (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) err) (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err))), (or (not (or (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) err)) (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err)), (or )]
  clause args: [derived 969, derived 970]
  backptr: nil
  conclusion: (or (not (or (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) err)) (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err))

  derived clause number: 972
  rule: resolution
  expr args: [(not (or (not (or (< (f b) SHRT_MIN) (< SHRT_MAX (f b)))) err)), (or (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err)), (or )]
  clause args: [derived 4, derived 971]
  backptr: nil
  conclusion: (or (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err))

  derived clause number: 973
  rule: or-
  expr args: [(not (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err))]
  clause args: []
  backptr: nil
  conclusion: (or (not (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err)) (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err)

  derived clause number: 974
  rule: not+
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (not (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))) (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))))

  derived clause number: 975
  rule: resolution
  expr args: [(not (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))), (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))), (or (not (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err)) err)]
  clause args: [derived 973, derived 974]
  backptr: nil
  conclusion: (or (not (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err)) err (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))))

  derived clause number: 976
  rule: resolution
  expr args: [(not (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))) err)), (or err (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE)))))), (or )]
  clause args: [derived 972, derived 975]
  backptr: nil
  conclusion: (or err (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))))

  derived clause number: 977
  rule: resolution
  expr args: [(not err), (or ), (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))))]
  clause args: [derived 976, derived 5]
  backptr: nil
  conclusion: (or (not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))))

  derived clause number: 978
  rule: resolution
  expr args: [(not (or (not (<= (+ SHRT_MIN (* -1 (f b))) (* 0 ONE))) (not (<= (+ (f b) (* -1 SHRT_MAX)) (* 0 ONE))))), (or ), (or (not (<= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (* 0 ONE))))]
  clause args: [derived 734, derived 977]
  backptr: nil
  conclusion: (or (not (<= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (* 0 ONE))))

  derived clause number: 979
  rule: resolution
  expr args: [(not (<= (+ SHRT_MAX (* -1 (f b)) (* 1 ONE)) (* 0 ONE))), (or ), (or (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE)) (not (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))))]
  clause args: [derived 653, derived 978]
  backptr: nil
  conclusion: (or (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE)) (not (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))))

  derived clause number: 980
  rule: symm
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (f a)) (+ (* 1 (f a)))) (not (= (+ (* 1 (f a))) (* 1 (f a)))))

  derived clause number: 981
  rule: resolution
  expr args: [(not (= (+ (* 1 (f a))) (* 1 (f a)))), (or (= (* 1 (f a)) (+ (* 1 (f a))))), (or )]
  clause args: [derived 355, derived 980]
  backptr: nil
  conclusion: (or (= (* 1 (f a)) (+ (* 1 (f a)))))

  derived clause number: 982
  rule: mul_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (+ (* 1 SHRT_MIN) (* -1 (f a))))) (not (= (+ SHRT_MIN (* -1 (f a))) (+ (* 1 SHRT_MIN) (* -1 (f a))))))

  derived clause number: 983
  rule: resolution
  expr args: [(not (= (+ SHRT_MIN (* -1 (f a))) (+ (* 1 SHRT_MIN) (* -1 (f a))))), (or (= (* 1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (+ (* 1 SHRT_MIN) (* -1 (f a)))))), (or )]
  clause args: [derived 527, derived 982]
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (+ (* 1 SHRT_MIN) (* -1 (f a))))))

  derived clause number: 984
  rule: multiply
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (* 1 (+ (* 1 SHRT_MIN) (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))

  derived clause number: 985
  rule: or_single
  expr args: []
  clause args: [derived 984]
  backptr: nil
  conclusion: (or (= (* 1 (+ (* 1 SHRT_MIN) (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a)))))

  derived clause number: 986
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MIN (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a)))) (not (= (* 1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (+ (* 1 SHRT_MIN) (* -1 (f a)))))) (not (= (* 1 (+ (* 1 SHRT_MIN) (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))))

  derived clause number: 987
  rule: resolution
  expr args: [(not (= (* 1 (+ SHRT_MIN (* -1 (f a)))) (* 1 (+ (* 1 SHRT_MIN) (* -1 (f a)))))), (or (= (* 1 (+ SHRT_MIN (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a)))) (not (= (* 1 (+ (* 1 SHRT_MIN) (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a)))))), (or )]
  clause args: [derived 983, derived 986]
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MIN (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a)))) (not (= (* 1 (+ (* 1 SHRT_MIN) (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))))

  derived clause number: 988
  rule: resolution
  expr args: [(not (= (* 1 (+ (* 1 SHRT_MIN) (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))), (or (= (* 1 (+ SHRT_MIN (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))), (or )]
  clause args: [derived 985, derived 987]
  backptr: nil
  conclusion: (or (= (* 1 (+ SHRT_MIN (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a)))))

  derived clause number: 989
  rule: sum_cong
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE)))) (not (= (* 1 (f a)) (+ (* 1 (f a))))) (not (= (* -1 SHRT_MIN) (+ (* -1 SHRT_MIN)))) (not (= (* 1 (+ SHRT_MIN (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 990
  rule: resolution
  expr args: [(not (= (* 1 (f a)) (+ (* 1 (f a))))), (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE)))) (not (= (* -1 SHRT_MIN) (+ (* -1 SHRT_MIN)))) (not (= (* 1 (+ SHRT_MIN (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 981, derived 989]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE)))) (not (= (* -1 SHRT_MIN) (+ (* -1 SHRT_MIN)))) (not (= (* 1 (+ SHRT_MIN (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 991
  rule: resolution
  expr args: [(not (= (* -1 SHRT_MIN) (+ (* -1 SHRT_MIN)))), (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE)))) (not (= (* 1 (+ SHRT_MIN (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 124, derived 990]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE)))) (not (= (* 1 (+ SHRT_MIN (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 992
  rule: resolution
  expr args: [(not (= (* 1 (+ SHRT_MIN (* -1 (f a)))) (+ (* 1 SHRT_MIN) (* -1 (f a))))), (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 988, derived 991]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE)))) (not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))))

  derived clause number: 993
  rule: resolution
  expr args: [(not (= (* -1 (* 0 ONE)) (+ (* 0 ONE)))), (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))))), (or )]
  clause args: [derived 138, derived 992]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE)))))

  derived clause number: 994
  rule: flatten
  expr args: [(+ (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))), (+ (+ (* 1 (f a))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))))

  derived clause number: 995
  rule: or_single
  expr args: []
  clause args: [derived 994]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE)))))

  derived clause number: 996
  rule: flatten
  expr args: [(+ (* 1 (f a)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))), (+ (+ (* -1 SHRT_MIN)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f a)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))))

  derived clause number: 997
  rule: or_single
  expr args: []
  clause args: [derived 996]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE)))))

  derived clause number: 998
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE)))) (not (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))))) (not (= (+ (* 1 (f a)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))))))

  derived clause number: 999
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE)))) (not (= (+ (* 1 (f a)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 995, derived 998]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE)))) (not (= (+ (* 1 (f a)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))))))

  derived clause number: 1000
  rule: resolution
  expr args: [(not (= (+ (* 1 (f a)) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))))), (or )]
  clause args: [derived 997, derived 999]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE)))))

  derived clause number: 1001
  rule: flatten
  expr args: [(+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 0 ONE))), (+ (+ (* 1 SHRT_MIN) (* -1 (f a))))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE))))

  derived clause number: 1002
  rule: or_single
  expr args: []
  clause args: [derived 1001]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE)))))

  derived clause number: 1003
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE)))) (not (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))))) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE))))))

  derived clause number: 1004
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE)))) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE)))))), (or )]
  clause args: [derived 1000, derived 1003]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE)))) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE))))))

  derived clause number: 1005
  rule: resolution
  expr args: [(not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE))))), (or )]
  clause args: [derived 1002, derived 1004]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE)))))

  derived clause number: 1006
  rule: flatten
  expr args: [(+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a))), (+ (+ (* 0 ONE)))]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)))

  derived clause number: 1007
  rule: or_single
  expr args: []
  clause args: [derived 1006]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE))))

  derived clause number: 1008
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE))) (not (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE))))) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)))))

  derived clause number: 1009
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE))))), (or (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE))) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE))))), (or )]
  clause args: [derived 1005, derived 1008]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE))) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)))))

  derived clause number: 1010
  rule: resolution
  expr args: [(not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)))), (or (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)))), (or )]
  clause args: [derived 1007, derived 1009]
  backptr: nil
  conclusion: (or (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE))))

  derived clause number: 1011
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE))) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))))) (not (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)))))

  derived clause number: 1012
  rule: resolution
  expr args: [(not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))))), (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE))) (not (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE))))), (or )]
  clause args: [derived 993, derived 1011]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE))) (not (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)))))

  derived clause number: 1013
  rule: resolution
  expr args: [(not (= (+ (+ (* 1 (f a))) (+ (* -1 SHRT_MIN)) (+ (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)))), (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)))), (or )]
  clause args: [derived 1010, derived 1012]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE))))

  derived clause number: 1014
  rule: consolidate
  expr args: [(+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a))), (+ (* 0 ONE)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a))))

  derived clause number: 1015
  rule: or_single
  expr args: []
  clause args: [derived 1014]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)))))

  derived clause number: 1016
  rule: consolidate
  expr args: [(+ (* 1 (f a)) (* -1 (f a))), (+ (* -1 SHRT_MIN) (* 1 SHRT_MIN)), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 1 (f a)) (* -1 (f a))))

  derived clause number: 1017
  rule: or_single
  expr args: []
  clause args: [derived 1016]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 1 (f a)) (* -1 (f a)))))

  derived clause number: 1018
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ (* 1 (f a)) (* -1 (f a)))) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a))))) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 1 (f a)) (* -1 (f a))))))

  derived clause number: 1019
  rule: resolution
  expr args: [(not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a))))), (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ (* 1 (f a)) (* -1 (f a)))) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 1 (f a)) (* -1 (f a)))))), (or )]
  clause args: [derived 1015, derived 1018]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ (* 1 (f a)) (* -1 (f a)))) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 1 (f a)) (* -1 (f a))))))

  derived clause number: 1020
  rule: resolution
  expr args: [(not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a))) (+ (* 1 (f a)) (* -1 (f a))))), (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ (* 1 (f a)) (* -1 (f a))))), (or )]
  clause args: [derived 1017, derived 1019]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ (* 1 (f a)) (* -1 (f a)))))

  derived clause number: 1021
  rule: consolidate
  expr args: [(+ ), (+ (* 1 (f a)) (* -1 (f a))), (+ )]
  clause args: []
  backptr: nil
  conclusion: (= (+ (* 1 (f a)) (* -1 (f a))) (+ ))

  derived clause number: 1022
  rule: or_single
  expr args: []
  clause args: [derived 1021]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 (f a))) (+ )))

  derived clause number: 1023
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ )) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ (* 1 (f a)) (* -1 (f a))))) (not (= (+ (* 1 (f a)) (* -1 (f a))) (+ ))))

  derived clause number: 1024
  rule: resolution
  expr args: [(not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ (* 1 (f a)) (* -1 (f a))))), (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ )) (not (= (+ (* 1 (f a)) (* -1 (f a))) (+ )))), (or )]
  clause args: [derived 1020, derived 1023]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ )) (not (= (+ (* 1 (f a)) (* -1 (f a))) (+ ))))

  derived clause number: 1025
  rule: resolution
  expr args: [(not (= (+ (* 1 (f a)) (* -1 (f a))) (+ ))), (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ ))), (or )]
  clause args: [derived 1022, derived 1024]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ )))

  derived clause number: 1026
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)))) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ ))))

  derived clause number: 1027
  rule: resolution
  expr args: [(not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)))), (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ )))), (or )]
  clause args: [derived 1013, derived 1026]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ )) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ ))))

  derived clause number: 1028
  rule: resolution
  expr args: [(not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 SHRT_MIN) (* -1 (f a)) (* 0 ONE)) (+ ))), (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ ))), (or )]
  clause args: [derived 1025, derived 1027]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ )))

  derived clause number: 1029
  rule: trans
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ ))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 1030
  rule: resolution
  expr args: [(not (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ ))), (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE))))), (or )]
  clause args: [derived 1028, derived 1029]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (* 0 ONE))) (not (= (+ ) (+ (* 0 ONE)))))

  derived clause number: 1031
  rule: resolution
  expr args: [(not (= (+ ) (+ (* 0 ONE)))), (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (* 0 ONE)))), (or )]
  clause args: [derived 107, derived 1030]
  backptr: nil
  conclusion: (or (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (* 0 ONE))))

  derived clause number: 1032
  rule: or_single_rev
  expr args: []
  clause args: [derived 1031]
  backptr: nil
  conclusion: (= (+ (* 1 (f a)) (* -1 SHRT_MIN) (* 1 (+ SHRT_MIN (* -1 (f a)))) (* -1 (* 0 ONE))) (+ (* 0 ONE)))

  derived clause number: 1033
  rule: farkas
  expr args: []
  clause args: [derived 1032]
  backptr: nil
  conclusion: (or (not (< (f a) SHRT_MIN)) (not (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE))))

  derived clause number: 1034
  rule: resolution
  expr args: [(not (< (f a) SHRT_MIN)), (or (not (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE)))), (or )]
  clause args: [derived 6, derived 1033]
  backptr: nil
  conclusion: (or (not (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE))))

  derived clause number: 1035
  rule: resolution
  expr args: [(not (<= (+ SHRT_MIN (* -1 (f a))) (* 0 ONE))), (or ), (or (not (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))))]
  clause args: [derived 979, derived 1034]
  backptr: nil
  conclusion: (or (not (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))))

  derived clause number: 1036
  rule: resolution
  expr args: [(not (= (+ SHRT_MIN (* 32768 ONE)) (* 0 ONE))), (or ), (or )]
  clause args: [derived 182, derived 1035]
  backptr: nil
  conclusion: (or )

  derived clause number: 1037
  rule: or_nil
  expr args: []
  clause args: [derived 1036]
  backptr: nil
  conclusion: false

