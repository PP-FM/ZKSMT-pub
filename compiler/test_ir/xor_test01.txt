vars: cvc.a cvc.b
premises:
  a0: (xor (xor (xor cvc.a cvc.b) cvc.b) cvc.b)
  a1: (= cvc.a cvc.b)
steps:
  derived clause number: 0
  rule: xor_eq_eq
  expr args: [(= (xor cvc.b cvc.b) false)]
  clause args: []
  backptr: nil
  conclusion: (= (xor cvc.b cvc.b) false)

  derived clause number: 1
  rule: refl
  expr args: [cvc.b]
  clause args: []
  backptr: nil
  conclusion: (= cvc.b cvc.b)

  derived clause number: 2
  rule: refl
  expr args: [cvc.b]
  clause args: []
  backptr: nil
  conclusion: (= cvc.b cvc.b)

  derived clause number: 3
  rule: xor_est
  expr args: []
  clause args: [premise a1, derived 2]
  backptr: nil
  conclusion: (= (xor cvc.a cvc.b) (xor cvc.b cvc.b))

  derived clause number: 4
  rule: xor_est
  expr args: []
  clause args: [derived 3, derived 2]
  backptr: nil
  conclusion: (= (xor (xor cvc.a cvc.b) cvc.b) (xor (xor cvc.b cvc.b) cvc.b))

  derived clause number: 5
  rule: xor_est
  expr args: []
  clause args: [derived 4, derived 2]
  backptr: nil
  conclusion: (= (xor (xor (xor cvc.a cvc.b) cvc.b) cvc.b) (xor (xor (xor cvc.b cvc.b) cvc.b) cvc.b))

  derived clause number: 6
  rule: xor_est
  expr args: []
  clause args: [derived 0, derived 1]
  backptr: nil
  conclusion: (= (xor (xor cvc.b cvc.b) cvc.b) (xor false cvc.b))

  derived clause number: 7
  rule: xor_eq_false1
  expr args: [(= (xor false cvc.b) cvc.b)]
  clause args: []
  backptr: nil
  conclusion: (= (xor false cvc.b) cvc.b)

  derived clause number: 8
  rule: trans
  expr args: []
  clause args: [derived 6, derived 7]
  backptr: nil
  conclusion: (= (xor (xor cvc.b cvc.b) cvc.b) cvc.b)

  derived clause number: 9
  rule: xor_est
  expr args: []
  clause args: [derived 8, derived 1]
  backptr: nil
  conclusion: (= (xor (xor (xor cvc.b cvc.b) cvc.b) cvc.b) (xor cvc.b cvc.b))

  derived clause number: 10
  rule: trans
  expr args: []
  clause args: [derived 9, derived 0]
  backptr: nil
  conclusion: (= (xor (xor (xor cvc.b cvc.b) cvc.b) cvc.b) false)

  derived clause number: 11
  rule: trans
  expr args: []
  clause args: [derived 5, derived 10]
  backptr: nil
  conclusion: (= (xor (xor (xor cvc.a cvc.b) cvc.b) cvc.b) false)

  derived clause number: 12
  rule: eq_resolve
  expr args: []
  clause args: [premise a0, derived 11]
  backptr: nil
  conclusion: false

