vars: cvc.a1 cvc.a5 cvc.a9 cvc.a13 cvc.a17 cvc.a2 cvc.a6 cvc.a20 cvc.a7 cvc.a16 cvc.a3 cvc.a12 cvc.a8 cvc.a4 cvc.a19 cvc.a15 cvc.a11 cvc.a18 cvc.a14 cvc.a10
premises:
  a0: (and (or cvc.a1 (or cvc.a2 (or cvc.a3 cvc.a4))) (and (or cvc.a5 (or cvc.a6 (or cvc.a7 cvc.a8))) (and (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
steps:
  derived clause number: 0
  rule: refl
  expr args: [(and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))]
  clause args: []
  backptr: nil
  conclusion: (= (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 1
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 2
  rule: trans
  expr args: []
  clause args: [derived 1, derived 0]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 3
  rule: and_cons_equiv
  expr args: [(or (not cvc.a12) (not cvc.a16))]
  clause args: [derived 2]
  backptr: nil
  conclusion: (= (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))) (and (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 4
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))

  derived clause number: 5
  rule: trans
  expr args: []
  clause args: [derived 4, derived 3]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))) (and (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 6
  rule: and_cons_equiv
  expr args: [(or (not cvc.a8) (not cvc.a20))]
  clause args: [derived 5]
  backptr: nil
  conclusion: (= (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))) (and (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 7
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))

  derived clause number: 8
  rule: trans
  expr args: []
  clause args: [derived 7, derived 6]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))) (and (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 9
  rule: and_cons_equiv
  expr args: [(or (not cvc.a8) (not cvc.a16))]
  clause args: [derived 8]
  backptr: nil
  conclusion: (= (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))) (and (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 10
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))

  derived clause number: 11
  rule: trans
  expr args: []
  clause args: [derived 10, derived 9]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))) (and (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 12
  rule: and_cons_equiv
  expr args: [(or (not cvc.a8) (not cvc.a12))]
  clause args: [derived 11]
  backptr: nil
  conclusion: (= (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))) (and (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 13
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))

  derived clause number: 14
  rule: trans
  expr args: []
  clause args: [derived 13, derived 12]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))) (and (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 15
  rule: and_cons_equiv
  expr args: [(or (not cvc.a4) (not cvc.a20))]
  clause args: [derived 14]
  backptr: nil
  conclusion: (= (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))) (and (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 16
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))

  derived clause number: 17
  rule: trans
  expr args: []
  clause args: [derived 16, derived 15]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))) (and (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 18
  rule: and_cons_equiv
  expr args: [(or (not cvc.a4) (not cvc.a16))]
  clause args: [derived 17]
  backptr: nil
  conclusion: (= (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))) (and (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 19
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))

  derived clause number: 20
  rule: trans
  expr args: []
  clause args: [derived 19, derived 18]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))) (and (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 21
  rule: and_cons_equiv
  expr args: [(or (not cvc.a4) (not cvc.a12))]
  clause args: [derived 20]
  backptr: nil
  conclusion: (= (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))) (and (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 22
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))

  derived clause number: 23
  rule: trans
  expr args: []
  clause args: [derived 22, derived 21]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))) (and (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 24
  rule: and_cons_equiv
  expr args: [(or (not cvc.a4) (not cvc.a8))]
  clause args: [derived 23]
  backptr: nil
  conclusion: (= (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))) (and (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 25
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))

  derived clause number: 26
  rule: trans
  expr args: []
  clause args: [derived 25, derived 24]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))) (and (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 27
  rule: and_cons_equiv
  expr args: [(or (not cvc.a15) (not cvc.a19))]
  clause args: [derived 26]
  backptr: nil
  conclusion: (= (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))) (and (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 28
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))

  derived clause number: 29
  rule: trans
  expr args: []
  clause args: [derived 28, derived 27]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))) (and (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 30
  rule: and_cons_equiv
  expr args: [(or (not cvc.a11) (not cvc.a19))]
  clause args: [derived 29]
  backptr: nil
  conclusion: (= (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))) (and (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 31
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))

  derived clause number: 32
  rule: trans
  expr args: []
  clause args: [derived 31, derived 30]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))) (and (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 33
  rule: and_cons_equiv
  expr args: [(or (not cvc.a11) (not cvc.a15))]
  clause args: [derived 32]
  backptr: nil
  conclusion: (= (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))) (and (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 34
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))

  derived clause number: 35
  rule: trans
  expr args: []
  clause args: [derived 34, derived 33]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))) (and (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 36
  rule: and_cons_equiv
  expr args: [(or (not cvc.a7) (not cvc.a19))]
  clause args: [derived 35]
  backptr: nil
  conclusion: (= (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))) (and (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 37
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))

  derived clause number: 38
  rule: trans
  expr args: []
  clause args: [derived 37, derived 36]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))) (and (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 39
  rule: and_cons_equiv
  expr args: [(or (not cvc.a7) (not cvc.a15))]
  clause args: [derived 38]
  backptr: nil
  conclusion: (= (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))) (and (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 40
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))

  derived clause number: 41
  rule: trans
  expr args: []
  clause args: [derived 40, derived 39]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))) (and (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 42
  rule: and_cons_equiv
  expr args: [(or (not cvc.a7) (not cvc.a11))]
  clause args: [derived 41]
  backptr: nil
  conclusion: (= (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))) (and (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 43
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))

  derived clause number: 44
  rule: trans
  expr args: []
  clause args: [derived 43, derived 42]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))) (and (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 45
  rule: and_cons_equiv
  expr args: [(or (not cvc.a3) (not cvc.a19))]
  clause args: [derived 44]
  backptr: nil
  conclusion: (= (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))) (and (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 46
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))

  derived clause number: 47
  rule: trans
  expr args: []
  clause args: [derived 46, derived 45]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))) (and (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 48
  rule: and_cons_equiv
  expr args: [(or (not cvc.a3) (not cvc.a15))]
  clause args: [derived 47]
  backptr: nil
  conclusion: (= (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))) (and (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 49
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))

  derived clause number: 50
  rule: trans
  expr args: []
  clause args: [derived 49, derived 48]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))) (and (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 51
  rule: and_cons_equiv
  expr args: [(or (not cvc.a3) (not cvc.a11))]
  clause args: [derived 50]
  backptr: nil
  conclusion: (= (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))) (and (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 52
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))

  derived clause number: 53
  rule: trans
  expr args: []
  clause args: [derived 52, derived 51]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))) (and (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 54
  rule: and_cons_equiv
  expr args: [(or (not cvc.a3) (not cvc.a7))]
  clause args: [derived 53]
  backptr: nil
  conclusion: (= (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))) (and (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 55
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))

  derived clause number: 56
  rule: trans
  expr args: []
  clause args: [derived 55, derived 54]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))) (and (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 57
  rule: and_cons_equiv
  expr args: [(or (not cvc.a14) (not cvc.a18))]
  clause args: [derived 56]
  backptr: nil
  conclusion: (= (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))) (and (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 58
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))

  derived clause number: 59
  rule: trans
  expr args: []
  clause args: [derived 58, derived 57]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))) (and (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 60
  rule: and_cons_equiv
  expr args: [(or (not cvc.a10) (not cvc.a18))]
  clause args: [derived 59]
  backptr: nil
  conclusion: (= (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))) (and (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 61
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))

  derived clause number: 62
  rule: trans
  expr args: []
  clause args: [derived 61, derived 60]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))) (and (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 63
  rule: and_cons_equiv
  expr args: [(or (not cvc.a10) (not cvc.a14))]
  clause args: [derived 62]
  backptr: nil
  conclusion: (= (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))) (and (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 64
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))

  derived clause number: 65
  rule: trans
  expr args: []
  clause args: [derived 64, derived 63]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))) (and (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 66
  rule: and_cons_equiv
  expr args: [(or (not cvc.a6) (not cvc.a18))]
  clause args: [derived 65]
  backptr: nil
  conclusion: (= (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))) (and (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 67
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))

  derived clause number: 68
  rule: trans
  expr args: []
  clause args: [derived 67, derived 66]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))) (and (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 69
  rule: and_cons_equiv
  expr args: [(or (not cvc.a6) (not cvc.a14))]
  clause args: [derived 68]
  backptr: nil
  conclusion: (= (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))) (and (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 70
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))

  derived clause number: 71
  rule: trans
  expr args: []
  clause args: [derived 70, derived 69]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))) (and (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 72
  rule: and_cons_equiv
  expr args: [(or (not cvc.a6) (not cvc.a10))]
  clause args: [derived 71]
  backptr: nil
  conclusion: (= (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))) (and (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 73
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))

  derived clause number: 74
  rule: trans
  expr args: []
  clause args: [derived 73, derived 72]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))) (and (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 75
  rule: and_cons_equiv
  expr args: [(or (not cvc.a2) (not cvc.a18))]
  clause args: [derived 74]
  backptr: nil
  conclusion: (= (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 76
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))

  derived clause number: 77
  rule: trans
  expr args: []
  clause args: [derived 76, derived 75]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 78
  rule: and_cons_equiv
  expr args: [(or (not cvc.a2) (not cvc.a14))]
  clause args: [derived 77]
  backptr: nil
  conclusion: (= (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 79
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))

  derived clause number: 80
  rule: trans
  expr args: []
  clause args: [derived 79, derived 78]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 81
  rule: and_cons_equiv
  expr args: [(or (not cvc.a2) (not cvc.a10))]
  clause args: [derived 80]
  backptr: nil
  conclusion: (= (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 82
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))

  derived clause number: 83
  rule: trans
  expr args: []
  clause args: [derived 82, derived 81]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 84
  rule: and_cons_equiv
  expr args: [(or (not cvc.a2) (not cvc.a6))]
  clause args: [derived 83]
  backptr: nil
  conclusion: (= (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 85
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))

  derived clause number: 86
  rule: trans
  expr args: []
  clause args: [derived 85, derived 84]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 87
  rule: and_cons_equiv
  expr args: [(or (not cvc.a13) (not cvc.a17))]
  clause args: [derived 86]
  backptr: nil
  conclusion: (= (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))) (and (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 88
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))

  derived clause number: 89
  rule: trans
  expr args: []
  clause args: [derived 88, derived 87]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))) (and (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 90
  rule: and_cons_equiv
  expr args: [(or (not cvc.a9) (not cvc.a17))]
  clause args: [derived 89]
  backptr: nil
  conclusion: (= (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))) (and (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 91
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))

  derived clause number: 92
  rule: trans
  expr args: []
  clause args: [derived 91, derived 90]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))) (and (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 93
  rule: and_cons_equiv
  expr args: [(or (not cvc.a9) (not cvc.a13))]
  clause args: [derived 92]
  backptr: nil
  conclusion: (= (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))) (and (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 94
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))

  derived clause number: 95
  rule: trans
  expr args: []
  clause args: [derived 94, derived 93]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))) (and (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 96
  rule: and_cons_equiv
  expr args: [(or (not cvc.a5) (not cvc.a17))]
  clause args: [derived 95]
  backptr: nil
  conclusion: (= (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 97
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))

  derived clause number: 98
  rule: trans
  expr args: []
  clause args: [derived 97, derived 96]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 99
  rule: and_cons_equiv
  expr args: [(or (not cvc.a5) (not cvc.a13))]
  clause args: [derived 98]
  backptr: nil
  conclusion: (= (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 100
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))

  derived clause number: 101
  rule: trans
  expr args: []
  clause args: [derived 100, derived 99]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 102
  rule: and_cons_equiv
  expr args: [(or (not cvc.a5) (not cvc.a9))]
  clause args: [derived 101]
  backptr: nil
  conclusion: (= (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 103
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))

  derived clause number: 104
  rule: trans
  expr args: []
  clause args: [derived 103, derived 102]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 105
  rule: and_cons_equiv
  expr args: [(or (not cvc.a1) (not cvc.a17))]
  clause args: [derived 104]
  backptr: nil
  conclusion: (= (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 106
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))

  derived clause number: 107
  rule: trans
  expr args: []
  clause args: [derived 106, derived 105]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 108
  rule: and_cons_equiv
  expr args: [(or (not cvc.a1) (not cvc.a13))]
  clause args: [derived 107]
  backptr: nil
  conclusion: (= (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 109
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))

  derived clause number: 110
  rule: trans
  expr args: []
  clause args: [derived 109, derived 108]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 111
  rule: and_cons_equiv
  expr args: [(or (not cvc.a1) (not cvc.a9))]
  clause args: [derived 110]
  backptr: nil
  conclusion: (= (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 112
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))

  derived clause number: 113
  rule: trans
  expr args: []
  clause args: [derived 112, derived 111]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 114
  rule: and_cons_equiv
  expr args: [(or (not cvc.a1) (not cvc.a5))]
  clause args: [derived 113]
  backptr: nil
  conclusion: (= (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 115
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 116
  rule: trans
  expr args: []
  clause args: [derived 115, derived 114]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 117
  rule: and_cons_equiv
  expr args: [(or (not cvc.a19) (not cvc.a20))]
  clause args: [derived 116]
  backptr: nil
  conclusion: (= (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 118
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 119
  rule: trans
  expr args: []
  clause args: [derived 118, derived 117]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 120
  rule: and_cons_equiv
  expr args: [(or (not cvc.a18) (not cvc.a20))]
  clause args: [derived 119]
  backptr: nil
  conclusion: (= (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 121
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 122
  rule: trans
  expr args: []
  clause args: [derived 121, derived 120]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 123
  rule: and_cons_equiv
  expr args: [(or (not cvc.a18) (not cvc.a19))]
  clause args: [derived 122]
  backptr: nil
  conclusion: (= (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 124
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 125
  rule: trans
  expr args: []
  clause args: [derived 124, derived 123]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 126
  rule: and_cons_equiv
  expr args: [(or (not cvc.a17) (not cvc.a20))]
  clause args: [derived 125]
  backptr: nil
  conclusion: (= (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 127
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 128
  rule: trans
  expr args: []
  clause args: [derived 127, derived 126]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 129
  rule: and_cons_equiv
  expr args: [(or (not cvc.a17) (not cvc.a19))]
  clause args: [derived 128]
  backptr: nil
  conclusion: (= (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 130
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 131
  rule: trans
  expr args: []
  clause args: [derived 130, derived 129]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 132
  rule: and_cons_equiv
  expr args: [(or (not cvc.a17) (not cvc.a18))]
  clause args: [derived 131]
  backptr: nil
  conclusion: (= (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 133
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 134
  rule: trans
  expr args: []
  clause args: [derived 133, derived 132]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 135
  rule: and_cons_equiv
  expr args: [(or (not cvc.a15) (not cvc.a16))]
  clause args: [derived 134]
  backptr: nil
  conclusion: (= (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 136
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 137
  rule: trans
  expr args: []
  clause args: [derived 136, derived 135]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 138
  rule: and_cons_equiv
  expr args: [(or (not cvc.a14) (not cvc.a16))]
  clause args: [derived 137]
  backptr: nil
  conclusion: (= (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 139
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 140
  rule: trans
  expr args: []
  clause args: [derived 139, derived 138]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 141
  rule: and_cons_equiv
  expr args: [(or (not cvc.a14) (not cvc.a15))]
  clause args: [derived 140]
  backptr: nil
  conclusion: (= (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 142
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 143
  rule: trans
  expr args: []
  clause args: [derived 142, derived 141]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 144
  rule: and_cons_equiv
  expr args: [(or (not cvc.a13) (not cvc.a16))]
  clause args: [derived 143]
  backptr: nil
  conclusion: (= (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 145
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 146
  rule: trans
  expr args: []
  clause args: [derived 145, derived 144]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 147
  rule: and_cons_equiv
  expr args: [(or (not cvc.a13) (not cvc.a15))]
  clause args: [derived 146]
  backptr: nil
  conclusion: (= (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 148
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 149
  rule: trans
  expr args: []
  clause args: [derived 148, derived 147]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 150
  rule: and_cons_equiv
  expr args: [(or (not cvc.a13) (not cvc.a14))]
  clause args: [derived 149]
  backptr: nil
  conclusion: (= (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 151
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 152
  rule: trans
  expr args: []
  clause args: [derived 151, derived 150]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 153
  rule: and_cons_equiv
  expr args: [(or (not cvc.a11) (not cvc.a12))]
  clause args: [derived 152]
  backptr: nil
  conclusion: (= (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 154
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 155
  rule: trans
  expr args: []
  clause args: [derived 154, derived 153]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 156
  rule: and_cons_equiv
  expr args: [(or (not cvc.a10) (not cvc.a12))]
  clause args: [derived 155]
  backptr: nil
  conclusion: (= (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 157
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 158
  rule: trans
  expr args: []
  clause args: [derived 157, derived 156]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 159
  rule: and_cons_equiv
  expr args: [(or (not cvc.a10) (not cvc.a11))]
  clause args: [derived 158]
  backptr: nil
  conclusion: (= (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 160
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 161
  rule: trans
  expr args: []
  clause args: [derived 160, derived 159]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 162
  rule: and_cons_equiv
  expr args: [(or (not cvc.a9) (not cvc.a12))]
  clause args: [derived 161]
  backptr: nil
  conclusion: (= (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 163
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 164
  rule: trans
  expr args: []
  clause args: [derived 163, derived 162]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 165
  rule: and_cons_equiv
  expr args: [(or (not cvc.a9) (not cvc.a11))]
  clause args: [derived 164]
  backptr: nil
  conclusion: (= (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 166
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 167
  rule: trans
  expr args: []
  clause args: [derived 166, derived 165]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 168
  rule: and_cons_equiv
  expr args: [(or (not cvc.a9) (not cvc.a10))]
  clause args: [derived 167]
  backptr: nil
  conclusion: (= (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 169
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 170
  rule: trans
  expr args: []
  clause args: [derived 169, derived 168]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 171
  rule: and_cons_equiv
  expr args: [(or (not cvc.a7) (not cvc.a8))]
  clause args: [derived 170]
  backptr: nil
  conclusion: (= (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 172
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 173
  rule: trans
  expr args: []
  clause args: [derived 172, derived 171]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 174
  rule: and_cons_equiv
  expr args: [(or (not cvc.a6) (not cvc.a8))]
  clause args: [derived 173]
  backptr: nil
  conclusion: (= (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 175
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 176
  rule: trans
  expr args: []
  clause args: [derived 175, derived 174]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 177
  rule: and_cons_equiv
  expr args: [(or (not cvc.a6) (not cvc.a7))]
  clause args: [derived 176]
  backptr: nil
  conclusion: (= (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 178
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 179
  rule: trans
  expr args: []
  clause args: [derived 178, derived 177]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 180
  rule: and_cons_equiv
  expr args: [(or (not cvc.a5) (not cvc.a8))]
  clause args: [derived 179]
  backptr: nil
  conclusion: (= (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 181
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 182
  rule: trans
  expr args: []
  clause args: [derived 181, derived 180]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 183
  rule: and_cons_equiv
  expr args: [(or (not cvc.a5) (not cvc.a7))]
  clause args: [derived 182]
  backptr: nil
  conclusion: (= (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 184
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 185
  rule: trans
  expr args: []
  clause args: [derived 184, derived 183]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 186
  rule: and_cons_equiv
  expr args: [(or (not cvc.a5) (not cvc.a6))]
  clause args: [derived 185]
  backptr: nil
  conclusion: (= (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 187
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 188
  rule: trans
  expr args: []
  clause args: [derived 187, derived 186]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 189
  rule: and_cons_equiv
  expr args: [(or (not cvc.a3) (not cvc.a4))]
  clause args: [derived 188]
  backptr: nil
  conclusion: (= (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 190
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 191
  rule: trans
  expr args: []
  clause args: [derived 190, derived 189]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 192
  rule: and_cons_equiv
  expr args: [(or (not cvc.a2) (not cvc.a4))]
  clause args: [derived 191]
  backptr: nil
  conclusion: (= (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 193
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 194
  rule: trans
  expr args: []
  clause args: [derived 193, derived 192]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 195
  rule: and_cons_equiv
  expr args: [(or (not cvc.a2) (not cvc.a3))]
  clause args: [derived 194]
  backptr: nil
  conclusion: (= (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 196
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 197
  rule: trans
  expr args: []
  clause args: [derived 196, derived 195]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 198
  rule: and_cons_equiv
  expr args: [(or (not cvc.a1) (not cvc.a4))]
  clause args: [derived 197]
  backptr: nil
  conclusion: (= (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 199
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 200
  rule: trans
  expr args: []
  clause args: [derived 199, derived 198]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 201
  rule: and_cons_equiv
  expr args: [(or (not cvc.a1) (not cvc.a3))]
  clause args: [derived 200]
  backptr: nil
  conclusion: (= (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 202
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 203
  rule: trans
  expr args: []
  clause args: [derived 202, derived 201]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 204
  rule: and_cons_equiv
  expr args: [(or (not cvc.a1) (not cvc.a2))]
  clause args: [derived 203]
  backptr: nil
  conclusion: (= (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 205
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 206
  rule: trans
  expr args: []
  clause args: [derived 205, derived 204]
  backptr: nil
  conclusion: (= (and (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 207
  rule: and_cons_equiv
  expr args: [(or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20)))]
  clause args: [derived 206]
  backptr: nil
  conclusion: (= (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 208
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 209
  rule: trans
  expr args: []
  clause args: [derived 208, derived 207]
  backptr: nil
  conclusion: (= (and (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 210
  rule: and_cons_equiv
  expr args: [(or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16)))]
  clause args: [derived 209]
  backptr: nil
  conclusion: (= (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 211
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 212
  rule: trans
  expr args: []
  clause args: [derived 211, derived 210]
  backptr: nil
  conclusion: (= (and (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 213
  rule: and_cons_equiv
  expr args: [(or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12)))]
  clause args: [derived 212]
  backptr: nil
  conclusion: (= (and (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 214
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 215
  rule: trans
  expr args: []
  clause args: [derived 214, derived 213]
  backptr: nil
  conclusion: (= (and (and (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 216
  rule: and_cons_equiv
  expr args: [(or cvc.a5 (or cvc.a6 (or cvc.a7 cvc.a8)))]
  clause args: [derived 215]
  backptr: nil
  conclusion: (= (and (or cvc.a5 (or cvc.a6 (or cvc.a7 cvc.a8))) (and (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or cvc.a5 (or cvc.a6 (or cvc.a7 cvc.a8))) (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 217
  rule: and_flatten
  expr args: []
  clause args: []
  backptr: nil
  conclusion: (= (and (and (or cvc.a5 (or cvc.a6 (or cvc.a7 cvc.a8))) (and (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or cvc.a5 (or cvc.a6 (or cvc.a7 cvc.a8))) (and (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  derived clause number: 218
  rule: trans
  expr args: []
  clause args: [derived 217, derived 216]
  backptr: nil
  conclusion: (= (and (and (or cvc.a5 (or cvc.a6 (or cvc.a7 cvc.a8))) (and (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or cvc.a5 (or cvc.a6 (or cvc.a7 cvc.a8))) (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 219
  rule: and_cons_equiv
  expr args: [(or cvc.a1 (or cvc.a2 (or cvc.a3 cvc.a4)))]
  clause args: [derived 218]
  backptr: nil
  conclusion: (= (and (or cvc.a1 (or cvc.a2 (or cvc.a3 cvc.a4))) (and (or cvc.a5 (or cvc.a6 (or cvc.a7 cvc.a8))) (and (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or cvc.a1 (or cvc.a2 (or cvc.a3 cvc.a4))) (or cvc.a5 (or cvc.a6 (or cvc.a7 cvc.a8))) (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 220
  rule: refl
  expr args: [(or cvc.a3 cvc.a4)]
  clause args: []
  backptr: nil
  conclusion: (= (or cvc.a3 cvc.a4) (or cvc.a3 cvc.a4))

  derived clause number: 221
  rule: or_flatten
  expr args: [(or cvc.a3 cvc.a4)]
  clause args: []
  backptr: nil
  conclusion: (= (or (or cvc.a3 cvc.a4)) (or cvc.a3 cvc.a4))

  derived clause number: 222
  rule: trans
  expr args: []
  clause args: [derived 221, derived 220]
  backptr: nil
  conclusion: (= (or (or cvc.a3 cvc.a4)) (or cvc.a3 cvc.a4))

  derived clause number: 223
  rule: or_cons_equiv
  expr args: [cvc.a2]
  clause args: [derived 222]
  backptr: nil
  conclusion: (= (or cvc.a2 (or cvc.a3 cvc.a4)) (or cvc.a2 cvc.a3 cvc.a4))

  derived clause number: 224
  rule: or_flatten
  expr args: [(or cvc.a2 (or cvc.a3 cvc.a4))]
  clause args: []
  backptr: nil
  conclusion: (= (or (or cvc.a2 (or cvc.a3 cvc.a4))) (or cvc.a2 (or cvc.a3 cvc.a4)))

  derived clause number: 225
  rule: trans
  expr args: []
  clause args: [derived 224, derived 223]
  backptr: nil
  conclusion: (= (or (or cvc.a2 (or cvc.a3 cvc.a4))) (or cvc.a2 cvc.a3 cvc.a4))

  derived clause number: 226
  rule: or_cons_equiv
  expr args: [cvc.a1]
  clause args: [derived 225]
  backptr: nil
  conclusion: (= (or cvc.a1 (or cvc.a2 (or cvc.a3 cvc.a4))) (or cvc.a1 cvc.a2 cvc.a3 cvc.a4))

  derived clause number: 227
  rule: refl
  expr args: [(or cvc.a7 cvc.a8)]
  clause args: []
  backptr: nil
  conclusion: (= (or cvc.a7 cvc.a8) (or cvc.a7 cvc.a8))

  derived clause number: 228
  rule: or_flatten
  expr args: [(or cvc.a7 cvc.a8)]
  clause args: []
  backptr: nil
  conclusion: (= (or (or cvc.a7 cvc.a8)) (or cvc.a7 cvc.a8))

  derived clause number: 229
  rule: trans
  expr args: []
  clause args: [derived 228, derived 227]
  backptr: nil
  conclusion: (= (or (or cvc.a7 cvc.a8)) (or cvc.a7 cvc.a8))

  derived clause number: 230
  rule: or_cons_equiv
  expr args: [cvc.a6]
  clause args: [derived 229]
  backptr: nil
  conclusion: (= (or cvc.a6 (or cvc.a7 cvc.a8)) (or cvc.a6 cvc.a7 cvc.a8))

  derived clause number: 231
  rule: or_flatten
  expr args: [(or cvc.a6 (or cvc.a7 cvc.a8))]
  clause args: []
  backptr: nil
  conclusion: (= (or (or cvc.a6 (or cvc.a7 cvc.a8))) (or cvc.a6 (or cvc.a7 cvc.a8)))

  derived clause number: 232
  rule: trans
  expr args: []
  clause args: [derived 231, derived 230]
  backptr: nil
  conclusion: (= (or (or cvc.a6 (or cvc.a7 cvc.a8))) (or cvc.a6 cvc.a7 cvc.a8))

  derived clause number: 233
  rule: or_cons_equiv
  expr args: [cvc.a5]
  clause args: [derived 232]
  backptr: nil
  conclusion: (= (or cvc.a5 (or cvc.a6 (or cvc.a7 cvc.a8))) (or cvc.a5 cvc.a6 cvc.a7 cvc.a8))

  derived clause number: 234
  rule: refl
  expr args: [(or cvc.a11 cvc.a12)]
  clause args: []
  backptr: nil
  conclusion: (= (or cvc.a11 cvc.a12) (or cvc.a11 cvc.a12))

  derived clause number: 235
  rule: or_flatten
  expr args: [(or cvc.a11 cvc.a12)]
  clause args: []
  backptr: nil
  conclusion: (= (or (or cvc.a11 cvc.a12)) (or cvc.a11 cvc.a12))

  derived clause number: 236
  rule: trans
  expr args: []
  clause args: [derived 235, derived 234]
  backptr: nil
  conclusion: (= (or (or cvc.a11 cvc.a12)) (or cvc.a11 cvc.a12))

  derived clause number: 237
  rule: or_cons_equiv
  expr args: [cvc.a10]
  clause args: [derived 236]
  backptr: nil
  conclusion: (= (or cvc.a10 (or cvc.a11 cvc.a12)) (or cvc.a10 cvc.a11 cvc.a12))

  derived clause number: 238
  rule: or_flatten
  expr args: [(or cvc.a10 (or cvc.a11 cvc.a12))]
  clause args: []
  backptr: nil
  conclusion: (= (or (or cvc.a10 (or cvc.a11 cvc.a12))) (or cvc.a10 (or cvc.a11 cvc.a12)))

  derived clause number: 239
  rule: trans
  expr args: []
  clause args: [derived 238, derived 237]
  backptr: nil
  conclusion: (= (or (or cvc.a10 (or cvc.a11 cvc.a12))) (or cvc.a10 cvc.a11 cvc.a12))

  derived clause number: 240
  rule: or_cons_equiv
  expr args: [cvc.a9]
  clause args: [derived 239]
  backptr: nil
  conclusion: (= (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (or cvc.a9 cvc.a10 cvc.a11 cvc.a12))

  derived clause number: 241
  rule: refl
  expr args: [(or cvc.a15 cvc.a16)]
  clause args: []
  backptr: nil
  conclusion: (= (or cvc.a15 cvc.a16) (or cvc.a15 cvc.a16))

  derived clause number: 242
  rule: or_flatten
  expr args: [(or cvc.a15 cvc.a16)]
  clause args: []
  backptr: nil
  conclusion: (= (or (or cvc.a15 cvc.a16)) (or cvc.a15 cvc.a16))

  derived clause number: 243
  rule: trans
  expr args: []
  clause args: [derived 242, derived 241]
  backptr: nil
  conclusion: (= (or (or cvc.a15 cvc.a16)) (or cvc.a15 cvc.a16))

  derived clause number: 244
  rule: or_cons_equiv
  expr args: [cvc.a14]
  clause args: [derived 243]
  backptr: nil
  conclusion: (= (or cvc.a14 (or cvc.a15 cvc.a16)) (or cvc.a14 cvc.a15 cvc.a16))

  derived clause number: 245
  rule: or_flatten
  expr args: [(or cvc.a14 (or cvc.a15 cvc.a16))]
  clause args: []
  backptr: nil
  conclusion: (= (or (or cvc.a14 (or cvc.a15 cvc.a16))) (or cvc.a14 (or cvc.a15 cvc.a16)))

  derived clause number: 246
  rule: trans
  expr args: []
  clause args: [derived 245, derived 244]
  backptr: nil
  conclusion: (= (or (or cvc.a14 (or cvc.a15 cvc.a16))) (or cvc.a14 cvc.a15 cvc.a16))

  derived clause number: 247
  rule: or_cons_equiv
  expr args: [cvc.a13]
  clause args: [derived 246]
  backptr: nil
  conclusion: (= (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (or cvc.a13 cvc.a14 cvc.a15 cvc.a16))

  derived clause number: 248
  rule: refl
  expr args: [(or cvc.a19 cvc.a20)]
  clause args: []
  backptr: nil
  conclusion: (= (or cvc.a19 cvc.a20) (or cvc.a19 cvc.a20))

  derived clause number: 249
  rule: or_flatten
  expr args: [(or cvc.a19 cvc.a20)]
  clause args: []
  backptr: nil
  conclusion: (= (or (or cvc.a19 cvc.a20)) (or cvc.a19 cvc.a20))

  derived clause number: 250
  rule: trans
  expr args: []
  clause args: [derived 249, derived 248]
  backptr: nil
  conclusion: (= (or (or cvc.a19 cvc.a20)) (or cvc.a19 cvc.a20))

  derived clause number: 251
  rule: or_cons_equiv
  expr args: [cvc.a18]
  clause args: [derived 250]
  backptr: nil
  conclusion: (= (or cvc.a18 (or cvc.a19 cvc.a20)) (or cvc.a18 cvc.a19 cvc.a20))

  derived clause number: 252
  rule: or_flatten
  expr args: [(or cvc.a18 (or cvc.a19 cvc.a20))]
  clause args: []
  backptr: nil
  conclusion: (= (or (or cvc.a18 (or cvc.a19 cvc.a20))) (or cvc.a18 (or cvc.a19 cvc.a20)))

  derived clause number: 253
  rule: trans
  expr args: []
  clause args: [derived 252, derived 251]
  backptr: nil
  conclusion: (= (or (or cvc.a18 (or cvc.a19 cvc.a20))) (or cvc.a18 cvc.a19 cvc.a20))

  derived clause number: 254
  rule: or_cons_equiv
  expr args: [cvc.a17]
  clause args: [derived 253]
  backptr: nil
  conclusion: (= (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (or cvc.a17 cvc.a18 cvc.a19 cvc.a20))

  derived clause number: 255
  rule: refl
  expr args: [(or (not cvc.a1) (not cvc.a2))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a2)))

  derived clause number: 256
  rule: refl
  expr args: [(or (not cvc.a1) (not cvc.a3))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a3)))

  derived clause number: 257
  rule: refl
  expr args: [(or (not cvc.a1) (not cvc.a4))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a1) (not cvc.a4)))

  derived clause number: 258
  rule: refl
  expr args: [(or (not cvc.a2) (not cvc.a3))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a3)))

  derived clause number: 259
  rule: refl
  expr args: [(or (not cvc.a2) (not cvc.a4))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a2) (not cvc.a4)))

  derived clause number: 260
  rule: refl
  expr args: [(or (not cvc.a3) (not cvc.a4))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)))

  derived clause number: 261
  rule: refl
  expr args: [(or (not cvc.a5) (not cvc.a6))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a6)))

  derived clause number: 262
  rule: refl
  expr args: [(or (not cvc.a5) (not cvc.a7))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a7)))

  derived clause number: 263
  rule: refl
  expr args: [(or (not cvc.a5) (not cvc.a8))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a5) (not cvc.a8)))

  derived clause number: 264
  rule: refl
  expr args: [(or (not cvc.a6) (not cvc.a7))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a7)))

  derived clause number: 265
  rule: refl
  expr args: [(or (not cvc.a6) (not cvc.a8))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a6) (not cvc.a8)))

  derived clause number: 266
  rule: refl
  expr args: [(or (not cvc.a7) (not cvc.a8))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)))

  derived clause number: 267
  rule: refl
  expr args: [(or (not cvc.a9) (not cvc.a10))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a10)))

  derived clause number: 268
  rule: refl
  expr args: [(or (not cvc.a9) (not cvc.a11))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a11)))

  derived clause number: 269
  rule: refl
  expr args: [(or (not cvc.a9) (not cvc.a12))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a9) (not cvc.a12)))

  derived clause number: 270
  rule: refl
  expr args: [(or (not cvc.a10) (not cvc.a11))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a11)))

  derived clause number: 271
  rule: refl
  expr args: [(or (not cvc.a10) (not cvc.a12))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a10) (not cvc.a12)))

  derived clause number: 272
  rule: refl
  expr args: [(or (not cvc.a11) (not cvc.a12))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)))

  derived clause number: 273
  rule: refl
  expr args: [(or (not cvc.a13) (not cvc.a14))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a14)))

  derived clause number: 274
  rule: refl
  expr args: [(or (not cvc.a13) (not cvc.a15))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a15)))

  derived clause number: 275
  rule: refl
  expr args: [(or (not cvc.a13) (not cvc.a16))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a13) (not cvc.a16)))

  derived clause number: 276
  rule: refl
  expr args: [(or (not cvc.a14) (not cvc.a15))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a15)))

  derived clause number: 277
  rule: refl
  expr args: [(or (not cvc.a14) (not cvc.a16))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a14) (not cvc.a16)))

  derived clause number: 278
  rule: refl
  expr args: [(or (not cvc.a15) (not cvc.a16))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)))

  derived clause number: 279
  rule: refl
  expr args: [(or (not cvc.a17) (not cvc.a18))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a18)))

  derived clause number: 280
  rule: refl
  expr args: [(or (not cvc.a17) (not cvc.a19))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a19)))

  derived clause number: 281
  rule: refl
  expr args: [(or (not cvc.a17) (not cvc.a20))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a17) (not cvc.a20)))

  derived clause number: 282
  rule: refl
  expr args: [(or (not cvc.a18) (not cvc.a19))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a19)))

  derived clause number: 283
  rule: refl
  expr args: [(or (not cvc.a18) (not cvc.a20))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a18) (not cvc.a20)))

  derived clause number: 284
  rule: refl
  expr args: [(or (not cvc.a19) (not cvc.a20))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)))

  derived clause number: 285
  rule: refl
  expr args: [(or (not cvc.a1) (not cvc.a5))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a5)))

  derived clause number: 286
  rule: refl
  expr args: [(or (not cvc.a1) (not cvc.a9))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a9)))

  derived clause number: 287
  rule: refl
  expr args: [(or (not cvc.a1) (not cvc.a13))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a13)))

  derived clause number: 288
  rule: refl
  expr args: [(or (not cvc.a1) (not cvc.a17))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a1) (not cvc.a17)))

  derived clause number: 289
  rule: refl
  expr args: [(or (not cvc.a5) (not cvc.a9))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a9)))

  derived clause number: 290
  rule: refl
  expr args: [(or (not cvc.a5) (not cvc.a13))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a13)))

  derived clause number: 291
  rule: refl
  expr args: [(or (not cvc.a5) (not cvc.a17))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a5) (not cvc.a17)))

  derived clause number: 292
  rule: refl
  expr args: [(or (not cvc.a9) (not cvc.a13))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a13)))

  derived clause number: 293
  rule: refl
  expr args: [(or (not cvc.a9) (not cvc.a17))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a9) (not cvc.a17)))

  derived clause number: 294
  rule: refl
  expr args: [(or (not cvc.a13) (not cvc.a17))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)))

  derived clause number: 295
  rule: refl
  expr args: [(or (not cvc.a2) (not cvc.a6))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a6)))

  derived clause number: 296
  rule: refl
  expr args: [(or (not cvc.a2) (not cvc.a10))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a10)))

  derived clause number: 297
  rule: refl
  expr args: [(or (not cvc.a2) (not cvc.a14))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a14)))

  derived clause number: 298
  rule: refl
  expr args: [(or (not cvc.a2) (not cvc.a18))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a2) (not cvc.a18)))

  derived clause number: 299
  rule: refl
  expr args: [(or (not cvc.a6) (not cvc.a10))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a10)))

  derived clause number: 300
  rule: refl
  expr args: [(or (not cvc.a6) (not cvc.a14))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a14)))

  derived clause number: 301
  rule: refl
  expr args: [(or (not cvc.a6) (not cvc.a18))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a6) (not cvc.a18)))

  derived clause number: 302
  rule: refl
  expr args: [(or (not cvc.a10) (not cvc.a14))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a14)))

  derived clause number: 303
  rule: refl
  expr args: [(or (not cvc.a10) (not cvc.a18))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a10) (not cvc.a18)))

  derived clause number: 304
  rule: refl
  expr args: [(or (not cvc.a14) (not cvc.a18))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)))

  derived clause number: 305
  rule: refl
  expr args: [(or (not cvc.a3) (not cvc.a7))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a7)))

  derived clause number: 306
  rule: refl
  expr args: [(or (not cvc.a3) (not cvc.a11))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a11)))

  derived clause number: 307
  rule: refl
  expr args: [(or (not cvc.a3) (not cvc.a15))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a15)))

  derived clause number: 308
  rule: refl
  expr args: [(or (not cvc.a3) (not cvc.a19))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a3) (not cvc.a19)))

  derived clause number: 309
  rule: refl
  expr args: [(or (not cvc.a7) (not cvc.a11))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a11)))

  derived clause number: 310
  rule: refl
  expr args: [(or (not cvc.a7) (not cvc.a15))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a15)))

  derived clause number: 311
  rule: refl
  expr args: [(or (not cvc.a7) (not cvc.a19))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a7) (not cvc.a19)))

  derived clause number: 312
  rule: refl
  expr args: [(or (not cvc.a11) (not cvc.a15))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a15)))

  derived clause number: 313
  rule: refl
  expr args: [(or (not cvc.a11) (not cvc.a19))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a11) (not cvc.a19)))

  derived clause number: 314
  rule: refl
  expr args: [(or (not cvc.a15) (not cvc.a19))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)))

  derived clause number: 315
  rule: refl
  expr args: [(or (not cvc.a4) (not cvc.a8))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a8)))

  derived clause number: 316
  rule: refl
  expr args: [(or (not cvc.a4) (not cvc.a12))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a12)))

  derived clause number: 317
  rule: refl
  expr args: [(or (not cvc.a4) (not cvc.a16))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a16)))

  derived clause number: 318
  rule: refl
  expr args: [(or (not cvc.a4) (not cvc.a20))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a4) (not cvc.a20)))

  derived clause number: 319
  rule: refl
  expr args: [(or (not cvc.a8) (not cvc.a12))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a12)))

  derived clause number: 320
  rule: refl
  expr args: [(or (not cvc.a8) (not cvc.a16))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a16)))

  derived clause number: 321
  rule: refl
  expr args: [(or (not cvc.a8) (not cvc.a20))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a8) (not cvc.a20)))

  derived clause number: 322
  rule: refl
  expr args: [(or (not cvc.a12) (not cvc.a16))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a16)))

  derived clause number: 323
  rule: refl
  expr args: [(or (not cvc.a12) (not cvc.a20))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a12) (not cvc.a20)))

  derived clause number: 324
  rule: refl
  expr args: [(or (not cvc.a16) (not cvc.a20))]
  clause args: []
  backptr: nil
  conclusion: (= (or (not cvc.a16) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))

  derived clause number: 325
  rule: refl
  expr args: [true]
  clause args: []
  backptr: nil
  conclusion: (= true true)

  derived clause number: 326
  rule: and_est
  expr args: []
  clause args: [derived 324, derived 325]
  backptr: nil
  conclusion: (= (and (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 327
  rule: and_est
  expr args: []
  clause args: [derived 323, derived 326]
  backptr: nil
  conclusion: (= (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 328
  rule: and_est
  expr args: []
  clause args: [derived 322, derived 327]
  backptr: nil
  conclusion: (= (and (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 329
  rule: and_est
  expr args: []
  clause args: [derived 321, derived 328]
  backptr: nil
  conclusion: (= (and (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 330
  rule: and_est
  expr args: []
  clause args: [derived 320, derived 329]
  backptr: nil
  conclusion: (= (and (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 331
  rule: and_est
  expr args: []
  clause args: [derived 319, derived 330]
  backptr: nil
  conclusion: (= (and (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 332
  rule: and_est
  expr args: []
  clause args: [derived 318, derived 331]
  backptr: nil
  conclusion: (= (and (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 333
  rule: and_est
  expr args: []
  clause args: [derived 317, derived 332]
  backptr: nil
  conclusion: (= (and (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 334
  rule: and_est
  expr args: []
  clause args: [derived 316, derived 333]
  backptr: nil
  conclusion: (= (and (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 335
  rule: and_est
  expr args: []
  clause args: [derived 315, derived 334]
  backptr: nil
  conclusion: (= (and (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 336
  rule: and_est
  expr args: []
  clause args: [derived 314, derived 335]
  backptr: nil
  conclusion: (= (and (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 337
  rule: and_est
  expr args: []
  clause args: [derived 313, derived 336]
  backptr: nil
  conclusion: (= (and (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 338
  rule: and_est
  expr args: []
  clause args: [derived 312, derived 337]
  backptr: nil
  conclusion: (= (and (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 339
  rule: and_est
  expr args: []
  clause args: [derived 311, derived 338]
  backptr: nil
  conclusion: (= (and (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 340
  rule: and_est
  expr args: []
  clause args: [derived 310, derived 339]
  backptr: nil
  conclusion: (= (and (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 341
  rule: and_est
  expr args: []
  clause args: [derived 309, derived 340]
  backptr: nil
  conclusion: (= (and (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 342
  rule: and_est
  expr args: []
  clause args: [derived 308, derived 341]
  backptr: nil
  conclusion: (= (and (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 343
  rule: and_est
  expr args: []
  clause args: [derived 307, derived 342]
  backptr: nil
  conclusion: (= (and (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 344
  rule: and_est
  expr args: []
  clause args: [derived 306, derived 343]
  backptr: nil
  conclusion: (= (and (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 345
  rule: and_est
  expr args: []
  clause args: [derived 305, derived 344]
  backptr: nil
  conclusion: (= (and (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 346
  rule: and_est
  expr args: []
  clause args: [derived 304, derived 345]
  backptr: nil
  conclusion: (= (and (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 347
  rule: and_est
  expr args: []
  clause args: [derived 303, derived 346]
  backptr: nil
  conclusion: (= (and (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 348
  rule: and_est
  expr args: []
  clause args: [derived 302, derived 347]
  backptr: nil
  conclusion: (= (and (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 349
  rule: and_est
  expr args: []
  clause args: [derived 301, derived 348]
  backptr: nil
  conclusion: (= (and (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 350
  rule: and_est
  expr args: []
  clause args: [derived 300, derived 349]
  backptr: nil
  conclusion: (= (and (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 351
  rule: and_est
  expr args: []
  clause args: [derived 299, derived 350]
  backptr: nil
  conclusion: (= (and (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 352
  rule: and_est
  expr args: []
  clause args: [derived 298, derived 351]
  backptr: nil
  conclusion: (= (and (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 353
  rule: and_est
  expr args: []
  clause args: [derived 297, derived 352]
  backptr: nil
  conclusion: (= (and (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 354
  rule: and_est
  expr args: []
  clause args: [derived 296, derived 353]
  backptr: nil
  conclusion: (= (and (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 355
  rule: and_est
  expr args: []
  clause args: [derived 295, derived 354]
  backptr: nil
  conclusion: (= (and (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 356
  rule: and_est
  expr args: []
  clause args: [derived 294, derived 355]
  backptr: nil
  conclusion: (= (and (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 357
  rule: and_est
  expr args: []
  clause args: [derived 293, derived 356]
  backptr: nil
  conclusion: (= (and (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 358
  rule: and_est
  expr args: []
  clause args: [derived 292, derived 357]
  backptr: nil
  conclusion: (= (and (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 359
  rule: and_est
  expr args: []
  clause args: [derived 291, derived 358]
  backptr: nil
  conclusion: (= (and (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 360
  rule: and_est
  expr args: []
  clause args: [derived 290, derived 359]
  backptr: nil
  conclusion: (= (and (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 361
  rule: and_est
  expr args: []
  clause args: [derived 289, derived 360]
  backptr: nil
  conclusion: (= (and (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 362
  rule: and_est
  expr args: []
  clause args: [derived 288, derived 361]
  backptr: nil
  conclusion: (= (and (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 363
  rule: and_est
  expr args: []
  clause args: [derived 287, derived 362]
  backptr: nil
  conclusion: (= (and (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 364
  rule: and_est
  expr args: []
  clause args: [derived 286, derived 363]
  backptr: nil
  conclusion: (= (and (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 365
  rule: and_est
  expr args: []
  clause args: [derived 285, derived 364]
  backptr: nil
  conclusion: (= (and (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 366
  rule: and_est
  expr args: []
  clause args: [derived 284, derived 365]
  backptr: nil
  conclusion: (= (and (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 367
  rule: and_est
  expr args: []
  clause args: [derived 283, derived 366]
  backptr: nil
  conclusion: (= (and (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 368
  rule: and_est
  expr args: []
  clause args: [derived 282, derived 367]
  backptr: nil
  conclusion: (= (and (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 369
  rule: and_est
  expr args: []
  clause args: [derived 281, derived 368]
  backptr: nil
  conclusion: (= (and (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 370
  rule: and_est
  expr args: []
  clause args: [derived 280, derived 369]
  backptr: nil
  conclusion: (= (and (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 371
  rule: and_est
  expr args: []
  clause args: [derived 279, derived 370]
  backptr: nil
  conclusion: (= (and (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 372
  rule: and_est
  expr args: []
  clause args: [derived 278, derived 371]
  backptr: nil
  conclusion: (= (and (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 373
  rule: and_est
  expr args: []
  clause args: [derived 277, derived 372]
  backptr: nil
  conclusion: (= (and (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 374
  rule: and_est
  expr args: []
  clause args: [derived 276, derived 373]
  backptr: nil
  conclusion: (= (and (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 375
  rule: and_est
  expr args: []
  clause args: [derived 275, derived 374]
  backptr: nil
  conclusion: (= (and (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 376
  rule: and_est
  expr args: []
  clause args: [derived 274, derived 375]
  backptr: nil
  conclusion: (= (and (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 377
  rule: and_est
  expr args: []
  clause args: [derived 273, derived 376]
  backptr: nil
  conclusion: (= (and (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 378
  rule: and_est
  expr args: []
  clause args: [derived 272, derived 377]
  backptr: nil
  conclusion: (= (and (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 379
  rule: and_est
  expr args: []
  clause args: [derived 271, derived 378]
  backptr: nil
  conclusion: (= (and (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 380
  rule: and_est
  expr args: []
  clause args: [derived 270, derived 379]
  backptr: nil
  conclusion: (= (and (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 381
  rule: and_est
  expr args: []
  clause args: [derived 269, derived 380]
  backptr: nil
  conclusion: (= (and (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 382
  rule: and_est
  expr args: []
  clause args: [derived 268, derived 381]
  backptr: nil
  conclusion: (= (and (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 383
  rule: and_est
  expr args: []
  clause args: [derived 267, derived 382]
  backptr: nil
  conclusion: (= (and (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 384
  rule: and_est
  expr args: []
  clause args: [derived 266, derived 383]
  backptr: nil
  conclusion: (= (and (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 385
  rule: and_est
  expr args: []
  clause args: [derived 265, derived 384]
  backptr: nil
  conclusion: (= (and (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 386
  rule: and_est
  expr args: []
  clause args: [derived 264, derived 385]
  backptr: nil
  conclusion: (= (and (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 387
  rule: and_est
  expr args: []
  clause args: [derived 263, derived 386]
  backptr: nil
  conclusion: (= (and (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 388
  rule: and_est
  expr args: []
  clause args: [derived 262, derived 387]
  backptr: nil
  conclusion: (= (and (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 389
  rule: and_est
  expr args: []
  clause args: [derived 261, derived 388]
  backptr: nil
  conclusion: (= (and (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 390
  rule: and_est
  expr args: []
  clause args: [derived 260, derived 389]
  backptr: nil
  conclusion: (= (and (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 391
  rule: and_est
  expr args: []
  clause args: [derived 259, derived 390]
  backptr: nil
  conclusion: (= (and (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 392
  rule: and_est
  expr args: []
  clause args: [derived 258, derived 391]
  backptr: nil
  conclusion: (= (and (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 393
  rule: and_est
  expr args: []
  clause args: [derived 257, derived 392]
  backptr: nil
  conclusion: (= (and (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 394
  rule: and_est
  expr args: []
  clause args: [derived 256, derived 393]
  backptr: nil
  conclusion: (= (and (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 395
  rule: and_est
  expr args: []
  clause args: [derived 255, derived 394]
  backptr: nil
  conclusion: (= (and (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 396
  rule: and_est
  expr args: []
  clause args: [derived 254, derived 395]
  backptr: nil
  conclusion: (= (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or cvc.a17 cvc.a18 cvc.a19 cvc.a20) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 397
  rule: and_est
  expr args: []
  clause args: [derived 247, derived 396]
  backptr: nil
  conclusion: (= (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or cvc.a13 cvc.a14 cvc.a15 cvc.a16) (or cvc.a17 cvc.a18 cvc.a19 cvc.a20) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 398
  rule: and_est
  expr args: []
  clause args: [derived 240, derived 397]
  backptr: nil
  conclusion: (= (and (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or cvc.a9 cvc.a10 cvc.a11 cvc.a12) (or cvc.a13 cvc.a14 cvc.a15 cvc.a16) (or cvc.a17 cvc.a18 cvc.a19 cvc.a20) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 399
  rule: and_est
  expr args: []
  clause args: [derived 233, derived 398]
  backptr: nil
  conclusion: (= (and (or cvc.a5 (or cvc.a6 (or cvc.a7 cvc.a8))) (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or cvc.a5 cvc.a6 cvc.a7 cvc.a8) (or cvc.a9 cvc.a10 cvc.a11 cvc.a12) (or cvc.a13 cvc.a14 cvc.a15 cvc.a16) (or cvc.a17 cvc.a18 cvc.a19 cvc.a20) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 400
  rule: and_est
  expr args: []
  clause args: [derived 226, derived 399]
  backptr: nil
  conclusion: (= (and (or cvc.a1 (or cvc.a2 (or cvc.a3 cvc.a4))) (or cvc.a5 (or cvc.a6 (or cvc.a7 cvc.a8))) (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))) (and (or cvc.a1 cvc.a2 cvc.a3 cvc.a4) (or cvc.a5 cvc.a6 cvc.a7 cvc.a8) (or cvc.a9 cvc.a10 cvc.a11 cvc.a12) (or cvc.a13 cvc.a14 cvc.a15 cvc.a16) (or cvc.a17 cvc.a18 cvc.a19 cvc.a20) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 401
  rule: trans
  expr args: []
  clause args: [derived 219, derived 400]
  backptr: nil
  conclusion: (= (and (or cvc.a1 (or cvc.a2 (or cvc.a3 cvc.a4))) (and (or cvc.a5 (or cvc.a6 (or cvc.a7 cvc.a8))) (and (or cvc.a9 (or cvc.a10 (or cvc.a11 cvc.a12))) (and (or cvc.a13 (or cvc.a14 (or cvc.a15 cvc.a16))) (and (or cvc.a17 (or cvc.a18 (or cvc.a19 cvc.a20))) (and (or (not cvc.a1) (not cvc.a2)) (and (or (not cvc.a1) (not cvc.a3)) (and (or (not cvc.a1) (not cvc.a4)) (and (or (not cvc.a2) (not cvc.a3)) (and (or (not cvc.a2) (not cvc.a4)) (and (or (not cvc.a3) (not cvc.a4)) (and (or (not cvc.a5) (not cvc.a6)) (and (or (not cvc.a5) (not cvc.a7)) (and (or (not cvc.a5) (not cvc.a8)) (and (or (not cvc.a6) (not cvc.a7)) (and (or (not cvc.a6) (not cvc.a8)) (and (or (not cvc.a7) (not cvc.a8)) (and (or (not cvc.a9) (not cvc.a10)) (and (or (not cvc.a9) (not cvc.a11)) (and (or (not cvc.a9) (not cvc.a12)) (and (or (not cvc.a10) (not cvc.a11)) (and (or (not cvc.a10) (not cvc.a12)) (and (or (not cvc.a11) (not cvc.a12)) (and (or (not cvc.a13) (not cvc.a14)) (and (or (not cvc.a13) (not cvc.a15)) (and (or (not cvc.a13) (not cvc.a16)) (and (or (not cvc.a14) (not cvc.a15)) (and (or (not cvc.a14) (not cvc.a16)) (and (or (not cvc.a15) (not cvc.a16)) (and (or (not cvc.a17) (not cvc.a18)) (and (or (not cvc.a17) (not cvc.a19)) (and (or (not cvc.a17) (not cvc.a20)) (and (or (not cvc.a18) (not cvc.a19)) (and (or (not cvc.a18) (not cvc.a20)) (and (or (not cvc.a19) (not cvc.a20)) (and (or (not cvc.a1) (not cvc.a5)) (and (or (not cvc.a1) (not cvc.a9)) (and (or (not cvc.a1) (not cvc.a13)) (and (or (not cvc.a1) (not cvc.a17)) (and (or (not cvc.a5) (not cvc.a9)) (and (or (not cvc.a5) (not cvc.a13)) (and (or (not cvc.a5) (not cvc.a17)) (and (or (not cvc.a9) (not cvc.a13)) (and (or (not cvc.a9) (not cvc.a17)) (and (or (not cvc.a13) (not cvc.a17)) (and (or (not cvc.a2) (not cvc.a6)) (and (or (not cvc.a2) (not cvc.a10)) (and (or (not cvc.a2) (not cvc.a14)) (and (or (not cvc.a2) (not cvc.a18)) (and (or (not cvc.a6) (not cvc.a10)) (and (or (not cvc.a6) (not cvc.a14)) (and (or (not cvc.a6) (not cvc.a18)) (and (or (not cvc.a10) (not cvc.a14)) (and (or (not cvc.a10) (not cvc.a18)) (and (or (not cvc.a14) (not cvc.a18)) (and (or (not cvc.a3) (not cvc.a7)) (and (or (not cvc.a3) (not cvc.a11)) (and (or (not cvc.a3) (not cvc.a15)) (and (or (not cvc.a3) (not cvc.a19)) (and (or (not cvc.a7) (not cvc.a11)) (and (or (not cvc.a7) (not cvc.a15)) (and (or (not cvc.a7) (not cvc.a19)) (and (or (not cvc.a11) (not cvc.a15)) (and (or (not cvc.a11) (not cvc.a19)) (and (or (not cvc.a15) (not cvc.a19)) (and (or (not cvc.a4) (not cvc.a8)) (and (or (not cvc.a4) (not cvc.a12)) (and (or (not cvc.a4) (not cvc.a16)) (and (or (not cvc.a4) (not cvc.a20)) (and (or (not cvc.a8) (not cvc.a12)) (and (or (not cvc.a8) (not cvc.a16)) (and (or (not cvc.a8) (not cvc.a20)) (and (or (not cvc.a12) (not cvc.a16)) (and (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (and (or cvc.a1 cvc.a2 cvc.a3 cvc.a4) (or cvc.a5 cvc.a6 cvc.a7 cvc.a8) (or cvc.a9 cvc.a10 cvc.a11 cvc.a12) (or cvc.a13 cvc.a14 cvc.a15 cvc.a16) (or cvc.a17 cvc.a18 cvc.a19 cvc.a20) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20))))

  derived clause number: 402
  rule: eq_resolve
  expr args: []
  clause args: [premise a0, derived 401]
  backptr: nil
  conclusion: (and (or cvc.a1 cvc.a2 cvc.a3 cvc.a4) (or cvc.a5 cvc.a6 cvc.a7 cvc.a8) (or cvc.a9 cvc.a10 cvc.a11 cvc.a12) (or cvc.a13 cvc.a14 cvc.a15 cvc.a16) (or cvc.a17 cvc.a18 cvc.a19 cvc.a20) (or (not cvc.a1) (not cvc.a2)) (or (not cvc.a1) (not cvc.a3)) (or (not cvc.a1) (not cvc.a4)) (or (not cvc.a2) (not cvc.a3)) (or (not cvc.a2) (not cvc.a4)) (or (not cvc.a3) (not cvc.a4)) (or (not cvc.a5) (not cvc.a6)) (or (not cvc.a5) (not cvc.a7)) (or (not cvc.a5) (not cvc.a8)) (or (not cvc.a6) (not cvc.a7)) (or (not cvc.a6) (not cvc.a8)) (or (not cvc.a7) (not cvc.a8)) (or (not cvc.a9) (not cvc.a10)) (or (not cvc.a9) (not cvc.a11)) (or (not cvc.a9) (not cvc.a12)) (or (not cvc.a10) (not cvc.a11)) (or (not cvc.a10) (not cvc.a12)) (or (not cvc.a11) (not cvc.a12)) (or (not cvc.a13) (not cvc.a14)) (or (not cvc.a13) (not cvc.a15)) (or (not cvc.a13) (not cvc.a16)) (or (not cvc.a14) (not cvc.a15)) (or (not cvc.a14) (not cvc.a16)) (or (not cvc.a15) (not cvc.a16)) (or (not cvc.a17) (not cvc.a18)) (or (not cvc.a17) (not cvc.a19)) (or (not cvc.a17) (not cvc.a20)) (or (not cvc.a18) (not cvc.a19)) (or (not cvc.a18) (not cvc.a20)) (or (not cvc.a19) (not cvc.a20)) (or (not cvc.a1) (not cvc.a5)) (or (not cvc.a1) (not cvc.a9)) (or (not cvc.a1) (not cvc.a13)) (or (not cvc.a1) (not cvc.a17)) (or (not cvc.a5) (not cvc.a9)) (or (not cvc.a5) (not cvc.a13)) (or (not cvc.a5) (not cvc.a17)) (or (not cvc.a9) (not cvc.a13)) (or (not cvc.a9) (not cvc.a17)) (or (not cvc.a13) (not cvc.a17)) (or (not cvc.a2) (not cvc.a6)) (or (not cvc.a2) (not cvc.a10)) (or (not cvc.a2) (not cvc.a14)) (or (not cvc.a2) (not cvc.a18)) (or (not cvc.a6) (not cvc.a10)) (or (not cvc.a6) (not cvc.a14)) (or (not cvc.a6) (not cvc.a18)) (or (not cvc.a10) (not cvc.a14)) (or (not cvc.a10) (not cvc.a18)) (or (not cvc.a14) (not cvc.a18)) (or (not cvc.a3) (not cvc.a7)) (or (not cvc.a3) (not cvc.a11)) (or (not cvc.a3) (not cvc.a15)) (or (not cvc.a3) (not cvc.a19)) (or (not cvc.a7) (not cvc.a11)) (or (not cvc.a7) (not cvc.a15)) (or (not cvc.a7) (not cvc.a19)) (or (not cvc.a11) (not cvc.a15)) (or (not cvc.a11) (not cvc.a19)) (or (not cvc.a15) (not cvc.a19)) (or (not cvc.a4) (not cvc.a8)) (or (not cvc.a4) (not cvc.a12)) (or (not cvc.a4) (not cvc.a16)) (or (not cvc.a4) (not cvc.a20)) (or (not cvc.a8) (not cvc.a12)) (or (not cvc.a8) (not cvc.a16)) (or (not cvc.a8) (not cvc.a20)) (or (not cvc.a12) (not cvc.a16)) (or (not cvc.a12) (not cvc.a20)) (or (not cvc.a16) (not cvc.a20)))

  derived clause number: 403
  rule: and_elim
  expr args: [69]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a8) (not cvc.a12))

  derived clause number: 404
  rule: and_elim
  expr args: [71]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a8) (not cvc.a20))

  derived clause number: 405
  rule: and_elim
  expr args: [50]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a6) (not cvc.a14))

  derived clause number: 406
  rule: and_elim
  expr args: [47]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a2) (not cvc.a14))

  derived clause number: 407
  rule: and_elim
  expr args: [52]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a10) (not cvc.a14))

  derived clause number: 408
  rule: and_elim
  expr args: [56]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a3) (not cvc.a11))

  derived clause number: 409
  rule: and_elim
  expr args: [59]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a7) (not cvc.a11))

  derived clause number: 410
  rule: and_elim
  expr args: [0]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or cvc.a1 cvc.a2 cvc.a3 cvc.a4)

  derived clause number: 411
  rule: and_elim
  expr args: [1]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a6 cvc.a7 cvc.a8)

  derived clause number: 412
  rule: and_elim
  expr args: [65]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a4) (not cvc.a8))

  derived clause number: 413
  rule: resolution
  expr args: [ff, cvc.a8]
  clause args: [derived 412, derived 411]
  backptr: nil
  conclusion: (or (not cvc.a4) cvc.a5 cvc.a6 cvc.a7)

  derived clause number: 414
  rule: resolution
  expr args: [ff, cvc.a4]
  clause args: [derived 413, derived 410]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a6 cvc.a7 cvc.a1 cvc.a2 cvc.a3)

  derived clause number: 415
  rule: resolution
  expr args: [tt, cvc.a7]
  clause args: [derived 414, derived 409]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a6 cvc.a1 cvc.a2 cvc.a3 (not cvc.a11))

  derived clause number: 416
  rule: resolution
  expr args: [tt, cvc.a3]
  clause args: [derived 415, derived 408]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a6 cvc.a1 cvc.a2 (not cvc.a11) (not cvc.a11))

  derived clause number: 417
  rule: factoring
  expr args: []
  clause args: [derived 416]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a6 cvc.a1 cvc.a2 (not cvc.a11))

  derived clause number: 418
  rule: reordering
  expr args: [(or cvc.a1 cvc.a2 cvc.a5 cvc.a6 (not cvc.a11))]
  clause args: [derived 417]
  backptr: nil
  conclusion: (or cvc.a1 cvc.a2 cvc.a5 cvc.a6 (not cvc.a11))

  derived clause number: 419
  rule: and_elim
  expr args: [2]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a10 cvc.a11 cvc.a12)

  derived clause number: 420
  rule: and_elim
  expr args: [66]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a4) (not cvc.a12))

  derived clause number: 421
  rule: and_elim
  expr args: [55]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a3) (not cvc.a7))

  derived clause number: 422
  rule: and_elim
  expr args: [60]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a7) (not cvc.a15))

  derived clause number: 423
  rule: and_elim
  expr args: [3]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a15 cvc.a16)

  derived clause number: 424
  rule: and_elim
  expr args: [67]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a4) (not cvc.a16))

  derived clause number: 425
  rule: and_elim
  expr args: [72]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a12) (not cvc.a16))

  derived clause number: 426
  rule: and_elim
  expr args: [46]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a2) (not cvc.a10))

  derived clause number: 427
  rule: and_elim
  expr args: [45]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a2) (not cvc.a6))

  derived clause number: 428
  rule: and_elim
  expr args: [70]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a8) (not cvc.a16))

  derived clause number: 429
  rule: and_elim
  expr args: [62]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a11) (not cvc.a15))

  derived clause number: 430
  rule: resolution
  expr args: [ff, cvc.a16]
  clause args: [derived 424, derived 423]
  backptr: nil
  conclusion: (or (not cvc.a4) cvc.a13 cvc.a14 cvc.a15)

  derived clause number: 431
  rule: resolution
  expr args: [ff, cvc.a4]
  clause args: [derived 430, derived 410]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a15 cvc.a1 cvc.a2 cvc.a3)

  derived clause number: 432
  rule: resolution
  expr args: [tt, cvc.a15]
  clause args: [derived 431, derived 429]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a1 cvc.a2 cvc.a3 (not cvc.a11))

  derived clause number: 433
  rule: resolution
  expr args: [tt, cvc.a3]
  clause args: [derived 432, derived 408]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a1 cvc.a2 (not cvc.a11) (not cvc.a11))

  derived clause number: 434
  rule: factoring
  expr args: []
  clause args: [derived 433]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a1 cvc.a2 (not cvc.a11))

  derived clause number: 435
  rule: reordering
  expr args: [(or cvc.a1 cvc.a2 cvc.a13 cvc.a14 (not cvc.a11))]
  clause args: [derived 434]
  backptr: nil
  conclusion: (or cvc.a1 cvc.a2 cvc.a13 cvc.a14 (not cvc.a11))

  derived clause number: 436
  rule: and_elim
  expr args: [49]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a6) (not cvc.a10))

  derived clause number: 437
  rule: and_elim
  expr args: [57]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a3) (not cvc.a15))

  derived clause number: 438
  rule: resolution
  expr args: [ff, cvc.a10]
  clause args: [derived 436, derived 419]
  backptr: nil
  conclusion: (or (not cvc.a6) cvc.a9 cvc.a11 cvc.a12)

  derived clause number: 439
  rule: resolution
  expr args: [ff, cvc.a6]
  clause args: [derived 438, derived 411]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a12 cvc.a5 cvc.a7 cvc.a8)

  derived clause number: 440
  rule: resolution
  expr args: [tt, cvc.a12]
  clause args: [derived 439, derived 425]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a5 cvc.a7 cvc.a8 (not cvc.a16))

  derived clause number: 441
  rule: resolution
  expr args: [tt, cvc.a8]
  clause args: [derived 440, derived 428]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a5 cvc.a7 (not cvc.a16) (not cvc.a16))

  derived clause number: 442
  rule: factoring
  expr args: []
  clause args: [derived 441]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a5 cvc.a7 (not cvc.a16))

  derived clause number: 443
  rule: resolution
  expr args: [ff, cvc.a16]
  clause args: [derived 442, derived 423]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a5 cvc.a7 cvc.a13 cvc.a14 cvc.a15)

  derived clause number: 444
  rule: resolution
  expr args: [tt, cvc.a15]
  clause args: [derived 443, derived 437]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a5 cvc.a7 cvc.a13 cvc.a14 (not cvc.a3))

  derived clause number: 445
  rule: resolution
  expr args: [ff, cvc.a3]
  clause args: [derived 444, derived 410]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a5 cvc.a7 cvc.a13 cvc.a14 cvc.a1 cvc.a2 cvc.a4)

  derived clause number: 446
  rule: resolution
  expr args: [ff, cvc.a10]
  clause args: [derived 436, derived 419]
  backptr: nil
  conclusion: (or (not cvc.a6) cvc.a9 cvc.a11 cvc.a12)

  derived clause number: 447
  rule: resolution
  expr args: [ff, cvc.a6]
  clause args: [derived 446, derived 411]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a12 cvc.a5 cvc.a7 cvc.a8)

  derived clause number: 448
  rule: resolution
  expr args: [tt, cvc.a12]
  clause args: [derived 447, derived 420]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a5 cvc.a7 cvc.a8 (not cvc.a4))

  derived clause number: 449
  rule: resolution
  expr args: [tt, cvc.a8]
  clause args: [derived 448, derived 412]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a5 cvc.a7 (not cvc.a4) (not cvc.a4))

  derived clause number: 450
  rule: factoring
  expr args: []
  clause args: [derived 449]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a5 cvc.a7 (not cvc.a4))

  derived clause number: 451
  rule: reordering
  expr args: [(or cvc.a5 cvc.a7 cvc.a9 cvc.a11 (not cvc.a4))]
  clause args: [derived 450]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a7 cvc.a9 cvc.a11 (not cvc.a4))

  derived clause number: 452
  rule: resolution
  expr args: [tt, cvc.a4]
  clause args: [derived 445, derived 451]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a5 cvc.a7 cvc.a13 cvc.a14 cvc.a1 cvc.a2 cvc.a5 cvc.a7 cvc.a9 cvc.a11)

  derived clause number: 453
  rule: factoring
  expr args: []
  clause args: [derived 452]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a5 cvc.a7 cvc.a13 cvc.a14 cvc.a1 cvc.a2)

  derived clause number: 454
  rule: resolution
  expr args: [tt, cvc.a11]
  clause args: [derived 453, derived 435]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a5 cvc.a7 cvc.a13 cvc.a14 cvc.a1 cvc.a2 cvc.a1 cvc.a2 cvc.a13 cvc.a14)

  derived clause number: 455
  rule: factoring
  expr args: []
  clause args: [derived 454]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a5 cvc.a7 cvc.a13 cvc.a14 cvc.a1 cvc.a2)

  derived clause number: 456
  rule: resolution
  expr args: [ff, cvc.a15]
  clause args: [derived 429, derived 423]
  backptr: nil
  conclusion: (or (not cvc.a11) cvc.a13 cvc.a14 cvc.a16)

  derived clause number: 457
  rule: resolution
  expr args: [ff, cvc.a11]
  clause args: [derived 456, derived 419]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a16 cvc.a9 cvc.a10 cvc.a12)

  derived clause number: 458
  rule: resolution
  expr args: [tt, cvc.a16]
  clause args: [derived 457, derived 428]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a9 cvc.a10 cvc.a12 (not cvc.a8))

  derived clause number: 459
  rule: resolution
  expr args: [tt, cvc.a12]
  clause args: [derived 458, derived 403]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a9 cvc.a10 (not cvc.a8) (not cvc.a8))

  derived clause number: 460
  rule: factoring
  expr args: []
  clause args: [derived 459]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a9 cvc.a10 (not cvc.a8))

  derived clause number: 461
  rule: resolution
  expr args: [ff, cvc.a8]
  clause args: [derived 460, derived 411]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a9 cvc.a10 cvc.a5 cvc.a6 cvc.a7)

  derived clause number: 462
  rule: resolution
  expr args: [tt, cvc.a10]
  clause args: [derived 461, derived 426]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a9 cvc.a5 cvc.a6 cvc.a7 (not cvc.a2))

  derived clause number: 463
  rule: resolution
  expr args: [tt, cvc.a6]
  clause args: [derived 462, derived 427]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a9 cvc.a5 cvc.a7 (not cvc.a2) (not cvc.a2))

  derived clause number: 464
  rule: factoring
  expr args: []
  clause args: [derived 463]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a9 cvc.a5 cvc.a7 (not cvc.a2))

  derived clause number: 465
  rule: reordering
  expr args: [(or cvc.a5 cvc.a7 cvc.a9 cvc.a13 cvc.a14 (not cvc.a2))]
  clause args: [derived 464]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a7 cvc.a9 cvc.a13 cvc.a14 (not cvc.a2))

  derived clause number: 466
  rule: resolution
  expr args: [tt, cvc.a2]
  clause args: [derived 455, derived 465]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a5 cvc.a7 cvc.a13 cvc.a14 cvc.a1 cvc.a5 cvc.a7 cvc.a9 cvc.a13 cvc.a14)

  derived clause number: 467
  rule: factoring
  expr args: []
  clause args: [derived 466]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a5 cvc.a7 cvc.a13 cvc.a14 cvc.a1)

  derived clause number: 468
  rule: resolution
  expr args: [ff, cvc.a10]
  clause args: [derived 426, derived 419]
  backptr: nil
  conclusion: (or (not cvc.a2) cvc.a9 cvc.a11 cvc.a12)

  derived clause number: 469
  rule: resolution
  expr args: [ff, cvc.a2]
  clause args: [derived 468, derived 410]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a12 cvc.a1 cvc.a3 cvc.a4)

  derived clause number: 470
  rule: resolution
  expr args: [tt, cvc.a12]
  clause args: [derived 469, derived 425]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a1 cvc.a3 cvc.a4 (not cvc.a16))

  derived clause number: 471
  rule: resolution
  expr args: [tt, cvc.a4]
  clause args: [derived 470, derived 424]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a1 cvc.a3 (not cvc.a16) (not cvc.a16))

  derived clause number: 472
  rule: factoring
  expr args: []
  clause args: [derived 471]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a1 cvc.a3 (not cvc.a16))

  derived clause number: 473
  rule: resolution
  expr args: [ff, cvc.a16]
  clause args: [derived 472, derived 423]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a1 cvc.a3 cvc.a13 cvc.a14 cvc.a15)

  derived clause number: 474
  rule: resolution
  expr args: [tt, cvc.a15]
  clause args: [derived 473, derived 422]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a11 cvc.a1 cvc.a3 cvc.a13 cvc.a14 (not cvc.a7))

  derived clause number: 475
  rule: resolution
  expr args: [tt, cvc.a11]
  clause args: [derived 474, derived 409]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a1 cvc.a3 cvc.a13 cvc.a14 (not cvc.a7) (not cvc.a7))

  derived clause number: 476
  rule: resolution
  expr args: [tt, cvc.a3]
  clause args: [derived 475, derived 421]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a1 cvc.a13 cvc.a14 (not cvc.a7) (not cvc.a7) (not cvc.a7))

  derived clause number: 477
  rule: factoring
  expr args: []
  clause args: [derived 476]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a1 cvc.a13 cvc.a14 (not cvc.a7))

  derived clause number: 478
  rule: reordering
  expr args: [(or cvc.a1 cvc.a9 cvc.a13 cvc.a14 (not cvc.a7))]
  clause args: [derived 477]
  backptr: nil
  conclusion: (or cvc.a1 cvc.a9 cvc.a13 cvc.a14 (not cvc.a7))

  derived clause number: 479
  rule: resolution
  expr args: [tt, cvc.a7]
  clause args: [derived 467, derived 478]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a5 cvc.a13 cvc.a14 cvc.a1 cvc.a1 cvc.a9 cvc.a13 cvc.a14)

  derived clause number: 480
  rule: factoring
  expr args: []
  clause args: [derived 479]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a5 cvc.a13 cvc.a14 cvc.a1)

  derived clause number: 481
  rule: resolution
  expr args: [ff, cvc.a7]
  clause args: [derived 421, derived 411]
  backptr: nil
  conclusion: (or (not cvc.a3) cvc.a5 cvc.a6 cvc.a8)

  derived clause number: 482
  rule: resolution
  expr args: [ff, cvc.a3]
  clause args: [derived 481, derived 410]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a6 cvc.a8 cvc.a1 cvc.a2 cvc.a4)

  derived clause number: 483
  rule: resolution
  expr args: [tt, cvc.a8]
  clause args: [derived 482, derived 403]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a6 cvc.a1 cvc.a2 cvc.a4 (not cvc.a12))

  derived clause number: 484
  rule: resolution
  expr args: [tt, cvc.a4]
  clause args: [derived 483, derived 420]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a6 cvc.a1 cvc.a2 (not cvc.a12) (not cvc.a12))

  derived clause number: 485
  rule: factoring
  expr args: []
  clause args: [derived 484]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a6 cvc.a1 cvc.a2 (not cvc.a12))

  derived clause number: 486
  rule: resolution
  expr args: [ff, cvc.a12]
  clause args: [derived 485, derived 419]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a6 cvc.a1 cvc.a2 cvc.a9 cvc.a10 cvc.a11)

  derived clause number: 487
  rule: resolution
  expr args: [tt, cvc.a11]
  clause args: [derived 486, derived 418]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a6 cvc.a1 cvc.a2 cvc.a9 cvc.a10 cvc.a1 cvc.a2 cvc.a5 cvc.a6)

  derived clause number: 488
  rule: resolution
  expr args: [tt, cvc.a10]
  clause args: [derived 487, derived 407]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a6 cvc.a1 cvc.a2 cvc.a9 cvc.a1 cvc.a2 cvc.a5 cvc.a6 (not cvc.a14))

  derived clause number: 489
  rule: factoring
  expr args: []
  clause args: [derived 488]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a6 cvc.a1 cvc.a2 cvc.a9 (not cvc.a14))

  derived clause number: 490
  rule: resolution
  expr args: [tt, cvc.a2]
  clause args: [derived 489, derived 406]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a6 cvc.a1 cvc.a9 (not cvc.a14) (not cvc.a14))

  derived clause number: 491
  rule: resolution
  expr args: [tt, cvc.a6]
  clause args: [derived 490, derived 405]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a1 cvc.a9 (not cvc.a14) (not cvc.a14) (not cvc.a14))

  derived clause number: 492
  rule: factoring
  expr args: []
  clause args: [derived 491]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a1 cvc.a9 (not cvc.a14))

  derived clause number: 493
  rule: reordering
  expr args: [(or cvc.a1 cvc.a5 cvc.a9 (not cvc.a14))]
  clause args: [derived 492]
  backptr: nil
  conclusion: (or cvc.a1 cvc.a5 cvc.a9 (not cvc.a14))

  derived clause number: 494
  rule: resolution
  expr args: [tt, cvc.a14]
  clause args: [derived 480, derived 493]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a5 cvc.a13 cvc.a1 cvc.a1 cvc.a5 cvc.a9)

  derived clause number: 495
  rule: factoring
  expr args: []
  clause args: [derived 494]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a5 cvc.a13 cvc.a1)

  derived clause number: 496
  rule: and_elim
  expr args: [41]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a5) (not cvc.a17))

  derived clause number: 497
  rule: resolution
  expr args: [tt, cvc.a5]
  clause args: [derived 495, derived 496]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a13 cvc.a1 (not cvc.a17))

  derived clause number: 498
  rule: and_elim
  expr args: [44]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a13) (not cvc.a17))

  derived clause number: 499
  rule: resolution
  expr args: [tt, cvc.a13]
  clause args: [derived 497, derived 498]
  backptr: nil
  conclusion: (or cvc.a9 cvc.a1 (not cvc.a17) (not cvc.a17))

  derived clause number: 500
  rule: and_elim
  expr args: [43]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a9) (not cvc.a17))

  derived clause number: 501
  rule: resolution
  expr args: [tt, cvc.a9]
  clause args: [derived 499, derived 500]
  backptr: nil
  conclusion: (or cvc.a1 (not cvc.a17) (not cvc.a17) (not cvc.a17))

  derived clause number: 502
  rule: factoring
  expr args: []
  clause args: [derived 501]
  backptr: nil
  conclusion: (or cvc.a1 (not cvc.a17))

  derived clause number: 503
  rule: and_elim
  expr args: [53]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a10) (not cvc.a18))

  derived clause number: 504
  rule: and_elim
  expr args: [4]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a18 cvc.a19 cvc.a20)

  derived clause number: 505
  rule: and_elim
  expr args: [74]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a16) (not cvc.a20))

  derived clause number: 506
  rule: and_elim
  expr args: [40]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a5) (not cvc.a13))

  derived clause number: 507
  rule: resolution
  expr args: [ff, cvc.a13]
  clause args: [derived 506, derived 423]
  backptr: nil
  conclusion: (or (not cvc.a5) cvc.a14 cvc.a15 cvc.a16)

  derived clause number: 508
  rule: resolution
  expr args: [ff, cvc.a5]
  clause args: [derived 507, derived 411]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a16 cvc.a6 cvc.a7 cvc.a8)

  derived clause number: 509
  rule: resolution
  expr args: [tt, cvc.a16]
  clause args: [derived 508, derived 505]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a6 cvc.a7 cvc.a8 (not cvc.a20))

  derived clause number: 510
  rule: resolution
  expr args: [tt, cvc.a8]
  clause args: [derived 509, derived 404]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a6 cvc.a7 (not cvc.a20) (not cvc.a20))

  derived clause number: 511
  rule: factoring
  expr args: []
  clause args: [derived 510]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a6 cvc.a7 (not cvc.a20))

  derived clause number: 512
  rule: resolution
  expr args: [ff, cvc.a20]
  clause args: [derived 511, derived 504]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a6 cvc.a7 cvc.a17 cvc.a18 cvc.a19)

  derived clause number: 513
  rule: resolution
  expr args: [tt, cvc.a18]
  clause args: [derived 512, derived 503]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a6 cvc.a7 cvc.a17 cvc.a19 (not cvc.a10))

  derived clause number: 514
  rule: resolution
  expr args: [tt, cvc.a14]
  clause args: [derived 513, derived 407]
  backptr: nil
  conclusion: (or cvc.a15 cvc.a6 cvc.a7 cvc.a17 cvc.a19 (not cvc.a10) (not cvc.a10))

  derived clause number: 515
  rule: resolution
  expr args: [tt, cvc.a6]
  clause args: [derived 514, derived 436]
  backptr: nil
  conclusion: (or cvc.a15 cvc.a7 cvc.a17 cvc.a19 (not cvc.a10) (not cvc.a10) (not cvc.a10))

  derived clause number: 516
  rule: factoring
  expr args: []
  clause args: [derived 515]
  backptr: nil
  conclusion: (or cvc.a15 cvc.a7 cvc.a17 cvc.a19 (not cvc.a10))

  derived clause number: 517
  rule: reordering
  expr args: [(or cvc.a7 cvc.a15 cvc.a17 cvc.a19 (not cvc.a10))]
  clause args: [derived 516]
  backptr: nil
  conclusion: (or cvc.a7 cvc.a15 cvc.a17 cvc.a19 (not cvc.a10))

  derived clause number: 518
  rule: and_elim
  expr args: [39]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a5) (not cvc.a9))

  derived clause number: 519
  rule: resolution
  expr args: [ff, cvc.a16]
  clause args: [derived 425, derived 423]
  backptr: nil
  conclusion: (or (not cvc.a12) cvc.a13 cvc.a14 cvc.a15)

  derived clause number: 520
  rule: resolution
  expr args: [ff, cvc.a12]
  clause args: [derived 519, derived 419]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a15 cvc.a9 cvc.a10 cvc.a11)

  derived clause number: 521
  rule: resolution
  expr args: [tt, cvc.a13]
  clause args: [derived 520, derived 506]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a9 cvc.a10 cvc.a11 (not cvc.a5))

  derived clause number: 522
  rule: resolution
  expr args: [tt, cvc.a9]
  clause args: [derived 521, derived 518]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a10 cvc.a11 (not cvc.a5) (not cvc.a5))

  derived clause number: 523
  rule: factoring
  expr args: []
  clause args: [derived 522]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a10 cvc.a11 (not cvc.a5))

  derived clause number: 524
  rule: reordering
  expr args: [(or cvc.a10 cvc.a11 cvc.a14 cvc.a15 (not cvc.a5))]
  clause args: [derived 523]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a11 cvc.a14 cvc.a15 (not cvc.a5))

  derived clause number: 525
  rule: and_elim
  expr args: [51]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a6) (not cvc.a18))

  derived clause number: 526
  rule: resolution
  expr args: [ff, cvc.a18]
  clause args: [derived 525, derived 504]
  backptr: nil
  conclusion: (or (not cvc.a6) cvc.a17 cvc.a19 cvc.a20)

  derived clause number: 527
  rule: resolution
  expr args: [ff, cvc.a6]
  clause args: [derived 526, derived 411]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a20 cvc.a5 cvc.a7 cvc.a8)

  derived clause number: 528
  rule: resolution
  expr args: [tt, cvc.a20]
  clause args: [derived 527, derived 505]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a5 cvc.a7 cvc.a8 (not cvc.a16))

  derived clause number: 529
  rule: resolution
  expr args: [tt, cvc.a8]
  clause args: [derived 528, derived 428]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a5 cvc.a7 (not cvc.a16) (not cvc.a16))

  derived clause number: 530
  rule: factoring
  expr args: []
  clause args: [derived 529]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a5 cvc.a7 (not cvc.a16))

  derived clause number: 531
  rule: reordering
  expr args: [(or cvc.a5 cvc.a7 cvc.a17 cvc.a19 (not cvc.a16))]
  clause args: [derived 530]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a7 cvc.a17 cvc.a19 (not cvc.a16))

  derived clause number: 532
  rule: and_elim
  expr args: [42]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a9) (not cvc.a13))

  derived clause number: 533
  rule: and_elim
  expr args: [73]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a12) (not cvc.a20))

  derived clause number: 534
  rule: and_elim
  expr args: [54]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a14) (not cvc.a18))

  derived clause number: 535
  rule: and_elim
  expr args: [48]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a2) (not cvc.a18))

  derived clause number: 536
  rule: and_elim
  expr args: [64]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a15) (not cvc.a19))

  derived clause number: 537
  rule: and_elim
  expr args: [61]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a7) (not cvc.a19))

  derived clause number: 538
  rule: and_elim
  expr args: [68]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a4) (not cvc.a20))

  derived clause number: 539
  rule: resolution
  expr args: [ff, cvc.a13]
  clause args: [derived 506, derived 423]
  backptr: nil
  conclusion: (or (not cvc.a5) cvc.a14 cvc.a15 cvc.a16)

  derived clause number: 540
  rule: resolution
  expr args: [ff, cvc.a5]
  clause args: [derived 539, derived 411]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a16 cvc.a6 cvc.a7 cvc.a8)

  derived clause number: 541
  rule: resolution
  expr args: [tt, cvc.a15]
  clause args: [derived 540, derived 536]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a16 cvc.a6 cvc.a7 cvc.a8 (not cvc.a19))

  derived clause number: 542
  rule: resolution
  expr args: [tt, cvc.a7]
  clause args: [derived 541, derived 537]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a16 cvc.a6 cvc.a8 (not cvc.a19) (not cvc.a19))

  derived clause number: 543
  rule: factoring
  expr args: []
  clause args: [derived 542]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a16 cvc.a6 cvc.a8 (not cvc.a19))

  derived clause number: 544
  rule: resolution
  expr args: [ff, cvc.a19]
  clause args: [derived 543, derived 504]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a16 cvc.a6 cvc.a8 cvc.a17 cvc.a18 cvc.a20)

  derived clause number: 545
  rule: resolution
  expr args: [tt, cvc.a18]
  clause args: [derived 544, derived 503]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a16 cvc.a6 cvc.a8 cvc.a17 cvc.a20 (not cvc.a10))

  derived clause number: 546
  rule: resolution
  expr args: [tt, cvc.a14]
  clause args: [derived 545, derived 407]
  backptr: nil
  conclusion: (or cvc.a16 cvc.a6 cvc.a8 cvc.a17 cvc.a20 (not cvc.a10) (not cvc.a10))

  derived clause number: 547
  rule: resolution
  expr args: [tt, cvc.a6]
  clause args: [derived 546, derived 436]
  backptr: nil
  conclusion: (or cvc.a16 cvc.a8 cvc.a17 cvc.a20 (not cvc.a10) (not cvc.a10) (not cvc.a10))

  derived clause number: 548
  rule: factoring
  expr args: []
  clause args: [derived 547]
  backptr: nil
  conclusion: (or cvc.a16 cvc.a8 cvc.a17 cvc.a20 (not cvc.a10))

  derived clause number: 549
  rule: resolution
  expr args: [ff, cvc.a10]
  clause args: [derived 548, derived 419]
  backptr: nil
  conclusion: (or cvc.a16 cvc.a8 cvc.a17 cvc.a20 cvc.a9 cvc.a11 cvc.a12)

  derived clause number: 550
  rule: resolution
  expr args: [ff, cvc.a19]
  clause args: [derived 537, derived 504]
  backptr: nil
  conclusion: (or (not cvc.a7) cvc.a17 cvc.a18 cvc.a20)

  derived clause number: 551
  rule: resolution
  expr args: [ff, cvc.a7]
  clause args: [derived 550, derived 411]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a18 cvc.a20 cvc.a5 cvc.a6 cvc.a8)

  derived clause number: 552
  rule: resolution
  expr args: [tt, cvc.a18]
  clause args: [derived 551, derived 534]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a20 cvc.a5 cvc.a6 cvc.a8 (not cvc.a14))

  derived clause number: 553
  rule: resolution
  expr args: [tt, cvc.a6]
  clause args: [derived 552, derived 405]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a20 cvc.a5 cvc.a8 (not cvc.a14) (not cvc.a14))

  derived clause number: 554
  rule: factoring
  expr args: []
  clause args: [derived 553]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a20 cvc.a5 cvc.a8 (not cvc.a14))

  derived clause number: 555
  rule: resolution
  expr args: [ff, cvc.a14]
  clause args: [derived 554, derived 423]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a20 cvc.a5 cvc.a8 cvc.a13 cvc.a15 cvc.a16)

  derived clause number: 556
  rule: resolution
  expr args: [ff, cvc.a18]
  clause args: [derived 525, derived 504]
  backptr: nil
  conclusion: (or (not cvc.a6) cvc.a17 cvc.a19 cvc.a20)

  derived clause number: 557
  rule: resolution
  expr args: [ff, cvc.a6]
  clause args: [derived 556, derived 411]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a20 cvc.a5 cvc.a7 cvc.a8)

  derived clause number: 558
  rule: resolution
  expr args: [tt, cvc.a19]
  clause args: [derived 557, derived 536]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a20 cvc.a5 cvc.a7 cvc.a8 (not cvc.a15))

  derived clause number: 559
  rule: resolution
  expr args: [tt, cvc.a7]
  clause args: [derived 558, derived 422]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a20 cvc.a5 cvc.a8 (not cvc.a15) (not cvc.a15))

  derived clause number: 560
  rule: factoring
  expr args: []
  clause args: [derived 559]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a20 cvc.a5 cvc.a8 (not cvc.a15))

  derived clause number: 561
  rule: reordering
  expr args: [(or cvc.a5 cvc.a8 cvc.a17 cvc.a20 (not cvc.a15))]
  clause args: [derived 560]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a8 cvc.a17 cvc.a20 (not cvc.a15))

  derived clause number: 562
  rule: resolution
  expr args: [tt, cvc.a15]
  clause args: [derived 555, derived 561]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a20 cvc.a5 cvc.a8 cvc.a13 cvc.a16 cvc.a5 cvc.a8 cvc.a17 cvc.a20)

  derived clause number: 563
  rule: resolution
  expr args: [tt, cvc.a13]
  clause args: [derived 562, derived 532]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a20 cvc.a5 cvc.a8 cvc.a16 cvc.a5 cvc.a8 cvc.a17 cvc.a20 (not cvc.a9))

  derived clause number: 564
  rule: factoring
  expr args: []
  clause args: [derived 563]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a20 cvc.a5 cvc.a8 cvc.a16 (not cvc.a9))

  derived clause number: 565
  rule: resolution
  expr args: [tt, cvc.a5]
  clause args: [derived 564, derived 518]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a20 cvc.a8 cvc.a16 (not cvc.a9) (not cvc.a9))

  derived clause number: 566
  rule: factoring
  expr args: []
  clause args: [derived 565]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a20 cvc.a8 cvc.a16 (not cvc.a9))

  derived clause number: 567
  rule: reordering
  expr args: [(or cvc.a8 cvc.a16 cvc.a17 cvc.a20 (not cvc.a9))]
  clause args: [derived 566]
  backptr: nil
  conclusion: (or cvc.a8 cvc.a16 cvc.a17 cvc.a20 (not cvc.a9))

  derived clause number: 568
  rule: resolution
  expr args: [tt, cvc.a9]
  clause args: [derived 549, derived 567]
  backptr: nil
  conclusion: (or cvc.a16 cvc.a8 cvc.a17 cvc.a20 cvc.a11 cvc.a12 cvc.a8 cvc.a16 cvc.a17 cvc.a20)

  derived clause number: 569
  rule: resolution
  expr args: [tt, cvc.a12]
  clause args: [derived 568, derived 420]
  backptr: nil
  conclusion: (or cvc.a16 cvc.a8 cvc.a17 cvc.a20 cvc.a11 cvc.a8 cvc.a16 cvc.a17 cvc.a20 (not cvc.a4))

  derived clause number: 570
  rule: factoring
  expr args: []
  clause args: [derived 569]
  backptr: nil
  conclusion: (or cvc.a16 cvc.a8 cvc.a17 cvc.a20 cvc.a11 (not cvc.a4))

  derived clause number: 571
  rule: resolution
  expr args: [tt, cvc.a16]
  clause args: [derived 570, derived 424]
  backptr: nil
  conclusion: (or cvc.a8 cvc.a17 cvc.a20 cvc.a11 (not cvc.a4) (not cvc.a4))

  derived clause number: 572
  rule: resolution
  expr args: [tt, cvc.a20]
  clause args: [derived 571, derived 538]
  backptr: nil
  conclusion: (or cvc.a8 cvc.a17 cvc.a11 (not cvc.a4) (not cvc.a4) (not cvc.a4))

  derived clause number: 573
  rule: resolution
  expr args: [tt, cvc.a8]
  clause args: [derived 572, derived 412]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a11 (not cvc.a4) (not cvc.a4) (not cvc.a4) (not cvc.a4))

  derived clause number: 574
  rule: factoring
  expr args: []
  clause args: [derived 573]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a11 (not cvc.a4))

  derived clause number: 575
  rule: resolution
  expr args: [tt, cvc.a17]
  clause args: [derived 574, derived 502]
  backptr: nil
  conclusion: (or cvc.a11 (not cvc.a4) cvc.a1)

  derived clause number: 576
  rule: resolution
  expr args: [ff, cvc.a13]
  clause args: [derived 532, derived 423]
  backptr: nil
  conclusion: (or (not cvc.a9) cvc.a14 cvc.a15 cvc.a16)

  derived clause number: 577
  rule: resolution
  expr args: [ff, cvc.a9]
  clause args: [derived 576, derived 419]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a16 cvc.a10 cvc.a11 cvc.a12)

  derived clause number: 578
  rule: resolution
  expr args: [tt, cvc.a16]
  clause args: [derived 577, derived 505]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a10 cvc.a11 cvc.a12 (not cvc.a20))

  derived clause number: 579
  rule: resolution
  expr args: [tt, cvc.a12]
  clause args: [derived 578, derived 533]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a10 cvc.a11 (not cvc.a20) (not cvc.a20))

  derived clause number: 580
  rule: factoring
  expr args: []
  clause args: [derived 579]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a10 cvc.a11 (not cvc.a20))

  derived clause number: 581
  rule: resolution
  expr args: [ff, cvc.a20]
  clause args: [derived 580, derived 504]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a10 cvc.a11 cvc.a17 cvc.a18 cvc.a19)

  derived clause number: 582
  rule: resolution
  expr args: [tt, cvc.a18]
  clause args: [derived 581, derived 535]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a10 cvc.a11 cvc.a17 cvc.a19 (not cvc.a2))

  derived clause number: 583
  rule: resolution
  expr args: [tt, cvc.a14]
  clause args: [derived 582, derived 406]
  backptr: nil
  conclusion: (or cvc.a15 cvc.a10 cvc.a11 cvc.a17 cvc.a19 (not cvc.a2) (not cvc.a2))

  derived clause number: 584
  rule: resolution
  expr args: [tt, cvc.a10]
  clause args: [derived 583, derived 426]
  backptr: nil
  conclusion: (or cvc.a15 cvc.a11 cvc.a17 cvc.a19 (not cvc.a2) (not cvc.a2) (not cvc.a2))

  derived clause number: 585
  rule: factoring
  expr args: []
  clause args: [derived 584]
  backptr: nil
  conclusion: (or cvc.a15 cvc.a11 cvc.a17 cvc.a19 (not cvc.a2))

  derived clause number: 586
  rule: resolution
  expr args: [ff, cvc.a2]
  clause args: [derived 585, derived 410]
  backptr: nil
  conclusion: (or cvc.a15 cvc.a11 cvc.a17 cvc.a19 cvc.a1 cvc.a3 cvc.a4)

  derived clause number: 587
  rule: resolution
  expr args: [tt, cvc.a19]
  clause args: [derived 586, derived 537]
  backptr: nil
  conclusion: (or cvc.a15 cvc.a11 cvc.a17 cvc.a1 cvc.a3 cvc.a4 (not cvc.a7))

  derived clause number: 588
  rule: resolution
  expr args: [tt, cvc.a15]
  clause args: [derived 587, derived 422]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a17 cvc.a1 cvc.a3 cvc.a4 (not cvc.a7) (not cvc.a7))

  derived clause number: 589
  rule: resolution
  expr args: [tt, cvc.a3]
  clause args: [derived 588, derived 421]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a17 cvc.a1 cvc.a4 (not cvc.a7) (not cvc.a7) (not cvc.a7))

  derived clause number: 590
  rule: resolution
  expr args: [tt, cvc.a17]
  clause args: [derived 589, derived 502]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a1 cvc.a4 (not cvc.a7) (not cvc.a7) (not cvc.a7) cvc.a1)

  derived clause number: 591
  rule: factoring
  expr args: []
  clause args: [derived 590]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a1 cvc.a4 (not cvc.a7))

  derived clause number: 592
  rule: resolution
  expr args: [tt, cvc.a15]
  clause args: [derived 423, derived 536]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a16 (not cvc.a19))

  derived clause number: 593
  rule: resolution
  expr args: [tt, cvc.a13]
  clause args: [derived 592, derived 532]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a16 (not cvc.a19) (not cvc.a9))

  derived clause number: 594
  rule: resolution
  expr args: [ff, cvc.a19]
  clause args: [derived 593, derived 504]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a16 (not cvc.a9) cvc.a17 cvc.a18 cvc.a20)

  derived clause number: 595
  rule: resolution
  expr args: [ff, cvc.a9]
  clause args: [derived 594, derived 419]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a16 cvc.a17 cvc.a18 cvc.a20 cvc.a10 cvc.a11 cvc.a12)

  derived clause number: 596
  rule: resolution
  expr args: [tt, cvc.a20]
  clause args: [derived 595, derived 404]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a16 cvc.a17 cvc.a18 cvc.a10 cvc.a11 cvc.a12 (not cvc.a8))

  derived clause number: 597
  rule: resolution
  expr args: [tt, cvc.a16]
  clause args: [derived 596, derived 428]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a17 cvc.a18 cvc.a10 cvc.a11 cvc.a12 (not cvc.a8) (not cvc.a8))

  derived clause number: 598
  rule: resolution
  expr args: [tt, cvc.a12]
  clause args: [derived 597, derived 403]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a17 cvc.a18 cvc.a10 cvc.a11 (not cvc.a8) (not cvc.a8) (not cvc.a8))

  derived clause number: 599
  rule: factoring
  expr args: []
  clause args: [derived 598]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a17 cvc.a18 cvc.a10 cvc.a11 (not cvc.a8))

  derived clause number: 600
  rule: resolution
  expr args: [ff, cvc.a8]
  clause args: [derived 599, derived 411]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a17 cvc.a18 cvc.a10 cvc.a11 cvc.a5 cvc.a6 cvc.a7)

  derived clause number: 601
  rule: resolution
  expr args: [tt, cvc.a20]
  clause args: [derived 504, derived 533]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a18 cvc.a19 (not cvc.a12))

  derived clause number: 602
  rule: resolution
  expr args: [tt, cvc.a19]
  clause args: [derived 601, derived 536]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a18 (not cvc.a12) (not cvc.a15))

  derived clause number: 603
  rule: resolution
  expr args: [ff, cvc.a12]
  clause args: [derived 602, derived 419]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a18 (not cvc.a15) cvc.a9 cvc.a10 cvc.a11)

  derived clause number: 604
  rule: resolution
  expr args: [ff, cvc.a15]
  clause args: [derived 603, derived 524]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a18 cvc.a9 cvc.a10 cvc.a11 cvc.a10 cvc.a11 cvc.a14 (not cvc.a5))

  derived clause number: 605
  rule: resolution
  expr args: [tt, cvc.a9]
  clause args: [derived 604, derived 518]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a18 cvc.a10 cvc.a11 cvc.a10 cvc.a11 cvc.a14 (not cvc.a5) (not cvc.a5))

  derived clause number: 606
  rule: factoring
  expr args: []
  clause args: [derived 605]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a18 cvc.a10 cvc.a11 cvc.a14 (not cvc.a5))

  derived clause number: 607
  rule: reordering
  expr args: [(or cvc.a10 cvc.a11 cvc.a14 cvc.a17 cvc.a18 (not cvc.a5))]
  clause args: [derived 606]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a11 cvc.a14 cvc.a17 cvc.a18 (not cvc.a5))

  derived clause number: 608
  rule: resolution
  expr args: [tt, cvc.a5]
  clause args: [derived 600, derived 607]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a17 cvc.a18 cvc.a10 cvc.a11 cvc.a6 cvc.a7 cvc.a10 cvc.a11 cvc.a14 cvc.a17 cvc.a18)

  derived clause number: 609
  rule: factoring
  expr args: []
  clause args: [derived 608]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a17 cvc.a18 cvc.a10 cvc.a11 cvc.a6 cvc.a7)

  derived clause number: 610
  rule: resolution
  expr args: [tt, cvc.a10]
  clause args: [derived 609, derived 426]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a17 cvc.a18 cvc.a11 cvc.a6 cvc.a7 (not cvc.a2))

  derived clause number: 611
  rule: resolution
  expr args: [tt, cvc.a14]
  clause args: [derived 610, derived 406]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a18 cvc.a11 cvc.a6 cvc.a7 (not cvc.a2) (not cvc.a2))

  derived clause number: 612
  rule: resolution
  expr args: [tt, cvc.a18]
  clause args: [derived 611, derived 535]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a11 cvc.a6 cvc.a7 (not cvc.a2) (not cvc.a2) (not cvc.a2))

  derived clause number: 613
  rule: resolution
  expr args: [tt, cvc.a6]
  clause args: [derived 612, derived 427]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a11 cvc.a7 (not cvc.a2) (not cvc.a2) (not cvc.a2) (not cvc.a2))

  derived clause number: 614
  rule: factoring
  expr args: []
  clause args: [derived 613]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a11 cvc.a7 (not cvc.a2))

  derived clause number: 615
  rule: resolution
  expr args: [ff, cvc.a2]
  clause args: [derived 614, derived 410]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a11 cvc.a7 cvc.a1 cvc.a3 cvc.a4)

  derived clause number: 616
  rule: resolution
  expr args: [ff, cvc.a9]
  clause args: [derived 518, derived 419]
  backptr: nil
  conclusion: (or (not cvc.a5) cvc.a10 cvc.a11 cvc.a12)

  derived clause number: 617
  rule: resolution
  expr args: [ff, cvc.a5]
  clause args: [derived 616, derived 411]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a11 cvc.a12 cvc.a6 cvc.a7 cvc.a8)

  derived clause number: 618
  rule: resolution
  expr args: [tt, cvc.a12]
  clause args: [derived 617, derived 533]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a11 cvc.a6 cvc.a7 cvc.a8 (not cvc.a20))

  derived clause number: 619
  rule: resolution
  expr args: [tt, cvc.a8]
  clause args: [derived 618, derived 404]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a11 cvc.a6 cvc.a7 (not cvc.a20) (not cvc.a20))

  derived clause number: 620
  rule: factoring
  expr args: []
  clause args: [derived 619]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a11 cvc.a6 cvc.a7 (not cvc.a20))

  derived clause number: 621
  rule: resolution
  expr args: [ff, cvc.a20]
  clause args: [derived 620, derived 504]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a11 cvc.a6 cvc.a7 cvc.a17 cvc.a18 cvc.a19)

  derived clause number: 622
  rule: resolution
  expr args: [tt, cvc.a18]
  clause args: [derived 621, derived 534]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a11 cvc.a6 cvc.a7 cvc.a17 cvc.a19 (not cvc.a14))

  derived clause number: 623
  rule: resolution
  expr args: [tt, cvc.a6]
  clause args: [derived 622, derived 405]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a11 cvc.a7 cvc.a17 cvc.a19 (not cvc.a14) (not cvc.a14))

  derived clause number: 624
  rule: factoring
  expr args: []
  clause args: [derived 623]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a11 cvc.a7 cvc.a17 cvc.a19 (not cvc.a14))

  derived clause number: 625
  rule: resolution
  expr args: [ff, cvc.a18]
  clause args: [derived 525, derived 504]
  backptr: nil
  conclusion: (or (not cvc.a6) cvc.a17 cvc.a19 cvc.a20)

  derived clause number: 626
  rule: resolution
  expr args: [ff, cvc.a6]
  clause args: [derived 625, derived 411]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a20 cvc.a5 cvc.a7 cvc.a8)

  derived clause number: 627
  rule: resolution
  expr args: [tt, cvc.a20]
  clause args: [derived 626, derived 533]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a5 cvc.a7 cvc.a8 (not cvc.a12))

  derived clause number: 628
  rule: resolution
  expr args: [tt, cvc.a8]
  clause args: [derived 627, derived 403]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a5 cvc.a7 (not cvc.a12) (not cvc.a12))

  derived clause number: 629
  rule: factoring
  expr args: []
  clause args: [derived 628]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a5 cvc.a7 (not cvc.a12))

  derived clause number: 630
  rule: resolution
  expr args: [ff, cvc.a12]
  clause args: [derived 629, derived 419]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a5 cvc.a7 cvc.a9 cvc.a10 cvc.a11)

  derived clause number: 631
  rule: resolution
  expr args: [tt, cvc.a9]
  clause args: [derived 630, derived 532]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a5 cvc.a7 cvc.a10 cvc.a11 (not cvc.a13))

  derived clause number: 632
  rule: resolution
  expr args: [ff, cvc.a13]
  clause args: [derived 631, derived 423]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a5 cvc.a7 cvc.a10 cvc.a11 cvc.a14 cvc.a15 cvc.a16)

  derived clause number: 633
  rule: resolution
  expr args: [tt, cvc.a16]
  clause args: [derived 632, derived 531]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a5 cvc.a7 cvc.a10 cvc.a11 cvc.a14 cvc.a15 cvc.a5 cvc.a7 cvc.a17 cvc.a19)

  derived clause number: 634
  rule: factoring
  expr args: []
  clause args: [derived 633]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a5 cvc.a7 cvc.a10 cvc.a11 cvc.a14 cvc.a15)

  derived clause number: 635
  rule: resolution
  expr args: [tt, cvc.a5]
  clause args: [derived 634, derived 524]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a7 cvc.a10 cvc.a11 cvc.a14 cvc.a15 cvc.a10 cvc.a11 cvc.a14 cvc.a15)

  derived clause number: 636
  rule: factoring
  expr args: []
  clause args: [derived 635]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a7 cvc.a10 cvc.a11 cvc.a14 cvc.a15)

  derived clause number: 637
  rule: resolution
  expr args: [tt, cvc.a10]
  clause args: [derived 636, derived 517]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a7 cvc.a11 cvc.a14 cvc.a15 cvc.a7 cvc.a15 cvc.a17 cvc.a19)

  derived clause number: 638
  rule: factoring
  expr args: []
  clause args: [derived 637]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a7 cvc.a11 cvc.a14 cvc.a15)

  derived clause number: 639
  rule: reordering
  expr args: [(or cvc.a7 cvc.a11 cvc.a14 cvc.a15 cvc.a17 cvc.a19)]
  clause args: [derived 638]
  backptr: nil
  conclusion: (or cvc.a7 cvc.a11 cvc.a14 cvc.a15 cvc.a17 cvc.a19)

  derived clause number: 640
  rule: resolution
  expr args: [ff, cvc.a14]
  clause args: [derived 624, derived 639]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a11 cvc.a7 cvc.a17 cvc.a19 cvc.a7 cvc.a11 cvc.a15 cvc.a17 cvc.a19)

  derived clause number: 641
  rule: resolution
  expr args: [tt, cvc.a10]
  clause args: [derived 640, derived 517]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a7 cvc.a17 cvc.a19 cvc.a7 cvc.a11 cvc.a15 cvc.a17 cvc.a19 cvc.a7 cvc.a15 cvc.a17 cvc.a19)

  derived clause number: 642
  rule: factoring
  expr args: []
  clause args: [derived 641]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a7 cvc.a17 cvc.a19 cvc.a15)

  derived clause number: 643
  rule: resolution
  expr args: [tt, cvc.a15]
  clause args: [derived 642, derived 437]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a7 cvc.a17 cvc.a19 (not cvc.a3))

  derived clause number: 644
  rule: and_elim
  expr args: [58]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a3) (not cvc.a19))

  derived clause number: 645
  rule: resolution
  expr args: [tt, cvc.a19]
  clause args: [derived 643, derived 644]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a7 cvc.a17 (not cvc.a3) (not cvc.a3))

  derived clause number: 646
  rule: factoring
  expr args: []
  clause args: [derived 645]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a7 cvc.a17 (not cvc.a3))

  derived clause number: 647
  rule: reordering
  expr args: [(or cvc.a7 cvc.a11 cvc.a17 (not cvc.a3))]
  clause args: [derived 646]
  backptr: nil
  conclusion: (or cvc.a7 cvc.a11 cvc.a17 (not cvc.a3))

  derived clause number: 648
  rule: resolution
  expr args: [tt, cvc.a3]
  clause args: [derived 615, derived 647]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a11 cvc.a7 cvc.a1 cvc.a4 cvc.a7 cvc.a11 cvc.a17)

  derived clause number: 649
  rule: factoring
  expr args: []
  clause args: [derived 648]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a11 cvc.a7 cvc.a1 cvc.a4)

  derived clause number: 650
  rule: resolution
  expr args: [tt, cvc.a17]
  clause args: [derived 649, derived 502]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a7 cvc.a1 cvc.a4 cvc.a1)

  derived clause number: 651
  rule: factoring
  expr args: []
  clause args: [derived 650]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a7 cvc.a1 cvc.a4)

  derived clause number: 652
  rule: reordering
  expr args: [(or cvc.a1 cvc.a4 cvc.a7 cvc.a11)]
  clause args: [derived 651]
  backptr: nil
  conclusion: (or cvc.a1 cvc.a4 cvc.a7 cvc.a11)

  derived clause number: 653
  rule: resolution
  expr args: [ff, cvc.a7]
  clause args: [derived 591, derived 652]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a1 cvc.a4 cvc.a1 cvc.a4 cvc.a11)

  derived clause number: 654
  rule: factoring
  expr args: []
  clause args: [derived 653]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a1 cvc.a4)

  derived clause number: 655
  rule: reordering
  expr args: [(or cvc.a1 cvc.a4 cvc.a11)]
  clause args: [derived 654]
  backptr: nil
  conclusion: (or cvc.a1 cvc.a4 cvc.a11)

  derived clause number: 656
  rule: resolution
  expr args: [ff, cvc.a4]
  clause args: [derived 575, derived 655]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a1 cvc.a1 cvc.a11)

  derived clause number: 657
  rule: factoring
  expr args: []
  clause args: [derived 656]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a1)

  derived clause number: 658
  rule: reordering
  expr args: [(or cvc.a1 cvc.a11)]
  clause args: [derived 657]
  backptr: nil
  conclusion: (or cvc.a1 cvc.a11)

  derived clause number: 659
  rule: and_elim
  expr args: [63]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a11) (not cvc.a19))

  derived clause number: 660
  rule: resolution
  expr args: [ff, cvc.a20]
  clause args: [derived 538, derived 504]
  backptr: nil
  conclusion: (or (not cvc.a4) cvc.a17 cvc.a18 cvc.a19)

  derived clause number: 661
  rule: resolution
  expr args: [ff, cvc.a4]
  clause args: [derived 660, derived 410]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a18 cvc.a19 cvc.a1 cvc.a2 cvc.a3)

  derived clause number: 662
  rule: resolution
  expr args: [tt, cvc.a18]
  clause args: [derived 661, derived 534]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a1 cvc.a2 cvc.a3 (not cvc.a14))

  derived clause number: 663
  rule: resolution
  expr args: [tt, cvc.a2]
  clause args: [derived 662, derived 406]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a1 cvc.a3 (not cvc.a14) (not cvc.a14))

  derived clause number: 664
  rule: resolution
  expr args: [tt, cvc.a3]
  clause args: [derived 663, derived 408]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a1 (not cvc.a14) (not cvc.a14) (not cvc.a11))

  derived clause number: 665
  rule: resolution
  expr args: [tt, cvc.a19]
  clause args: [derived 664, derived 659]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a1 (not cvc.a14) (not cvc.a14) (not cvc.a11) (not cvc.a11))

  derived clause number: 666
  rule: resolution
  expr args: [tt, cvc.a17]
  clause args: [derived 665, derived 502]
  backptr: nil
  conclusion: (or cvc.a1 (not cvc.a14) (not cvc.a14) (not cvc.a11) (not cvc.a11) cvc.a1)

  derived clause number: 667
  rule: factoring
  expr args: []
  clause args: [derived 666]
  backptr: nil
  conclusion: (or cvc.a1 (not cvc.a14) (not cvc.a11))

  derived clause number: 668
  rule: resolution
  expr args: [ff, cvc.a11]
  clause args: [derived 667, derived 658]
  backptr: nil
  conclusion: (or cvc.a1 (not cvc.a14) cvc.a1)

  derived clause number: 669
  rule: factoring
  expr args: []
  clause args: [derived 668]
  backptr: nil
  conclusion: (or cvc.a1 (not cvc.a14))

  derived clause number: 670
  rule: resolution
  expr args: [tt, cvc.a20]
  clause args: [derived 504, derived 505]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a18 cvc.a19 (not cvc.a16))

  derived clause number: 671
  rule: resolution
  expr args: [tt, cvc.a18]
  clause args: [derived 670, derived 535]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 (not cvc.a16) (not cvc.a2))

  derived clause number: 672
  rule: resolution
  expr args: [ff, cvc.a16]
  clause args: [derived 671, derived 423]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 (not cvc.a2) cvc.a13 cvc.a14 cvc.a15)

  derived clause number: 673
  rule: resolution
  expr args: [ff, cvc.a2]
  clause args: [derived 672, derived 435]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a13 cvc.a14 cvc.a15 cvc.a1 cvc.a13 cvc.a14 (not cvc.a11))

  derived clause number: 674
  rule: resolution
  expr args: [tt, cvc.a15]
  clause args: [derived 673, derived 429]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a19 cvc.a13 cvc.a14 cvc.a1 cvc.a13 cvc.a14 (not cvc.a11) (not cvc.a11))

  derived clause number: 675
  rule: resolution
  expr args: [tt, cvc.a19]
  clause args: [derived 674, derived 659]
  backptr: nil
  conclusion: (or cvc.a17 cvc.a13 cvc.a14 cvc.a1 cvc.a13 cvc.a14 (not cvc.a11) (not cvc.a11) (not cvc.a11))

  derived clause number: 676
  rule: resolution
  expr args: [tt, cvc.a17]
  clause args: [derived 675, derived 502]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a1 cvc.a13 cvc.a14 (not cvc.a11) (not cvc.a11) (not cvc.a11) cvc.a1)

  derived clause number: 677
  rule: factoring
  expr args: []
  clause args: [derived 676]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a1 (not cvc.a11))

  derived clause number: 678
  rule: resolution
  expr args: [ff, cvc.a11]
  clause args: [derived 677, derived 658]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a1 cvc.a1)

  derived clause number: 679
  rule: factoring
  expr args: []
  clause args: [derived 678]
  backptr: nil
  conclusion: (or cvc.a13 cvc.a14 cvc.a1)

  derived clause number: 680
  rule: reordering
  expr args: [(or cvc.a1 cvc.a13 cvc.a14)]
  clause args: [derived 679]
  backptr: nil
  conclusion: (or cvc.a1 cvc.a13 cvc.a14)

  derived clause number: 681
  rule: resolution
  expr args: [tt, cvc.a6]
  clause args: [derived 418, derived 525]
  backptr: nil
  conclusion: (or cvc.a1 cvc.a2 cvc.a5 (not cvc.a11) (not cvc.a18))

  derived clause number: 682
  rule: resolution
  expr args: [tt, cvc.a2]
  clause args: [derived 681, derived 535]
  backptr: nil
  conclusion: (or cvc.a1 cvc.a5 (not cvc.a11) (not cvc.a18) (not cvc.a18))

  derived clause number: 683
  rule: factoring
  expr args: []
  clause args: [derived 682]
  backptr: nil
  conclusion: (or cvc.a1 cvc.a5 (not cvc.a11) (not cvc.a18))

  derived clause number: 684
  rule: resolution
  expr args: [ff, cvc.a18]
  clause args: [derived 683, derived 504]
  backptr: nil
  conclusion: (or cvc.a1 cvc.a5 (not cvc.a11) cvc.a17 cvc.a19 cvc.a20)

  derived clause number: 685
  rule: resolution
  expr args: [ff, cvc.a6]
  clause args: [derived 427, derived 411]
  backptr: nil
  conclusion: (or (not cvc.a2) cvc.a5 cvc.a7 cvc.a8)

  derived clause number: 686
  rule: resolution
  expr args: [ff, cvc.a2]
  clause args: [derived 685, derived 410]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a7 cvc.a8 cvc.a1 cvc.a3 cvc.a4)

  derived clause number: 687
  rule: resolution
  expr args: [tt, cvc.a8]
  clause args: [derived 686, derived 404]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a7 cvc.a1 cvc.a3 cvc.a4 (not cvc.a20))

  derived clause number: 688
  rule: resolution
  expr args: [tt, cvc.a4]
  clause args: [derived 687, derived 538]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a7 cvc.a1 cvc.a3 (not cvc.a20) (not cvc.a20))

  derived clause number: 689
  rule: resolution
  expr args: [tt, cvc.a3]
  clause args: [derived 688, derived 408]
  backptr: nil
  conclusion: (or cvc.a5 cvc.a7 cvc.a1 (not cvc.a20) (not cvc.a20) (not cvc.a11))

  derived clause number: 690
  rule: resolution
  expr args: [tt, cvc.a5]
  clause args: [derived 689, derived 506]
  backptr: nil
  conclusion: (or cvc.a7 cvc.a1 (not cvc.a20) (not cvc.a20) (not cvc.a11) (not cvc.a13))

  derived clause number: 691
  rule: resolution
  expr args: [ff, cvc.a13]
  clause args: [derived 690, derived 680]
  backptr: nil
  conclusion: (or cvc.a7 cvc.a1 (not cvc.a20) (not cvc.a20) (not cvc.a11) cvc.a1 cvc.a14)

  derived clause number: 692
  rule: resolution
  expr args: [tt, cvc.a14]
  clause args: [derived 691, derived 669]
  backptr: nil
  conclusion: (or cvc.a7 cvc.a1 (not cvc.a20) (not cvc.a20) (not cvc.a11) cvc.a1 cvc.a1)

  derived clause number: 693
  rule: resolution
  expr args: [tt, cvc.a7]
  clause args: [derived 692, derived 409]
  backptr: nil
  conclusion: (or cvc.a1 (not cvc.a20) (not cvc.a20) (not cvc.a11) cvc.a1 cvc.a1 (not cvc.a11))

  derived clause number: 694
  rule: factoring
  expr args: []
  clause args: [derived 693]
  backptr: nil
  conclusion: (or cvc.a1 (not cvc.a20) (not cvc.a11))

  derived clause number: 695
  rule: resolution
  expr args: [ff, cvc.a11]
  clause args: [derived 694, derived 658]
  backptr: nil
  conclusion: (or cvc.a1 (not cvc.a20) cvc.a1)

  derived clause number: 696
  rule: factoring
  expr args: []
  clause args: [derived 695]
  backptr: nil
  conclusion: (or cvc.a1 (not cvc.a20))

  derived clause number: 697
  rule: resolution
  expr args: [tt, cvc.a20]
  clause args: [derived 684, derived 696]
  backptr: nil
  conclusion: (or cvc.a1 cvc.a5 (not cvc.a11) cvc.a17 cvc.a19 cvc.a1)

  derived clause number: 698
  rule: resolution
  expr args: [tt, cvc.a5]
  clause args: [derived 697, derived 506]
  backptr: nil
  conclusion: (or cvc.a1 (not cvc.a11) cvc.a17 cvc.a19 cvc.a1 (not cvc.a13))

  derived clause number: 699
  rule: resolution
  expr args: [ff, cvc.a13]
  clause args: [derived 698, derived 680]
  backptr: nil
  conclusion: (or cvc.a1 (not cvc.a11) cvc.a17 cvc.a19 cvc.a1 cvc.a1 cvc.a14)

  derived clause number: 700
  rule: resolution
  expr args: [tt, cvc.a14]
  clause args: [derived 699, derived 669]
  backptr: nil
  conclusion: (or cvc.a1 (not cvc.a11) cvc.a17 cvc.a19 cvc.a1 cvc.a1 cvc.a1)

  derived clause number: 701
  rule: resolution
  expr args: [tt, cvc.a19]
  clause args: [derived 700, derived 659]
  backptr: nil
  conclusion: (or cvc.a1 (not cvc.a11) cvc.a17 cvc.a1 cvc.a1 cvc.a1 (not cvc.a11))

  derived clause number: 702
  rule: resolution
  expr args: [tt, cvc.a17]
  clause args: [derived 701, derived 502]
  backptr: nil
  conclusion: (or cvc.a1 (not cvc.a11) cvc.a1 cvc.a1 cvc.a1 (not cvc.a11) cvc.a1)

  derived clause number: 703
  rule: factoring
  expr args: []
  clause args: [derived 702]
  backptr: nil
  conclusion: (or cvc.a1 (not cvc.a11))

  derived clause number: 704
  rule: resolution
  expr args: [ff, cvc.a11]
  clause args: [derived 703, derived 658]
  backptr: nil
  conclusion: (or cvc.a1 cvc.a1)

  derived clause number: 705
  rule: factoring
  expr args: []
  clause args: [derived 704]
  backptr: nil
  conclusion: (or cvc.a1)

  derived clause number: 706
  rule: and_elim
  expr args: [36]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a1) (not cvc.a9))

  derived clause number: 707
  rule: resolution
  expr args: [ff, cvc.a1]
  clause args: [derived 706, derived 705]
  backptr: nil
  conclusion: (not cvc.a9)

  derived clause number: 708
  rule: and_elim
  expr args: [38]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a1) (not cvc.a17))

  derived clause number: 709
  rule: resolution
  expr args: [ff, cvc.a1]
  clause args: [derived 708, derived 705]
  backptr: nil
  conclusion: (not cvc.a17)

  derived clause number: 710
  rule: and_elim
  expr args: [35]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a1) (not cvc.a5))

  derived clause number: 711
  rule: resolution
  expr args: [ff, cvc.a1]
  clause args: [derived 710, derived 705]
  backptr: nil
  conclusion: (not cvc.a5)

  derived clause number: 712
  rule: and_elim
  expr args: [37]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a1) (not cvc.a13))

  derived clause number: 713
  rule: resolution
  expr args: [ff, cvc.a1]
  clause args: [derived 712, derived 705]
  backptr: nil
  conclusion: (not cvc.a13)

  derived clause number: 714
  rule: resolution
  expr args: [ff, cvc.a10]
  clause args: [derived 436, derived 419]
  backptr: nil
  conclusion: (or (not cvc.a6) cvc.a9 cvc.a11 cvc.a12)

  derived clause number: 715
  rule: resolution
  expr args: [tt, cvc.a9]
  clause args: [derived 714, derived 707]
  backptr: nil
  conclusion: (or (not cvc.a6) cvc.a11 cvc.a12)

  derived clause number: 716
  rule: resolution
  expr args: [ff, cvc.a6]
  clause args: [derived 715, derived 411]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a12 cvc.a5 cvc.a7 cvc.a8)

  derived clause number: 717
  rule: resolution
  expr args: [tt, cvc.a5]
  clause args: [derived 716, derived 711]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a12 cvc.a7 cvc.a8)

  derived clause number: 718
  rule: resolution
  expr args: [tt, cvc.a12]
  clause args: [derived 717, derived 425]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a7 cvc.a8 (not cvc.a16))

  derived clause number: 719
  rule: resolution
  expr args: [tt, cvc.a8]
  clause args: [derived 718, derived 428]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a7 (not cvc.a16) (not cvc.a16))

  derived clause number: 720
  rule: factoring
  expr args: []
  clause args: [derived 719]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a7 (not cvc.a16))

  derived clause number: 721
  rule: resolution
  expr args: [ff, cvc.a16]
  clause args: [derived 720, derived 423]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a7 cvc.a13 cvc.a14 cvc.a15)

  derived clause number: 722
  rule: resolution
  expr args: [tt, cvc.a13]
  clause args: [derived 721, derived 713]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a7 cvc.a14 cvc.a15)

  derived clause number: 723
  rule: resolution
  expr args: [tt, cvc.a15]
  clause args: [derived 722, derived 536]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a7 cvc.a14 (not cvc.a19))

  derived clause number: 724
  rule: resolution
  expr args: [tt, cvc.a11]
  clause args: [derived 723, derived 659]
  backptr: nil
  conclusion: (or cvc.a7 cvc.a14 (not cvc.a19) (not cvc.a19))

  derived clause number: 725
  rule: resolution
  expr args: [tt, cvc.a7]
  clause args: [derived 724, derived 537]
  backptr: nil
  conclusion: (or cvc.a14 (not cvc.a19) (not cvc.a19) (not cvc.a19))

  derived clause number: 726
  rule: factoring
  expr args: []
  clause args: [derived 725]
  backptr: nil
  conclusion: (or cvc.a14 (not cvc.a19))

  derived clause number: 727
  rule: resolution
  expr args: [ff, cvc.a19]
  clause args: [derived 726, derived 504]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a17 cvc.a18 cvc.a20)

  derived clause number: 728
  rule: resolution
  expr args: [tt, cvc.a17]
  clause args: [derived 727, derived 709]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a18 cvc.a20)

  derived clause number: 729
  rule: resolution
  expr args: [ff, cvc.a10]
  clause args: [derived 436, derived 419]
  backptr: nil
  conclusion: (or (not cvc.a6) cvc.a9 cvc.a11 cvc.a12)

  derived clause number: 730
  rule: resolution
  expr args: [tt, cvc.a9]
  clause args: [derived 729, derived 707]
  backptr: nil
  conclusion: (or (not cvc.a6) cvc.a11 cvc.a12)

  derived clause number: 731
  rule: resolution
  expr args: [ff, cvc.a6]
  clause args: [derived 730, derived 411]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a12 cvc.a5 cvc.a7 cvc.a8)

  derived clause number: 732
  rule: resolution
  expr args: [tt, cvc.a5]
  clause args: [derived 731, derived 711]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a12 cvc.a7 cvc.a8)

  derived clause number: 733
  rule: resolution
  expr args: [tt, cvc.a11]
  clause args: [derived 732, derived 429]
  backptr: nil
  conclusion: (or cvc.a12 cvc.a7 cvc.a8 (not cvc.a15))

  derived clause number: 734
  rule: resolution
  expr args: [tt, cvc.a7]
  clause args: [derived 733, derived 422]
  backptr: nil
  conclusion: (or cvc.a12 cvc.a8 (not cvc.a15) (not cvc.a15))

  derived clause number: 735
  rule: factoring
  expr args: []
  clause args: [derived 734]
  backptr: nil
  conclusion: (or cvc.a12 cvc.a8 (not cvc.a15))

  derived clause number: 736
  rule: resolution
  expr args: [ff, cvc.a15]
  clause args: [derived 735, derived 423]
  backptr: nil
  conclusion: (or cvc.a12 cvc.a8 cvc.a13 cvc.a14 cvc.a16)

  derived clause number: 737
  rule: resolution
  expr args: [tt, cvc.a13]
  clause args: [derived 736, derived 713]
  backptr: nil
  conclusion: (or cvc.a12 cvc.a8 cvc.a14 cvc.a16)

  derived clause number: 738
  rule: resolution
  expr args: [tt, cvc.a16]
  clause args: [derived 737, derived 505]
  backptr: nil
  conclusion: (or cvc.a12 cvc.a8 cvc.a14 (not cvc.a20))

  derived clause number: 739
  rule: resolution
  expr args: [tt, cvc.a12]
  clause args: [derived 738, derived 533]
  backptr: nil
  conclusion: (or cvc.a8 cvc.a14 (not cvc.a20) (not cvc.a20))

  derived clause number: 740
  rule: resolution
  expr args: [tt, cvc.a8]
  clause args: [derived 739, derived 404]
  backptr: nil
  conclusion: (or cvc.a14 (not cvc.a20) (not cvc.a20) (not cvc.a20))

  derived clause number: 741
  rule: factoring
  expr args: []
  clause args: [derived 740]
  backptr: nil
  conclusion: (or cvc.a14 (not cvc.a20))

  derived clause number: 742
  rule: resolution
  expr args: [tt, cvc.a20]
  clause args: [derived 728, derived 741]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a18 cvc.a14)

  derived clause number: 743
  rule: resolution
  expr args: [ff, cvc.a16]
  clause args: [derived 425, derived 423]
  backptr: nil
  conclusion: (or (not cvc.a12) cvc.a13 cvc.a14 cvc.a15)

  derived clause number: 744
  rule: resolution
  expr args: [tt, cvc.a13]
  clause args: [derived 743, derived 713]
  backptr: nil
  conclusion: (or (not cvc.a12) cvc.a14 cvc.a15)

  derived clause number: 745
  rule: resolution
  expr args: [ff, cvc.a12]
  clause args: [derived 744, derived 419]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a9 cvc.a10 cvc.a11)

  derived clause number: 746
  rule: resolution
  expr args: [tt, cvc.a9]
  clause args: [derived 745, derived 707]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a15 cvc.a10 cvc.a11)

  derived clause number: 747
  rule: resolution
  expr args: [tt, cvc.a15]
  clause args: [derived 746, derived 422]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a10 cvc.a11 (not cvc.a7))

  derived clause number: 748
  rule: resolution
  expr args: [tt, cvc.a11]
  clause args: [derived 747, derived 409]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a10 (not cvc.a7) (not cvc.a7))

  derived clause number: 749
  rule: factoring
  expr args: []
  clause args: [derived 748]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a10 (not cvc.a7))

  derived clause number: 750
  rule: resolution
  expr args: [tt, cvc.a9]
  clause args: [derived 419, derived 707]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a11 cvc.a12)

  derived clause number: 751
  rule: resolution
  expr args: [tt, cvc.a11]
  clause args: [derived 750, derived 429]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a12 (not cvc.a15))

  derived clause number: 752
  rule: resolution
  expr args: [tt, cvc.a12]
  clause args: [derived 751, derived 403]
  backptr: nil
  conclusion: (or cvc.a10 (not cvc.a15) (not cvc.a8))

  derived clause number: 753
  rule: resolution
  expr args: [ff, cvc.a15]
  clause args: [derived 752, derived 423]
  backptr: nil
  conclusion: (or cvc.a10 (not cvc.a8) cvc.a13 cvc.a14 cvc.a16)

  derived clause number: 754
  rule: resolution
  expr args: [tt, cvc.a13]
  clause args: [derived 753, derived 713]
  backptr: nil
  conclusion: (or cvc.a10 (not cvc.a8) cvc.a14 cvc.a16)

  derived clause number: 755
  rule: resolution
  expr args: [ff, cvc.a8]
  clause args: [derived 754, derived 411]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a14 cvc.a16 cvc.a5 cvc.a6 cvc.a7)

  derived clause number: 756
  rule: resolution
  expr args: [tt, cvc.a5]
  clause args: [derived 755, derived 711]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a14 cvc.a16 cvc.a6 cvc.a7)

  derived clause number: 757
  rule: resolution
  expr args: [tt, cvc.a16]
  clause args: [derived 756, derived 531]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a14 cvc.a6 cvc.a7 cvc.a5 cvc.a7 cvc.a17 cvc.a19)

  derived clause number: 758
  rule: resolution
  expr args: [tt, cvc.a5]
  clause args: [derived 757, derived 711]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a14 cvc.a6 cvc.a7 cvc.a7 cvc.a17 cvc.a19)

  derived clause number: 759
  rule: resolution
  expr args: [tt, cvc.a17]
  clause args: [derived 758, derived 709]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a14 cvc.a6 cvc.a7 cvc.a7 cvc.a19)

  derived clause number: 760
  rule: factoring
  expr args: []
  clause args: [derived 759]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a14 cvc.a6 cvc.a7 cvc.a19)

  derived clause number: 761
  rule: reordering
  expr args: [(or cvc.a6 cvc.a7 cvc.a10 cvc.a14 cvc.a19)]
  clause args: [derived 760]
  backptr: nil
  conclusion: (or cvc.a6 cvc.a7 cvc.a10 cvc.a14 cvc.a19)

  derived clause number: 762
  rule: resolution
  expr args: [ff, cvc.a7]
  clause args: [derived 749, derived 761]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a10 cvc.a6 cvc.a10 cvc.a14 cvc.a19)

  derived clause number: 763
  rule: resolution
  expr args: [tt, cvc.a6]
  clause args: [derived 762, derived 525]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a10 cvc.a10 cvc.a14 cvc.a19 (not cvc.a18))

  derived clause number: 764
  rule: and_elim
  expr args: [32]
  clause args: [derived 402]
  backptr: nil
  conclusion: (or (not cvc.a18) (not cvc.a19))

  derived clause number: 765
  rule: resolution
  expr args: [tt, cvc.a19]
  clause args: [derived 763, derived 764]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a10 cvc.a10 cvc.a14 (not cvc.a18) (not cvc.a18))

  derived clause number: 766
  rule: factoring
  expr args: []
  clause args: [derived 765]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a10 (not cvc.a18))

  derived clause number: 767
  rule: resolution
  expr args: [tt, cvc.a10]
  clause args: [derived 766, derived 503]
  backptr: nil
  conclusion: (or cvc.a14 (not cvc.a18) (not cvc.a18))

  derived clause number: 768
  rule: factoring
  expr args: []
  clause args: [derived 767]
  backptr: nil
  conclusion: (or cvc.a14 (not cvc.a18))

  derived clause number: 769
  rule: resolution
  expr args: [tt, cvc.a18]
  clause args: [derived 742, derived 768]
  backptr: nil
  conclusion: (or cvc.a14 cvc.a14 cvc.a14)

  derived clause number: 770
  rule: factoring
  expr args: []
  clause args: [derived 769]
  backptr: nil
  conclusion: (or cvc.a14)

  derived clause number: 771
  rule: resolution
  expr args: [ff, cvc.a14]
  clause args: [derived 407, derived 770]
  backptr: nil
  conclusion: (not cvc.a10)

  derived clause number: 772
  rule: resolution
  expr args: [ff, cvc.a14]
  clause args: [derived 534, derived 770]
  backptr: nil
  conclusion: (not cvc.a18)

  derived clause number: 773
  rule: resolution
  expr args: [tt, cvc.a5]
  clause args: [derived 411, derived 711]
  backptr: nil
  conclusion: (or cvc.a6 cvc.a7 cvc.a8)

  derived clause number: 774
  rule: resolution
  expr args: [ff, cvc.a14]
  clause args: [derived 405, derived 770]
  backptr: nil
  conclusion: (not cvc.a6)

  derived clause number: 775
  rule: resolution
  expr args: [tt, cvc.a6]
  clause args: [derived 773, derived 774]
  backptr: nil
  conclusion: (or cvc.a7 cvc.a8)

  derived clause number: 776
  rule: resolution
  expr args: [ff, cvc.a19]
  clause args: [derived 659, derived 504]
  backptr: nil
  conclusion: (or (not cvc.a11) cvc.a17 cvc.a18 cvc.a20)

  derived clause number: 777
  rule: resolution
  expr args: [tt, cvc.a17]
  clause args: [derived 776, derived 709]
  backptr: nil
  conclusion: (or (not cvc.a11) cvc.a18 cvc.a20)

  derived clause number: 778
  rule: resolution
  expr args: [tt, cvc.a18]
  clause args: [derived 777, derived 772]
  backptr: nil
  conclusion: (or (not cvc.a11) cvc.a20)

  derived clause number: 779
  rule: resolution
  expr args: [ff, cvc.a11]
  clause args: [derived 778, derived 419]
  backptr: nil
  conclusion: (or cvc.a20 cvc.a9 cvc.a10 cvc.a12)

  derived clause number: 780
  rule: resolution
  expr args: [tt, cvc.a10]
  clause args: [derived 779, derived 771]
  backptr: nil
  conclusion: (or cvc.a20 cvc.a9 cvc.a12)

  derived clause number: 781
  rule: resolution
  expr args: [tt, cvc.a9]
  clause args: [derived 780, derived 707]
  backptr: nil
  conclusion: (or cvc.a20 cvc.a12)

  derived clause number: 782
  rule: resolution
  expr args: [tt, cvc.a20]
  clause args: [derived 781, derived 404]
  backptr: nil
  conclusion: (or cvc.a12 (not cvc.a8))

  derived clause number: 783
  rule: resolution
  expr args: [tt, cvc.a12]
  clause args: [derived 782, derived 403]
  backptr: nil
  conclusion: (or (not cvc.a8) (not cvc.a8))

  derived clause number: 784
  rule: factoring
  expr args: []
  clause args: [derived 783]
  backptr: nil
  conclusion: (or (not cvc.a8))

  derived clause number: 785
  rule: resolution
  expr args: [tt, cvc.a8]
  clause args: [derived 775, derived 784]
  backptr: nil
  conclusion: cvc.a7

  derived clause number: 786
  rule: resolution
  expr args: [tt, cvc.a17]
  clause args: [derived 504, derived 709]
  backptr: nil
  conclusion: (or cvc.a18 cvc.a19 cvc.a20)

  derived clause number: 787
  rule: resolution
  expr args: [tt, cvc.a18]
  clause args: [derived 786, derived 772]
  backptr: nil
  conclusion: (or cvc.a19 cvc.a20)

  derived clause number: 788
  rule: resolution
  expr args: [ff, cvc.a7]
  clause args: [derived 537, derived 785]
  backptr: nil
  conclusion: (not cvc.a19)

  derived clause number: 789
  rule: resolution
  expr args: [tt, cvc.a19]
  clause args: [derived 787, derived 788]
  backptr: nil
  conclusion: cvc.a20

  derived clause number: 790
  rule: resolution
  expr args: [ff, cvc.a20]
  clause args: [derived 533, derived 789]
  backptr: nil
  conclusion: (not cvc.a12)

  derived clause number: 791
  rule: resolution
  expr args: [tt, cvc.a9]
  clause args: [derived 419, derived 707]
  backptr: nil
  conclusion: (or cvc.a10 cvc.a11 cvc.a12)

  derived clause number: 792
  rule: resolution
  expr args: [tt, cvc.a10]
  clause args: [derived 791, derived 771]
  backptr: nil
  conclusion: (or cvc.a11 cvc.a12)

  derived clause number: 793
  rule: resolution
  expr args: [ff, cvc.a7]
  clause args: [derived 409, derived 785]
  backptr: nil
  conclusion: (not cvc.a11)

  derived clause number: 794
  rule: resolution
  expr args: [tt, cvc.a11]
  clause args: [derived 792, derived 793]
  backptr: nil
  conclusion: cvc.a12

  derived clause number: 795
  rule: resolution
  expr args: [ff, cvc.a12]
  clause args: [derived 790, derived 794]
  backptr: nil
  conclusion: false

