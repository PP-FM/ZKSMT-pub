unsat
(! (let ((.cse93 (not a14)) (.cse87 (not a10)) (.cse102 (not a19)) (.cse110 (not a11)) (.cse107 (not a15)) (.cse81 (not a20)) (.cse78 (not a12))) (let ((.cse113 (not a7)) (.cse84 (not a8)) (.cse68 (not a6)) (.cse90 (not a18)) (.cse73 (not a16))) (let-proof ((.cse79 (not- .cse78)) (.cse82 (not- .cse81)) (.cse108 (not- .cse107)) (.cse111 (not- .cse110)) (.cse105 (not- .cse102)) (.cse88 (not- .cse87)) (.cse94 (not- .cse93))) (let ((.cse33 (not a13)) (.cse41 (not a9)) (.cse38 (not a17)) (.cse44 (not a5))) (let-proof ((.cse76 (not- .cse73)) (.cse91 (not- .cse90)) (.cse71 (not- .cse68)) (.cse85 (not- .cse84)) (.cse19 (! (let ((.cse148 (or a15 a16))) (res .cse148 (let ((.cse149 (or a14 .cse148))) (res .cse149 (let ((.cse150 (or a13 .cse149))) (res .cse150 (assume .cse150) (or- .cse150))) (or- .cse149))) (or- .cse148))) :proves (+ a16 + a15 + a14 + a13) :input)) (.cse29 (! (let ((.cse147 (or .cse87 .cse93))) (res .cse147 (assume .cse147) (res .cse93 (res .cse87 (or- .cse147) .cse88) .cse94))) :proves (- a10 - a14) :input)) (.cse9 (! (let ((.cse146 (or .cse110 .cse102))) (res .cse146 (assume .cse146) (res .cse102 (res .cse110 (or- .cse146) .cse111) .cse105))) :proves (- a11 - a19) :input)) (.cse23 (! (let ((.cse145 (or .cse107 .cse102))) (res .cse145 (assume .cse145) (res .cse102 (res .cse107 (or- .cse145) .cse108) .cse105))) :proves (- a15 - a19) :input)) (.cse5 (! (let ((.cse142 (or a11 a12))) (res .cse142 (let ((.cse143 (or a10 .cse142))) (res .cse143 (let ((.cse144 (or a9 .cse143))) (res .cse144 (assume .cse144) (or- .cse144))) (or- .cse143))) (or- .cse142))) :proves (+ a11 + a10 + a12 + a9) :input)) (.cse0 (! (let ((.cse139 (or a19 a20))) (res .cse139 (let ((.cse140 (or a18 .cse139))) (res .cse140 (let ((.cse141 (or a17 .cse140))) (res .cse141 (assume .cse141) (or- .cse141))) (or- .cse140))) (or- .cse139))) :proves (+ a18 + a19 + a20 + a17) :input)) (.cse100 (! (let ((.cse138 (or .cse78 .cse81))) (res .cse138 (assume .cse138) (res .cse81 (res .cse78 (or- .cse138) .cse79) .cse82))) :proves (- a12 - a20) :input)) (.cse114 (not- .cse113))) (let ((.cse34 (not a1))) (let-proof ((.cse30 (! (let ((.cse137 (or .cse113 .cse107))) (res .cse137 (assume .cse137) (res .cse107 (res .cse113 (or- .cse137) .cse114) .cse108))) :proves (- a7 - a15) :input)) (.cse12 (! (let ((.cse136 (or .cse113 .cse102))) (res .cse136 (assume .cse136) (res .cse102 (res .cse113 (or- .cse136) .cse114) .cse105))) :proves (- a7 - a19) :input)) (.cse13 (! (let ((.cse135 (or .cse113 .cse110))) (res .cse135 (assume .cse135) (res .cse110 (res .cse113 (or- .cse135) .cse114) .cse111))) :proves (- a7 - a11) :input)) (.cse20 (res a12 .cse5 (res a20 .cse0 .cse100))) (.cse25 (! (res a15 (res a11 (res a14 .cse19 (res a10 .cse5 .cse29)) .cse9) .cse23) :proves (+ a16 - a19 + a12 + a9 + a13) :rup)) (.cse24 (! (let ((.cse134 (or .cse110 .cse107))) (res .cse134 (assume .cse134) (res .cse107 (res .cse110 (or- .cse134) .cse111) .cse108))) :proves (- a11 - a15) :input)) (.cse21 (! (let ((.cse133 (or .cse84 .cse81))) (res .cse133 (assume .cse133) (res .cse81 (res .cse84 (or- .cse133) .cse85) .cse82))) :proves (- a8 - a20) :input)) (.cse27 (! (let ((.cse132 (or .cse68 .cse93))) (res .cse132 (assume .cse132) (res .cse93 (res .cse68 (or- .cse132) .cse71) .cse94))) :proves (- a6 - a14) :input)) (.cse22 (! (let ((.cse131 (or .cse84 .cse78))) (res .cse131 (assume .cse131) (res .cse78 (res .cse84 (or- .cse131) .cse85) .cse79))) :proves (- a8 - a12) :input)) (.cse2 (! (let ((.cse130 (or .cse68 .cse90))) (res .cse130 (assume .cse130) (res .cse90 (res .cse68 (or- .cse130) .cse71) .cse91))) :proves (- a6 - a18) :input)) (.cse10 (! (let ((.cse127 (or a7 a8))) (res .cse127 (let ((.cse128 (or a6 .cse127))) (res .cse128 (let ((.cse129 (or a5 .cse128))) (res .cse129 (assume .cse129) (or- .cse129))) (or- .cse128))) (or- .cse127))) :proves (+ a6 + a7 + a8 + a5) :input)) (.cse6 (! (let ((.cse126 (or .cse68 .cse87))) (res .cse126 (assume .cse126) (res .cse87 (res .cse68 (or- .cse126) .cse71) .cse88))) :proves (- a6 - a10) :input)) (.cse15 (! (let ((.cse125 (or .cse84 .cse73))) (res .cse125 (assume .cse125) (res .cse73 (res .cse84 (or- .cse125) .cse85) .cse76))) :proves (- a8 - a16) :input)) (.cse17 (! (let ((.cse124 (or .cse73 .cse81))) (res .cse124 (assume .cse124) (res .cse81 (res .cse73 (or- .cse124) .cse76) .cse82))) :proves (- a16 - a20) :input)) (.cse18 (! (let ((.cse123 (or .cse78 .cse73))) (res .cse123 (assume .cse123) (res .cse73 (res .cse78 (or- .cse123) .cse79) .cse76))) :proves (- a12 - a16) :input)) (.cse45 (not- .cse44)) (.cse46 (! (let ((.cse122 (or .cse87 .cse90))) (res .cse122 (assume .cse122) (res .cse90 (res .cse87 (or- .cse122) .cse88) .cse91))) :proves (- a10 - a18) :input)) (.cse26 (! (let ((.cse121 (or .cse93 .cse90))) (res .cse121 (assume .cse121) (res .cse90 (res .cse93 (or- .cse121) .cse94) .cse91))) :proves (- a14 - a18) :input)) (.cse39 (not- .cse38)) (.cse42 (not- .cse41)) (.cse36 (not- .cse33))) (let-proof ((.cse31 (! (let-proof ((.cse54 (! (let ((.cse120 (or .cse41 .cse33))) (res .cse120 (assume .cse120) (res .cse33 (res .cse41 (or- .cse120) .cse42) .cse36))) :proves (- a9 - a13) :input)) (.cse53 (! (let ((.cse119 (or .cse33 .cse38))) (res .cse119 (assume .cse119) (res .cse38 (res .cse33 (or- .cse119) .cse36) .cse39))) :proves (- a13 - a17) :input)) (.cse59 (! (let ((.cse118 (or .cse41 .cse38))) (res .cse118 (assume .cse118) (res .cse38 (res .cse41 (or- .cse118) .cse42) .cse39))) :proves (- a9 - a17) :input))) (let-proof ((.cse49 (res a17 .cse0 (res a9 (res a13 (res a10 .cse5 (res a14 .cse19 .cse29)) .cse53) .cse59))) (.cse50 (! (res a14 (res a10 (res a13 .cse19 (res a9 .cse5 .cse54)) .cse46) .cse26) :proves (- a18 + a16 + a12 + a15 + a11) :rup)) (.cse61 (! (let ((.cse117 (or .cse44 .cse33))) (res .cse117 (assume .cse117) (res .cse33 (res .cse44 (or- .cse117) .cse45) .cse36))) :proves (- a5 - a13) :input)) (.cse62 (! (let ((.cse116 (or .cse44 .cse41))) (res .cse116 (assume .cse116) (res .cse41 (res .cse44 (or- .cse116) .cse45) .cse42))) :proves (- a5 - a9) :input)) (.cse66 (! (let ((.cse115 (or .cse44 .cse38))) (res .cse115 (assume .cse115) (res .cse38 (res .cse44 (or- .cse115) .cse45) .cse39))) :proves (- a5 - a17) :input))) (res a3 (! (let ((.cse69 (not a2))) (let ((.cse74 (not a4))) (let-proof ((.cse70 (not- .cse69))) (let-proof ((.cse48 (! (let ((.cse95 (or a3 a4))) (res .cse95 (let ((.cse96 (or a2 .cse95))) (res .cse96 (let ((.cse97 (or a1 .cse96))) (res .cse97 (assume .cse97) (or- .cse97))) (or- .cse96))) (or- .cse95))) :proves (+ a4 + a1 + a2 + a3) :input)) (.cse65 (res a11 .cse5 .cse24)) (.cse63 (res a11 (res a15 (res a9 .cse5 (res a13 .cse19 .cse54)) .cse23) .cse9)) (.cse57 (! (let ((.cse92 (or .cse69 .cse93))) (res .cse92 (assume .cse92) (res .cse93 (res .cse69 (or- .cse92) .cse70) .cse94))) :proves (- a2 - a14) :input)) (.cse56 (! (let ((.cse89 (or .cse69 .cse90))) (res .cse89 (assume .cse89) (res .cse90 (res .cse69 (or- .cse89) .cse70) .cse91))) :proves (- a2 - a18) :input)) (.cse55 (! (let ((.cse86 (or .cse69 .cse87))) (res .cse86 (assume .cse86) (res .cse87 (res .cse69 (or- .cse86) .cse70) .cse88))) :proves (- a2 - a10) :input)) (.cse75 (not- .cse74))) (let-proof ((.cse58 (! (res a4 (res a12 (res a16 (res a20 (res a2 .cse48 (res a10 (res a18 (res a14 (res a19 (res a17 .cse0 (res a13 (res a9 (res a15 .cse19 .cse65) .cse59) .cse53)) (! .cse63 :proves (- a19 + a16 + a12 + a14 + a10) :rup)) .cse57) .cse56) .cse55)) .cse21) .cse15) .cse22) (! (let ((.cse83 (or .cse74 .cse84))) (res .cse83 (assume .cse83) (res .cse84 (res .cse74 (or- .cse83) .cse75) .cse85))) :proves (- a4 - a8) :input)) :proves (- a8 + a1 + a3) :rup))) (res a8 (let-proof ((.cse51 (! (let ((.cse80 (or .cse74 .cse81))) (res .cse80 (assume .cse80) (res .cse81 (res .cse74 (or- .cse80) .cse75) .cse82))) :proves (- a4 - a20) :input)) (.cse52 (! (let ((.cse77 (or .cse74 .cse78))) (res .cse77 (assume .cse77) (res .cse78 (res .cse74 (or- .cse77) .cse75) .cse79))) :proves (- a4 - a12) :input)) (.cse60 (! (let ((.cse72 (or .cse74 .cse73))) (res .cse72 (assume .cse72) (res .cse73 (res .cse74 (or- .cse72) .cse75) .cse76))) :proves (- a4 - a16) :input))) (let-proof ((.cse47 (! (let-proof ((.cse64 (! (let ((.cse67 (or .cse69 .cse68))) (res .cse67 (assume .cse67) (res .cse68 (res .cse69 (or- .cse67) .cse70) .cse71))) :proves (- a2 - a6) :input))) (res a16 (! (res a17 (res a6 (res a5 .cse10 (res a9 (res a13 (res a4 (res a2 .cse48 (res a10 (res a14 (res a18 (res a15 .cse19 (res a11 (res a19 .cse20 .cse23) .cse24)) .cse56) .cse57) .cse55)) (! (res a20 (res a12 (res a19 (res a18 .cse0 (res a10 (res a14 (res a11 .cse5 (res a15 .cse19 .cse24)) .cse26) .cse46)) .cse25) .cse52) .cse51) :proves (- a4 + a9 + a17 + a13 + a16) :rup)) .cse61) .cse62)) (! (res a14 (res a10 (res a2 (res a18 (res a4 .cse48 (res a12 (res a20 (res a19 .cse0 .cse63) .cse51) .cse52)) .cse2) .cse64) .cse6) .cse27) :proves (+ a1 - a6 + a16 + a17 + a3) :rup)) (! (res a5 (res a9 (res a13 (res a6 .cse10 (res a2 (res a10 (res a14 (res a4 .cse48 (res a15 .cse19 (res a12 .cse65 .cse52))) .cse27) .cse6) .cse64)) .cse53) .cse59) .cse66) :proves (- a17 + a8 + a3 + a16 + a7 + a1) :rup)) :proves (+ a1 + a8 + a7 + a16 + a3) :rup) (res a4 (res a12 (res a20 (res a2 .cse48 (res a18 (res a10 (res a6 (res a5 .cse10 (res a9 (res a17 (res a11 .cse5 (res a19 .cse0 .cse9)) .cse66) .cse62)) .cse64) .cse55) .cse56)) .cse17) .cse18) .cse60))) :proves (+ a8 + a1 + a7 + a3) :rup))) (res a7 .cse47 (res a11 (res a19 (res a16 (! (res a8 (res a7 .cse47 (res a11 (res a15 (res a19 (res a2 (res a4 .cse48 (res a12 (res a20 (res a18 .cse49 .cse50) .cse51) .cse52)) (! (res a14 (res a18 (res a10 (res a13 .cse19 (res a9 (res a17 .cse20 .cse53) .cse54)) .cse55) .cse56) .cse57) :proves (- a2 + a16 + a19 + a11 + a15) :rup)) .cse12) .cse30) .cse13)) .cse58) :proves (+ a16 + a1 + a3) :rup) (res a20 (res a12 (res a4 (res a2 .cse48 (res a10 (res a18 (res a9 .cse5 (res a17 .cse0 .cse59)) .cse56) .cse55)) .cse60) .cse18) .cse17)) .cse12) .cse13)))) .cse58)))))) :proves (+ a1 + a3) :rup) (! (let ((.cse103 (not a3))) (let-proof ((.cse104 (not- .cse103))) (res a7 (res a11 (res a15 (res a19 (let-proof ((.cse99 (! (res a12 (res a20 (res a8 (res a17 (res a18 .cse0 (res a10 (res a6 (res a9 .cse5 (res a5 .cse10 .cse62)) .cse2) .cse46)) (! (res a9 (res a5 (res a10 .cse5 (res a6 .cse10 .cse6)) .cse66) .cse59) :proves (- a17 + a12 + a8 + a7 + a11) :rup)) .cse15) .cse17) .cse18) :proves (+ a11 + a19 + a7 - a16) :rup))) (res a16 (let-proof ((.cse98 (res a5 .cse10 (res a13 .cse19 .cse61)))) (res a12 (! (res a16 (res a18 (res a8 (! (res a9 (res a10 .cse5 (res a6 (res a14 .cse98 .cse29) .cse6)) (! (res a5 (res a13 (res a6 .cse10 (res a14 .cse19 .cse27)) .cse54) .cse62) :proves (+ a8 - a9 + a7 + a16 + a15) :rup)) :proves (+ a7 + a16 + a12 + a15 + a8 + a11) :rup) (res a20 .cse49 .cse21)) .cse50) .cse99) :proves (+ a19 + a11 + a7 + a12 + a15) :rup) (res a8 (res a20 (res a17 (res a18 .cse0 (res a6 (res a14 .cse98 .cse26) .cse2)) (! (res a13 (res a5 (res a14 .cse19 (res a6 .cse10 .cse27)) .cse66) .cse53) :proves (- a17 + a16 + a8 + a7 + a15) :rup)) .cse100) .cse22))) .cse99)) (! (let ((.cse101 (or .cse103 .cse102))) (res .cse101 (assume .cse101) (res .cse102 (res .cse103 (or- .cse101) .cse104) .cse105))) :proves (- a3 - a19) :input)) (! (let ((.cse106 (or .cse103 .cse107))) (res .cse106 (assume .cse106) (res .cse107 (res .cse103 (or- .cse106) .cse104) .cse108))) :proves (- a3 - a15) :input)) (! (let ((.cse109 (or .cse103 .cse110))) (res .cse109 (assume .cse109) (res .cse110 (res .cse103 (or- .cse109) .cse104) .cse111))) :proves (- a3 - a11) :input)) (! (let ((.cse112 (or .cse103 .cse113))) (res .cse112 (assume .cse112) (res .cse113 (res .cse103 (or- .cse112) .cse104) .cse114))) :proves (- a3 - a7) :input)))) :proves (- a3) :rup)))) :proves (+ a1) :rup)) (.cse35 (not- .cse34))) (let-proof ((.cse11 (res a10 .cse5 (res a18 .cse0 .cse46))) (.cse16 (! (res a1 .cse31 (! (let ((.cse43 (or .cse34 .cse44))) (res .cse43 (assume .cse43) (res .cse44 (res .cse34 (or- .cse43) .cse35) .cse45))) :proves (- a1 - a5) :input)) :proves (- a5) :rup)) (.cse8 (! (res a1 .cse31 (! (let ((.cse40 (or .cse34 .cse41))) (res .cse40 (assume .cse40) (res .cse41 (res .cse34 (or- .cse40) .cse35) .cse42))) :proves (- a1 - a9) :input)) :proves (- a9) :rup)) (.cse4 (! (res a1 .cse31 (! (let ((.cse37 (or .cse34 .cse38))) (res .cse37 (assume .cse37) (res .cse38 (res .cse34 (or- .cse37) .cse35) .cse39))) :proves (- a1 - a17) :input)) :proves (- a17) :rup))) (let-proof ((.cse14 (! (res a17 (res a9 (let-proof ((.cse28 (! (res a1 .cse31 (! (let ((.cse32 (or .cse34 .cse33))) (res .cse32 (assume .cse32) (res .cse33 (res .cse34 (or- .cse32) .cse35) .cse36))) :proves (- a1 - a13) :input)) :proves (- a13) :rup))) (res a13 (res a7 (! (res a5 (res a17 (res a9 (res a13 (res a14 (res a15 .cse19 (res a11 (res a19 (res a8 (res a6 .cse10 (res a10 (res a18 .cse20 .cse2) .cse6)) (! (res a17 (res a9 (res a12 (res a20 .cse11 .cse21) .cse22) .cse8) .cse4) :proves (- a8 + a11 + a19) :rup)) .cse23) .cse24)) (! (res a5 (res a17 (res a9 (res a13 (res a6 (res a18 (res a8 .cse10 (res a20 (res a12 (res a19 .cse0 .cse25) .cse22) .cse21)) .cse26) .cse27) .cse28) .cse8) .cse4) .cse16) :proves (- a14 + a7 + a16) :rup)) .cse28) .cse8) .cse4) .cse16) :proves (+ a16 + a7) :rup) (res a19 (res a15 (res a11 (res a14 .cse19 (res a10 (res a18 .cse20 .cse26) .cse29)) .cse13) .cse30) .cse12)) .cse28)) .cse8) .cse4) :proves (+ a16) :rup))) (let-proof ((.cse7 (! (res a16 .cse14 .cse18) :proves (- a12) :rup)) (.cse3 (! (res a16 .cse14 .cse17) :proves (- a20) :rup))) (let-proof ((.cse1 (! (res a5 (res a8 (res a7 .cse10 (! (res a20 (res a17 (res a12 (res a9 (res a11 (res a19 .cse11 .cse12) .cse13) .cse8) .cse7) .cse4) .cse3) :proves (- a7) :rup)) (! (res a16 .cse14 .cse15) :proves (- a8) :rup)) .cse16) :proves (+ a6) :rup))) (res a19 (! (res a17 (res a20 (res a18 .cse0 (! (res a6 .cse1 .cse2) :proves (- a18) :rup)) .cse3) .cse4) :proves (+ a19) :rup) (res a11 (! (res a9 (res a12 (res a10 .cse5 (! (res a6 .cse1 .cse6) :proves (- a10) :rup)) .cse7) .cse8) :proves (+ a11) :rup) .cse9)))))))))))))) :proves () :rup)
